/* This file was generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2018 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

void *init_proc();
__int64 sub_4008D0();
// int printf(const char *format, ...);
// int puts(const char *s);
// __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD); weak
// void *malloc(size_t size);
// int __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end);
// int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr);
// int iswxdigit(wint_t wc);
// void free(void *ptr);
// int pthread_create(pthread_t *newthread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);
// const unsigned __int16 **__ctype_b_loc(void);
// int pthread_join(pthread_t th, void **thread_return);
// void __noreturn pthread_exit(void *retval);
// int wprintf(const wchar_t *format, ...);
// __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD); weak
// void srand(unsigned int seed);
// int pthread_mutex_lock(pthread_mutex_t *mutex);
// int rand(void);
// int pthread_mutex_destroy(pthread_mutex_t *mutex);
// int pthread_mutex_unlock(pthread_mutex_t *mutex);
// time_t time(time_t *timer);
// __int64 _gmon_start__(void); weak
// void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>);
signed __int64 deregister_tm_clones();
__int64 register_tm_clones();
signed __int64 _do_global_dtors_aux();
__int64 frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
__int64 helperBad();
int helperGood();
int CWE366_Race_Condition_Within_Thread__global_int_03_bad();
int good1();
int good2();
int CWE366_Race_Condition_Within_Thread__global_int_03_good();
_DWORD *__fastcall helperBad_0(_DWORD *a1);
int __fastcall helperGood_0(_DWORD *a1);
int CWE366_Race_Condition_Within_Thread__int_byref_10_bad();
int good1_0();
int good2_0();
int CWE366_Race_Condition_Within_Thread__int_byref_10_good();
__int64 helperBad_1();
int helperGood_1();
int CWE366_Race_Condition_Within_Thread__global_int_14_bad();
int good1_1();
int good2_1();
int CWE366_Race_Condition_Within_Thread__global_int_14_good();
__int64 helperBad_2();
int helperGood_2();
int CWE366_Race_Condition_Within_Thread__global_int_01_bad();
int good1_2();
int CWE366_Race_Condition_Within_Thread__global_int_01_good();
__int64 helperBad_3();
int helperGood_3();
int CWE366_Race_Condition_Within_Thread__global_int_18_bad();
int good1_3();
int CWE366_Race_Condition_Within_Thread__global_int_18_good();
__int64 helperBad_4();
int helperGood_4();
int CWE366_Race_Condition_Within_Thread__global_int_09_bad();
int good1_4();
int good2_2();
int CWE366_Race_Condition_Within_Thread__global_int_09_good();
_DWORD *__fastcall helperBad_5(_DWORD *a1);
int __fastcall helperGood_5(_DWORD *a1);
int CWE366_Race_Condition_Within_Thread__int_byref_14_bad();
int good1_5();
int good2_3();
int CWE366_Race_Condition_Within_Thread__int_byref_14_good();
_DWORD *__fastcall helperBad_6(_DWORD *a1);
int __fastcall helperGood_6(_DWORD *a1);
int CWE366_Race_Condition_Within_Thread__int_byref_01_bad();
int good1_6();
int CWE366_Race_Condition_Within_Thread__int_byref_01_good();
_DWORD *__fastcall helperBad_7(_DWORD *a1);
int __fastcall helperGood_7(_DWORD *a1);
int CWE366_Race_Condition_Within_Thread__int_byref_18_bad();
int good1_7();
int CWE366_Race_Condition_Within_Thread__int_byref_18_good();
_DWORD *__fastcall helperBad_8(_DWORD *a1);
int __fastcall helperGood_8(_DWORD *a1);
int CWE366_Race_Condition_Within_Thread__int_byref_06_bad();
int good1_8();
int good2_4();
int CWE366_Race_Condition_Within_Thread__int_byref_06_good();
__int64 helperBad_9();
int helperGood_9();
int CWE366_Race_Condition_Within_Thread__global_int_12_bad();
int good1_9();
int CWE366_Race_Condition_Within_Thread__global_int_12_good();
_DWORD *__fastcall helperBad_10(_DWORD *a1);
int __fastcall helperGood_10(_DWORD *a1);
int CWE366_Race_Condition_Within_Thread__int_byref_07_bad();
int good1_10();
int good2_5();
int CWE366_Race_Condition_Within_Thread__int_byref_07_good();
_DWORD *__fastcall helperBad_11(_DWORD *a1);
int __fastcall helperGood_11(_DWORD *a1);
int CWE366_Race_Condition_Within_Thread__int_byref_12_bad();
int good1_11();
int CWE366_Race_Condition_Within_Thread__int_byref_12_good();
__int64 helperBad_12();
int helperGood_12();
int CWE366_Race_Condition_Within_Thread__global_int_06_bad();
int good1_12();
int good2_6();
int CWE366_Race_Condition_Within_Thread__global_int_06_good();
__int64 helperBad_13();
int helperGood_13();
int CWE366_Race_Condition_Within_Thread__global_int_15_bad();
int good1_13();
int good2_7();
int CWE366_Race_Condition_Within_Thread__global_int_15_good();
__int64 helperBad_14();
int helperGood_14();
int CWE366_Race_Condition_Within_Thread__global_int_05_bad();
int good1_14();
int good2_8();
int CWE366_Race_Condition_Within_Thread__global_int_05_good();
_DWORD *__fastcall helperBad_15(_DWORD *a1);
int __fastcall helperGood_15(_DWORD *a1);
__int64 staticReturnsTrue();
__int64 staticReturnsFalse();
int CWE366_Race_Condition_Within_Thread__int_byref_08_bad();
int good1_15();
int good2_9();
int CWE366_Race_Condition_Within_Thread__int_byref_08_good();
__int64 helperBad_16();
int helperGood_16();
int CWE366_Race_Condition_Within_Thread__global_int_13_bad();
int good1_16();
int good2_10();
int CWE366_Race_Condition_Within_Thread__global_int_13_good();
_DWORD *__fastcall helperBad_17(_DWORD *a1);
int __fastcall helperGood_17(_DWORD *a1);
int CWE366_Race_Condition_Within_Thread__int_byref_05_bad();
int good1_17();
int good2_11();
int CWE366_Race_Condition_Within_Thread__int_byref_05_good();
__int64 helperBad_18();
int helperGood_18();
void CWE366_Race_Condition_Within_Thread__global_int_17_bad();
void good1_18();
void CWE366_Race_Condition_Within_Thread__global_int_17_good();
_DWORD *__fastcall helperBad_19(_DWORD *a1);
int __fastcall helperGood_19(_DWORD *a1);
int CWE366_Race_Condition_Within_Thread__int_byref_09_bad();
int good1_19();
int good2_12();
int CWE366_Race_Condition_Within_Thread__int_byref_09_good();
__int64 helperBad_20();
int helperGood_20();
__int64 staticReturnsTrue_0();
__int64 staticReturnsFalse_0();
int CWE366_Race_Condition_Within_Thread__global_int_08_bad();
int good1_20();
int good2_13();
int CWE366_Race_Condition_Within_Thread__global_int_08_good();
__int64 helperBad_21();
int helperGood_21();
int CWE366_Race_Condition_Within_Thread__global_int_07_bad();
int good1_21();
int good2_14();
int CWE366_Race_Condition_Within_Thread__global_int_07_good();
_DWORD *__fastcall helperBad_22(_DWORD *a1);
int __fastcall helperGood_22(_DWORD *a1);
int CWE366_Race_Condition_Within_Thread__int_byref_13_bad();
int good1_22();
int good2_15();
int CWE366_Race_Condition_Within_Thread__int_byref_13_good();
__int64 helperBad_23();
int helperGood_23();
int CWE366_Race_Condition_Within_Thread__global_int_11_bad();
int good1_23();
int good2_16();
int CWE366_Race_Condition_Within_Thread__global_int_11_good();
__int64 helperBad_24();
int helperGood_24();
int CWE366_Race_Condition_Within_Thread__global_int_02_bad();
int good1_24();
int good2_17();
int CWE366_Race_Condition_Within_Thread__global_int_02_good();
_DWORD *__fastcall helperBad_25(_DWORD *a1);
int __fastcall helperGood_25(_DWORD *a1);
void CWE366_Race_Condition_Within_Thread__int_byref_17_bad();
void good1_25();
void CWE366_Race_Condition_Within_Thread__int_byref_17_good();
_DWORD *__fastcall helperBad_26(_DWORD *a1);
int __fastcall helperGood_26(_DWORD *a1);
int CWE366_Race_Condition_Within_Thread__int_byref_04_bad();
int good1_26();
int good2_18();
int CWE366_Race_Condition_Within_Thread__int_byref_04_good();
__int64 helperBad_27();
int helperGood_27();
int CWE366_Race_Condition_Within_Thread__global_int_04_bad();
int good1_27();
int good2_19();
int CWE366_Race_Condition_Within_Thread__global_int_04_good();
_DWORD *__fastcall helperBad_28(_DWORD *a1);
int __fastcall helperGood_28(_DWORD *a1);
int CWE366_Race_Condition_Within_Thread__int_byref_11_bad();
int good1_28();
int good2_20();
int CWE366_Race_Condition_Within_Thread__int_byref_11_good();
_DWORD *__fastcall helperBad_29(_DWORD *a1);
int __fastcall helperGood_29(_DWORD *a1);
int CWE366_Race_Condition_Within_Thread__int_byref_02_bad();
int good1_29();
int good2_21();
int CWE366_Race_Condition_Within_Thread__int_byref_02_good();
__int64 helperBad_30();
int helperGood_30();
int CWE366_Race_Condition_Within_Thread__global_int_16_bad();
int good1_30();
int CWE366_Race_Condition_Within_Thread__global_int_16_good();
_DWORD *__fastcall helperBad_31(_DWORD *a1);
int __fastcall helperGood_31(_DWORD *a1);
int CWE366_Race_Condition_Within_Thread__int_byref_15_bad();
int good1_31();
int good2_22();
int CWE366_Race_Condition_Within_Thread__int_byref_15_good();
__int64 helperBad_32();
int helperGood_32();
int CWE366_Race_Condition_Within_Thread__global_int_10_bad();
int good1_32();
int good2_23();
int CWE366_Race_Condition_Within_Thread__global_int_10_good();
_DWORD *__fastcall helperBad_33(_DWORD *a1);
int __fastcall helperGood_33(_DWORD *a1);
int CWE366_Race_Condition_Within_Thread__int_byref_16_bad();
int good1_33();
int CWE366_Race_Condition_Within_Thread__int_byref_16_good();
_DWORD *__fastcall helperBad_34(_DWORD *a1);
int __fastcall helperGood_34(_DWORD *a1);
int CWE366_Race_Condition_Within_Thread__int_byref_03_bad();
int good1_34();
int good2_24();
int CWE366_Race_Condition_Within_Thread__int_byref_03_good();
int __fastcall printLine(const char *a1);
int __fastcall printWLine(__int64 a1);
int __fastcall printIntLine(unsigned int a1);
int __fastcall printShortLine(__int16 a1);
int __fastcall printFloatLine(float a1);
int __fastcall printLongLine(__int64 a1);
int __fastcall printLongLongLine(__int64 a1);
int __fastcall printSizeTLine(__int64 a1);
int __fastcall printHexCharLine(char a1);
int __fastcall printWcharLine(int a1);
int __fastcall printUnsignedLine(unsigned int a1);
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1);
int __fastcall printDoubleLine(double a1);
int __fastcall printStructLine(unsigned int *a1);
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2);
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3);
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3);
__int64 globalReturnsTrue();
__int64 globalReturnsFalse();
__int64 globalReturnsTrueOrFalse();
void good1_35();
void good2_25();
void good3();
void good4();
void good5();
void good6();
void good7();
void good8();
void good9();
void bad1();
void bad2();
void bad3();
void bad4();
void bad5();
void bad6();
void bad7();
void bad8();
void bad9();
void __fastcall __noreturn internal_start(void *a1);
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3);
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1);
__int64 __fastcall stdThreadDestroy(void *a1);
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1);
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1);
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1);
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1);
void _libc_csu_init(void); // idb
void _libc_csu_fini(void); // idb
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

char s[3] = { '\0', '\0', '\0' }; // idb
int GLOBAL_CONST_TRUE = 1; // weak
int GLOBAL_CONST_FALSE = 0; // weak
int GLOBAL_CONST_FIVE = 5; // weak
__int64 (__fastcall *_frame_dummy_init_array_entry[2])() = { &frame_dummy, &_do_global_dtors_aux }; // weak
__int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)() = &_do_global_dtors_aux; // weak
__int64 (*qword_60D010)(void) = NULL; // weak
int staticFive = 5; // weak
int staticTrue = 1; // weak
int staticTrue_0 = 1; // weak
int staticFive_0 = 5; // weak
int globalTrue = 1; // weak
int globalFive = 5; // weak
char completed_6355; // weak
_UNKNOWN unk_60D0DF; // weak
int gBadInt; // weak
int gGoodInt; // weak
__int64 gGoodLock; // weak
__int64 gGoodLock_0; // weak
int gBadInt_0; // weak
int gGoodInt_0; // weak
__int64 gGoodLock_1; // weak
int gBadInt_1; // weak
int gGoodInt_1; // weak
__int64 gGoodLock_2; // weak
int gBadInt_2; // weak
int gGoodInt_2; // weak
__int64 gGoodLock_3; // weak
int gBadInt_3; // weak
int gGoodInt_3; // weak
__int64 gGoodLock_4; // weak
__int64 gGoodLock_5; // weak
__int64 gGoodLock_6; // weak
__int64 gGoodLock_7; // weak
__int64 gGoodLock_8; // weak
int gBadInt_4; // weak
int gGoodInt_4; // weak
__int64 gGoodLock_9; // weak
__int64 gGoodLock_10; // weak
__int64 gGoodLock_11; // weak
int gBadInt_5; // weak
int gGoodInt_5; // weak
__int64 gGoodLock_12; // weak
int gBadInt_6; // weak
int gGoodInt_6; // weak
__int64 gGoodLock_13; // weak
int gBadInt_7; // weak
int gGoodInt_7; // weak
__int64 gGoodLock_14; // weak
int staticFalse; // weak
__int64 gGoodLock_15; // weak
int gBadInt_8; // weak
int gGoodInt_8; // weak
__int64 gGoodLock_16; // weak
__int64 gGoodLock_17; // weak
int staticFalse_0; // weak
int gBadInt_9; // weak
int gGoodInt_9; // weak
__int64 gGoodLock_18; // weak
__int64 gGoodLock_19; // weak
int gBadInt_10; // weak
int gGoodInt_10; // weak
__int64 gGoodLock_20; // weak
int gBadInt_11; // weak
int gGoodInt_11; // weak
__int64 gGoodLock_21; // weak
__int64 gGoodLock_22; // weak
int gBadInt_12; // weak
int gGoodInt_12; // weak
__int64 gGoodLock_23; // weak
int gBadInt_13; // weak
int gGoodInt_13; // weak
__int64 gGoodLock_24; // weak
__int64 gGoodLock_25; // weak
__int64 gGoodLock_26; // weak
int gBadInt_14; // weak
int gGoodInt_14; // weak
__int64 gGoodLock_27; // weak
__int64 gGoodLock_28; // weak
__int64 gGoodLock_29; // weak
int gBadInt_15; // weak
int gGoodInt_15; // weak
__int64 gGoodLock_30; // weak
__int64 gGoodLock_31; // weak
int gBadInt_16; // weak
int gGoodInt_16; // weak
__int64 gGoodLock_32; // weak
__int64 gGoodLock_33; // weak
__int64 gGoodLock_34; // weak
int globalFalse; // weak
int globalArgc; // weak
__int64 globalArgv; // weak
// extern _UNKNOWN __gmon_start__; weak


//----- (00000000004008A8) ----------------------------------------------------
void *init_proc()
{
  void *result; // rax

  result = &__gmon_start__;
  if ( &__gmon_start__ )
    result = (void *)_gmon_start__();
  return result;
}
// 400A20: using guessed type __int64 _gmon_start__(void);

//----- (00000000004008D0) ----------------------------------------------------
__int64 sub_4008D0()
{
  return qword_60D010();
}
// 60D010: using guessed type __int64 (*qword_60D010)(void);

//----- (0000000000400A30) ----------------------------------------------------
// positive sp value has been detected, the output may be wrong!
void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>)
{
  int v2; // esi
  int v3; // [rsp-8h] [rbp-8h]
  __int64 _0; // [rsp+0h] [rbp+0h]

  v2 = v3;
  *(_QWORD *)&v3 = a1;
  __libc_start_main(
    (int (__fastcall *)(int, char **, char **))main,
    v2,
    (char **)&_0,
    _libc_csu_init,
    _libc_csu_fini,
    a2,
    &v3);
  __halt();
}
// 400A36: positive sp value 8 has been found

//----- (0000000000400A60) ----------------------------------------------------
signed __int64 deregister_tm_clones()
{
  signed __int64 result; // rax

  result = &unk_60D0DF - (_UNKNOWN *)&completed_6355;
  if ( (unsigned __int64)(&unk_60D0DF - (_UNKNOWN *)&completed_6355) > 0xE )
    result = 0LL;
  return result;
}
// 60D0D8: using guessed type char completed_6355;

//----- (0000000000400A90) ----------------------------------------------------
__int64 register_tm_clones()
{
  return 0LL;
}

//----- (0000000000400AD0) ----------------------------------------------------
signed __int64 _do_global_dtors_aux()
{
  signed __int64 result; // rax

  if ( !completed_6355 )
  {
    result = deregister_tm_clones();
    completed_6355 = 1;
  }
  return result;
}
// 60D0D8: using guessed type char completed_6355;

//----- (0000000000400AF0) ----------------------------------------------------
__int64 frame_dummy()
{
  return register_tm_clones();
}
// 400AF0: could not find valid save-restore pair for rbp

//----- (0000000000400B1D) ----------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  unsigned int v3; // eax

  v3 = time(0LL);
  srand(v3);
  globalArgc = argc;
  globalArgv = (__int64)argv;
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_14_good();");
  CWE366_Race_Condition_Within_Thread__int_byref_14_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_08_good();");
  CWE366_Race_Condition_Within_Thread__global_int_08_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_02_good();");
  CWE366_Race_Condition_Within_Thread__int_byref_02_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_03_good();");
  CWE366_Race_Condition_Within_Thread__global_int_03_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_04_good();");
  CWE366_Race_Condition_Within_Thread__global_int_04_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_10_good();");
  CWE366_Race_Condition_Within_Thread__int_byref_10_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_16_good();");
  CWE366_Race_Condition_Within_Thread__int_byref_16_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_07_good();");
  CWE366_Race_Condition_Within_Thread__global_int_07_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_01_good();");
  CWE366_Race_Condition_Within_Thread__global_int_01_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_03_good();");
  CWE366_Race_Condition_Within_Thread__int_byref_03_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_13_good();");
  CWE366_Race_Condition_Within_Thread__global_int_13_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_11_good();");
  CWE366_Race_Condition_Within_Thread__int_byref_11_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_10_good();");
  CWE366_Race_Condition_Within_Thread__global_int_10_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_06_good();");
  CWE366_Race_Condition_Within_Thread__int_byref_06_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_09_good();");
  CWE366_Race_Condition_Within_Thread__global_int_09_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_01_good();");
  CWE366_Race_Condition_Within_Thread__int_byref_01_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_17_good();");
  CWE366_Race_Condition_Within_Thread__int_byref_17_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_13_good();");
  CWE366_Race_Condition_Within_Thread__int_byref_13_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_06_good();");
  CWE366_Race_Condition_Within_Thread__global_int_06_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_12_good();");
  CWE366_Race_Condition_Within_Thread__global_int_12_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_08_good();");
  CWE366_Race_Condition_Within_Thread__int_byref_08_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_12_good();");
  CWE366_Race_Condition_Within_Thread__int_byref_12_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_18_good();");
  CWE366_Race_Condition_Within_Thread__global_int_18_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_15_good();");
  CWE366_Race_Condition_Within_Thread__global_int_15_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_17_good();");
  CWE366_Race_Condition_Within_Thread__global_int_17_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_07_good();");
  CWE366_Race_Condition_Within_Thread__int_byref_07_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_02_good();");
  CWE366_Race_Condition_Within_Thread__global_int_02_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_05_good();");
  CWE366_Race_Condition_Within_Thread__int_byref_05_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_11_good();");
  CWE366_Race_Condition_Within_Thread__global_int_11_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_14_good();");
  CWE366_Race_Condition_Within_Thread__global_int_14_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_05_good();");
  CWE366_Race_Condition_Within_Thread__global_int_05_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_04_good();");
  CWE366_Race_Condition_Within_Thread__int_byref_04_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_15_good();");
  CWE366_Race_Condition_Within_Thread__int_byref_15_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_09_good();");
  CWE366_Race_Condition_Within_Thread__int_byref_09_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_16_good();");
  CWE366_Race_Condition_Within_Thread__global_int_16_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_18_good();");
  CWE366_Race_Condition_Within_Thread__int_byref_18_good();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_14_bad();");
  CWE366_Race_Condition_Within_Thread__int_byref_14_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_08_bad();");
  CWE366_Race_Condition_Within_Thread__global_int_08_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_02_bad();");
  CWE366_Race_Condition_Within_Thread__int_byref_02_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_03_bad();");
  CWE366_Race_Condition_Within_Thread__global_int_03_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_04_bad();");
  CWE366_Race_Condition_Within_Thread__global_int_04_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_10_bad();");
  CWE366_Race_Condition_Within_Thread__int_byref_10_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_16_bad();");
  CWE366_Race_Condition_Within_Thread__int_byref_16_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_07_bad();");
  CWE366_Race_Condition_Within_Thread__global_int_07_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_01_bad();");
  CWE366_Race_Condition_Within_Thread__global_int_01_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_03_bad();");
  CWE366_Race_Condition_Within_Thread__int_byref_03_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_13_bad();");
  CWE366_Race_Condition_Within_Thread__global_int_13_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_11_bad();");
  CWE366_Race_Condition_Within_Thread__int_byref_11_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_10_bad();");
  CWE366_Race_Condition_Within_Thread__global_int_10_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_06_bad();");
  CWE366_Race_Condition_Within_Thread__int_byref_06_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_09_bad();");
  CWE366_Race_Condition_Within_Thread__global_int_09_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_01_bad();");
  CWE366_Race_Condition_Within_Thread__int_byref_01_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_17_bad();");
  CWE366_Race_Condition_Within_Thread__int_byref_17_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_13_bad();");
  CWE366_Race_Condition_Within_Thread__int_byref_13_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_06_bad();");
  CWE366_Race_Condition_Within_Thread__global_int_06_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_12_bad();");
  CWE366_Race_Condition_Within_Thread__global_int_12_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_08_bad();");
  CWE366_Race_Condition_Within_Thread__int_byref_08_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_12_bad();");
  CWE366_Race_Condition_Within_Thread__int_byref_12_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_18_bad();");
  CWE366_Race_Condition_Within_Thread__global_int_18_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_15_bad();");
  CWE366_Race_Condition_Within_Thread__global_int_15_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_17_bad();");
  CWE366_Race_Condition_Within_Thread__global_int_17_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_07_bad();");
  CWE366_Race_Condition_Within_Thread__int_byref_07_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_02_bad();");
  CWE366_Race_Condition_Within_Thread__global_int_02_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_05_bad();");
  CWE366_Race_Condition_Within_Thread__int_byref_05_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_11_bad();");
  CWE366_Race_Condition_Within_Thread__global_int_11_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_14_bad();");
  CWE366_Race_Condition_Within_Thread__global_int_14_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_05_bad();");
  CWE366_Race_Condition_Within_Thread__global_int_05_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_04_bad();");
  CWE366_Race_Condition_Within_Thread__int_byref_04_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_15_bad();");
  CWE366_Race_Condition_Within_Thread__int_byref_15_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_09_bad();");
  CWE366_Race_Condition_Within_Thread__int_byref_09_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__global_int_16_bad();");
  CWE366_Race_Condition_Within_Thread__global_int_16_bad();
  printLine("Calling CWE366_Race_Condition_Within_Thread__int_byref_18_bad();");
  CWE366_Race_Condition_Within_Thread__int_byref_18_bad();
  return 0;
}
// 60D2A4: using guessed type int globalArgc;
// 60D2A8: using guessed type __int64 globalArgv;

//----- (00000000004010F8) ----------------------------------------------------
__int64 helperBad()
{
  __int64 result; // rax
  int i; // [rsp+14h] [rbp-4h]

  for ( i = 0; i <= 999999; ++i )
    result = (unsigned int)++gBadInt;
  return result;
}
// 60D0E0: using guessed type int gBadInt;

//----- (0000000000401127) ----------------------------------------------------
int helperGood()
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock);
  for ( i = 0; i <= 999999; ++i )
    ++gGoodInt;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock);
}
// 60D0E4: using guessed type int gGoodInt;
// 60D0E8: using guessed type __int64 gGoodLock;

//----- (0000000000401178) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_03_bad()
{
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  gBadInt = 0;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad, 0LL, &v2) )
    v2 = 0LL;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad, 0LL, &v1) )
    v1 = 0LL;
  if ( v2 && stdThreadJoin((pthread_t *)v2) )
    stdThreadDestroy(v2);
  if ( v1 && stdThreadJoin((pthread_t *)v1) )
    stdThreadDestroy(v1);
  return printIntLine(gBadInt);
}
// 60D0E0: using guessed type int gBadInt;

//----- (0000000000401237) ----------------------------------------------------
int good1()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock);
    result = printIntLine(gGoodInt);
  }
  return result;
}
// 60D0E4: using guessed type int gGoodInt;
// 60D0E8: using guessed type __int64 gGoodLock;

//----- (000000000040130D) ----------------------------------------------------
int good2()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock);
    result = printIntLine(gGoodInt);
  }
  return result;
}
// 60D0E4: using guessed type int gGoodInt;
// 60D0E8: using guessed type __int64 gGoodLock;

//----- (00000000004013E3) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_03_good()
{
  good1();
  return good2();
}

//----- (00000000004013FD) ----------------------------------------------------
_DWORD *__fastcall helperBad_0(_DWORD *a1)
{
  _DWORD *result; // rax
  int i; // [rsp+14h] [rbp-4h]

  result = a1;
  for ( i = 0; i <= 999999; ++i )
  {
    result = a1;
    ++*a1;
  }
  return result;
}

//----- (0000000000401434) ----------------------------------------------------
int __fastcall helperGood_0(_DWORD *a1)
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_0);
  for ( i = 0; i <= 999999; ++i )
    ++*a1;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_0);
}
// 60D0F0: using guessed type __int64 gGoodLock_0;

//----- (000000000040148D) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_10_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  result = globalTrue;
  if ( globalTrue )
  {
    v3 = 0LL;
    v2 = 0LL;
    v1 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_0, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_0, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    result = printIntLine(v1);
  }
  return result;
}
// 60D0CC: using guessed type int globalTrue;

//----- (0000000000401552) ----------------------------------------------------
int good1_0()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  if ( globalFalse )
    return printLine("Benign, fixed string");
  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_0);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_0, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_0, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_0);
    result = printIntLine(v1);
  }
  return result;
}
// 60D0F0: using guessed type __int64 gGoodLock_0;
// 60D2A0: using guessed type int globalFalse;

//----- (0000000000401643) ----------------------------------------------------
int good2_0()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  result = globalTrue;
  if ( globalTrue )
  {
    v3 = 0LL;
    v2 = 0LL;
    v1 = 0;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_0);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_0, (__int64)&v1, &v3) )
        v3 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_0, (__int64)&v1, &v2) )
        v2 = 0LL;
      if ( v3 && stdThreadJoin((pthread_t *)v3) )
        stdThreadDestroy(v3);
      if ( v2 )
      {
        if ( stdThreadJoin((pthread_t *)v2) )
          stdThreadDestroy(v2);
      }
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_0);
      result = printIntLine(v1);
    }
  }
  return result;
}
// 60D0CC: using guessed type int globalTrue;
// 60D0F0: using guessed type __int64 gGoodLock_0;

//----- (0000000000401729) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_10_good()
{
  good1_0();
  return good2_0();
}

//----- (0000000000401743) ----------------------------------------------------
__int64 helperBad_1()
{
  __int64 result; // rax
  int i; // [rsp+14h] [rbp-4h]

  for ( i = 0; i <= 999999; ++i )
    result = (unsigned int)++gBadInt_0;
  return result;
}
// 60D0F8: using guessed type int gBadInt_0;

//----- (0000000000401772) ----------------------------------------------------
int helperGood_1()
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_1);
  for ( i = 0; i <= 999999; ++i )
    ++gGoodInt_0;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_1);
}
// 60D0FC: using guessed type int gGoodInt_0;
// 60D100: using guessed type __int64 gGoodLock_1;

//----- (00000000004017C3) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_14_bad()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  result = globalFive;
  if ( globalFive == 5 )
  {
    v2 = 0LL;
    v1 = 0LL;
    gBadInt_0 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_1, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_1, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    result = printIntLine(gBadInt_0);
  }
  return result;
}
// 60D0D0: using guessed type int globalFive;
// 60D0F8: using guessed type int gBadInt_0;

//----- (0000000000401891) ----------------------------------------------------
int good1_1()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_1);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_1, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_1, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_1);
    result = printIntLine(gGoodInt_0);
  }
  return result;
}
// 60D0D0: using guessed type int globalFive;
// 60D0FC: using guessed type int gGoodInt_0;
// 60D100: using guessed type __int64 gGoodLock_1;

//----- (0000000000401981) ----------------------------------------------------
int good2_1()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  result = globalFive;
  if ( globalFive == 5 )
  {
    v2 = 0LL;
    v1 = 0LL;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_1);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_1, 0LL, &v2) )
        v2 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_1, 0LL, &v1) )
        v1 = 0LL;
      if ( v2 && stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
      if ( v1 )
      {
        if ( stdThreadJoin((pthread_t *)v1) )
          stdThreadDestroy(v1);
      }
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_1);
      result = printIntLine(gGoodInt_0);
    }
  }
  return result;
}
// 60D0D0: using guessed type int globalFive;
// 60D0FC: using guessed type int gGoodInt_0;
// 60D100: using guessed type __int64 gGoodLock_1;

//----- (0000000000401A66) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_14_good()
{
  good1_1();
  return good2_1();
}

//----- (0000000000401A80) ----------------------------------------------------
__int64 helperBad_2()
{
  __int64 result; // rax
  int i; // [rsp+14h] [rbp-4h]

  for ( i = 0; i <= 999999; ++i )
    result = (unsigned int)++gBadInt_1;
  return result;
}
// 60D108: using guessed type int gBadInt_1;

//----- (0000000000401AAF) ----------------------------------------------------
int helperGood_2()
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_2);
  for ( i = 0; i <= 999999; ++i )
    ++gGoodInt_1;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_2);
}
// 60D10C: using guessed type int gGoodInt_1;
// 60D110: using guessed type __int64 gGoodLock_2;

//----- (0000000000401B00) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_01_bad()
{
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  gBadInt_1 = 0;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_2, 0LL, &v2) )
    v2 = 0LL;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_2, 0LL, &v1) )
    v1 = 0LL;
  if ( v2 && stdThreadJoin((pthread_t *)v2) )
    stdThreadDestroy(v2);
  if ( v1 && stdThreadJoin((pthread_t *)v1) )
    stdThreadDestroy(v1);
  return printIntLine(gBadInt_1);
}
// 60D108: using guessed type int gBadInt_1;

//----- (0000000000401BBF) ----------------------------------------------------
int good1_2()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_2);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_2, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_2, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_2);
    result = printIntLine(gGoodInt_1);
  }
  return result;
}
// 60D10C: using guessed type int gGoodInt_1;
// 60D110: using guessed type __int64 gGoodLock_2;

//----- (0000000000401C95) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_01_good()
{
  return good1_2();
}

//----- (0000000000401CA5) ----------------------------------------------------
__int64 helperBad_3()
{
  __int64 result; // rax
  int i; // [rsp+14h] [rbp-4h]

  for ( i = 0; i <= 999999; ++i )
    result = (unsigned int)++gBadInt_2;
  return result;
}
// 60D118: using guessed type int gBadInt_2;

//----- (0000000000401CD4) ----------------------------------------------------
int helperGood_3()
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_3);
  for ( i = 0; i <= 999999; ++i )
    ++gGoodInt_2;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_3);
}
// 60D11C: using guessed type int gGoodInt_2;
// 60D120: using guessed type __int64 gGoodLock_3;

//----- (0000000000401D25) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_18_bad()
{
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  gBadInt_2 = 0;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_3, 0LL, &v2) )
    v2 = 0LL;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_3, 0LL, &v1) )
    v1 = 0LL;
  if ( v2 && stdThreadJoin((pthread_t *)v2) )
    stdThreadDestroy(v2);
  if ( v1 && stdThreadJoin((pthread_t *)v1) )
    stdThreadDestroy(v1);
  return printIntLine(gBadInt_2);
}
// 60D118: using guessed type int gBadInt_2;

//----- (0000000000401DE5) ----------------------------------------------------
int good1_3()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_3);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_3, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_3, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_3);
    result = printIntLine(gGoodInt_2);
  }
  return result;
}
// 60D11C: using guessed type int gGoodInt_2;
// 60D120: using guessed type __int64 gGoodLock_3;

//----- (0000000000401EBC) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_18_good()
{
  return good1_3();
}

//----- (0000000000401ECC) ----------------------------------------------------
__int64 helperBad_4()
{
  __int64 result; // rax
  int i; // [rsp+14h] [rbp-4h]

  for ( i = 0; i <= 999999; ++i )
    result = (unsigned int)++gBadInt_3;
  return result;
}
// 60D128: using guessed type int gBadInt_3;

//----- (0000000000401EFB) ----------------------------------------------------
int helperGood_4()
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_4);
  for ( i = 0; i <= 999999; ++i )
    ++gGoodInt_3;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_4);
}
// 60D12C: using guessed type int gGoodInt_3;
// 60D130: using guessed type __int64 gGoodLock_4;

//----- (0000000000401F4C) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_09_bad()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v2 = 0LL;
    v1 = 0LL;
    gBadInt_3 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_4, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_4, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    result = printIntLine(gBadInt_3);
  }
  return result;
}
// 409BD4: using guessed type int GLOBAL_CONST_TRUE;
// 60D128: using guessed type int gBadInt_3;

//----- (0000000000402019) ----------------------------------------------------
int good1_4()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_4);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_4, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_4, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_4);
    result = printIntLine(gGoodInt_3);
  }
  return result;
}
// 409BD8: using guessed type int GLOBAL_CONST_FALSE;
// 60D12C: using guessed type int gGoodInt_3;
// 60D130: using guessed type __int64 gGoodLock_4;

//----- (0000000000402108) ----------------------------------------------------
int good2_2()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v2 = 0LL;
    v1 = 0LL;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_4);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_4, 0LL, &v2) )
        v2 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_4, 0LL, &v1) )
        v1 = 0LL;
      if ( v2 && stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
      if ( v1 )
      {
        if ( stdThreadJoin((pthread_t *)v1) )
          stdThreadDestroy(v1);
      }
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_4);
      result = printIntLine(gGoodInt_3);
    }
  }
  return result;
}
// 409BD4: using guessed type int GLOBAL_CONST_TRUE;
// 60D12C: using guessed type int gGoodInt_3;
// 60D130: using guessed type __int64 gGoodLock_4;

//----- (00000000004021EC) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_09_good()
{
  good1_4();
  return good2_2();
}

//----- (0000000000402206) ----------------------------------------------------
_DWORD *__fastcall helperBad_5(_DWORD *a1)
{
  _DWORD *result; // rax
  int i; // [rsp+14h] [rbp-4h]

  result = a1;
  for ( i = 0; i <= 999999; ++i )
  {
    result = a1;
    ++*a1;
  }
  return result;
}

//----- (000000000040223D) ----------------------------------------------------
int __fastcall helperGood_5(_DWORD *a1)
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_5);
  for ( i = 0; i <= 999999; ++i )
    ++*a1;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_5);
}
// 60D138: using guessed type __int64 gGoodLock_5;

//----- (0000000000402296) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_14_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  result = globalFive;
  if ( globalFive == 5 )
  {
    v3 = 0LL;
    v2 = 0LL;
    v1 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_5, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_5, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    result = printIntLine(v1);
  }
  return result;
}
// 60D0D0: using guessed type int globalFive;

//----- (000000000040235C) ----------------------------------------------------
int good1_5()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_5);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_5, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_5, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_5);
    result = printIntLine(v1);
  }
  return result;
}
// 60D0D0: using guessed type int globalFive;
// 60D138: using guessed type __int64 gGoodLock_5;

//----- (000000000040244E) ----------------------------------------------------
int good2_3()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  result = globalFive;
  if ( globalFive == 5 )
  {
    v3 = 0LL;
    v2 = 0LL;
    v1 = 0;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_5);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_5, (__int64)&v1, &v3) )
        v3 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_5, (__int64)&v1, &v2) )
        v2 = 0LL;
      if ( v3 && stdThreadJoin((pthread_t *)v3) )
        stdThreadDestroy(v3);
      if ( v2 )
      {
        if ( stdThreadJoin((pthread_t *)v2) )
          stdThreadDestroy(v2);
      }
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_5);
      result = printIntLine(v1);
    }
  }
  return result;
}
// 60D0D0: using guessed type int globalFive;
// 60D138: using guessed type __int64 gGoodLock_5;

//----- (0000000000402535) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_14_good()
{
  good1_5();
  return good2_3();
}

//----- (000000000040254F) ----------------------------------------------------
_DWORD *__fastcall helperBad_6(_DWORD *a1)
{
  _DWORD *result; // rax
  int i; // [rsp+14h] [rbp-4h]

  result = a1;
  for ( i = 0; i <= 999999; ++i )
  {
    result = a1;
    ++*a1;
  }
  return result;
}

//----- (0000000000402586) ----------------------------------------------------
int __fastcall helperGood_6(_DWORD *a1)
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_6);
  for ( i = 0; i <= 999999; ++i )
    ++*a1;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_6);
}
// 60D140: using guessed type __int64 gGoodLock_6;

//----- (00000000004025DF) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_01_bad()
{
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_6, (__int64)&v1, &v3) )
    v3 = 0LL;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_6, (__int64)&v1, &v2) )
    v2 = 0LL;
  if ( v3 && stdThreadJoin((pthread_t *)v3) )
    stdThreadDestroy(v3);
  if ( v2 && stdThreadJoin((pthread_t *)v2) )
    stdThreadDestroy(v2);
  return printIntLine(v1);
}

//----- (0000000000402696) ----------------------------------------------------
int good1_6()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_6);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_6, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_6, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_6);
    result = printIntLine(v1);
  }
  return result;
}
// 60D140: using guessed type __int64 gGoodLock_6;

//----- (000000000040276E) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_01_good()
{
  return good1_6();
}

//----- (000000000040277E) ----------------------------------------------------
_DWORD *__fastcall helperBad_7(_DWORD *a1)
{
  _DWORD *result; // rax
  int i; // [rsp+14h] [rbp-4h]

  result = a1;
  for ( i = 0; i <= 999999; ++i )
  {
    result = a1;
    ++*a1;
  }
  return result;
}

//----- (00000000004027B5) ----------------------------------------------------
int __fastcall helperGood_7(_DWORD *a1)
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_7);
  for ( i = 0; i <= 999999; ++i )
    ++*a1;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_7);
}
// 60D148: using guessed type __int64 gGoodLock_7;

//----- (000000000040280E) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_18_bad()
{
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_7, (__int64)&v1, &v3) )
    v3 = 0LL;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_7, (__int64)&v1, &v2) )
    v2 = 0LL;
  if ( v3 && stdThreadJoin((pthread_t *)v3) )
    stdThreadDestroy(v3);
  if ( v2 && stdThreadJoin((pthread_t *)v2) )
    stdThreadDestroy(v2);
  return printIntLine(v1);
}

//----- (00000000004028C6) ----------------------------------------------------
int good1_7()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_7);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_7, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_7, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_7);
    result = printIntLine(v1);
  }
  return result;
}
// 60D148: using guessed type __int64 gGoodLock_7;

//----- (000000000040299F) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_18_good()
{
  return good1_7();
}

//----- (00000000004029AF) ----------------------------------------------------
_DWORD *__fastcall helperBad_8(_DWORD *a1)
{
  _DWORD *result; // rax
  int i; // [rsp+14h] [rbp-4h]

  result = a1;
  for ( i = 0; i <= 999999; ++i )
  {
    result = a1;
    ++*a1;
  }
  return result;
}

//----- (00000000004029E6) ----------------------------------------------------
int __fastcall helperGood_8(_DWORD *a1)
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_8);
  for ( i = 0; i <= 999999; ++i )
    ++*a1;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_8);
}
// 60D150: using guessed type __int64 gGoodLock_8;

//----- (0000000000402A3F) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_06_bad()
{
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_8, (__int64)&v1, &v3) )
    v3 = 0LL;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_8, (__int64)&v1, &v2) )
    v2 = 0LL;
  if ( v3 && stdThreadJoin((pthread_t *)v3) )
    stdThreadDestroy(v3);
  if ( v2 && stdThreadJoin((pthread_t *)v2) )
    stdThreadDestroy(v2);
  return printIntLine(v1);
}

//----- (0000000000402B04) ----------------------------------------------------
int good1_8()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_8);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_8, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_8, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_8);
    result = printIntLine(v1);
  }
  return result;
}
// 60D150: using guessed type __int64 gGoodLock_8;

//----- (0000000000402BF5) ----------------------------------------------------
int good2_4()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_8);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_8, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_8, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_8);
    result = printIntLine(v1);
  }
  return result;
}
// 60D150: using guessed type __int64 gGoodLock_8;

//----- (0000000000402CDB) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_06_good()
{
  good1_8();
  return good2_4();
}

//----- (0000000000402CF5) ----------------------------------------------------
__int64 helperBad_9()
{
  __int64 result; // rax
  int i; // [rsp+14h] [rbp-4h]

  for ( i = 0; i <= 999999; ++i )
    result = (unsigned int)++gBadInt_4;
  return result;
}
// 60D158: using guessed type int gBadInt_4;

//----- (0000000000402D24) ----------------------------------------------------
int helperGood_9()
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_9);
  for ( i = 0; i <= 999999; ++i )
    ++gGoodInt_4;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_9);
}
// 60D15C: using guessed type int gGoodInt_4;
// 60D160: using guessed type __int64 gGoodLock_9;

//----- (0000000000402D75) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_12_bad()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-20h]
  void *v2; // [rsp+8h] [rbp-18h]
  void *v3; // [rsp+10h] [rbp-10h]
  void *v4; // [rsp+18h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v4 = 0LL;
    v3 = 0LL;
    gBadInt_4 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_9, 0LL, &v4) )
      v4 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_9, 0LL, &v3) )
      v3 = 0LL;
    if ( v4 && stdThreadJoin((pthread_t *)v4) )
      stdThreadDestroy(v4);
    if ( v3 )
    {
      if ( stdThreadJoin((pthread_t *)v3) )
        stdThreadDestroy(v3);
    }
    result = printIntLine(gBadInt_4);
  }
  else
  {
    v2 = 0LL;
    v1 = 0LL;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_9);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_9, 0LL, &v2) )
        v2 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_9, 0LL, &v1) )
        v1 = 0LL;
      if ( v2 && stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
      if ( v1 && stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_9);
      result = printIntLine(gGoodInt_4);
    }
  }
  return result;
}
// 60D158: using guessed type int gBadInt_4;
// 60D15C: using guessed type int gGoodInt_4;
// 60D160: using guessed type __int64 gGoodLock_9;

//----- (0000000000402F17) ----------------------------------------------------
int good1_9()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-20h]
  void *v2; // [rsp+8h] [rbp-18h]
  void *v3; // [rsp+10h] [rbp-10h]
  void *v4; // [rsp+18h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v4 = 0LL;
    v3 = 0LL;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_9);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_9, 0LL, &v4) )
        v4 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_9, 0LL, &v3) )
        v3 = 0LL;
      if ( v4 && stdThreadJoin((pthread_t *)v4) )
        stdThreadDestroy(v4);
      if ( v3 )
      {
        if ( stdThreadJoin((pthread_t *)v3) )
          stdThreadDestroy(v3);
      }
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_9);
      result = printIntLine(gGoodInt_4);
    }
  }
  else
  {
    v2 = 0LL;
    v1 = 0LL;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_9);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_9, 0LL, &v2) )
        v2 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_9, 0LL, &v1) )
        v1 = 0LL;
      if ( v2 && stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
      if ( v1 && stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_9);
      result = printIntLine(gGoodInt_4);
    }
  }
  return result;
}
// 60D15C: using guessed type int gGoodInt_4;
// 60D160: using guessed type __int64 gGoodLock_9;

//----- (00000000004030D0) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_12_good()
{
  return good1_9();
}

//----- (00000000004030E0) ----------------------------------------------------
_DWORD *__fastcall helperBad_10(_DWORD *a1)
{
  _DWORD *result; // rax
  int i; // [rsp+14h] [rbp-4h]

  result = a1;
  for ( i = 0; i <= 999999; ++i )
  {
    result = a1;
    ++*a1;
  }
  return result;
}

//----- (0000000000403117) ----------------------------------------------------
int __fastcall helperGood_10(_DWORD *a1)
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_10);
  for ( i = 0; i <= 999999; ++i )
    ++*a1;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_10);
}
// 60D168: using guessed type __int64 gGoodLock_10;

//----- (0000000000403170) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_07_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  result = staticFive;
  if ( staticFive == 5 )
  {
    v3 = 0LL;
    v2 = 0LL;
    v1 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_10, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_10, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    result = printIntLine(v1);
  }
  return result;
}
// 60D0BC: using guessed type int staticFive;

//----- (0000000000403236) ----------------------------------------------------
int good1_10()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  if ( staticFive != 5 )
    return printLine("Benign, fixed string");
  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_10);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_10, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_10, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_10);
    result = printIntLine(v1);
  }
  return result;
}
// 60D0BC: using guessed type int staticFive;
// 60D168: using guessed type __int64 gGoodLock_10;

//----- (0000000000403328) ----------------------------------------------------
int good2_5()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  result = staticFive;
  if ( staticFive == 5 )
  {
    v3 = 0LL;
    v2 = 0LL;
    v1 = 0;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_10);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_10, (__int64)&v1, &v3) )
        v3 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_10, (__int64)&v1, &v2) )
        v2 = 0LL;
      if ( v3 && stdThreadJoin((pthread_t *)v3) )
        stdThreadDestroy(v3);
      if ( v2 )
      {
        if ( stdThreadJoin((pthread_t *)v2) )
          stdThreadDestroy(v2);
      }
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_10);
      result = printIntLine(v1);
    }
  }
  return result;
}
// 60D0BC: using guessed type int staticFive;
// 60D168: using guessed type __int64 gGoodLock_10;

//----- (000000000040340F) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_07_good()
{
  good1_10();
  return good2_5();
}

//----- (0000000000403429) ----------------------------------------------------
_DWORD *__fastcall helperBad_11(_DWORD *a1)
{
  _DWORD *result; // rax
  int i; // [rsp+14h] [rbp-4h]

  result = a1;
  for ( i = 0; i <= 999999; ++i )
  {
    result = a1;
    ++*a1;
  }
  return result;
}

//----- (0000000000403460) ----------------------------------------------------
int __fastcall helperGood_11(_DWORD *a1)
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_11);
  for ( i = 0; i <= 999999; ++i )
    ++*a1;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_11);
}
// 60D170: using guessed type __int64 gGoodLock_11;

//----- (00000000004034B9) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_12_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+4h] [rbp-2Ch]
  void *v2; // [rsp+8h] [rbp-28h]
  void *v3; // [rsp+10h] [rbp-20h]
  unsigned int v4; // [rsp+1Ch] [rbp-14h]
  void *v5; // [rsp+20h] [rbp-10h]
  void *v6; // [rsp+28h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v6 = 0LL;
    v5 = 0LL;
    v4 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_11, (__int64)&v4, &v6) )
      v6 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_11, (__int64)&v4, &v5) )
      v5 = 0LL;
    if ( v6 && stdThreadJoin((pthread_t *)v6) )
      stdThreadDestroy(v6);
    if ( v5 )
    {
      if ( stdThreadJoin((pthread_t *)v5) )
        stdThreadDestroy(v5);
    }
    result = printIntLine(v4);
  }
  else
  {
    v3 = 0LL;
    v2 = 0LL;
    v1 = 0;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_11);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_11, (__int64)&v1, &v3) )
        v3 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_11, (__int64)&v1, &v2) )
        v2 = 0LL;
      if ( v3 && stdThreadJoin((pthread_t *)v3) )
        stdThreadDestroy(v3);
      if ( v2 && stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_11);
      result = printIntLine(v1);
    }
  }
  return result;
}
// 60D170: using guessed type __int64 gGoodLock_11;

//----- (0000000000403655) ----------------------------------------------------
int good1_11()
{
  int result; // eax
  unsigned int v1; // [rsp+4h] [rbp-2Ch]
  void *v2; // [rsp+8h] [rbp-28h]
  void *v3; // [rsp+10h] [rbp-20h]
  unsigned int v4; // [rsp+1Ch] [rbp-14h]
  void *v5; // [rsp+20h] [rbp-10h]
  void *v6; // [rsp+28h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v6 = 0LL;
    v5 = 0LL;
    v4 = 0;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_11);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_11, (__int64)&v4, &v6) )
        v6 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_11, (__int64)&v4, &v5) )
        v5 = 0LL;
      if ( v6 && stdThreadJoin((pthread_t *)v6) )
        stdThreadDestroy(v6);
      if ( v5 )
      {
        if ( stdThreadJoin((pthread_t *)v5) )
          stdThreadDestroy(v5);
      }
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_11);
      result = printIntLine(v4);
    }
  }
  else
  {
    v3 = 0LL;
    v2 = 0LL;
    v1 = 0;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_11);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_11, (__int64)&v1, &v3) )
        v3 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_11, (__int64)&v1, &v2) )
        v2 = 0LL;
      if ( v3 && stdThreadJoin((pthread_t *)v3) )
        stdThreadDestroy(v3);
      if ( v2 && stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_11);
      result = printIntLine(v1);
    }
  }
  return result;
}
// 60D170: using guessed type __int64 gGoodLock_11;

//----- (0000000000403812) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_12_good()
{
  return good1_11();
}

//----- (0000000000403822) ----------------------------------------------------
__int64 helperBad_12()
{
  __int64 result; // rax
  int i; // [rsp+14h] [rbp-4h]

  for ( i = 0; i <= 999999; ++i )
    result = (unsigned int)++gBadInt_5;
  return result;
}
// 60D178: using guessed type int gBadInt_5;

//----- (0000000000403851) ----------------------------------------------------
int helperGood_12()
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_12);
  for ( i = 0; i <= 999999; ++i )
    ++gGoodInt_5;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_12);
}
// 60D17C: using guessed type int gGoodInt_5;
// 60D180: using guessed type __int64 gGoodLock_12;

//----- (00000000004038A2) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_06_bad()
{
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  gBadInt_5 = 0;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_12, 0LL, &v2) )
    v2 = 0LL;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_12, 0LL, &v1) )
    v1 = 0LL;
  if ( v2 && stdThreadJoin((pthread_t *)v2) )
    stdThreadDestroy(v2);
  if ( v1 && stdThreadJoin((pthread_t *)v1) )
    stdThreadDestroy(v1);
  return printIntLine(gBadInt_5);
}
// 60D178: using guessed type int gBadInt_5;

//----- (000000000040396F) ----------------------------------------------------
int good1_12()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_12);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_12, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_12, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_12);
    result = printIntLine(gGoodInt_5);
  }
  return result;
}
// 60D17C: using guessed type int gGoodInt_5;
// 60D180: using guessed type __int64 gGoodLock_12;

//----- (0000000000403A5E) ----------------------------------------------------
int good2_6()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_12);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_12, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_12, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_12);
    result = printIntLine(gGoodInt_5);
  }
  return result;
}
// 60D17C: using guessed type int gGoodInt_5;
// 60D180: using guessed type __int64 gGoodLock_12;

//----- (0000000000403B42) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_06_good()
{
  good1_12();
  return good2_6();
}

//----- (0000000000403B5C) ----------------------------------------------------
__int64 helperBad_13()
{
  __int64 result; // rax
  int i; // [rsp+14h] [rbp-4h]

  for ( i = 0; i <= 999999; ++i )
    result = (unsigned int)++gBadInt_6;
  return result;
}
// 60D188: using guessed type int gBadInt_6;

//----- (0000000000403B8B) ----------------------------------------------------
int helperGood_13()
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_13);
  for ( i = 0; i <= 999999; ++i )
    ++gGoodInt_6;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_13);
}
// 60D18C: using guessed type int gGoodInt_6;
// 60D190: using guessed type __int64 gGoodLock_13;

//----- (0000000000403BDC) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_15_bad()
{
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  gBadInt_6 = 0;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_13, 0LL, &v2) )
    v2 = 0LL;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_13, 0LL, &v1) )
    v1 = 0LL;
  if ( v2 && stdThreadJoin((pthread_t *)v2) )
    stdThreadDestroy(v2);
  if ( v1 && stdThreadJoin((pthread_t *)v1) )
    stdThreadDestroy(v1);
  return printIntLine(gBadInt_6);
}
// 60D188: using guessed type int gBadInt_6;

//----- (0000000000403C9C) ----------------------------------------------------
int good1_13()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_13);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_13, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_13, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_13);
    result = printIntLine(gGoodInt_6);
  }
  return result;
}
// 60D18C: using guessed type int gGoodInt_6;
// 60D190: using guessed type __int64 gGoodLock_13;

//----- (0000000000403D73) ----------------------------------------------------
int good2_7()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_13);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_13, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_13, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_13);
    result = printIntLine(gGoodInt_6);
  }
  return result;
}
// 60D18C: using guessed type int gGoodInt_6;
// 60D190: using guessed type __int64 gGoodLock_13;

//----- (0000000000403E4A) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_15_good()
{
  good1_13();
  return good2_7();
}

//----- (0000000000403E64) ----------------------------------------------------
__int64 helperBad_14()
{
  __int64 result; // rax
  int i; // [rsp+14h] [rbp-4h]

  for ( i = 0; i <= 999999; ++i )
    result = (unsigned int)++gBadInt_7;
  return result;
}
// 60D198: using guessed type int gBadInt_7;

//----- (0000000000403E93) ----------------------------------------------------
int helperGood_14()
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_14);
  for ( i = 0; i <= 999999; ++i )
    ++gGoodInt_7;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_14);
}
// 60D19C: using guessed type int gGoodInt_7;
// 60D1A0: using guessed type __int64 gGoodLock_14;

//----- (0000000000403EE4) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_05_bad()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  result = staticTrue;
  if ( staticTrue )
  {
    v2 = 0LL;
    v1 = 0LL;
    gBadInt_7 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_14, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_14, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    result = printIntLine(gBadInt_7);
  }
  return result;
}
// 60D0C0: using guessed type int staticTrue;
// 60D198: using guessed type int gBadInt_7;

//----- (0000000000403FB1) ----------------------------------------------------
int good1_14()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  if ( staticFalse )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_14);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_14, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_14, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_14);
    result = printIntLine(gGoodInt_7);
  }
  return result;
}
// 60D19C: using guessed type int gGoodInt_7;
// 60D1A0: using guessed type __int64 gGoodLock_14;
// 60D1A8: using guessed type int staticFalse;

//----- (00000000004040A0) ----------------------------------------------------
int good2_8()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  result = staticTrue;
  if ( staticTrue )
  {
    v2 = 0LL;
    v1 = 0LL;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_14);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_14, 0LL, &v2) )
        v2 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_14, 0LL, &v1) )
        v1 = 0LL;
      if ( v2 && stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
      if ( v1 )
      {
        if ( stdThreadJoin((pthread_t *)v1) )
          stdThreadDestroy(v1);
      }
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_14);
      result = printIntLine(gGoodInt_7);
    }
  }
  return result;
}
// 60D0C0: using guessed type int staticTrue;
// 60D19C: using guessed type int gGoodInt_7;
// 60D1A0: using guessed type __int64 gGoodLock_14;

//----- (0000000000404184) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_05_good()
{
  good1_14();
  return good2_8();
}

//----- (000000000040419E) ----------------------------------------------------
_DWORD *__fastcall helperBad_15(_DWORD *a1)
{
  _DWORD *result; // rax
  int i; // [rsp+14h] [rbp-4h]

  result = a1;
  for ( i = 0; i <= 999999; ++i )
  {
    result = a1;
    ++*a1;
  }
  return result;
}

//----- (00000000004041D5) ----------------------------------------------------
int __fastcall helperGood_15(_DWORD *a1)
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_15);
  for ( i = 0; i <= 999999; ++i )
    ++*a1;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_15);
}
// 60D1B0: using guessed type __int64 gGoodLock_15;

//----- (000000000040422E) ----------------------------------------------------
__int64 staticReturnsTrue()
{
  return 1LL;
}

//----- (0000000000404239) ----------------------------------------------------
__int64 staticReturnsFalse()
{
  return 0LL;
}

//----- (0000000000404244) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_08_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  result = staticReturnsTrue();
  if ( result )
  {
    v3 = 0LL;
    v2 = 0LL;
    v1 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_15, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_15, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    result = printIntLine(v1);
  }
  return result;
}

//----- (000000000040430D) ----------------------------------------------------
int good1_15()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  if ( (unsigned int)staticReturnsFalse() )
    return printLine("Benign, fixed string");
  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_15);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_15, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_15, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_15);
    result = printIntLine(v1);
  }
  return result;
}
// 60D1B0: using guessed type __int64 gGoodLock_15;

//----- (0000000000404402) ----------------------------------------------------
int good2_9()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  result = staticReturnsTrue();
  if ( result )
  {
    v3 = 0LL;
    v2 = 0LL;
    v1 = 0;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_15);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_15, (__int64)&v1, &v3) )
        v3 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_15, (__int64)&v1, &v2) )
        v2 = 0LL;
      if ( v3 && stdThreadJoin((pthread_t *)v3) )
        stdThreadDestroy(v3);
      if ( v2 )
      {
        if ( stdThreadJoin((pthread_t *)v2) )
          stdThreadDestroy(v2);
      }
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_15);
      result = printIntLine(v1);
    }
  }
  return result;
}
// 60D1B0: using guessed type __int64 gGoodLock_15;

//----- (00000000004044EC) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_08_good()
{
  good1_15();
  return good2_9();
}

//----- (0000000000404506) ----------------------------------------------------
__int64 helperBad_16()
{
  __int64 result; // rax
  int i; // [rsp+14h] [rbp-4h]

  for ( i = 0; i <= 999999; ++i )
    result = (unsigned int)++gBadInt_8;
  return result;
}
// 60D1B8: using guessed type int gBadInt_8;

//----- (0000000000404535) ----------------------------------------------------
int helperGood_16()
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_16);
  for ( i = 0; i <= 999999; ++i )
    ++gGoodInt_8;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_16);
}
// 60D1BC: using guessed type int gGoodInt_8;
// 60D1C0: using guessed type __int64 gGoodLock_16;

//----- (0000000000404586) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_13_bad()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v2 = 0LL;
    v1 = 0LL;
    gBadInt_8 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_16, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_16, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    result = printIntLine(gBadInt_8);
  }
  return result;
}
// 409BDC: using guessed type int GLOBAL_CONST_FIVE;
// 60D1B8: using guessed type int gBadInt_8;

//----- (0000000000404654) ----------------------------------------------------
int good1_16()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_16);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_16, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_16, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_16);
    result = printIntLine(gGoodInt_8);
  }
  return result;
}
// 409BDC: using guessed type int GLOBAL_CONST_FIVE;
// 60D1BC: using guessed type int gGoodInt_8;
// 60D1C0: using guessed type __int64 gGoodLock_16;

//----- (0000000000404744) ----------------------------------------------------
int good2_10()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v2 = 0LL;
    v1 = 0LL;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_16);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_16, 0LL, &v2) )
        v2 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_16, 0LL, &v1) )
        v1 = 0LL;
      if ( v2 && stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
      if ( v1 )
      {
        if ( stdThreadJoin((pthread_t *)v1) )
          stdThreadDestroy(v1);
      }
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_16);
      result = printIntLine(gGoodInt_8);
    }
  }
  return result;
}
// 409BDC: using guessed type int GLOBAL_CONST_FIVE;
// 60D1BC: using guessed type int gGoodInt_8;
// 60D1C0: using guessed type __int64 gGoodLock_16;

//----- (0000000000404829) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_13_good()
{
  good1_16();
  return good2_10();
}

//----- (0000000000404843) ----------------------------------------------------
_DWORD *__fastcall helperBad_17(_DWORD *a1)
{
  _DWORD *result; // rax
  int i; // [rsp+14h] [rbp-4h]

  result = a1;
  for ( i = 0; i <= 999999; ++i )
  {
    result = a1;
    ++*a1;
  }
  return result;
}

//----- (000000000040487A) ----------------------------------------------------
int __fastcall helperGood_17(_DWORD *a1)
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_17);
  for ( i = 0; i <= 999999; ++i )
    ++*a1;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_17);
}
// 60D1C8: using guessed type __int64 gGoodLock_17;

//----- (00000000004048D3) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_05_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    v3 = 0LL;
    v2 = 0LL;
    v1 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_17, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_17, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    result = printIntLine(v1);
  }
  return result;
}
// 60D0C4: using guessed type int staticTrue_0;

//----- (0000000000404998) ----------------------------------------------------
int good1_17()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  if ( staticFalse_0 )
    return printLine("Benign, fixed string");
  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_17);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_17, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_17, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_17);
    result = printIntLine(v1);
  }
  return result;
}
// 60D1C8: using guessed type __int64 gGoodLock_17;
// 60D1D0: using guessed type int staticFalse_0;

//----- (0000000000404A89) ----------------------------------------------------
int good2_11()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    v3 = 0LL;
    v2 = 0LL;
    v1 = 0;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_17);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_17, (__int64)&v1, &v3) )
        v3 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_17, (__int64)&v1, &v2) )
        v2 = 0LL;
      if ( v3 && stdThreadJoin((pthread_t *)v3) )
        stdThreadDestroy(v3);
      if ( v2 )
      {
        if ( stdThreadJoin((pthread_t *)v2) )
          stdThreadDestroy(v2);
      }
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_17);
      result = printIntLine(v1);
    }
  }
  return result;
}
// 60D0C4: using guessed type int staticTrue_0;
// 60D1C8: using guessed type __int64 gGoodLock_17;

//----- (0000000000404B6F) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_05_good()
{
  good1_17();
  return good2_11();
}

//----- (0000000000404B89) ----------------------------------------------------
__int64 helperBad_18()
{
  __int64 result; // rax
  int i; // [rsp+14h] [rbp-4h]

  for ( i = 0; i <= 999999; ++i )
    result = (unsigned int)++gBadInt_9;
  return result;
}
// 60D1D8: using guessed type int gBadInt_9;

//----- (0000000000404BB8) ----------------------------------------------------
int helperGood_18()
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_18);
  for ( i = 0; i <= 999999; ++i )
    ++gGoodInt_9;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_18);
}
// 60D1DC: using guessed type int gGoodInt_9;
// 60D1E0: using guessed type __int64 gGoodLock_18;

//----- (0000000000404C09) ----------------------------------------------------
void CWE366_Race_Condition_Within_Thread__global_int_17_bad()
{
  void *v0; // [rsp+8h] [rbp-18h]
  void *v1; // [rsp+10h] [rbp-10h]
  int i; // [rsp+1Ch] [rbp-4h]

  for ( i = 0; i <= 0; ++i )
  {
    v1 = 0LL;
    v0 = 0LL;
    gBadInt_9 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_18, 0LL, &v1) )
      v1 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_18, 0LL, &v0) )
      v0 = 0LL;
    if ( v1 && stdThreadJoin((pthread_t *)v1) )
      stdThreadDestroy(v1);
    if ( v0 )
    {
      if ( stdThreadJoin((pthread_t *)v0) )
        stdThreadDestroy(v0);
    }
    printIntLine(gBadInt_9);
  }
}
// 60D1D8: using guessed type int gBadInt_9;

//----- (0000000000404CE2) ----------------------------------------------------
void good1_18()
{
  void *v0; // [rsp+8h] [rbp-18h]
  void *v1; // [rsp+10h] [rbp-10h]
  int i; // [rsp+1Ch] [rbp-4h]

  for ( i = 0; i <= 0; ++i )
  {
    v1 = 0LL;
    v0 = 0LL;
    if ( !(unsigned int)stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_18) )
      break;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_18, 0LL, &v1) )
      v1 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_18, 0LL, &v0) )
      v0 = 0LL;
    if ( v1 && stdThreadJoin((pthread_t *)v1) )
      stdThreadDestroy(v1);
    if ( v0 )
    {
      if ( stdThreadJoin((pthread_t *)v0) )
        stdThreadDestroy(v0);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_18);
    printIntLine(gGoodInt_9);
  }
}
// 60D1DC: using guessed type int gGoodInt_9;
// 60D1E0: using guessed type __int64 gGoodLock_18;

//----- (0000000000404DD2) ----------------------------------------------------
void CWE366_Race_Condition_Within_Thread__global_int_17_good()
{
  good1_18();
}

//----- (0000000000404DE2) ----------------------------------------------------
_DWORD *__fastcall helperBad_19(_DWORD *a1)
{
  _DWORD *result; // rax
  int i; // [rsp+14h] [rbp-4h]

  result = a1;
  for ( i = 0; i <= 999999; ++i )
  {
    result = a1;
    ++*a1;
  }
  return result;
}

//----- (0000000000404E19) ----------------------------------------------------
int __fastcall helperGood_19(_DWORD *a1)
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_19);
  for ( i = 0; i <= 999999; ++i )
    ++*a1;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_19);
}
// 60D1E8: using guessed type __int64 gGoodLock_19;

//----- (0000000000404E72) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_09_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v3 = 0LL;
    v2 = 0LL;
    v1 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_19, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_19, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    result = printIntLine(v1);
  }
  return result;
}
// 409BD4: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000404F37) ----------------------------------------------------
int good1_19()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_19);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_19, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_19, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_19);
    result = printIntLine(v1);
  }
  return result;
}
// 409BD8: using guessed type int GLOBAL_CONST_FALSE;
// 60D1E8: using guessed type __int64 gGoodLock_19;

//----- (0000000000405028) ----------------------------------------------------
int good2_12()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v3 = 0LL;
    v2 = 0LL;
    v1 = 0;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_19);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_19, (__int64)&v1, &v3) )
        v3 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_19, (__int64)&v1, &v2) )
        v2 = 0LL;
      if ( v3 && stdThreadJoin((pthread_t *)v3) )
        stdThreadDestroy(v3);
      if ( v2 )
      {
        if ( stdThreadJoin((pthread_t *)v2) )
          stdThreadDestroy(v2);
      }
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_19);
      result = printIntLine(v1);
    }
  }
  return result;
}
// 409BD4: using guessed type int GLOBAL_CONST_TRUE;
// 60D1E8: using guessed type __int64 gGoodLock_19;

//----- (000000000040510E) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_09_good()
{
  good1_19();
  return good2_12();
}

//----- (0000000000405128) ----------------------------------------------------
__int64 helperBad_20()
{
  __int64 result; // rax
  int i; // [rsp+14h] [rbp-4h]

  for ( i = 0; i <= 999999; ++i )
    result = (unsigned int)++gBadInt_10;
  return result;
}
// 60D1F0: using guessed type int gBadInt_10;

//----- (0000000000405157) ----------------------------------------------------
int helperGood_20()
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_20);
  for ( i = 0; i <= 999999; ++i )
    ++gGoodInt_10;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_20);
}
// 60D1F4: using guessed type int gGoodInt_10;
// 60D1F8: using guessed type __int64 gGoodLock_20;

//----- (00000000004051A8) ----------------------------------------------------
__int64 staticReturnsTrue_0()
{
  return 1LL;
}

//----- (00000000004051B3) ----------------------------------------------------
__int64 staticReturnsFalse_0()
{
  return 0LL;
}

//----- (00000000004051BE) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_08_bad()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  result = staticReturnsTrue_0();
  if ( result )
  {
    v2 = 0LL;
    v1 = 0LL;
    gBadInt_10 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_20, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_20, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    result = printIntLine(gBadInt_10);
  }
  return result;
}
// 60D1F0: using guessed type int gBadInt_10;

//----- (000000000040528F) ----------------------------------------------------
int good1_20()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)staticReturnsFalse_0() )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_20);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_20, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_20, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_20);
    result = printIntLine(gGoodInt_10);
  }
  return result;
}
// 60D1F4: using guessed type int gGoodInt_10;
// 60D1F8: using guessed type __int64 gGoodLock_20;

//----- (0000000000405382) ----------------------------------------------------
int good2_13()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  result = staticReturnsTrue_0();
  if ( result )
  {
    v2 = 0LL;
    v1 = 0LL;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_20);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_20, 0LL, &v2) )
        v2 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_20, 0LL, &v1) )
        v1 = 0LL;
      if ( v2 && stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
      if ( v1 )
      {
        if ( stdThreadJoin((pthread_t *)v1) )
          stdThreadDestroy(v1);
      }
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_20);
      result = printIntLine(gGoodInt_10);
    }
  }
  return result;
}
// 60D1F4: using guessed type int gGoodInt_10;
// 60D1F8: using guessed type __int64 gGoodLock_20;

//----- (000000000040546A) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_08_good()
{
  good1_20();
  return good2_13();
}

//----- (0000000000405484) ----------------------------------------------------
__int64 helperBad_21()
{
  __int64 result; // rax
  int i; // [rsp+14h] [rbp-4h]

  for ( i = 0; i <= 999999; ++i )
    result = (unsigned int)++gBadInt_11;
  return result;
}
// 60D200: using guessed type int gBadInt_11;

//----- (00000000004054B3) ----------------------------------------------------
int helperGood_21()
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_21);
  for ( i = 0; i <= 999999; ++i )
    ++gGoodInt_11;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_21);
}
// 60D204: using guessed type int gGoodInt_11;
// 60D208: using guessed type __int64 gGoodLock_21;

//----- (0000000000405504) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_07_bad()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  result = staticFive_0;
  if ( staticFive_0 == 5 )
  {
    v2 = 0LL;
    v1 = 0LL;
    gBadInt_11 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_21, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_21, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    result = printIntLine(gBadInt_11);
  }
  return result;
}
// 60D0C8: using guessed type int staticFive_0;
// 60D200: using guessed type int gBadInt_11;

//----- (00000000004055D2) ----------------------------------------------------
int good1_21()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  if ( staticFive_0 != 5 )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_21);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_21, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_21, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_21);
    result = printIntLine(gGoodInt_11);
  }
  return result;
}
// 60D0C8: using guessed type int staticFive_0;
// 60D204: using guessed type int gGoodInt_11;
// 60D208: using guessed type __int64 gGoodLock_21;

//----- (00000000004056C2) ----------------------------------------------------
int good2_14()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  result = staticFive_0;
  if ( staticFive_0 == 5 )
  {
    v2 = 0LL;
    v1 = 0LL;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_21);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_21, 0LL, &v2) )
        v2 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_21, 0LL, &v1) )
        v1 = 0LL;
      if ( v2 && stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
      if ( v1 )
      {
        if ( stdThreadJoin((pthread_t *)v1) )
          stdThreadDestroy(v1);
      }
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_21);
      result = printIntLine(gGoodInt_11);
    }
  }
  return result;
}
// 60D0C8: using guessed type int staticFive_0;
// 60D204: using guessed type int gGoodInt_11;
// 60D208: using guessed type __int64 gGoodLock_21;

//----- (00000000004057A7) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_07_good()
{
  good1_21();
  return good2_14();
}

//----- (00000000004057C1) ----------------------------------------------------
_DWORD *__fastcall helperBad_22(_DWORD *a1)
{
  _DWORD *result; // rax
  int i; // [rsp+14h] [rbp-4h]

  result = a1;
  for ( i = 0; i <= 999999; ++i )
  {
    result = a1;
    ++*a1;
  }
  return result;
}

//----- (00000000004057F8) ----------------------------------------------------
int __fastcall helperGood_22(_DWORD *a1)
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_22);
  for ( i = 0; i <= 999999; ++i )
    ++*a1;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_22);
}
// 60D210: using guessed type __int64 gGoodLock_22;

//----- (0000000000405851) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_13_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v3 = 0LL;
    v2 = 0LL;
    v1 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_22, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_22, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    result = printIntLine(v1);
  }
  return result;
}
// 409BDC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000405917) ----------------------------------------------------
int good1_22()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_22);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_22, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_22, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_22);
    result = printIntLine(v1);
  }
  return result;
}
// 409BDC: using guessed type int GLOBAL_CONST_FIVE;
// 60D210: using guessed type __int64 gGoodLock_22;

//----- (0000000000405A09) ----------------------------------------------------
int good2_15()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v3 = 0LL;
    v2 = 0LL;
    v1 = 0;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_22);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_22, (__int64)&v1, &v3) )
        v3 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_22, (__int64)&v1, &v2) )
        v2 = 0LL;
      if ( v3 && stdThreadJoin((pthread_t *)v3) )
        stdThreadDestroy(v3);
      if ( v2 )
      {
        if ( stdThreadJoin((pthread_t *)v2) )
          stdThreadDestroy(v2);
      }
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_22);
      result = printIntLine(v1);
    }
  }
  return result;
}
// 409BDC: using guessed type int GLOBAL_CONST_FIVE;
// 60D210: using guessed type __int64 gGoodLock_22;

//----- (0000000000405AF0) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_13_good()
{
  good1_22();
  return good2_15();
}

//----- (0000000000405B0A) ----------------------------------------------------
__int64 helperBad_23()
{
  __int64 result; // rax
  int i; // [rsp+14h] [rbp-4h]

  for ( i = 0; i <= 999999; ++i )
    result = (unsigned int)++gBadInt_12;
  return result;
}
// 60D218: using guessed type int gBadInt_12;

//----- (0000000000405B39) ----------------------------------------------------
int helperGood_23()
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_23);
  for ( i = 0; i <= 999999; ++i )
    ++gGoodInt_12;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_23);
}
// 60D21C: using guessed type int gGoodInt_12;
// 60D220: using guessed type __int64 gGoodLock_23;

//----- (0000000000405B8A) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_11_bad()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  result = globalReturnsTrue();
  if ( result )
  {
    v2 = 0LL;
    v1 = 0LL;
    gBadInt_12 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_23, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_23, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    result = printIntLine(gBadInt_12);
  }
  return result;
}
// 60D218: using guessed type int gBadInt_12;

//----- (0000000000405C5B) ----------------------------------------------------
int good1_23()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_23);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_23, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_23, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_23);
    result = printIntLine(gGoodInt_12);
  }
  return result;
}
// 60D21C: using guessed type int gGoodInt_12;
// 60D220: using guessed type __int64 gGoodLock_23;

//----- (0000000000405D4E) ----------------------------------------------------
int good2_16()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  result = globalReturnsTrue();
  if ( result )
  {
    v2 = 0LL;
    v1 = 0LL;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_23);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_23, 0LL, &v2) )
        v2 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_23, 0LL, &v1) )
        v1 = 0LL;
      if ( v2 && stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
      if ( v1 )
      {
        if ( stdThreadJoin((pthread_t *)v1) )
          stdThreadDestroy(v1);
      }
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_23);
      result = printIntLine(gGoodInt_12);
    }
  }
  return result;
}
// 60D21C: using guessed type int gGoodInt_12;
// 60D220: using guessed type __int64 gGoodLock_23;

//----- (0000000000405E36) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_11_good()
{
  good1_23();
  return good2_16();
}

//----- (0000000000405E50) ----------------------------------------------------
__int64 helperBad_24()
{
  __int64 result; // rax
  int i; // [rsp+14h] [rbp-4h]

  for ( i = 0; i <= 999999; ++i )
    result = (unsigned int)++gBadInt_13;
  return result;
}
// 60D228: using guessed type int gBadInt_13;

//----- (0000000000405E7F) ----------------------------------------------------
int helperGood_24()
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_24);
  for ( i = 0; i <= 999999; ++i )
    ++gGoodInt_13;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_24);
}
// 60D22C: using guessed type int gGoodInt_13;
// 60D230: using guessed type __int64 gGoodLock_24;

//----- (0000000000405ED0) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_02_bad()
{
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  gBadInt_13 = 0;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_24, 0LL, &v2) )
    v2 = 0LL;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_24, 0LL, &v1) )
    v1 = 0LL;
  if ( v2 && stdThreadJoin((pthread_t *)v2) )
    stdThreadDestroy(v2);
  if ( v1 && stdThreadJoin((pthread_t *)v1) )
    stdThreadDestroy(v1);
  return printIntLine(gBadInt_13);
}
// 60D228: using guessed type int gBadInt_13;

//----- (0000000000405F8F) ----------------------------------------------------
int good1_24()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_24);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_24, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_24, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_24);
    result = printIntLine(gGoodInt_13);
  }
  return result;
}
// 60D22C: using guessed type int gGoodInt_13;
// 60D230: using guessed type __int64 gGoodLock_24;

//----- (0000000000406065) ----------------------------------------------------
int good2_17()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_24);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_24, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_24, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_24);
    result = printIntLine(gGoodInt_13);
  }
  return result;
}
// 60D22C: using guessed type int gGoodInt_13;
// 60D230: using guessed type __int64 gGoodLock_24;

//----- (000000000040613B) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_02_good()
{
  good1_24();
  return good2_17();
}

//----- (0000000000406155) ----------------------------------------------------
_DWORD *__fastcall helperBad_25(_DWORD *a1)
{
  _DWORD *result; // rax
  int i; // [rsp+14h] [rbp-4h]

  result = a1;
  for ( i = 0; i <= 999999; ++i )
  {
    result = a1;
    ++*a1;
  }
  return result;
}

//----- (000000000040618C) ----------------------------------------------------
int __fastcall helperGood_25(_DWORD *a1)
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_25);
  for ( i = 0; i <= 999999; ++i )
    ++*a1;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_25);
}
// 60D238: using guessed type __int64 gGoodLock_25;

//----- (00000000004061E5) ----------------------------------------------------
void CWE366_Race_Condition_Within_Thread__int_byref_17_bad()
{
  unsigned int v0; // [rsp+4h] [rbp-1Ch]
  void *v1; // [rsp+8h] [rbp-18h]
  void *v2; // [rsp+10h] [rbp-10h]
  int i; // [rsp+1Ch] [rbp-4h]

  for ( i = 0; i <= 0; ++i )
  {
    v2 = 0LL;
    v1 = 0LL;
    v0 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_25, (__int64)&v0, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_25, (__int64)&v0, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    printIntLine(v0);
  }
}

//----- (00000000004062B6) ----------------------------------------------------
void good1_25()
{
  unsigned int v0; // [rsp+4h] [rbp-1Ch]
  void *v1; // [rsp+8h] [rbp-18h]
  void *v2; // [rsp+10h] [rbp-10h]
  int i; // [rsp+1Ch] [rbp-4h]

  for ( i = 0; i <= 0; ++i )
  {
    v2 = 0LL;
    v1 = 0LL;
    v0 = 0;
    if ( !(unsigned int)stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_25) )
      break;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_25, (__int64)&v0, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_25, (__int64)&v0, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_25);
    printIntLine(v0);
  }
}
// 60D238: using guessed type __int64 gGoodLock_25;

//----- (00000000004063A8) ----------------------------------------------------
void CWE366_Race_Condition_Within_Thread__int_byref_17_good()
{
  good1_25();
}

//----- (00000000004063B8) ----------------------------------------------------
_DWORD *__fastcall helperBad_26(_DWORD *a1)
{
  _DWORD *result; // rax
  int i; // [rsp+14h] [rbp-4h]

  result = a1;
  for ( i = 0; i <= 999999; ++i )
  {
    result = a1;
    ++*a1;
  }
  return result;
}

//----- (00000000004063EF) ----------------------------------------------------
int __fastcall helperGood_26(_DWORD *a1)
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_26);
  for ( i = 0; i <= 999999; ++i )
    ++*a1;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_26);
}
// 60D240: using guessed type __int64 gGoodLock_26;

//----- (0000000000406448) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_04_bad()
{
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_26, (__int64)&v1, &v3) )
    v3 = 0LL;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_26, (__int64)&v1, &v2) )
    v2 = 0LL;
  if ( v3 && stdThreadJoin((pthread_t *)v3) )
    stdThreadDestroy(v3);
  if ( v2 && stdThreadJoin((pthread_t *)v2) )
    stdThreadDestroy(v2);
  return printIntLine(v1);
}

//----- (000000000040650C) ----------------------------------------------------
int good1_26()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_26);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_26, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_26, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_26);
    result = printIntLine(v1);
  }
  return result;
}
// 60D240: using guessed type __int64 gGoodLock_26;

//----- (00000000004065FC) ----------------------------------------------------
int good2_18()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_26);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_26, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_26, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_26);
    result = printIntLine(v1);
  }
  return result;
}
// 60D240: using guessed type __int64 gGoodLock_26;

//----- (00000000004066E1) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_04_good()
{
  good1_26();
  return good2_18();
}

//----- (00000000004066FB) ----------------------------------------------------
__int64 helperBad_27()
{
  __int64 result; // rax
  int i; // [rsp+14h] [rbp-4h]

  for ( i = 0; i <= 999999; ++i )
    result = (unsigned int)++gBadInt_14;
  return result;
}
// 60D248: using guessed type int gBadInt_14;

//----- (000000000040672A) ----------------------------------------------------
int helperGood_27()
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_27);
  for ( i = 0; i <= 999999; ++i )
    ++gGoodInt_14;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_27);
}
// 60D24C: using guessed type int gGoodInt_14;
// 60D250: using guessed type __int64 gGoodLock_27;

//----- (000000000040677B) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_04_bad()
{
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  gBadInt_14 = 0;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_27, 0LL, &v2) )
    v2 = 0LL;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_27, 0LL, &v1) )
    v1 = 0LL;
  if ( v2 && stdThreadJoin((pthread_t *)v2) )
    stdThreadDestroy(v2);
  if ( v1 && stdThreadJoin((pthread_t *)v1) )
    stdThreadDestroy(v1);
  return printIntLine(gBadInt_14);
}
// 60D248: using guessed type int gBadInt_14;

//----- (0000000000406847) ----------------------------------------------------
int good1_27()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_27);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_27, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_27, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_27);
    result = printIntLine(gGoodInt_14);
  }
  return result;
}
// 60D24C: using guessed type int gGoodInt_14;
// 60D250: using guessed type __int64 gGoodLock_27;

//----- (0000000000406935) ----------------------------------------------------
int good2_19()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_27);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_27, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_27, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_27);
    result = printIntLine(gGoodInt_14);
  }
  return result;
}
// 60D24C: using guessed type int gGoodInt_14;
// 60D250: using guessed type __int64 gGoodLock_27;

//----- (0000000000406A18) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_04_good()
{
  good1_27();
  return good2_19();
}

//----- (0000000000406A32) ----------------------------------------------------
_DWORD *__fastcall helperBad_28(_DWORD *a1)
{
  _DWORD *result; // rax
  int i; // [rsp+14h] [rbp-4h]

  result = a1;
  for ( i = 0; i <= 999999; ++i )
  {
    result = a1;
    ++*a1;
  }
  return result;
}

//----- (0000000000406A69) ----------------------------------------------------
int __fastcall helperGood_28(_DWORD *a1)
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_28);
  for ( i = 0; i <= 999999; ++i )
    ++*a1;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_28);
}
// 60D258: using guessed type __int64 gGoodLock_28;

//----- (0000000000406AC2) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_11_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  result = globalReturnsTrue();
  if ( result )
  {
    v3 = 0LL;
    v2 = 0LL;
    v1 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_28, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_28, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    result = printIntLine(v1);
  }
  return result;
}

//----- (0000000000406B8B) ----------------------------------------------------
int good1_28()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_28);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_28, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_28, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_28);
    result = printIntLine(v1);
  }
  return result;
}
// 60D258: using guessed type __int64 gGoodLock_28;

//----- (0000000000406C80) ----------------------------------------------------
int good2_20()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  result = globalReturnsTrue();
  if ( result )
  {
    v3 = 0LL;
    v2 = 0LL;
    v1 = 0;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_28);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_28, (__int64)&v1, &v3) )
        v3 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_28, (__int64)&v1, &v2) )
        v2 = 0LL;
      if ( v3 && stdThreadJoin((pthread_t *)v3) )
        stdThreadDestroy(v3);
      if ( v2 )
      {
        if ( stdThreadJoin((pthread_t *)v2) )
          stdThreadDestroy(v2);
      }
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_28);
      result = printIntLine(v1);
    }
  }
  return result;
}
// 60D258: using guessed type __int64 gGoodLock_28;

//----- (0000000000406D6A) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_11_good()
{
  good1_28();
  return good2_20();
}

//----- (0000000000406D84) ----------------------------------------------------
_DWORD *__fastcall helperBad_29(_DWORD *a1)
{
  _DWORD *result; // rax
  int i; // [rsp+14h] [rbp-4h]

  result = a1;
  for ( i = 0; i <= 999999; ++i )
  {
    result = a1;
    ++*a1;
  }
  return result;
}

//----- (0000000000406DBB) ----------------------------------------------------
int __fastcall helperGood_29(_DWORD *a1)
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_29);
  for ( i = 0; i <= 999999; ++i )
    ++*a1;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_29);
}
// 60D260: using guessed type __int64 gGoodLock_29;

//----- (0000000000406E14) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_02_bad()
{
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_29, (__int64)&v1, &v3) )
    v3 = 0LL;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_29, (__int64)&v1, &v2) )
    v2 = 0LL;
  if ( v3 && stdThreadJoin((pthread_t *)v3) )
    stdThreadDestroy(v3);
  if ( v2 && stdThreadJoin((pthread_t *)v2) )
    stdThreadDestroy(v2);
  return printIntLine(v1);
}

//----- (0000000000406ECB) ----------------------------------------------------
int good1_29()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_29);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_29, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_29, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_29);
    result = printIntLine(v1);
  }
  return result;
}
// 60D260: using guessed type __int64 gGoodLock_29;

//----- (0000000000406FA3) ----------------------------------------------------
int good2_21()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_29);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_29, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_29, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_29);
    result = printIntLine(v1);
  }
  return result;
}
// 60D260: using guessed type __int64 gGoodLock_29;

//----- (000000000040707B) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_02_good()
{
  good1_29();
  return good2_21();
}

//----- (0000000000407095) ----------------------------------------------------
__int64 helperBad_30()
{
  __int64 result; // rax
  int i; // [rsp+14h] [rbp-4h]

  for ( i = 0; i <= 999999; ++i )
    result = (unsigned int)++gBadInt_15;
  return result;
}
// 60D268: using guessed type int gBadInt_15;

//----- (00000000004070C4) ----------------------------------------------------
int helperGood_30()
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_30);
  for ( i = 0; i <= 999999; ++i )
    ++gGoodInt_15;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_30);
}
// 60D26C: using guessed type int gGoodInt_15;
// 60D270: using guessed type __int64 gGoodLock_30;

//----- (0000000000407115) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_16_bad()
{
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  gBadInt_15 = 0;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_30, 0LL, &v2) )
    v2 = 0LL;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_30, 0LL, &v1) )
    v1 = 0LL;
  if ( v2 && stdThreadJoin((pthread_t *)v2) )
    stdThreadDestroy(v2);
  if ( v1 && stdThreadJoin((pthread_t *)v1) )
    stdThreadDestroy(v1);
  return printIntLine(gBadInt_15);
}
// 60D268: using guessed type int gBadInt_15;

//----- (00000000004071D5) ----------------------------------------------------
int good1_30()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_30);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_30, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_30, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_30);
    result = printIntLine(gGoodInt_15);
  }
  return result;
}
// 60D26C: using guessed type int gGoodInt_15;
// 60D270: using guessed type __int64 gGoodLock_30;

//----- (00000000004072AC) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_16_good()
{
  return good1_30();
}

//----- (00000000004072BC) ----------------------------------------------------
_DWORD *__fastcall helperBad_31(_DWORD *a1)
{
  _DWORD *result; // rax
  int i; // [rsp+14h] [rbp-4h]

  result = a1;
  for ( i = 0; i <= 999999; ++i )
  {
    result = a1;
    ++*a1;
  }
  return result;
}

//----- (00000000004072F3) ----------------------------------------------------
int __fastcall helperGood_31(_DWORD *a1)
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_31);
  for ( i = 0; i <= 999999; ++i )
    ++*a1;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_31);
}
// 60D278: using guessed type __int64 gGoodLock_31;

//----- (000000000040734C) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_15_bad()
{
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_31, (__int64)&v1, &v3) )
    v3 = 0LL;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_31, (__int64)&v1, &v2) )
    v2 = 0LL;
  if ( v3 && stdThreadJoin((pthread_t *)v3) )
    stdThreadDestroy(v3);
  if ( v2 && stdThreadJoin((pthread_t *)v2) )
    stdThreadDestroy(v2);
  return printIntLine(v1);
}

//----- (0000000000407404) ----------------------------------------------------
int good1_31()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_31);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_31, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_31, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_31);
    result = printIntLine(v1);
  }
  return result;
}
// 60D278: using guessed type __int64 gGoodLock_31;

//----- (00000000004074DD) ----------------------------------------------------
int good2_22()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_31);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_31, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_31, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_31);
    result = printIntLine(v1);
  }
  return result;
}
// 60D278: using guessed type __int64 gGoodLock_31;

//----- (00000000004075B6) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_15_good()
{
  good1_31();
  return good2_22();
}

//----- (00000000004075D0) ----------------------------------------------------
__int64 helperBad_32()
{
  __int64 result; // rax
  int i; // [rsp+14h] [rbp-4h]

  for ( i = 0; i <= 999999; ++i )
    result = (unsigned int)++gBadInt_16;
  return result;
}
// 60D280: using guessed type int gBadInt_16;

//----- (00000000004075FF) ----------------------------------------------------
int helperGood_32()
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_32);
  for ( i = 0; i <= 999999; ++i )
    ++gGoodInt_16;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_32);
}
// 60D284: using guessed type int gGoodInt_16;
// 60D288: using guessed type __int64 gGoodLock_32;

//----- (0000000000407650) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_10_bad()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  result = globalTrue;
  if ( globalTrue )
  {
    v2 = 0LL;
    v1 = 0LL;
    gBadInt_16 = 0;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_32, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperBad_32, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    result = printIntLine(gBadInt_16);
  }
  return result;
}
// 60D0CC: using guessed type int globalTrue;
// 60D280: using guessed type int gBadInt_16;

//----- (000000000040771D) ----------------------------------------------------
int good1_32()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  if ( globalFalse )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v1 = 0LL;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_32);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_32, 0LL, &v2) )
      v2 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_32, 0LL, &v1) )
      v1 = 0LL;
    if ( v2 && stdThreadJoin((pthread_t *)v2) )
      stdThreadDestroy(v2);
    if ( v1 )
    {
      if ( stdThreadJoin((pthread_t *)v1) )
        stdThreadDestroy(v1);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_32);
    result = printIntLine(gGoodInt_16);
  }
  return result;
}
// 60D284: using guessed type int gGoodInt_16;
// 60D288: using guessed type __int64 gGoodLock_32;
// 60D2A0: using guessed type int globalFalse;

//----- (000000000040780C) ----------------------------------------------------
int good2_23()
{
  int result; // eax
  void *v1; // [rsp+0h] [rbp-10h]
  void *v2; // [rsp+8h] [rbp-8h]

  result = globalTrue;
  if ( globalTrue )
  {
    v2 = 0LL;
    v1 = 0LL;
    result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_32);
    if ( result )
    {
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_32, 0LL, &v2) )
        v2 = 0LL;
      if ( !(unsigned int)stdThreadCreate((__int64)helperGood_32, 0LL, &v1) )
        v1 = 0LL;
      if ( v2 && stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
      if ( v1 )
      {
        if ( stdThreadJoin((pthread_t *)v1) )
          stdThreadDestroy(v1);
      }
      stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_32);
      result = printIntLine(gGoodInt_16);
    }
  }
  return result;
}
// 60D0CC: using guessed type int globalTrue;
// 60D284: using guessed type int gGoodInt_16;
// 60D288: using guessed type __int64 gGoodLock_32;

//----- (00000000004078F0) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__global_int_10_good()
{
  good1_32();
  return good2_23();
}

//----- (000000000040790A) ----------------------------------------------------
_DWORD *__fastcall helperBad_33(_DWORD *a1)
{
  _DWORD *result; // rax
  int i; // [rsp+14h] [rbp-4h]

  result = a1;
  for ( i = 0; i <= 999999; ++i )
  {
    result = a1;
    ++*a1;
  }
  return result;
}

//----- (0000000000407941) ----------------------------------------------------
int __fastcall helperGood_33(_DWORD *a1)
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_33);
  for ( i = 0; i <= 999999; ++i )
    ++*a1;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_33);
}
// 60D290: using guessed type __int64 gGoodLock_33;

//----- (000000000040799A) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_16_bad()
{
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_33, (__int64)&v1, &v3) )
    v3 = 0LL;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_33, (__int64)&v1, &v2) )
    v2 = 0LL;
  if ( v3 && stdThreadJoin((pthread_t *)v3) )
    stdThreadDestroy(v3);
  if ( v2 && stdThreadJoin((pthread_t *)v2) )
    stdThreadDestroy(v2);
  return printIntLine(v1);
}

//----- (0000000000407A52) ----------------------------------------------------
int good1_33()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_33);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_33, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_33, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_33);
    result = printIntLine(v1);
  }
  return result;
}
// 60D290: using guessed type __int64 gGoodLock_33;

//----- (0000000000407B2B) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_16_good()
{
  return good1_33();
}

//----- (0000000000407B3B) ----------------------------------------------------
_DWORD *__fastcall helperBad_34(_DWORD *a1)
{
  _DWORD *result; // rax
  int i; // [rsp+14h] [rbp-4h]

  result = a1;
  for ( i = 0; i <= 999999; ++i )
  {
    result = a1;
    ++*a1;
  }
  return result;
}

//----- (0000000000407B72) ----------------------------------------------------
int __fastcall helperGood_34(_DWORD *a1)
{
  int i; // [rsp+1Ch] [rbp-4h]

  stdThreadLockAcquire((pthread_mutex_t *)gGoodLock_34);
  for ( i = 0; i <= 999999; ++i )
    ++*a1;
  return stdThreadLockRelease((pthread_mutex_t *)gGoodLock_34);
}
// 60D298: using guessed type __int64 gGoodLock_34;

//----- (0000000000407BCB) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_03_bad()
{
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_34, (__int64)&v1, &v3) )
    v3 = 0LL;
  if ( !(unsigned int)stdThreadCreate((__int64)helperBad_34, (__int64)&v1, &v2) )
    v2 = 0LL;
  if ( v3 && stdThreadJoin((pthread_t *)v3) )
    stdThreadDestroy(v3);
  if ( v2 && stdThreadJoin((pthread_t *)v2) )
    stdThreadDestroy(v2);
  return printIntLine(v1);
}

//----- (0000000000407C82) ----------------------------------------------------
int good1_34()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_34);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_34, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_34, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_34);
    result = printIntLine(v1);
  }
  return result;
}
// 60D298: using guessed type __int64 gGoodLock_34;

//----- (0000000000407D5A) ----------------------------------------------------
int good2_24()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  void *v2; // [rsp+10h] [rbp-10h]
  void *v3; // [rsp+18h] [rbp-8h]

  v3 = 0LL;
  v2 = 0LL;
  v1 = 0;
  result = stdThreadLockCreate((pthread_mutex_t **)&gGoodLock_34);
  if ( result )
  {
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_34, (__int64)&v1, &v3) )
      v3 = 0LL;
    if ( !(unsigned int)stdThreadCreate((__int64)helperGood_34, (__int64)&v1, &v2) )
      v2 = 0LL;
    if ( v3 && stdThreadJoin((pthread_t *)v3) )
      stdThreadDestroy(v3);
    if ( v2 )
    {
      if ( stdThreadJoin((pthread_t *)v2) )
        stdThreadDestroy(v2);
    }
    stdThreadLockDestroy((pthread_mutex_t *)gGoodLock_34);
    result = printIntLine(v1);
  }
  return result;
}
// 60D298: using guessed type __int64 gGoodLock_34;

//----- (0000000000407E32) ----------------------------------------------------
int CWE366_Race_Condition_Within_Thread__int_byref_03_good()
{
  good1_34();
  return good2_24();
}

//----- (0000000000407E4C) ----------------------------------------------------
int __fastcall printLine(const char *a1)
{
  int result; // eax

  if ( a1 )
    result = puts(a1);
  return result;
}

//----- (0000000000407E6D) ----------------------------------------------------
int __fastcall printWLine(__int64 a1)
{
  int result; // eax

  if ( a1 )
    result = wprintf("%", a1);
  return result;
}

//----- (0000000000407E98) ----------------------------------------------------
int __fastcall printIntLine(unsigned int a1)
{
  return printf("%d\n", a1);
}

//----- (0000000000407EB9) ----------------------------------------------------
int __fastcall printShortLine(__int16 a1)
{
  return printf("%hd\n", (unsigned int)a1);
}

//----- (0000000000407EDE) ----------------------------------------------------
int __fastcall printFloatLine(float a1)
{
  return printf("%f\n", a1);
}

//----- (0000000000407F04) ----------------------------------------------------
int __fastcall printLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (0000000000407F28) ----------------------------------------------------
int __fastcall printLongLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (0000000000407F4C) ----------------------------------------------------
int __fastcall printSizeTLine(__int64 a1)
{
  return printf("%zu\n", a1);
}

//----- (0000000000407F70) ----------------------------------------------------
int __fastcall printHexCharLine(char a1)
{
  return printf("%02x\n", (unsigned int)a1);
}

//----- (0000000000407F94) ----------------------------------------------------
int __fastcall printWcharLine(int a1)
{
  int v2; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+14h] [rbp-Ch]

  v2 = a1;
  v3 = 0;
  return printf("%ls\n", &v2);
}

//----- (0000000000407FC4) ----------------------------------------------------
int __fastcall printUnsignedLine(unsigned int a1)
{
  return printf("%u\n", a1);
}

//----- (0000000000407FE5) ----------------------------------------------------
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1)
{
  return printf("%02x\n", a1);
}

//----- (0000000000408009) ----------------------------------------------------
int __fastcall printDoubleLine(double a1)
{
  return printf("%g\n", a1);
}

//----- (0000000000408034) ----------------------------------------------------
int __fastcall printStructLine(unsigned int *a1)
{
  return printf("%d -- %d\n", *a1, a1[1]);
}

//----- (0000000000408060) ----------------------------------------------------
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2)
{
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; i < a2; ++i )
    printf("%02x", *(unsigned __int8 *)(a1 + i));
  return puts(s);
}

//----- (00000000004080B7) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL;
        i < a2
     && (*__ctype_b_loc())[*(char *)(2 * i + v4)] & 0x1000
     && (*__ctype_b_loc())[*(char *)(2 * i + 1 + v4)] & 0x1000;
        ++i )
  {
    __isoc99_sscanf(2 * i + v4, "%02x", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400900: using guessed type __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000408190) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL; i < a2 && iswxdigit(*(_DWORD *)(8 * i + v4)) && iswxdigit(*(_DWORD *)(8 * i + 4 + v4)); ++i )
  {
    __isoc99_swscanf(8 * i + v4, "%", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 4009B0: using guessed type __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000408244) ----------------------------------------------------
__int64 globalReturnsTrue()
{
  return 1LL;
}

//----- (000000000040824F) ----------------------------------------------------
__int64 globalReturnsFalse()
{
  return 0LL;
}

//----- (000000000040825A) ----------------------------------------------------
__int64 globalReturnsTrueOrFalse()
{
  return (unsigned int)(rand() % 2);
}

//----- (0000000000408270) ----------------------------------------------------
void good1_35()
{
  ;
}

//----- (0000000000408276) ----------------------------------------------------
void good2_25()
{
  ;
}

//----- (000000000040827C) ----------------------------------------------------
void good3()
{
  ;
}

//----- (0000000000408282) ----------------------------------------------------
void good4()
{
  ;
}

//----- (0000000000408288) ----------------------------------------------------
void good5()
{
  ;
}

//----- (000000000040828E) ----------------------------------------------------
void good6()
{
  ;
}

//----- (0000000000408294) ----------------------------------------------------
void good7()
{
  ;
}

//----- (000000000040829A) ----------------------------------------------------
void good8()
{
  ;
}

//----- (00000000004082A0) ----------------------------------------------------
void good9()
{
  ;
}

//----- (00000000004082A6) ----------------------------------------------------
void bad1()
{
  ;
}

//----- (00000000004082AC) ----------------------------------------------------
void bad2()
{
  ;
}

//----- (00000000004082B2) ----------------------------------------------------
void bad3()
{
  ;
}

//----- (00000000004082B8) ----------------------------------------------------
void bad4()
{
  ;
}

//----- (00000000004082BE) ----------------------------------------------------
void bad5()
{
  ;
}

//----- (00000000004082C4) ----------------------------------------------------
void bad6()
{
  ;
}

//----- (00000000004082CA) ----------------------------------------------------
void bad7()
{
  ;
}

//----- (00000000004082D0) ----------------------------------------------------
void bad8()
{
  ;
}

//----- (00000000004082D6) ----------------------------------------------------
void bad9()
{
  ;
}

//----- (00000000004082DC) ----------------------------------------------------
void __fastcall __noreturn internal_start(void *a1)
{
  (*((void (__fastcall **)(_QWORD))a1 + 1))(*((_QWORD *)a1 + 2));
  pthread_exit(0LL);
}

//----- (000000000040830F) ----------------------------------------------------
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3)
{
  __int64 result; // rax
  void **v4; // [rsp+8h] [rbp-28h]
  pthread_t newthread; // [rsp+20h] [rbp-10h]
  void *arg; // [rsp+28h] [rbp-8h]

  v4 = a3;
  *a3 = 0LL;
  arg = malloc(0x18uLL);
  if ( !arg )
    return 0LL;
  *((_QWORD *)arg + 1) = a1;
  *((_QWORD *)arg + 2) = a2;
  if ( pthread_create(&newthread, 0LL, (void *(*)(void *))internal_start, arg) )
  {
    free(arg);
    result = 0LL;
  }
  else
  {
    *(_QWORD *)arg = newthread;
    *v4 = arg;
    result = 1LL;
  }
  return result;
}

//----- (00000000004083B3) ----------------------------------------------------
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1)
{
  void *thread_return; // [rsp+18h] [rbp-8h]

  return pthread_join(*a1, &thread_return) == 0;
}

//----- (00000000004083E7) ----------------------------------------------------
__int64 __fastcall stdThreadDestroy(void *a1)
{
  free(a1);
  return 1LL;
}

//----- (0000000000408406) ----------------------------------------------------
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1)
{
  __int64 result; // rax
  pthread_mutex_t *mutex; // [rsp+18h] [rbp-8h]

  *a1 = 0LL;
  mutex = (pthread_mutex_t *)malloc(0x28uLL);
  if ( !mutex )
    return 0LL;
  if ( pthread_mutex_init(mutex, 0LL) )
  {
    free(a1);
    result = 0LL;
  }
  else
  {
    *a1 = mutex;
    result = 1LL;
  }
  return result;
}

//----- (000000000040847B) ----------------------------------------------------
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1)
{
  return pthread_mutex_lock(a1);
}

//----- (0000000000408495) ----------------------------------------------------
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1)
{
  return pthread_mutex_unlock(a1);
}

//----- (00000000004084AF) ----------------------------------------------------
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1)
{
  pthread_mutex_destroy(a1);
  free(a1);
}

//----- (00000000004084E0) ----------------------------------------------------
void _libc_csu_init(void)
{
  __int64 v0; // rbx
  signed __int64 v1; // rbp

  v0 = 0LL;
  v1 = &_do_global_dtors_aux_fini_array_entry - _frame_dummy_init_array_entry;
  init_proc();
  if ( v1 )
  {
    do
      _frame_dummy_init_array_entry[v0++]();
    while ( v0 != v1 );
  }
}
// 60CDD0: using guessed type __int64 (__fastcall *_frame_dummy_init_array_entry[2])();
// 60CDD8: using guessed type __int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)();

//----- (0000000000408554) ----------------------------------------------------
void term_proc()
{
  ;
}

// ALL OK, 266 function(s) have been successfully decompiled
