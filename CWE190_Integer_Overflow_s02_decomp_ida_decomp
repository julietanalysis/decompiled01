/* This file was generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2018 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

void *init_proc();
__int64 sub_400B50();
// int printf(const char *format, ...);
// void *memset(void *s, int c, size_t n);
// int close(int fd);
// __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD); weak
// int puts(const char *s);
// uint16_t htons(uint16_t hostshort);
// __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD); weak
// void *malloc(size_t size);
// int __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end);
// ssize_t recv(int fd, void *buf, size_t n, int flags);
// int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr);
// char *fgets(char *s, int n, FILE *stream);
// int iswxdigit(wint_t wc);
// void free(void *ptr);
// int pthread_create(pthread_t *newthread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);
// const unsigned __int16 **__ctype_b_loc(void);
// int pthread_join(pthread_t th, void **thread_return);
// void __noreturn pthread_exit(void *retval);
// int atoi(const char *nptr);
// int connect(int fd, const struct sockaddr *addr, socklen_t len);
// int socket(int domain, int type, int protocol);
// int wprintf(const wchar_t *format, ...);
// __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD); weak
// void srand(unsigned int seed);
// int pthread_mutex_lock(pthread_mutex_t *mutex);
// int rand(void);
// int pthread_mutex_destroy(pthread_mutex_t *mutex);
// int pthread_mutex_unlock(pthread_mutex_t *mutex);
// time_t time(time_t *timer);
// in_addr_t inet_addr(const char *cp);
// __int64 _gmon_start__(void); weak
// void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>);
__int64 deregister_tm_clones();
__int64 register_tm_clones();
__int64 _do_global_dtors_aux();
__int64 frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
int CWE190_Integer_Overflow__int64_t_rand_square_52_bad();
int goodG2B();
int goodB2G();
int CWE190_Integer_Overflow__int64_t_rand_square_52_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_64_bad();
int goodG2B_0();
int goodB2G_0();
int CWE190_Integer_Overflow__int64_t_fscanf_square_64_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_53b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_51b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_51b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_51b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_add_22_bad();
int goodB2G1();
int goodB2G2();
int goodG2B_1();
int CWE190_Integer_Overflow__int64_t_rand_add_22_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_connect_socket_square_09_bad();
int goodB2G1_0();
int goodB2G2_0();
int goodG2B1();
int goodG2B2();
int CWE190_Integer_Overflow__int_connect_socket_square_09_good();
int CWE190_Integer_Overflow__int64_t_rand_square_16_bad();
int goodB2G_1();
int goodG2B_2();
int CWE190_Integer_Overflow__int64_t_rand_square_16_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_13_bad();
int goodB2G1_1();
int goodB2G2_1();
int goodG2B1_0();
int goodG2B2_0();
int CWE190_Integer_Overflow__int64_t_max_multiply_13_good();
__int64 staticReturnsTrue();
__int64 staticReturnsFalse();
int CWE190_Integer_Overflow__int64_t_max_add_08_bad();
int goodB2G1_2();
int goodB2G2_2();
int goodG2B1_1();
int goodG2B2_1();
int CWE190_Integer_Overflow__int64_t_max_add_08_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_68_bad();
int goodG2B_3();
int goodB2G_2();
int CWE190_Integer_Overflow__int_connect_socket_multiply_68_good();
int CWE190_Integer_Overflow__int64_t_rand_square_09_bad();
int goodB2G1_3();
int goodB2G2_3();
int goodG2B1_2();
int goodG2B2_2();
int CWE190_Integer_Overflow__int64_t_rand_square_09_good();
int CWE190_Integer_Overflow__int64_t_max_add_63_bad();
int goodG2B_4();
int goodB2G_3();
int CWE190_Integer_Overflow__int64_t_max_add_63_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_53b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_53b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_53b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_connect_socket_add_66_bad();
int goodG2B_5();
int goodB2G_4();
int CWE190_Integer_Overflow__int_connect_socket_add_66_good();
int CWE190_Integer_Overflow__int64_t_rand_square_51_bad();
int goodG2B_6();
int goodB2G_5();
int CWE190_Integer_Overflow__int64_t_rand_square_51_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_53_bad();
int goodG2B_7();
int goodB2G_6();
int CWE190_Integer_Overflow__int_connect_socket_multiply_53_good();
int CWE190_Integer_Overflow__int64_t_rand_add_13_bad();
int goodB2G1_4();
int goodB2G2_4();
int goodG2B1_3();
int goodG2B2_3();
int CWE190_Integer_Overflow__int64_t_rand_add_13_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54b_goodB2GSink(int a1);
int __fastcall badSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_multiply_21_bad();
int __fastcall goodB2G1Sink(__int64 a1);
int goodB2G1_5();
int __fastcall goodB2G2Sink(__int64 a1);
int goodB2G2_5();
int __fastcall goodG2BSink(__int64 a1);
int goodG2B_8();
int CWE190_Integer_Overflow__int64_t_max_multiply_21_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_03_bad();
int goodB2G1_6();
int goodB2G2_6();
int goodG2B1_4();
int goodG2B2_4();
int CWE190_Integer_Overflow__int64_t_max_multiply_03_good();
int badSink_0();
int CWE190_Integer_Overflow__int64_t_rand_square_45_bad();
int goodG2BSink_0();
int goodG2B_9();
int goodB2GSink();
int goodB2G_7();
int CWE190_Integer_Overflow__int64_t_rand_square_45_good();
int CWE190_Integer_Overflow__int64_t_max_square_14_bad();
int goodB2G1_7();
int goodB2G2_7();
int goodG2B1_5();
int goodG2B2_5();
int CWE190_Integer_Overflow__int64_t_max_square_14_good();
int CWE190_Integer_Overflow__int64_t_rand_square_06_bad();
int goodB2G1_8();
int goodB2G2_8();
int goodG2B1_6();
int goodG2B2_6();
int CWE190_Integer_Overflow__int64_t_rand_square_06_good();
int CWE190_Integer_Overflow__int64_t_max_square_32_bad();
int goodG2B_10();
int goodB2G_8();
int CWE190_Integer_Overflow__int64_t_max_square_32_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_63b_badSink(__int64 *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_63b_goodG2BSink(__int64 *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_63b_goodB2GSink(__int64 *a1);
int __fastcall badSink_1(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_add_21_bad();
int __fastcall goodB2G1Sink_0(__int64 a1);
int goodB2G1_9();
int __fastcall goodB2G2Sink_0(__int64 a1);
int goodB2G2_9();
int __fastcall goodG2BSink_1(__int64 a1);
int goodG2B_11();
int CWE190_Integer_Overflow__int64_t_rand_add_21_good();
int CWE190_Integer_Overflow__int64_t_rand_add_03_bad();
int goodB2G1_10();
int goodB2G2_10();
int goodG2B1_7();
int goodG2B2_7();
int CWE190_Integer_Overflow__int64_t_rand_add_03_good();
int CWE190_Integer_Overflow__int64_t_max_add_17_bad();
int goodB2G_9();
int goodG2B_12();
int CWE190_Integer_Overflow__int64_t_max_add_17_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_connect_socket_square_54_bad();
int goodG2B_13();
int goodB2G_10();
int CWE190_Integer_Overflow__int_connect_socket_square_54_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_67b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_67b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_67b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_add_54_bad();
int goodG2B_14();
int goodB2G_11();
int CWE190_Integer_Overflow__int64_t_max_add_54_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_53d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_53d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_53d_goodB2GSink(__int64 a1);
int __fastcall badSink_2(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_add_44_bad();
int __fastcall goodG2BSink_2(__int64 a1);
int goodG2B_15();
int __fastcall goodB2GSink_0(__int64 a1);
int goodB2G_12();
int CWE190_Integer_Overflow__int64_t_max_add_44_good();
int CWE190_Integer_Overflow__int64_t_rand_add_18_bad();
int goodB2G_13();
int goodG2B_16();
int CWE190_Integer_Overflow__int64_t_rand_add_18_good();
__int64 CWE190_Integer_Overflow__int64_t_rand_add_61b_badSource();
__int64 CWE190_Integer_Overflow__int64_t_rand_add_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__int64_t_rand_add_61b_goodB2GSource();
int CWE190_Integer_Overflow__int64_t_max_multiply_06_bad();
int goodB2G1_11();
int goodB2G2_11();
int goodG2B1_8();
int goodG2B2_8();
int CWE190_Integer_Overflow__int64_t_max_multiply_06_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_22_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_22_goodB2G1Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_22_goodB2G2Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_22_goodG2BSink(__int64 a1);
__int64 badSource();
int CWE190_Integer_Overflow__int64_t_max_square_42_bad();
__int64 goodG2BSource();
int goodG2B_17();
__int64 goodB2GSource();
int goodB2G_14();
int CWE190_Integer_Overflow__int64_t_max_square_42_good();
int CWE190_Integer_Overflow__int_fgets_add_54_bad();
int goodG2B_18();
int goodB2G_15();
int CWE190_Integer_Overflow__int_fgets_add_54_good();
int CWE190_Integer_Overflow__int64_t_max_square_31_bad();
int goodG2B_19();
int goodB2G_16();
int CWE190_Integer_Overflow__int64_t_max_square_31_good();
__int64 __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_61b_badSource(__int64 a1);
__int64 CWE190_Integer_Overflow__int64_t_fscanf_square_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_61b_goodB2GSource(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_multiply_63_bad();
int goodG2B_20();
int goodB2G_17();
int CWE190_Integer_Overflow__int64_t_rand_multiply_63_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_64b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_64b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_64b_goodB2GSink(__int64 *a1);
__int64 CWE190_Integer_Overflow__int64_t_max_add_61b_badSource();
__int64 CWE190_Integer_Overflow__int64_t_max_add_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__int64_t_max_add_61b_goodB2GSource();
int CWE190_Integer_Overflow__int64_t_rand_add_12_bad();
int goodB2G_18();
int goodG2B_21();
int CWE190_Integer_Overflow__int64_t_rand_add_12_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_11_bad();
int goodB2G1_12();
int goodB2G2_12();
int goodG2B1_9();
int goodG2B2_9();
int CWE190_Integer_Overflow__int64_t_max_multiply_11_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_02_bad();
int goodB2G1_13();
int goodB2G2_13();
int goodG2B1_10();
int goodG2B2_10();
int CWE190_Integer_Overflow__int64_t_max_multiply_02_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_52_bad();
int goodG2B_22();
int goodB2G_19();
int CWE190_Integer_Overflow__int_connect_socket_multiply_52_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_51b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_63b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_63b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_63b_goodB2GSink(__int64 *a1);
int CWE190_Integer_Overflow__int64_t_max_square_67_bad();
int goodG2B_23();
int goodB2G_20();
int CWE190_Integer_Overflow__int64_t_max_square_67_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_connect_socket_multiply_16_bad();
int goodB2G_21();
int goodG2B_24();
int CWE190_Integer_Overflow__int_connect_socket_multiply_16_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_add_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_65b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fgets_add_18_bad();
int goodB2G_22();
int goodG2B_25();
int CWE190_Integer_Overflow__int_fgets_add_18_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_22_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_22_goodB2G1Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_22_goodB2G2Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_22_goodG2BSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_square_68b_badSink();
int CWE190_Integer_Overflow__int64_t_max_square_68b_goodG2BSink();
int CWE190_Integer_Overflow__int64_t_max_square_68b_goodB2GSink();
int CWE190_Integer_Overflow__int_connect_socket_multiply_09_bad();
int goodB2G1_14();
int goodB2G2_14();
int goodG2B1_11();
int goodG2B2_11();
int CWE190_Integer_Overflow__int_connect_socket_multiply_09_good();
__int64 CWE190_Integer_Overflow__int_connect_socket_square_65_bad();
int goodG2B_26();
__int64 goodB2G_23();
__int64 CWE190_Integer_Overflow__int_connect_socket_square_65_good();
int CWE190_Integer_Overflow__int64_t_rand_square_64_bad();
int goodG2B_27();
int goodB2G_24();
int CWE190_Integer_Overflow__int64_t_rand_square_64_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54c_goodB2GSink(__int64 a1);
int __fastcall badSink_3(int a1);
__int64 CWE190_Integer_Overflow__int_connect_socket_add_44_bad();
int __fastcall goodG2BSink_3(int a1);
int goodG2B_28();
int __fastcall goodB2GSink_1(int a1);
__int64 goodB2G_25();
__int64 CWE190_Integer_Overflow__int_connect_socket_add_44_good();
int CWE190_Integer_Overflow__int_fgets_add_14_bad();
int goodB2G1_15();
int goodB2G2_15();
int goodG2B1_12();
int goodG2B2_12();
int CWE190_Integer_Overflow__int_fgets_add_14_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_68b_badSink();
int CWE190_Integer_Overflow__int64_t_fscanf_square_68b_goodG2BSink();
int CWE190_Integer_Overflow__int64_t_fscanf_square_68b_goodB2GSink();
int CWE190_Integer_Overflow__int64_t_max_add_52_bad();
int goodG2B_29();
int goodB2G_26();
int CWE190_Integer_Overflow__int64_t_max_add_52_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54e_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54e_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54e_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_add_66_bad();
int goodG2B_30();
int goodB2G_27();
int CWE190_Integer_Overflow__int64_t_rand_add_66_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_53_bad();
int goodG2B_31();
int goodB2G_28();
int CWE190_Integer_Overflow__int64_t_rand_multiply_53_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_51b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_51b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_51b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_square_04_bad();
int goodB2G1_16();
int goodB2G2_16();
int goodG2B1_13();
int goodG2B2_13();
int CWE190_Integer_Overflow__int_connect_socket_square_04_good();
int CWE190_Integer_Overflow__int_connect_socket_square_31_bad();
int goodG2B_32();
int goodB2G_29();
int CWE190_Integer_Overflow__int_connect_socket_square_31_good();
int CWE190_Integer_Overflow__int64_t_max_add_16_bad();
int goodB2G_30();
int goodG2B_33();
int CWE190_Integer_Overflow__int64_t_max_add_16_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_09_bad();
int goodB2G1_17();
int goodB2G2_17();
int goodG2B1_14();
int goodG2B2_14();
int CWE190_Integer_Overflow__int64_t_fscanf_square_09_good();
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_add_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_connect_socket_add_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_add_61b_goodB2GSource(unsigned int a1);
int CWE190_Integer_Overflow__int64_t_max_add_68b_badSink();
int CWE190_Integer_Overflow__int64_t_max_add_68b_goodG2BSink();
int CWE190_Integer_Overflow__int64_t_max_add_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_53b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_53b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_53b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_multiply_11_bad();
int goodB2G1_18();
int goodB2G2_18();
int goodG2B1_15();
int goodG2B2_15();
int CWE190_Integer_Overflow__int_connect_socket_multiply_11_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_02_bad();
int goodB2G1_19();
int goodB2G2_19();
int goodG2B1_16();
int goodG2B2_16();
int CWE190_Integer_Overflow__int_connect_socket_multiply_02_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_52c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_52c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_52c_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_square_67_bad();
int goodG2B_34();
int goodB2G_31();
int CWE190_Integer_Overflow__int_connect_socket_square_67_good();
int CWE190_Integer_Overflow__int_fgets_add_04_bad();
int goodB2G1_20();
int goodB2G2_20();
int goodG2B1_17();
int goodG2B2_17();
int CWE190_Integer_Overflow__int_fgets_add_04_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_68_bad();
int goodG2B_35();
int goodB2G_32();
int CWE190_Integer_Overflow__int64_t_fscanf_square_68_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_10_bad();
int goodB2G1_21();
int goodB2G2_21();
int goodG2B1_18();
int goodG2B2_18();
int CWE190_Integer_Overflow__int_connect_socket_multiply_10_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54d_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_square_54_bad();
int goodG2B_36();
int goodB2G_33();
int CWE190_Integer_Overflow__int64_t_rand_square_54_good();
int CWE190_Integer_Overflow__int_fgets_add_67_bad();
int goodG2B_37();
int goodB2G_34();
int CWE190_Integer_Overflow__int_fgets_add_67_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_53d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_53d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_53d_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_multiply_01_bad();
int goodG2B_38();
int goodB2G_35();
int CWE190_Integer_Overflow__int_connect_socket_multiply_01_good();
int CWE190_Integer_Overflow__int64_t_max_square_15_bad();
int goodB2G1_22();
int goodB2G2_22();
int goodG2B1_19();
int goodG2B2_19();
int CWE190_Integer_Overflow__int64_t_max_square_15_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_53d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_22_goodG2BSink(int a1);
int CWE190_Integer_Overflow__int64_t_max_square_04_bad();
int goodB2G1_23();
int goodB2G2_23();
int goodG2B1_20();
int goodG2B2_20();
int CWE190_Integer_Overflow__int64_t_max_square_04_good();
int CWE190_Integer_Overflow__int_connect_socket_add_07_bad();
int goodB2G1_24();
int goodB2G2_24();
int goodG2B1_21();
int goodG2B2_21();
int CWE190_Integer_Overflow__int_connect_socket_add_07_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_03_bad();
int goodB2G1_25();
int goodB2G2_25();
int goodG2B1_22();
int goodG2B2_22();
int CWE190_Integer_Overflow__int64_t_fscanf_square_03_good();
int CWE190_Integer_Overflow__int64_t_max_add_06_bad();
int goodB2G1_26();
int goodB2G2_26();
int goodG2B1_23();
int goodG2B2_23();
int CWE190_Integer_Overflow__int64_t_max_add_06_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_65b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_65b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_65b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_square_22_bad();
int goodB2G1_27();
int goodB2G2_27();
int goodG2B_39();
int CWE190_Integer_Overflow__int_connect_socket_square_22_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_65b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_51b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_51b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_51b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_multiply_34_bad();
int goodG2B_40();
int goodB2G_36();
int CWE190_Integer_Overflow__int64_t_max_multiply_34_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_16_bad();
int goodB2G_37();
int goodG2B_41();
int CWE190_Integer_Overflow__int64_t_rand_multiply_16_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_53c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_53c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_53c_goodB2GSink(__int64 a1);
__int64 staticReturnsTrue_0();
__int64 staticReturnsFalse_0();
int CWE190_Integer_Overflow__int_connect_socket_multiply_08_bad();
int goodB2G1_28();
int goodB2G2_28();
int goodG2B1_24();
int goodG2B2_24();
int CWE190_Integer_Overflow__int_connect_socket_multiply_08_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_54_bad();
int goodG2B_42();
int goodB2G_38();
int CWE190_Integer_Overflow__int64_t_rand_multiply_54_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_52b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_52b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_52b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_fgets_add_32_bad();
int goodG2B_43();
int goodB2G_39();
int CWE190_Integer_Overflow__int_fgets_add_32_good();
int CWE190_Integer_Overflow__int64_t_max_square_05_bad();
int goodB2G1_29();
int goodB2G2_29();
int goodG2B1_25();
int goodG2B2_25();
int CWE190_Integer_Overflow__int64_t_max_square_05_good();
int __fastcall badSink_4(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_square_41_bad();
int __fastcall goodG2BSink_4(__int64 a1);
int goodG2B_44();
int __fastcall goodB2GSink_2(__int64 a1);
int goodB2G_40();
int CWE190_Integer_Overflow__int64_t_max_square_41_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_64b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_64b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_64b_goodB2GSink(_QWORD *a1);
__int64 CWE190_Integer_Overflow__int64_t_rand_square_65_bad();
int goodG2B_45();
__int64 goodB2G_41();
__int64 CWE190_Integer_Overflow__int64_t_rand_square_65_good();
int CWE190_Integer_Overflow__int_connect_socket_square_13_bad();
int goodB2G1_30();
int goodB2G2_30();
int goodG2B1_26();
int goodG2B2_26();
int CWE190_Integer_Overflow__int_connect_socket_square_13_good();
__int64 CWE190_Integer_Overflow__int64_t_fscanf_square_65_bad();
int goodG2B_46();
__int64 goodB2G_42();
__int64 CWE190_Integer_Overflow__int64_t_fscanf_square_65_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_65b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_65b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_65b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_multiply_51_bad();
int goodG2B_47();
int goodB2G_43();
int CWE190_Integer_Overflow__int64_t_rand_multiply_51_good();
int CWE190_Integer_Overflow__int64_t_max_square_34_bad();
int goodG2B_48();
int goodB2G_44();
int CWE190_Integer_Overflow__int64_t_max_square_34_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_fgets_add_13_bad();
int goodB2G1_31();
int goodB2G2_31();
int goodG2B1_27();
int goodG2B2_27();
int CWE190_Integer_Overflow__int_fgets_add_13_good();
int CWE190_Integer_Overflow__int64_t_rand_square_68b_badSink();
int CWE190_Integer_Overflow__int64_t_rand_square_68b_goodG2BSink();
int CWE190_Integer_Overflow__int64_t_rand_square_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_51b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_51b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_51b_goodB2GSink(__int64 a1);
int badSink_5();
int CWE190_Integer_Overflow__int64_t_rand_multiply_45_bad();
int goodG2BSink_5();
int goodG2B_49();
int goodB2GSink_3();
int goodB2G_45();
int CWE190_Integer_Overflow__int64_t_rand_multiply_45_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_16_bad();
int goodB2G_46();
int goodG2B_50();
int CWE190_Integer_Overflow__int64_t_fscanf_square_16_good();
int CWE190_Integer_Overflow__int64_t_max_add_64_bad();
int goodG2B_51();
int goodB2G_47();
int CWE190_Integer_Overflow__int64_t_max_add_64_good();
int __fastcall badSink_6(int a1);
int CWE190_Integer_Overflow__int_connect_socket_square_21_bad();
int __fastcall goodB2G1Sink_1(int a1);
int goodB2G1_32();
int __fastcall goodB2G2Sink_1(int a1);
int goodB2G2_32();
int __fastcall goodG2BSink_6(int a1);
int goodG2B_52();
int CWE190_Integer_Overflow__int_connect_socket_square_21_good();
int CWE190_Integer_Overflow__int_connect_socket_square_03_bad();
int goodB2G1_33();
int goodB2G2_33();
int goodG2B1_28();
int goodG2B2_28();
int CWE190_Integer_Overflow__int_connect_socket_square_03_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_06_bad();
int goodB2G1_34();
int goodB2G2_34();
int goodG2B1_29();
int goodG2B2_29();
int CWE190_Integer_Overflow__int64_t_rand_multiply_06_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_32_bad();
int goodG2B_53();
int goodB2G_48();
int CWE190_Integer_Overflow__int64_t_max_multiply_32_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_63b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_63b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_63b_goodB2GSink(__int64 *a1);
int CWE190_Integer_Overflow__int_connect_socket_square_18_bad();
int goodB2G_49();
int goodG2B_54();
int CWE190_Integer_Overflow__int_connect_socket_square_18_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_54_bad();
int goodG2B_55();
int goodB2G_50();
int CWE190_Integer_Overflow__int_connect_socket_multiply_54_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_53b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_53b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_53b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_67b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_67b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_67b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54e_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54e_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54e_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_square_66_bad();
int goodG2B_56();
int goodB2G_51();
int CWE190_Integer_Overflow__int64_t_max_square_66_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_52c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_52c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_52c_goodB2GSink(__int64 a1);
int __fastcall badSink_7(int a1);
int CWE190_Integer_Overflow__int_fgets_add_21_bad();
int __fastcall goodB2G1Sink_2(int a1);
int goodB2G1_35();
int __fastcall goodB2G2Sink_2(int a1);
int goodB2G2_35();
int __fastcall goodG2BSink_7(int a1);
int goodG2B_57();
int CWE190_Integer_Overflow__int_fgets_add_21_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_51_bad();
int goodG2B_58();
int goodB2G_52();
int CWE190_Integer_Overflow__int64_t_fscanf_square_51_good();
int badSink_8();
int CWE190_Integer_Overflow__int_connect_socket_add_45_bad();
int goodG2BSink_8();
int goodG2B_59();
int goodB2GSink_4();
int goodB2G_53();
int CWE190_Integer_Overflow__int_connect_socket_add_45_good();
int CWE190_Integer_Overflow__int64_t_rand_square_68_bad();
int goodG2B_60();
int goodB2G_54();
int CWE190_Integer_Overflow__int64_t_rand_square_68_good();
int CWE190_Integer_Overflow__int64_t_rand_add_32_bad();
int goodG2B_61();
int goodB2G_55();
int CWE190_Integer_Overflow__int64_t_rand_add_32_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_04_bad();
int goodB2G1_36();
int goodB2G2_36();
int goodG2B1_30();
int goodG2B2_30();
int CWE190_Integer_Overflow__int64_t_max_multiply_04_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_31_bad();
int goodG2B_62();
int goodB2G_56();
int CWE190_Integer_Overflow__int64_t_max_multiply_31_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_65b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_64b_badSink(__int64 *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_64b_goodG2BSink(__int64 *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_64b_goodB2GSink(__int64 *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_67b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_67b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_67b_goodB2GSink(__int64 a1);
int __fastcall badSink_9(int a1);
int CWE190_Integer_Overflow__int_connect_socket_multiply_21_bad();
int __fastcall goodB2G1Sink_3(int a1);
int goodB2G1_37();
int __fastcall goodB2G2Sink_3(int a1);
int goodB2G2_37();
int __fastcall goodG2BSink_9(int a1);
int goodG2B_63();
int CWE190_Integer_Overflow__int_connect_socket_multiply_21_good();
int CWE190_Integer_Overflow__int_fgets_add_31_bad();
int goodG2B_64();
int goodB2G_57();
int CWE190_Integer_Overflow__int_fgets_add_31_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_68b_badSink();
int CWE190_Integer_Overflow__int_connect_socket_multiply_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_connect_socket_multiply_68b_goodB2GSink();
int CWE190_Integer_Overflow__int64_t_rand_square_53_bad();
int goodG2B_65();
int goodB2G_58();
int CWE190_Integer_Overflow__int64_t_rand_square_53_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_06_bad();
int goodB2G1_38();
int goodB2G2_38();
int goodG2B1_31();
int goodG2B2_31();
int CWE190_Integer_Overflow__int64_t_fscanf_square_06_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_67_bad();
int goodG2B_66();
int goodB2G_59();
int CWE190_Integer_Overflow__int64_t_max_multiply_67_good();
int CWE190_Integer_Overflow__int_fgets_add_12_bad();
int goodB2G_60();
int goodG2B_67();
int CWE190_Integer_Overflow__int_fgets_add_12_good();
int CWE190_Integer_Overflow__int_connect_socket_add_15_bad();
int goodB2G1_39();
int goodB2G2_39();
int goodG2B1_32();
int goodG2B2_32();
int CWE190_Integer_Overflow__int_connect_socket_add_15_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_53c_goodB2GSink(int a1);
__int64 __fastcall badSource_0(unsigned int a1);
int CWE190_Integer_Overflow__int_connect_socket_add_42_bad();
__int64 goodG2BSource_0();
int goodG2B_68();
__int64 __fastcall goodB2GSource_0(unsigned int a1);
int goodB2G_61();
int CWE190_Integer_Overflow__int_connect_socket_add_42_good();
int CWE190_Integer_Overflow__int64_t_rand_add_04_bad();
int goodB2G1_40();
int goodB2G2_40();
int goodG2B1_33();
int goodG2B2_33();
int CWE190_Integer_Overflow__int64_t_rand_add_04_good();
int CWE190_Integer_Overflow__int64_t_rand_add_31_bad();
int goodG2B_69();
int goodB2G_62();
int CWE190_Integer_Overflow__int64_t_rand_add_31_good();
int CWE190_Integer_Overflow__int_connect_socket_square_02_bad();
int goodB2G1_41();
int goodB2G2_41();
int goodG2B1_34();
int goodG2B2_34();
int CWE190_Integer_Overflow__int_connect_socket_square_02_good();
int CWE190_Integer_Overflow__int64_t_rand_add_63_bad();
int goodG2B_70();
int goodB2G_63();
int CWE190_Integer_Overflow__int64_t_rand_add_63_good();
__int64 CWE190_Integer_Overflow__int_connect_socket_multiply_65_bad();
int goodG2B_71();
__int64 goodB2G_64();
__int64 CWE190_Integer_Overflow__int_connect_socket_multiply_65_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_64_bad();
int goodG2B_72();
int goodB2G_65();
int CWE190_Integer_Overflow__int64_t_rand_multiply_64_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_add_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_rand_add_67_bad();
int goodG2B_73();
int goodB2G_66();
int CWE190_Integer_Overflow__int64_t_rand_add_67_good();
int CWE190_Integer_Overflow__int_connect_socket_square_10_bad();
int goodB2G1_42();
int goodB2G2_42();
int goodG2B1_35();
int goodG2B2_35();
int CWE190_Integer_Overflow__int_connect_socket_square_10_good();
int CWE190_Integer_Overflow__int_fgets_add_11_bad();
int goodB2G1_43();
int goodB2G2_43();
int goodG2B1_36();
int goodG2B2_36();
int CWE190_Integer_Overflow__int_fgets_add_11_good();
int CWE190_Integer_Overflow__int_fgets_add_02_bad();
int goodB2G1_44();
int goodB2G2_44();
int goodG2B1_37();
int goodG2B2_37();
int CWE190_Integer_Overflow__int_fgets_add_02_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_64b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_64b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_64b_goodB2GSink(__int64 *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_52b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_52b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_52b_goodB2GSink(__int64 a1);
int __fastcall badSink_10(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_square_21_bad();
int __fastcall goodB2G1Sink_4(__int64 a1);
int goodB2G1_45();
int __fastcall goodB2G2Sink_4(__int64 a1);
int goodB2G2_45();
int __fastcall goodG2BSink_10(__int64 a1);
int goodG2B_74();
int CWE190_Integer_Overflow__int64_t_rand_square_21_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_22_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_22_goodB2G1Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_22_goodB2G2Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_22_goodG2BSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_add_05_bad();
int goodB2G1_46();
int goodB2G2_46();
int goodG2B1_38();
int goodG2B2_38();
int CWE190_Integer_Overflow__int_connect_socket_add_05_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_22_bad();
int goodB2G1_47();
int goodB2G2_47();
int goodG2B_75();
int CWE190_Integer_Overflow__int64_t_max_multiply_22_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_52c_goodB2GSink(int a1);
int __fastcall badSink_11(int a1);
int CWE190_Integer_Overflow__int_connect_socket_add_41_bad();
int __fastcall goodG2BSink_11(int a1);
int goodG2B_76();
int __fastcall goodB2GSink_5(int a1);
int goodB2G_67();
int CWE190_Integer_Overflow__int_connect_socket_add_41_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fgets_add_10_bad();
int goodB2G1_48();
int goodB2G2_48();
int goodG2B1_39();
int goodG2B2_39();
int CWE190_Integer_Overflow__int_fgets_add_10_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_54_bad();
int goodG2B_77();
int goodB2G_68();
int CWE190_Integer_Overflow__int64_t_max_multiply_54_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_52c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_52c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_52c_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_63b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_63b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_63b_goodB2GSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_connect_socket_add_34_bad();
int goodG2B_78();
int goodB2G_69();
int CWE190_Integer_Overflow__int_connect_socket_add_34_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54d_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_fgets_add_01_bad();
int goodG2B_79();
int goodB2G_70();
int CWE190_Integer_Overflow__int_fgets_add_01_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_multiply_34_bad();
int goodG2B_80();
int goodB2G_71();
int CWE190_Integer_Overflow__int_connect_socket_multiply_34_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_66_bad();
int goodG2B_81();
int goodB2G_72();
int CWE190_Integer_Overflow__int64_t_fscanf_square_66_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_07_bad();
int goodB2G1_49();
int goodB2G2_49();
int goodG2B1_40();
int goodG2B2_40();
int CWE190_Integer_Overflow__int_connect_socket_multiply_07_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_65b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_65b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_65b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_add_51_bad();
int goodG2B_82();
int goodB2G_73();
int CWE190_Integer_Overflow__int64_t_rand_add_51_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_rand_multiply_09_bad();
int goodB2G1_50();
int goodB2G2_50();
int goodG2B1_41();
int goodG2B2_41();
int CWE190_Integer_Overflow__int64_t_rand_multiply_09_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_53b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_53b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_53b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_square_15_bad();
int goodB2G1_51();
int goodB2G2_51();
int goodG2B1_42();
int goodG2B2_42();
int CWE190_Integer_Overflow__int64_t_rand_square_15_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_63b_goodB2GSink(int *a1);
int CWE190_Integer_Overflow__int64_t_max_add_14_bad();
int goodB2G1_52();
int goodB2G2_52();
int goodG2B1_43();
int goodG2B2_43();
int CWE190_Integer_Overflow__int64_t_max_add_14_good();
int CWE190_Integer_Overflow__int64_t_rand_add_06_bad();
int goodB2G1_53();
int goodB2G2_53();
int goodG2B1_44();
int goodG2B2_44();
int CWE190_Integer_Overflow__int64_t_rand_add_06_good();
int CWE190_Integer_Overflow__int64_t_max_add_32_bad();
int goodG2B_83();
int goodB2G_74();
int CWE190_Integer_Overflow__int64_t_max_add_32_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_64b_badSink(__int64 *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_64b_goodG2BSink(__int64 *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_64b_goodB2GSink(__int64 *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_63b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int_connect_socket_add_54_bad();
int goodG2B_84();
int goodB2G_75();
int CWE190_Integer_Overflow__int_connect_socket_add_54_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_67b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_67b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_67b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_square_53_bad();
int goodG2B_85();
int goodB2G_76();
int CWE190_Integer_Overflow__int64_t_max_square_53_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_18_bad();
int goodB2G_77();
int goodG2B_86();
int CWE190_Integer_Overflow__int64_t_max_multiply_18_good();
int CWE190_Integer_Overflow__int_connect_socket_square_63_bad();
int goodG2B_87();
int goodB2G_78();
int CWE190_Integer_Overflow__int_connect_socket_square_63_good();
int CWE190_Integer_Overflow__int64_t_rand_square_05_bad();
int goodB2G1_54();
int goodB2G2_54();
int goodG2B1_45();
int goodG2B2_45();
int CWE190_Integer_Overflow__int64_t_rand_square_05_good();
int CWE190_Integer_Overflow__int64_t_max_add_04_bad();
int goodB2G1_55();
int goodB2G2_55();
int goodG2B1_46();
int goodG2B2_46();
int CWE190_Integer_Overflow__int64_t_max_add_04_good();
int CWE190_Integer_Overflow__int64_t_rand_add_14_bad();
int goodB2G1_56();
int goodB2G2_56();
int goodG2B1_47();
int goodG2B2_47();
int CWE190_Integer_Overflow__int64_t_rand_add_14_good();
int __fastcall badSink_12(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_square_41_bad();
int __fastcall goodG2BSink_12(__int64 a1);
int goodG2B_88();
int __fastcall goodB2GSink_6(__int64 a1);
int goodB2G_79();
int CWE190_Integer_Overflow__int64_t_rand_square_41_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_64b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_64b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_64b_goodB2GSink(_QWORD *a1);
int CWE190_Integer_Overflow__int64_t_max_multiply_64_bad();
int goodG2B_89();
int goodB2G_80();
int CWE190_Integer_Overflow__int64_t_max_multiply_64_good();
int CWE190_Integer_Overflow__int_fgets_add_63_bad();
int goodG2B_90();
int goodB2G_81();
int CWE190_Integer_Overflow__int_fgets_add_63_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54e_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54e_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54e_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_square_14_bad();
int goodB2G1_57();
int goodB2G2_57();
int goodG2B1_48();
int goodG2B2_48();
int CWE190_Integer_Overflow__int64_t_fscanf_square_14_good();
int CWE190_Integer_Overflow__int64_t_max_add_67_bad();
int goodG2B_91();
int goodB2G_82();
int CWE190_Integer_Overflow__int64_t_max_add_67_good();
int CWE190_Integer_Overflow__int64_t_rand_square_34_bad();
int goodG2B_92();
int goodB2G_83();
int CWE190_Integer_Overflow__int64_t_rand_square_34_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_53c_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_53d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_53d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_53d_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_52b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_52b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_52b_goodB2GSink(__int64 a1);
int badSink_13();
int CWE190_Integer_Overflow__int64_t_max_add_45_bad();
int goodG2BSink_13();
int goodG2B_93();
int goodB2GSink_7();
int goodB2G_84();
int CWE190_Integer_Overflow__int64_t_max_add_45_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_22_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_22_goodB2G1Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_22_goodB2G2Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_22_goodG2BSink(__int64 a1);
int CWE190_Integer_Overflow__int_fgets_add_15_bad();
int goodB2G1_58();
int goodB2G2_58();
int goodG2B1_49();
int goodG2B2_49();
int CWE190_Integer_Overflow__int_fgets_add_15_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54d_goodB2GSink(int a1);
int badSink_14();
int CWE190_Integer_Overflow__int_connect_socket_multiply_45_bad();
int goodG2BSink_14();
int goodG2B_94();
int goodB2GSink_8();
int goodB2G_85();
int CWE190_Integer_Overflow__int_connect_socket_multiply_45_good();
__int64 CWE190_Integer_Overflow__int_connect_socket_add_65_bad();
int goodG2B_95();
__int64 goodB2G_86();
__int64 CWE190_Integer_Overflow__int_connect_socket_add_65_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_14_bad();
int goodB2G1_59();
int goodB2G2_59();
int goodG2B1_50();
int goodG2B2_50();
int CWE190_Integer_Overflow__int64_t_rand_multiply_14_good();
int CWE190_Integer_Overflow__int64_t_rand_add_64_bad();
int goodG2B_96();
int goodB2G_87();
int CWE190_Integer_Overflow__int64_t_rand_add_64_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_32_bad();
int goodG2B_97();
int goodB2G_88();
int CWE190_Integer_Overflow__int64_t_rand_multiply_32_good();
void CWE190_Integer_Overflow__int_connect_socket_square_17_bad();
void goodB2G_89();
int goodG2B_98();
int CWE190_Integer_Overflow__int_connect_socket_square_17_good();
int __fastcall badSink_15(int a1);
__int64 CWE190_Integer_Overflow__int_connect_socket_square_44_bad();
int __fastcall goodG2BSink_15(int a1);
int goodG2B_99();
int __fastcall goodB2GSink_9(int a1);
__int64 goodB2G_90();
__int64 CWE190_Integer_Overflow__int_connect_socket_square_44_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_67b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_67b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_67b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_square_52_bad();
int goodG2B_100();
int goodB2G_91();
int CWE190_Integer_Overflow__int64_t_max_square_52_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_53_bad();
int goodG2B_101();
int goodB2G_92();
int CWE190_Integer_Overflow__int64_t_fscanf_square_53_good();
int CWE190_Integer_Overflow__int64_t_rand_square_66_bad();
int goodG2B_102();
int goodB2G_93();
int CWE190_Integer_Overflow__int64_t_rand_square_66_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_51b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_51b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_51b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_add_22_bad();
int goodB2G1_60();
int goodB2G2_60();
int goodG2B_103();
int CWE190_Integer_Overflow__int64_t_max_add_22_good();
void CWE190_Integer_Overflow__int_fgets_add_17_bad();
void goodB2G_94();
int goodG2B_104();
int CWE190_Integer_Overflow__int_fgets_add_17_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_32_bad();
int goodG2B_105();
int goodB2G_95();
int CWE190_Integer_Overflow__int64_t_fscanf_square_32_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_15_bad();
int goodB2G1_61();
int goodB2G2_61();
int goodG2B1_51();
int goodG2B2_51();
int CWE190_Integer_Overflow__int_connect_socket_multiply_15_good();
int CWE190_Integer_Overflow__int64_t_max_square_16_bad();
int goodB2G_96();
int goodG2B_106();
int CWE190_Integer_Overflow__int64_t_max_square_16_good();
int __fastcall badSink_16(int a1);
__int64 CWE190_Integer_Overflow__int_fgets_add_44_bad();
int __fastcall goodG2BSink_16(int a1);
int goodG2B_107();
int __fastcall goodB2GSink_10(int a1);
__int64 goodB2G_97();
__int64 CWE190_Integer_Overflow__int_fgets_add_44_good();
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_square_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_connect_socket_square_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_square_61b_goodB2GSource(unsigned int a1);
__int64 __fastcall badSource_1(unsigned int a1);
int CWE190_Integer_Overflow__int_connect_socket_multiply_42_bad();
__int64 goodG2BSource_1();
int goodG2B_108();
__int64 __fastcall goodB2GSource_1(unsigned int a1);
int goodB2G_98();
int CWE190_Integer_Overflow__int_connect_socket_multiply_42_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_04_bad();
int goodB2G1_62();
int goodB2G2_62();
int goodG2B1_52();
int goodG2B2_52();
int CWE190_Integer_Overflow__int64_t_rand_multiply_04_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_31_bad();
int goodG2B_109();
int goodB2G_99();
int CWE190_Integer_Overflow__int64_t_rand_multiply_31_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_add_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_53d_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54d_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_multiply_01_bad();
int goodG2B_110();
int goodB2G_100();
int CWE190_Integer_Overflow__int64_t_rand_multiply_01_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_12_bad();
int goodB2G_101();
int goodG2B_111();
int CWE190_Integer_Overflow__int64_t_max_multiply_12_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_53b_goodB2GSink(int a1);
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_add_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_fgets_add_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_add_61b_goodB2GSource(unsigned int a1);
int CWE190_Integer_Overflow__int64_t_rand_multiply_67_bad();
int goodG2B_112();
int goodB2G_102();
int CWE190_Integer_Overflow__int64_t_rand_multiply_67_good();
int CWE190_Integer_Overflow__int64_t_max_square_51_bad();
int goodG2B_113();
int goodB2G_103();
int CWE190_Integer_Overflow__int64_t_max_square_51_good();
int CWE190_Integer_Overflow__int64_t_max_add_13_bad();
int goodB2G1_63();
int goodB2G2_63();
int goodG2B1_53();
int goodG2B2_53();
int CWE190_Integer_Overflow__int64_t_max_add_13_good();
int CWE190_Integer_Overflow__int64_t_max_add_31_bad();
int goodG2B_114();
int goodB2G_104();
int CWE190_Integer_Overflow__int64_t_max_add_31_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_52b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_52b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_52b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_add_68_bad();
int goodG2B_115();
int goodB2G_105();
int CWE190_Integer_Overflow__int_connect_socket_add_68_good();
int CWE190_Integer_Overflow__int_connect_socket_square_61_bad();
int goodG2B_116();
int goodB2G_106();
int CWE190_Integer_Overflow__int_connect_socket_square_61_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_67b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_67b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_67b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_22_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodB2G1Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodB2G2Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodG2BSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_multiply_05_bad();
int goodB2G1_64();
int goodB2G2_64();
int goodG2B1_54();
int goodG2B2_54();
int CWE190_Integer_Overflow__int_connect_socket_multiply_05_good();
int __fastcall badSink_17(int a1);
int CWE190_Integer_Overflow__int_connect_socket_multiply_41_bad();
int __fastcall goodG2BSink_17(int a1);
int goodG2B_117();
int __fastcall goodB2GSink_11(int a1);
int goodB2G_107();
int CWE190_Integer_Overflow__int_connect_socket_multiply_41_good();
int badSink_18();
int CWE190_Integer_Overflow__int64_t_max_square_45_bad();
int goodG2BSink_18();
int goodG2B_118();
int goodB2GSink_12();
int goodB2G_108();
int CWE190_Integer_Overflow__int64_t_max_square_45_good();
int CWE190_Integer_Overflow__int_connect_socket_square_07_bad();
int goodB2G1_65();
int goodB2G2_65();
int goodG2B1_55();
int goodG2B2_55();
int CWE190_Integer_Overflow__int_connect_socket_square_07_good();
int CWE190_Integer_Overflow__int64_t_max_square_06_bad();
int goodB2G1_66();
int goodB2G2_66();
int goodG2B1_56();
int goodG2B2_56();
int CWE190_Integer_Overflow__int64_t_max_square_06_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_63b_badSink(__int64 *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_63b_goodG2BSink(__int64 *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_63b_goodB2GSink(__int64 *a1);
int CWE190_Integer_Overflow__int_connect_socket_add_53_bad();
int goodG2B_119();
int goodB2G_109();
int CWE190_Integer_Overflow__int_connect_socket_add_53_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_04_bad();
int goodB2G1_67();
int goodB2G2_67();
int goodG2B1_57();
int goodG2B2_57();
int CWE190_Integer_Overflow__int64_t_fscanf_square_04_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_31_bad();
int goodG2B_120();
int goodB2G_110();
int CWE190_Integer_Overflow__int64_t_fscanf_square_31_good();
int __fastcall badSink_19(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_add_21_bad();
int __fastcall goodB2G1Sink_5(__int64 a1);
int goodB2G1_68();
int __fastcall goodB2G2Sink_5(__int64 a1);
int goodB2G2_68();
int __fastcall goodG2BSink_19(__int64 a1);
int goodG2B_121();
int CWE190_Integer_Overflow__int64_t_max_add_21_good();
int CWE190_Integer_Overflow__int64_t_max_add_03_bad();
int goodB2G1_69();
int goodB2G2_69();
int goodG2B1_58();
int goodG2B2_58();
int CWE190_Integer_Overflow__int64_t_max_add_03_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_multiply_22_bad();
int goodB2G1_70();
int goodB2G2_70();
int goodG2B_122();
int CWE190_Integer_Overflow__int64_t_rand_multiply_22_good();
int CWE190_Integer_Overflow__int_fgets_add_07_bad();
int goodB2G1_71();
int goodB2G2_71();
int goodG2B1_59();
int goodG2B2_59();
int CWE190_Integer_Overflow__int_fgets_add_07_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_67_bad();
int goodG2B_123();
int goodB2G_111();
int CWE190_Integer_Overflow__int64_t_fscanf_square_67_good();
int CWE190_Integer_Overflow__int64_t_max_add_18_bad();
int goodB2G_112();
int goodG2B_124();
int CWE190_Integer_Overflow__int64_t_max_add_18_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_63b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_63b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_63b_goodB2GSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_22_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodB2G1Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodB2G2Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54d_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_64b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_64b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_64b_goodB2GSink(__int64 *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_52b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_22_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_22_goodB2G1Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_22_goodB2G2Sink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_22_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_rand_multiply_13_bad();
int goodB2G1_72();
int goodB2G2_72();
int goodG2B1_60();
int goodG2B2_60();
int CWE190_Integer_Overflow__int64_t_rand_multiply_13_good();
void CWE190_Integer_Overflow__int64_t_rand_multiply_17_bad();
void goodB2G_113();
int goodG2B_125();
int CWE190_Integer_Overflow__int64_t_rand_multiply_17_good();
int CWE190_Integer_Overflow__int_fgets_add_61_bad();
int goodG2B_126();
int goodB2G_114();
int CWE190_Integer_Overflow__int_fgets_add_61_good();
int __fastcall badSink_20(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_square_44_bad();
int __fastcall goodG2BSink_20(__int64 a1);
int goodG2B_127();
int __fastcall goodB2GSink_13(__int64 a1);
int goodB2G_115();
int CWE190_Integer_Overflow__int64_t_max_square_44_good();
int CWE190_Integer_Overflow__int_fgets_add_34_bad();
int goodG2B_128();
int goodB2G_116();
int CWE190_Integer_Overflow__int_fgets_add_34_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_22_bad();
int goodB2G1_73();
int goodB2G2_73();
int goodG2B_129();
int CWE190_Integer_Overflow__int64_t_fscanf_square_22_good();
int CWE190_Integer_Overflow__int64_t_max_square_64_bad();
int goodG2B_130();
int goodB2G_117();
int CWE190_Integer_Overflow__int64_t_max_square_64_good();
int CWE190_Integer_Overflow__int64_t_max_add_11_bad();
int goodB2G1_74();
int goodB2G2_74();
int goodG2B1_61();
int goodG2B2_61();
int CWE190_Integer_Overflow__int64_t_max_add_11_good();
int CWE190_Integer_Overflow__int64_t_max_add_02_bad();
int goodB2G1_75();
int goodB2G2_75();
int goodG2B1_62();
int goodG2B2_62();
int CWE190_Integer_Overflow__int64_t_max_add_02_good();
int CWE190_Integer_Overflow__int_connect_socket_add_52_bad();
int goodG2B_131();
int goodB2G_118();
int CWE190_Integer_Overflow__int_connect_socket_add_52_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_fscanf_square_52_bad();
int goodG2B_132();
int goodB2G_119();
int CWE190_Integer_Overflow__int64_t_fscanf_square_52_good();
int CWE190_Integer_Overflow__int_connect_socket_add_63_bad();
int goodG2B_133();
int goodB2G_120();
int CWE190_Integer_Overflow__int_connect_socket_add_63_good();
int CWE190_Integer_Overflow__int_connect_socket_add_16_bad();
int goodB2G_121();
int goodG2B_134();
int CWE190_Integer_Overflow__int_connect_socket_add_16_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54d_goodB2GSink(__int64 a1);
int __fastcall badSink_21(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_multiply_21_bad();
int __fastcall goodB2G1Sink_6(__int64 a1);
int goodB2G1_76();
int __fastcall goodB2G2Sink_6(__int64 a1);
int goodB2G2_76();
int __fastcall goodG2BSink_21(__int64 a1);
int goodG2B_135();
int CWE190_Integer_Overflow__int64_t_rand_multiply_21_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_03_bad();
int goodB2G1_77();
int goodB2G2_77();
int goodG2B1_63();
int goodG2B2_63();
int CWE190_Integer_Overflow__int64_t_rand_multiply_03_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_17_bad();
int goodB2G_122();
int goodG2B_136();
int CWE190_Integer_Overflow__int64_t_max_multiply_17_good();
int CWE190_Integer_Overflow__int_connect_socket_add_10_bad();
int goodB2G1_78();
int goodB2G2_78();
int goodG2B1_64();
int goodG2B2_64();
int CWE190_Integer_Overflow__int_connect_socket_add_10_good();
int CWE190_Integer_Overflow__int64_t_max_add_10_bad();
int goodB2G1_79();
int goodB2G2_79();
int goodG2B1_65();
int goodG2B2_65();
int CWE190_Integer_Overflow__int64_t_max_add_10_good();
int __fastcall badSink_22(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_multiply_44_bad();
int __fastcall goodG2BSink_22(__int64 a1);
int goodG2B_137();
int __fastcall goodB2GSink_14(__int64 a1);
int goodB2G_123();
int CWE190_Integer_Overflow__int64_t_max_multiply_44_good();
int CWE190_Integer_Overflow__int_connect_socket_add_01_bad();
int goodG2B_138();
int goodB2G_124();
int CWE190_Integer_Overflow__int_connect_socket_add_01_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_18_bad();
int goodB2G_125();
int goodG2B_139();
int CWE190_Integer_Overflow__int64_t_rand_multiply_18_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_13_bad();
int goodB2G1_80();
int goodB2G2_80();
int goodG2B1_66();
int goodG2B2_66();
int CWE190_Integer_Overflow__int64_t_fscanf_square_13_good();
int CWE190_Integer_Overflow__int64_t_rand_add_01_bad();
int goodG2B_140();
int goodB2G_126();
int CWE190_Integer_Overflow__int64_t_rand_add_01_good();
int CWE190_Integer_Overflow__int64_t_rand_square_14_bad();
int goodB2G1_81();
int goodB2G2_81();
int goodG2B1_67();
int goodG2B2_67();
int CWE190_Integer_Overflow__int64_t_rand_square_14_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54c_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_add_01_bad();
int goodG2B_141();
int goodB2G_127();
int CWE190_Integer_Overflow__int64_t_max_add_01_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_10_bad();
int goodB2G1_82();
int goodB2G2_82();
int goodG2B1_68();
int goodG2B2_68();
int CWE190_Integer_Overflow__int64_t_max_multiply_10_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_53d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_53d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_53d_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_add_15_bad();
int goodB2G1_83();
int goodB2G2_83();
int goodG2B1_69();
int goodG2B2_69();
int CWE190_Integer_Overflow__int64_t_rand_add_15_good();
__int64 CWE190_Integer_Overflow__int64_t_max_multiply_61b_badSource();
__int64 CWE190_Integer_Overflow__int64_t_max_multiply_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__int64_t_max_multiply_61b_goodB2GSource();
void CWE190_Integer_Overflow__int64_t_rand_add_17_bad();
void goodB2G_128();
int goodG2B_142();
int CWE190_Integer_Overflow__int64_t_rand_add_17_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_12_bad();
int goodB2G_129();
int goodG2B_143();
int CWE190_Integer_Overflow__int64_t_rand_multiply_12_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_67b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_67b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_67b_goodB2GSink(__int64 a1);
int __fastcall badSink_23(__int64 a1);
__int64 CWE190_Integer_Overflow__int64_t_rand_add_44_bad();
int __fastcall goodG2BSink_23(__int64 a1);
int goodG2B_144();
int __fastcall goodB2GSink_15(__int64 a1);
__int64 goodB2G_130();
__int64 CWE190_Integer_Overflow__int64_t_rand_add_44_good();
int CWE190_Integer_Overflow__int_connect_socket_square_15_bad();
int goodB2G1_84();
int goodB2G2_84();
int goodG2B1_70();
int goodG2B2_70();
int CWE190_Integer_Overflow__int_connect_socket_square_15_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54b_goodB2GSink(int a1);
int __fastcall badSink_24(__int64 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_square_21_bad();
int __fastcall goodB2G1Sink_7(__int64 a1);
int goodB2G1_85();
int __fastcall goodB2G2Sink_7(__int64 a1);
int goodB2G2_85();
int __fastcall goodG2BSink_24(__int64 a1);
int goodG2B_145();
int CWE190_Integer_Overflow__int64_t_fscanf_square_21_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_52b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_52b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_52b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_add_06_bad();
int goodB2G1_86();
int goodB2G2_86();
int goodG2B1_71();
int goodG2B2_71();
int CWE190_Integer_Overflow__int_connect_socket_add_06_good();
__int64 __fastcall badSource_2(unsigned int a1);
int CWE190_Integer_Overflow__int_connect_socket_square_42_bad();
__int64 goodG2BSource_2();
int goodG2B_146();
__int64 __fastcall goodB2GSource_2(unsigned int a1);
int goodB2G_131();
int CWE190_Integer_Overflow__int_connect_socket_square_42_good();
int CWE190_Integer_Overflow__int64_t_rand_square_04_bad();
int goodB2G1_87();
int goodB2G2_87();
int goodG2B1_72();
int goodG2B2_72();
int CWE190_Integer_Overflow__int64_t_rand_square_04_good();
int CWE190_Integer_Overflow__int64_t_rand_square_31_bad();
int goodG2B_147();
int goodB2G_132();
int CWE190_Integer_Overflow__int64_t_rand_square_31_good();
int CWE190_Integer_Overflow__int64_t_max_add_09_bad();
int goodB2G1_88();
int goodB2G2_88();
int goodG2B1_73();
int goodG2B2_73();
int CWE190_Integer_Overflow__int64_t_max_add_09_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_61_bad();
int goodG2B_148();
int goodB2G_133();
int CWE190_Integer_Overflow__int64_t_max_multiply_61_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_11_bad();
int goodB2G1_89();
int goodB2G2_89();
int goodG2B1_74();
int goodG2B2_74();
int CWE190_Integer_Overflow__int64_t_rand_multiply_11_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_02_bad();
int goodB2G1_90();
int goodB2G2_90();
int goodG2B1_75();
int goodG2B2_75();
int CWE190_Integer_Overflow__int64_t_rand_multiply_02_good();
int CWE190_Integer_Overflow__int64_t_rand_square_67_bad();
int goodG2B_149();
int goodB2G_134();
int CWE190_Integer_Overflow__int64_t_rand_square_67_good();
__int64 __fastcall badSource_3(unsigned int a1);
int CWE190_Integer_Overflow__int_fgets_add_42_bad();
__int64 goodG2BSource_3();
int goodG2B_150();
__int64 __fastcall goodB2GSource_3(unsigned int a1);
int goodB2G_135();
int CWE190_Integer_Overflow__int_fgets_add_42_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_07_bad();
int goodB2G1_91();
int goodB2G2_91();
int goodG2B1_76();
int goodG2B2_76();
int CWE190_Integer_Overflow__int64_t_max_multiply_07_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_12_bad();
int goodB2G_136();
int goodG2B_151();
int CWE190_Integer_Overflow__int64_t_fscanf_square_12_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_10_bad();
int goodB2G1_92();
int goodB2G2_92();
int goodG2B1_77();
int goodG2B2_77();
int CWE190_Integer_Overflow__int64_t_rand_multiply_10_good();
int CWE190_Integer_Overflow__int_connect_socket_square_05_bad();
int goodB2G1_93();
int goodB2G2_93();
int goodG2B1_78();
int goodG2B2_78();
int CWE190_Integer_Overflow__int_connect_socket_square_05_good();
int __fastcall badSink_25(int a1);
int CWE190_Integer_Overflow__int_connect_socket_square_41_bad();
int __fastcall goodG2BSink_25(int a1);
int goodG2B_152();
int __fastcall goodB2GSink_16(int a1);
int goodB2G_137();
int CWE190_Integer_Overflow__int_connect_socket_square_41_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_64b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int64_t_rand_add_61_bad();
int goodG2B_153();
int goodB2G_138();
int CWE190_Integer_Overflow__int64_t_rand_add_61_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54c_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_53d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_53d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_53d_goodB2GSink(__int64 a1);
int __fastcall badSink_26(int a1);
__int64 CWE190_Integer_Overflow__int_connect_socket_multiply_44_bad();
int __fastcall goodG2BSink_26(int a1);
int goodG2B_154();
int __fastcall goodB2GSink_17(int a1);
__int64 goodB2G_139();
__int64 CWE190_Integer_Overflow__int_connect_socket_multiply_44_good();
int CWE190_Integer_Overflow__int_fgets_add_05_bad();
int goodB2G1_94();
int goodB2G2_94();
int goodG2B1_79();
int goodG2B2_79();
int CWE190_Integer_Overflow__int_fgets_add_05_good();
int __fastcall badSink_27(int a1);
int CWE190_Integer_Overflow__int_fgets_add_41_bad();
int __fastcall goodG2BSink_27(int a1);
int goodG2B_155();
int __fastcall goodB2GSink_18(int a1);
int goodB2G_140();
int CWE190_Integer_Overflow__int_fgets_add_41_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_square_11_bad();
int goodB2G1_95();
int goodB2G2_95();
int goodG2B1_80();
int goodG2B2_80();
int CWE190_Integer_Overflow__int64_t_fscanf_square_11_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_02_bad();
int goodB2G1_96();
int goodB2G2_96();
int goodG2B1_81();
int goodG2B2_81();
int CWE190_Integer_Overflow__int64_t_fscanf_square_02_good();
int CWE190_Integer_Overflow__int_connect_socket_square_53_bad();
int goodG2B_156();
int goodB2G_141();
int CWE190_Integer_Overflow__int_connect_socket_square_53_good();
int CWE190_Integer_Overflow__int_connect_socket_square_68_bad();
int goodG2B_157();
int goodB2G_142();
int CWE190_Integer_Overflow__int_connect_socket_square_68_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_15_bad();
int goodB2G1_97();
int goodB2G2_97();
int goodG2B1_82();
int goodG2B2_82();
int CWE190_Integer_Overflow__int64_t_rand_multiply_15_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_14_bad();
int goodB2G1_98();
int goodB2G2_98();
int goodG2B1_83();
int goodG2B2_83();
int CWE190_Integer_Overflow__int_connect_socket_multiply_14_good();
int CWE190_Integer_Overflow__int_connect_socket_add_64_bad();
int goodG2B_158();
int goodB2G_143();
int CWE190_Integer_Overflow__int_connect_socket_add_64_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_53d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_53d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_53d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_connect_socket_multiply_32_bad();
int goodG2B_159();
int goodB2G_144();
int CWE190_Integer_Overflow__int_connect_socket_multiply_32_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_10_bad();
int goodB2G1_99();
int goodB2G2_99();
int goodG2B1_84();
int goodG2B2_84();
int CWE190_Integer_Overflow__int64_t_fscanf_square_10_good();
__int64 staticReturnsTrue_1();
__int64 staticReturnsFalse_1();
int CWE190_Integer_Overflow__int64_t_rand_multiply_08_bad();
int goodB2G1_100();
int goodB2G2_100();
int goodG2B1_85();
int goodG2B2_85();
int CWE190_Integer_Overflow__int64_t_rand_multiply_08_good();
int CWE190_Integer_Overflow__int64_t_max_square_63_bad();
int goodG2B_160();
int goodB2G_145();
int CWE190_Integer_Overflow__int64_t_max_square_63_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_22_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54c_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_67b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_connect_socket_square_11_bad();
int goodB2G1_101();
int goodB2G2_101();
int goodG2B1_86();
int goodG2B2_86();
int CWE190_Integer_Overflow__int_connect_socket_square_11_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_fscanf_square_01_bad();
int goodG2B_161();
int goodB2G_146();
int CWE190_Integer_Overflow__int64_t_fscanf_square_01_good();
int CWE190_Integer_Overflow__int64_t_rand_square_13_bad();
int goodB2G1_102();
int goodB2G2_102();
int goodG2B1_87();
int goodG2B2_87();
int CWE190_Integer_Overflow__int64_t_rand_square_13_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_18_bad();
int goodB2G_147();
int goodG2B_162();
int CWE190_Integer_Overflow__int64_t_fscanf_square_18_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_53c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_53c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_53c_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_multiply_31_bad();
int goodG2B_163();
int goodB2G_148();
int CWE190_Integer_Overflow__int_connect_socket_multiply_31_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54e_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54e_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54e_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54e_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54e_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54e_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_fgets_add_66_bad();
int goodG2B_164();
int goodB2G_149();
int CWE190_Integer_Overflow__int_fgets_add_66_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_add_53c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_53c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_53c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_max_square_68_bad();
int goodG2B_165();
int goodB2G_150();
int CWE190_Integer_Overflow__int64_t_max_square_68_good();
__int64 staticReturnsTrue_2();
__int64 staticReturnsFalse_2();
int CWE190_Integer_Overflow__int64_t_fscanf_square_08_bad();
int goodB2G1_103();
int goodB2G2_103();
int goodG2B1_88();
int goodG2B2_88();
int CWE190_Integer_Overflow__int64_t_fscanf_square_08_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_67_bad();
int goodG2B_166();
int goodB2G_151();
int CWE190_Integer_Overflow__int_connect_socket_multiply_67_good();
int CWE190_Integer_Overflow__int64_t_max_add_65_bad();
int goodG2B_167();
int goodB2G_152();
int CWE190_Integer_Overflow__int64_t_max_add_65_good();
int CWE190_Integer_Overflow__int64_t_rand_square_03_bad();
int goodB2G1_104();
int goodB2G2_104();
int goodG2B1_89();
int goodG2B2_89();
int CWE190_Integer_Overflow__int64_t_rand_square_03_good();
int CWE190_Integer_Overflow__int64_t_max_square_17_bad();
int goodB2G_153();
int goodG2B_168();
int CWE190_Integer_Overflow__int64_t_max_square_17_good();
int CWE190_Integer_Overflow__int_connect_socket_square_34_bad();
int goodG2B_169();
int goodB2G_154();
int CWE190_Integer_Overflow__int_connect_socket_square_34_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_17_bad();
int goodB2G_155();
int goodG2B_170();
int CWE190_Integer_Overflow__int64_t_fscanf_square_17_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodG2BSink(int a1);
int CWE190_Integer_Overflow__int64_t_max_multiply_63_bad();
int goodG2B_171();
int goodB2G_156();
int CWE190_Integer_Overflow__int64_t_max_multiply_63_good();
int CWE190_Integer_Overflow__int64_t_rand_square_18_bad();
int goodB2G_157();
int goodG2B_172();
int CWE190_Integer_Overflow__int64_t_rand_square_18_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_04_bad();
int goodB2G1_105();
int goodB2G2_105();
int goodG2B1_90();
int goodG2B2_90();
int CWE190_Integer_Overflow__int_connect_socket_multiply_04_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_15_bad();
int goodB2G1_106();
int goodB2G2_106();
int goodG2B1_91();
int goodG2B2_91();
int CWE190_Integer_Overflow__int64_t_max_multiply_15_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_66_bad();
int goodG2B_173();
int goodB2G_158();
int CWE190_Integer_Overflow__int_connect_socket_multiply_66_good();
int CWE190_Integer_Overflow__int_connect_socket_square_01_bad();
int goodG2B_174();
int goodB2G_159();
int CWE190_Integer_Overflow__int_connect_socket_square_01_good();
__int64 CWE190_Integer_Overflow__int64_t_max_square_61b_badSource();
__int64 CWE190_Integer_Overflow__int64_t_max_square_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__int64_t_max_square_61b_goodB2GSource();
int CWE190_Integer_Overflow__int64_t_max_add_51_bad();
int goodG2B_175();
int goodB2G_160();
int CWE190_Integer_Overflow__int64_t_max_add_51_good();
int CWE190_Integer_Overflow__int64_t_rand_square_12_bad();
int goodB2G_161();
int goodG2B_176();
int CWE190_Integer_Overflow__int64_t_rand_square_12_good();
int CWE190_Integer_Overflow__int64_t_rand_square_32_bad();
int goodG2B_177();
int goodB2G_162();
int CWE190_Integer_Overflow__int64_t_rand_square_32_good();
__int64 badSource_4();
int CWE190_Integer_Overflow__int64_t_max_multiply_42_bad();
__int64 goodG2BSource_4();
int goodG2B_178();
__int64 goodB2GSource_4();
int goodB2G_163();
int CWE190_Integer_Overflow__int64_t_max_multiply_42_good();
int CWE190_Integer_Overflow__int_connect_socket_add_61_bad();
int goodG2B_179();
int goodB2G_164();
int CWE190_Integer_Overflow__int_connect_socket_add_61_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_22_bad();
int goodB2G1_107();
int goodB2G2_107();
int goodG2B_180();
int CWE190_Integer_Overflow__int_connect_socket_multiply_22_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_53b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_53b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_53b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_52c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_52c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_52c_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_63b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_63b_goodB2GSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_53c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_53c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_53c_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54d_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54d_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54d_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_max_square_61_bad();
int goodG2B_181();
int goodB2G_165();
int CWE190_Integer_Overflow__int64_t_max_square_61_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_54_bad();
int goodG2B_182();
int goodB2G_166();
int CWE190_Integer_Overflow__int64_t_fscanf_square_54_good();
__int64 badSource_5();
int CWE190_Integer_Overflow__int64_t_rand_add_42_bad();
__int64 goodG2BSource_5();
int goodG2B_183();
__int64 goodB2GSource_5();
int goodB2G_167();
int CWE190_Integer_Overflow__int64_t_rand_add_42_good();
int CWE190_Integer_Overflow__int64_t_rand_square_11_bad();
int goodB2G1_108();
int goodB2G2_108();
int goodG2B1_92();
int goodG2B2_92();
int CWE190_Integer_Overflow__int64_t_rand_square_11_good();
int CWE190_Integer_Overflow__int64_t_rand_square_02_bad();
int goodB2G1_109();
int goodB2G2_109();
int goodG2B1_93();
int goodG2B2_93();
int CWE190_Integer_Overflow__int64_t_rand_square_02_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_05_bad();
int goodB2G1_110();
int goodB2G2_110();
int goodG2B1_94();
int goodG2B2_94();
int CWE190_Integer_Overflow__int64_t_max_multiply_05_good();
__int64 CWE190_Integer_Overflow__int_fgets_add_65_bad();
int goodG2B_184();
__int64 goodB2G_168();
__int64 CWE190_Integer_Overflow__int_fgets_add_65_good();
int __fastcall badSink_28(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_multiply_41_bad();
int __fastcall goodG2BSink_28(__int64 a1);
int goodG2B_185();
int __fastcall goodB2GSink_19(__int64 a1);
int goodB2G_169();
int CWE190_Integer_Overflow__int64_t_max_multiply_41_good();
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_65_bad();
int goodG2B_186();
__int64 goodB2G_170();
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_65_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_13_bad();
int goodB2G1_111();
int goodB2G2_111();
int goodG2B1_95();
int goodG2B2_95();
int CWE190_Integer_Overflow__int_connect_socket_multiply_13_good();
int CWE190_Integer_Overflow__int64_t_max_square_07_bad();
int goodB2G1_112();
int goodB2G2_112();
int goodG2B1_96();
int goodG2B2_96();
int CWE190_Integer_Overflow__int64_t_max_square_07_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_52c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_52c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_52c_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_square_10_bad();
int goodB2G1_113();
int goodB2G2_113();
int goodG2B1_97();
int goodG2B2_97();
int CWE190_Integer_Overflow__int64_t_rand_square_10_good();
int CWE190_Integer_Overflow__int64_t_max_add_53_bad();
int goodG2B_187();
int goodB2G_171();
int CWE190_Integer_Overflow__int64_t_max_add_53_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_65b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_65b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_65b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54c_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_66b_goodB2GSink(__int64 a1);
int badSink_29();
int CWE190_Integer_Overflow__int64_t_max_multiply_45_bad();
int goodG2BSink_29();
int goodG2B_188();
int goodB2GSink_20();
int goodB2G_172();
int CWE190_Integer_Overflow__int64_t_max_multiply_45_good();
int CWE190_Integer_Overflow__int64_t_rand_add_05_bad();
int goodB2G1_114();
int goodB2G2_114();
int goodG2B1_98();
int goodG2B2_98();
int CWE190_Integer_Overflow__int64_t_rand_add_05_good();
int CWE190_Integer_Overflow__int64_t_rand_square_01_bad();
int goodG2B_189();
int goodB2G_173();
int CWE190_Integer_Overflow__int64_t_rand_square_01_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_68b_badSink();
int CWE190_Integer_Overflow__int64_t_rand_multiply_68b_goodG2BSink();
int CWE190_Integer_Overflow__int64_t_rand_multiply_68b_goodB2GSink();
int __fastcall badSink_30(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_add_41_bad();
int __fastcall goodG2BSink_30(__int64 a1);
int goodG2B_190();
int __fastcall goodB2GSink_21(__int64 a1);
int goodB2G_174();
int CWE190_Integer_Overflow__int64_t_rand_add_41_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_53d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_53d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_53d_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54e_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54e_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54e_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_53c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_53c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_53c_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_multiply_03_bad();
int goodB2G1_115();
int goodB2G2_115();
int goodG2B1_99();
int goodG2B2_99();
int CWE190_Integer_Overflow__int_connect_socket_multiply_03_good();
int CWE190_Integer_Overflow__int64_t_rand_add_34_bad();
int goodG2B_191();
int goodB2G_175();
int CWE190_Integer_Overflow__int64_t_rand_add_34_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_18_bad();
int goodB2G_176();
int goodG2B_192();
int CWE190_Integer_Overflow__int_connect_socket_multiply_18_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_square_14_bad();
int goodB2G1_116();
int goodB2G2_116();
int goodG2B1_100();
int goodG2B2_100();
int CWE190_Integer_Overflow__int_connect_socket_square_14_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54e_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54e_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54e_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_square_32_bad();
int goodG2B_193();
int goodB2G_177();
int CWE190_Integer_Overflow__int_connect_socket_square_32_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_52c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_52c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_52c_goodB2GSink(__int64 a1);
__int64 staticReturnsTrue_3();
__int64 staticReturnsFalse_3();
int CWE190_Integer_Overflow__int64_t_rand_square_08_bad();
int goodB2G1_117();
int goodB2G2_117();
int goodG2B1_101();
int goodG2B2_101();
int CWE190_Integer_Overflow__int64_t_rand_square_08_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_68_bad();
int goodG2B_194();
int goodB2G_178();
int CWE190_Integer_Overflow__int64_t_rand_multiply_68_good();
void CWE190_Integer_Overflow__int_connect_socket_add_17_bad();
void goodB2G_179();
int goodG2B_195();
int CWE190_Integer_Overflow__int_connect_socket_add_17_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_12_bad();
int goodB2G_180();
int goodG2B_196();
int CWE190_Integer_Overflow__int_connect_socket_multiply_12_good();
int CWE190_Integer_Overflow__int64_t_rand_add_11_bad();
int goodB2G1_118();
int goodB2G2_118();
int goodG2B1_102();
int goodG2B2_102();
int CWE190_Integer_Overflow__int64_t_rand_add_11_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_67b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_rand_add_07_bad();
int goodB2G1_119();
int goodB2G2_119();
int goodG2B1_103();
int goodG2B2_103();
int CWE190_Integer_Overflow__int64_t_rand_add_07_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_add_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_rand_add_02_bad();
int goodB2G1_120();
int goodB2G2_120();
int goodG2B1_104();
int goodG2B2_104();
int CWE190_Integer_Overflow__int64_t_rand_add_02_good();
int CWE190_Integer_Overflow__int_fgets_add_03_bad();
int goodB2G1_121();
int goodB2G2_121();
int goodG2B1_105();
int goodG2B2_105();
int CWE190_Integer_Overflow__int_fgets_add_03_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_01_bad();
int goodG2B_197();
int goodB2G_181();
int CWE190_Integer_Overflow__int64_t_max_multiply_01_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_53d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_53d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_53d_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_square_63_bad();
int goodG2B_198();
int goodB2G_182();
int CWE190_Integer_Overflow__int64_t_fscanf_square_63_good();
int CWE190_Integer_Overflow__int64_t_max_add_07_bad();
int goodB2G1_122();
int goodB2G2_122();
int goodG2B1_106();
int goodG2B2_106();
int CWE190_Integer_Overflow__int64_t_max_add_07_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54d_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_add_10_bad();
int goodB2G1_123();
int goodB2G2_123();
int goodG2B1_107();
int goodG2B2_107();
int CWE190_Integer_Overflow__int64_t_rand_add_10_good();
int __fastcall badSink_31(__int64 a1);
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_44_bad();
int __fastcall goodG2BSink_31(__int64 a1);
int goodG2B_199();
int __fastcall goodB2GSink_22(__int64 a1);
__int64 goodB2G_183();
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_44_good();
int CWE190_Integer_Overflow__int_connect_socket_square_68b_badSink();
int CWE190_Integer_Overflow__int_connect_socket_square_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_connect_socket_square_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54c_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_square_12_bad();
int goodB2G_184();
int goodG2B_200();
int CWE190_Integer_Overflow__int64_t_max_square_12_good();
int badSink_32();
int CWE190_Integer_Overflow__int64_t_fscanf_square_45_bad();
int goodG2BSink_32();
int goodG2B_201();
int goodB2GSink_23();
int goodB2G_185();
int CWE190_Integer_Overflow__int64_t_fscanf_square_45_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_06_bad();
int goodB2G1_124();
int goodB2G2_124();
int goodG2B1_108();
int goodG2B2_108();
int CWE190_Integer_Overflow__int_connect_socket_multiply_06_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_52b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_52b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_52b_goodB2GSink(__int64 a1);
__int64 staticReturnsTrue_4();
__int64 staticReturnsFalse_4();
int CWE190_Integer_Overflow__int64_t_max_multiply_08_bad();
int goodB2G1_125();
int goodB2G2_125();
int goodG2B1_109();
int goodG2B2_109();
int CWE190_Integer_Overflow__int64_t_max_multiply_08_good();
int CWE190_Integer_Overflow__int_connect_socket_add_31_bad();
int goodG2B_202();
int goodB2G_186();
int CWE190_Integer_Overflow__int_connect_socket_add_31_good();
int CWE190_Integer_Overflow__int64_t_max_square_09_bad();
int goodB2G1_126();
int goodB2G2_126();
int goodG2B1_110();
int goodG2B2_110();
int CWE190_Integer_Overflow__int64_t_max_square_09_good();
int CWE190_Integer_Overflow__int64_t_rand_square_22_bad();
int goodB2G1_127();
int goodB2G2_127();
int goodG2B_203();
int CWE190_Integer_Overflow__int64_t_rand_square_22_good();
int CWE190_Integer_Overflow__int_fgets_add_68b_badSink();
int CWE190_Integer_Overflow__int_fgets_add_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_fgets_add_68b_goodB2GSink();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_65b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_65b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_65b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_53b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_fscanf_square_61_bad();
int goodG2B_204();
int goodB2G_187();
int CWE190_Integer_Overflow__int64_t_fscanf_square_61_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_52c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_52c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_52c_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_max_square_13_bad();
int goodB2G1_128();
int goodB2G2_128();
int goodG2B1_111();
int goodG2B2_111();
int CWE190_Integer_Overflow__int64_t_max_square_13_good();
int CWE190_Integer_Overflow__int_connect_socket_add_14_bad();
int goodB2G1_129();
int goodB2G2_129();
int goodG2B1_112();
int goodG2B2_112();
int CWE190_Integer_Overflow__int_connect_socket_add_14_good();
int CWE190_Integer_Overflow__int_connect_socket_add_32_bad();
int goodG2B_205();
int goodB2G_188();
int CWE190_Integer_Overflow__int_connect_socket_add_32_good();
__int64 staticReturnsTrue_5();
__int64 staticReturnsFalse_5();
int CWE190_Integer_Overflow__int64_t_rand_add_08_bad();
int goodB2G1_130();
int goodB2G2_130();
int goodG2B1_113();
int goodG2B2_113();
int CWE190_Integer_Overflow__int64_t_rand_add_08_good();
int __fastcall badSink_33(__int64 a1);
__int64 CWE190_Integer_Overflow__int64_t_fscanf_square_44_bad();
int __fastcall goodG2BSink_33(__int64 a1);
int goodG2B_206();
int __fastcall goodB2GSink_24(__int64 a1);
__int64 goodB2G_189();
__int64 CWE190_Integer_Overflow__int64_t_fscanf_square_44_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_53b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_53b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_53b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_67b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_64b_badSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_64b_goodG2BSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_64b_goodB2GSink(int *a1);
int CWE190_Integer_Overflow__int64_t_rand_multiply_61_bad();
int goodG2B_207();
int goodB2G_190();
int CWE190_Integer_Overflow__int64_t_rand_multiply_61_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_67b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_67b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_67b_goodB2GSink(int a1);
__int64 staticReturnsTrue_6();
__int64 staticReturnsFalse_6();
int CWE190_Integer_Overflow__int64_t_max_square_08_bad();
int goodB2G1_131();
int goodB2G2_131();
int goodG2B1_114();
int goodG2B2_114();
int CWE190_Integer_Overflow__int64_t_max_square_08_good();
int CWE190_Integer_Overflow__int64_t_rand_add_09_bad();
int goodB2G1_132();
int goodB2G2_132();
int goodG2B1_115();
int goodG2B2_115();
int CWE190_Integer_Overflow__int64_t_rand_add_09_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_07_bad();
int goodB2G1_133();
int goodB2G2_133();
int goodG2B1_116();
int goodG2B2_116();
int CWE190_Integer_Overflow__int64_t_rand_multiply_07_good();
int __fastcall badSink_34(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_square_21_bad();
int __fastcall goodB2G1Sink_8(__int64 a1);
int goodB2G1_134();
int __fastcall goodB2G2Sink_8(__int64 a1);
int goodB2G2_134();
int __fastcall goodG2BSink_34(__int64 a1);
int goodG2B_208();
int CWE190_Integer_Overflow__int64_t_max_square_21_good();
int CWE190_Integer_Overflow__int64_t_max_square_03_bad();
int goodB2G1_135();
int goodB2G2_135();
int goodG2B1_117();
int goodG2B2_117();
int CWE190_Integer_Overflow__int64_t_max_square_03_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_14_bad();
int goodB2G1_136();
int goodB2G2_136();
int goodG2B1_118();
int goodG2B2_118();
int CWE190_Integer_Overflow__int64_t_max_multiply_14_good();
int CWE190_Integer_Overflow__int64_t_max_add_12_bad();
int goodB2G_191();
int goodG2B_209();
int CWE190_Integer_Overflow__int64_t_max_add_12_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_add_04_bad();
int goodB2G1_137();
int goodB2G2_137();
int goodG2B1_119();
int goodG2B2_119();
int CWE190_Integer_Overflow__int_connect_socket_add_04_good();
int CWE190_Integer_Overflow__int_fgets_add_09_bad();
int goodB2G1_138();
int goodB2G2_138();
int goodG2B1_120();
int goodG2B2_120();
int CWE190_Integer_Overflow__int_fgets_add_09_good();
int CWE190_Integer_Overflow__int64_t_max_square_18_bad();
int goodB2G_192();
int goodG2B_210();
int CWE190_Integer_Overflow__int64_t_max_square_18_good();
int CWE190_Integer_Overflow__int_fgets_add_53_bad();
int goodG2B_211();
int goodB2G_193();
int CWE190_Integer_Overflow__int_fgets_add_53_good();
int CWE190_Integer_Overflow__int_fgets_add_64_bad();
int goodG2B_212();
int goodB2G_194();
int CWE190_Integer_Overflow__int_fgets_add_64_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_64_bad();
int goodG2B_213();
int goodB2G_195();
int CWE190_Integer_Overflow__int_connect_socket_multiply_64_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_63b_badSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_63b_goodG2BSink(_QWORD *a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_63b_goodB2GSink(__int64 *a1);
int CWE190_Integer_Overflow__int_connect_socket_add_67_bad();
int goodG2B_214();
int goodB2G_196();
int CWE190_Integer_Overflow__int_connect_socket_add_67_good();
int CWE190_Integer_Overflow__int64_t_max_square_11_bad();
int goodB2G1_139();
int goodB2G2_139();
int goodG2B1_121();
int goodG2B2_121();
int CWE190_Integer_Overflow__int64_t_max_square_11_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_52b_goodB2GSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_multiply_52_bad();
int goodG2B_215();
int goodB2G_197();
int CWE190_Integer_Overflow__int64_t_rand_multiply_52_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_22_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_22_goodB2G1Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_22_goodB2G2Sink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_22_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_65b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_65b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_65b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_add_68_bad();
int goodG2B_216();
int goodB2G_198();
int CWE190_Integer_Overflow__int64_t_max_add_68_good();
int CWE190_Integer_Overflow__int64_t_rand_add_54_bad();
int goodG2B_217();
int goodB2G_199();
int CWE190_Integer_Overflow__int64_t_rand_add_54_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_53_bad();
int goodG2B_218();
int goodB2G_200();
int CWE190_Integer_Overflow__int64_t_max_multiply_53_good();
int CWE190_Integer_Overflow__int64_t_fscanf_square_07_bad();
int goodB2G1_140();
int goodB2G2_140();
int goodG2B1_122();
int goodG2B2_122();
int CWE190_Integer_Overflow__int64_t_fscanf_square_07_good();
__int64 staticReturnsTrue_7();
__int64 staticReturnsFalse_7();
int CWE190_Integer_Overflow__int_fgets_add_08_bad();
int goodB2G1_141();
int goodB2G2_141();
int goodG2B1_123();
int goodG2B2_123();
int CWE190_Integer_Overflow__int_fgets_add_08_good();
int __fastcall CWE190_Integer_Overflow__int_fgets_add_52b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_52b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_52b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int64_t_max_add_15_bad();
int goodB2G1_142();
int goodB2G2_142();
int goodG2B1_124();
int goodG2B2_124();
int CWE190_Integer_Overflow__int64_t_max_add_15_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_53c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_53c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_53c_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_square_63_bad();
int goodG2B_219();
int goodB2G_201();
int CWE190_Integer_Overflow__int64_t_rand_square_63_good();
int CWE190_Integer_Overflow__int_fgets_add_68_bad();
int goodG2B_220();
int goodB2G_202();
int CWE190_Integer_Overflow__int_fgets_add_68_good();
__int64 badSource_6();
int CWE190_Integer_Overflow__int64_t_max_add_42_bad();
__int64 goodG2BSource_6();
int goodG2B_221();
__int64 goodB2GSource_6();
int goodB2G_203();
int CWE190_Integer_Overflow__int64_t_max_add_42_good();
int CWE190_Integer_Overflow__int64_t_max_square_02_bad();
int goodB2G1_143();
int goodB2G2_143();
int goodG2B1_125();
int goodG2B2_125();
int CWE190_Integer_Overflow__int64_t_max_square_02_good();
int CWE190_Integer_Overflow__int_connect_socket_square_52_bad();
int goodG2B_222();
int goodB2G_204();
int CWE190_Integer_Overflow__int_connect_socket_square_52_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_65b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_65b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_65b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_51b_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_51b_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_51b_goodB2GSink(int a1);
int CWE190_Integer_Overflow__int_connect_socket_add_51_bad();
int goodG2B_223();
int goodB2G_205();
int CWE190_Integer_Overflow__int_connect_socket_add_51_good();
int CWE190_Integer_Overflow__int_connect_socket_add_22_bad();
int goodB2G1_144();
int goodB2G2_144();
int goodG2B_224();
int CWE190_Integer_Overflow__int_connect_socket_add_22_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_65_bad();
int goodG2B_225();
int goodB2G_206();
int CWE190_Integer_Overflow__int64_t_max_multiply_65_good();
int CWE190_Integer_Overflow__int_connect_socket_square_16_bad();
int goodB2G_207();
int goodG2B_226();
int CWE190_Integer_Overflow__int_connect_socket_square_16_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54d_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54d_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54d_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_square_10_bad();
int goodB2G1_145();
int goodB2G2_145();
int goodG2B1_126();
int goodG2B2_126();
int CWE190_Integer_Overflow__int64_t_max_square_10_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_53c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_53c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_53c_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_fgets_add_52_bad();
int goodG2B_227();
int goodB2G_208();
int CWE190_Integer_Overflow__int_fgets_add_52_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_09_bad();
int goodB2G1_146();
int goodB2G2_146();
int goodG2B1_127();
int goodG2B2_127();
int CWE190_Integer_Overflow__int64_t_max_multiply_09_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_66_bad();
int goodG2B_228();
int goodB2G_209();
int CWE190_Integer_Overflow__int64_t_max_multiply_66_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54c_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_fgets_add_16_bad();
int goodB2G_210();
int goodG2B_229();
int CWE190_Integer_Overflow__int_fgets_add_16_good();
int CWE190_Integer_Overflow__int64_t_max_add_05_bad();
int goodB2G1_147();
int goodB2G2_147();
int goodG2B1_128();
int goodG2B2_128();
int CWE190_Integer_Overflow__int64_t_max_add_05_good();
int CWE190_Integer_Overflow__int64_t_max_square_01_bad();
int goodG2B_230();
int goodB2G_211();
int CWE190_Integer_Overflow__int64_t_max_square_01_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_68b_badSink();
int CWE190_Integer_Overflow__int64_t_max_multiply_68b_goodG2BSink();
int CWE190_Integer_Overflow__int64_t_max_multiply_68b_goodB2GSink();
int __fastcall badSink_35(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_add_41_bad();
int __fastcall goodG2BSink_35(__int64 a1);
int goodG2B_231();
int __fastcall goodB2GSink_25(__int64 a1);
int goodB2G_212();
int CWE190_Integer_Overflow__int64_t_max_add_41_good();
int CWE190_Integer_Overflow__int64_t_max_add_61_bad();
int goodG2B_232();
int goodB2G_213();
int CWE190_Integer_Overflow__int64_t_max_add_61_good();
int CWE190_Integer_Overflow__int_connect_socket_square_51_bad();
int goodG2B_233();
int goodB2G_214();
int CWE190_Integer_Overflow__int_connect_socket_square_51_good();
int CWE190_Integer_Overflow__int_connect_socket_add_13_bad();
int goodB2G1_148();
int goodB2G2_148();
int goodG2B1_129();
int goodG2B2_129();
int CWE190_Integer_Overflow__int_connect_socket_add_13_good();
void CWE190_Integer_Overflow__int64_t_rand_square_17_bad();
void goodB2G_215();
int goodG2B_234();
int CWE190_Integer_Overflow__int64_t_rand_square_17_good();
int CWE190_Integer_Overflow__int64_t_max_square_22_bad();
int goodB2G1_149();
int goodB2G2_149();
int goodG2B_235();
int CWE190_Integer_Overflow__int64_t_max_square_22_good();
int __fastcall badSink_36(__int64 a1);
__int64 CWE190_Integer_Overflow__int64_t_rand_square_44_bad();
int __fastcall goodG2BSink_36(__int64 a1);
int goodG2B_236();
int __fastcall goodB2GSink_26(__int64 a1);
__int64 goodB2G_216();
__int64 CWE190_Integer_Overflow__int64_t_rand_square_44_good();
int CWE190_Integer_Overflow__int64_t_max_add_34_bad();
int goodG2B_237();
int goodB2G_217();
int CWE190_Integer_Overflow__int64_t_max_add_34_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_66b_goodB2GSink(__int64 a1);
int badSink_37();
int CWE190_Integer_Overflow__int_connect_socket_square_45_bad();
int goodG2BSink_37();
int goodG2B_238();
int goodB2GSink_27();
int goodB2G_218();
int CWE190_Integer_Overflow__int_connect_socket_square_45_good();
int CWE190_Integer_Overflow__int_fgets_add_51_bad();
int goodG2B_239();
int goodB2G_219();
int CWE190_Integer_Overflow__int_fgets_add_51_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_53b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_53b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_53b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_add_68b_badSink();
int CWE190_Integer_Overflow__int64_t_rand_add_68b_goodG2BSink();
int CWE190_Integer_Overflow__int64_t_rand_add_68b_goodB2GSink();
int CWE190_Integer_Overflow__int_connect_socket_square_06_bad();
int goodB2G1_150();
int goodB2G2_150();
int goodG2B1_130();
int goodG2B2_130();
int CWE190_Integer_Overflow__int_connect_socket_square_06_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_63b_badSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_63b_goodG2BSink(int *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_63b_goodB2GSink(int *a1);
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_61b_badSource();
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_61b_goodB2GSource();
__int64 CWE190_Integer_Overflow__int64_t_rand_square_61b_badSource();
__int64 CWE190_Integer_Overflow__int64_t_rand_square_61b_goodG2BSource();
__int64 CWE190_Integer_Overflow__int64_t_rand_square_61b_goodB2GSource();
int CWE190_Integer_Overflow__int64_t_max_multiply_68_bad();
int goodG2B_240();
int goodB2G_220();
int CWE190_Integer_Overflow__int64_t_max_multiply_68_good();
int __fastcall badSink_38(int a1);
int CWE190_Integer_Overflow__int_connect_socket_add_21_bad();
int __fastcall goodB2G1Sink_9(int a1);
int goodB2G1_151();
int __fastcall goodB2G2Sink_9(int a1);
int goodB2G2_151();
int __fastcall goodG2BSink_38(int a1);
int goodG2B_241();
int CWE190_Integer_Overflow__int_connect_socket_add_21_good();
int CWE190_Integer_Overflow__int_connect_socket_add_03_bad();
int goodB2G1_152();
int goodB2G2_152();
int goodG2B1_131();
int goodG2B2_131();
int CWE190_Integer_Overflow__int_connect_socket_add_03_good();
__int64 badSource_7();
int CWE190_Integer_Overflow__int64_t_rand_multiply_42_bad();
__int64 goodG2BSource_7();
int goodG2B_242();
__int64 goodB2GSource_7();
int goodB2G_221();
int CWE190_Integer_Overflow__int64_t_rand_multiply_42_good();
int badSink_39();
int CWE190_Integer_Overflow__int_fgets_add_45_bad();
int goodG2BSink_39();
int goodG2B_243();
int goodB2GSink_28();
int goodB2G_222();
int CWE190_Integer_Overflow__int_fgets_add_45_good();
int CWE190_Integer_Overflow__int_fgets_add_06_bad();
int goodB2G1_153();
int goodB2G2_153();
int goodG2B1_132();
int goodG2B2_132();
int CWE190_Integer_Overflow__int_fgets_add_06_good();
int CWE190_Integer_Overflow__int_connect_socket_add_18_bad();
int goodB2G_223();
int goodG2B_244();
int CWE190_Integer_Overflow__int_connect_socket_add_18_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_53b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_53b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_53b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54e_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54e_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54e_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_add_66_bad();
int goodG2B_245();
int goodB2G_224();
int CWE190_Integer_Overflow__int64_t_max_add_66_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_52c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_52c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_52c_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_multiply_63_bad();
int goodG2B_246();
int goodB2G_225();
int CWE190_Integer_Overflow__int_connect_socket_multiply_63_good();
int CWE190_Integer_Overflow__int64_t_rand_add_68_bad();
int goodG2B_247();
int goodB2G_226();
int CWE190_Integer_Overflow__int64_t_rand_add_68_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_64b_goodB2GSink(int *a1);
int CWE190_Integer_Overflow__int64_t_rand_square_61_bad();
int goodG2B_248();
int goodB2G_227();
int CWE190_Integer_Overflow__int64_t_rand_square_61_good();
int CWE190_Integer_Overflow__int_fgets_add_22_bad();
int goodB2G1_154();
int goodB2G2_154();
int goodG2B_249();
int CWE190_Integer_Overflow__int_fgets_add_22_good();
int CWE190_Integer_Overflow__int_connect_socket_square_12_bad();
int goodB2G_228();
int goodG2B_250();
int CWE190_Integer_Overflow__int_connect_socket_square_12_good();
int CWE190_Integer_Overflow__int_connect_socket_add_12_bad();
int goodB2G_229();
int goodG2B_251();
int CWE190_Integer_Overflow__int_connect_socket_add_12_good();
__int64 staticReturnsTrue_8();
__int64 staticReturnsFalse_8();
int CWE190_Integer_Overflow__int_connect_socket_square_08_bad();
int goodB2G1_155();
int goodB2G2_155();
int goodG2B1_133();
int goodG2B2_133();
int CWE190_Integer_Overflow__int_connect_socket_square_08_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_05_bad();
int goodB2G1_156();
int goodB2G2_156();
int goodG2B1_134();
int goodG2B2_134();
int CWE190_Integer_Overflow__int64_t_rand_multiply_05_good();
int __fastcall badSink_40(__int64 a1);
int CWE190_Integer_Overflow__int64_t_rand_multiply_41_bad();
int __fastcall goodG2BSink_40(__int64 a1);
int goodG2B_252();
int __fastcall goodB2GSink_29(__int64 a1);
int goodB2G_230();
int CWE190_Integer_Overflow__int64_t_rand_multiply_41_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_square_15_bad();
int goodB2G1_157();
int goodB2G2_157();
int goodG2B1_135();
int goodG2B2_135();
int CWE190_Integer_Overflow__int64_t_fscanf_square_15_good();
int CWE190_Integer_Overflow__int64_t_rand_square_07_bad();
int goodB2G1_158();
int goodB2G2_158();
int goodG2B1_136();
int goodG2B2_136();
int CWE190_Integer_Overflow__int64_t_rand_square_07_good();
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_61b_badSource(unsigned int a1);
__int64 CWE190_Integer_Overflow__int_connect_socket_multiply_61b_goodG2BSource();
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_61b_goodB2GSource(unsigned int a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_64b_badSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE190_Integer_Overflow__int_fgets_add_64b_goodB2GSink(_DWORD *a1);
int CWE190_Integer_Overflow__int64_t_rand_add_53_bad();
int goodG2B_253();
int goodB2G_231();
int CWE190_Integer_Overflow__int64_t_rand_add_53_good();
__int64 __fastcall badSource_8(__int64 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_square_42_bad();
__int64 goodG2BSource_8();
int goodG2B_254();
__int64 __fastcall goodB2GSource_8(__int64 a1);
int goodB2G_232();
int CWE190_Integer_Overflow__int64_t_fscanf_square_42_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_34_bad();
int goodG2B_255();
int goodB2G_233();
int CWE190_Integer_Overflow__int64_t_rand_multiply_34_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_66b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_52b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_52b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_52b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_square_54_bad();
int goodG2B_256();
int goodB2G_234();
int CWE190_Integer_Overflow__int64_t_max_square_54_good();
int CWE190_Integer_Overflow__int_connect_socket_square_64_bad();
int goodG2B_257();
int goodB2G_235();
int CWE190_Integer_Overflow__int_connect_socket_square_64_good();
int CWE190_Integer_Overflow__int_connect_socket_add_11_bad();
int goodB2G1_159();
int goodB2G2_159();
int goodG2B1_137();
int goodG2B2_137();
int CWE190_Integer_Overflow__int_connect_socket_add_11_good();
int CWE190_Integer_Overflow__int_connect_socket_add_02_bad();
int goodB2G1_160();
int goodB2G2_160();
int goodG2B1_138();
int goodG2B2_138();
int CWE190_Integer_Overflow__int_connect_socket_add_02_good();
int CWE190_Integer_Overflow__int_connect_socket_add_68b_badSink();
int CWE190_Integer_Overflow__int_connect_socket_add_68b_goodG2BSink();
int CWE190_Integer_Overflow__int_connect_socket_add_68b_goodB2GSink();
void CWE190_Integer_Overflow__int_connect_socket_multiply_17_bad();
void goodB2G_236();
int goodG2B_258();
int CWE190_Integer_Overflow__int_connect_socket_multiply_17_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_65b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_65b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_65b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_square_05_bad();
int goodB2G1_161();
int goodB2G2_161();
int goodG2B1_139();
int goodG2B2_139();
int CWE190_Integer_Overflow__int64_t_fscanf_square_05_good();
int __fastcall badSink_41(__int64 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_square_41_bad();
int __fastcall goodG2BSink_41(__int64 a1);
int goodG2B_259();
int __fastcall goodB2GSink_30(__int64 a1);
int goodB2G_237();
int CWE190_Integer_Overflow__int64_t_fscanf_square_41_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_51_bad();
int goodG2B_260();
int goodB2G_238();
int CWE190_Integer_Overflow__int_connect_socket_multiply_51_good();
int badSink_42();
int CWE190_Integer_Overflow__int64_t_rand_add_45_bad();
int goodG2BSink_42();
int goodG2B_261();
int goodB2GSink_31();
int goodB2G_239();
int CWE190_Integer_Overflow__int64_t_rand_add_45_good();
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54c_badSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54c_goodG2BSink(int a1);
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54c_goodB2GSink(int a1);
__int64 CWE190_Integer_Overflow__int64_t_rand_add_65_bad();
int goodG2B_262();
__int64 goodB2G_240();
__int64 CWE190_Integer_Overflow__int64_t_rand_add_65_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_52_bad();
int goodG2B_263();
int goodB2G_241();
int CWE190_Integer_Overflow__int64_t_max_multiply_52_good();
int CWE190_Integer_Overflow__int64_t_rand_multiply_66_bad();
int goodG2B_264();
int goodB2G_242();
int CWE190_Integer_Overflow__int64_t_rand_multiply_66_good();
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_51b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_51b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_51b_goodB2GSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_53c_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_53c_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_53c_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_fscanf_square_34_bad();
int goodG2B_265();
int goodB2G_243();
int CWE190_Integer_Overflow__int64_t_fscanf_square_34_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_16_bad();
int goodB2G_244();
int goodG2B_266();
int CWE190_Integer_Overflow__int64_t_max_multiply_16_good();
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_66b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_66b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_66b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int64_t_max_square_65_bad();
int goodG2B_267();
int goodB2G_245();
int CWE190_Integer_Overflow__int64_t_max_square_65_good();
int CWE190_Integer_Overflow__int64_t_rand_add_52_bad();
int goodG2B_268();
int goodB2G_246();
int CWE190_Integer_Overflow__int64_t_rand_add_52_good();
__int64 badSource_9();
int CWE190_Integer_Overflow__int64_t_rand_square_42_bad();
__int64 goodG2BSource_9();
int goodG2B_269();
__int64 goodB2GSource_9();
int goodB2G_247();
int CWE190_Integer_Overflow__int64_t_rand_square_42_good();
int CWE190_Integer_Overflow__int_connect_socket_add_09_bad();
int goodB2G1_162();
int goodB2G2_162();
int goodG2B1_140();
int goodG2B2_140();
int CWE190_Integer_Overflow__int_connect_socket_add_09_good();
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_51b_badSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_51b_goodG2BSink(__int64 a1);
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_51b_goodB2GSink(__int64 a1);
int CWE190_Integer_Overflow__int_connect_socket_square_66_bad();
int goodG2B_270();
int goodB2G_248();
int CWE190_Integer_Overflow__int_connect_socket_square_66_good();
int CWE190_Integer_Overflow__int64_t_max_multiply_51_bad();
int goodG2B_271();
int goodB2G_249();
int CWE190_Integer_Overflow__int64_t_max_multiply_51_good();
__int64 staticReturnsTrue_9();
__int64 staticReturnsFalse_9();
int CWE190_Integer_Overflow__int_connect_socket_add_08_bad();
int goodB2G1_163();
int goodB2G2_163();
int goodG2B1_141();
int goodG2B2_141();
int CWE190_Integer_Overflow__int_connect_socket_add_08_good();
int CWE190_Integer_Overflow__int64_t_rand_add_16_bad();
int goodB2G_250();
int goodG2B_272();
int CWE190_Integer_Overflow__int64_t_rand_add_16_good();
int CWE190_Integer_Overflow__int_connect_socket_multiply_61_bad();
int goodG2B_273();
int goodB2G_251();
int CWE190_Integer_Overflow__int_connect_socket_multiply_61_good();
int __fastcall printLine(const char *a1);
int __fastcall printWLine(__int64 a1);
int __fastcall printIntLine(unsigned int a1);
int __fastcall printShortLine(__int16 a1);
int __fastcall printFloatLine(float a1);
int __fastcall printLongLine(__int64 a1);
int __fastcall printLongLongLine(__int64 a1);
int __fastcall printSizeTLine(__int64 a1);
int __fastcall printHexCharLine(char a1);
int __fastcall printWcharLine(int a1);
int __fastcall printUnsignedLine(unsigned int a1);
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1);
int __fastcall printDoubleLine(double a1);
int __fastcall printStructLine(unsigned int *a1);
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2);
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3);
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3);
__int64 globalReturnsTrue();
__int64 globalReturnsFalse();
__int64 globalReturnsTrueOrFalse();
void good1();
void good2();
void good3();
void good4();
void good5();
void good6();
void good7();
void good8();
void good9();
void bad1();
void bad2();
void bad3();
void bad4();
void bad5();
void bad6();
void bad7();
void bad8();
void bad9();
void __fastcall __noreturn internal_start(void *a1);
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3);
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1);
__int64 __fastcall stdThreadDestroy(void *a1);
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1);
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1);
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1);
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1);
void _libc_csu_init(void); // idb
void _libc_csu_fini(void); // idb
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

_UNKNOWN unk_454670; // weak
_UNKNOWN unk_455D34; // weak
_UNKNOWN unk_4569D0; // weak
_UNKNOWN unk_457498; // weak
_UNKNOWN unk_457500; // weak
_UNKNOWN unk_458730; // weak
_UNKNOWN unk_458B40; // weak
_UNKNOWN unk_4591B0; // weak
_UNKNOWN unk_459D70; // weak
_UNKNOWN unk_45B6B0; // weak
_UNKNOWN unk_45B720; // weak
char s[3] = { '\0', '\0', '\0' }; // idb
int GLOBAL_CONST_TRUE = 1; // weak
int GLOBAL_CONST_FALSE = 0; // weak
int GLOBAL_CONST_FIVE = 5; // weak
__int64 (__fastcall *_frame_dummy_init_array_entry[2])() = { &frame_dummy, &_do_global_dtors_aux }; // weak
__int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)() = &_do_global_dtors_aux; // weak
__int64 (*qword_679010)(void) = NULL; // weak
int staticFive = 5; // weak
int staticTrue = 1; // weak
int staticTrue_0 = 1; // weak
int staticFive_0 = 5; // weak
int staticTrue_1 = 1; // weak
int staticTrue_2 = 1; // weak
int staticFive_1 = 5; // weak
int staticFive_2 = 5; // weak
int staticFive_3 = 5; // weak
int staticTrue_3 = 1; // weak
int staticTrue_4 = 1; // weak
int staticTrue_5 = 1; // weak
int staticFive_4 = 5; // weak
int staticTrue_6 = 1; // weak
int staticFive_5 = 5; // weak
int staticFive_6 = 5; // weak
int staticFive_7 = 5; // weak
int staticFive_8 = 5; // weak
int staticTrue_7 = 1; // weak
int staticTrue_8 = 1; // weak
int staticFive_9 = 5; // weak
int staticTrue_9 = 1; // weak
int globalTrue = 1; // weak
int globalFive = 5; // weak
FILE *stdin; // idb
char completed_6355; // weak
int CWE190_Integer_Overflow__int64_t_rand_add_22_badGlobal; // weak
int CWE190_Integer_Overflow__int64_t_rand_add_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int64_t_rand_add_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int64_t_rand_add_22_goodG2BGlobal; // weak
int badStatic; // weak
int goodB2G1Static; // weak
int goodB2G2Static; // weak
int goodG2BStatic; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_square_45_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_square_45_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_square_45_goodB2GData; // weak
int badStatic_0; // weak
int goodB2G1Static_0; // weak
int goodB2G2Static_0; // weak
int goodG2BStatic_0; // weak
int CWE190_Integer_Overflow__int_connect_socket_square_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_connect_socket_square_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_connect_socket_square_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_connect_socket_square_22_goodG2BGlobal; // weak
int staticFalse; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_45_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_45_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_45_goodB2GData; // weak
int badStatic_1; // weak
int goodB2G1Static_1; // weak
int goodB2G2Static_1; // weak
int goodG2BStatic_1; // weak
int badStatic_2; // weak
int goodB2G1Static_2; // weak
int goodB2G2Static_2; // weak
int goodG2BStatic_2; // weak
int CWE190_Integer_Overflow__int_connect_socket_add_45_badData; // weak
int CWE190_Integer_Overflow__int_connect_socket_add_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_connect_socket_add_45_goodB2GData; // weak
int badStatic_3; // weak
int goodB2G1Static_3; // weak
int goodB2G2Static_3; // weak
int goodG2BStatic_3; // weak
int badStatic_4; // weak
int goodB2G1Static_4; // weak
int goodB2G2Static_4; // weak
int goodG2BStatic_4; // weak
int staticFalse_0; // weak
int CWE190_Integer_Overflow__int64_t_max_multiply_22_badGlobal; // weak
int CWE190_Integer_Overflow__int64_t_max_multiply_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int64_t_max_multiply_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int64_t_max_multiply_22_goodG2BGlobal; // weak
int staticFalse_1; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_add_45_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_add_45_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_add_45_goodB2GData; // weak
int CWE190_Integer_Overflow__int_connect_socket_multiply_45_badData; // weak
int CWE190_Integer_Overflow__int_connect_socket_multiply_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_connect_socket_multiply_45_goodB2GData; // weak
int CWE190_Integer_Overflow__int64_t_max_add_22_badGlobal; // weak
int CWE190_Integer_Overflow__int64_t_max_add_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int64_t_max_add_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int64_t_max_add_22_goodG2BGlobal; // weak
int staticFalse_2; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_square_45_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_square_45_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_square_45_goodB2GData; // weak
int badStatic_5; // weak
int goodB2G1Static_5; // weak
int goodB2G2Static_5; // weak
int goodG2BStatic_5; // weak
int CWE190_Integer_Overflow__int64_t_rand_multiply_22_badGlobal; // weak
int CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__int64_t_fscanf_square_22_badGlobal; // weak
int CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodG2BGlobal; // weak
int badStatic_6; // weak
int goodB2G1Static_6; // weak
int goodB2G2Static_6; // weak
int goodG2BStatic_6; // weak
int badStatic_7; // weak
int goodB2G1Static_7; // weak
int goodB2G2Static_7; // weak
int goodG2BStatic_7; // weak
int staticFalse_3; // weak
int staticFalse_4; // weak
int CWE190_Integer_Overflow__int_connect_socket_multiply_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodG2BGlobal; // weak
int staticFalse_5; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_multiply_45_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_multiply_45_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_multiply_45_goodB2GData; // weak
int staticFalse_6; // weak
__int64 CWE190_Integer_Overflow__int64_t_fscanf_square_45_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_fscanf_square_45_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_fscanf_square_45_goodB2GData; // weak
int CWE190_Integer_Overflow__int64_t_rand_square_22_badGlobal; // weak
int CWE190_Integer_Overflow__int64_t_rand_square_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int64_t_rand_square_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int64_t_rand_square_22_goodG2BGlobal; // weak
int badStatic_8; // weak
int goodB2G1Static_8; // weak
int goodB2G2Static_8; // weak
int goodG2BStatic_8; // weak
int CWE190_Integer_Overflow__int_connect_socket_add_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_connect_socket_add_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_connect_socket_add_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_connect_socket_add_22_goodG2BGlobal; // weak
int staticFalse_7; // weak
int CWE190_Integer_Overflow__int64_t_max_square_22_badGlobal; // weak
int CWE190_Integer_Overflow__int64_t_max_square_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int64_t_max_square_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int64_t_max_square_22_goodG2BGlobal; // weak
int CWE190_Integer_Overflow__int_connect_socket_square_45_badData; // weak
int CWE190_Integer_Overflow__int_connect_socket_square_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_connect_socket_square_45_goodB2GData; // weak
int badStatic_9; // weak
int goodB2G1Static_9; // weak
int goodB2G2Static_9; // weak
int goodG2BStatic_9; // weak
int CWE190_Integer_Overflow__int_fgets_add_45_badData; // weak
int CWE190_Integer_Overflow__int_fgets_add_45_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fgets_add_45_goodB2GData; // weak
int CWE190_Integer_Overflow__int_fgets_add_22_badGlobal; // weak
int CWE190_Integer_Overflow__int_fgets_add_22_goodB2G1Global; // weak
int CWE190_Integer_Overflow__int_fgets_add_22_goodB2G2Global; // weak
int CWE190_Integer_Overflow__int_fgets_add_22_goodG2BGlobal; // weak
int staticFalse_8; // weak
int staticFalse_9; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_add_45_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_add_45_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_add_45_goodB2GData; // weak
int globalFalse; // weak
int globalArgc; // weak
__int64 globalArgv; // weak
int CWE190_Integer_Overflow__int_connect_socket_multiply_68_badData; // weak
int CWE190_Integer_Overflow__int_connect_socket_multiply_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_connect_socket_multiply_68_goodB2GData; // weak
__int64 CWE190_Integer_Overflow__int64_t_fscanf_square_68_goodB2GData; // weak
__int64 CWE190_Integer_Overflow__int64_t_fscanf_square_68_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_fscanf_square_68_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_square_68_goodB2GData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_square_68_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_square_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_connect_socket_add_68_badData; // weak
int CWE190_Integer_Overflow__int_connect_socket_add_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_connect_socket_add_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_connect_socket_square_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_connect_socket_square_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_connect_socket_square_68_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_square_68_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_square_68_goodB2GData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_square_68_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_68_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_68_goodB2GData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_68_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_add_68_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_add_68_goodB2GData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_add_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fgets_add_68_goodG2BData; // weak
int CWE190_Integer_Overflow__int_fgets_add_68_goodB2GData; // weak
int CWE190_Integer_Overflow__int_fgets_add_68_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_multiply_68_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_multiply_68_goodB2GData; // weak
__int64 CWE190_Integer_Overflow__int64_t_max_multiply_68_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_add_68_goodG2BData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_add_68_badData; // weak
__int64 CWE190_Integer_Overflow__int64_t_rand_add_68_goodB2GData; // weak
// extern _UNKNOWN __gmon_start__; weak


//----- (0000000000400B28) ----------------------------------------------------
void *init_proc()
{
  void *result; // rax

  result = &__gmon_start__;
  if ( &__gmon_start__ )
    result = (void *)_gmon_start__();
  return result;
}
// 400D40: using guessed type __int64 _gmon_start__(void);

//----- (0000000000400B50) ----------------------------------------------------
__int64 sub_400B50()
{
  return qword_679010();
}
// 679010: using guessed type __int64 (*qword_679010)(void);

//----- (0000000000400D50) ----------------------------------------------------
// positive sp value has been detected, the output may be wrong!
void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>)
{
  int v2; // esi
  int v3; // [rsp-8h] [rbp-8h]
  __int64 _0; // [rsp+0h] [rbp+0h]

  v2 = v3;
  *(_QWORD *)&v3 = a1;
  __libc_start_main(
    (int (__fastcall *)(int, char **, char **))main,
    v2,
    (char **)&_0,
    _libc_csu_init,
    _libc_csu_fini,
    a2,
    &v3);
  __halt();
}
// 400D56: positive sp value 8 has been found

//----- (0000000000400D80) ----------------------------------------------------
__int64 deregister_tm_clones()
{
  __int64 result; // rax

  result = 6787447LL - (_QWORD)&stdin;
  if ( (unsigned __int64)(6787447LL - (_QWORD)&stdin) > 0xE )
    result = 0LL;
  return result;
}

//----- (0000000000400DB0) ----------------------------------------------------
__int64 register_tm_clones()
{
  return 0LL;
}

//----- (0000000000400DF0) ----------------------------------------------------
__int64 _do_global_dtors_aux()
{
  __int64 result; // rax

  if ( !completed_6355 )
  {
    result = deregister_tm_clones();
    completed_6355 = 1;
  }
  return result;
}
// 679178: using guessed type char completed_6355;

//----- (0000000000400E10) ----------------------------------------------------
__int64 frame_dummy()
{
  return register_tm_clones();
}
// 400E10: could not find valid save-restore pair for rbp

//----- (0000000000400E3D) ----------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  unsigned int v3; // eax

  v3 = time(0LL);
  srand(v3);
  globalArgc = argc;
  globalArgv = (__int64)argv;
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_67_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_13_good();");
  CWE190_Integer_Overflow__int_fgets_add_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_12_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_45_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_22_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_22_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_32_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_32_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_54_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_54_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_42_good();");
  CWE190_Integer_Overflow__int64_t_max_add_42_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_03_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_16_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_16_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_67_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_68_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_42_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_42_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_15_good();");
  CWE190_Integer_Overflow__int64_t_max_add_15_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_09_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_22_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_22_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_61_good();");
  CWE190_Integer_Overflow__int64_t_max_add_61_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_01_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_44_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_44_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_51_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_54_good();");
  CWE190_Integer_Overflow__int_fgets_add_54_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_68_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_05_good();");
  CWE190_Integer_Overflow__int_fgets_add_05_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_01_good();");
  CWE190_Integer_Overflow__int64_t_max_add_01_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_08_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_63_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_63_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_22_good();");
  CWE190_Integer_Overflow__int64_t_max_add_22_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_22_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_22_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_22_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_22_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_41_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_17_good();");
  CWE190_Integer_Overflow__int_fgets_add_17_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_01_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_51_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_34_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_34_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_66_good();");
  CWE190_Integer_Overflow__int64_t_max_add_66_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_41_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_41_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_06_good();");
  CWE190_Integer_Overflow__int64_t_max_square_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_21_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_04_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_04_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_67_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_67_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_61_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_61_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_65_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_65_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_68_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_10_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_10_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_22_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_22_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_67_good();");
  CWE190_Integer_Overflow__int64_t_max_square_67_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_05_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_05_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_16_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_16_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_32_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_32_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_64_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_64_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_64_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_64_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_63_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_10_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_10_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_64_good();");
  CWE190_Integer_Overflow__int64_t_max_square_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_41_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_05_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_05_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_65_good();");
  CWE190_Integer_Overflow__int64_t_max_square_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_02_good();");
  CWE190_Integer_Overflow__int_fgets_add_02_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_14_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_14_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_14_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_12_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_12_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_17_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_16_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_68_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_11_good();");
  CWE190_Integer_Overflow__int_fgets_add_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_01_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_16_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_16_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_65_good();");
  CWE190_Integer_Overflow__int64_t_max_add_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_08_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_08_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_51_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_51_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_41_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_41_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_11_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_06_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_02_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_02_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_01_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_01_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_66_good();");
  CWE190_Integer_Overflow__int64_t_max_square_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_06_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_06_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_17_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_17_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_21_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_21_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_03_good();");
  CWE190_Integer_Overflow__int64_t_max_add_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_32_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_32_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_51_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_51_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_53_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_53_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_63_good();");
  CWE190_Integer_Overflow__int64_t_max_square_63_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_45_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_45_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_45_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_45_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_12_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_64_good();");
  CWE190_Integer_Overflow__int_fgets_add_64_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_11_good();");
  CWE190_Integer_Overflow__int64_t_max_add_11_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_21_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_08_good();");
  CWE190_Integer_Overflow__int_fgets_add_08_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_06_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_06_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_52_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_44_good();");
  CWE190_Integer_Overflow__int_fgets_add_44_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_13_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_13_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_52_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_52_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_09_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_09_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_61_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_61_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_16_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_31_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_51_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_51_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_64_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_18_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_66_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_03_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_44_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_11_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_11_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_34_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_34_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_15_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_61_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_61_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_09_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_61_good();");
  CWE190_Integer_Overflow__int_fgets_add_61_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_08_good();");
  CWE190_Integer_Overflow__int64_t_max_add_08_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_06_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_65_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_65_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_05_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_05_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_31_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_31_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_04_good();");
  CWE190_Integer_Overflow__int64_t_max_add_04_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_45_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_45_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_07_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_07_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_52_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_52_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_21_good();");
  CWE190_Integer_Overflow__int64_t_max_square_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_17_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_41_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_41_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_65_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_05_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_05_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_17_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_17_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_34_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_34_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_03_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_06_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_06_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_09_good();");
  CWE190_Integer_Overflow__int64_t_max_square_09_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_66_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_66_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_34_good();");
  CWE190_Integer_Overflow__int64_t_max_square_34_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_09_good();");
  CWE190_Integer_Overflow__int64_t_max_add_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_53_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_53_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_01_good();");
  CWE190_Integer_Overflow__int64_t_max_square_01_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_54_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_54_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_42_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_42_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_53_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_53_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_68_good();");
  CWE190_Integer_Overflow__int64_t_max_add_68_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_09_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_09_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_16_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_16_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_16_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_15_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_06_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_45_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_45_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_06_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_06_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_53_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_12_good();");
  CWE190_Integer_Overflow__int_fgets_add_12_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_41_good();");
  CWE190_Integer_Overflow__int64_t_max_square_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_14_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_14_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_10_good();");
  CWE190_Integer_Overflow__int64_t_max_square_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_65_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_31_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_31_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_06_good();");
  CWE190_Integer_Overflow__int64_t_max_add_06_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_03_good();");
  CWE190_Integer_Overflow__int64_t_max_square_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_34_good();");
  CWE190_Integer_Overflow__int64_t_max_add_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_52_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_11_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_11_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_12_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_61_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_03_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_04_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_04_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_53_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_53_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_11_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_11_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_34_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_13_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_13_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_08_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_08_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_12_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_12_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_42_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_42_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_51_good();");
  CWE190_Integer_Overflow__int64_t_max_add_51_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_14_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_14_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_08_good();");
  CWE190_Integer_Overflow__int64_t_max_square_08_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_44_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_44_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_13_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_13_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_05_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_67_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_67_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_54_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_54_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_04_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_04_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_31_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_31_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_16_good();");
  CWE190_Integer_Overflow__int64_t_max_square_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_53_good();");
  CWE190_Integer_Overflow__int_fgets_add_53_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_14_good();");
  CWE190_Integer_Overflow__int64_t_max_square_14_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_08_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_08_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_02_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_02_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_05_good();");
  CWE190_Integer_Overflow__int64_t_max_add_05_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_02_good();");
  CWE190_Integer_Overflow__int64_t_max_add_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_11_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_11_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_15_good();");
  CWE190_Integer_Overflow__int64_t_max_square_15_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_02_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_02_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_21_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_21_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_12_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_05_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_05_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_32_good();");
  CWE190_Integer_Overflow__int64_t_max_add_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_32_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_32_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_06_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_32_good();");
  CWE190_Integer_Overflow__int_fgets_add_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_10_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_10_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_18_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_18_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_63_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_63_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_63_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_02_good();");
  CWE190_Integer_Overflow__int64_t_max_square_02_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_15_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_18_good();");
  CWE190_Integer_Overflow__int_fgets_add_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_68_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_68_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_63_good();");
  CWE190_Integer_Overflow__int64_t_max_add_63_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_45_good();");
  CWE190_Integer_Overflow__int64_t_max_square_45_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_66_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_66_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_16_good();");
  CWE190_Integer_Overflow__int64_t_max_add_16_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_64_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_64_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_67_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_07_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_07_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_21_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_09_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_42_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_15_good();");
  CWE190_Integer_Overflow__int_fgets_add_15_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_63_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_63_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_66_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_44_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_64_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_68_good();");
  CWE190_Integer_Overflow__int_fgets_add_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_13_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_13_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_61_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_61_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_54_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_54_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_10_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_06_good();");
  CWE190_Integer_Overflow__int_fgets_add_06_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_54_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_54_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_02_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_32_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_63_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_63_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_45_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_45_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_64_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_64_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_52_good();");
  CWE190_Integer_Overflow__int64_t_max_add_52_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_44_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_44_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_18_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_51_good();");
  CWE190_Integer_Overflow__int_fgets_add_51_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_42_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_52_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_52_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_07_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_67_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_12_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_12_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_41_good();");
  CWE190_Integer_Overflow__int_fgets_add_41_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_03_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_03_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_66_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_66_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_52_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_52_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_34_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_34_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_67_good();");
  CWE190_Integer_Overflow__int64_t_max_add_67_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_68_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_68_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_31_good();");
  CWE190_Integer_Overflow__int64_t_max_square_31_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_04_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_08_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_08_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_54_good();");
  CWE190_Integer_Overflow__int64_t_max_square_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_22_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_07_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_63_good();");
  CWE190_Integer_Overflow__int_fgets_add_63_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_67_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_67_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_63_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_63_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_51_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_51_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_53_good();");
  CWE190_Integer_Overflow__int64_t_max_square_53_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_68_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_68_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_34_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_34_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_41_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_41_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_12_good();");
  CWE190_Integer_Overflow__int64_t_max_add_12_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_22_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_22_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_32_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_32_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_44_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_44_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_61_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_61_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_21_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_21_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_44_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_44_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_02_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_15_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_15_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_65_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_02_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_02_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_15_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_09_good();");
  CWE190_Integer_Overflow__int_fgets_add_09_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_01_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_17_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_17_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_18_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_18_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_18_good();");
  CWE190_Integer_Overflow__int64_t_max_square_18_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_15_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_65_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_65_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_63_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_63_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_11_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_11_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_14_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_14_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_13_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_13_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_10_good();");
  CWE190_Integer_Overflow__int64_t_max_add_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_07_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_07_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_18_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_18_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_31_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_17_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_03_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_18_good();");
  CWE190_Integer_Overflow__int64_t_max_add_18_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_31_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_31_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_31_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_31_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_04_good();");
  CWE190_Integer_Overflow__int64_t_max_square_04_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_21_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_01_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_52_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_52_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_45_good();");
  CWE190_Integer_Overflow__int64_t_max_add_45_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_03_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_05_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_01_good();");
  CWE190_Integer_Overflow__int_fgets_add_01_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_66_good();");
  CWE190_Integer_Overflow__int_fgets_add_66_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_07_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_07_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_18_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_18_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_54_good();");
  CWE190_Integer_Overflow__int64_t_max_add_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_14_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_21_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_21_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_03_good();");
  CWE190_Integer_Overflow__int_fgets_add_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_08_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_08_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_02_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_02_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_22_good();");
  CWE190_Integer_Overflow__int64_t_max_square_22_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_51_good();");
  CWE190_Integer_Overflow__int64_t_max_square_51_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_11_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_11_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_04_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_04_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_44_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_44_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_14_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_14_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_14_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_18_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_18_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_53_good();");
  CWE190_Integer_Overflow__int64_t_max_add_53_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_17_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_01_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_01_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_42_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_42_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_13_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_13_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_51_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_51_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_15_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_10_good();");
  CWE190_Integer_Overflow__int_fgets_add_10_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_05_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_05_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_13_good();");
  CWE190_Integer_Overflow__int64_t_max_add_13_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_07_good();");
  CWE190_Integer_Overflow__int64_t_max_square_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_42_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_42_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_32_good();");
  CWE190_Integer_Overflow__int64_t_max_square_32_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_32_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_32_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_32_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_32_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_61_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_61_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_31_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_31_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_10_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_10_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_10_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_10_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_10_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_10_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_68_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_68_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_64_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_66_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_66_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_09_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_09_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_42_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_52_good();");
  CWE190_Integer_Overflow__int_fgets_add_52_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_16_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_16_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_13_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_08_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_08_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_10_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_10_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_12_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_12_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_66_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_66_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_53_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_53_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_04_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_04_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_07_good();");
  CWE190_Integer_Overflow__int64_t_max_add_07_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_17_good();");
  CWE190_Integer_Overflow__int64_t_max_add_17_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_54_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_54_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_53_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_51_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_51_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_65_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_65_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_54_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_54_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_41_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_41_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_12_good();");
  CWE190_Integer_Overflow__int64_t_max_square_12_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_44_good();");
  CWE190_Integer_Overflow__int64_t_max_add_44_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_14_good();");
  CWE190_Integer_Overflow__int64_t_max_add_14_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_31_good();");
  CWE190_Integer_Overflow__int64_t_max_add_31_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_21_good();");
  CWE190_Integer_Overflow__int64_t_max_add_21_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_41_good();");
  CWE190_Integer_Overflow__int64_t_max_add_41_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_66_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_66_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_13_good();");
  CWE190_Integer_Overflow__int64_t_max_square_13_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_45_good();");
  CWE190_Integer_Overflow__int_fgets_add_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_34_good();");
  CWE190_Integer_Overflow__int_fgets_add_34_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_67_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_67_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_53_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_53_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_45_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_45_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_04_good();");
  CWE190_Integer_Overflow__int_fgets_add_04_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_09_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_42_good();");
  CWE190_Integer_Overflow__int_fgets_add_42_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_22_good();");
  CWE190_Integer_Overflow__int_fgets_add_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_07_good();");
  CWE190_Integer_Overflow__int_fgets_add_07_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_11_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_11_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_68_good();");
  CWE190_Integer_Overflow__int64_t_max_square_68_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_61_good();");
  CWE190_Integer_Overflow__int64_t_max_square_61_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_13_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_13_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_07_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_07_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_11_good();");
  CWE190_Integer_Overflow__int64_t_max_square_11_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_45_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_45_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_17_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_17_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_07_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_07_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_14_good();");
  CWE190_Integer_Overflow__int_fgets_add_14_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_67_good();");
  CWE190_Integer_Overflow__int_fgets_add_67_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_42_good();");
  CWE190_Integer_Overflow__int64_t_max_square_42_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_61_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_61_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_17_good();");
  CWE190_Integer_Overflow__int64_t_max_square_17_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_01_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_01_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_44_good();");
  CWE190_Integer_Overflow__int64_t_max_square_44_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_52_good();");
  CWE190_Integer_Overflow__int64_t_max_square_52_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_04_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_04_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_65_good();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_65_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_64_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_64_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_02_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_02_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_52_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_52_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_34_good();");
  CWE190_Integer_Overflow__int64_t_max_multiply_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_31_good();");
  CWE190_Integer_Overflow__int_fgets_add_31_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_03_good();");
  CWE190_Integer_Overflow__int64_t_rand_square_03_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_08_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_08_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_05_good();");
  CWE190_Integer_Overflow__int64_t_max_square_05_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_18_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_18_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_16_good();");
  CWE190_Integer_Overflow__int_fgets_add_16_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_54_good();");
  CWE190_Integer_Overflow__int64_t_rand_add_54_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_04_good();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_04_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_22_good();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_22_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_65_good();");
  CWE190_Integer_Overflow__int_fgets_add_65_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_64_good();");
  CWE190_Integer_Overflow__int64_t_max_add_64_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_41_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_41_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_34_good();");
  CWE190_Integer_Overflow__int_connect_socket_add_34_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_09_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_09_good();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_15_good();");
  CWE190_Integer_Overflow__int_connect_socket_square_15_good();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_21_good();");
  CWE190_Integer_Overflow__int_fgets_add_21_good();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_67_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_13_bad();");
  CWE190_Integer_Overflow__int_fgets_add_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_12_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_45_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_22_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_32_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_54_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_42_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_03_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_16_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_67_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_68_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_42_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_15_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_09_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_22_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_61_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_01_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_44_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_51_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_54_bad();");
  CWE190_Integer_Overflow__int_fgets_add_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_68_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_05_bad();");
  CWE190_Integer_Overflow__int_fgets_add_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_01_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_08_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_63_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_22_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_22_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_22_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_41_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_17_bad();");
  CWE190_Integer_Overflow__int_fgets_add_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_01_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_51_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_34_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_66_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_41_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_06_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_21_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_04_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_67_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_61_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_65_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_68_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_10_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_22_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_67_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_05_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_16_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_32_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_64_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_64_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_63_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_10_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_64_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_41_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_05_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_65_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_02_bad();");
  CWE190_Integer_Overflow__int_fgets_add_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_14_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_14_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_12_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_17_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_16_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_68_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_11_bad();");
  CWE190_Integer_Overflow__int_fgets_add_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_01_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_16_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_65_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_08_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_51_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_41_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_11_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_06_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_02_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_01_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_66_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_06_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_17_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_21_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_03_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_32_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_51_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_53_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_63_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_45_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_45_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_12_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_64_bad();");
  CWE190_Integer_Overflow__int_fgets_add_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_11_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_21_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_08_bad();");
  CWE190_Integer_Overflow__int_fgets_add_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_06_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_52_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_44_bad();");
  CWE190_Integer_Overflow__int_fgets_add_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_13_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_52_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_09_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_61_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_16_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_31_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_51_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_64_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_18_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_66_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_03_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_44_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_11_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_34_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_15_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_61_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_09_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_61_bad();");
  CWE190_Integer_Overflow__int_fgets_add_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_08_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_06_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_65_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_05_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_31_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_04_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_45_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_07_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_52_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_21_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_17_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_41_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_65_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_05_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_17_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_34_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_03_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_06_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_09_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_66_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_34_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_09_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_53_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_01_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_54_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_42_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_53_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_68_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_09_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_16_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_16_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_15_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_06_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_45_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_06_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_53_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_12_bad();");
  CWE190_Integer_Overflow__int_fgets_add_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_41_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_14_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_10_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_65_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_31_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_06_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_03_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_34_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_52_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_11_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_12_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_61_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_03_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_04_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_53_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_11_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_34_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_13_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_08_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_12_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_42_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_51_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_14_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_08_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_44_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_13_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_05_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_67_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_54_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_04_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_31_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_16_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_53_bad();");
  CWE190_Integer_Overflow__int_fgets_add_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_14_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_08_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_02_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_05_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_02_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_11_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_15_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_02_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_21_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_12_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_05_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_32_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_32_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_06_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_32_bad();");
  CWE190_Integer_Overflow__int_fgets_add_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_10_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_18_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_63_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_63_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_02_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_15_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_18_bad();");
  CWE190_Integer_Overflow__int_fgets_add_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_68_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_63_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_45_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_66_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_16_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_64_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_67_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_07_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_21_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_09_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_42_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_15_bad();");
  CWE190_Integer_Overflow__int_fgets_add_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_63_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_66_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_44_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_64_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_68_bad();");
  CWE190_Integer_Overflow__int_fgets_add_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_13_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_61_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_54_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_10_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_06_bad();");
  CWE190_Integer_Overflow__int_fgets_add_06_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_54_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_02_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_32_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_63_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_45_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_64_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_52_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_44_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_18_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_51_bad();");
  CWE190_Integer_Overflow__int_fgets_add_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_42_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_52_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_07_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_67_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_12_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_41_bad();");
  CWE190_Integer_Overflow__int_fgets_add_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_03_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_66_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_52_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_34_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_67_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_68_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_31_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_04_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_08_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_54_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_22_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_07_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_63_bad();");
  CWE190_Integer_Overflow__int_fgets_add_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_67_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_63_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_51_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_53_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_68_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_34_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_41_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_12_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_22_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_32_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_44_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_61_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_21_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_44_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_02_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_15_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_65_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_02_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_15_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_09_bad();");
  CWE190_Integer_Overflow__int_fgets_add_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_01_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_17_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_18_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_18_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_15_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_65_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_63_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_63_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_11_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_14_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_13_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_10_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_07_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_18_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_31_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_17_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_03_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_18_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_31_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_31_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_04_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_21_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_01_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_52_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_45_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_03_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_05_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_01_bad();");
  CWE190_Integer_Overflow__int_fgets_add_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_66_bad();");
  CWE190_Integer_Overflow__int_fgets_add_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_07_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_18_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_54_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_14_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_21_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_03_bad();");
  CWE190_Integer_Overflow__int_fgets_add_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_08_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_02_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_22_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_51_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_11_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_04_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_44_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_14_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_14_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_18_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_53_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_17_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_01_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_42_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_13_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_51_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_15_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_10_bad();");
  CWE190_Integer_Overflow__int_fgets_add_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_05_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_13_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_07_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_42_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_32_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_32_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_32_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_32_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_61_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_31_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_10_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_10_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_10_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_68_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_64_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_66_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_09_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_42_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_52_bad();");
  CWE190_Integer_Overflow__int_fgets_add_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_16_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_13_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_08_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_10_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_10_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_12_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_66_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_53_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_04_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_07_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_17_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_54_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_53_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_51_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_51_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_65_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_54_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_41_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_12_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_12_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_44_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_14_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_31_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_21_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_21_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_41_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_66_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_66_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_13_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_45_bad();");
  CWE190_Integer_Overflow__int_fgets_add_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_34_bad();");
  CWE190_Integer_Overflow__int_fgets_add_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_67_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_53_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_53_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_45_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_04_bad();");
  CWE190_Integer_Overflow__int_fgets_add_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_09_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_42_bad();");
  CWE190_Integer_Overflow__int_fgets_add_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_22_bad();");
  CWE190_Integer_Overflow__int_fgets_add_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_07_bad();");
  CWE190_Integer_Overflow__int_fgets_add_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_11_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_68_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_68_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_61_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_13_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_13_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_07_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_11_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_11_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_45_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_45_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_17_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_07_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_07_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_14_bad();");
  CWE190_Integer_Overflow__int_fgets_add_14_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_67_bad();");
  CWE190_Integer_Overflow__int_fgets_add_67_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_42_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_42_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_61_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_61_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_17_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_17_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_01_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_01_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_44_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_44_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_52_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_04_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_multiply_65_bad();");
  CWE190_Integer_Overflow__int64_t_rand_multiply_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_64_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_02_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_02_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_52_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_52_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_multiply_34_bad();");
  CWE190_Integer_Overflow__int64_t_max_multiply_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_31_bad();");
  CWE190_Integer_Overflow__int_fgets_add_31_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_square_03_bad();");
  CWE190_Integer_Overflow__int64_t_rand_square_03_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_08_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_08_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_square_05_bad();");
  CWE190_Integer_Overflow__int64_t_max_square_05_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_18_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_18_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_16_bad();");
  CWE190_Integer_Overflow__int_fgets_add_16_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_rand_add_54_bad();");
  CWE190_Integer_Overflow__int64_t_rand_add_54_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_multiply_04_bad();");
  CWE190_Integer_Overflow__int_connect_socket_multiply_04_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_fscanf_square_22_bad();");
  CWE190_Integer_Overflow__int64_t_fscanf_square_22_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_65_bad();");
  CWE190_Integer_Overflow__int_fgets_add_65_bad();
  printLine("Calling CWE190_Integer_Overflow__int64_t_max_add_64_bad();");
  CWE190_Integer_Overflow__int64_t_max_add_64_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_41_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_41_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_add_34_bad();");
  CWE190_Integer_Overflow__int_connect_socket_add_34_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_09_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_09_bad();
  printLine("Calling CWE190_Integer_Overflow__int_connect_socket_square_15_bad();");
  CWE190_Integer_Overflow__int_connect_socket_square_15_bad();
  printLine("Calling CWE190_Integer_Overflow__int_fgets_add_21_bad();");
  CWE190_Integer_Overflow__int_fgets_add_21_bad();
  return 0;
}
// 6793FC: using guessed type int globalArgc;
// 679400: using guessed type __int64 globalArgv;

//----- (0000000000404FC8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_52_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_square_52b_badSink(v4);
}

//----- (0000000000405085) ----------------------------------------------------
int goodG2B()
{
  return CWE190_Integer_Overflow__int64_t_rand_square_52b_goodG2BSink(2LL);
}

//----- (00000000004050AB) ----------------------------------------------------
int goodB2G()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_square_52b_goodB2GSink(v4);
}

//----- (0000000000405168) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_52_good()
{
  goodG2B();
  return goodB2G();
}

//----- (0000000000405182) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_64_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_square_64b_badSink(&v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004051BD) ----------------------------------------------------
int goodG2B_0()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_fscanf_square_64b_goodG2BSink(&v1);
}

//----- (00000000004051E3) ----------------------------------------------------
int goodB2G_0()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_square_64b_goodB2GSink(&v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040521E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_64_good()
{
  goodG2B_0();
  return goodB2G_0();
}

//----- (0000000000405238) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_53c_badSink(a1);
}

//----- (000000000040524F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_53c_goodG2BSink(a1);
}

//----- (0000000000405266) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_53c_goodB2GSink(a1);
}

//----- (000000000040527D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_51b_badSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (00000000004052A4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_51b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (00000000004052CB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_51b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (0000000000405321) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_22_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_add_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_rand_add_22_badSink(v4);
}
// 67917C: using guessed type int CWE190_Integer_Overflow__int64_t_rand_add_22_badGlobal;

//----- (00000000004053E8) ----------------------------------------------------
int goodB2G1()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_add_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int64_t_rand_add_22_goodB2G1Sink(v4);
}
// 679180: using guessed type int CWE190_Integer_Overflow__int64_t_rand_add_22_goodB2G1Global;

//----- (00000000004054AF) ----------------------------------------------------
int goodB2G2()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_add_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int64_t_rand_add_22_goodB2G2Sink(v4);
}
// 679184: using guessed type int CWE190_Integer_Overflow__int64_t_rand_add_22_goodB2G2Global;

//----- (0000000000405576) ----------------------------------------------------
int goodG2B_1()
{
  CWE190_Integer_Overflow__int64_t_rand_add_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_rand_add_22_goodG2BSink(2LL);
}
// 679188: using guessed type int CWE190_Integer_Overflow__int64_t_rand_add_22_goodG2BGlobal;

//----- (00000000004055A6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_22_good()
{
  goodB2G1();
  goodB2G2();
  return goodG2B_1();
}

//----- (00000000004055CA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_52c_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (00000000004055EF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_52c_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000405614) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (000000000040564E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_09_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v5 = v8 * v8;
    result = printIntLine(v8 * v8);
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 40564E: using guessed type char buf[16];

//----- (0000000000405758) ----------------------------------------------------
int goodB2G1_0()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;
// 405758: using guessed type char buf[16];

//----- (0000000000405895) ----------------------------------------------------
int goodB2G2_0()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v8 * v8;
      result = printIntLine(v8 * v8);
    }
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 405895: using guessed type char buf[16];

//----- (00000000004059C6) ----------------------------------------------------
int goodG2B1()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 * v1);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000405A12) ----------------------------------------------------
int goodG2B2()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 * v1);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000405A52) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_09_good()
{
  goodB2G1_0();
  goodB2G2_0();
  goodG2B1();
  return goodG2B2();
}

//----- (0000000000405A80) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_16_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 * v4);
}

//----- (0000000000405B4C) ----------------------------------------------------
int goodB2G_1()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( (long double)abs64(v4) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 * v4);
  return result;
}

//----- (0000000000405C47) ----------------------------------------------------
int goodG2B_2()
{
  return printLongLongLine(4LL);
}

//----- (0000000000405C7C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_16_good()
{
  goodB2G_1();
  return goodG2B_2();
}

//----- (0000000000405C96) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_13_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v1 > 0 )
    result = printLongLongLine(2 * v1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000405CEA) ----------------------------------------------------
int goodB2G1_1()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000405D66) ----------------------------------------------------
int goodB2G2_1()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000405DD6) ----------------------------------------------------
int goodG2B1_0()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v1 > 0 )
    result = printLongLongLine(2 * v1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000405E30) ----------------------------------------------------
int goodG2B2_0()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v1 > 0 )
    result = printLongLongLine(2 * v1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000405E7E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_13_good()
{
  goodB2G1_1();
  goodB2G2_1();
  goodG2B1_0();
  return goodG2B2_0();
}

//----- (0000000000405EAC) ----------------------------------------------------
__int64 staticReturnsTrue()
{
  return 1LL;
}

//----- (0000000000405EB7) ----------------------------------------------------
__int64 staticReturnsFalse()
{
  return 0LL;
}

//----- (0000000000405EC2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_08_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000405F16) ----------------------------------------------------
int goodB2G1_2()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( (unsigned int)staticReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}

//----- (0000000000405F92) ----------------------------------------------------
int goodB2G2_2()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}

//----- (0000000000406002) ----------------------------------------------------
int goodG2B1_1()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000040605C) ----------------------------------------------------
int goodG2B2_1()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue() )
    v1 = 2LL;
  result = staticReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (00000000004060AA) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_08_good()
{
  goodB2G1_2();
  goodB2G2_2();
  goodG2B1_1();
  return goodG2B2_1();
}

//----- (00000000004060D8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_68_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_multiply_68_badData = v7;
  return CWE190_Integer_Overflow__int_connect_socket_multiply_68b_badSink();
}
// 679408: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_68_badData;
// 4060D8: using guessed type char buf[16];

//----- (00000000004061C9) ----------------------------------------------------
int goodG2B_3()
{
  CWE190_Integer_Overflow__int_connect_socket_multiply_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_connect_socket_multiply_68b_goodG2BSink();
}
// 67940C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_68_goodG2BData;

//----- (00000000004061F4) ----------------------------------------------------
int goodB2G_2()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_multiply_68_goodB2GData = v7;
  return CWE190_Integer_Overflow__int_connect_socket_multiply_68b_goodB2GSink();
}
// 679410: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_68_goodB2GData;
// 4061F4: using guessed type char buf[16];

//----- (00000000004062E5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_68_good()
{
  goodG2B_3();
  return goodB2G_2();
}

//----- (00000000004062FF) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_09_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v10 * v10);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004063E1) ----------------------------------------------------
int goodB2G1_3()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+18h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v10) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 * v10);
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004064FE) ----------------------------------------------------
int goodB2G2_3()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+18h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( (long double)abs64(v10) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 * v10);
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040660F) ----------------------------------------------------
int goodG2B1_2()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000406662) ----------------------------------------------------
int goodG2B2_2()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004066A9) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_09_good()
{
  goodB2G1_3();
  goodB2G2_3();
  goodG2B1_2();
  return goodG2B2_2();
}

//----- (00000000004066D7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_63_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_add_63b_badSink(&v1);
}

//----- (0000000000406703) ----------------------------------------------------
int goodG2B_4()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_add_63b_goodG2BSink(&v1);
}

//----- (0000000000406729) ----------------------------------------------------
int goodB2G_3()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_add_63b_goodB2GSink(&v1);
}

//----- (0000000000406755) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_63_good()
{
  goodG2B_4();
  return goodB2G_3();
}

//----- (000000000040676F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_53b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_53c_badSink(a1);
}

//----- (0000000000406789) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_53b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_53c_goodG2BSink(a1);
}

//----- (00000000004067A3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_53b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_53c_goodB2GSink(a1);
}

//----- (00000000004067BD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54e_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004067DD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004067FD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000406832) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_66_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE190_Integer_Overflow__int_connect_socket_add_66b_badSink((__int64)&v5);
}
// 406832: using guessed type char buf[16];

//----- (0000000000406922) ----------------------------------------------------
int goodG2B_5()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_connect_socket_add_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000040694C) ----------------------------------------------------
int goodB2G_4()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE190_Integer_Overflow__int_connect_socket_add_66b_goodB2GSink((__int64)&v5);
}
// 40694C: using guessed type char buf[16];

//----- (0000000000406A3C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_66_good()
{
  goodG2B_5();
  return goodB2G_4();
}

//----- (0000000000406A56) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_51_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_square_51b_badSink(v4);
}

//----- (0000000000406B13) ----------------------------------------------------
int goodG2B_6()
{
  return CWE190_Integer_Overflow__int64_t_rand_square_51b_goodG2BSink(2LL);
}

//----- (0000000000406B39) ----------------------------------------------------
int goodB2G_5()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_square_51b_goodB2GSink(v4);
}

//----- (0000000000406BF6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_51_good()
{
  goodG2B_6();
  return goodB2G_5();
}

//----- (0000000000406C10) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_53_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_multiply_53b_badSink(v7);
}
// 406C10: using guessed type char buf[16];

//----- (0000000000406CF8) ----------------------------------------------------
int goodG2B_7()
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_53b_goodG2BSink(2);
}

//----- (0000000000406D1A) ----------------------------------------------------
int goodB2G_6()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_multiply_53b_goodB2GSink(v7);
}
// 406D1A: using guessed type char buf[16];

//----- (0000000000406E02) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_53_good()
{
  goodG2B_7();
  return goodB2G_6();
}

//----- (0000000000406E1C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_13_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v10 + 1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000406EFF) ----------------------------------------------------
int goodB2G1_4()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040700A) ----------------------------------------------------
int goodB2G2_4()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000407109) ----------------------------------------------------
int goodG2B1_3()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040715D) ----------------------------------------------------
int goodG2B2_3()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004071A5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_13_good()
{
  goodB2G1_4();
  goodB2G2_4();
  goodG2B1_3();
  return goodG2B2_3();
}

//----- (00000000004071D3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_square_54c_badSink(a1);
}

//----- (00000000004071EA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_square_54c_goodG2BSink(a1);
}

//----- (0000000000407201) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_square_54c_goodB2GSink(a1);
}

//----- (0000000000407218) ----------------------------------------------------
int __fastcall badSink(__int64 a1)
{
  int result; // eax

  result = badStatic;
  if ( badStatic )
  {
    if ( a1 > 0 )
      result = printLongLongLine(2 * a1);
  }
  return result;
}
// 67918C: using guessed type int badStatic;

//----- (000000000040724E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_21_bad()
{
  badStatic = 1;
  return badSink(0x7FFFFFFFFFFFFFFFLL);
}
// 67918C: using guessed type int badStatic;

//----- (0000000000407284) ----------------------------------------------------
int __fastcall goodB2G1Sink(__int64 a1)
{
  int result; // eax

  result = goodB2G1Static;
  if ( goodB2G1Static )
    return printLine("Benign, fixed string");
  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}
// 679190: using guessed type int goodB2G1Static;

//----- (00000000004072E2) ----------------------------------------------------
int goodB2G1_5()
{
  goodB2G1Static = 0;
  return goodB2G1Sink(0x7FFFFFFFFFFFFFFFLL);
}
// 679190: using guessed type int goodB2G1Static;

//----- (0000000000407318) ----------------------------------------------------
int __fastcall goodB2G2Sink(__int64 a1)
{
  int result; // eax

  result = goodB2G2Static;
  if ( goodB2G2Static && a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}
// 679194: using guessed type int goodB2G2Static;

//----- (000000000040736A) ----------------------------------------------------
int goodB2G2_5()
{
  goodB2G2Static = 1;
  return goodB2G2Sink(0x7FFFFFFFFFFFFFFFLL);
}
// 679194: using guessed type int goodB2G2Static;

//----- (00000000004073A0) ----------------------------------------------------
int __fastcall goodG2BSink(__int64 a1)
{
  int result; // eax

  result = goodG2BStatic;
  if ( goodG2BStatic )
  {
    if ( a1 > 0 )
      result = printLongLongLine(2 * a1);
  }
  return result;
}
// 679198: using guessed type int goodG2BStatic;

//----- (00000000004073D6) ----------------------------------------------------
int goodG2B_8()
{
  goodG2BStatic = 1;
  return goodG2BSink(2LL);
}
// 679198: using guessed type int goodG2BStatic;

//----- (0000000000407406) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_21_good()
{
  goodB2G1_5();
  goodB2G2_5();
  return goodG2B_8();
}

//----- (000000000040742A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_03_bad()
{
  return printLongLongLine(-2LL);
}

//----- (0000000000407468) ----------------------------------------------------
int goodB2G1_6()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004074C2) ----------------------------------------------------
int goodB2G2_6()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040751C) ----------------------------------------------------
int goodG2B1_4()
{
  return printLongLongLine(4LL);
}

//----- (0000000000407554) ----------------------------------------------------
int goodG2B2_4()
{
  return printLongLongLine(4LL);
}

//----- (000000000040758C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_03_good()
{
  goodB2G1_6();
  goodB2G2_6();
  goodG2B1_4();
  return goodG2B2_4();
}

//----- (00000000004075BA) ----------------------------------------------------
int badSink_0()
{
  return printLongLongLine(
           CWE190_Integer_Overflow__int64_t_rand_square_45_badData
         * CWE190_Integer_Overflow__int64_t_rand_square_45_badData);
}
// 6791A0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_square_45_badData;

//----- (00000000004075E8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_45_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_square_45_badData = v4;
  return badSink_0();
}
// 6791A0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_square_45_badData;

//----- (00000000004076AE) ----------------------------------------------------
int goodG2BSink_0()
{
  return printLongLongLine(
           CWE190_Integer_Overflow__int64_t_rand_square_45_goodG2BData
         * CWE190_Integer_Overflow__int64_t_rand_square_45_goodG2BData);
}
// 6791A8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_square_45_goodG2BData;

//----- (00000000004076DC) ----------------------------------------------------
int goodG2B_9()
{
  CWE190_Integer_Overflow__int64_t_rand_square_45_goodG2BData = 2LL;
  return goodG2BSink_0();
}
// 6791A8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_square_45_goodG2BData;

//----- (000000000040770B) ----------------------------------------------------
int goodB2GSink()
{
  int result; // eax

  if ( (long double)abs64(CWE190_Integer_Overflow__int64_t_rand_square_45_goodB2GData) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(
               CWE190_Integer_Overflow__int64_t_rand_square_45_goodB2GData
             * CWE190_Integer_Overflow__int64_t_rand_square_45_goodB2GData);
  return result;
}
// 6791B0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_square_45_goodB2GData;

//----- (0000000000407768) ----------------------------------------------------
int goodB2G_7()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_square_45_goodB2GData = v4;
  return goodB2GSink();
}
// 6791B0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_square_45_goodB2GData;

//----- (000000000040782E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_45_good()
{
  goodG2B_9();
  return goodB2G_7();
}

//----- (0000000000407848) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_14_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (0000000000407897) ----------------------------------------------------
int goodB2G1_7()
{
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 * v1);
}
// 679168: using guessed type int globalFive;

//----- (0000000000407921) ----------------------------------------------------
int goodB2G2_7()
{
  int result; // eax
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( (long double)abs64(v1) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 * v1);
  }
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000040799F) ----------------------------------------------------
int goodG2B1_5()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (00000000004079F4) ----------------------------------------------------
int goodG2B2_5()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (0000000000407A3D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_14_good()
{
  goodB2G1_7();
  goodB2G2_7();
  goodG2B1_5();
  return goodG2B2_5();
}

//----- (0000000000407A6B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_06_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 * v4);
}

//----- (0000000000407B4D) ----------------------------------------------------
int goodB2G1_8()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( (long double)abs64(v4) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 * v4);
  return result;
}

//----- (0000000000407C6A) ----------------------------------------------------
int goodB2G2_8()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( (long double)abs64(v4) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 * v4);
  return result;
}

//----- (0000000000407D7B) ----------------------------------------------------
int goodG2B1_6()
{
  return printLongLongLine(4LL);
}

//----- (0000000000407DCE) ----------------------------------------------------
int goodG2B2_6()
{
  return printLongLongLine(4LL);
}

//----- (0000000000407E15) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_06_good()
{
  goodB2G1_8();
  goodB2G2_8();
  goodG2B1_6();
  return goodG2B2_6();
}

//----- (0000000000407E43) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_32_bad()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 *v5; // [rsp+20h] [rbp-10h]
  __int64 *v6; // [rsp+28h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 0x7FFFFFFFFFFFFFFFLL;
  v1 = 0x7FFFFFFFFFFFFFFFLL;
  v3 = 0x7FFFFFFFFFFFFFFFLL;
  v2 = 1LL;
  return printLongLongLine(1LL);
}

//----- (0000000000407EAD) ----------------------------------------------------
int goodG2B_10()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 *v5; // [rsp+20h] [rbp-10h]
  __int64 *v6; // [rsp+28h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2LL;
  v1 = 2LL;
  v3 = 2LL;
  v2 = 4LL;
  return printLongLongLine(4LL);
}

//----- (0000000000407F11) ----------------------------------------------------
int goodB2G_8()
{
  __int64 v1; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 *v5; // [rsp+30h] [rbp-10h]
  __int64 *v6; // [rsp+38h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 0x7FFFFFFFFFFFFFFFLL;
  v1 = 0x7FFFFFFFFFFFFFFFLL;
  v3 = 0x7FFFFFFFFFFFFFFFLL;
  if ( (long double)abs64(0x7FFFFFFFFFFFFFFFLL) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v3 * v3;
  return printLongLongLine(v3 * v3);
}

//----- (0000000000407FAA) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_32_good()
{
  goodG2B_10();
  return goodB2G_8();
}

//----- (0000000000407FC4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_63b_badSink(__int64 *a1)
{
  __int64 v1; // rax

  v1 = *a1;
  if ( *a1 > 0 )
    LODWORD(v1) = printLongLongLine(2 * *a1);
  return v1;
}

//----- (0000000000407FFB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_63b_goodG2BSink(__int64 *a1)
{
  __int64 v1; // rax

  v1 = *a1;
  if ( *a1 > 0 )
    LODWORD(v1) = printLongLongLine(2 * *a1);
  return v1;
}

//----- (0000000000408032) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_63b_goodB2GSink(__int64 *a1)
{
  __int64 v1; // rax
  __int64 v3; // [rsp+18h] [rbp-8h]

  v1 = *a1;
  v3 = *a1;
  if ( *a1 > 0 )
  {
    if ( v3 > 4611686018427387902LL )
      LODWORD(v1) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v1) = printLongLongLine(2 * v3);
  }
  return v1;
}

//----- (0000000000408085) ----------------------------------------------------
int __fastcall badSink_1(__int64 a1)
{
  int result; // eax

  result = badStatic_0;
  if ( badStatic_0 )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6791B8: using guessed type int badStatic_0;

//----- (00000000004080B5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_21_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  badStatic_0 = 1;
  return badSink_1(v4);
}
// 6791B8: using guessed type int badStatic_0;

//----- (000000000040817C) ----------------------------------------------------
int __fastcall goodB2G1Sink_0(__int64 a1)
{
  if ( goodB2G1Static_0 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 + 1);
}
// 6791BC: using guessed type int goodB2G1Static_0;

//----- (00000000004081D4) ----------------------------------------------------
int goodB2G1_9()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  goodB2G1Static_0 = 0;
  return goodB2G1Sink_0(v4);
}
// 6791BC: using guessed type int goodB2G1Static_0;

//----- (000000000040829B) ----------------------------------------------------
int __fastcall goodB2G2Sink_0(__int64 a1)
{
  int result; // eax

  result = goodB2G2Static_0;
  if ( goodB2G2Static_0 )
  {
    if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 + 1);
  }
  return result;
}
// 6791C0: using guessed type int goodB2G2Static_0;

//----- (00000000004082E7) ----------------------------------------------------
int goodB2G2_9()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  goodB2G2Static_0 = 1;
  return goodB2G2Sink_0(v4);
}
// 6791C0: using guessed type int goodB2G2Static_0;

//----- (00000000004083AE) ----------------------------------------------------
int __fastcall goodG2BSink_1(__int64 a1)
{
  int result; // eax

  result = goodG2BStatic_0;
  if ( goodG2BStatic_0 )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6791C4: using guessed type int goodG2BStatic_0;

//----- (00000000004083DE) ----------------------------------------------------
int goodG2B_11()
{
  goodG2BStatic_0 = 1;
  return goodG2BSink_1(2LL);
}
// 6791C4: using guessed type int goodG2BStatic_0;

//----- (000000000040840E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_21_good()
{
  goodB2G1_9();
  goodB2G2_9();
  return goodG2B_11();
}

//----- (0000000000408432) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_03_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (00000000004084FB) ----------------------------------------------------
int goodB2G1_10()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (00000000004085E0) ----------------------------------------------------
int goodB2G2_10()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (00000000004086C5) ----------------------------------------------------
int goodG2B1_7()
{
  return printLongLongLine(3LL);
}

//----- (00000000004086F7) ----------------------------------------------------
int goodG2B2_7()
{
  return printLongLongLine(3LL);
}

//----- (0000000000408729) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_03_good()
{
  goodB2G1_10();
  goodB2G2_10();
  goodG2B1_7();
  return goodG2B2_7();
}

//----- (0000000000408757) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_17_bad()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    result = -1;
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  }
  for ( j = 0; j <= 0; ++j )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (00000000004087B5) ----------------------------------------------------
int goodB2G_9()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    result = -1;
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}

//----- (000000000040882F) ----------------------------------------------------
int goodG2B_12()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    v1 = 2LL;
  for ( j = 0; j <= 0; ++j )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000408887) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_17_good()
{
  goodB2G_9();
  return goodG2B_12();
}

//----- (00000000004088A1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_52c_badSink(a1);
}

//----- (00000000004088B8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_52c_goodG2BSink(a1);
}

//----- (00000000004088CF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_52c_goodB2GSink(a1);
}

//----- (00000000004088E6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_54_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_square_54b_badSink(v7);
}
// 4088E6: using guessed type char buf[16];

//----- (00000000004089CE) ----------------------------------------------------
int goodG2B_13()
{
  return CWE190_Integer_Overflow__int_connect_socket_square_54b_goodG2BSink(2);
}

//----- (00000000004089F0) ----------------------------------------------------
int goodB2G_10()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_square_54b_goodB2GSink(v7);
}
// 4089F0: using guessed type char buf[16];

//----- (0000000000408AD8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_54_good()
{
  goodG2B_13();
  return goodB2G_10();
}

//----- (0000000000408AF2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_67b_badSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (0000000000408B21) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_67b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (0000000000408B50) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_67b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (0000000000408BAE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_54_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_add_54b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000408BDA) ----------------------------------------------------
int goodG2B_14()
{
  return CWE190_Integer_Overflow__int64_t_max_add_54b_goodG2BSink(2LL);
}

//----- (0000000000408C00) ----------------------------------------------------
int goodB2G_11()
{
  return CWE190_Integer_Overflow__int64_t_max_add_54b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000408C2C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_54_good()
{
  goodG2B_14();
  return goodB2G_11();
}

//----- (0000000000408C46) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_53d_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000408C6C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_53d_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000408C92) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_53d_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000408CD4) ----------------------------------------------------
int __fastcall badSink_2(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000408CFA) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_44_bad()
{
  return badSink_2(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000408D2F) ----------------------------------------------------
int __fastcall goodG2BSink_2(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000408D55) ----------------------------------------------------
int goodG2B_15()
{
  return goodG2BSink_2(2LL);
}

//----- (0000000000408D84) ----------------------------------------------------
int __fastcall goodB2GSink_0(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000408DC6) ----------------------------------------------------
int goodB2G_12()
{
  return goodB2GSink_0(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000408DFB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_44_good()
{
  goodG2B_15();
  return goodB2G_12();
}

//----- (0000000000408E15) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_18_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (0000000000408EE0) ----------------------------------------------------
int goodB2G_13()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000408FC7) ----------------------------------------------------
int goodG2B_16()
{
  return printLongLongLine(3LL);
}

//----- (0000000000408FFB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_18_good()
{
  goodB2G_13();
  return goodG2B_16();
}

//----- (0000000000409015) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_add_61b_badSource()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (00000000004090C6) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_add_61b_goodG2BSource()
{
  return 2LL;
}

//----- (00000000004090DC) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_add_61b_goodB2GSource()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (000000000040918D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_06_bad()
{
  return printLongLongLine(-2LL);
}

//----- (00000000004091DF) ----------------------------------------------------
int goodB2G1_11()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000409259) ----------------------------------------------------
int goodB2G2_11()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004092C7) ----------------------------------------------------
int goodG2B1_8()
{
  return printLongLongLine(4LL);
}

//----- (000000000040931F) ----------------------------------------------------
int goodG2B2_8()
{
  return printLongLongLine(4LL);
}

//----- (000000000040936B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_06_good()
{
  goodB2G1_11();
  goodB2G2_11();
  goodG2B1_8();
  return goodG2B2_8();
}

//----- (0000000000409399) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_22_badSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_square_22_badGlobal;
  if ( CWE190_Integer_Overflow__int64_t_rand_square_22_badGlobal )
    result = printLongLongLine(a1 * a1);
  return result;
}
// 679358: using guessed type int CWE190_Integer_Overflow__int64_t_rand_square_22_badGlobal;

//----- (00000000004093CA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_22_goodB2G1Sink(__int64 a1)
{
  if ( CWE190_Integer_Overflow__int64_t_rand_square_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 * a1);
}
// 67935C: using guessed type int CWE190_Integer_Overflow__int64_t_rand_square_22_goodB2G1Global;

//----- (0000000000409436) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_22_goodB2G2Sink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_square_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int64_t_rand_square_22_goodB2G2Global )
  {
    if ( (long double)abs64(a1) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 * a1);
  }
  return result;
}
// 679360: using guessed type int CWE190_Integer_Overflow__int64_t_rand_square_22_goodB2G2Global;

//----- (0000000000409496) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_22_goodG2BSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_square_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int64_t_rand_square_22_goodG2BGlobal )
    result = printLongLongLine(a1 * a1);
  return result;
}
// 679364: using guessed type int CWE190_Integer_Overflow__int64_t_rand_square_22_goodG2BGlobal;

//----- (00000000004094C7) ----------------------------------------------------
__int64 badSource()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (00000000004094E3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_42_bad()
{
  __int64 v0; // rax

  v0 = badSource();
  return printLongLongLine(v0 * v0);
}

//----- (000000000040951E) ----------------------------------------------------
__int64 goodG2BSource()
{
  return 2LL;
}

//----- (0000000000409534) ----------------------------------------------------
int goodG2B_17()
{
  __int64 v0; // rax

  v0 = goodG2BSource();
  return printLongLongLine(v0 * v0);
}

//----- (000000000040956F) ----------------------------------------------------
__int64 goodB2GSource()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (000000000040958B) ----------------------------------------------------
int goodB2G_14()
{
  int result; // eax
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = goodB2GSource();
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (00000000004095F5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_42_good()
{
  goodB2G_14();
  return goodG2B_17();
}

//----- (000000000040960F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_54_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_add_54b_badSink(v4);
}

//----- (0000000000409677) ----------------------------------------------------
int goodG2B_18()
{
  return CWE190_Integer_Overflow__int_fgets_add_54b_goodG2BSink(2);
}

//----- (0000000000409699) ----------------------------------------------------
int goodB2G_15()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_add_54b_goodB2GSink(v4);
}

//----- (0000000000409701) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_54_good()
{
  goodG2B_18();
  return goodB2G_15();
}

//----- (000000000040971B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_31_bad()
{
  return printLongLongLine(1LL);
}

//----- (0000000000409764) ----------------------------------------------------
int goodG2B_19()
{
  return printLongLongLine(4LL);
}

//----- (00000000004097A7) ----------------------------------------------------
int goodB2G_16()
{
  int result; // eax

  if ( (long double)abs64(0x7FFFFFFFFFFFFFFFLL) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(1LL);
  return result;
}

//----- (000000000040981F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_31_good()
{
  goodG2B_19();
  return goodB2G_16();
}

//----- (0000000000409839) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_61b_badSource(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  __isoc99_fscanf(stdin, &unk_454670, &v2);
  return v2;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000409868) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_fscanf_square_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000040987E) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_61b_goodB2GSource(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  __isoc99_fscanf(stdin, &unk_454670, &v2);
  return v2;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004098AD) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_63_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_multiply_63b_badSink(&v10);
}

//----- (000000000040996A) ----------------------------------------------------
int goodG2B_20()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_multiply_63b_goodG2BSink(&v1);
}

//----- (0000000000409990) ----------------------------------------------------
int goodB2G_17()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_multiply_63b_goodB2GSink(&v10);
}

//----- (0000000000409A4D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_63_good()
{
  goodG2B_20();
  return goodB2G_17();
}

//----- (0000000000409A67) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_64b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 * *a1);
}

//----- (0000000000409AA1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_64b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 * *a1);
}

//----- (0000000000409ADB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_64b_goodB2GSink(__int64 *a1)
{
  int result; // eax

  if ( (long double)abs64(*a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 * *a1);
  return result;
}

//----- (0000000000409B44) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_max_add_61b_badSource()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (0000000000409B60) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_max_add_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000409B76) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_max_add_61b_goodB2GSource()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (0000000000409B92) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_12_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+18h] [rbp-18h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  else
  {
    v10 = 2LL;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printLongLongLine(v10 + 1);
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}

//----- (0000000000409CBB) ----------------------------------------------------
int goodB2G_18()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // rbx
  __int64 v10; // rbx
  __int64 v11; // rbx
  __int64 v12; // rbx
  __int64 v13; // rax
  __int64 v14; // rbx
  __int64 v15; // rbx
  __int64 v16; // rbx
  __int64 v17; // rbx
  int result; // eax
  __int64 v19; // [rsp+18h] [rbp-18h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v19 = v4;
  }
  else
  {
    if ( rand() & 1 )
    {
      v9 = (__int64)rand() << 60;
      v10 = ((__int64)rand() << 45) ^ v9;
      v11 = ((__int64)rand() << 30) ^ v10;
      v12 = ((__int64)rand() << 15) ^ v11;
      v13 = v12 ^ rand();
    }
    else
    {
      v14 = (__int64)rand() << 60;
      v15 = ((__int64)rand() << 45) ^ v14;
      v16 = ((__int64)rand() << 30) ^ v15;
      v17 = ((__int64)rand() << 15) ^ v16;
      v13 = ~(v17 ^ rand());
    }
    v19 = v13;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v19 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v19 + 1);
  }
  else if ( v19 == 0x7FFFFFFFFFFFFFFFLL )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printLongLongLine(v19 + 1);
  }
  return result;
}

//----- (0000000000409E94) ----------------------------------------------------
int goodG2B_21()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLongLongLine(3LL);
}

//----- (0000000000409F06) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_12_good()
{
  goodB2G_18();
  return goodG2B_21();
}

//----- (0000000000409F20) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_11_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}

//----- (0000000000409F7A) ----------------------------------------------------
int goodB2G1_12()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalReturnsFalse();
  if ( result )
    return printLine("Benign, fixed string");
  if ( v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000409FFC) ----------------------------------------------------
int goodB2G2_12()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 > 0 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}

//----- (000000000040A072) ----------------------------------------------------
int goodG2B1_9()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}

//----- (000000000040A0D2) ----------------------------------------------------
int goodG2B2_9()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}

//----- (000000000040A126) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_11_good()
{
  goodB2G1_12();
  goodB2G2_12();
  goodG2B1_9();
  return goodG2B2_9();
}

//----- (000000000040A154) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_02_bad()
{
  return printLongLongLine(-2LL);
}

//----- (000000000040A192) ----------------------------------------------------
int goodB2G1_13()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040A1EC) ----------------------------------------------------
int goodB2G2_13()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040A246) ----------------------------------------------------
int goodG2B1_10()
{
  return printLongLongLine(4LL);
}

//----- (000000000040A27E) ----------------------------------------------------
int goodG2B2_10()
{
  return printLongLongLine(4LL);
}

//----- (000000000040A2B6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_02_good()
{
  goodB2G1_13();
  goodB2G2_13();
  goodG2B1_10();
  return goodG2B2_10();
}

//----- (000000000040A2E4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_52_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_multiply_52b_badSink(v7);
}
// 40A2E4: using guessed type char buf[16];

//----- (000000000040A3CC) ----------------------------------------------------
int goodG2B_22()
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_52b_goodG2BSink(2);
}

//----- (000000000040A3EE) ----------------------------------------------------
int goodB2G_19()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_multiply_52b_goodB2GSink(v7);
}
// 40A3EE: using guessed type char buf[16];

//----- (000000000040A4D6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_52_good()
{
  goodG2B_22();
  return goodB2G_19();
}

//----- (000000000040A4F0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_51b_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000040A515) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_51b_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000040A53A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (000000000040A574) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_63b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 * *a1);
}

//----- (000000000040A5A6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_63b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 * *a1);
}

//----- (000000000040A5D8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_63b_goodB2GSink(__int64 *a1)
{
  int result; // eax

  if ( (long double)abs64(*a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 * *a1);
  return result;
}

//----- (000000000040A639) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_67_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_square_67b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000040A66D) ----------------------------------------------------
int goodG2B_23()
{
  return CWE190_Integer_Overflow__int64_t_max_square_67b_goodG2BSink(2LL);
}

//----- (000000000040A69B) ----------------------------------------------------
int goodB2G_20()
{
  return CWE190_Integer_Overflow__int64_t_max_square_67b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000040A6CF) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_67_good()
{
  goodG2B_23();
  return goodB2G_20();
}

//----- (000000000040A6E9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_square_53d_badSink(a1);
}

//----- (000000000040A700) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_square_53d_goodG2BSink(a1);
}

//----- (000000000040A717) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_square_53d_goodB2GSink(a1);
}

//----- (000000000040A72E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_16_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v6 = result;
      if ( result != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 > 0 )
  {
    v5 = 2 * v8;
    result = printIntLine(2 * v8);
  }
  return result;
}
// 40A72E: using guessed type char buf[16];

//----- (000000000040A826) ----------------------------------------------------
int goodB2G_21()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v6 = result;
      if ( result != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 40A826: using guessed type char buf[16];

//----- (000000000040A933) ----------------------------------------------------
int goodG2B_24()
{
  return printIntLine(4u);
}

//----- (000000000040A965) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_16_good()
{
  goodB2G_21();
  return goodG2B_24();
}

//----- (000000000040A97F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_65b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040A99F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040A9BF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000040A9F4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_18_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (000000000040AA67) ----------------------------------------------------
int goodB2G_22()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (000000000040AAEF) ----------------------------------------------------
int goodG2B_25()
{
  return printIntLine(3u);
}

//----- (000000000040AB1C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_18_good()
{
  goodB2G_22();
  return goodG2B_25();
}

//----- (000000000040AB36) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_22_badSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_square_22_badGlobal;
  if ( CWE190_Integer_Overflow__int64_t_max_square_22_badGlobal )
    result = printLongLongLine(a1 * a1);
  return result;
}
// 67938C: using guessed type int CWE190_Integer_Overflow__int64_t_max_square_22_badGlobal;

//----- (000000000040AB67) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_22_goodB2G1Sink(__int64 a1)
{
  if ( CWE190_Integer_Overflow__int64_t_max_square_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 * a1);
}
// 679390: using guessed type int CWE190_Integer_Overflow__int64_t_max_square_22_goodB2G1Global;

//----- (000000000040ABD3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_22_goodB2G2Sink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_square_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int64_t_max_square_22_goodB2G2Global )
  {
    if ( (long double)abs64(a1) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 * a1);
  }
  return result;
}
// 679394: using guessed type int CWE190_Integer_Overflow__int64_t_max_square_22_goodB2G2Global;

//----- (000000000040AC33) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_22_goodG2BSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_square_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int64_t_max_square_22_goodG2BGlobal )
    result = printLongLongLine(a1 * a1);
  return result;
}
// 679398: using guessed type int CWE190_Integer_Overflow__int64_t_max_square_22_goodG2BGlobal;

//----- (000000000040AC64) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_68b_badSink()
{
  return printLongLongLine(
           CWE190_Integer_Overflow__int64_t_max_square_68_badData
         * CWE190_Integer_Overflow__int64_t_max_square_68_badData);
}
// 679460: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_square_68_badData;

//----- (000000000040AC92) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_68b_goodG2BSink()
{
  return printLongLongLine(
           CWE190_Integer_Overflow__int64_t_max_square_68_goodG2BData
         * CWE190_Integer_Overflow__int64_t_max_square_68_goodG2BData);
}
// 679470: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_square_68_goodG2BData;

//----- (000000000040ACC0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_68b_goodB2GSink()
{
  int result; // eax

  if ( (long double)abs64(CWE190_Integer_Overflow__int64_t_max_square_68_goodB2GData) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(
               CWE190_Integer_Overflow__int64_t_max_square_68_goodB2GData
             * CWE190_Integer_Overflow__int64_t_max_square_68_goodB2GData);
  return result;
}
// 679468: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_square_68_goodB2GData;

//----- (000000000040AD1D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_09_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v8 > 0 )
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 40AD1D: using guessed type char buf[16];

//----- (000000000040AE2B) ----------------------------------------------------
int goodB2G1_14()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FALSE;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;
// 40AE2B: using guessed type char buf[16];

//----- (000000000040AF5A) ----------------------------------------------------
int goodB2G2_14()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE && v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 40AF5A: using guessed type char buf[16];

//----- (000000000040B07D) ----------------------------------------------------
int goodG2B1_11()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000040B0CD) ----------------------------------------------------
int goodG2B2_11()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040B111) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_09_good()
{
  goodB2G1_14();
  goodB2G2_14();
  goodG2B1_11();
  return goodG2B2_11();
}

//----- (000000000040B13F) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_square_65_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_connect_socket_square_65b_badSink;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 40B13F: using guessed type char buf[16];

//----- (000000000040B230) ----------------------------------------------------
int goodG2B_26()
{
  return CWE190_Integer_Overflow__int_connect_socket_square_65b_goodG2BSink(2);
}

//----- (000000000040B25B) ----------------------------------------------------
__int64 goodB2G_23()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_connect_socket_square_65b_goodB2GSink;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 40B25B: using guessed type char buf[16];

//----- (000000000040B34C) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_square_65_good()
{
  goodG2B_26();
  return goodB2G_23();
}

//----- (000000000040B366) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_64_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_square_64b_badSink(&v10);
}

//----- (000000000040B423) ----------------------------------------------------
int goodG2B_27()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_square_64b_goodG2BSink(&v1);
}

//----- (000000000040B449) ----------------------------------------------------
int goodB2G_24()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_square_64b_goodB2GSink(&v10);
}

//----- (000000000040B506) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_64_good()
{
  goodG2B_27();
  return goodB2G_24();
}

//----- (000000000040B520) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_54d_badSink(a1);
}

//----- (000000000040B53A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_54d_goodG2BSink(a1);
}

//----- (000000000040B554) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_54d_goodB2GSink(a1);
}

//----- (000000000040B56E) ----------------------------------------------------
int __fastcall badSink_3(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040B58E) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_add_44_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = badSink_3;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 40B58E: using guessed type char buf[16];

//----- (000000000040B67F) ----------------------------------------------------
int __fastcall goodG2BSink_3(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040B69F) ----------------------------------------------------
int goodG2B_28()
{
  return goodG2BSink_3(2);
}

//----- (000000000040B6CA) ----------------------------------------------------
int __fastcall goodB2GSink_1(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000040B6FF) ----------------------------------------------------
__int64 goodB2G_25()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = goodB2GSink_1;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 40B6FF: using guessed type char buf[16];

//----- (000000000040B7F0) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_add_44_good()
{
  goodG2B_28();
  return goodB2G_25();
}

//----- (000000000040B80A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_14_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    v4 = v5 + 1;
    result = printIntLine(v5 + 1);
  }
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000040B891) ----------------------------------------------------
int goodB2G1_15()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}
// 679168: using guessed type int globalFive;

//----- (000000000040B939) ----------------------------------------------------
int goodB2G2_15()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v5 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v5 + 1;
      result = printIntLine(v5 + 1);
    }
  }
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000040B9D5) ----------------------------------------------------
int goodG2B1_12()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000040BA22) ----------------------------------------------------
int goodG2B2_12()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000040BA63) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_14_good()
{
  goodB2G1_15();
  goodB2G2_15();
  goodG2B1_12();
  return goodG2B2_12();
}

//----- (000000000040BA91) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_68b_badSink()
{
  return printLongLongLine(
           CWE190_Integer_Overflow__int64_t_fscanf_square_68_badData
         * CWE190_Integer_Overflow__int64_t_fscanf_square_68_badData);
}
// 679428: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_square_68_badData;

//----- (000000000040BABF) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_68b_goodG2BSink()
{
  return printLongLongLine(
           CWE190_Integer_Overflow__int64_t_fscanf_square_68_goodG2BData
         * CWE190_Integer_Overflow__int64_t_fscanf_square_68_goodG2BData);
}
// 679420: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_square_68_goodG2BData;

//----- (000000000040BAED) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_68b_goodB2GSink()
{
  int result; // eax

  if ( (long double)abs64(CWE190_Integer_Overflow__int64_t_fscanf_square_68_goodB2GData) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(
               CWE190_Integer_Overflow__int64_t_fscanf_square_68_goodB2GData
             * CWE190_Integer_Overflow__int64_t_fscanf_square_68_goodB2GData);
  return result;
}
// 679418: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_square_68_goodB2GData;

//----- (000000000040BB4A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_52_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_add_52b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000040BB76) ----------------------------------------------------
int goodG2B_29()
{
  return CWE190_Integer_Overflow__int64_t_max_add_52b_goodG2BSink(2LL);
}

//----- (000000000040BB9C) ----------------------------------------------------
int goodB2G_26()
{
  return CWE190_Integer_Overflow__int64_t_max_add_52b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000040BBC8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_52_good()
{
  goodG2B_29();
  return goodB2G_26();
}

//----- (000000000040BBE2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54e_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000040BC08) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54e_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000040BC2E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54e_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000040BC70) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_66_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  char v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+10h] [rbp-30h]
  __int64 v12; // [rsp+28h] [rbp-18h]

  v12 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v12 = v4;
  v11 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_add_66b_badSink((__int64)&v10);
}

//----- (000000000040BD35) ----------------------------------------------------
int goodG2B_30()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 2LL;
  v2 = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_add_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000040BD63) ----------------------------------------------------
int goodB2G_27()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  char v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+10h] [rbp-30h]
  __int64 v12; // [rsp+28h] [rbp-18h]

  v12 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v12 = v4;
  v11 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_add_66b_goodB2GSink((__int64)&v10);
}

//----- (000000000040BE28) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_66_good()
{
  goodG2B_30();
  return goodB2G_27();
}

//----- (000000000040BE42) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_53_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_multiply_53b_badSink(v4);
}

//----- (000000000040BEFF) ----------------------------------------------------
int goodG2B_31()
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_53b_goodG2BSink(2LL);
}

//----- (000000000040BF25) ----------------------------------------------------
int goodB2G_28()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_multiply_53b_goodB2GSink(v4);
}

//----- (000000000040BFE2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_53_good()
{
  goodG2B_31();
  return goodB2G_28();
}

//----- (000000000040BFFC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_51b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000040C022) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_51b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000040C048) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_51b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000040C08A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_square_54c_badSink(a1);
}

//----- (000000000040C0A4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_square_54c_goodG2BSink(a1);
}

//----- (000000000040C0BE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_square_54c_goodB2GSink(a1);
}

//----- (000000000040C0D8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_04_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 40C0D8: using guessed type char buf[16];

//----- (000000000040C1E0) ----------------------------------------------------
int goodB2G1_16()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 40C1E0: using guessed type char buf[16];

//----- (000000000040C31B) ----------------------------------------------------
int goodB2G2_16()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 40C31B: using guessed type char buf[16];

//----- (000000000040C44A) ----------------------------------------------------
int goodG2B1_13()
{
  return printIntLine(4u);
}

//----- (000000000040C494) ----------------------------------------------------
int goodG2B2_13()
{
  return printIntLine(4u);
}

//----- (000000000040C4D2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_04_good()
{
  goodB2G1_16();
  goodB2G2_16();
  goodG2B1_13();
  return goodG2B2_13();
}

//----- (000000000040C500) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_31_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v7 = v10;
  v6 = v10;
  v5 = v10 * v10;
  return printIntLine(v10 * v10);
}
// 40C500: using guessed type char buf[16];

//----- (000000000040C5FE) ----------------------------------------------------
int goodG2B_32()
{
  return printIntLine(4u);
}

//----- (000000000040C636) ----------------------------------------------------
int goodB2G_29()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v7 = v10;
  v6 = v10;
  if ( v10 == 0x80000000 || v6 < -46339 || v6 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v6 * v6;
  return printIntLine(v6 * v6);
}
// 40C636: using guessed type char buf[16];

//----- (000000000040C75B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_31_good()
{
  goodG2B_32();
  return goodB2G_29();
}

//----- (000000000040C775) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_16_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (000000000040C7AF) ----------------------------------------------------
int goodB2G_30()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040C805) ----------------------------------------------------
int goodG2B_33()
{
  return printLongLongLine(3LL);
}

//----- (000000000040C839) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_16_good()
{
  goodB2G_30();
  return goodG2B_33();
}

//----- (000000000040C853) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_09_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]
  __int64 v2; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v2 = v1 * v1;
    result = printLongLongLine(v1 * v1);
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040C8B2) ----------------------------------------------------
int goodB2G1_17()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000040C948) ----------------------------------------------------
int goodB2G2_17()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( (long double)abs64(v1) > 3037000499.9760496924 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printLongLongLine(v1 * v1);
    }
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040C9D2) ----------------------------------------------------
int goodG2B1_14()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000040CA25) ----------------------------------------------------
int goodG2B2_14()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040CA6C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_09_good()
{
  goodB2G1_17();
  goodB2G2_17();
  goodG2B1_14();
  return goodG2B2_14();
}

//----- (000000000040CA9A) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_add_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 40CA9A: using guessed type char buf[16];

//----- (000000000040CB77) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_add_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000040CB8A) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_add_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 40CB8A: using guessed type char buf[16];

//----- (000000000040CC67) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_68b_badSink()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_max_add_68_badData + 1);
}
// 679490: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_add_68_badData;

//----- (000000000040CC94) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_68b_goodG2BSink()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_max_add_68_goodG2BData + 1);
}
// 6794A0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_add_68_goodG2BData;

//----- (000000000040CCC1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int64_t_max_add_68_goodB2GData == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE190_Integer_Overflow__int64_t_max_add_68_goodB2GData + 1);
  return result;
}
// 679498: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_add_68_goodB2GData;

//----- (000000000040CD0A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_53b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_53c_badSink(a1);
}

//----- (000000000040CD24) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_53b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_53c_goodG2BSink(a1);
}

//----- (000000000040CD3E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_53b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_53c_goodB2GSink(a1);
}

//----- (000000000040CD58) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_11_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v8 > 0 )
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 40CD58: using guessed type char buf[16];

//----- (000000000040CE6E) ----------------------------------------------------
int goodB2G1_18()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsFalse();
  if ( result )
    return printLine("Benign, fixed string");
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 40CE6E: using guessed type char buf[16];

//----- (000000000040CFA5) ----------------------------------------------------
int goodB2G2_18()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( result && v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 40CFA5: using guessed type char buf[16];

//----- (000000000040D0D0) ----------------------------------------------------
int goodG2B1_15()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (000000000040D128) ----------------------------------------------------
int goodG2B2_15()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (000000000040D174) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_11_good()
{
  goodB2G1_18();
  goodB2G2_18();
  goodG2B1_15();
  return goodG2B2_15();
}

//----- (000000000040D1A2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_02_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v6 = result;
      if ( result != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 > 0 )
  {
    v5 = 2 * v8;
    result = printIntLine(2 * v8);
  }
  return result;
}
// 40D1A2: using guessed type char buf[16];

//----- (000000000040D298) ----------------------------------------------------
int goodB2G1_19()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v6 = result;
      if ( result != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 40D298: using guessed type char buf[16];

//----- (000000000040D3A3) ----------------------------------------------------
int goodB2G2_19()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v6 = result;
      if ( result != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 40D3A3: using guessed type char buf[16];

//----- (000000000040D4AE) ----------------------------------------------------
int goodG2B1_16()
{
  return printIntLine(4u);
}

//----- (000000000040D4DE) ----------------------------------------------------
int goodG2B2_16()
{
  return printIntLine(4u);
}

//----- (000000000040D50E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_02_good()
{
  goodB2G1_19();
  goodB2G2_19();
  goodG2B1_16();
  return goodG2B2_16();
}

//----- (000000000040D53C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_52c_badSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000040D563) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_52c_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000040D58A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_52c_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (000000000040D5E0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_67_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE190_Integer_Overflow__int_connect_socket_square_67b_badSink(v8);
}
// 40D5E0: using guessed type char buf[16];

//----- (000000000040D6CE) ----------------------------------------------------
int goodG2B_34()
{
  return CWE190_Integer_Overflow__int_connect_socket_square_67b_goodG2BSink(2);
}

//----- (000000000040D6F6) ----------------------------------------------------
int goodB2G_31()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE190_Integer_Overflow__int_connect_socket_square_67b_goodB2GSink(v8);
}
// 40D6F6: using guessed type char buf[16];

//----- (000000000040D7E4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_67_good()
{
  goodG2B_34();
  return goodB2G_31();
}

//----- (000000000040D7FE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_04_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (000000000040D881) ----------------------------------------------------
int goodB2G1_20()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (000000000040D925) ----------------------------------------------------
int goodB2G2_20()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (000000000040D9BD) ----------------------------------------------------
int goodG2B1_17()
{
  return printIntLine(3u);
}

//----- (000000000040DA06) ----------------------------------------------------
int goodG2B2_17()
{
  return printIntLine(3u);
}

//----- (000000000040DA43) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_04_good()
{
  goodB2G1_20();
  goodB2G2_20();
  goodG2B1_17();
  return goodG2B2_17();
}

//----- (000000000040DA71) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_68_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_square_68_badData = v1;
  return CWE190_Integer_Overflow__int64_t_fscanf_square_68b_badSink();
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 679428: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_square_68_badData;

//----- (000000000040DAB5) ----------------------------------------------------
int goodG2B_35()
{
  CWE190_Integer_Overflow__int64_t_fscanf_square_68_goodG2BData = 2LL;
  return CWE190_Integer_Overflow__int64_t_fscanf_square_68b_goodG2BSink();
}
// 679420: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_square_68_goodG2BData;

//----- (000000000040DAE4) ----------------------------------------------------
int goodB2G_32()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_square_68_goodB2GData = v1;
  return CWE190_Integer_Overflow__int64_t_fscanf_square_68b_goodB2GSink();
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 679418: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_square_68_goodB2GData;

//----- (000000000040DB28) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_68_good()
{
  goodG2B_35();
  return goodB2G_32();
}

//----- (000000000040DB42) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_10_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v8 > 0 )
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 679164: using guessed type int globalTrue;
// 40DB42: using guessed type char buf[16];

//----- (000000000040DC50) ----------------------------------------------------
int goodB2G1_21()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFalse;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;
// 40DC50: using guessed type char buf[16];

//----- (000000000040DD7F) ----------------------------------------------------
int goodB2G2_21()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalTrue;
  if ( globalTrue && v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 679164: using guessed type int globalTrue;
// 40DD7F: using guessed type char buf[16];

//----- (000000000040DEA2) ----------------------------------------------------
int goodG2B1_18()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;

//----- (000000000040DEF2) ----------------------------------------------------
int goodG2B2_18()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (000000000040DF36) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_10_good()
{
  goodB2G1_21();
  goodB2G2_21();
  goodG2B1_18();
  return goodG2B2_18();
}

//----- (000000000040DF64) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54d_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_add_54e_badSink(a1);
}

//----- (000000000040DF7E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54d_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_add_54e_goodG2BSink(a1);
}

//----- (000000000040DF98) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54d_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_add_54e_goodB2GSink(a1);
}

//----- (000000000040DFB2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_54_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_square_54b_badSink(v4);
}

//----- (000000000040E06F) ----------------------------------------------------
int goodG2B_36()
{
  return CWE190_Integer_Overflow__int64_t_rand_square_54b_goodG2BSink(2LL);
}

//----- (000000000040E095) ----------------------------------------------------
int goodB2G_33()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_square_54b_goodB2GSink(v4);
}

//----- (000000000040E152) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_54_good()
{
  goodG2B_36();
  return goodB2G_33();
}

//----- (000000000040E16C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_67_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE190_Integer_Overflow__int_fgets_add_67b_badSink(v5);
}

//----- (000000000040E1DA) ----------------------------------------------------
int goodG2B_37()
{
  return CWE190_Integer_Overflow__int_fgets_add_67b_goodG2BSink(2);
}

//----- (000000000040E202) ----------------------------------------------------
int goodB2G_34()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE190_Integer_Overflow__int_fgets_add_67b_goodB2GSink(v5);
}

//----- (000000000040E270) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_67_good()
{
  goodG2B_37();
  return goodB2G_34();
}

//----- (000000000040E28A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_54d_badSink(a1);
}

//----- (000000000040E2A1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_54d_goodG2BSink(a1);
}

//----- (000000000040E2B8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_54d_goodB2GSink(a1);
}

//----- (000000000040E2CF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_53d_badSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000040E2F6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_53d_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000040E31D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_53d_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (000000000040E373) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_01_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v6 = result;
      if ( result != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 > 0 )
  {
    v5 = 2 * v8;
    result = printIntLine(2 * v8);
  }
  return result;
}
// 40E373: using guessed type char buf[16];

//----- (000000000040E469) ----------------------------------------------------
int goodG2B_38()
{
  return printIntLine(4u);
}

//----- (000000000040E499) ----------------------------------------------------
int goodB2G_35()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v6 = result;
      if ( result != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 40E499: using guessed type char buf[16];

//----- (000000000040E5A4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_01_good()
{
  goodG2B_38();
  return goodB2G_35();
}

//----- (000000000040E5BE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_15_bad()
{
  return printLongLongLine(1LL);
}

//----- (000000000040E5F9) ----------------------------------------------------
int goodB2G1_22()
{
  int result; // eax

  if ( (long double)abs64(0x7FFFFFFFFFFFFFFFLL) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(1LL);
  return result;
}

//----- (000000000040E663) ----------------------------------------------------
int goodB2G2_22()
{
  int result; // eax

  if ( (long double)abs64(0x7FFFFFFFFFFFFFFFLL) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(1LL);
  return result;
}

//----- (000000000040E6CD) ----------------------------------------------------
int goodG2B1_19()
{
  return printLongLongLine(4LL);
}

//----- (000000000040E702) ----------------------------------------------------
int goodG2B2_19()
{
  return printLongLongLine(4LL);
}

//----- (000000000040E737) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_15_good()
{
  goodB2G1_22();
  goodB2G2_22();
  goodG2B1_19();
  return goodG2B2_19();
}

//----- (000000000040E765) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_53d_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000040E78A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_53d_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000040E7AF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (000000000040E7E9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_add_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_fgets_add_22_badGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6793C4: using guessed type int CWE190_Integer_Overflow__int_fgets_add_22_badGlobal;

//----- (000000000040E813) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_fgets_add_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6793C8: using guessed type int CWE190_Integer_Overflow__int_fgets_add_22_goodB2G1Global;

//----- (000000000040E85E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_add_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_fgets_add_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6793CC: using guessed type int CWE190_Integer_Overflow__int_fgets_add_22_goodB2G2Global;

//----- (000000000040E89D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_fgets_add_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_fgets_add_22_goodG2BGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 6793D0: using guessed type int CWE190_Integer_Overflow__int_fgets_add_22_goodG2BGlobal;

//----- (000000000040E8C7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_04_bad()
{
  return printLongLongLine(1LL);
}

//----- (000000000040E912) ----------------------------------------------------
int goodB2G1_23()
{
  int result; // eax

  if ( (long double)abs64(0x7FFFFFFFFFFFFFFFLL) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(1LL);
  return result;
}

//----- (000000000040E998) ----------------------------------------------------
int goodB2G2_23()
{
  int result; // eax

  if ( (long double)abs64(0x7FFFFFFFFFFFFFFFLL) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(1LL);
  return result;
}

//----- (000000000040EA12) ----------------------------------------------------
int goodG2B1_20()
{
  return printLongLongLine(4LL);
}

//----- (000000000040EA63) ----------------------------------------------------
int goodG2B2_20()
{
  return printLongLongLine(4LL);
}

//----- (000000000040EAA8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_04_good()
{
  goodB2G1_23();
  goodB2G2_23();
  goodG2B1_20();
  return goodG2B2_20();
}

//----- (000000000040EAD6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_07_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( staticFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive;
  if ( staticFive == 5 )
  {
    v5 = v8 + 1;
    result = printIntLine(v8 + 1);
  }
  return result;
}
// 67910C: using guessed type int staticFive;
// 40EAD6: using guessed type char buf[16];

//----- (000000000040EBE1) ----------------------------------------------------
int goodB2G1_24()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( staticFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( staticFive != 5 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 67910C: using guessed type int staticFive;
// 40EBE1: using guessed type char buf[16];

//----- (000000000040ED0D) ----------------------------------------------------
int goodB2G2_24()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( staticFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive;
  if ( staticFive == 5 )
  {
    if ( v8 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v8 + 1;
      result = printIntLine(v8 + 1);
    }
  }
  return result;
}
// 67910C: using guessed type int staticFive;
// 40ED0D: using guessed type char buf[16];

//----- (000000000040EE2D) ----------------------------------------------------
int goodG2B1_21()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive;
  if ( staticFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 67910C: using guessed type int staticFive;

//----- (000000000040EE7A) ----------------------------------------------------
int goodG2B2_21()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive == 5 )
    v1 = 2;
  result = staticFive;
  if ( staticFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 67910C: using guessed type int staticFive;

//----- (000000000040EEBB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_07_good()
{
  goodB2G1_24();
  goodB2G2_24();
  goodG2B1_21();
  return goodG2B2_21();
}

//----- (000000000040EEE9) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_03_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  __int64 v2; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040EF34) ----------------------------------------------------
int goodB2G1_25()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040EFAA) ----------------------------------------------------
int goodB2G2_25()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040F020) ----------------------------------------------------
int goodG2B1_22()
{
  return printLongLongLine(4LL);
}

//----- (000000000040F053) ----------------------------------------------------
int goodG2B2_22()
{
  return printLongLongLine(4LL);
}

//----- (000000000040F086) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_03_good()
{
  goodB2G1_25();
  goodB2G2_25();
  goodG2B1_22();
  return goodG2B2_22();
}

//----- (000000000040F0B4) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_06_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (000000000040F100) ----------------------------------------------------
int goodB2G1_26()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040F174) ----------------------------------------------------
int goodB2G2_26()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040F1DC) ----------------------------------------------------
int goodG2B1_23()
{
  return printLongLongLine(3LL);
}

//----- (000000000040F22E) ----------------------------------------------------
int goodG2B2_23()
{
  return printLongLongLine(3LL);
}

//----- (000000000040F274) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_06_good()
{
  goodB2G1_26();
  goodB2G2_26();
  goodG2B1_23();
  return goodG2B2_23();
}

//----- (000000000040F2A2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_65b_badSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000040F2C9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_65b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000040F2F0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_65b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (000000000040F346) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_22_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_square_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_connect_socket_square_22_badSink(v7);
}
// 6791C8: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_22_badGlobal;
// 40F346: using guessed type char buf[16];

//----- (000000000040F438) ----------------------------------------------------
int goodB2G1_27()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_square_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_connect_socket_square_22_goodB2G1Sink(v7);
}
// 6791CC: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_22_goodB2G1Global;
// 40F438: using guessed type char buf[16];

//----- (000000000040F52A) ----------------------------------------------------
int goodB2G2_27()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_square_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_connect_socket_square_22_goodB2G2Sink(v7);
}
// 6791D0: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_22_goodB2G2Global;
// 40F52A: using guessed type char buf[16];

//----- (000000000040F61C) ----------------------------------------------------
int goodG2B_39()
{
  CWE190_Integer_Overflow__int_connect_socket_square_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_connect_socket_square_22_goodG2BSink(2);
}
// 6791D4: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_22_goodG2BGlobal;

//----- (000000000040F648) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_22_good()
{
  goodB2G1_27();
  goodB2G2_27();
  return goodG2B_39();
}

//----- (000000000040F66C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_65b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040F68C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000040F6AC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000040F6E1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_51b_badSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (000000000040F70D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_51b_goodG2BSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (000000000040F739) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_51b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}

//----- (000000000040F781) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_34_bad()
{
  return printLongLongLine(-2LL);
}

//----- (000000000040F7CF) ----------------------------------------------------
int goodG2B_40()
{
  return printLongLongLine(4LL);
}

//----- (000000000040F817) ----------------------------------------------------
int goodB2G_36()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040F881) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_34_good()
{
  goodG2B_40();
  return goodB2G_36();
}

//----- (000000000040F89B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_16_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 > 0 )
    LODWORD(v4) = printLongLongLine(2 * v4);
  return v4;
}

//----- (000000000040F96C) ----------------------------------------------------
int goodB2G_37()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 > 0 )
  {
    if ( v4 > 4611686018427387902LL )
      LODWORD(v4) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v4) = printLongLongLine(2 * v4);
  }
  return v4;
}

//----- (000000000040FA59) ----------------------------------------------------
int goodG2B_41()
{
  return printLongLongLine(4LL);
}

//----- (000000000040FA93) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_16_good()
{
  goodB2G_37();
  return goodG2B_41();
}

//----- (000000000040FAAD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_53c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_square_53d_badSink(a1);
}

//----- (000000000040FAC7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_53c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_square_53d_goodG2BSink(a1);
}

//----- (000000000040FAE1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_53c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_square_53d_goodB2GSink(a1);
}

//----- (000000000040FAFB) ----------------------------------------------------
__int64 staticReturnsTrue_0()
{
  return 1LL;
}

//----- (000000000040FB06) ----------------------------------------------------
__int64 staticReturnsFalse_0()
{
  return 0LL;
}

//----- (000000000040FB11) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_08_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue_0();
  if ( result )
  {
    if ( v8 > 0 )
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 40FB11: using guessed type char buf[16];

//----- (000000000040FC27) ----------------------------------------------------
int goodB2G1_28()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsFalse_0();
  if ( result )
    return printLine("Benign, fixed string");
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 40FC27: using guessed type char buf[16];

//----- (000000000040FD5E) ----------------------------------------------------
int goodB2G2_28()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue_0();
  if ( result && v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 40FD5E: using guessed type char buf[16];

//----- (000000000040FE89) ----------------------------------------------------
int goodG2B1_24()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_0() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_0();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (000000000040FEE1) ----------------------------------------------------
int goodG2B2_24()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
    v1 = 2;
  result = staticReturnsTrue_0();
  if ( result )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (000000000040FF2D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_08_good()
{
  goodB2G1_28();
  goodB2G2_28();
  goodG2B1_24();
  return goodG2B2_24();
}

//----- (000000000040FF5B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_54_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_multiply_54b_badSink(v4);
}

//----- (0000000000410018) ----------------------------------------------------
int goodG2B_42()
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_54b_goodG2BSink(2LL);
}

//----- (000000000041003E) ----------------------------------------------------
int goodB2G_38()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_multiply_54b_goodB2GSink(v4);
}

//----- (00000000004100FB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_54_good()
{
  goodG2B_42();
  return goodB2G_38();
}

//----- (0000000000410115) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_square_54e_badSink(a1);
}

//----- (000000000041012C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_square_54e_goodG2BSink(a1);
}

//----- (0000000000410143) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_square_54e_goodB2GSink(a1);
}

//----- (000000000041015A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_52b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_52c_badSink(a1);
}

//----- (0000000000410174) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_52b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_52c_goodG2BSink(a1);
}

//----- (000000000041018E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_52b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_52c_goodB2GSink(a1);
}

//----- (00000000004101A8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_32_bad()
{
  char s[8]; // [rsp+0h] [rbp-40h]
  int v2; // [rsp+8h] [rbp-38h]
  __int16 v3; // [rsp+Ch] [rbp-34h]
  int v4; // [rsp+1Ch] [rbp-24h]
  int *v5; // [rsp+28h] [rbp-18h]
  int *v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v6 = &v4;
  v5 = &v4;
  v4 = 0;
  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  *v6 = v7;
  return printIntLine(*v5 + 1);
}

//----- (0000000000410244) ----------------------------------------------------
int goodG2B_43()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 2;
  v2 = 3;
  return printIntLine(3u);
}

//----- (000000000041029A) ----------------------------------------------------
int goodB2G_39()
{
  char s[8]; // [rsp+0h] [rbp-40h]
  int v2; // [rsp+8h] [rbp-38h]
  __int16 v3; // [rsp+Ch] [rbp-34h]
  int v4; // [rsp+1Ch] [rbp-24h]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+24h] [rbp-1Ch]
  int *v7; // [rsp+28h] [rbp-18h]
  int *v8; // [rsp+30h] [rbp-10h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v8 = &v4;
  v7 = &v4;
  v4 = 0;
  v9 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  *v8 = v9;
  v6 = *v7;
  if ( v6 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v6 + 1;
  return printIntLine(v6 + 1);
}

//----- (000000000041034B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_32_good()
{
  goodG2B_43();
  return goodB2G_39();
}

//----- (0000000000410365) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_05_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticTrue;
  if ( staticTrue )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679110: using guessed type int staticTrue;

//----- (00000000004103B2) ----------------------------------------------------
int goodB2G1_29()
{
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( staticFalse )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 * v1);
}
// 679110: using guessed type int staticTrue;
// 6791D8: using guessed type int staticFalse;

//----- (000000000041043A) ----------------------------------------------------
int goodB2G2_29()
{
  int result; // eax
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticTrue;
  if ( staticTrue )
  {
    if ( (long double)abs64(v1) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 * v1);
  }
  return result;
}
// 679110: using guessed type int staticTrue;

//----- (00000000004104B6) ----------------------------------------------------
int goodG2B1_25()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticTrue;
  if ( staticTrue )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679110: using guessed type int staticTrue;
// 6791D8: using guessed type int staticFalse;

//----- (0000000000410509) ----------------------------------------------------
int goodG2B2_25()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue )
    v1 = 2LL;
  result = staticTrue;
  if ( staticTrue )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679110: using guessed type int staticTrue;

//----- (0000000000410550) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_05_good()
{
  goodB2G1_29();
  goodB2G2_29();
  goodG2B1_25();
  return goodG2B2_25();
}

//----- (000000000041057E) ----------------------------------------------------
int __fastcall badSink_4(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (00000000004105A5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_41_bad()
{
  return badSink_4(0x7FFFFFFFFFFFFFFFLL);
}

//----- (00000000004105D1) ----------------------------------------------------
int __fastcall goodG2BSink_4(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (00000000004105F8) ----------------------------------------------------
int goodG2B_44()
{
  return goodG2BSink_4(2LL);
}

//----- (000000000041061E) ----------------------------------------------------
int __fastcall goodB2GSink_2(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (0000000000410674) ----------------------------------------------------
int goodB2G_40()
{
  return goodB2GSink_2(0x7FFFFFFFFFFFFFFFLL);
}

//----- (00000000004106A0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_41_good()
{
  goodB2G_40();
  return goodG2B_44();
}

//----- (00000000004106BA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_64b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (00000000004106F3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_64b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (000000000041072C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_64b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 + 1LL);
  return result;
}

//----- (0000000000410781) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_square_65_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))CWE190_Integer_Overflow__int64_t_rand_square_65b_badSink)(v4);
}

//----- (0000000000410847) ----------------------------------------------------
int goodG2B_45()
{
  return CWE190_Integer_Overflow__int64_t_rand_square_65b_goodG2BSink(2LL);
}

//----- (0000000000410876) ----------------------------------------------------
__int64 goodB2G_41()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))CWE190_Integer_Overflow__int64_t_rand_square_65b_goodB2GSink)(v4);
}

//----- (000000000041093C) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_square_65_good()
{
  goodG2B_45();
  return goodB2G_41();
}

//----- (0000000000410956) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_13_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v5 = v8 * v8;
    result = printIntLine(v8 * v8);
  }
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;
// 410956: using guessed type char buf[16];

//----- (0000000000410A62) ----------------------------------------------------
int goodB2G1_30()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;
// 410A62: using guessed type char buf[16];

//----- (0000000000410BA1) ----------------------------------------------------
int goodB2G2_30()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v8 * v8;
      result = printIntLine(v8 * v8);
    }
  }
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;
// 410BA1: using guessed type char buf[16];

//----- (0000000000410CD4) ----------------------------------------------------
int goodG2B1_26()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000410D22) ----------------------------------------------------
int goodG2B2_26()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000410D64) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_13_good()
{
  goodB2G1_30();
  goodB2G2_30();
  goodG2B1_26();
  return goodG2B2_26();
}

//----- (0000000000410D92) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_fscanf_square_65_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  int (__fastcall *v2)(__int64); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__int64_t_fscanf_square_65b_badSink;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return ((__int64 (__fastcall *)(__int64))v2)(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410DD6) ----------------------------------------------------
int goodG2B_46()
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_65b_goodG2BSink(2LL);
}

//----- (0000000000410E05) ----------------------------------------------------
__int64 goodB2G_42()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  int (__fastcall *v2)(__int64); // [rsp+8h] [rbp-8h]

  v2 = CWE190_Integer_Overflow__int64_t_fscanf_square_65b_goodB2GSink;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return ((__int64 (__fastcall *)(__int64))v2)(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410E49) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_fscanf_square_65_good()
{
  goodG2B_46();
  return goodB2G_42();
}

//----- (0000000000410E63) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_add_54e_badSink(a1);
}

//----- (0000000000410E7A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_add_54e_goodG2BSink(a1);
}

//----- (0000000000410E91) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_add_54e_goodB2GSink(a1);
}

//----- (0000000000410EA8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_65b_badSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (0000000000410ED4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_65b_goodG2BSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (0000000000410F00) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_65b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}

//----- (0000000000410F48) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_51_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_multiply_51b_badSink(v4);
}

//----- (0000000000411005) ----------------------------------------------------
int goodG2B_47()
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_51b_goodG2BSink(2LL);
}

//----- (000000000041102B) ----------------------------------------------------
int goodB2G_43()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_multiply_51b_goodB2GSink(v4);
}

//----- (00000000004110E8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_51_good()
{
  goodG2B_47();
  return goodB2G_43();
}

//----- (0000000000411102) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_34_bad()
{
  return printLongLongLine(1LL);
}

//----- (000000000041114B) ----------------------------------------------------
int goodG2B_48()
{
  return printLongLongLine(4LL);
}

//----- (000000000041118E) ----------------------------------------------------
int goodB2G_44()
{
  int result; // eax

  if ( (long double)abs64(0x7FFFFFFFFFFFFFFFLL) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(1LL);
  return result;
}

//----- (0000000000411206) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_34_good()
{
  goodG2B_48();
  return goodB2G_44();
}

//----- (0000000000411220) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_54c_badSink(a1);
}

//----- (0000000000411237) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_54c_goodG2BSink(a1);
}

//----- (000000000041124E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_54c_goodB2GSink(a1);
}

//----- (0000000000411265) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_66b_badSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) * *(_QWORD *)(a1 + 16));
}

//----- (0000000000411298) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_66b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) * *(_QWORD *)(a1 + 16));
}

//----- (00000000004112CB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+18h] [rbp-8h]

  v2 = *(_QWORD *)(a1 + 16);
  if ( (long double)abs64(v2) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 * v2);
  return result;
}

//----- (000000000041132D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_13_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v4 = v5 + 1;
    result = printIntLine(v5 + 1);
  }
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004113B4) ----------------------------------------------------
int goodB2G1_31()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041145C) ----------------------------------------------------
int goodB2G2_31()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v5 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v5 + 1;
      result = printIntLine(v5 + 1);
    }
  }
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004114F8) ----------------------------------------------------
int goodG2B1_27()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000411545) ----------------------------------------------------
int goodG2B2_27()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000411586) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_13_good()
{
  goodB2G1_31();
  goodB2G2_31();
  goodG2B1_27();
  return goodG2B2_27();
}

//----- (00000000004115B4) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_68b_badSink()
{
  return printLongLongLine(
           CWE190_Integer_Overflow__int64_t_rand_square_68_badData
         * CWE190_Integer_Overflow__int64_t_rand_square_68_badData);
}
// 679438: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_square_68_badData;

//----- (00000000004115E2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_68b_goodG2BSink()
{
  return printLongLongLine(
           CWE190_Integer_Overflow__int64_t_rand_square_68_goodG2BData
         * CWE190_Integer_Overflow__int64_t_rand_square_68_goodG2BData);
}
// 679440: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_square_68_goodG2BData;

//----- (0000000000411610) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_68b_goodB2GSink()
{
  int result; // eax

  if ( (long double)abs64(CWE190_Integer_Overflow__int64_t_rand_square_68_goodB2GData) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(
               CWE190_Integer_Overflow__int64_t_rand_square_68_goodB2GData
             * CWE190_Integer_Overflow__int64_t_rand_square_68_goodB2GData);
  return result;
}
// 679430: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_square_68_goodB2GData;

//----- (000000000041166D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_51b_badSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (0000000000411694) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_51b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (00000000004116BB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_51b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (0000000000411711) ----------------------------------------------------
int badSink_5()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_multiply_45_badData;
  if ( CWE190_Integer_Overflow__int64_t_rand_multiply_45_badData > 0 )
    result = printLongLongLine(2 * CWE190_Integer_Overflow__int64_t_rand_multiply_45_badData);
  return result;
}
// 6791E0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_multiply_45_badData;

//----- (0000000000411744) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_45_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_multiply_45_badData = v4;
  return badSink_5();
}
// 6791E0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_multiply_45_badData;

//----- (000000000041180A) ----------------------------------------------------
int goodG2BSink_5()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_multiply_45_goodG2BData;
  if ( CWE190_Integer_Overflow__int64_t_rand_multiply_45_goodG2BData > 0 )
    result = printLongLongLine(2 * CWE190_Integer_Overflow__int64_t_rand_multiply_45_goodG2BData);
  return result;
}
// 6791E8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_multiply_45_goodG2BData;

//----- (000000000041183D) ----------------------------------------------------
int goodG2B_49()
{
  CWE190_Integer_Overflow__int64_t_rand_multiply_45_goodG2BData = 2LL;
  return goodG2BSink_5();
}
// 6791E8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_multiply_45_goodG2BData;

//----- (000000000041186C) ----------------------------------------------------
int goodB2GSink_3()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_multiply_45_goodB2GData;
  if ( CWE190_Integer_Overflow__int64_t_rand_multiply_45_goodB2GData > 0 )
  {
    if ( CWE190_Integer_Overflow__int64_t_rand_multiply_45_goodB2GData > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * CWE190_Integer_Overflow__int64_t_rand_multiply_45_goodB2GData);
  }
  return result;
}
// 6791F0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_multiply_45_goodB2GData;

//----- (00000000004118BB) ----------------------------------------------------
int goodB2G_45()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_multiply_45_goodB2GData = v4;
  return goodB2GSink_3();
}
// 6791F0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_multiply_45_goodB2GData;

//----- (0000000000411981) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_45_good()
{
  goodG2B_49();
  return goodB2G_45();
}

//----- (000000000041199B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_16_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  __int64 v2; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004119E8) ----------------------------------------------------
int goodB2G_46()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000411A60) ----------------------------------------------------
int goodG2B_50()
{
  return printLongLongLine(4LL);
}

//----- (0000000000411A95) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_16_good()
{
  goodB2G_46();
  return goodG2B_50();
}

//----- (0000000000411AAF) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_64_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_add_64b_badSink(&v1);
}

//----- (0000000000411ADB) ----------------------------------------------------
int goodG2B_51()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_add_64b_goodG2BSink(&v1);
}

//----- (0000000000411B01) ----------------------------------------------------
int goodB2G_47()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_add_64b_goodB2GSink(&v1);
}

//----- (0000000000411B2D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_64_good()
{
  goodG2B_51();
  return goodB2G_47();
}

//----- (0000000000411B47) ----------------------------------------------------
int __fastcall badSink_6(int a1)
{
  int result; // eax

  result = badStatic_1;
  if ( badStatic_1 )
    result = printIntLine(a1 * a1);
  return result;
}
// 6791F8: using guessed type int badStatic_1;

//----- (0000000000411B72) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_21_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  badStatic_1 = 1;
  return badSink_6(v7);
}
// 6791F8: using guessed type int badStatic_1;
// 411B72: using guessed type char buf[16];

//----- (0000000000411C64) ----------------------------------------------------
int __fastcall goodB2G1Sink_1(int a1)
{
  if ( goodB2G1Static_1 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 * a1);
}
// 6791FC: using guessed type int goodB2G1Static_1;

//----- (0000000000411CC2) ----------------------------------------------------
int goodB2G1_32()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G1Static_1 = 0;
  return goodB2G1Sink_1(v7);
}
// 6791FC: using guessed type int goodB2G1Static_1;
// 411CC2: using guessed type char buf[16];

//----- (0000000000411DB4) ----------------------------------------------------
int __fastcall goodB2G2Sink_1(int a1)
{
  int result; // eax

  result = goodB2G2Static_1;
  if ( goodB2G2Static_1 )
  {
    if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 * a1);
  }
  return result;
}
// 679200: using guessed type int goodB2G2Static_1;

//----- (0000000000411E06) ----------------------------------------------------
int goodB2G2_32()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G2Static_1 = 1;
  return goodB2G2Sink_1(v7);
}
// 679200: using guessed type int goodB2G2Static_1;
// 411E06: using guessed type char buf[16];

//----- (0000000000411EF8) ----------------------------------------------------
int __fastcall goodG2BSink_6(int a1)
{
  int result; // eax

  result = goodG2BStatic_1;
  if ( goodG2BStatic_1 )
    result = printIntLine(a1 * a1);
  return result;
}
// 679204: using guessed type int goodG2BStatic_1;

//----- (0000000000411F23) ----------------------------------------------------
int goodG2B_52()
{
  goodG2BStatic_1 = 1;
  return goodG2BSink_6(2);
}
// 679204: using guessed type int goodG2BStatic_1;

//----- (0000000000411F4F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_21_good()
{
  goodB2G1_32();
  goodB2G2_32();
  return goodG2B_52();
}

//----- (0000000000411F73) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_03_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 411F73: using guessed type char buf[16];

//----- (0000000000412065) ----------------------------------------------------
int goodB2G1_33()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 412065: using guessed type char buf[16];

//----- (000000000041217E) ----------------------------------------------------
int goodB2G2_33()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 41217E: using guessed type char buf[16];

//----- (0000000000412297) ----------------------------------------------------
int goodG2B1_28()
{
  return printIntLine(4u);
}

//----- (00000000004122C3) ----------------------------------------------------
int goodG2B2_28()
{
  return printIntLine(4u);
}

//----- (00000000004122EF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_03_good()
{
  goodB2G1_33();
  goodB2G2_33();
  goodG2B1_28();
  return goodG2B2_28();
}

//----- (000000000041231D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_06_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  result = 5;
  if ( v10 > 0 )
    result = printLongLongLine(2 * v10);
  return result;
}

//----- (0000000000412404) ----------------------------------------------------
int goodB2G1_34()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  result = 5;
  if ( v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}

//----- (0000000000412513) ----------------------------------------------------
int goodB2G2_34()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  result = 5;
  if ( v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}

//----- (0000000000412616) ----------------------------------------------------
int goodG2B1_29()
{
  return printLongLongLine(4LL);
}

//----- (000000000041266E) ----------------------------------------------------
int goodG2B2_29()
{
  return printLongLongLine(4LL);
}

//----- (00000000004126BA) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_06_good()
{
  goodB2G1_34();
  goodB2G2_34();
  goodG2B1_29();
  return goodG2B2_29();
}

//----- (00000000004126E8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_32_bad()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-18h]
  __int64 *v3; // [rsp+20h] [rbp-10h]
  __int64 *v4; // [rsp+28h] [rbp-8h]

  v4 = &v1;
  v3 = &v1;
  v2 = 0x7FFFFFFFFFFFFFFFLL;
  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return printLongLongLine(-2LL);
}

//----- (0000000000412757) ----------------------------------------------------
int goodG2B_53()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-18h]
  __int64 *v3; // [rsp+20h] [rbp-10h]
  __int64 *v4; // [rsp+28h] [rbp-8h]

  v4 = &v1;
  v3 = &v1;
  v2 = 2LL;
  v1 = 2LL;
  return printLongLongLine(4LL);
}

//----- (00000000004127C0) ----------------------------------------------------
int goodB2G_48()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 *v4; // [rsp+20h] [rbp-10h]
  __int64 *v5; // [rsp+28h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 0x7FFFFFFFFFFFFFFFLL;
  v1 = 0x7FFFFFFFFFFFFFFFLL;
  v2 = 0x7FFFFFFFFFFFFFFFLL;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041284B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_32_good()
{
  goodG2B_53();
  return goodB2G_48();
}

//----- (0000000000412865) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_63b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 * *a1);
}

//----- (0000000000412897) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_63b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 * *a1);
}

//----- (00000000004128C9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_63b_goodB2GSink(__int64 *a1)
{
  int result; // eax

  if ( (long double)abs64(*a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 * *a1);
  return result;
}

//----- (000000000041292A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_18_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 41292A: using guessed type char buf[16];

//----- (0000000000412A1E) ----------------------------------------------------
int goodB2G_49()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 412A1E: using guessed type char buf[16];

//----- (0000000000412B39) ----------------------------------------------------
int goodG2B_54()
{
  return printIntLine(4u);
}

//----- (0000000000412B67) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_18_good()
{
  goodB2G_49();
  return goodG2B_54();
}

//----- (0000000000412B81) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_54_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_multiply_54b_badSink(v7);
}
// 412B81: using guessed type char buf[16];

//----- (0000000000412C69) ----------------------------------------------------
int goodG2B_55()
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_54b_goodG2BSink(2);
}

//----- (0000000000412C8B) ----------------------------------------------------
int goodB2G_50()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_multiply_54b_goodB2GSink(v7);
}
// 412C8B: using guessed type char buf[16];

//----- (0000000000412D73) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_54_good()
{
  goodG2B_55();
  return goodB2G_50();
}

//----- (0000000000412D8D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_53b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_square_53c_badSink(a1);
}

//----- (0000000000412DA7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_53b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_square_53c_goodG2BSink(a1);
}

//----- (0000000000412DC1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_53b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_square_53c_goodB2GSink(a1);
}

//----- (0000000000412DDB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_67b_badSink(__int64 a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (0000000000412E0F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_67b_goodG2BSink(__int64 a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (0000000000412E43) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_67b_goodB2GSink(__int64 a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}

//----- (0000000000412E93) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54e_badSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (0000000000412EBA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54e_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (0000000000412EE1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54e_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (0000000000412F37) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_66_bad()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0x7FFFFFFFFFFFFFFFLL;
  v2 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_square_66b_badSink((__int64)&v1);
}

//----- (0000000000412F6B) ----------------------------------------------------
int goodG2B_56()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 2LL;
  v2 = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_square_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000412F99) ----------------------------------------------------
int goodB2G_51()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0x7FFFFFFFFFFFFFFFLL;
  v2 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_square_66b_goodB2GSink((__int64)&v1);
}

//----- (0000000000412FCD) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_66_good()
{
  goodG2B_56();
  return goodB2G_51();
}

//----- (0000000000412FE7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_52c_badSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000041300E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_52c_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (0000000000413035) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_52c_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (000000000041308B) ----------------------------------------------------
int __fastcall badSink_7(int a1)
{
  int result; // eax

  result = badStatic_2;
  if ( badStatic_2 )
    result = printIntLine(a1 + 1);
  return result;
}
// 679208: using guessed type int badStatic_2;

//----- (00000000004130B5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_21_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  badStatic_2 = 1;
  return badSink_7(v4);
}
// 679208: using guessed type int badStatic_2;

//----- (0000000000413127) ----------------------------------------------------
int __fastcall goodB2G1Sink_2(int a1)
{
  if ( goodB2G1Static_2 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 67920C: using guessed type int goodB2G1Static_2;

//----- (0000000000413172) ----------------------------------------------------
int goodB2G1_35()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G1Static_2 = 0;
  return goodB2G1Sink_2(v4);
}
// 67920C: using guessed type int goodB2G1Static_2;

//----- (00000000004131E4) ----------------------------------------------------
int __fastcall goodB2G2Sink_2(int a1)
{
  int result; // eax

  result = goodB2G2Static_2;
  if ( goodB2G2Static_2 )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 679210: using guessed type int goodB2G2Static_2;

//----- (0000000000413223) ----------------------------------------------------
int goodB2G2_35()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G2Static_2 = 1;
  return goodB2G2Sink_2(v4);
}
// 679210: using guessed type int goodB2G2Static_2;

//----- (0000000000413295) ----------------------------------------------------
int __fastcall goodG2BSink_7(int a1)
{
  int result; // eax

  result = goodG2BStatic_2;
  if ( goodG2BStatic_2 )
    result = printIntLine(a1 + 1);
  return result;
}
// 679214: using guessed type int goodG2BStatic_2;

//----- (00000000004132BF) ----------------------------------------------------
int goodG2B_57()
{
  goodG2BStatic_2 = 1;
  return goodG2BSink_7(2);
}
// 679214: using guessed type int goodG2BStatic_2;

//----- (00000000004132EB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_21_good()
{
  goodB2G1_35();
  goodB2G2_35();
  return goodG2B_57();
}

//----- (000000000041330F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_51_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_square_51b_badSink(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041334A) ----------------------------------------------------
int goodG2B_58()
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_51b_goodG2BSink(2LL);
}

//----- (0000000000413370) ----------------------------------------------------
int goodB2G_52()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_square_51b_goodB2GSink(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004133AB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_51_good()
{
  goodG2B_58();
  return goodB2G_52();
}

//----- (00000000004133C5) ----------------------------------------------------
int badSink_8()
{
  return printIntLine(CWE190_Integer_Overflow__int_connect_socket_add_45_badData + 1);
}
// 679218: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_45_badData;

//----- (00000000004133EB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_45_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_add_45_badData = v7;
  return badSink_8();
}
// 679218: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_45_badData;
// 4133EB: using guessed type char buf[16];

//----- (00000000004134DC) ----------------------------------------------------
int goodG2BSink_8()
{
  return printIntLine(CWE190_Integer_Overflow__int_connect_socket_add_45_goodG2BData + 1);
}
// 67921C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_45_goodG2BData;

//----- (0000000000413502) ----------------------------------------------------
int goodG2B_59()
{
  CWE190_Integer_Overflow__int_connect_socket_add_45_goodG2BData = 2;
  return goodG2BSink_8();
}
// 67921C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_45_goodG2BData;

//----- (000000000041352D) ----------------------------------------------------
int goodB2GSink_4()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_connect_socket_add_45_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_connect_socket_add_45_goodB2GData + 1);
  return result;
}
// 679220: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_45_goodB2GData;

//----- (0000000000413568) ----------------------------------------------------
int goodB2G_53()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_add_45_goodB2GData = v7;
  return goodB2GSink_4();
}
// 679220: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_45_goodB2GData;
// 413568: using guessed type char buf[16];

//----- (0000000000413659) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_45_good()
{
  goodG2B_59();
  return goodB2G_53();
}

//----- (0000000000413673) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_68_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_square_68_badData = v4;
  return CWE190_Integer_Overflow__int64_t_rand_square_68b_badSink();
}
// 679438: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_square_68_badData;

//----- (0000000000413739) ----------------------------------------------------
int goodG2B_60()
{
  CWE190_Integer_Overflow__int64_t_rand_square_68_goodG2BData = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_square_68b_goodG2BSink();
}
// 679440: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_square_68_goodG2BData;

//----- (0000000000413768) ----------------------------------------------------
int goodB2G_54()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_square_68_goodB2GData = v4;
  return CWE190_Integer_Overflow__int64_t_rand_square_68b_goodB2GSink();
}
// 679430: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_square_68_goodB2GData;

//----- (000000000041382E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_68_good()
{
  goodG2B_60();
  return goodB2G_54();
}

//----- (0000000000413848) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_32_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+18h] [rbp-28h]
  __int64 *v12; // [rsp+20h] [rbp-20h]
  __int64 *v13; // [rsp+28h] [rbp-18h]

  v13 = &v10;
  v12 = &v10;
  v10 = 0LL;
  v11 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v11 = v4;
  *v13 = v4;
  return printLongLongLine(*v12 + 1);
}

//----- (0000000000413942) ----------------------------------------------------
int goodG2B_61()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 *v5; // [rsp+20h] [rbp-10h]
  __int64 *v6; // [rsp+28h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2LL;
  v1 = 2LL;
  v3 = 2LL;
  v2 = 3LL;
  return printLongLongLine(3LL);
}

//----- (00000000004139A5) ----------------------------------------------------
int goodB2G_55()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+8h] [rbp-38h]
  __int64 v12; // [rsp+10h] [rbp-30h]
  __int64 v13; // [rsp+18h] [rbp-28h]
  __int64 *v14; // [rsp+20h] [rbp-20h]
  __int64 *v15; // [rsp+28h] [rbp-18h]

  v15 = &v10;
  v14 = &v10;
  v10 = 0LL;
  v13 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v13 = v4;
  *v15 = v4;
  v12 = *v14;
  if ( v12 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  v11 = v12 + 1;
  return printLongLongLine(v12 + 1);
}

//----- (0000000000413ABB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_32_good()
{
  goodG2B_61();
  return goodB2G_55();
}

//----- (0000000000413AD5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_04_bad()
{
  return printLongLongLine(-2LL);
}

//----- (0000000000413B25) ----------------------------------------------------
int goodB2G1_36()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000413B9D) ----------------------------------------------------
int goodB2G2_36()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000413C09) ----------------------------------------------------
int goodG2B1_30()
{
  return printLongLongLine(4LL);
}

//----- (0000000000413C5F) ----------------------------------------------------
int goodG2B2_30()
{
  return printLongLongLine(4LL);
}

//----- (0000000000413CA9) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_04_good()
{
  goodB2G1_36();
  goodB2G2_36();
  goodG2B1_30();
  return goodG2B2_30();
}

//----- (0000000000413CD7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_31_bad()
{
  return printLongLongLine(-2LL);
}

//----- (0000000000413D25) ----------------------------------------------------
int goodG2B_62()
{
  return printLongLongLine(4LL);
}

//----- (0000000000413D6D) ----------------------------------------------------
int goodB2G_56()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000413DD7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_31_good()
{
  goodG2B_62();
  return goodB2G_56();
}

//----- (0000000000413DF1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_65b_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000413E16) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_65b_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000413E3B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (0000000000413E75) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_64b_badSink(__int64 *a1)
{
  __int64 v1; // rax

  v1 = *a1;
  if ( *a1 > 0 )
    LODWORD(v1) = printLongLongLine(2 * *a1);
  return v1;
}

//----- (0000000000413EB4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_64b_goodG2BSink(__int64 *a1)
{
  __int64 v1; // rax

  v1 = *a1;
  if ( *a1 > 0 )
    LODWORD(v1) = printLongLongLine(2 * *a1);
  return v1;
}

//----- (0000000000413EF3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_64b_goodB2GSink(__int64 *a1)
{
  __int64 v1; // rax
  __int64 v3; // [rsp+20h] [rbp-10h]

  v1 = *a1;
  v3 = *a1;
  if ( *a1 > 0 )
  {
    if ( v3 > 4611686018427387902LL )
      LODWORD(v1) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v1) = printLongLongLine(2 * v3);
  }
  return v1;
}

//----- (0000000000413F4E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_67b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000413F7C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_67b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000413FAA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_67b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000413FF4) ----------------------------------------------------
int __fastcall badSink_9(int a1)
{
  int result; // eax

  result = badStatic_3;
  if ( badStatic_3 )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 679224: using guessed type int badStatic_3;

//----- (0000000000414023) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_21_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  badStatic_3 = 1;
  return badSink_9(v7);
}
// 679224: using guessed type int badStatic_3;
// 414023: using guessed type char buf[16];

//----- (0000000000414115) ----------------------------------------------------
int __fastcall goodB2G1Sink_3(int a1)
{
  int result; // eax

  result = goodB2G1Static_3;
  if ( goodB2G1Static_3 )
    return printLine("Benign, fixed string");
  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 679228: using guessed type int goodB2G1Static_3;

//----- (0000000000414165) ----------------------------------------------------
int goodB2G1_37()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G1Static_3 = 0;
  return goodB2G1Sink_3(v7);
}
// 679228: using guessed type int goodB2G1Static_3;
// 414165: using guessed type char buf[16];

//----- (0000000000414257) ----------------------------------------------------
int __fastcall goodB2G2Sink_3(int a1)
{
  int result; // eax

  result = goodB2G2Static_3;
  if ( goodB2G2Static_3 && a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 67922C: using guessed type int goodB2G2Static_3;

//----- (000000000041429B) ----------------------------------------------------
int goodB2G2_37()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G2Static_3 = 1;
  return goodB2G2Sink_3(v7);
}
// 67922C: using guessed type int goodB2G2Static_3;
// 41429B: using guessed type char buf[16];

//----- (000000000041438D) ----------------------------------------------------
int __fastcall goodG2BSink_9(int a1)
{
  int result; // eax

  result = goodG2BStatic_3;
  if ( goodG2BStatic_3 )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 679230: using guessed type int goodG2BStatic_3;

//----- (00000000004143BC) ----------------------------------------------------
int goodG2B_63()
{
  goodG2BStatic_3 = 1;
  return goodG2BSink_9(2);
}
// 679230: using guessed type int goodG2BStatic_3;

//----- (00000000004143E8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_21_good()
{
  goodB2G1_37();
  goodB2G2_37();
  return goodG2B_63();
}

//----- (000000000041440C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_31_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+14h] [rbp-Ch]
  int v6; // [rsp+18h] [rbp-8h]
  int v7; // [rsp+1Ch] [rbp-4h]

  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v6 = v7;
  v5 = v7;
  v4 = v7 + 1;
  return printIntLine(v7 + 1);
}

//----- (0000000000414489) ----------------------------------------------------
int goodG2B_64()
{
  return printIntLine(3u);
}

//----- (00000000004144C0) ----------------------------------------------------
int goodB2G_57()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+14h] [rbp-Ch]
  int v6; // [rsp+18h] [rbp-8h]
  int v7; // [rsp+1Ch] [rbp-4h]

  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v6 = v7;
  v5 = v7;
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (0000000000414552) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_31_good()
{
  goodG2B_64();
  return goodB2G_57();
}

//----- (000000000041456C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_68b_badSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_multiply_68_badData;
  if ( CWE190_Integer_Overflow__int_connect_socket_multiply_68_badData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_connect_socket_multiply_68_badData);
  return result;
}
// 679408: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_68_badData;

//----- (0000000000414597) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_68b_goodG2BSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_multiply_68_goodG2BData;
  if ( CWE190_Integer_Overflow__int_connect_socket_multiply_68_goodG2BData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_connect_socket_multiply_68_goodG2BData);
  return result;
}
// 67940C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_68_goodG2BData;

//----- (00000000004145C2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_68b_goodB2GSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_multiply_68_goodB2GData;
  if ( CWE190_Integer_Overflow__int_connect_socket_multiply_68_goodB2GData > 0 )
  {
    if ( CWE190_Integer_Overflow__int_connect_socket_multiply_68_goodB2GData > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * CWE190_Integer_Overflow__int_connect_socket_multiply_68_goodB2GData);
  }
  return result;
}
// 679410: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_68_goodB2GData;

//----- (0000000000414602) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_53_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_square_53b_badSink(v4);
}

//----- (00000000004146BF) ----------------------------------------------------
int goodG2B_65()
{
  return CWE190_Integer_Overflow__int64_t_rand_square_53b_goodG2BSink(2LL);
}

//----- (00000000004146E5) ----------------------------------------------------
int goodB2G_58()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_square_53b_goodB2GSink(v4);
}

//----- (00000000004147A2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_53_good()
{
  goodG2B_65();
  return goodB2G_58();
}

//----- (00000000004147BC) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_06_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  __int64 v2; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_455D34, &v1);
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041481B) ----------------------------------------------------
int goodB2G1_38()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_455D34, &v1);
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004148B1) ----------------------------------------------------
int goodB2G2_38()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_455D34, &v1);
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041493B) ----------------------------------------------------
int goodG2B1_31()
{
  return printLongLongLine(4LL);
}

//----- (000000000041498E) ----------------------------------------------------
int goodG2B2_31()
{
  return printLongLongLine(4LL);
}

//----- (00000000004149D5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_06_good()
{
  goodB2G1_38();
  goodB2G2_38();
  goodG2B1_31();
  return goodG2B2_31();
}

//----- (0000000000414A03) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_67_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_67b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000414A37) ----------------------------------------------------
int goodG2B_66()
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_67b_goodG2BSink(2LL);
}

//----- (0000000000414A65) ----------------------------------------------------
int goodB2G_59()
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_67b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000414A99) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_67_good()
{
  goodG2B_66();
  return goodB2G_59();
}

//----- (0000000000414AB3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_12_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+14h] [rbp-Ch]
  int v5; // [rsp+18h] [rbp-8h]
  int v6; // [rsp+1Ch] [rbp-4h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v6 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    v6 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v5 = v6 + 1;
    result = printIntLine(v6 + 1);
  }
  else if ( v6 == 0x7FFFFFFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v4 = v6 + 1;
    result = printIntLine(v6 + 1);
  }
  return result;
}

//----- (0000000000414B73) ----------------------------------------------------
int goodB2G_60()
{
  int result; // eax
  char nptr[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char s[8]; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  __int16 v6; // [rsp+1Ch] [rbp-14h]
  int v7; // [rsp+24h] [rbp-Ch]
  int v8; // [rsp+28h] [rbp-8h]
  int v9; // [rsp+2Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v5 = 0;
    v6 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    *(_QWORD *)nptr = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(nptr, 14, stdin) )
      v9 = atoi(nptr);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v9 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v8 = v9 + 1;
      result = printIntLine(v9 + 1);
    }
  }
  else if ( v9 == 0x7FFFFFFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v7 = v9 + 1;
    result = printIntLine(v9 + 1);
  }
  return result;
}

//----- (0000000000414C8E) ----------------------------------------------------
int goodG2B_67()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (0000000000414CF3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_12_good()
{
  goodB2G_60();
  return goodG2B_67();
}

//----- (0000000000414D0D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_15_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 414D0D: using guessed type char buf[16];

//----- (0000000000414E00) ----------------------------------------------------
int goodB2G1_39()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 414E00: using guessed type char buf[16];

//----- (0000000000414F08) ----------------------------------------------------
int goodB2G2_39()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 414F08: using guessed type char buf[16];

//----- (0000000000415010) ----------------------------------------------------
int goodG2B1_32()
{
  return printIntLine(3u);
}

//----- (000000000041503D) ----------------------------------------------------
int goodG2B2_32()
{
  return printIntLine(3u);
}

//----- (000000000041506A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_15_good()
{
  goodB2G1_39();
  goodB2G2_39();
  goodG2B1_32();
  return goodG2B2_32();
}

//----- (0000000000415098) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_53d_badSink(a1);
}

//----- (00000000004150AF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_53d_goodG2BSink(a1);
}

//----- (00000000004150C6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_53d_goodB2GSink(a1);
}

//----- (00000000004150DD) ----------------------------------------------------
__int64 __fastcall badSource_0(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 4150DD: using guessed type char buf[16];

//----- (00000000004151BA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_42_bad()
{
  int v0; // eax

  v0 = badSource_0(0);
  return printIntLine(v0 + 1);
}

//----- (00000000004151EB) ----------------------------------------------------
__int64 goodG2BSource_0()
{
  return 2LL;
}

//----- (00000000004151FE) ----------------------------------------------------
int goodG2B_68()
{
  int v0; // eax

  v0 = goodG2BSource_0();
  return printIntLine(v0 + 1);
}

//----- (000000000041522F) ----------------------------------------------------
__int64 __fastcall goodB2GSource_0(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 41522F: using guessed type char buf[16];

//----- (000000000041530C) ----------------------------------------------------
int goodB2G_61()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_0(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000415352) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_42_good()
{
  goodB2G_61();
  return goodG2B_68();
}

//----- (000000000041536C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_04_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (000000000041544B) ----------------------------------------------------
int goodB2G1_40()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000415552) ----------------------------------------------------
int goodB2G2_40()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (000000000041564D) ----------------------------------------------------
int goodG2B1_33()
{
  return printLongLongLine(3LL);
}

//----- (000000000041569D) ----------------------------------------------------
int goodG2B2_33()
{
  return printLongLongLine(3LL);
}

//----- (00000000004156E1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_04_good()
{
  goodB2G1_40();
  goodB2G2_40();
  goodG2B1_33();
  return goodG2B2_33();
}

//----- (000000000041570F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_31_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (00000000004157E8) ----------------------------------------------------
int goodG2B_69()
{
  return printLongLongLine(3LL);
}

//----- (000000000041582A) ----------------------------------------------------
int goodB2G_62()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (000000000041591F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_31_good()
{
  goodG2B_69();
  return goodB2G_62();
}

//----- (0000000000415939) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_02_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 415939: using guessed type char buf[16];

//----- (0000000000415A2B) ----------------------------------------------------
int goodB2G1_41()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 415A2B: using guessed type char buf[16];

//----- (0000000000415B44) ----------------------------------------------------
int goodB2G2_41()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 415B44: using guessed type char buf[16];

//----- (0000000000415C5D) ----------------------------------------------------
int goodG2B1_34()
{
  return printIntLine(4u);
}

//----- (0000000000415C89) ----------------------------------------------------
int goodG2B2_34()
{
  return printIntLine(4u);
}

//----- (0000000000415CB5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_02_good()
{
  goodB2G1_41();
  goodB2G2_41();
  goodG2B1_34();
  return goodG2B2_34();
}

//----- (0000000000415CE3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_63_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_add_63b_badSink(&v10);
}

//----- (0000000000415DA0) ----------------------------------------------------
int goodG2B_70()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_add_63b_goodG2BSink(&v1);
}

//----- (0000000000415DC6) ----------------------------------------------------
int goodB2G_63()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_add_63b_goodB2GSink(&v10);
}

//----- (0000000000415E83) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_63_good()
{
  goodG2B_70();
  return goodB2G_63();
}

//----- (0000000000415E9D) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_multiply_65_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_connect_socket_multiply_65b_badSink;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 415E9D: using guessed type char buf[16];

//----- (0000000000415F8E) ----------------------------------------------------
int goodG2B_71()
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_65b_goodG2BSink(2);
}

//----- (0000000000415FB9) ----------------------------------------------------
__int64 goodB2G_64()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_connect_socket_multiply_65b_goodB2GSink;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 415FB9: using guessed type char buf[16];

//----- (00000000004160AA) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_multiply_65_good()
{
  goodG2B_71();
  return goodB2G_64();
}

//----- (00000000004160C4) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_64_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_multiply_64b_badSink(&v10);
}

//----- (0000000000416181) ----------------------------------------------------
int goodG2B_72()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_multiply_64b_goodG2BSink(&v1);
}

//----- (00000000004161A7) ----------------------------------------------------
int goodB2G_65()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_multiply_64b_goodB2GSink(&v10);
}

//----- (0000000000416264) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_64_good()
{
  goodG2B_72();
  return goodB2G_65();
}

//----- (000000000041627E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_51b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041629E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (00000000004162BE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (00000000004162F3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_67_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_add_67b_badSink(v4);
}

//----- (00000000004163B8) ----------------------------------------------------
int goodG2B_73()
{
  return CWE190_Integer_Overflow__int64_t_rand_add_67b_goodG2BSink(2LL);
}

//----- (00000000004163E6) ----------------------------------------------------
int goodB2G_66()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_add_67b_goodB2GSink(v4);
}

//----- (00000000004164AB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_67_good()
{
  goodG2B_73();
  return goodB2G_66();
}

//----- (00000000004164C5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_10_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    v5 = v8 * v8;
    result = printIntLine(v8 * v8);
  }
  return result;
}
// 679164: using guessed type int globalTrue;
// 4164C5: using guessed type char buf[16];

//----- (00000000004165CF) ----------------------------------------------------
int goodB2G1_42()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;
// 4165CF: using guessed type char buf[16];

//----- (000000000041670C) ----------------------------------------------------
int goodB2G2_42()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v8 * v8;
      result = printIntLine(v8 * v8);
    }
  }
  return result;
}
// 679164: using guessed type int globalTrue;
// 41670C: using guessed type char buf[16];

//----- (000000000041683D) ----------------------------------------------------
int goodG2B1_35()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 * v1);
  return result;
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;

//----- (0000000000416889) ----------------------------------------------------
int goodG2B2_35()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 * v1);
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (00000000004168C9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_10_good()
{
  goodB2G1_42();
  goodB2G2_42();
  goodG2B1_35();
  return goodG2B2_35();
}

//----- (00000000004168F7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_11_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( result )
  {
    v4 = v5 + 1;
    result = printIntLine(v5 + 1);
  }
  return result;
}

//----- (0000000000416984) ----------------------------------------------------
int goodB2G1_43()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (0000000000416A32) ----------------------------------------------------
int goodB2G2_43()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v5 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v5 + 1;
      result = printIntLine(v5 + 1);
    }
  }
  return result;
}

//----- (0000000000416AD4) ----------------------------------------------------
int goodG2B1_36()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000416B27) ----------------------------------------------------
int goodG2B2_36()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000416B6E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_11_good()
{
  goodB2G1_43();
  goodB2G2_43();
  goodG2B1_36();
  return goodG2B2_36();
}

//----- (0000000000416B9C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_02_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (0000000000416C0D) ----------------------------------------------------
int goodB2G1_44()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (0000000000416C93) ----------------------------------------------------
int goodB2G2_44()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (0000000000416D19) ----------------------------------------------------
int goodG2B1_37()
{
  return printIntLine(3u);
}

//----- (0000000000416D44) ----------------------------------------------------
int goodG2B2_37()
{
  return printIntLine(3u);
}

//----- (0000000000416D6F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_02_good()
{
  goodB2G1_44();
  goodB2G2_44();
  goodG2B1_37();
  return goodG2B2_37();
}

//----- (0000000000416D9D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_64b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 * *a1);
}

//----- (0000000000416DD7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_64b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 * *a1);
}

//----- (0000000000416E11) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_64b_goodB2GSink(__int64 *a1)
{
  int result; // eax

  if ( (long double)abs64(*a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 * *a1);
  return result;
}

//----- (0000000000416E7A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_52b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_square_52c_badSink(a1);
}

//----- (0000000000416E94) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_52b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_square_52c_goodG2BSink(a1);
}

//----- (0000000000416EAE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_52b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_square_52c_goodB2GSink(a1);
}

//----- (0000000000416EC8) ----------------------------------------------------
int __fastcall badSink_10(__int64 a1)
{
  int result; // eax

  result = badStatic_4;
  if ( badStatic_4 )
    result = printLongLongLine(a1 * a1);
  return result;
}
// 679234: using guessed type int badStatic_4;

//----- (0000000000416EF9) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_21_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  badStatic_4 = 1;
  return badSink_10(v4);
}
// 679234: using guessed type int badStatic_4;

//----- (0000000000416FC0) ----------------------------------------------------
int __fastcall goodB2G1Sink_4(__int64 a1)
{
  if ( goodB2G1Static_4 )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 * a1);
}
// 679238: using guessed type int goodB2G1Static_4;

//----- (000000000041702C) ----------------------------------------------------
int goodB2G1_45()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  goodB2G1Static_4 = 0;
  return goodB2G1Sink_4(v4);
}
// 679238: using guessed type int goodB2G1Static_4;

//----- (00000000004170F3) ----------------------------------------------------
int __fastcall goodB2G2Sink_4(__int64 a1)
{
  int result; // eax

  result = goodB2G2Static_4;
  if ( goodB2G2Static_4 )
  {
    if ( (long double)abs64(a1) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 * a1);
  }
  return result;
}
// 67923C: using guessed type int goodB2G2Static_4;

//----- (0000000000417153) ----------------------------------------------------
int goodB2G2_45()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  goodB2G2Static_4 = 1;
  return goodB2G2Sink_4(v4);
}
// 67923C: using guessed type int goodB2G2Static_4;

//----- (000000000041721A) ----------------------------------------------------
int __fastcall goodG2BSink_10(__int64 a1)
{
  int result; // eax

  result = goodG2BStatic_4;
  if ( goodG2BStatic_4 )
    result = printLongLongLine(a1 * a1);
  return result;
}
// 679240: using guessed type int goodG2BStatic_4;

//----- (000000000041724B) ----------------------------------------------------
int goodG2B_74()
{
  goodG2BStatic_4 = 1;
  return goodG2BSink_10(2LL);
}
// 679240: using guessed type int goodG2BStatic_4;

//----- (000000000041727B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_21_good()
{
  goodB2G1_45();
  goodB2G2_45();
  return goodG2B_74();
}

//----- (000000000041729F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_square_54d_badSink(a1);
}

//----- (00000000004172B6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_square_54d_goodG2BSink(a1);
}

//----- (00000000004172CD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_square_54d_goodB2GSink(a1);
}

//----- (00000000004172E4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_22_badSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_add_22_badGlobal;
  if ( CWE190_Integer_Overflow__int64_t_rand_add_22_badGlobal )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 67917C: using guessed type int CWE190_Integer_Overflow__int64_t_rand_add_22_badGlobal;

//----- (0000000000417314) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_22_goodB2G1Sink(__int64 a1)
{
  if ( CWE190_Integer_Overflow__int64_t_rand_add_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 + 1);
}
// 679180: using guessed type int CWE190_Integer_Overflow__int64_t_rand_add_22_goodB2G1Global;

//----- (000000000041736C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_22_goodB2G2Sink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_add_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int64_t_rand_add_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 + 1);
  }
  return result;
}
// 679184: using guessed type int CWE190_Integer_Overflow__int64_t_rand_add_22_goodB2G2Global;

//----- (00000000004173B8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_22_goodG2BSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_add_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int64_t_rand_add_22_goodG2BGlobal )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 679188: using guessed type int CWE190_Integer_Overflow__int64_t_rand_add_22_goodG2BGlobal;

//----- (00000000004173E8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_05_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( staticTrue_0 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    v5 = v8 + 1;
    result = printIntLine(v8 + 1);
  }
  return result;
}
// 679114: using guessed type int staticTrue_0;
// 4173E8: using guessed type char buf[16];

//----- (00000000004174F1) ----------------------------------------------------
int goodB2G1_46()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( staticTrue_0 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( staticFalse_0 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 679114: using guessed type int staticTrue_0;
// 679244: using guessed type int staticFalse_0;
// 4174F1: using guessed type char buf[16];

//----- (000000000041761B) ----------------------------------------------------
int goodB2G2_46()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( staticTrue_0 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    if ( v8 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v8 + 1;
      result = printIntLine(v8 + 1);
    }
  }
  return result;
}
// 679114: using guessed type int staticTrue_0;
// 41761B: using guessed type char buf[16];

//----- (0000000000417739) ----------------------------------------------------
int goodG2B1_38()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_0 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_0;
  if ( staticTrue_0 )
    result = printIntLine(v1 + 1);
  return result;
}
// 679114: using guessed type int staticTrue_0;
// 679244: using guessed type int staticFalse_0;

//----- (0000000000417784) ----------------------------------------------------
int goodG2B2_38()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_0 )
    v1 = 2;
  result = staticTrue_0;
  if ( staticTrue_0 )
    result = printIntLine(v1 + 1);
  return result;
}
// 679114: using guessed type int staticTrue_0;

//----- (00000000004177C3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_05_good()
{
  goodB2G1_46();
  goodB2G2_46();
  goodG2B1_38();
  return goodG2B2_38();
}

//----- (00000000004177F1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_22_bad()
{
  CWE190_Integer_Overflow__int64_t_max_multiply_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_max_multiply_22_badSink(0x7FFFFFFFFFFFFFFFLL);
}
// 679248: using guessed type int CWE190_Integer_Overflow__int64_t_max_multiply_22_badGlobal;

//----- (0000000000417827) ----------------------------------------------------
int goodB2G1_47()
{
  CWE190_Integer_Overflow__int64_t_max_multiply_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int64_t_max_multiply_22_goodB2G1Sink(0x7FFFFFFFFFFFFFFFLL);
}
// 67924C: using guessed type int CWE190_Integer_Overflow__int64_t_max_multiply_22_goodB2G1Global;

//----- (000000000041785D) ----------------------------------------------------
int goodB2G2_47()
{
  CWE190_Integer_Overflow__int64_t_max_multiply_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int64_t_max_multiply_22_goodB2G2Sink(0x7FFFFFFFFFFFFFFFLL);
}
// 679250: using guessed type int CWE190_Integer_Overflow__int64_t_max_multiply_22_goodB2G2Global;

//----- (0000000000417893) ----------------------------------------------------
int goodG2B_75()
{
  CWE190_Integer_Overflow__int64_t_max_multiply_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_max_multiply_22_goodG2BSink(2LL);
}
// 679254: using guessed type int CWE190_Integer_Overflow__int64_t_max_multiply_22_goodG2BGlobal;

//----- (00000000004178C3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_22_good()
{
  goodB2G1_47();
  goodB2G2_47();
  return goodG2B_75();
}

//----- (00000000004178E7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_52c_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000417907) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000417927) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000041795C) ----------------------------------------------------
int __fastcall badSink_11(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041797C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_41_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return badSink_11(v7);
}
// 41797C: using guessed type char buf[16];

//----- (0000000000417A64) ----------------------------------------------------
int __fastcall goodG2BSink_11(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000417A84) ----------------------------------------------------
int goodG2B_76()
{
  return goodG2BSink_11(2);
}

//----- (0000000000417AA6) ----------------------------------------------------
int __fastcall goodB2GSink_5(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000417ADB) ----------------------------------------------------
int goodB2G_67()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return goodB2GSink_5(v7);
}
// 417ADB: using guessed type char buf[16];

//----- (0000000000417BC3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_41_good()
{
  goodB2G_67();
  return goodG2B_76();
}

//----- (0000000000417BDD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_53d_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000417BFE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000417C1F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (0000000000417C67) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_10_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalTrue;
  if ( globalTrue )
  {
    v4 = v5 + 1;
    result = printIntLine(v5 + 1);
  }
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (0000000000417CEC) ----------------------------------------------------
int goodB2G1_48()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;

//----- (0000000000417D92) ----------------------------------------------------
int goodB2G2_48()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v5 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v5 + 1;
      result = printIntLine(v5 + 1);
    }
  }
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (0000000000417E2C) ----------------------------------------------------
int goodG2B1_39()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;

//----- (0000000000417E77) ----------------------------------------------------
int goodG2B2_39()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (0000000000417EB6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_10_good()
{
  goodB2G1_48();
  goodB2G2_48();
  goodG2B1_39();
  return goodG2B2_39();
}

//----- (0000000000417EE4) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_54_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_54b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000417F10) ----------------------------------------------------
int goodG2B_77()
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_54b_goodG2BSink(2LL);
}

//----- (0000000000417F36) ----------------------------------------------------
int goodB2G_68()
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_54b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000417F62) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_54_good()
{
  goodG2B_77();
  return goodB2G_68();
}

//----- (0000000000417F7C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_52c_badSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (0000000000417FA8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_52c_goodG2BSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (0000000000417FD4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_52c_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}

//----- (000000000041801C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_63b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (000000000041804D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_63b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (000000000041807E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_63b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 + 1LL);
  return result;
}

//----- (00000000004180CB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_add_54d_badSink(a1);
}

//----- (00000000004180E2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_add_54d_goodG2BSink(a1);
}

//----- (00000000004180F9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_add_54d_goodB2GSink(a1);
}

//----- (0000000000418110) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_34_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v10;
  v7 = v10;
  v6 = v10 + 1;
  return printIntLine(v10 + 1);
}
// 418110: using guessed type char buf[16];

//----- (000000000041820D) ----------------------------------------------------
int goodG2B_78()
{
  return printIntLine(3u);
}

//----- (0000000000418244) ----------------------------------------------------
int goodB2G_69()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v10;
  v7 = v10;
  if ( v10 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v6 = v7 + 1;
  return printIntLine(v7 + 1);
}
// 418244: using guessed type char buf[16];

//----- (0000000000418356) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_34_good()
{
  goodG2B_78();
  return goodB2G_69();
}

//----- (0000000000418370) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54d_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_54e_badSink(a1);
}

//----- (000000000041838A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54d_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_54e_goodG2BSink(a1);
}

//----- (00000000004183A4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54d_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_54e_goodB2GSink(a1);
}

//----- (00000000004183BE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_01_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (000000000041842F) ----------------------------------------------------
int goodG2B_79()
{
  return printIntLine(3u);
}

//----- (000000000041845A) ----------------------------------------------------
int goodB2G_70()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (00000000004184E0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_01_good()
{
  goodG2B_79();
  return goodB2G_70();
}

//----- (00000000004184FA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (0000000000418525) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (0000000000418550) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (0000000000418590) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_34_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v10;
  result = v10;
  v7 = v10;
  if ( v10 > 0 )
  {
    v6 = 2 * v7;
    result = printIntLine(2 * v7);
  }
  return result;
}
// 418590: using guessed type char buf[16];

//----- (0000000000418692) ----------------------------------------------------
int goodG2B_80()
{
  return printIntLine(4u);
}

//----- (00000000004186CE) ----------------------------------------------------
int goodB2G_71()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v10;
  result = v10;
  v7 = v10;
  if ( v10 > 0 )
  {
    if ( v7 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v6 = 2 * v7;
      result = printIntLine(2 * v7);
    }
  }
  return result;
}
// 4186CE: using guessed type char buf[16];

//----- (00000000004187E5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_34_good()
{
  goodG2B_80();
  return goodB2G_71();
}

//----- (00000000004187FF) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_66_bad()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__int64_t_fscanf_square_66b_badSink((__int64)&v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000418842) ----------------------------------------------------
int goodG2B_81()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 2LL;
  v2 = 2LL;
  return CWE190_Integer_Overflow__int64_t_fscanf_square_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000418870) ----------------------------------------------------
int goodB2G_72()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v3);
  v2 = v3;
  return CWE190_Integer_Overflow__int64_t_fscanf_square_66b_goodB2GSink((__int64)&v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004188B3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_66_good()
{
  goodG2B_81();
  return goodB2G_72();
}

//----- (00000000004188CD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_07_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( staticFive_0 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive_0;
  if ( staticFive_0 == 5 && v8 > 0 )
  {
    v5 = 2 * v8;
    result = printIntLine(2 * v8);
  }
  return result;
}
// 679118: using guessed type int staticFive_0;
// 4188CD: using guessed type char buf[16];

//----- (00000000004189DD) ----------------------------------------------------
int goodB2G1_49()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( staticFive_0 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive_0;
  if ( staticFive_0 != 5 )
    return printLine("Benign, fixed string");
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 679118: using guessed type int staticFive_0;
// 4189DD: using guessed type char buf[16];

//----- (0000000000418B0E) ----------------------------------------------------
int goodB2G2_49()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( staticFive_0 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive_0;
  if ( staticFive_0 == 5 && v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 679118: using guessed type int staticFive_0;
// 418B0E: using guessed type char buf[16];

//----- (0000000000418C33) ----------------------------------------------------
int goodG2B1_40()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_0 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_0;
  if ( staticFive_0 == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 679118: using guessed type int staticFive_0;

//----- (0000000000418C85) ----------------------------------------------------
int goodG2B2_40()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_0 == 5 )
    v1 = 2;
  result = staticFive_0;
  if ( staticFive_0 == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 679118: using guessed type int staticFive_0;

//----- (0000000000418CCB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_07_good()
{
  goodB2G1_49();
  goodB2G2_49();
  goodG2B1_40();
  return goodG2B2_40();
}

//----- (0000000000418CF9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_65b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000418D1F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_65b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000418D45) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_65b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000418D87) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_51_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_add_51b_badSink(v4);
}

//----- (0000000000418E44) ----------------------------------------------------
int goodG2B_82()
{
  return CWE190_Integer_Overflow__int64_t_rand_add_51b_goodG2BSink(2LL);
}

//----- (0000000000418E6A) ----------------------------------------------------
int goodB2G_73()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_add_51b_goodB2GSink(v4);
}

//----- (0000000000418F27) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_51_good()
{
  goodG2B_82();
  return goodB2G_73();
}

//----- (0000000000418F41) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_add_54c_badSink(a1);
}

//----- (0000000000418F58) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_add_54c_goodG2BSink(a1);
}

//----- (0000000000418F6F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_add_54c_goodB2GSink(a1);
}

//----- (0000000000418F86) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_09_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v10 > 0 )
      result = printLongLongLine(2 * v10);
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041906D) ----------------------------------------------------
int goodB2G1_50()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_FALSE;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041917C) ----------------------------------------------------
int goodB2G2_50()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE && v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041927F) ----------------------------------------------------
int goodG2B1_41()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004192D7) ----------------------------------------------------
int goodG2B2_41()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000419323) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_09_good()
{
  goodB2G1_50();
  goodB2G2_50();
  goodG2B1_41();
  return goodG2B2_41();
}

//----- (0000000000419351) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_53b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_square_53c_badSink(a1);
}

//----- (000000000041936B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_53b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_square_53c_goodG2BSink(a1);
}

//----- (0000000000419385) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_53b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_square_53c_goodB2GSink(a1);
}

//----- (000000000041939F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_15_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 * v4);
}

//----- (000000000041946B) ----------------------------------------------------
int goodB2G1_51()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( (long double)abs64(v4) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 * v4);
  return result;
}

//----- (0000000000419566) ----------------------------------------------------
int goodB2G2_51()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( (long double)abs64(v4) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 * v4);
  return result;
}

//----- (0000000000419661) ----------------------------------------------------
int goodG2B1_42()
{
  return printLongLongLine(4LL);
}

//----- (0000000000419696) ----------------------------------------------------
int goodG2B2_42()
{
  return printLongLongLine(4LL);
}

//----- (00000000004196CB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_15_good()
{
  goodB2G1_51();
  goodB2G2_51();
  goodG2B1_42();
  return goodG2B2_42();
}

//----- (00000000004196F9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (0000000000419724) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (000000000041974F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_63b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *a1;
  if ( *a1 == 0x80000000 || v2 < -46339 || v2 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 * v2);
  return result;
}

//----- (00000000004197A1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_14_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (00000000004197EF) ----------------------------------------------------
int goodB2G1_52()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 679168: using guessed type int globalFive;

//----- (0000000000419865) ----------------------------------------------------
int goodB2G2_52()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 679168: using guessed type int globalFive;

//----- (00000000004198CF) ----------------------------------------------------
int goodG2B1_43()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (0000000000419923) ----------------------------------------------------
int goodG2B2_43()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000041996B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_14_good()
{
  goodB2G1_52();
  goodB2G2_52();
  goodG2B1_43();
  return goodG2B2_43();
}

//----- (0000000000419999) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_06_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (0000000000419A7A) ----------------------------------------------------
int goodB2G1_53()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000419B83) ----------------------------------------------------
int goodB2G2_53()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000419C80) ----------------------------------------------------
int goodG2B1_44()
{
  return printLongLongLine(3LL);
}

//----- (0000000000419CD2) ----------------------------------------------------
int goodG2B2_44()
{
  return printLongLongLine(3LL);
}

//----- (0000000000419D18) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_06_good()
{
  goodB2G1_53();
  goodB2G2_53();
  goodG2B1_44();
  return goodG2B2_44();
}

//----- (0000000000419D46) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_32_bad()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 *v5; // [rsp+20h] [rbp-10h]
  __int64 *v6; // [rsp+28h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 0x7FFFFFFFFFFFFFFFLL;
  v1 = 0x7FFFFFFFFFFFFFFFLL;
  v3 = 0x7FFFFFFFFFFFFFFFLL;
  v2 = 0x8000000000000000LL;
  return printLongLongLine(0x8000000000000000LL);
}

//----- (0000000000419DAF) ----------------------------------------------------
int goodG2B_83()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 *v5; // [rsp+20h] [rbp-10h]
  __int64 *v6; // [rsp+28h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2LL;
  v1 = 2LL;
  v3 = 2LL;
  v2 = 3LL;
  return printLongLongLine(3LL);
}

//----- (0000000000419E12) ----------------------------------------------------
int goodB2G_74()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 *v4; // [rsp+20h] [rbp-10h]
  __int64 *v5; // [rsp+28h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 0x7FFFFFFFFFFFFFFFLL;
  v1 = 0x7FFFFFFFFFFFFFFFLL;
  v2 = 0x7FFFFFFFFFFFFFFFLL;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000419E97) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_32_good()
{
  goodG2B_83();
  return goodB2G_74();
}

//----- (0000000000419EB1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_64b_badSink(__int64 *a1)
{
  __int64 v1; // rax

  v1 = *a1;
  if ( *a1 > 0 )
    LODWORD(v1) = printLongLongLine(2 * *a1);
  return v1;
}

//----- (0000000000419EF0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_64b_goodG2BSink(__int64 *a1)
{
  __int64 v1; // rax

  v1 = *a1;
  if ( *a1 > 0 )
    LODWORD(v1) = printLongLongLine(2 * *a1);
  return v1;
}

//----- (0000000000419F2F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_64b_goodB2GSink(__int64 *a1)
{
  __int64 v1; // rax
  __int64 v3; // [rsp+20h] [rbp-10h]

  v1 = *a1;
  v3 = *a1;
  if ( *a1 > 0 )
  {
    if ( v3 > 4611686018427387902LL )
      LODWORD(v1) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v1) = printLongLongLine(2 * v3);
  }
  return v1;
}

//----- (0000000000419F8A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000419FB4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000419FDE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (000000000041A01D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_54_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_add_54b_badSink(v7);
}
// 41A01D: using guessed type char buf[16];

//----- (000000000041A105) ----------------------------------------------------
int goodG2B_84()
{
  return CWE190_Integer_Overflow__int_connect_socket_add_54b_goodG2BSink(2);
}

//----- (000000000041A127) ----------------------------------------------------
int goodB2G_75()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_add_54b_goodB2GSink(v7);
}
// 41A127: using guessed type char buf[16];

//----- (000000000041A20F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_54_good()
{
  goodG2B_84();
  return goodB2G_75();
}

//----- (000000000041A229) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_67b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000041A257) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_67b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000041A285) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_67b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000041A2CF) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_53_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_square_53b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000041A2FB) ----------------------------------------------------
int goodG2B_85()
{
  return CWE190_Integer_Overflow__int64_t_max_square_53b_goodG2BSink(2LL);
}

//----- (000000000041A321) ----------------------------------------------------
int goodB2G_76()
{
  return CWE190_Integer_Overflow__int64_t_max_square_53b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000041A34D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_53_good()
{
  goodG2B_85();
  return goodB2G_76();
}

//----- (000000000041A367) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_18_bad()
{
  return printLongLongLine(-2LL);
}

//----- (000000000041A3A7) ----------------------------------------------------
int goodB2G_77()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041A403) ----------------------------------------------------
int goodG2B_86()
{
  return printLongLongLine(4LL);
}

//----- (000000000041A43D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_18_good()
{
  goodB2G_77();
  return goodG2B_86();
}

//----- (000000000041A457) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_63_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_square_63b_badSink(&v5);
}
// 41A457: using guessed type char buf[16];

//----- (000000000041A541) ----------------------------------------------------
int goodG2B_87()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_connect_socket_square_63b_goodG2BSink(&v1);
}

//----- (000000000041A565) ----------------------------------------------------
int goodB2G_78()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_square_63b_goodB2GSink(&v5);
}
// 41A565: using guessed type char buf[16];

//----- (000000000041A64F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_63_good()
{
  goodG2B_87();
  return goodB2G_78();
}

//----- (000000000041A669) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_05_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticTrue_1 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticTrue_1;
  if ( staticTrue_1 )
    result = printLongLongLine(v10 * v10);
  return result;
}
// 67911C: using guessed type int staticTrue_1;

//----- (000000000041A74B) ----------------------------------------------------
int goodB2G1_54()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+18h] [rbp-18h]

  v10 = 0LL;
  if ( staticTrue_1 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( staticFalse_1 )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v10) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 * v10);
}
// 67911C: using guessed type int staticTrue_1;
// 679258: using guessed type int staticFalse_1;

//----- (000000000041A868) ----------------------------------------------------
int goodB2G2_54()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+18h] [rbp-18h]

  v10 = 0LL;
  if ( staticTrue_1 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticTrue_1;
  if ( staticTrue_1 )
  {
    if ( (long double)abs64(v10) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 * v10);
  }
  return result;
}
// 67911C: using guessed type int staticTrue_1;

//----- (000000000041A979) ----------------------------------------------------
int goodG2B1_45()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFalse_1 )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticTrue_1;
  if ( staticTrue_1 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 67911C: using guessed type int staticTrue_1;
// 679258: using guessed type int staticFalse_1;

//----- (000000000041A9CC) ----------------------------------------------------
int goodG2B2_45()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_1 )
    v1 = 2LL;
  result = staticTrue_1;
  if ( staticTrue_1 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 67911C: using guessed type int staticTrue_1;

//----- (000000000041AA13) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_05_good()
{
  goodB2G1_54();
  goodB2G2_54();
  goodG2B1_45();
  return goodG2B2_45();
}

//----- (000000000041AA41) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_04_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (000000000041AA8B) ----------------------------------------------------
int goodB2G1_55()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041AAFD) ----------------------------------------------------
int goodB2G2_55()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041AB63) ----------------------------------------------------
int goodG2B1_46()
{
  return printLongLongLine(3LL);
}

//----- (000000000041ABB3) ----------------------------------------------------
int goodG2B2_46()
{
  return printLongLongLine(3LL);
}

//----- (000000000041ABF7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_04_good()
{
  goodB2G1_55();
  goodB2G2_55();
  goodG2B1_46();
  return goodG2B2_46();
}

//----- (000000000041AC25) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_14_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v10 + 1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000041AD08) ----------------------------------------------------
int goodB2G1_56()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}
// 679168: using guessed type int globalFive;

//----- (000000000041AE13) ----------------------------------------------------
int goodB2G2_56()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000041AF12) ----------------------------------------------------
int goodG2B1_47()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000041AF66) ----------------------------------------------------
int goodG2B2_47()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000041AFAE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_14_good()
{
  goodB2G1_56();
  goodB2G2_56();
  goodG2B1_47();
  return goodG2B2_47();
}

//----- (000000000041AFDC) ----------------------------------------------------
int __fastcall badSink_12(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000041B003) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_41_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return badSink_12(v4);
}

//----- (000000000041B0C0) ----------------------------------------------------
int __fastcall goodG2BSink_12(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000041B0E7) ----------------------------------------------------
int goodG2B_88()
{
  return goodG2BSink_12(2LL);
}

//----- (000000000041B10D) ----------------------------------------------------
int __fastcall goodB2GSink_6(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (000000000041B163) ----------------------------------------------------
int goodB2G_79()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return goodB2GSink_6(v4);
}

//----- (000000000041B220) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_41_good()
{
  goodB2G_79();
  return goodG2B_88();
}

//----- (000000000041B23A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_64b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (000000000041B273) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_64b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (000000000041B2AC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_64b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 + 1LL);
  return result;
}

//----- (000000000041B301) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_64_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_multiply_64b_badSink(&v1);
}

//----- (000000000041B32D) ----------------------------------------------------
int goodG2B_89()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_multiply_64b_goodG2BSink(&v1);
}

//----- (000000000041B353) ----------------------------------------------------
int goodB2G_80()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_multiply_64b_goodB2GSink(&v1);
}

//----- (000000000041B37F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_64_good()
{
  goodG2B_89();
  return goodB2G_80();
}

//----- (000000000041B399) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_63_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_add_63b_badSink(&v4);
}

//----- (000000000041B403) ----------------------------------------------------
int goodG2B_90()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fgets_add_63b_goodG2BSink(&v1);
}

//----- (000000000041B427) ----------------------------------------------------
int goodB2G_81()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_add_63b_goodB2GSink(&v4);
}

//----- (000000000041B491) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_63_good()
{
  goodG2B_90();
  return goodB2G_81();
}

//----- (000000000041B4AB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54e_badSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000041B4D2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54e_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000041B4F9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54e_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (000000000041B54F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_14_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]
  __int64 v2; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, &unk_4569D0, &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    v2 = v1 * v1;
    result = printLongLongLine(v1 * v1);
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 679168: using guessed type int globalFive;

//----- (000000000041B5B0) ----------------------------------------------------
int goodB2G1_57()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, &unk_4569D0, &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 679168: using guessed type int globalFive;

//----- (000000000041B648) ----------------------------------------------------
int goodB2G2_57()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, &unk_4569D0, &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( (long double)abs64(v1) > 3037000499.9760496924 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printLongLongLine(v1 * v1);
    }
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 679168: using guessed type int globalFive;

//----- (000000000041B6D4) ----------------------------------------------------
int goodG2B1_48()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000041B729) ----------------------------------------------------
int goodG2B2_48()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000041B772) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_14_good()
{
  goodB2G1_57();
  goodB2G2_57();
  goodG2B1_48();
  return goodG2B2_48();
}

//----- (000000000041B7A0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_67_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_add_67b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000041B7D4) ----------------------------------------------------
int goodG2B_91()
{
  return CWE190_Integer_Overflow__int64_t_max_add_67b_goodG2BSink(2LL);
}

//----- (000000000041B802) ----------------------------------------------------
int goodB2G_82()
{
  return CWE190_Integer_Overflow__int64_t_max_add_67b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000041B836) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_67_good()
{
  goodG2B_91();
  return goodB2G_82();
}

//----- (000000000041B850) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_34_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 * v4);
}

//----- (000000000041B92A) ----------------------------------------------------
int goodG2B_92()
{
  return printLongLongLine(4LL);
}

//----- (000000000041B96D) ----------------------------------------------------
int goodB2G_83()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( (long double)abs64(v4) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 * v4);
  return result;
}

//----- (000000000041BA76) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_34_good()
{
  goodG2B_92();
  return goodB2G_83();
}

//----- (000000000041BA90) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_add_53d_badSink(a1);
}

//----- (000000000041BAA7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_add_53d_goodG2BSink(a1);
}

//----- (000000000041BABE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_add_53d_goodB2GSink(a1);
}

//----- (000000000041BAD5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_53d_badSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000041BAFC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_53d_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000041BB23) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_53d_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (000000000041BB79) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_66b_badSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) * *(_QWORD *)(a1 + 16));
}

//----- (000000000041BBAC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_66b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) * *(_QWORD *)(a1 + 16));
}

//----- (000000000041BBDF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+18h] [rbp-8h]

  v2 = *(_QWORD *)(a1 + 16);
  if ( (long double)abs64(v2) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 * v2);
  return result;
}

//----- (000000000041BC41) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_52b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_square_52c_badSink(a1);
}

//----- (000000000041BC5B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_52b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_square_52c_goodG2BSink(a1);
}

//----- (000000000041BC75) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_52b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_square_52c_goodB2GSink(a1);
}

//----- (000000000041BC8F) ----------------------------------------------------
int badSink_13()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_max_add_45_badData + 1);
}
// 679260: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_add_45_badData;

//----- (000000000041BCBC) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_45_bad()
{
  CWE190_Integer_Overflow__int64_t_max_add_45_badData = 0x7FFFFFFFFFFFFFFFLL;
  return badSink_13();
}
// 679260: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_add_45_badData;

//----- (000000000041BCF1) ----------------------------------------------------
int goodG2BSink_13()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_max_add_45_goodG2BData + 1);
}
// 679268: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_add_45_goodG2BData;

//----- (000000000041BD1E) ----------------------------------------------------
int goodG2B_93()
{
  CWE190_Integer_Overflow__int64_t_max_add_45_goodG2BData = 2LL;
  return goodG2BSink_13();
}
// 679268: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_add_45_goodG2BData;

//----- (000000000041BD4D) ----------------------------------------------------
int goodB2GSink_7()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int64_t_max_add_45_goodB2GData == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE190_Integer_Overflow__int64_t_max_add_45_goodB2GData + 1);
  return result;
}
// 679270: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_add_45_goodB2GData;

//----- (000000000041BD96) ----------------------------------------------------
int goodB2G_84()
{
  CWE190_Integer_Overflow__int64_t_max_add_45_goodB2GData = 0x7FFFFFFFFFFFFFFFLL;
  return goodB2GSink_7();
}
// 679270: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_add_45_goodB2GData;

//----- (000000000041BDCB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_45_good()
{
  goodG2B_93();
  return goodB2G_84();
}

//----- (000000000041BDE5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_22_badSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_add_22_badGlobal;
  if ( CWE190_Integer_Overflow__int64_t_max_add_22_badGlobal )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 679284: using guessed type int CWE190_Integer_Overflow__int64_t_max_add_22_badGlobal;

//----- (000000000041BE15) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_22_goodB2G1Sink(__int64 a1)
{
  if ( CWE190_Integer_Overflow__int64_t_max_add_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 + 1);
}
// 679288: using guessed type int CWE190_Integer_Overflow__int64_t_max_add_22_goodB2G1Global;

//----- (000000000041BE6D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_22_goodB2G2Sink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_add_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int64_t_max_add_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 + 1);
  }
  return result;
}
// 67928C: using guessed type int CWE190_Integer_Overflow__int64_t_max_add_22_goodB2G2Global;

//----- (000000000041BEB9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_22_goodG2BSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_add_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int64_t_max_add_22_goodG2BGlobal )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 679290: using guessed type int CWE190_Integer_Overflow__int64_t_max_add_22_goodG2BGlobal;

//----- (000000000041BEE9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_15_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (000000000041BF5C) ----------------------------------------------------
int goodB2G1_58()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (000000000041BFE4) ----------------------------------------------------
int goodB2G2_58()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (000000000041C06C) ----------------------------------------------------
int goodG2B1_49()
{
  return printIntLine(3u);
}

//----- (000000000041C099) ----------------------------------------------------
int goodG2B2_49()
{
  return printIntLine(3u);
}

//----- (000000000041C0C6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_15_good()
{
  goodB2G1_58();
  goodB2G2_58();
  goodG2B1_49();
  return goodG2B2_49();
}

//----- (000000000041C0F4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_add_54e_badSink(a1);
}

//----- (000000000041C10B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_add_54e_goodG2BSink(a1);
}

//----- (000000000041C122) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_add_54e_goodB2GSink(a1);
}

//----- (000000000041C139) ----------------------------------------------------
int badSink_14()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_multiply_45_badData;
  if ( CWE190_Integer_Overflow__int_connect_socket_multiply_45_badData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_connect_socket_multiply_45_badData);
  return result;
}
// 679278: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_45_badData;

//----- (000000000041C164) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_45_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_multiply_45_badData = v7;
  return badSink_14();
}
// 679278: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_45_badData;
// 41C164: using guessed type char buf[16];

//----- (000000000041C255) ----------------------------------------------------
int goodG2BSink_14()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_multiply_45_goodG2BData;
  if ( CWE190_Integer_Overflow__int_connect_socket_multiply_45_goodG2BData > 0 )
    result = printIntLine(2 * CWE190_Integer_Overflow__int_connect_socket_multiply_45_goodG2BData);
  return result;
}
// 67927C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_45_goodG2BData;

//----- (000000000041C280) ----------------------------------------------------
int goodG2B_94()
{
  CWE190_Integer_Overflow__int_connect_socket_multiply_45_goodG2BData = 2;
  return goodG2BSink_14();
}
// 67927C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_45_goodG2BData;

//----- (000000000041C2AB) ----------------------------------------------------
int goodB2GSink_8()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_multiply_45_goodB2GData;
  if ( CWE190_Integer_Overflow__int_connect_socket_multiply_45_goodB2GData > 0 )
  {
    if ( CWE190_Integer_Overflow__int_connect_socket_multiply_45_goodB2GData > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * CWE190_Integer_Overflow__int_connect_socket_multiply_45_goodB2GData);
  }
  return result;
}
// 679280: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_45_goodB2GData;

//----- (000000000041C2EB) ----------------------------------------------------
int goodB2G_85()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_multiply_45_goodB2GData = v7;
  return goodB2GSink_8();
}
// 679280: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_45_goodB2GData;
// 41C2EB: using guessed type char buf[16];

//----- (000000000041C3DC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_45_good()
{
  goodG2B_94();
  return goodB2G_85();
}

//----- (000000000041C3F6) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_add_65_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_connect_socket_add_65b_badSink;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 41C3F6: using guessed type char buf[16];

//----- (000000000041C4E7) ----------------------------------------------------
int goodG2B_95()
{
  return CWE190_Integer_Overflow__int_connect_socket_add_65b_goodG2BSink(2);
}

//----- (000000000041C512) ----------------------------------------------------
__int64 goodB2G_86()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE190_Integer_Overflow__int_connect_socket_add_65b_goodB2GSink;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 41C512: using guessed type char buf[16];

//----- (000000000041C603) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_add_65_good()
{
  goodG2B_95();
  return goodB2G_86();
}

//----- (000000000041C61D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_14_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalFive;
  if ( globalFive == 5 && v10 > 0 )
    result = printLongLongLine(2 * v10);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000041C706) ----------------------------------------------------
int goodB2G1_59()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalFive;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000041C817) ----------------------------------------------------
int goodB2G2_59()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalFive;
  if ( globalFive == 5 && v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000041C91C) ----------------------------------------------------
int goodG2B1_50()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 && v1 > 0 )
    result = printLongLongLine(2 * v1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000041C976) ----------------------------------------------------
int goodG2B2_50()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  result = globalFive;
  if ( globalFive == 5 && v1 > 0 )
    result = printLongLongLine(2 * v1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000041C9C4) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_14_good()
{
  goodB2G1_59();
  goodB2G2_59();
  goodG2B1_50();
  return goodG2B2_50();
}

//----- (000000000041C9F2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_64_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_add_64b_badSink(&v10);
}

//----- (000000000041CAAF) ----------------------------------------------------
int goodG2B_96()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_add_64b_goodG2BSink(&v1);
}

//----- (000000000041CAD5) ----------------------------------------------------
int goodB2G_87()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_add_64b_goodB2GSink(&v10);
}

//----- (000000000041CB92) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_64_good()
{
  goodG2B_96();
  return goodB2G_87();
}

//----- (000000000041CBAC) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_32_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // rax
  __int64 v11; // [rsp+0h] [rbp-40h]
  __int64 v12; // [rsp+8h] [rbp-38h]
  __int64 v13; // [rsp+10h] [rbp-30h]
  __int64 v14; // [rsp+18h] [rbp-28h]
  __int64 *v15; // [rsp+20h] [rbp-20h]
  __int64 *v16; // [rsp+28h] [rbp-18h]

  v16 = &v11;
  v15 = &v11;
  v11 = 0LL;
  v14 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v14 = v4;
  *v16 = v4;
  v9 = *v15;
  v13 = *v15;
  if ( v13 > 0 )
  {
    v12 = 2 * v13;
    LODWORD(v9) = printLongLongLine(2 * v13);
  }
  return v9;
}

//----- (000000000041CCAC) ----------------------------------------------------
int goodG2B_97()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-18h]
  __int64 *v3; // [rsp+20h] [rbp-10h]
  __int64 *v4; // [rsp+28h] [rbp-8h]

  v4 = &v1;
  v3 = &v1;
  v2 = 2LL;
  v1 = 2LL;
  return printLongLongLine(4LL);
}

//----- (000000000041CD15) ----------------------------------------------------
int goodB2G_88()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // rax
  __int64 v11; // [rsp+0h] [rbp-40h]
  __int64 v12; // [rsp+8h] [rbp-38h]
  __int64 v13; // [rsp+10h] [rbp-30h]
  __int64 v14; // [rsp+18h] [rbp-28h]
  __int64 *v15; // [rsp+20h] [rbp-20h]
  __int64 *v16; // [rsp+28h] [rbp-18h]

  v16 = &v11;
  v15 = &v11;
  v11 = 0LL;
  v14 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v14 = v4;
  *v16 = v4;
  v9 = *v15;
  v13 = *v15;
  if ( v13 > 0 )
  {
    if ( v13 > 4611686018427387902LL )
    {
      LODWORD(v9) = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v12 = 2 * v13;
      LODWORD(v9) = printLongLongLine(2 * v13);
    }
  }
  return v9;
}

//----- (000000000041CE31) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_32_good()
{
  goodG2B_97();
  return goodB2G_88();
}

//----- (000000000041CE4B) ----------------------------------------------------
void CWE190_Integer_Overflow__int_connect_socket_square_17_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  in_addr_t v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+28h] [rbp-18h]
  int v5; // [rsp+2Ch] [rbp-14h]
  int fd; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = inet_addr("127.0.0.1");
      v2 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    v4 = v7 * v7;
    printIntLine(v7 * v7);
  }
}
// 41CE4B: using guessed type char buf[16];

//----- (000000000041CF6A) ----------------------------------------------------
void goodB2G_89()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  in_addr_t v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+28h] [rbp-18h]
  int v5; // [rsp+2Ch] [rbp-14h]
  int fd; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = inet_addr("127.0.0.1");
      v2 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v7 == 0x80000000 || v7 < -46339 || v7 > 46339 )
    {
      printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v7 * v7;
      printIntLine(v7 * v7);
    }
  }
}
// 41CF6A: using guessed type char buf[16];

//----- (000000000041D0B0) ----------------------------------------------------
int goodG2B_98()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000041D102) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_17_good()
{
  goodB2G_89();
  return goodG2B_98();
}

//----- (000000000041D11C) ----------------------------------------------------
int __fastcall badSink_15(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000041D13D) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_square_44_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = badSink_15;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 41D13D: using guessed type char buf[16];

//----- (000000000041D22E) ----------------------------------------------------
int __fastcall goodG2BSink_15(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000041D24F) ----------------------------------------------------
int goodG2B_99()
{
  return goodG2BSink_15(2);
}

//----- (000000000041D27A) ----------------------------------------------------
int __fastcall goodB2GSink_9(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000041D2C2) ----------------------------------------------------
__int64 goodB2G_90()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = goodB2GSink_9;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 41D2C2: using guessed type char buf[16];

//----- (000000000041D3B3) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_square_44_good()
{
  goodG2B_99();
  return goodB2G_90();
}

//----- (000000000041D3CD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_67b_badSink(__int64 a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (000000000041D401) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_67b_goodG2BSink(__int64 a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (000000000041D435) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_67b_goodB2GSink(__int64 a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}

//----- (000000000041D485) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_52_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_square_52b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000041D4B1) ----------------------------------------------------
int goodG2B_100()
{
  return CWE190_Integer_Overflow__int64_t_max_square_52b_goodG2BSink(2LL);
}

//----- (000000000041D4D7) ----------------------------------------------------
int goodB2G_91()
{
  return CWE190_Integer_Overflow__int64_t_max_square_52b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000041D503) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_52_good()
{
  goodG2B_100();
  return goodB2G_91();
}

//----- (000000000041D51D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_53_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_square_53b_badSink(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041D558) ----------------------------------------------------
int goodG2B_101()
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_53b_goodG2BSink(2LL);
}

//----- (000000000041D57E) ----------------------------------------------------
int goodB2G_92()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_square_53b_goodB2GSink(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041D5B9) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_53_good()
{
  goodG2B_101();
  return goodB2G_92();
}

//----- (000000000041D5D3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_66_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  char v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+10h] [rbp-30h]
  __int64 v12; // [rsp+28h] [rbp-18h]

  v12 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v12 = v4;
  v11 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_square_66b_badSink((__int64)&v10);
}

//----- (000000000041D698) ----------------------------------------------------
int goodG2B_102()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 2LL;
  v2 = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_square_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000041D6C6) ----------------------------------------------------
int goodB2G_93()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  char v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+10h] [rbp-30h]
  __int64 v12; // [rsp+28h] [rbp-18h]

  v12 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v12 = v4;
  v11 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_square_66b_goodB2GSink((__int64)&v10);
}

//----- (000000000041D78B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_66_good()
{
  goodG2B_102();
  return goodB2G_93();
}

//----- (000000000041D7A5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_51b_badSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000041D7CC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_51b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000041D7F3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_51b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (000000000041D849) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_22_bad()
{
  CWE190_Integer_Overflow__int64_t_max_add_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_max_add_22_badSink(0x7FFFFFFFFFFFFFFFLL);
}
// 679284: using guessed type int CWE190_Integer_Overflow__int64_t_max_add_22_badGlobal;

//----- (000000000041D87F) ----------------------------------------------------
int goodB2G1_60()
{
  CWE190_Integer_Overflow__int64_t_max_add_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int64_t_max_add_22_goodB2G1Sink(0x7FFFFFFFFFFFFFFFLL);
}
// 679288: using guessed type int CWE190_Integer_Overflow__int64_t_max_add_22_goodB2G1Global;

//----- (000000000041D8B5) ----------------------------------------------------
int goodB2G2_60()
{
  CWE190_Integer_Overflow__int64_t_max_add_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int64_t_max_add_22_goodB2G2Sink(0x7FFFFFFFFFFFFFFFLL);
}
// 67928C: using guessed type int CWE190_Integer_Overflow__int64_t_max_add_22_goodB2G2Global;

//----- (000000000041D8EB) ----------------------------------------------------
int goodG2B_103()
{
  CWE190_Integer_Overflow__int64_t_max_add_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_max_add_22_goodG2BSink(2LL);
}
// 679290: using guessed type int CWE190_Integer_Overflow__int64_t_max_add_22_goodG2BGlobal;

//----- (000000000041D91B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_22_good()
{
  goodB2G1_60();
  goodB2G2_60();
  return goodG2B_103();
}

//----- (000000000041D93F) ----------------------------------------------------
void CWE190_Integer_Overflow__int_fgets_add_17_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  int v3; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+14h] [rbp-Ch]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v1 = 0;
    v2 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    v3 = v4 + 1;
    printIntLine(v4 + 1);
  }
}

//----- (000000000041D9D6) ----------------------------------------------------
void goodB2G_94()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  int v3; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+14h] [rbp-Ch]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v1 = 0;
    v2 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v4 == 0x7FFFFFFF )
    {
      printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v3 = v4 + 1;
      printIntLine(v4 + 1);
    }
  }
}

//----- (000000000041DA82) ----------------------------------------------------
int goodG2B_104()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000041DAD3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_17_good()
{
  goodB2G_94();
  return goodG2B_104();
}

//----- (000000000041DAED) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_32_bad()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 *v3; // [rsp+20h] [rbp-10h]
  __int64 *v4; // [rsp+28h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 0LL;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  *v4 = v1;
  return printLongLongLine(*v3 * *v3);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041DB66) ----------------------------------------------------
int goodG2B_105()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 *v5; // [rsp+20h] [rbp-10h]
  __int64 *v6; // [rsp+28h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2LL;
  v1 = 2LL;
  v3 = 2LL;
  v2 = 4LL;
  return printLongLongLine(4LL);
}

//----- (000000000041DBCA) ----------------------------------------------------
int goodB2G_95()
{
  __int64 v1; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 *v5; // [rsp+30h] [rbp-10h]
  __int64 *v6; // [rsp+38h] [rbp-8h]

  v6 = &v2;
  v5 = &v2;
  v2 = 0LL;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  *v6 = v1;
  v4 = *v5;
  if ( (long double)abs64(v4) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v3 = v4 * v4;
  return printLongLongLine(v4 * v4);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041DC72) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_32_good()
{
  goodG2B_105();
  return goodB2G_95();
}

//----- (000000000041DC8C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_15_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v6 = result;
      if ( result != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 > 0 )
  {
    v5 = 2 * v8;
    result = printIntLine(2 * v8);
  }
  return result;
}
// 41DC8C: using guessed type char buf[16];

//----- (000000000041DD84) ----------------------------------------------------
int goodB2G1_61()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v6 = result;
      if ( result != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 41DD84: using guessed type char buf[16];

//----- (000000000041DE91) ----------------------------------------------------
int goodB2G2_61()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v6 = result;
      if ( result != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 41DE91: using guessed type char buf[16];

//----- (000000000041DF9E) ----------------------------------------------------
int goodG2B1_51()
{
  return printIntLine(4u);
}

//----- (000000000041DFD0) ----------------------------------------------------
int goodG2B2_51()
{
  return printIntLine(4u);
}

//----- (000000000041E002) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_15_good()
{
  goodB2G1_61();
  goodB2G2_61();
  goodG2B1_51();
  return goodG2B2_51();
}

//----- (000000000041E030) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_16_bad()
{
  return printLongLongLine(1LL);
}

//----- (000000000041E06B) ----------------------------------------------------
int goodB2G_96()
{
  int result; // eax

  if ( (long double)abs64(0x7FFFFFFFFFFFFFFFLL) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(1LL);
  return result;
}

//----- (000000000041E0D5) ----------------------------------------------------
int goodG2B_106()
{
  return printLongLongLine(4LL);
}

//----- (000000000041E10A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_16_good()
{
  goodB2G_96();
  return goodG2B_106();
}

//----- (000000000041E124) ----------------------------------------------------
int __fastcall badSink_16(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041E144) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_add_44_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = badSink_16;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000041E1B5) ----------------------------------------------------
int __fastcall goodG2BSink_16(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041E1D5) ----------------------------------------------------
int goodG2B_107()
{
  return goodG2BSink_16(2);
}

//----- (000000000041E200) ----------------------------------------------------
int __fastcall goodB2GSink_10(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000041E235) ----------------------------------------------------
__int64 goodB2G_97()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = goodB2GSink_10;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000041E2A6) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_add_44_good()
{
  goodG2B_107();
  return goodB2G_97();
}

//----- (000000000041E2C0) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_square_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 41E2C0: using guessed type char buf[16];

//----- (000000000041E39D) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_square_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000041E3B0) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_square_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 41E3B0: using guessed type char buf[16];

//----- (000000000041E48D) ----------------------------------------------------
__int64 __fastcall badSource_1(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 41E48D: using guessed type char buf[16];

//----- (000000000041E56A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_42_bad()
{
  int result; // eax

  result = badSource_1(0);
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (000000000041E5A0) ----------------------------------------------------
__int64 goodG2BSource_1()
{
  return 2LL;
}

//----- (000000000041E5B3) ----------------------------------------------------
int goodG2B_108()
{
  int result; // eax

  result = goodG2BSource_1();
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (000000000041E5E9) ----------------------------------------------------
__int64 __fastcall goodB2GSource_1(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 41E5E9: using guessed type char buf[16];

//----- (000000000041E6C6) ----------------------------------------------------
int goodB2G_98()
{
  int result; // eax

  result = goodB2GSource_1(0);
  if ( result > 0 )
  {
    if ( result > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * result);
  }
  return result;
}

//----- (000000000041E711) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_42_good()
{
  goodB2G_98();
  return goodG2B_108();
}

//----- (000000000041E72B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_04_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  result = 1;
  if ( v10 > 0 )
    result = printLongLongLine(2 * v10);
  return result;
}

//----- (000000000041E810) ----------------------------------------------------
int goodB2G1_62()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  result = 0;
  if ( v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}

//----- (000000000041E91D) ----------------------------------------------------
int goodB2G2_62()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  result = 1;
  if ( v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}

//----- (000000000041EA1E) ----------------------------------------------------
int goodG2B1_52()
{
  return printLongLongLine(4LL);
}

//----- (000000000041EA74) ----------------------------------------------------
int goodG2B2_52()
{
  return printLongLongLine(4LL);
}

//----- (000000000041EABE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_04_good()
{
  goodB2G1_62();
  goodB2G2_62();
  goodG2B1_52();
  return goodG2B2_52();
}

//----- (000000000041EAEC) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_31_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 > 0 )
    LODWORD(v4) = printLongLongLine(2 * v4);
  return v4;
}

//----- (000000000041EBCB) ----------------------------------------------------
int goodG2B_109()
{
  return printLongLongLine(4LL);
}

//----- (000000000041EC13) ----------------------------------------------------
int goodB2G_99()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 > 0 )
  {
    if ( v4 > 4611686018427387902LL )
      LODWORD(v4) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v4) = printLongLongLine(2 * v4);
  }
  return v4;
}

//----- (000000000041ED0E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_31_good()
{
  goodG2B_109();
  return goodB2G_99();
}

//----- (000000000041ED28) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_53d_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041ED48) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000041ED68) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000041ED9D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54d_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_add_54e_badSink(a1);
}

//----- (000000000041EDB7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54d_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_add_54e_goodG2BSink(a1);
}

//----- (000000000041EDD1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54d_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_add_54e_goodB2GSink(a1);
}

//----- (000000000041EDEB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_01_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 > 0 )
    LODWORD(v4) = printLongLongLine(2 * v4);
  return v4;
}

//----- (000000000041EEBA) ----------------------------------------------------
int goodG2B_110()
{
  return printLongLongLine(4LL);
}

//----- (000000000041EEF2) ----------------------------------------------------
int goodB2G_100()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 > 0 )
  {
    if ( v4 > 4611686018427387902LL )
      LODWORD(v4) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v4) = printLongLongLine(2 * v4);
  }
  return v4;
}

//----- (000000000041EFDD) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_01_good()
{
  goodG2B_110();
  return goodB2G_100();
}

//----- (000000000041EFF7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_12_bad()
{
  __int64 v1; // [rsp+18h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  else
    v1 = 2LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printLongLongLine(2 * v1);
  if ( v1 > 4611686018427387902LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(2 * v1);
}

//----- (000000000041F097) ----------------------------------------------------
int goodB2G_101()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041F159) ----------------------------------------------------
int goodG2B_111()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLongLongLine(4LL);
}

//----- (000000000041F1D7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_12_good()
{
  goodB2G_101();
  return goodG2B_111();
}

//----- (000000000041F1F1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_add_53c_badSink(a1);
}

//----- (000000000041F208) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_add_53c_goodG2BSink(a1);
}

//----- (000000000041F21F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_add_53c_goodB2GSink(a1);
}

//----- (000000000041F236) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_add_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (000000000041F293) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_add_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000041F2A6) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_fgets_add_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (000000000041F303) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_67_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_multiply_67b_badSink(v4);
}

//----- (000000000041F3C8) ----------------------------------------------------
int goodG2B_112()
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_67b_goodG2BSink(2LL);
}

//----- (000000000041F3F6) ----------------------------------------------------
int goodB2G_102()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_multiply_67b_goodB2GSink(v4);
}

//----- (000000000041F4BB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_67_good()
{
  goodG2B_112();
  return goodB2G_102();
}

//----- (000000000041F4D5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_51_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_square_51b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000041F501) ----------------------------------------------------
int goodG2B_113()
{
  return CWE190_Integer_Overflow__int64_t_max_square_51b_goodG2BSink(2LL);
}

//----- (000000000041F527) ----------------------------------------------------
int goodB2G_103()
{
  return CWE190_Integer_Overflow__int64_t_max_square_51b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000041F553) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_51_good()
{
  goodG2B_113();
  return goodB2G_103();
}

//----- (000000000041F56D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_13_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041F5BB) ----------------------------------------------------
int goodB2G1_63()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041F631) ----------------------------------------------------
int goodB2G2_63()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041F69B) ----------------------------------------------------
int goodG2B1_53()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041F6EF) ----------------------------------------------------
int goodG2B2_53()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041F737) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_13_good()
{
  goodB2G1_63();
  goodB2G2_63();
  goodG2B1_53();
  return goodG2B2_53();
}

//----- (000000000041F765) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_31_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (000000000041F7AD) ----------------------------------------------------
int goodG2B_114()
{
  return printLongLongLine(3LL);
}

//----- (000000000041F7EF) ----------------------------------------------------
int goodB2G_104()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041F853) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_31_good()
{
  goodG2B_114();
  return goodB2G_104();
}

//----- (000000000041F86D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_52b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_add_52c_badSink(a1);
}

//----- (000000000041F887) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_52b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_add_52c_goodG2BSink(a1);
}

//----- (000000000041F8A1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_52b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_add_52c_goodB2GSink(a1);
}

//----- (000000000041F8BB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_68_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_add_68_badData = v7;
  return CWE190_Integer_Overflow__int_connect_socket_add_68b_badSink();
}
// 679448: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_68_badData;
// 41F8BB: using guessed type char buf[16];

//----- (000000000041F9AC) ----------------------------------------------------
int goodG2B_115()
{
  CWE190_Integer_Overflow__int_connect_socket_add_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_connect_socket_add_68b_goodG2BSink();
}
// 679450: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_68_goodG2BData;

//----- (000000000041F9D7) ----------------------------------------------------
int goodB2G_105()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_add_68_goodB2GData = v7;
  return CWE190_Integer_Overflow__int_connect_socket_add_68b_goodB2GSink();
}
// 67944C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_68_goodB2GData;
// 41F9D7: using guessed type char buf[16];

//----- (000000000041FAC8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_68_good()
{
  goodG2B_115();
  return goodB2G_105();
}

//----- (000000000041FAE2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_connect_socket_square_61b_badSource(0);
  return printIntLine(v0 * v0);
}

//----- (000000000041FB14) ----------------------------------------------------
int goodG2B_116()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_connect_socket_square_61b_goodG2BSource();
  return printIntLine(v0 * v0);
}

//----- (000000000041FB46) ----------------------------------------------------
int goodB2G_106()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_connect_socket_square_61b_goodB2GSource(0);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000041FB9F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_61_good()
{
  goodG2B_116();
  return goodB2G_106();
}

//----- (000000000041FBB9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_67b_badSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000041FBE8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_67b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000041FC17) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_67b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (000000000041FC75) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_22_badSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_multiply_22_badGlobal;
  if ( CWE190_Integer_Overflow__int64_t_rand_multiply_22_badGlobal )
  {
    if ( a1 > 0 )
      result = printLongLongLine(2 * a1);
  }
  return result;
}
// 6792C0: using guessed type int CWE190_Integer_Overflow__int64_t_rand_multiply_22_badGlobal;

//----- (000000000041FCAB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodB2G1Sink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodB2G1Global;
  if ( CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}
// 6792C4: using guessed type int CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodB2G1Global;

//----- (000000000041FD09) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodB2G2Sink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodB2G2Global && a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}
// 6792C8: using guessed type int CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodB2G2Global;

//----- (000000000041FD5B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodG2BSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodG2BGlobal )
  {
    if ( a1 > 0 )
      result = printLongLongLine(2 * a1);
  }
  return result;
}
// 6792CC: using guessed type int CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodG2BGlobal;

//----- (000000000041FD91) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_05_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( staticTrue_2 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticTrue_2;
  if ( staticTrue_2 )
  {
    if ( v8 > 0 )
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 679120: using guessed type int staticTrue_2;
// 41FD91: using guessed type char buf[16];

//----- (000000000041FE9F) ----------------------------------------------------
int goodB2G1_64()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( staticTrue_2 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFalse_2;
  if ( staticFalse_2 )
    return printLine("Benign, fixed string");
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 679120: using guessed type int staticTrue_2;
// 679294: using guessed type int staticFalse_2;
// 41FE9F: using guessed type char buf[16];

//----- (000000000041FFCE) ----------------------------------------------------
int goodB2G2_64()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( staticTrue_2 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticTrue_2;
  if ( staticTrue_2 && v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 679120: using guessed type int staticTrue_2;
// 41FFCE: using guessed type char buf[16];

//----- (00000000004200F1) ----------------------------------------------------
int goodG2B1_54()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_2 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_2;
  if ( staticTrue_2 )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 679120: using guessed type int staticTrue_2;
// 679294: using guessed type int staticFalse_2;

//----- (0000000000420141) ----------------------------------------------------
int goodG2B2_54()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_2 )
    v1 = 2;
  result = staticTrue_2;
  if ( staticTrue_2 )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}
// 679120: using guessed type int staticTrue_2;

//----- (0000000000420185) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_05_good()
{
  goodB2G1_64();
  goodB2G2_64();
  goodG2B1_54();
  return goodG2B2_54();
}

//----- (00000000004201B3) ----------------------------------------------------
int __fastcall badSink_17(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (00000000004201D8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_41_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return badSink_17(v7);
}
// 4201D8: using guessed type char buf[16];

//----- (00000000004202C0) ----------------------------------------------------
int __fastcall goodG2BSink_17(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (00000000004202E5) ----------------------------------------------------
int goodG2B_117()
{
  return goodG2BSink_17(2);
}

//----- (0000000000420307) ----------------------------------------------------
int __fastcall goodB2GSink_11(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (0000000000420341) ----------------------------------------------------
int goodB2G_107()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return goodB2GSink_11(v7);
}
// 420341: using guessed type char buf[16];

//----- (0000000000420429) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_41_good()
{
  goodB2G_107();
  return goodG2B_117();
}

//----- (0000000000420443) ----------------------------------------------------
int badSink_18()
{
  return printLongLongLine(
           CWE190_Integer_Overflow__int64_t_max_square_45_badData
         * CWE190_Integer_Overflow__int64_t_max_square_45_badData);
}
// 679298: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_square_45_badData;

//----- (0000000000420471) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_45_bad()
{
  CWE190_Integer_Overflow__int64_t_max_square_45_badData = 0x7FFFFFFFFFFFFFFFLL;
  return badSink_18();
}
// 679298: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_square_45_badData;

//----- (00000000004204A6) ----------------------------------------------------
int goodG2BSink_18()
{
  return printLongLongLine(
           CWE190_Integer_Overflow__int64_t_max_square_45_goodG2BData
         * CWE190_Integer_Overflow__int64_t_max_square_45_goodG2BData);
}
// 6792A0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_square_45_goodG2BData;

//----- (00000000004204D4) ----------------------------------------------------
int goodG2B_118()
{
  CWE190_Integer_Overflow__int64_t_max_square_45_goodG2BData = 2LL;
  return goodG2BSink_18();
}
// 6792A0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_square_45_goodG2BData;

//----- (0000000000420503) ----------------------------------------------------
int goodB2GSink_12()
{
  int result; // eax

  if ( (long double)abs64(CWE190_Integer_Overflow__int64_t_max_square_45_goodB2GData) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(
               CWE190_Integer_Overflow__int64_t_max_square_45_goodB2GData
             * CWE190_Integer_Overflow__int64_t_max_square_45_goodB2GData);
  return result;
}
// 6792A8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_square_45_goodB2GData;

//----- (0000000000420560) ----------------------------------------------------
int goodB2G_108()
{
  CWE190_Integer_Overflow__int64_t_max_square_45_goodB2GData = 0x7FFFFFFFFFFFFFFFLL;
  return goodB2GSink_12();
}
// 6792A8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_square_45_goodB2GData;

//----- (0000000000420595) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_45_good()
{
  goodG2B_118();
  return goodB2G_108();
}

//----- (00000000004205AF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_07_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( staticFive_1 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive_1;
  if ( staticFive_1 == 5 )
  {
    v5 = v8 * v8;
    result = printIntLine(v8 * v8);
  }
  return result;
}
// 679124: using guessed type int staticFive_1;
// 4205AF: using guessed type char buf[16];

//----- (00000000004206BB) ----------------------------------------------------
int goodB2G1_65()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( staticFive_1 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( staticFive_1 != 5 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 679124: using guessed type int staticFive_1;
// 4206BB: using guessed type char buf[16];

//----- (00000000004207FA) ----------------------------------------------------
int goodB2G2_65()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( staticFive_1 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive_1;
  if ( staticFive_1 == 5 )
  {
    if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v8 * v8;
      result = printIntLine(v8 * v8);
    }
  }
  return result;
}
// 679124: using guessed type int staticFive_1;
// 4207FA: using guessed type char buf[16];

//----- (000000000042092D) ----------------------------------------------------
int goodG2B1_55()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_1 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_1;
  if ( staticFive_1 == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 679124: using guessed type int staticFive_1;

//----- (000000000042097B) ----------------------------------------------------
int goodG2B2_55()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_1 == 5 )
    v1 = 2;
  result = staticFive_1;
  if ( staticFive_1 == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 679124: using guessed type int staticFive_1;

//----- (00000000004209BD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_07_good()
{
  goodB2G1_65();
  goodB2G2_65();
  goodG2B1_55();
  return goodG2B2_55();
}

//----- (00000000004209EB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_06_bad()
{
  return printLongLongLine(1LL);
}

//----- (0000000000420A38) ----------------------------------------------------
int goodB2G1_66()
{
  int result; // eax

  if ( (long double)abs64(0x7FFFFFFFFFFFFFFFLL) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(1LL);
  return result;
}

//----- (0000000000420AC0) ----------------------------------------------------
int goodB2G2_66()
{
  int result; // eax

  if ( (long double)abs64(0x7FFFFFFFFFFFFFFFLL) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(1LL);
  return result;
}

//----- (0000000000420B3C) ----------------------------------------------------
int goodG2B1_56()
{
  return printLongLongLine(4LL);
}

//----- (0000000000420B8F) ----------------------------------------------------
int goodG2B2_56()
{
  return printLongLongLine(4LL);
}

//----- (0000000000420BD6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_06_good()
{
  goodB2G1_66();
  goodB2G2_66();
  goodG2B1_56();
  return goodG2B2_56();
}

//----- (0000000000420C04) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_63b_badSink(__int64 *a1)
{
  __int64 v1; // rax

  v1 = *a1;
  if ( *a1 > 0 )
    LODWORD(v1) = printLongLongLine(2 * *a1);
  return v1;
}

//----- (0000000000420C3B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_63b_goodG2BSink(__int64 *a1)
{
  __int64 v1; // rax

  v1 = *a1;
  if ( *a1 > 0 )
    LODWORD(v1) = printLongLongLine(2 * *a1);
  return v1;
}

//----- (0000000000420C72) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_63b_goodB2GSink(__int64 *a1)
{
  __int64 v1; // rax
  __int64 v3; // [rsp+18h] [rbp-8h]

  v1 = *a1;
  v3 = *a1;
  if ( *a1 > 0 )
  {
    if ( v3 > 4611686018427387902LL )
      LODWORD(v1) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v1) = printLongLongLine(2 * v3);
  }
  return v1;
}

//----- (0000000000420CC5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_53_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_add_53b_badSink(v7);
}
// 420CC5: using guessed type char buf[16];

//----- (0000000000420DAD) ----------------------------------------------------
int goodG2B_119()
{
  return CWE190_Integer_Overflow__int_connect_socket_add_53b_goodG2BSink(2);
}

//----- (0000000000420DCF) ----------------------------------------------------
int goodB2G_109()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_add_53b_goodB2GSink(v7);
}
// 420DCF: using guessed type char buf[16];

//----- (0000000000420EB7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_53_good()
{
  goodG2B_119();
  return goodB2G_109();
}

//----- (0000000000420ED1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_04_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  __int64 v2; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_457498, &v1);
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000420F2E) ----------------------------------------------------
int goodB2G1_67()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_457498, &v1);
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000420FC2) ----------------------------------------------------
int goodB2G2_67()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_457498, &v1);
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042104A) ----------------------------------------------------
int goodG2B1_57()
{
  return printLongLongLine(4LL);
}

//----- (000000000042109B) ----------------------------------------------------
int goodG2B2_57()
{
  return printLongLongLine(4LL);
}

//----- (00000000004210E0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_04_good()
{
  goodB2G1_67();
  goodB2G2_67();
  goodG2B1_57();
  return goodG2B2_57();
}

//----- (000000000042110E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_31_bad()
{
  __int64 v1; // [rsp+0h] [rbp-20h]
  __int64 v2; // [rsp+8h] [rbp-18h]
  __int64 v3; // [rsp+10h] [rbp-10h]
  __int64 v4; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_457500, &v1);
  v4 = v1;
  v3 = v1;
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000421166) ----------------------------------------------------
int goodG2B_120()
{
  return printLongLongLine(4LL);
}

//----- (00000000004211A9) ----------------------------------------------------
int goodB2G_110()
{
  __int64 v1; // [rsp+10h] [rbp-20h]
  __int64 v2; // [rsp+18h] [rbp-18h]
  __int64 v3; // [rsp+20h] [rbp-10h]
  __int64 v4; // [rsp+28h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_457500, &v1);
  v4 = v1;
  v3 = v1;
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v3 * v3;
  return printLongLongLine(v3 * v3);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000421230) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_31_good()
{
  goodG2B_120();
  return goodB2G_110();
}

//----- (000000000042124A) ----------------------------------------------------
int __fastcall badSink_19(__int64 a1)
{
  int result; // eax

  result = badStatic_5;
  if ( badStatic_5 )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6792B0: using guessed type int badStatic_5;

//----- (000000000042127A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_21_bad()
{
  badStatic_5 = 1;
  return badSink_19(0x7FFFFFFFFFFFFFFFLL);
}
// 6792B0: using guessed type int badStatic_5;

//----- (00000000004212B0) ----------------------------------------------------
int __fastcall goodB2G1Sink_5(__int64 a1)
{
  if ( goodB2G1Static_5 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 + 1);
}
// 6792B4: using guessed type int goodB2G1Static_5;

//----- (0000000000421308) ----------------------------------------------------
int goodB2G1_68()
{
  goodB2G1Static_5 = 0;
  return goodB2G1Sink_5(0x7FFFFFFFFFFFFFFFLL);
}
// 6792B4: using guessed type int goodB2G1Static_5;

//----- (000000000042133E) ----------------------------------------------------
int __fastcall goodB2G2Sink_5(__int64 a1)
{
  int result; // eax

  result = goodB2G2Static_5;
  if ( goodB2G2Static_5 )
  {
    if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 + 1);
  }
  return result;
}
// 6792B8: using guessed type int goodB2G2Static_5;

//----- (000000000042138A) ----------------------------------------------------
int goodB2G2_68()
{
  goodB2G2Static_5 = 1;
  return goodB2G2Sink_5(0x7FFFFFFFFFFFFFFFLL);
}
// 6792B8: using guessed type int goodB2G2Static_5;

//----- (00000000004213C0) ----------------------------------------------------
int __fastcall goodG2BSink_19(__int64 a1)
{
  int result; // eax

  result = goodG2BStatic_5;
  if ( goodG2BStatic_5 )
    result = printLongLongLine(a1 + 1);
  return result;
}
// 6792BC: using guessed type int goodG2BStatic_5;

//----- (00000000004213F0) ----------------------------------------------------
int goodG2B_121()
{
  goodG2BStatic_5 = 1;
  return goodG2BSink_19(2LL);
}
// 6792BC: using guessed type int goodG2BStatic_5;

//----- (0000000000421420) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_21_good()
{
  goodB2G1_68();
  goodB2G2_68();
  return goodG2B_121();
}

//----- (0000000000421444) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_03_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (000000000042147C) ----------------------------------------------------
int goodB2G1_69()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004214D0) ----------------------------------------------------
int goodB2G2_69()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000421524) ----------------------------------------------------
int goodG2B1_58()
{
  return printLongLongLine(3LL);
}

//----- (0000000000421556) ----------------------------------------------------
int goodG2B2_58()
{
  return printLongLongLine(3LL);
}

//----- (0000000000421588) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_03_good()
{
  goodB2G1_69();
  goodB2G2_69();
  goodG2B1_58();
  return goodG2B2_58();
}

//----- (00000000004215B6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_66b_badSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 > 0 )
    result = printIntLine(2 * v2);
  return result;
}

//----- (00000000004215E6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_66b_goodG2BSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 > 0 )
    result = printIntLine(2 * v2);
  return result;
}

//----- (0000000000421616) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 > 0 )
  {
    if ( v2 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * v2);
  }
  return result;
}

//----- (000000000042165B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_22_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_multiply_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_rand_multiply_22_badSink(v4);
}
// 6792C0: using guessed type int CWE190_Integer_Overflow__int64_t_rand_multiply_22_badGlobal;

//----- (0000000000421722) ----------------------------------------------------
int goodB2G1_70()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodB2G1Sink(v4);
}
// 6792C4: using guessed type int CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodB2G1Global;

//----- (00000000004217E9) ----------------------------------------------------
int goodB2G2_70()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodB2G2Sink(v4);
}
// 6792C8: using guessed type int CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodB2G2Global;

//----- (00000000004218B0) ----------------------------------------------------
int goodG2B_122()
{
  CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodG2BSink(2LL);
}
// 6792CC: using guessed type int CWE190_Integer_Overflow__int64_t_rand_multiply_22_goodG2BGlobal;

//----- (00000000004218E0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_22_good()
{
  goodB2G1_70();
  goodB2G2_70();
  return goodG2B_122();
}

//----- (0000000000421904) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_07_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( staticFive_2 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_2;
  if ( staticFive_2 == 5 )
  {
    v4 = v5 + 1;
    result = printIntLine(v5 + 1);
  }
  return result;
}
// 679128: using guessed type int staticFive_2;

//----- (000000000042198B) ----------------------------------------------------
int goodB2G1_71()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( staticFive_2 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( staticFive_2 != 5 )
    return printLine("Benign, fixed string");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}
// 679128: using guessed type int staticFive_2;

//----- (0000000000421A33) ----------------------------------------------------
int goodB2G2_71()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( staticFive_2 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_2;
  if ( staticFive_2 == 5 )
  {
    if ( v5 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v5 + 1;
      result = printIntLine(v5 + 1);
    }
  }
  return result;
}
// 679128: using guessed type int staticFive_2;

//----- (0000000000421ACF) ----------------------------------------------------
int goodG2B1_59()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_2 == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = staticFive_2;
  if ( staticFive_2 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 679128: using guessed type int staticFive_2;

//----- (0000000000421B1C) ----------------------------------------------------
int goodG2B2_59()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_2 == 5 )
    v1 = 2;
  result = staticFive_2;
  if ( staticFive_2 == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 679128: using guessed type int staticFive_2;

//----- (0000000000421B5D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_07_good()
{
  goodB2G1_71();
  goodB2G2_71();
  goodG2B1_59();
  return goodG2B2_59();
}

//----- (0000000000421B8B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_67_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_square_67b_badSink(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000421BCE) ----------------------------------------------------
int goodG2B_123()
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_67b_goodG2BSink(2LL);
}

//----- (0000000000421BFC) ----------------------------------------------------
int goodB2G_111()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_square_67b_goodB2GSink(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000421C3F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_67_good()
{
  goodG2B_123();
  return goodB2G_111();
}

//----- (0000000000421C59) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_18_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (0000000000421C93) ----------------------------------------------------
int goodB2G_112()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000421CE9) ----------------------------------------------------
int goodG2B_124()
{
  return printLongLongLine(3LL);
}

//----- (0000000000421D1D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_18_good()
{
  goodB2G_112();
  return goodG2B_124();
}

//----- (0000000000421D37) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_63b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (0000000000421D68) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_63b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 + 1LL);
}

//----- (0000000000421D99) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_63b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 + 1LL);
  return result;
}

//----- (0000000000421DE6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_22_badSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_fscanf_square_22_badGlobal;
  if ( CWE190_Integer_Overflow__int64_t_fscanf_square_22_badGlobal )
    result = printLongLongLine(a1 * a1);
  return result;
}
// 6792D0: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_square_22_badGlobal;

//----- (0000000000421E17) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodB2G1Sink(__int64 a1)
{
  if ( CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 * a1);
}
// 6792D4: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodB2G1Global;

//----- (0000000000421E83) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodB2G2Sink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodB2G2Global )
  {
    if ( (long double)abs64(a1) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 * a1);
  }
  return result;
}
// 6792D8: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodB2G2Global;

//----- (0000000000421EE3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodG2BSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodG2BGlobal )
    result = printLongLongLine(a1 * a1);
  return result;
}
// 6792DC: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodG2BGlobal;

//----- (0000000000421F14) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54d_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_54e_badSink(a1);
}

//----- (0000000000421F2E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54d_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_54e_goodG2BSink(a1);
}

//----- (0000000000421F48) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54d_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_54e_goodB2GSink(a1);
}

//----- (0000000000421F62) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_64b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 * *a1);
}

//----- (0000000000421F9C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_64b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 * *a1);
}

//----- (0000000000421FD6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_64b_goodB2GSink(__int64 *a1)
{
  int result; // eax

  if ( (long double)abs64(*a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 * *a1);
  return result;
}

//----- (000000000042203F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_add_52c_badSink(a1);
}

//----- (0000000000422056) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_add_52c_goodG2BSink(a1);
}

//----- (000000000042206D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_add_52c_goodB2GSink(a1);
}

//----- (0000000000422084) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_22_badSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_multiply_22_badGlobal;
  if ( CWE190_Integer_Overflow__int64_t_max_multiply_22_badGlobal )
  {
    if ( a1 > 0 )
      result = printLongLongLine(2 * a1);
  }
  return result;
}
// 679248: using guessed type int CWE190_Integer_Overflow__int64_t_max_multiply_22_badGlobal;

//----- (00000000004220BA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_22_goodB2G1Sink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_multiply_22_goodB2G1Global;
  if ( CWE190_Integer_Overflow__int64_t_max_multiply_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}
// 67924C: using guessed type int CWE190_Integer_Overflow__int64_t_max_multiply_22_goodB2G1Global;

//----- (0000000000422118) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_22_goodB2G2Sink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_multiply_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int64_t_max_multiply_22_goodB2G2Global && a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}
// 679250: using guessed type int CWE190_Integer_Overflow__int64_t_max_multiply_22_goodB2G2Global;

//----- (000000000042216A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_22_goodG2BSink(__int64 a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_multiply_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int64_t_max_multiply_22_goodG2BGlobal )
  {
    if ( a1 > 0 )
      result = printLongLongLine(2 * a1);
  }
  return result;
}
// 679254: using guessed type int CWE190_Integer_Overflow__int64_t_max_multiply_22_goodG2BGlobal;

//----- (00000000004221A0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54e_badSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (00000000004221C5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54e_goodG2BSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (00000000004221EA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (0000000000422224) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_13_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v10 > 0 )
    result = printLongLongLine(2 * v10);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042230D) ----------------------------------------------------
int goodB2G1_72()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042241E) ----------------------------------------------------
int goodB2G2_72()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000422523) ----------------------------------------------------
int goodG2B1_60()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v1 > 0 )
    result = printLongLongLine(2 * v1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042257D) ----------------------------------------------------
int goodG2B2_60()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v1 > 0 )
    result = printLongLongLine(2 * v1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004225CB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_13_good()
{
  goodB2G1_72();
  goodB2G2_72();
  goodG2B1_60();
  return goodG2B2_60();
}

//----- (00000000004225F9) ----------------------------------------------------
void CWE190_Integer_Overflow__int64_t_rand_multiply_17_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // [rsp+10h] [rbp-20h]
  int j; // [rsp+18h] [rbp-18h]
  int i; // [rsp+1Ch] [rbp-14h]

  v9 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v9 = v4;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v9 > 0 )
      printLongLongLine(2 * v9);
  }
}

//----- (00000000004226F5) ----------------------------------------------------
void goodB2G_113()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // [rsp+10h] [rbp-20h]
  int j; // [rsp+18h] [rbp-18h]
  int i; // [rsp+1Ch] [rbp-14h]

  v9 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v9 = v4;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v9 > 0 )
    {
      if ( v9 > 4611686018427387902LL )
        printLine("data value is too large to perform arithmetic safely.");
      else
        printLongLongLine(2 * v9);
    }
  }
}

//----- (000000000042280D) ----------------------------------------------------
int goodG2B_125()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    v1 = 2LL;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}

//----- (000000000042286B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_17_good()
{
  goodB2G_113();
  return goodG2B_125();
}

//----- (0000000000422885) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_fgets_add_61b_badSource(0);
  return printIntLine(v0 + 1);
}

//----- (00000000004228B6) ----------------------------------------------------
int goodG2B_126()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_fgets_add_61b_goodG2BSource();
  return printIntLine(v0 + 1);
}

//----- (00000000004228E7) ----------------------------------------------------
int goodB2G_114()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_fgets_add_61b_goodB2GSource(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000042292D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_61_good()
{
  goodG2B_126();
  return goodB2G_114();
}

//----- (0000000000422947) ----------------------------------------------------
int __fastcall badSink_20(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000042296E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_44_bad()
{
  return badSink_20(0x7FFFFFFFFFFFFFFFLL);
}

//----- (00000000004229A3) ----------------------------------------------------
int __fastcall goodG2BSink_20(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (00000000004229CA) ----------------------------------------------------
int goodG2B_127()
{
  return goodG2BSink_20(2LL);
}

//----- (00000000004229F9) ----------------------------------------------------
int __fastcall goodB2GSink_13(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (0000000000422A4F) ----------------------------------------------------
int goodB2G_115()
{
  return goodB2GSink_13(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000422A84) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_44_good()
{
  goodG2B_127();
  return goodB2G_115();
}

//----- (0000000000422A9E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_34_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+14h] [rbp-Ch]
  int v6; // [rsp+18h] [rbp-8h]
  int v7; // [rsp+1Ch] [rbp-4h]

  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v7;
  v6 = v7;
  v5 = v7 + 1;
  return printIntLine(v7 + 1);
}

//----- (0000000000422B1B) ----------------------------------------------------
int goodG2B_128()
{
  return printIntLine(3u);
}

//----- (0000000000422B52) ----------------------------------------------------
int goodB2G_116()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+14h] [rbp-Ch]
  int v6; // [rsp+18h] [rbp-8h]
  int v7; // [rsp+1Ch] [rbp-4h]

  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v7;
  v6 = v7;
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v6 + 1;
  return printIntLine(v6 + 1);
}

//----- (0000000000422BE4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_34_good()
{
  goodG2B_128();
  return goodB2G_116();
}

//----- (0000000000422BFE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_22_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_square_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_fscanf_square_22_badSink(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6792D0: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_square_22_badGlobal;

//----- (0000000000422C43) ----------------------------------------------------
int goodB2G1_73()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodB2G1Sink(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6792D4: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodB2G1Global;

//----- (0000000000422C88) ----------------------------------------------------
int goodB2G2_73()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodB2G2Sink(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6792D8: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodB2G2Global;

//----- (0000000000422CCD) ----------------------------------------------------
int goodG2B_129()
{
  CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodG2BSink(2LL);
}
// 6792DC: using guessed type int CWE190_Integer_Overflow__int64_t_fscanf_square_22_goodG2BGlobal;

//----- (0000000000422CFD) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_22_good()
{
  goodB2G1_73();
  goodB2G2_73();
  return goodG2B_129();
}

//----- (0000000000422D21) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_64_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_square_64b_badSink(&v1);
}

//----- (0000000000422D4D) ----------------------------------------------------
int goodG2B_130()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_square_64b_goodG2BSink(&v1);
}

//----- (0000000000422D73) ----------------------------------------------------
int goodB2G_117()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_square_64b_goodB2GSink(&v1);
}

//----- (0000000000422D9F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_64_good()
{
  goodG2B_130();
  return goodB2G_117();
}

//----- (0000000000422DB9) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_11_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000422E0D) ----------------------------------------------------
int goodB2G1_74()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}

//----- (0000000000422E89) ----------------------------------------------------
int goodB2G2_74()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}

//----- (0000000000422EF9) ----------------------------------------------------
int goodG2B1_61()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000422F53) ----------------------------------------------------
int goodG2B2_61()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000422FA1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_11_good()
{
  goodB2G1_74();
  goodB2G2_74();
  goodG2B1_61();
  return goodG2B2_61();
}

//----- (0000000000422FCF) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_02_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (0000000000423007) ----------------------------------------------------
int goodB2G1_75()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042305B) ----------------------------------------------------
int goodB2G2_75()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004230AF) ----------------------------------------------------
int goodG2B1_62()
{
  return printLongLongLine(3LL);
}

//----- (00000000004230E1) ----------------------------------------------------
int goodG2B2_62()
{
  return printLongLongLine(3LL);
}

//----- (0000000000423113) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_02_good()
{
  goodB2G1_75();
  goodB2G2_75();
  goodG2B1_62();
  return goodG2B2_62();
}

//----- (0000000000423141) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_52_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_add_52b_badSink(v7);
}
// 423141: using guessed type char buf[16];

//----- (0000000000423229) ----------------------------------------------------
int goodG2B_131()
{
  return CWE190_Integer_Overflow__int_connect_socket_add_52b_goodG2BSink(2);
}

//----- (000000000042324B) ----------------------------------------------------
int goodB2G_118()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_add_52b_goodB2GSink(v7);
}
// 42324B: using guessed type char buf[16];

//----- (0000000000423333) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_52_good()
{
  goodG2B_131();
  return goodB2G_118();
}

//----- (000000000042334D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_51b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000042336D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000042338D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (00000000004233C2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_52_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_square_52b_badSink(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004233FD) ----------------------------------------------------
int goodG2B_132()
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_52b_goodG2BSink(2LL);
}

//----- (0000000000423423) ----------------------------------------------------
int goodB2G_119()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_square_52b_goodB2GSink(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042345E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_52_good()
{
  goodG2B_132();
  return goodB2G_119();
}

//----- (0000000000423478) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_63_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_add_63b_badSink(&v5);
}
// 423478: using guessed type char buf[16];

//----- (0000000000423562) ----------------------------------------------------
int goodG2B_133()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_connect_socket_add_63b_goodG2BSink(&v1);
}

//----- (0000000000423586) ----------------------------------------------------
int goodB2G_120()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_add_63b_goodB2GSink(&v5);
}
// 423586: using guessed type char buf[16];

//----- (0000000000423670) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_63_good()
{
  goodG2B_133();
  return goodB2G_120();
}

//----- (000000000042368A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_16_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 42368A: using guessed type char buf[16];

//----- (000000000042377D) ----------------------------------------------------
int goodB2G_121()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 42377D: using guessed type char buf[16];

//----- (0000000000423885) ----------------------------------------------------
int goodG2B_134()
{
  return printIntLine(3u);
}

//----- (00000000004238B2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_16_good()
{
  goodB2G_121();
  return goodG2B_134();
}

//----- (00000000004238CC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54d_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_54e_badSink(a1);
}

//----- (00000000004238E6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54d_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_54e_goodG2BSink(a1);
}

//----- (0000000000423900) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54d_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_54e_goodB2GSink(a1);
}

//----- (000000000042391A) ----------------------------------------------------
int __fastcall badSink_21(__int64 a1)
{
  int result; // eax

  result = badStatic_6;
  if ( badStatic_6 )
  {
    if ( a1 > 0 )
      result = printLongLongLine(2 * a1);
  }
  return result;
}
// 6792E0: using guessed type int badStatic_6;

//----- (0000000000423950) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_21_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  badStatic_6 = 1;
  return badSink_21(v4);
}
// 6792E0: using guessed type int badStatic_6;

//----- (0000000000423A17) ----------------------------------------------------
int __fastcall goodB2G1Sink_6(__int64 a1)
{
  int result; // eax

  result = goodB2G1Static_6;
  if ( goodB2G1Static_6 )
    return printLine("Benign, fixed string");
  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}
// 6792E4: using guessed type int goodB2G1Static_6;

//----- (0000000000423A75) ----------------------------------------------------
int goodB2G1_76()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  goodB2G1Static_6 = 0;
  return goodB2G1Sink_6(v4);
}
// 6792E4: using guessed type int goodB2G1Static_6;

//----- (0000000000423B3C) ----------------------------------------------------
int __fastcall goodB2G2Sink_6(__int64 a1)
{
  int result; // eax

  result = goodB2G2Static_6;
  if ( goodB2G2Static_6 && a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}
// 6792E8: using guessed type int goodB2G2Static_6;

//----- (0000000000423B8E) ----------------------------------------------------
int goodB2G2_76()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  goodB2G2Static_6 = 1;
  return goodB2G2Sink_6(v4);
}
// 6792E8: using guessed type int goodB2G2Static_6;

//----- (0000000000423C55) ----------------------------------------------------
int __fastcall goodG2BSink_21(__int64 a1)
{
  int result; // eax

  result = goodG2BStatic_6;
  if ( goodG2BStatic_6 )
  {
    if ( a1 > 0 )
      result = printLongLongLine(2 * a1);
  }
  return result;
}
// 6792EC: using guessed type int goodG2BStatic_6;

//----- (0000000000423C8B) ----------------------------------------------------
int goodG2B_135()
{
  goodG2BStatic_6 = 1;
  return goodG2BSink_21(2LL);
}
// 6792EC: using guessed type int goodG2BStatic_6;

//----- (0000000000423CBB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_21_good()
{
  goodB2G1_76();
  goodB2G2_76();
  return goodG2B_135();
}

//----- (0000000000423CDF) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_03_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 > 0 )
    LODWORD(v4) = printLongLongLine(2 * v4);
  return v4;
}

//----- (0000000000423DAE) ----------------------------------------------------
int goodB2G1_77()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 > 0 )
  {
    if ( v4 > 4611686018427387902LL )
      LODWORD(v4) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v4) = printLongLongLine(2 * v4);
  }
  return v4;
}

//----- (0000000000423E99) ----------------------------------------------------
int goodB2G2_77()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 > 0 )
  {
    if ( v4 > 4611686018427387902LL )
      LODWORD(v4) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v4) = printLongLongLine(2 * v4);
  }
  return v4;
}

//----- (0000000000423F84) ----------------------------------------------------
int goodG2B1_63()
{
  return printLongLongLine(4LL);
}

//----- (0000000000423FBC) ----------------------------------------------------
int goodG2B2_63()
{
  return printLongLongLine(4LL);
}

//----- (0000000000423FF4) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_03_good()
{
  goodB2G1_77();
  goodB2G2_77();
  goodG2B1_63();
  return goodG2B2_63();
}

//----- (0000000000424022) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_17_bad()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    result = -1;
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}

//----- (0000000000424086) ----------------------------------------------------
int goodB2G_122()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    result = -1;
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 > 0 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}

//----- (0000000000424106) ----------------------------------------------------
int goodG2B_136()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    v1 = 2LL;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}

//----- (0000000000424164) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_17_good()
{
  goodB2G_122();
  return goodG2B_136();
}

//----- (000000000042417E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_10_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    v5 = v8 + 1;
    result = printIntLine(v8 + 1);
  }
  return result;
}
// 679164: using guessed type int globalTrue;
// 42417E: using guessed type char buf[16];

//----- (0000000000424287) ----------------------------------------------------
int goodB2G1_78()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;
// 424287: using guessed type char buf[16];

//----- (00000000004243B1) ----------------------------------------------------
int goodB2G2_78()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v8 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v8 + 1;
      result = printIntLine(v8 + 1);
    }
  }
  return result;
}
// 679164: using guessed type int globalTrue;
// 4243B1: using guessed type char buf[16];

//----- (00000000004244CF) ----------------------------------------------------
int goodG2B1_64()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;

//----- (000000000042451A) ----------------------------------------------------
int goodG2B2_64()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 + 1);
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (0000000000424559) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_10_good()
{
  goodB2G1_78();
  goodB2G2_78();
  goodG2B1_64();
  return goodG2B2_64();
}

//----- (0000000000424587) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_10_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (00000000004245D3) ----------------------------------------------------
int goodB2G1_79()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;

//----- (0000000000424647) ----------------------------------------------------
int goodB2G2_79()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (00000000004246AF) ----------------------------------------------------
int goodG2B1_65()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;

//----- (0000000000424701) ----------------------------------------------------
int goodG2B2_65()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (0000000000424747) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_10_good()
{
  goodB2G1_79();
  goodB2G2_79();
  goodG2B1_65();
  return goodG2B2_65();
}

//----- (0000000000424775) ----------------------------------------------------
int __fastcall badSink_22(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (00000000004247A1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_44_bad()
{
  return badSink_22(0x7FFFFFFFFFFFFFFFLL);
}

//----- (00000000004247D6) ----------------------------------------------------
int __fastcall goodG2BSink_22(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (0000000000424802) ----------------------------------------------------
int goodG2B_137()
{
  return goodG2BSink_22(2LL);
}

//----- (0000000000424831) ----------------------------------------------------
int __fastcall goodB2GSink_14(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}

//----- (0000000000424879) ----------------------------------------------------
int goodB2G_123()
{
  return goodB2GSink_14(0x7FFFFFFFFFFFFFFFLL);
}

//----- (00000000004248AE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_44_good()
{
  goodG2B_137();
  return goodB2G_123();
}

//----- (00000000004248C8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_01_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 4248C8: using guessed type char buf[16];

//----- (00000000004249B9) ----------------------------------------------------
int goodG2B_138()
{
  return printIntLine(3u);
}

//----- (00000000004249E4) ----------------------------------------------------
int goodB2G_124()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 4249E4: using guessed type char buf[16];

//----- (0000000000424AEA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_01_good()
{
  goodG2B_138();
  return goodB2G_124();
}

//----- (0000000000424B04) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_18_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 > 0 )
    LODWORD(v4) = printLongLongLine(2 * v4);
  return v4;
}

//----- (0000000000424BD5) ----------------------------------------------------
int goodB2G_125()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 > 0 )
  {
    if ( v4 > 4611686018427387902LL )
      LODWORD(v4) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v4) = printLongLongLine(2 * v4);
  }
  return v4;
}

//----- (0000000000424CC2) ----------------------------------------------------
int goodG2B_139()
{
  return printLongLongLine(4LL);
}

//----- (0000000000424CFC) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_18_good()
{
  goodB2G_125();
  return goodG2B_139();
}

//----- (0000000000424D16) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_13_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]
  __int64 v2; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v2 = v1 * v1;
    result = printLongLongLine(v1 * v1);
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000424D77) ----------------------------------------------------
int goodB2G1_80()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000424E0F) ----------------------------------------------------
int goodB2G2_80()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( (long double)abs64(v1) > 3037000499.9760496924 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printLongLongLine(v1 * v1);
    }
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000424E9B) ----------------------------------------------------
int goodG2B1_66()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000424EF0) ----------------------------------------------------
int goodG2B2_66()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000424F39) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_13_good()
{
  goodB2G1_80();
  goodB2G2_80();
  goodG2B1_66();
  return goodG2B2_66();
}

//----- (0000000000424F67) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_01_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (0000000000425030) ----------------------------------------------------
int goodG2B_140()
{
  return printLongLongLine(3LL);
}

//----- (0000000000425062) ----------------------------------------------------
int goodB2G_126()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000425147) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_01_good()
{
  goodG2B_140();
  return goodB2G_126();
}

//----- (0000000000425161) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_14_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v10 * v10);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (0000000000425245) ----------------------------------------------------
int goodB2G1_81()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+18h] [rbp-18h]

  v10 = 0LL;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v10) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 * v10);
}
// 679168: using guessed type int globalFive;

//----- (0000000000425364) ----------------------------------------------------
int goodB2G2_81()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+18h] [rbp-18h]

  v10 = 0LL;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( (long double)abs64(v10) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 * v10);
  }
  return result;
}
// 679168: using guessed type int globalFive;

//----- (0000000000425477) ----------------------------------------------------
int goodG2B1_67()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (00000000004254CC) ----------------------------------------------------
int goodG2B2_67()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (0000000000425515) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_14_good()
{
  goodB2G1_81();
  goodB2G2_81();
  goodG2B1_67();
  return goodG2B2_67();
}

//----- (0000000000425543) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_add_54d_badSink(a1);
}

//----- (000000000042555D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_add_54d_goodG2BSink(a1);
}

//----- (0000000000425577) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_add_54d_goodB2GSink(a1);
}

//----- (0000000000425591) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_01_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (00000000004255C9) ----------------------------------------------------
int goodG2B_141()
{
  return printLongLongLine(3LL);
}

//----- (00000000004255FB) ----------------------------------------------------
int goodB2G_127()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042564F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_01_good()
{
  goodG2B_141();
  return goodB2G_127();
}

//----- (0000000000425669) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_10_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (00000000004256BB) ----------------------------------------------------
int goodB2G1_82()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalFalse;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;

//----- (0000000000425735) ----------------------------------------------------
int goodB2G2_82()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 > 0 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (00000000004257A3) ----------------------------------------------------
int goodG2B1_68()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;

//----- (00000000004257FB) ----------------------------------------------------
int goodG2B2_68()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (0000000000425847) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_10_good()
{
  goodB2G1_82();
  goodB2G2_82();
  goodG2B1_68();
  return goodG2B2_68();
}

//----- (0000000000425875) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_53d_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000042589B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_53d_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (00000000004258C1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_53d_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000425903) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_15_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (00000000004259CE) ----------------------------------------------------
int goodB2G1_83()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000425AB5) ----------------------------------------------------
int goodB2G2_83()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000425B9C) ----------------------------------------------------
int goodG2B1_69()
{
  return printLongLongLine(3LL);
}

//----- (0000000000425BD0) ----------------------------------------------------
int goodG2B2_69()
{
  return printLongLongLine(3LL);
}

//----- (0000000000425C04) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_15_good()
{
  goodB2G1_83();
  goodB2G2_83();
  goodG2B1_69();
  return goodG2B2_69();
}

//----- (0000000000425C32) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_max_multiply_61b_badSource()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (0000000000425C4E) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_max_multiply_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000425C64) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_max_multiply_61b_goodB2GSource()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (0000000000425C80) ----------------------------------------------------
void CWE190_Integer_Overflow__int64_t_rand_add_17_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // [rsp+10h] [rbp-20h]
  int j; // [rsp+18h] [rbp-18h]
  int i; // [rsp+1Ch] [rbp-14h]

  v9 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v9 = v4;
  }
  for ( j = 0; j <= 0; ++j )
    printLongLongLine(v9 + 1);
}

//----- (0000000000425D76) ----------------------------------------------------
void goodB2G_128()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // [rsp+10h] [rbp-20h]
  int j; // [rsp+18h] [rbp-18h]
  int i; // [rsp+1Ch] [rbp-14h]

  v9 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v9 = v4;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v9 == 0x7FFFFFFFFFFFFFFFLL )
      printLine("data value is too large to perform arithmetic safely.");
    else
      printLongLongLine(v9 + 1);
  }
}

//----- (0000000000425E88) ----------------------------------------------------
int goodG2B_142()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    v1 = 2LL;
  for ( j = 0; j <= 0; ++j )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000425EE0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_17_good()
{
  goodB2G_128();
  return goodG2B_142();
}

//----- (0000000000425EFA) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_12_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+18h] [rbp-18h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  else
  {
    v10 = 2LL;
  }
  result = globalReturnsTrueOrFalse();
  if ( result )
  {
    if ( v10 > 0 )
      result = printLongLongLine(2 * v10);
  }
  else if ( v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}

//----- (000000000042602F) ----------------------------------------------------
int goodB2G_129()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // rbx
  __int64 v10; // rbx
  __int64 v11; // rbx
  __int64 v12; // rbx
  __int64 v13; // rax
  __int64 v14; // rbx
  __int64 v15; // rbx
  __int64 v16; // rbx
  __int64 v17; // rbx
  int result; // eax
  __int64 v19; // [rsp+18h] [rbp-18h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v19 = v4;
  }
  else
  {
    if ( rand() & 1 )
    {
      v9 = (__int64)rand() << 60;
      v10 = ((__int64)rand() << 45) ^ v9;
      v11 = ((__int64)rand() << 30) ^ v10;
      v12 = ((__int64)rand() << 15) ^ v11;
      v13 = v12 ^ rand();
    }
    else
    {
      v14 = (__int64)rand() << 60;
      v15 = ((__int64)rand() << 45) ^ v14;
      v16 = ((__int64)rand() << 30) ^ v15;
      v17 = ((__int64)rand() << 15) ^ v16;
      v13 = ~(v17 ^ rand());
    }
    v19 = v13;
  }
  result = globalReturnsTrueOrFalse();
  if ( result )
  {
    if ( v19 > 0 )
    {
      if ( v19 > 4611686018427387902LL )
        result = printLine("data value is too large to perform arithmetic safely.");
      else
        result = printLongLongLine(2 * v19);
    }
  }
  else if ( v19 > 0 )
  {
    if ( v19 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v19);
  }
  return result;
}

//----- (0000000000426214) ----------------------------------------------------
int goodG2B_143()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLongLongLine(4LL);
}

//----- (0000000000426292) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_12_good()
{
  goodB2G_129();
  return goodG2B_143();
}

//----- (00000000004262AC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_67b_badSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (00000000004262DB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_67b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000042630A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_67b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (0000000000426368) ----------------------------------------------------
int __fastcall badSink_23(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000042638E) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_add_44_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))badSink_23)(v4);
}

//----- (0000000000426454) ----------------------------------------------------
int __fastcall goodG2BSink_23(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000042647A) ----------------------------------------------------
int goodG2B_144()
{
  return goodG2BSink_23(2LL);
}

//----- (00000000004264A9) ----------------------------------------------------
int __fastcall goodB2GSink_15(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (00000000004264EB) ----------------------------------------------------
__int64 goodB2G_130()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))goodB2GSink_15)(v4);
}

//----- (00000000004265B1) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_add_44_good()
{
  goodG2B_144();
  return goodB2G_130();
}

//----- (00000000004265CB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_15_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 4265CB: using guessed type char buf[16];

//----- (00000000004266BF) ----------------------------------------------------
int goodB2G1_84()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 4266BF: using guessed type char buf[16];

//----- (00000000004267DA) ----------------------------------------------------
int goodB2G2_84()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 4267DA: using guessed type char buf[16];

//----- (00000000004268F5) ----------------------------------------------------
int goodG2B1_70()
{
  return printIntLine(4u);
}

//----- (0000000000426923) ----------------------------------------------------
int goodG2B2_70()
{
  return printIntLine(4u);
}

//----- (0000000000426951) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_15_good()
{
  goodB2G1_84();
  goodB2G2_84();
  goodG2B1_70();
  return goodG2B2_70();
}

//----- (000000000042697F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_add_54c_badSink(a1);
}

//----- (0000000000426996) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_add_54c_goodG2BSink(a1);
}

//----- (00000000004269AD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_add_54c_goodB2GSink(a1);
}

//----- (00000000004269C4) ----------------------------------------------------
int __fastcall badSink_24(__int64 a1)
{
  int result; // eax

  result = badStatic_7;
  if ( badStatic_7 )
    result = printLongLongLine(a1 * a1);
  return result;
}
// 6792F0: using guessed type int badStatic_7;

//----- (00000000004269F5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_21_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  badStatic_7 = 1;
  return badSink_24(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6792F0: using guessed type int badStatic_7;

//----- (0000000000426A3A) ----------------------------------------------------
int __fastcall goodB2G1Sink_7(__int64 a1)
{
  if ( goodB2G1Static_7 )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 * a1);
}
// 6792F4: using guessed type int goodB2G1Static_7;

//----- (0000000000426AA6) ----------------------------------------------------
int goodB2G1_85()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  goodB2G1Static_7 = 0;
  return goodB2G1Sink_7(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6792F4: using guessed type int goodB2G1Static_7;

//----- (0000000000426AEB) ----------------------------------------------------
int __fastcall goodB2G2Sink_7(__int64 a1)
{
  int result; // eax

  result = goodB2G2Static_7;
  if ( goodB2G2Static_7 )
  {
    if ( (long double)abs64(a1) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 * a1);
  }
  return result;
}
// 6792F8: using guessed type int goodB2G2Static_7;

//----- (0000000000426B4B) ----------------------------------------------------
int goodB2G2_85()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  goodB2G2Static_7 = 1;
  return goodB2G2Sink_7(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6792F8: using guessed type int goodB2G2Static_7;

//----- (0000000000426B90) ----------------------------------------------------
int __fastcall goodG2BSink_24(__int64 a1)
{
  int result; // eax

  result = goodG2BStatic_7;
  if ( goodG2BStatic_7 )
    result = printLongLongLine(a1 * a1);
  return result;
}
// 6792FC: using guessed type int goodG2BStatic_7;

//----- (0000000000426BC1) ----------------------------------------------------
int goodG2B_145()
{
  goodG2BStatic_7 = 1;
  return goodG2BSink_24(2LL);
}
// 6792FC: using guessed type int goodG2BStatic_7;

//----- (0000000000426BF1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_21_good()
{
  goodB2G1_85();
  goodB2G2_85();
  return goodG2B_145();
}

//----- (0000000000426C15) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_52b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_add_52c_badSink(a1);
}

//----- (0000000000426C2F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_52b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_add_52c_goodG2BSink(a1);
}

//----- (0000000000426C49) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_52b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_add_52c_goodB2GSink(a1);
}

//----- (0000000000426C63) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_06_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 426C63: using guessed type char buf[16];

//----- (0000000000426D6C) ----------------------------------------------------
int goodB2G1_86()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 426D6C: using guessed type char buf[16];

//----- (0000000000426E96) ----------------------------------------------------
int goodB2G2_86()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 426E96: using guessed type char buf[16];

//----- (0000000000426FB4) ----------------------------------------------------
int goodG2B1_71()
{
  return printIntLine(3u);
}

//----- (0000000000426FFF) ----------------------------------------------------
int goodG2B2_71()
{
  return printIntLine(3u);
}

//----- (000000000042703E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_06_good()
{
  goodB2G1_86();
  goodB2G2_86();
  goodG2B1_71();
  return goodG2B2_71();
}

//----- (000000000042706C) ----------------------------------------------------
__int64 __fastcall badSource_2(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 42706C: using guessed type char buf[16];

//----- (0000000000427149) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_42_bad()
{
  int v0; // eax

  v0 = badSource_2(0);
  return printIntLine(v0 * v0);
}

//----- (000000000042717B) ----------------------------------------------------
__int64 goodG2BSource_2()
{
  return 2LL;
}

//----- (000000000042718E) ----------------------------------------------------
int goodG2B_146()
{
  int v0; // eax

  v0 = goodG2BSource_2();
  return printIntLine(v0 * v0);
}

//----- (00000000004271C0) ----------------------------------------------------
__int64 __fastcall goodB2GSource_2(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 4271C0: using guessed type char buf[16];

//----- (000000000042729D) ----------------------------------------------------
int goodB2G_131()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_2(0);
  if ( v1 == 0x80000000 || v1 < -46339 || v1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 * v1);
  return result;
}

//----- (00000000004272F6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_42_good()
{
  goodB2G_131();
  return goodG2B_146();
}

//----- (0000000000427310) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_04_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 * v4);
}

//----- (00000000004273F0) ----------------------------------------------------
int goodB2G1_87()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( (long double)abs64(v4) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 * v4);
  return result;
}

//----- (000000000042750B) ----------------------------------------------------
int goodB2G2_87()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( (long double)abs64(v4) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 * v4);
  return result;
}

//----- (000000000042761A) ----------------------------------------------------
int goodG2B1_72()
{
  return printLongLongLine(4LL);
}

//----- (000000000042766B) ----------------------------------------------------
int goodG2B2_72()
{
  return printLongLongLine(4LL);
}

//----- (00000000004276B0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_04_good()
{
  goodB2G1_87();
  goodB2G2_87();
  goodG2B1_72();
  return goodG2B2_72();
}

//----- (00000000004276DE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_31_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 * v4);
}

//----- (00000000004277B8) ----------------------------------------------------
int goodG2B_147()
{
  return printLongLongLine(4LL);
}

//----- (00000000004277FB) ----------------------------------------------------
int goodB2G_132()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( (long double)abs64(v4) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 * v4);
  return result;
}

//----- (0000000000427904) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_31_good()
{
  goodG2B_147();
  return goodB2G_132();
}

//----- (000000000042791E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_09_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000042796A) ----------------------------------------------------
int goodB2G1_88()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004279DE) ----------------------------------------------------
int goodB2G2_88()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000427A46) ----------------------------------------------------
int goodG2B1_73()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000427A98) ----------------------------------------------------
int goodG2B2_73()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000427ADE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_09_good()
{
  goodB2G1_88();
  goodB2G2_88();
  goodG2B1_73();
  return goodG2B2_73();
}

//----- (0000000000427B0C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_61_bad()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_max_multiply_61b_badSource();
  if ( v0 > 0 )
    LODWORD(v0) = printLongLongLine(2 * v0);
  return v0;
}

//----- (0000000000427B4C) ----------------------------------------------------
int goodG2B_148()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_max_multiply_61b_goodG2BSource();
  if ( v0 > 0 )
    LODWORD(v0) = printLongLongLine(2 * v0);
  return v0;
}

//----- (0000000000427B8C) ----------------------------------------------------
int goodB2G_133()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_max_multiply_61b_goodB2GSource();
  if ( v0 > 0 )
  {
    if ( v0 > 4611686018427387902LL )
      LODWORD(v0) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v0) = printLongLongLine(2 * v0);
  }
  return v0;
}

//----- (0000000000427BE8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_61_good()
{
  goodG2B_148();
  return goodB2G_133();
}

//----- (0000000000427C02) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_11_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v10 > 0 )
      result = printLongLongLine(2 * v10);
  }
  return result;
}

//----- (0000000000427CF1) ----------------------------------------------------
int goodB2G1_89()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalReturnsFalse();
  if ( result )
    return printLine("Benign, fixed string");
  if ( v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}

//----- (0000000000427E08) ----------------------------------------------------
int goodB2G2_89()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalReturnsTrue();
  if ( result && v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}

//----- (0000000000427F13) ----------------------------------------------------
int goodG2B1_74()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}

//----- (0000000000427F73) ----------------------------------------------------
int goodG2B2_74()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}

//----- (0000000000427FC7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_11_good()
{
  goodB2G1_89();
  goodB2G2_89();
  goodG2B1_74();
  return goodG2B2_74();
}

//----- (0000000000427FF5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_02_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 > 0 )
    LODWORD(v4) = printLongLongLine(2 * v4);
  return v4;
}

//----- (00000000004280C4) ----------------------------------------------------
int goodB2G1_90()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 > 0 )
  {
    if ( v4 > 4611686018427387902LL )
      LODWORD(v4) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v4) = printLongLongLine(2 * v4);
  }
  return v4;
}

//----- (00000000004281AF) ----------------------------------------------------
int goodB2G2_90()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 > 0 )
  {
    if ( v4 > 4611686018427387902LL )
      LODWORD(v4) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v4) = printLongLongLine(2 * v4);
  }
  return v4;
}

//----- (000000000042829A) ----------------------------------------------------
int goodG2B1_75()
{
  return printLongLongLine(4LL);
}

//----- (00000000004282D2) ----------------------------------------------------
int goodG2B2_75()
{
  return printLongLongLine(4LL);
}

//----- (000000000042830A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_02_good()
{
  goodB2G1_90();
  goodB2G2_90();
  goodG2B1_75();
  return goodG2B2_75();
}

//----- (0000000000428338) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_67_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_square_67b_badSink(v4);
}

//----- (00000000004283FD) ----------------------------------------------------
int goodG2B_149()
{
  return CWE190_Integer_Overflow__int64_t_rand_square_67b_goodG2BSink(2LL);
}

//----- (000000000042842B) ----------------------------------------------------
int goodB2G_134()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_square_67b_goodB2GSink(v4);
}

//----- (00000000004284F0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_67_good()
{
  goodG2B_149();
  return goodB2G_134();
}

//----- (000000000042850A) ----------------------------------------------------
__int64 __fastcall badSource_3(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (0000000000428567) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_42_bad()
{
  int v0; // eax

  v0 = badSource_3(0);
  return printIntLine(v0 + 1);
}

//----- (0000000000428598) ----------------------------------------------------
__int64 goodG2BSource_3()
{
  return 2LL;
}

//----- (00000000004285AB) ----------------------------------------------------
int goodG2B_150()
{
  int v0; // eax

  v0 = goodG2BSource_3();
  return printIntLine(v0 + 1);
}

//----- (00000000004285DC) ----------------------------------------------------
__int64 __fastcall goodB2GSource_3(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (0000000000428639) ----------------------------------------------------
int goodB2G_135()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_3(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000042867F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_42_good()
{
  goodB2G_135();
  return goodG2B_150();
}

//----- (0000000000428699) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_07_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_3 == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticFive_3;
  if ( staticFive_3 == 5 && v1 > 0 )
    result = printLongLongLine(2 * v1);
  return result;
}
// 67912C: using guessed type int staticFive_3;

//----- (00000000004286ED) ----------------------------------------------------
int goodB2G1_91()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_3 == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticFive_3;
  if ( staticFive_3 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 67912C: using guessed type int staticFive_3;

//----- (0000000000428769) ----------------------------------------------------
int goodB2G2_91()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_3 == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticFive_3;
  if ( staticFive_3 == 5 && v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 67912C: using guessed type int staticFive_3;

//----- (00000000004287D9) ----------------------------------------------------
int goodG2B1_76()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_3 == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = staticFive_3;
  if ( staticFive_3 == 5 && v1 > 0 )
    result = printLongLongLine(2 * v1);
  return result;
}
// 67912C: using guessed type int staticFive_3;

//----- (0000000000428833) ----------------------------------------------------
int goodG2B2_76()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_3 == 5 )
    v1 = 2LL;
  result = staticFive_3;
  if ( staticFive_3 == 5 && v1 > 0 )
    result = printLongLongLine(2 * v1);
  return result;
}
// 67912C: using guessed type int staticFive_3;

//----- (0000000000428881) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_07_good()
{
  goodB2G1_91();
  goodB2G2_91();
  goodG2B1_76();
  return goodG2B2_76();
}

//----- (00000000004288AF) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_12_bad()
{
  int result; // eax
  __int64 v1; // [rsp+18h] [rbp-18h]
  __int64 v2; // [rsp+20h] [rbp-10h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  else
    v1 = 2LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v3 = v1 * v1;
    result = printLongLongLine(v1 * v1);
  }
  else if ( (long double)abs64(v1) > 3037000499.9760496924 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v2 = v1 * v1;
    result = printLongLongLine(v1 * v1);
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000428969) ----------------------------------------------------
int goodB2G_136()
{
  int result; // eax
  __int64 v1; // [rsp+18h] [rbp-18h]
  __int64 v2; // [rsp+20h] [rbp-10h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v1 = 0LL;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( (long double)abs64(v1) > 3037000499.9760496924 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v3 = v1 * v1;
      result = printLongLongLine(v1 * v1);
    }
  }
  else if ( (long double)abs64(v1) > 3037000499.9760496924 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v2 = v1 * v1;
    result = printLongLongLine(v1 * v1);
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000428A63) ----------------------------------------------------
int goodG2B_151()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLongLongLine(4LL);
}

//----- (0000000000428AD7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_12_good()
{
  goodB2G_136();
  return goodG2B_151();
}

//----- (0000000000428AF1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_10_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v10 > 0 )
      result = printLongLongLine(2 * v10);
  }
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (0000000000428BD8) ----------------------------------------------------
int goodB2G1_92()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalFalse;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;

//----- (0000000000428CE7) ----------------------------------------------------
int goodB2G2_92()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalTrue;
  if ( globalTrue && v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (0000000000428DEA) ----------------------------------------------------
int goodG2B1_77()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;

//----- (0000000000428E42) ----------------------------------------------------
int goodG2B2_77()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (0000000000428E8E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_10_good()
{
  goodB2G1_92();
  goodB2G2_92();
  goodG2B1_77();
  return goodG2B2_77();
}

//----- (0000000000428EBC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_05_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( staticTrue_3 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticTrue_3;
  if ( staticTrue_3 )
  {
    v5 = v8 * v8;
    result = printIntLine(v8 * v8);
  }
  return result;
}
// 679130: using guessed type int staticTrue_3;
// 428EBC: using guessed type char buf[16];

//----- (0000000000428FC6) ----------------------------------------------------
int goodB2G1_93()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( staticTrue_3 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( staticFalse_3 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 679130: using guessed type int staticTrue_3;
// 679300: using guessed type int staticFalse_3;
// 428FC6: using guessed type char buf[16];

//----- (0000000000429103) ----------------------------------------------------
int goodB2G2_93()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( staticTrue_3 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticTrue_3;
  if ( staticTrue_3 )
  {
    if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v8 * v8;
      result = printIntLine(v8 * v8);
    }
  }
  return result;
}
// 679130: using guessed type int staticTrue_3;
// 429103: using guessed type char buf[16];

//----- (0000000000429234) ----------------------------------------------------
int goodG2B1_78()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_3 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_3;
  if ( staticTrue_3 )
    result = printIntLine(v1 * v1);
  return result;
}
// 679130: using guessed type int staticTrue_3;
// 679300: using guessed type int staticFalse_3;

//----- (0000000000429280) ----------------------------------------------------
int goodG2B2_78()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_3 )
    v1 = 2;
  result = staticTrue_3;
  if ( staticTrue_3 )
    result = printIntLine(v1 * v1);
  return result;
}
// 679130: using guessed type int staticTrue_3;

//----- (00000000004292C0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_05_good()
{
  goodB2G1_93();
  goodB2G2_93();
  goodG2B1_78();
  return goodG2B2_78();
}

//----- (00000000004292EE) ----------------------------------------------------
int __fastcall badSink_25(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042930F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_41_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return badSink_25(v7);
}
// 42930F: using guessed type char buf[16];

//----- (00000000004293F7) ----------------------------------------------------
int __fastcall goodG2BSink_25(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000429418) ----------------------------------------------------
int goodG2B_152()
{
  return goodG2BSink_25(2);
}

//----- (000000000042943A) ----------------------------------------------------
int __fastcall goodB2GSink_16(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (0000000000429482) ----------------------------------------------------
int goodB2G_137()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return goodB2GSink_16(v7);
}
// 429482: using guessed type char buf[16];

//----- (000000000042956A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_41_good()
{
  goodB2G_137();
  return goodG2B_152();
}

//----- (0000000000429584) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (00000000004295B6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (00000000004295E8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (000000000042962F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_61_bad()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_rand_add_61b_badSource();
  return printLongLongLine(v0 + 1);
}

//----- (0000000000429669) ----------------------------------------------------
int goodG2B_153()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_rand_add_61b_goodG2BSource();
  return printLongLongLine(v0 + 1);
}

//----- (00000000004296A3) ----------------------------------------------------
int goodB2G_138()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = CWE190_Integer_Overflow__int64_t_rand_add_61b_goodB2GSource();
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (00000000004296F9) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_61_good()
{
  goodG2B_153();
  return goodB2G_138();
}

//----- (0000000000429713) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_54d_badSink(a1);
}

//----- (000000000042972D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_54d_goodG2BSink(a1);
}

//----- (0000000000429747) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_54d_goodB2GSink(a1);
}

//----- (0000000000429761) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_53d_badSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (000000000042978D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_53d_goodG2BSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (00000000004297B9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_53d_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}

//----- (0000000000429801) ----------------------------------------------------
int __fastcall badSink_26(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (0000000000429826) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_multiply_44_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = badSink_26;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 429826: using guessed type char buf[16];

//----- (0000000000429917) ----------------------------------------------------
int __fastcall goodG2BSink_26(int a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000042993C) ----------------------------------------------------
int goodG2B_154()
{
  return goodG2BSink_26(2);
}

//----- (0000000000429967) ----------------------------------------------------
int __fastcall goodB2GSink_17(int a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (00000000004299A1) ----------------------------------------------------
__int64 goodB2G_139()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = goodB2GSink_17;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 4299A1: using guessed type char buf[16];

//----- (0000000000429A92) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_multiply_44_good()
{
  goodG2B_154();
  return goodB2G_139();
}

//----- (0000000000429AAC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_05_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( staticTrue_4 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticTrue_4;
  if ( staticTrue_4 )
  {
    v4 = v5 + 1;
    result = printIntLine(v5 + 1);
  }
  return result;
}
// 679134: using guessed type int staticTrue_4;

//----- (0000000000429B31) ----------------------------------------------------
int goodB2G1_94()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( staticTrue_4 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( staticFalse_4 )
    return printLine("Benign, fixed string");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}
// 679134: using guessed type int staticTrue_4;
// 679304: using guessed type int staticFalse_4;

//----- (0000000000429BD7) ----------------------------------------------------
int goodB2G2_94()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( staticTrue_4 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticTrue_4;
  if ( staticTrue_4 )
  {
    if ( v5 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v5 + 1;
      result = printIntLine(v5 + 1);
    }
  }
  return result;
}
// 679134: using guessed type int staticTrue_4;

//----- (0000000000429C71) ----------------------------------------------------
int goodG2B1_79()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_4 )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticTrue_4;
  if ( staticTrue_4 )
    result = printIntLine(v1 + 1);
  return result;
}
// 679134: using guessed type int staticTrue_4;
// 679304: using guessed type int staticFalse_4;

//----- (0000000000429CBC) ----------------------------------------------------
int goodG2B2_79()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_4 )
    v1 = 2;
  result = staticTrue_4;
  if ( staticTrue_4 )
    result = printIntLine(v1 + 1);
  return result;
}
// 679134: using guessed type int staticTrue_4;

//----- (0000000000429CFB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_05_good()
{
  goodB2G1_94();
  goodB2G2_94();
  goodG2B1_79();
  return goodG2B2_79();
}

//----- (0000000000429D29) ----------------------------------------------------
int __fastcall badSink_27(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000429D49) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_41_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return badSink_27(v4);
}

//----- (0000000000429DB1) ----------------------------------------------------
int __fastcall goodG2BSink_27(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000429DD1) ----------------------------------------------------
int goodG2B_155()
{
  return goodG2BSink_27(2);
}

//----- (0000000000429DF3) ----------------------------------------------------
int __fastcall goodB2GSink_18(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000429E28) ----------------------------------------------------
int goodB2G_140()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return goodB2GSink_18(v4);
}

//----- (0000000000429E90) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_41_good()
{
  goodB2G_140();
  return goodG2B_155();
}

//----- (0000000000429EAA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) * *(_DWORD *)(a1 + 8));
}

//----- (0000000000429ED6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) * *(_DWORD *)(a1 + 8));
}

//----- (0000000000429F02) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x80000000 || v2 < -46339 || v2 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 * v2);
  return result;
}

//----- (0000000000429F55) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_11_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]
  __int64 v2; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    v2 = v1 * v1;
    result = printLongLongLine(v1 * v1);
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000429FBC) ----------------------------------------------------
int goodB2G1_95()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042A05A) ----------------------------------------------------
int goodB2G2_95()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( (long double)abs64(v1) > 3037000499.9760496924 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printLongLongLine(v1 * v1);
    }
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042A0EC) ----------------------------------------------------
int goodG2B1_80()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (000000000042A147) ----------------------------------------------------
int goodG2B2_80()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (000000000042A196) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_11_good()
{
  goodB2G1_95();
  goodB2G2_95();
  goodG2B1_80();
  return goodG2B2_80();
}

//----- (000000000042A1C4) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_02_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  __int64 v2; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_458730, &v1);
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042A20F) ----------------------------------------------------
int goodB2G1_96()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_458730, &v1);
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042A285) ----------------------------------------------------
int goodB2G2_96()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_458730, &v1);
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042A2FB) ----------------------------------------------------
int goodG2B1_81()
{
  return printLongLongLine(4LL);
}

//----- (000000000042A32E) ----------------------------------------------------
int goodG2B2_81()
{
  return printLongLongLine(4LL);
}

//----- (000000000042A361) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_02_good()
{
  goodB2G1_96();
  goodB2G2_96();
  goodG2B1_81();
  return goodG2B2_81();
}

//----- (000000000042A38F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_53_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_square_53b_badSink(v7);
}
// 42A38F: using guessed type char buf[16];

//----- (000000000042A477) ----------------------------------------------------
int goodG2B_156()
{
  return CWE190_Integer_Overflow__int_connect_socket_square_53b_goodG2BSink(2);
}

//----- (000000000042A499) ----------------------------------------------------
int goodB2G_141()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_square_53b_goodB2GSink(v7);
}
// 42A499: using guessed type char buf[16];

//----- (000000000042A581) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_53_good()
{
  goodG2B_156();
  return goodB2G_141();
}

//----- (000000000042A59B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_68_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_square_68_badData = v7;
  return CWE190_Integer_Overflow__int_connect_socket_square_68b_badSink();
}
// 67945C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_68_badData;
// 42A59B: using guessed type char buf[16];

//----- (000000000042A68C) ----------------------------------------------------
int goodG2B_157()
{
  CWE190_Integer_Overflow__int_connect_socket_square_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_connect_socket_square_68b_goodG2BSink();
}
// 679454: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_68_goodG2BData;

//----- (000000000042A6B7) ----------------------------------------------------
int goodB2G_142()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_square_68_goodB2GData = v7;
  return CWE190_Integer_Overflow__int_connect_socket_square_68b_goodB2GSink();
}
// 679458: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_68_goodB2GData;
// 42A6B7: using guessed type char buf[16];

//----- (000000000042A7A8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_68_good()
{
  goodG2B_157();
  return goodB2G_142();
}

//----- (000000000042A7C2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_15_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 > 0 )
    LODWORD(v4) = printLongLongLine(2 * v4);
  return v4;
}

//----- (000000000042A893) ----------------------------------------------------
int goodB2G1_97()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 > 0 )
  {
    if ( v4 > 4611686018427387902LL )
      LODWORD(v4) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v4) = printLongLongLine(2 * v4);
  }
  return v4;
}

//----- (000000000042A980) ----------------------------------------------------
int goodB2G2_97()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 > 0 )
  {
    if ( v4 > 4611686018427387902LL )
      LODWORD(v4) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v4) = printLongLongLine(2 * v4);
  }
  return v4;
}

//----- (000000000042AA6D) ----------------------------------------------------
int goodG2B1_82()
{
  return printLongLongLine(4LL);
}

//----- (000000000042AAA7) ----------------------------------------------------
int goodG2B2_82()
{
  return printLongLongLine(4LL);
}

//----- (000000000042AAE1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_15_good()
{
  goodB2G1_97();
  goodB2G2_97();
  goodG2B1_82();
  return goodG2B2_82();
}

//----- (000000000042AB0F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_14_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive == 5 && v8 > 0 )
  {
    v5 = 2 * v8;
    result = printIntLine(2 * v8);
  }
  return result;
}
// 679168: using guessed type int globalFive;
// 42AB0F: using guessed type char buf[16];

//----- (000000000042AC1F) ----------------------------------------------------
int goodB2G1_98()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 679168: using guessed type int globalFive;
// 42AC1F: using guessed type char buf[16];

//----- (000000000042AD50) ----------------------------------------------------
int goodB2G2_98()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive == 5 && v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 679168: using guessed type int globalFive;
// 42AD50: using guessed type char buf[16];

//----- (000000000042AE75) ----------------------------------------------------
int goodG2B1_83()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000042AEC7) ----------------------------------------------------
int goodG2B2_83()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000042AF0D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_14_good()
{
  goodB2G1_98();
  goodB2G2_98();
  goodG2B1_83();
  return goodG2B2_83();
}

//----- (000000000042AF3B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_64_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_add_64b_badSink(&v5);
}
// 42AF3B: using guessed type char buf[16];

//----- (000000000042B025) ----------------------------------------------------
int goodG2B_158()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_connect_socket_add_64b_goodG2BSink(&v1);
}

//----- (000000000042B049) ----------------------------------------------------
int goodB2G_143()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_add_64b_goodB2GSink(&v5);
}
// 42B049: using guessed type char buf[16];

//----- (000000000042B133) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_64_good()
{
  goodG2B_158();
  return goodB2G_143();
}

//----- (000000000042B14D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_53d_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000042B16D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000042B18D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000042B1C2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_32_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+2Ch] [rbp-24h]
  int v8; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v10; // [rsp+38h] [rbp-18h]
  int *v11; // [rsp+40h] [rbp-10h]
  int v12; // [rsp+4Ch] [rbp-4h]

  v11 = &v5;
  v10 = &v5;
  v5 = 0;
  v12 = 0;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v11 = v12;
  result = *v10;
  v7 = *v10;
  if ( v7 > 0 )
  {
    v6 = 2 * v7;
    result = printIntLine(2 * v7);
  }
  return result;
}
// 42B1C2: using guessed type char buf[16];

//----- (000000000042B2E3) ----------------------------------------------------
int goodG2B_159()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+Ch] [rbp-14h]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v1;
  v3 = &v1;
  v2 = 2;
  v1 = 2;
  return printIntLine(4u);
}

//----- (000000000042B33E) ----------------------------------------------------
int goodB2G_144()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+2Ch] [rbp-24h]
  int v8; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v10; // [rsp+38h] [rbp-18h]
  int *v11; // [rsp+40h] [rbp-10h]
  int v12; // [rsp+4Ch] [rbp-4h]

  v11 = &v5;
  v10 = &v5;
  v5 = 0;
  v12 = 0;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v11 = v12;
  result = *v10;
  v7 = *v10;
  if ( v7 > 0 )
  {
    if ( v7 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v6 = 2 * v7;
      result = printIntLine(2 * v7);
    }
  }
  return result;
}
// 42B33E: using guessed type char buf[16];

//----- (000000000042B474) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_32_good()
{
  goodG2B_159();
  return goodB2G_144();
}

//----- (000000000042B48E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_10_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]
  __int64 v2; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    v2 = v1 * v1;
    result = printLongLongLine(v1 * v1);
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 679164: using guessed type int globalTrue;

//----- (000000000042B4ED) ----------------------------------------------------
int goodB2G1_99()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;

//----- (000000000042B583) ----------------------------------------------------
int goodB2G2_99()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( (long double)abs64(v1) > 3037000499.9760496924 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printLongLongLine(v1 * v1);
    }
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 679164: using guessed type int globalTrue;

//----- (000000000042B60D) ----------------------------------------------------
int goodG2B1_84()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;

//----- (000000000042B660) ----------------------------------------------------
int goodG2B2_84()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (000000000042B6A7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_10_good()
{
  goodB2G1_99();
  goodB2G2_99();
  goodG2B1_84();
  return goodG2B2_84();
}

//----- (000000000042B6D5) ----------------------------------------------------
__int64 staticReturnsTrue_1()
{
  return 1LL;
}

//----- (000000000042B6E0) ----------------------------------------------------
__int64 staticReturnsFalse_1()
{
  return 0LL;
}

//----- (000000000042B6EB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_08_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticReturnsTrue_1();
  if ( result )
  {
    if ( v10 > 0 )
      result = printLongLongLine(2 * v10);
  }
  return result;
}

//----- (000000000042B7DA) ----------------------------------------------------
int goodB2G1_100()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticReturnsFalse_1();
  if ( result )
    return printLine("Benign, fixed string");
  if ( v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}

//----- (000000000042B8F1) ----------------------------------------------------
int goodB2G2_100()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticReturnsTrue_1();
  if ( result && v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}

//----- (000000000042B9FC) ----------------------------------------------------
int goodG2B1_85()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsFalse_1() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticReturnsTrue_1();
  if ( result )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}

//----- (000000000042BA5C) ----------------------------------------------------
int goodG2B2_85()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_1() )
    v1 = 2LL;
  result = staticReturnsTrue_1();
  if ( result )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}

//----- (000000000042BAB0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_08_good()
{
  goodB2G1_100();
  goodB2G2_100();
  goodG2B1_85();
  return goodG2B2_85();
}

//----- (000000000042BADE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_63_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_square_63b_badSink(&v1);
}

//----- (000000000042BB0A) ----------------------------------------------------
int goodG2B_160()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_square_63b_goodG2BSink(&v1);
}

//----- (000000000042BB30) ----------------------------------------------------
int goodB2G_145()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_square_63b_goodB2GSink(&v1);
}

//----- (000000000042BB5C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_63_good()
{
  goodG2B_160();
  return goodB2G_145();
}

//----- (000000000042BB76) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_square_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_connect_socket_square_22_badGlobal )
    result = printIntLine(a1 * a1);
  return result;
}
// 6791C8: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_22_badGlobal;

//----- (000000000042BBA1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_connect_socket_square_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 * a1);
}
// 6791CC: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_22_goodB2G1Global;

//----- (000000000042BBFF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_square_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_connect_socket_square_22_goodB2G2Global )
  {
    if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 * a1);
  }
  return result;
}
// 6791D0: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_22_goodB2G2Global;

//----- (000000000042BC51) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_square_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_connect_socket_square_22_goodG2BGlobal )
    result = printIntLine(a1 * a1);
  return result;
}
// 6791D4: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_22_goodG2BGlobal;

//----- (000000000042BC7C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_54d_badSink(a1);
}

//----- (000000000042BC96) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_54d_goodG2BSink(a1);
}

//----- (000000000042BCB0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_54d_goodB2GSink(a1);
}

//----- (000000000042BCCA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_67b_badSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000042BCF5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_67b_goodG2BSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
    result = printIntLine(2 * a1);
  return result;
}

//----- (000000000042BD20) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_67b_goodB2GSink(int a1)
{
  int result; // eax

  result = a1;
  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}

//----- (000000000042BD60) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_11_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    v5 = v8 * v8;
    result = printIntLine(v8 * v8);
  }
  return result;
}
// 42BD60: using guessed type char buf[16];

//----- (000000000042BE72) ----------------------------------------------------
int goodB2G1_101()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 42BE72: using guessed type char buf[16];

//----- (000000000042BFB7) ----------------------------------------------------
int goodB2G2_101()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v8 * v8;
      result = printIntLine(v8 * v8);
    }
  }
  return result;
}
// 42BFB7: using guessed type char buf[16];

//----- (000000000042C0F0) ----------------------------------------------------
int goodG2B1_86()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000042C144) ----------------------------------------------------
int goodG2B2_86()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (000000000042C18C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_11_good()
{
  goodB2G1_101();
  goodB2G2_101();
  goodG2B1_86();
  return goodG2B2_86();
}

//----- (000000000042C1BA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54e_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042C1DB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000042C1FC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000042C244) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_01_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  __int64 v2; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C28F) ----------------------------------------------------
int goodG2B_161()
{
  return printLongLongLine(4LL);
}

//----- (000000000042C2C2) ----------------------------------------------------
int goodB2G_146()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C338) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_01_good()
{
  goodG2B_161();
  return goodB2G_146();
}

//----- (000000000042C352) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_13_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v10 * v10);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042C436) ----------------------------------------------------
int goodB2G1_102()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+18h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v10) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 * v10);
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042C555) ----------------------------------------------------
int goodB2G2_102()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+18h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( (long double)abs64(v10) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 * v10);
  }
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042C668) ----------------------------------------------------
int goodG2B1_87()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042C6BD) ----------------------------------------------------
int goodG2B2_87()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042C706) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_13_good()
{
  goodB2G1_102();
  goodB2G2_102();
  goodG2B1_87();
  return goodG2B2_87();
}

//----- (000000000042C734) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_18_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  __int64 v2; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_458B40, &v1);
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C781) ----------------------------------------------------
int goodB2G_147()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_458B40, &v1);
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C7F9) ----------------------------------------------------
int goodG2B_162()
{
  return printLongLongLine(4LL);
}

//----- (000000000042C82E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_18_good()
{
  goodB2G_147();
  return goodG2B_162();
}

//----- (000000000042C848) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_54c_badSink(a1);
}

//----- (000000000042C862) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_54c_goodG2BSink(a1);
}

//----- (000000000042C87C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_54c_goodB2GSink(a1);
}

//----- (000000000042C896) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_53c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_add_53d_badSink(a1);
}

//----- (000000000042C8B0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_53c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_add_53d_goodG2BSink(a1);
}

//----- (000000000042C8CA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_53c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_add_53d_goodB2GSink(a1);
}

//----- (000000000042C8E4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_31_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v7 = v10;
  result = v10;
  v6 = v10;
  if ( v10 > 0 )
  {
    v5 = 2 * v6;
    result = printIntLine(2 * v6);
  }
  return result;
}
// 42C8E4: using guessed type char buf[16];

//----- (000000000042C9E6) ----------------------------------------------------
int goodG2B_163()
{
  return printIntLine(4u);
}

//----- (000000000042CA22) ----------------------------------------------------
int goodB2G_148()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v7 = v10;
  result = v10;
  v6 = v10;
  if ( v10 > 0 )
  {
    if ( v6 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v6;
      result = printIntLine(2 * v6);
    }
  }
  return result;
}
// 42CA22: using guessed type char buf[16];

//----- (000000000042CB39) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_31_good()
{
  goodG2B_163();
  return goodB2G_148();
}

//----- (000000000042CB53) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54e_badSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000042CB7A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54e_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000042CBA1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54e_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (000000000042CBF7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54e_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000042CC17) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (000000000042CC37) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000042CC6C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_66_bad()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE190_Integer_Overflow__int_fgets_add_66b_badSink((__int64)&v4);
}

//----- (000000000042CCDC) ----------------------------------------------------
int goodG2B_164()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_fgets_add_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000042CD06) ----------------------------------------------------
int goodB2G_149()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE190_Integer_Overflow__int_fgets_add_66b_goodB2GSink((__int64)&v4);
}

//----- (000000000042CD76) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_66_good()
{
  goodG2B_164();
  return goodB2G_149();
}

//----- (000000000042CD90) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_53c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_add_53d_badSink(a1);
}

//----- (000000000042CDA7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_53c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_add_53d_goodG2BSink(a1);
}

//----- (000000000042CDBE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_53c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_add_53d_goodB2GSink(a1);
}

//----- (000000000042CDD5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_68_bad()
{
  CWE190_Integer_Overflow__int64_t_max_square_68_badData = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_square_68b_badSink();
}
// 679460: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_square_68_badData;

//----- (000000000042CE0A) ----------------------------------------------------
int goodG2B_165()
{
  CWE190_Integer_Overflow__int64_t_max_square_68_goodG2BData = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_square_68b_goodG2BSink();
}
// 679470: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_square_68_goodG2BData;

//----- (000000000042CE39) ----------------------------------------------------
int goodB2G_150()
{
  CWE190_Integer_Overflow__int64_t_max_square_68_goodB2GData = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_square_68b_goodB2GSink();
}
// 679468: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_square_68_goodB2GData;

//----- (000000000042CE6E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_68_good()
{
  goodG2B_165();
  return goodB2G_150();
}

//----- (000000000042CE88) ----------------------------------------------------
__int64 staticReturnsTrue_2()
{
  return 1LL;
}

//----- (000000000042CE93) ----------------------------------------------------
__int64 staticReturnsFalse_2()
{
  return 0LL;
}

//----- (000000000042CE9E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_08_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]
  __int64 v2; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_2() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticReturnsTrue_2();
  if ( result )
  {
    v2 = v1 * v1;
    result = printLongLongLine(v1 * v1);
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042CF05) ----------------------------------------------------
int goodB2G1_103()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_2() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( (unsigned int)staticReturnsFalse_2() )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042CFA3) ----------------------------------------------------
int goodB2G2_103()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_2() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticReturnsTrue_2();
  if ( result )
  {
    if ( (long double)abs64(v1) > 3037000499.9760496924 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printLongLongLine(v1 * v1);
    }
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042D035) ----------------------------------------------------
int goodG2B1_88()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsFalse_2() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticReturnsTrue_2();
  if ( result )
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (000000000042D090) ----------------------------------------------------
int goodG2B2_88()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_2() )
    v1 = 2LL;
  result = staticReturnsTrue_2();
  if ( result )
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (000000000042D0DF) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_08_good()
{
  goodB2G1_103();
  goodB2G2_103();
  goodG2B1_88();
  return goodG2B2_88();
}

//----- (000000000042D10D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_67_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE190_Integer_Overflow__int_connect_socket_multiply_67b_badSink(v8);
}
// 42D10D: using guessed type char buf[16];

//----- (000000000042D1FB) ----------------------------------------------------
int goodG2B_166()
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_67b_goodG2BSink(2);
}

//----- (000000000042D223) ----------------------------------------------------
int goodB2G_151()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE190_Integer_Overflow__int_connect_socket_multiply_67b_goodB2GSink(v8);
}
// 42D223: using guessed type char buf[16];

//----- (000000000042D311) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_67_good()
{
  goodG2B_166();
  return goodB2G_151();
}

//----- (000000000042D32B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_65_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_add_65b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000042D360) ----------------------------------------------------
int goodG2B_167()
{
  return CWE190_Integer_Overflow__int64_t_max_add_65b_goodG2BSink(2LL);
}

//----- (000000000042D38F) ----------------------------------------------------
int goodB2G_152()
{
  return CWE190_Integer_Overflow__int64_t_max_add_65b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000042D3C4) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_65_good()
{
  goodG2B_167();
  return goodB2G_152();
}

//----- (000000000042D3DE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_03_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 * v4);
}

//----- (000000000042D4A8) ----------------------------------------------------
int goodB2G1_104()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( (long double)abs64(v4) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 * v4);
  return result;
}

//----- (000000000042D5A1) ----------------------------------------------------
int goodB2G2_104()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( (long double)abs64(v4) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 * v4);
  return result;
}

//----- (000000000042D69A) ----------------------------------------------------
int goodG2B1_89()
{
  return printLongLongLine(4LL);
}

//----- (000000000042D6CD) ----------------------------------------------------
int goodG2B2_89()
{
  return printLongLongLine(4LL);
}

//----- (000000000042D700) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_03_good()
{
  goodB2G1_104();
  goodB2G2_104();
  goodG2B1_89();
  return goodG2B2_89();
}

//----- (000000000042D72E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_17_bad()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    result = -1;
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  }
  for ( j = 0; j <= 0; ++j )
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (000000000042D78D) ----------------------------------------------------
int goodB2G_153()
{
  int result; // eax
  __int64 v1; // [rsp+20h] [rbp-10h]
  int j; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    result = -1;
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( (long double)abs64(v1) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 * v1);
  }
  return result;
}

//----- (000000000042D81B) ----------------------------------------------------
int goodG2B_168()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    v1 = 2LL;
  for ( j = 0; j <= 0; ++j )
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (000000000042D874) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_17_good()
{
  goodB2G_153();
  return goodG2B_168();
}

//----- (000000000042D88E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_34_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v10;
  v7 = v10;
  v6 = v10 * v10;
  return printIntLine(v10 * v10);
}
// 42D88E: using guessed type char buf[16];

//----- (000000000042D98C) ----------------------------------------------------
int goodG2B_169()
{
  return printIntLine(4u);
}

//----- (000000000042D9C4) ----------------------------------------------------
int goodB2G_154()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v10;
  v7 = v10;
  if ( v10 == 0x80000000 || v7 < -46339 || v7 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v6 = v7 * v7;
  return printIntLine(v7 * v7);
}
// 42D9C4: using guessed type char buf[16];

//----- (000000000042DAE9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_34_good()
{
  goodG2B_169();
  return goodB2G_154();
}

//----- (000000000042DB03) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_17_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-18h]
  __int64 v2; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%ld", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = v1 * v1;
    result = printLongLongLine(v1 * v1);
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042DB74) ----------------------------------------------------
int goodB2G_155()
{
  int result; // eax
  __int64 v1; // [rsp+18h] [rbp-18h]
  __int64 v2; // [rsp+20h] [rbp-10h]
  int j; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%ld", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( (long double)abs64(v1) > 3037000499.9760496924 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printLongLongLine(v1 * v1);
    }
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042DC10) ----------------------------------------------------
int goodG2B_170()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    v1 = 2LL;
  for ( j = 0; j <= 0; ++j )
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (000000000042DC69) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_17_good()
{
  goodB2G_155();
  return goodG2B_170();
}

//----- (000000000042DC83) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_multiply_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_connect_socket_multiply_22_badGlobal )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 679308: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_22_badGlobal;

//----- (000000000042DCB2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodB2G1Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodB2G1Global;
  if ( CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 67930C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodB2G1Global;

//----- (000000000042DD02) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodB2G2Global && a1 > 0 )
  {
    if ( a1 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * a1);
  }
  return result;
}
// 679310: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodB2G2Global;

//----- (000000000042DD46) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodG2BGlobal )
  {
    if ( a1 > 0 )
      result = printIntLine(2 * a1);
  }
  return result;
}
// 679314: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodG2BGlobal;

//----- (000000000042DD75) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_63_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_multiply_63b_badSink(&v1);
}

//----- (000000000042DDA1) ----------------------------------------------------
int goodG2B_171()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_multiply_63b_goodG2BSink(&v1);
}

//----- (000000000042DDC7) ----------------------------------------------------
int goodB2G_156()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_multiply_63b_goodB2GSink(&v1);
}

//----- (000000000042DDF3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_63_good()
{
  goodG2B_171();
  return goodB2G_156();
}

//----- (000000000042DE0D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_18_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 * v4);
}

//----- (000000000042DED9) ----------------------------------------------------
int goodB2G_157()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( (long double)abs64(v4) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 * v4);
  return result;
}

//----- (000000000042DFD4) ----------------------------------------------------
int goodG2B_172()
{
  return printLongLongLine(4LL);
}

//----- (000000000042E009) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_18_good()
{
  goodB2G_157();
  return goodG2B_172();
}

//----- (000000000042E023) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_04_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  result = 1;
  if ( v8 > 0 )
  {
    v5 = 2 * v8;
    result = printIntLine(2 * v8);
  }
  return result;
}
// 42E023: using guessed type char buf[16];

//----- (000000000042E12F) ----------------------------------------------------
int goodB2G1_105()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  result = 0;
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 42E12F: using guessed type char buf[16];

//----- (000000000042E25C) ----------------------------------------------------
int goodB2G2_105()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  result = 1;
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 42E25C: using guessed type char buf[16];

//----- (000000000042E37D) ----------------------------------------------------
int goodG2B1_90()
{
  return printIntLine(4u);
}

//----- (000000000042E3CB) ----------------------------------------------------
int goodG2B2_90()
{
  return printIntLine(4u);
}

//----- (000000000042E40D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_04_good()
{
  goodB2G1_105();
  goodB2G2_105();
  goodG2B1_90();
  return goodG2B2_90();
}

//----- (000000000042E43B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_15_bad()
{
  return printLongLongLine(-2LL);
}

//----- (000000000042E47B) ----------------------------------------------------
int goodB2G1_106()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042E4D7) ----------------------------------------------------
int goodB2G2_106()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042E533) ----------------------------------------------------
int goodG2B1_91()
{
  return printLongLongLine(4LL);
}

//----- (000000000042E56D) ----------------------------------------------------
int goodG2B2_91()
{
  return printLongLongLine(4LL);
}

//----- (000000000042E5A7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_15_good()
{
  goodB2G1_106();
  goodB2G2_106();
  goodG2B1_91();
  return goodG2B2_91();
}

//----- (000000000042E5D5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_66_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE190_Integer_Overflow__int_connect_socket_multiply_66b_badSink((__int64)&v5);
}
// 42E5D5: using guessed type char buf[16];

//----- (000000000042E6C5) ----------------------------------------------------
int goodG2B_173()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_connect_socket_multiply_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000042E6EF) ----------------------------------------------------
int goodB2G_158()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE190_Integer_Overflow__int_connect_socket_multiply_66b_goodB2GSink((__int64)&v5);
}
// 42E6EF: using guessed type char buf[16];

//----- (000000000042E7DF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_66_good()
{
  goodG2B_173();
  return goodB2G_158();
}

//----- (000000000042E7F9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_01_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 42E7F9: using guessed type char buf[16];

//----- (000000000042E8EB) ----------------------------------------------------
int goodG2B_174()
{
  return printIntLine(4u);
}

//----- (000000000042E917) ----------------------------------------------------
int goodB2G_159()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 42E917: using guessed type char buf[16];

//----- (000000000042EA30) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_01_good()
{
  goodG2B_174();
  return goodB2G_159();
}

//----- (000000000042EA4A) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_max_square_61b_badSource()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (000000000042EA66) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_max_square_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000042EA7C) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_max_square_61b_goodB2GSource()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (000000000042EA98) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_51_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_add_51b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000042EAC4) ----------------------------------------------------
int goodG2B_175()
{
  return CWE190_Integer_Overflow__int64_t_max_add_51b_goodG2BSink(2LL);
}

//----- (000000000042EAEA) ----------------------------------------------------
int goodB2G_160()
{
  return CWE190_Integer_Overflow__int64_t_max_add_51b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000042EB16) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_51_good()
{
  goodG2B_175();
  return goodB2G_160();
}

//----- (000000000042EB30) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_12_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+28h] [rbp-18h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  else
  {
    v10 = 2LL;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printLongLongLine(v10 * v10);
  if ( (long double)abs64(v10) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 * v10);
}

//----- (000000000042EC6E) ----------------------------------------------------
int goodB2G_161()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // rbx
  __int64 v10; // rbx
  __int64 v11; // rbx
  __int64 v12; // rbx
  __int64 v13; // rax
  __int64 v14; // rbx
  __int64 v15; // rbx
  __int64 v16; // rbx
  __int64 v17; // rbx
  int result; // eax
  __int64 v19; // [rsp+28h] [rbp-18h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v19 = v4;
  }
  else
  {
    if ( rand() & 1 )
    {
      v9 = (__int64)rand() << 60;
      v10 = ((__int64)rand() << 45) ^ v9;
      v11 = ((__int64)rand() << 30) ^ v10;
      v12 = ((__int64)rand() << 15) ^ v11;
      v13 = v12 ^ rand();
    }
    else
    {
      v14 = (__int64)rand() << 60;
      v15 = ((__int64)rand() << 45) ^ v14;
      v16 = ((__int64)rand() << 30) ^ v15;
      v17 = ((__int64)rand() << 15) ^ v16;
      v13 = ~(v17 ^ rand());
    }
    v19 = v13;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( (long double)abs64(v19) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v19 * v19);
  }
  else if ( (long double)abs64(v19) > 3037000499.9760496924 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printLongLongLine(v19 * v19);
  }
  return result;
}

//----- (000000000042EE6F) ----------------------------------------------------
int goodG2B_176()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLongLongLine(4LL);
}

//----- (000000000042EEE3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_12_good()
{
  goodB2G_161();
  return goodG2B_176();
}

//----- (000000000042EEFD) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_32_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+18h] [rbp-28h]
  __int64 *v12; // [rsp+20h] [rbp-20h]
  __int64 *v13; // [rsp+28h] [rbp-18h]

  v13 = &v10;
  v12 = &v10;
  v10 = 0LL;
  v11 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v11 = v4;
  *v13 = v4;
  return printLongLongLine(*v12 * *v12);
}

//----- (000000000042EFF8) ----------------------------------------------------
int goodG2B_177()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 *v5; // [rsp+20h] [rbp-10h]
  __int64 *v6; // [rsp+28h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2LL;
  v1 = 2LL;
  v3 = 2LL;
  v2 = 4LL;
  return printLongLongLine(4LL);
}

//----- (000000000042F05C) ----------------------------------------------------
int goodB2G_162()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+10h] [rbp-40h]
  __int64 v11; // [rsp+18h] [rbp-38h]
  __int64 v12; // [rsp+20h] [rbp-30h]
  __int64 v13; // [rsp+28h] [rbp-28h]
  __int64 *v14; // [rsp+30h] [rbp-20h]
  __int64 *v15; // [rsp+38h] [rbp-18h]

  v15 = &v10;
  v14 = &v10;
  v10 = 0LL;
  v13 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v13 = v4;
  *v15 = v4;
  v12 = *v14;
  if ( (long double)abs64(v12) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v11 = v12 * v12;
  return printLongLongLine(v12 * v12);
}

//----- (000000000042F186) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_32_good()
{
  goodG2B_177();
  return goodB2G_162();
}

//----- (000000000042F1A0) ----------------------------------------------------
__int64 badSource_4()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (000000000042F1BC) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_42_bad()
{
  __int64 v0; // rax

  v0 = badSource_4();
  if ( v0 > 0 )
    LODWORD(v0) = printLongLongLine(2 * v0);
  return v0;
}

//----- (000000000042F1FC) ----------------------------------------------------
__int64 goodG2BSource_4()
{
  return 2LL;
}

//----- (000000000042F212) ----------------------------------------------------
int goodG2B_178()
{
  __int64 v0; // rax

  v0 = goodG2BSource_4();
  if ( v0 > 0 )
    LODWORD(v0) = printLongLongLine(2 * v0);
  return v0;
}

//----- (000000000042F252) ----------------------------------------------------
__int64 goodB2GSource_4()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (000000000042F26E) ----------------------------------------------------
int goodB2G_163()
{
  __int64 v0; // rax

  v0 = goodB2GSource_4();
  if ( v0 > 0 )
  {
    if ( v0 > 4611686018427387902LL )
      LODWORD(v0) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v0) = printLongLongLine(2 * v0);
  }
  return v0;
}

//----- (000000000042F2CA) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_42_good()
{
  goodB2G_163();
  return goodG2B_178();
}

//----- (000000000042F2E4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_61_bad()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_connect_socket_add_61b_badSource(0);
  return printIntLine(v0 + 1);
}

//----- (000000000042F315) ----------------------------------------------------
int goodG2B_179()
{
  int v0; // eax

  v0 = CWE190_Integer_Overflow__int_connect_socket_add_61b_goodG2BSource();
  return printIntLine(v0 + 1);
}

//----- (000000000042F346) ----------------------------------------------------
int goodB2G_164()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE190_Integer_Overflow__int_connect_socket_add_61b_goodB2GSource(0);
  if ( v1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000042F38C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_61_good()
{
  goodG2B_179();
  return goodB2G_164();
}

//----- (000000000042F3A6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_22_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_multiply_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_connect_socket_multiply_22_badSink(v7);
}
// 679308: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_22_badGlobal;
// 42F3A6: using guessed type char buf[16];

//----- (000000000042F498) ----------------------------------------------------
int goodB2G1_107()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodB2G1Sink(v7);
}
// 67930C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodB2G1Global;
// 42F498: using guessed type char buf[16];

//----- (000000000042F58A) ----------------------------------------------------
int goodB2G2_107()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodB2G2Sink(v7);
}
// 679310: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodB2G2Global;
// 42F58A: using guessed type char buf[16];

//----- (000000000042F67C) ----------------------------------------------------
int goodG2B_180()
{
  CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodG2BSink(2);
}
// 679314: using guessed type int CWE190_Integer_Overflow__int_connect_socket_multiply_22_goodG2BGlobal;

//----- (000000000042F6A8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_22_good()
{
  goodB2G1_107();
  goodB2G2_107();
  return goodG2B_180();
}

//----- (000000000042F6CC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_53b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_add_53c_badSink(a1);
}

//----- (000000000042F6E6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_53b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_add_53c_goodG2BSink(a1);
}

//----- (000000000042F700) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_53b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_add_53c_goodB2GSink(a1);
}

//----- (000000000042F71A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_52c_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000042F740) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_52c_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000042F766) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_52c_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000042F7A8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000042F7D2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000042F7FC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (000000000042F83B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_53c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_53d_badSink(a1);
}

//----- (000000000042F855) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_53c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_53d_goodG2BSink(a1);
}

//----- (000000000042F86F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_53c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_53d_goodB2GSink(a1);
}

//----- (000000000042F889) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54d_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_54e_badSink(a1);
}

//----- (000000000042F8A0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54d_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_54e_goodG2BSink(a1);
}

//----- (000000000042F8B7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_54d_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_54e_goodB2GSink(a1);
}

//----- (000000000042F8CE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_61_bad()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_max_square_61b_badSource();
  return printLongLongLine(v0 * v0);
}

//----- (000000000042F909) ----------------------------------------------------
int goodG2B_181()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_max_square_61b_goodG2BSource();
  return printLongLongLine(v0 * v0);
}

//----- (000000000042F944) ----------------------------------------------------
int goodB2G_165()
{
  int result; // eax
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = CWE190_Integer_Overflow__int64_t_max_square_61b_goodB2GSource();
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (000000000042F9AE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_61_good()
{
  goodG2B_181();
  return goodB2G_165();
}

//----- (000000000042F9C8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_54_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_4591B0, &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_square_54b_badSink(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042FA03) ----------------------------------------------------
int goodG2B_182()
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_54b_goodG2BSink(2LL);
}

//----- (000000000042FA29) ----------------------------------------------------
int goodB2G_166()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_4591B0, &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_square_54b_goodB2GSink(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042FA64) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_54_good()
{
  goodG2B_182();
  return goodB2G_166();
}

//----- (000000000042FA7E) ----------------------------------------------------
__int64 badSource_5()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (000000000042FB2F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_42_bad()
{
  __int64 v0; // rax

  v0 = badSource_5();
  return printLongLongLine(v0 + 1);
}

//----- (000000000042FB69) ----------------------------------------------------
__int64 goodG2BSource_5()
{
  return 2LL;
}

//----- (000000000042FB7F) ----------------------------------------------------
int goodG2B_183()
{
  __int64 v0; // rax

  v0 = goodG2BSource_5();
  return printLongLongLine(v0 + 1);
}

//----- (000000000042FBB9) ----------------------------------------------------
__int64 goodB2GSource_5()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (000000000042FC6A) ----------------------------------------------------
int goodB2G_167()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = goodB2GSource_5();
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000042FCC0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_42_good()
{
  goodB2G_167();
  return goodG2B_183();
}

//----- (000000000042FCDA) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_11_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v10 * v10);
  return result;
}

//----- (000000000042FDC4) ----------------------------------------------------
int goodB2G1_108()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+18h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v10) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 * v10);
}

//----- (000000000042FEE9) ----------------------------------------------------
int goodB2G2_108()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+18h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( (long double)abs64(v10) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 * v10);
  }
  return result;
}

//----- (0000000000430002) ----------------------------------------------------
int goodG2B1_92()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (000000000043005D) ----------------------------------------------------
int goodG2B2_92()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (00000000004300AC) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_11_good()
{
  goodB2G1_108();
  goodB2G2_108();
  goodG2B1_92();
  return goodG2B2_92();
}

//----- (00000000004300DA) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_02_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 * v4);
}

//----- (00000000004301A4) ----------------------------------------------------
int goodB2G1_109()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( (long double)abs64(v4) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 * v4);
  return result;
}

//----- (000000000043029D) ----------------------------------------------------
int goodB2G2_109()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( (long double)abs64(v4) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 * v4);
  return result;
}

//----- (0000000000430396) ----------------------------------------------------
int goodG2B1_93()
{
  return printLongLongLine(4LL);
}

//----- (00000000004303C9) ----------------------------------------------------
int goodG2B2_93()
{
  return printLongLongLine(4LL);
}

//----- (00000000004303FC) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_02_good()
{
  goodB2G1_109();
  goodB2G2_109();
  goodG2B1_93();
  return goodG2B2_93();
}

//----- (000000000043042A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_05_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticTrue_5;
  if ( staticTrue_5 )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}
// 679138: using guessed type int staticTrue_5;

//----- (000000000043047C) ----------------------------------------------------
int goodB2G1_110()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticFalse_5;
  if ( staticFalse_5 )
    return printLine("Benign, fixed string");
  if ( v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 679138: using guessed type int staticTrue_5;
// 679318: using guessed type int staticFalse_5;

//----- (00000000004304F6) ----------------------------------------------------
int goodB2G2_110()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticTrue_5;
  if ( staticTrue_5 )
  {
    if ( v1 > 0 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 679138: using guessed type int staticTrue_5;

//----- (0000000000430564) ----------------------------------------------------
int goodG2B1_94()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFalse_5 )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticTrue_5;
  if ( staticTrue_5 )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}
// 679138: using guessed type int staticTrue_5;
// 679318: using guessed type int staticFalse_5;

//----- (00000000004305BC) ----------------------------------------------------
int goodG2B2_94()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_5 )
    v1 = 2LL;
  result = staticTrue_5;
  if ( staticTrue_5 )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}
// 679138: using guessed type int staticTrue_5;

//----- (0000000000430608) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_05_good()
{
  goodB2G1_110();
  goodB2G2_110();
  goodG2B1_94();
  return goodG2B2_94();
}

//----- (0000000000430636) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_add_65_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE190_Integer_Overflow__int_fgets_add_65b_badSink;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (00000000004306A7) ----------------------------------------------------
int goodG2B_184()
{
  return CWE190_Integer_Overflow__int_fgets_add_65b_goodG2BSink(2);
}

//----- (00000000004306D2) ----------------------------------------------------
__int64 goodB2G_168()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE190_Integer_Overflow__int_fgets_add_65b_goodB2GSink;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (0000000000430743) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_fgets_add_65_good()
{
  goodG2B_184();
  return goodB2G_168();
}

//----- (000000000043075D) ----------------------------------------------------
int __fastcall badSink_28(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (0000000000430789) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_41_bad()
{
  return badSink_28(0x7FFFFFFFFFFFFFFFLL);
}

//----- (00000000004307B5) ----------------------------------------------------
int __fastcall goodG2BSink_28(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (00000000004307E1) ----------------------------------------------------
int goodG2B_185()
{
  return goodG2BSink_28(2LL);
}

//----- (0000000000430807) ----------------------------------------------------
int __fastcall goodB2GSink_19(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}

//----- (000000000043084F) ----------------------------------------------------
int goodB2G_169()
{
  return goodB2GSink_19(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000043087B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_41_good()
{
  goodB2G_169();
  return goodG2B_185();
}

//----- (0000000000430895) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_65_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))CWE190_Integer_Overflow__int64_t_rand_multiply_65b_badSink)(v4);
}

//----- (000000000043095B) ----------------------------------------------------
int goodG2B_186()
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_65b_goodG2BSink(2LL);
}

//----- (000000000043098A) ----------------------------------------------------
__int64 goodB2G_170()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))CWE190_Integer_Overflow__int64_t_rand_multiply_65b_goodB2GSink)(v4);
}

//----- (0000000000430A50) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_65_good()
{
  goodG2B_186();
  return goodB2G_170();
}

//----- (0000000000430A6A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_13_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v8 > 0 )
  {
    v5 = 2 * v8;
    result = printIntLine(2 * v8);
  }
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;
// 430A6A: using guessed type char buf[16];

//----- (0000000000430B7A) ----------------------------------------------------
int goodB2G1_111()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;
// 430B7A: using guessed type char buf[16];

//----- (0000000000430CAB) ----------------------------------------------------
int goodB2G2_111()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;
// 430CAB: using guessed type char buf[16];

//----- (0000000000430DD0) ----------------------------------------------------
int goodG2B1_95()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000430E22) ----------------------------------------------------
int goodG2B2_95()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 && v1 > 0 )
    result = printIntLine(2 * v1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000430E68) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_13_good()
{
  goodB2G1_111();
  goodB2G2_111();
  goodG2B1_95();
  return goodG2B2_95();
}

//----- (0000000000430E96) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_07_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_4 == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticFive_4;
  if ( staticFive_4 == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 67913C: using guessed type int staticFive_4;

//----- (0000000000430EE5) ----------------------------------------------------
int goodB2G1_112()
{
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_4 == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( staticFive_4 != 5 )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 * v1);
}
// 67913C: using guessed type int staticFive_4;

//----- (0000000000430F6F) ----------------------------------------------------
int goodB2G2_112()
{
  int result; // eax
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_4 == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticFive_4;
  if ( staticFive_4 == 5 )
  {
    if ( (long double)abs64(v1) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 * v1);
  }
  return result;
}
// 67913C: using guessed type int staticFive_4;

//----- (0000000000430FED) ----------------------------------------------------
int goodG2B1_96()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_4 == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = staticFive_4;
  if ( staticFive_4 == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 67913C: using guessed type int staticFive_4;

//----- (0000000000431042) ----------------------------------------------------
int goodG2B2_96()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_4 == 5 )
    v1 = 2LL;
  result = staticFive_4;
  if ( staticFive_4 == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 67913C: using guessed type int staticFive_4;

//----- (000000000043108B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_07_good()
{
  goodB2G1_112();
  goodB2G2_112();
  goodG2B1_96();
  return goodG2B2_96();
}

//----- (00000000004310B9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_52c_badSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (00000000004310E0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_52c_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (0000000000431107) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_52c_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (000000000043115D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_10_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v10 * v10);
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (000000000043123F) ----------------------------------------------------
int goodB2G1_113()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+18h] [rbp-18h]

  v10 = 0LL;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v10) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 * v10);
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;

//----- (000000000043135C) ----------------------------------------------------
int goodB2G2_113()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+18h] [rbp-18h]

  v10 = 0LL;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( (long double)abs64(v10) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 * v10);
  }
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (000000000043146D) ----------------------------------------------------
int goodG2B1_97()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;

//----- (00000000004314C0) ----------------------------------------------------
int goodG2B2_97()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (0000000000431507) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_10_good()
{
  goodB2G1_113();
  goodB2G2_113();
  goodG2B1_97();
  return goodG2B2_97();
}

//----- (0000000000431535) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_53_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_add_53b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000431561) ----------------------------------------------------
int goodG2B_187()
{
  return CWE190_Integer_Overflow__int64_t_max_add_53b_goodG2BSink(2LL);
}

//----- (0000000000431587) ----------------------------------------------------
int goodB2G_171()
{
  return CWE190_Integer_Overflow__int64_t_max_add_53b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (00000000004315B3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_53_good()
{
  goodG2B_187();
  return goodB2G_171();
}

//----- (00000000004315CD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_65b_badSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (00000000004315F4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_65b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000043161B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_65b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (0000000000431671) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_square_54d_badSink(a1);
}

//----- (000000000043168B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_square_54d_goodG2BSink(a1);
}

//----- (00000000004316A5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_square_54d_goodB2GSink(a1);
}

//----- (00000000004316BF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_66b_badSink(__int64 a1)
{
  __int64 v1; // rax
  __int64 v3; // [rsp+18h] [rbp-8h]

  v1 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 16);
  if ( v3 > 0 )
    LODWORD(v1) = printLongLongLine(2 * v3);
  return v1;
}

//----- (00000000004316F7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_66b_goodG2BSink(__int64 a1)
{
  __int64 v1; // rax
  __int64 v3; // [rsp+18h] [rbp-8h]

  v1 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 16);
  if ( v3 > 0 )
    LODWORD(v1) = printLongLongLine(2 * v3);
  return v1;
}

//----- (000000000043172F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_66b_goodB2GSink(__int64 a1)
{
  __int64 v1; // rax
  __int64 v3; // [rsp+18h] [rbp-8h]

  v1 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 16);
  if ( v3 > 0 )
  {
    if ( v3 > 4611686018427387902LL )
      LODWORD(v1) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v1) = printLongLongLine(2 * v3);
  }
  return v1;
}

//----- (0000000000431783) ----------------------------------------------------
int badSink_29()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_multiply_45_badData;
  if ( CWE190_Integer_Overflow__int64_t_max_multiply_45_badData > 0 )
    result = printLongLongLine(2 * CWE190_Integer_Overflow__int64_t_max_multiply_45_badData);
  return result;
}
// 679320: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_multiply_45_badData;

//----- (00000000004317B6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_45_bad()
{
  CWE190_Integer_Overflow__int64_t_max_multiply_45_badData = 0x7FFFFFFFFFFFFFFFLL;
  return badSink_29();
}
// 679320: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_multiply_45_badData;

//----- (00000000004317EB) ----------------------------------------------------
int goodG2BSink_29()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_multiply_45_goodG2BData;
  if ( CWE190_Integer_Overflow__int64_t_max_multiply_45_goodG2BData > 0 )
    result = printLongLongLine(2 * CWE190_Integer_Overflow__int64_t_max_multiply_45_goodG2BData);
  return result;
}
// 679328: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_multiply_45_goodG2BData;

//----- (000000000043181E) ----------------------------------------------------
int goodG2B_188()
{
  CWE190_Integer_Overflow__int64_t_max_multiply_45_goodG2BData = 2LL;
  return goodG2BSink_29();
}
// 679328: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_multiply_45_goodG2BData;

//----- (000000000043184D) ----------------------------------------------------
int goodB2GSink_20()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_multiply_45_goodB2GData;
  if ( CWE190_Integer_Overflow__int64_t_max_multiply_45_goodB2GData > 0 )
  {
    if ( CWE190_Integer_Overflow__int64_t_max_multiply_45_goodB2GData > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * CWE190_Integer_Overflow__int64_t_max_multiply_45_goodB2GData);
  }
  return result;
}
// 679330: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_multiply_45_goodB2GData;

//----- (000000000043189C) ----------------------------------------------------
int goodB2G_172()
{
  CWE190_Integer_Overflow__int64_t_max_multiply_45_goodB2GData = 0x7FFFFFFFFFFFFFFFLL;
  return goodB2GSink_20();
}
// 679330: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_multiply_45_goodB2GData;

//----- (00000000004318D1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_45_good()
{
  goodG2B_188();
  return goodB2G_172();
}

//----- (00000000004318EB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_05_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticTrue_6 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticTrue_6;
  if ( staticTrue_6 )
    result = printLongLongLine(v10 + 1);
  return result;
}
// 679140: using guessed type int staticTrue_6;

//----- (00000000004319CC) ----------------------------------------------------
int goodB2G1_114()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticTrue_6 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( staticFalse_6 )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}
// 679140: using guessed type int staticTrue_6;
// 679338: using guessed type int staticFalse_6;

//----- (0000000000431AD5) ----------------------------------------------------
int goodB2G2_114()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticTrue_6 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticTrue_6;
  if ( staticTrue_6 )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}
// 679140: using guessed type int staticTrue_6;

//----- (0000000000431BD2) ----------------------------------------------------
int goodG2B1_98()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFalse_6 )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticTrue_6;
  if ( staticTrue_6 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679140: using guessed type int staticTrue_6;
// 679338: using guessed type int staticFalse_6;

//----- (0000000000431C24) ----------------------------------------------------
int goodG2B2_98()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_6 )
    v1 = 2LL;
  result = staticTrue_6;
  if ( staticTrue_6 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679140: using guessed type int staticTrue_6;

//----- (0000000000431C6A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_05_good()
{
  goodB2G1_114();
  goodB2G2_114();
  goodG2B1_98();
  return goodG2B2_98();
}

//----- (0000000000431C98) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_01_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 * v4);
}

//----- (0000000000431D62) ----------------------------------------------------
int goodG2B_189()
{
  return printLongLongLine(4LL);
}

//----- (0000000000431D95) ----------------------------------------------------
int goodB2G_173()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( (long double)abs64(v4) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 * v4);
  return result;
}

//----- (0000000000431E8E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_01_good()
{
  goodG2B_189();
  return goodB2G_173();
}

//----- (0000000000431EA8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_68b_badSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_multiply_68_badData;
  if ( CWE190_Integer_Overflow__int64_t_rand_multiply_68_badData > 0 )
    result = printLongLongLine(2 * CWE190_Integer_Overflow__int64_t_rand_multiply_68_badData);
  return result;
}
// 679478: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_multiply_68_badData;

//----- (0000000000431EDB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_68b_goodG2BSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_multiply_68_goodG2BData;
  if ( CWE190_Integer_Overflow__int64_t_rand_multiply_68_goodG2BData > 0 )
    result = printLongLongLine(2 * CWE190_Integer_Overflow__int64_t_rand_multiply_68_goodG2BData);
  return result;
}
// 679488: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_multiply_68_goodG2BData;

//----- (0000000000431F0E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_68b_goodB2GSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_rand_multiply_68_goodB2GData;
  if ( CWE190_Integer_Overflow__int64_t_rand_multiply_68_goodB2GData > 0 )
  {
    if ( CWE190_Integer_Overflow__int64_t_rand_multiply_68_goodB2GData > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * CWE190_Integer_Overflow__int64_t_rand_multiply_68_goodB2GData);
  }
  return result;
}
// 679480: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_multiply_68_goodB2GData;

//----- (0000000000431F5D) ----------------------------------------------------
int __fastcall badSink_30(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000431F83) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_41_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return badSink_30(v4);
}

//----- (0000000000432040) ----------------------------------------------------
int __fastcall goodG2BSink_30(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000432066) ----------------------------------------------------
int goodG2B_190()
{
  return goodG2BSink_30(2LL);
}

//----- (000000000043208C) ----------------------------------------------------
int __fastcall goodB2GSink_21(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (00000000004320CE) ----------------------------------------------------
int goodB2G_174()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return goodB2GSink_21(v4);
}

//----- (000000000043218B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_41_good()
{
  goodB2G_174();
  return goodG2B_190();
}

//----- (00000000004321A5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_53d_badSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (00000000004321CC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_53d_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (00000000004321F3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_53d_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (0000000000432249) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54e_badSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (0000000000432275) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54e_goodG2BSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (00000000004322A1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_54e_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}

//----- (00000000004322E9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_53c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_53d_badSink(a1);
}

//----- (0000000000432303) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_53c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_53d_goodG2BSink(a1);
}

//----- (000000000043231D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_53c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_53d_goodB2GSink(a1);
}

//----- (0000000000432337) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_03_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v6 = result;
      if ( result != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 > 0 )
  {
    v5 = 2 * v8;
    result = printIntLine(2 * v8);
  }
  return result;
}
// 432337: using guessed type char buf[16];

//----- (000000000043242D) ----------------------------------------------------
int goodB2G1_115()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v6 = result;
      if ( result != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 43242D: using guessed type char buf[16];

//----- (0000000000432538) ----------------------------------------------------
int goodB2G2_115()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v6 = result;
      if ( result != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 432538: using guessed type char buf[16];

//----- (0000000000432643) ----------------------------------------------------
int goodG2B1_99()
{
  return printIntLine(4u);
}

//----- (0000000000432673) ----------------------------------------------------
int goodG2B2_99()
{
  return printIntLine(4u);
}

//----- (00000000004326A3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_03_good()
{
  goodB2G1_115();
  goodB2G2_115();
  goodG2B1_99();
  return goodG2B2_99();
}

//----- (00000000004326D1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_34_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (00000000004327AA) ----------------------------------------------------
int goodG2B_191()
{
  return printLongLongLine(3LL);
}

//----- (00000000004327EC) ----------------------------------------------------
int goodB2G_175()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (00000000004328E1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_34_good()
{
  goodG2B_191();
  return goodB2G_175();
}

//----- (00000000004328FB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_18_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v6 = result;
      if ( result != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 > 0 )
  {
    v5 = 2 * v8;
    result = printIntLine(2 * v8);
  }
  return result;
}
// 4328FB: using guessed type char buf[16];

//----- (00000000004329F3) ----------------------------------------------------
int goodB2G_176()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v6 = result;
      if ( result != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 4329F3: using guessed type char buf[16];

//----- (0000000000432B00) ----------------------------------------------------
int goodG2B_192()
{
  return printIntLine(4u);
}

//----- (0000000000432B32) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_18_good()
{
  goodB2G_176();
  return goodG2B_192();
}

//----- (0000000000432B4C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_66b_badSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) + 1LL);
}

//----- (0000000000432B7E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_66b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) + 1LL);
}

//----- (0000000000432BB0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+18h] [rbp-8h]

  v2 = *(_QWORD *)(a1 + 16);
  if ( v2 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 + 1);
  return result;
}

//----- (0000000000432BFE) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_14_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    v5 = v8 * v8;
    result = printIntLine(v8 * v8);
  }
  return result;
}
// 679168: using guessed type int globalFive;
// 432BFE: using guessed type char buf[16];

//----- (0000000000432D0A) ----------------------------------------------------
int goodB2G1_116()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 679168: using guessed type int globalFive;
// 432D0A: using guessed type char buf[16];

//----- (0000000000432E49) ----------------------------------------------------
int goodB2G2_116()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v8 * v8;
      result = printIntLine(v8 * v8);
    }
  }
  return result;
}
// 679168: using guessed type int globalFive;
// 432E49: using guessed type char buf[16];

//----- (0000000000432F7C) ----------------------------------------------------
int goodG2B1_100()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (0000000000432FCA) ----------------------------------------------------
int goodG2B2_100()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 * v1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000043300C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_14_good()
{
  goodB2G1_116();
  goodB2G2_116();
  goodG2B1_100();
  return goodG2B2_100();
}

//----- (000000000043303A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54e_badSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (0000000000433066) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54e_goodG2BSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (0000000000433092) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54e_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}

//----- (00000000004330DA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_32_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v8; // [rsp+38h] [rbp-18h]
  int *v9; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v9 = &v5;
  v8 = &v5;
  v5 = 0;
  v10 = 0;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v9 = v10;
  return printIntLine(*v8 * *v8);
}
// 4330DA: using guessed type char buf[16];

//----- (00000000004331F7) ----------------------------------------------------
int goodG2B_193()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 2;
  v2 = 4;
  return printIntLine(4u);
}

//----- (000000000043324E) ----------------------------------------------------
int goodB2G_177()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+2Ch] [rbp-24h]
  int v8; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v10; // [rsp+38h] [rbp-18h]
  int *v11; // [rsp+40h] [rbp-10h]
  int v12; // [rsp+4Ch] [rbp-4h]

  v11 = &v5;
  v10 = &v5;
  v5 = 0;
  v12 = 0;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v11 = v12;
  v7 = *v10;
  if ( v7 == 0x80000000 || v7 < -46339 || v7 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v6 = v7 * v7;
  return printIntLine(v7 * v7);
}
// 43324E: using guessed type char buf[16];

//----- (0000000000433392) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_32_good()
{
  goodG2B_193();
  return goodB2G_177();
}

//----- (00000000004333AC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_52c_badSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (00000000004333D8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_52c_goodG2BSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (0000000000433404) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_52c_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}

//----- (000000000043344C) ----------------------------------------------------
__int64 staticReturnsTrue_3()
{
  return 1LL;
}

//----- (0000000000433457) ----------------------------------------------------
__int64 staticReturnsFalse_3()
{
  return 0LL;
}

//----- (0000000000433462) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_08_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)staticReturnsTrue_3() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticReturnsTrue_3();
  if ( result )
    result = printLongLongLine(v10 * v10);
  return result;
}

//----- (000000000043354C) ----------------------------------------------------
int goodB2G1_117()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+18h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)staticReturnsTrue_3() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( (unsigned int)staticReturnsFalse_3() )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v10) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 * v10);
}

//----- (0000000000433671) ----------------------------------------------------
int goodB2G2_117()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+18h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)staticReturnsTrue_3() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticReturnsTrue_3();
  if ( result )
  {
    if ( (long double)abs64(v10) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 * v10);
  }
  return result;
}

//----- (000000000043378A) ----------------------------------------------------
int goodG2B1_101()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsFalse_3() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticReturnsTrue_3();
  if ( result )
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (00000000004337E5) ----------------------------------------------------
int goodG2B2_101()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_3() )
    v1 = 2LL;
  result = staticReturnsTrue_3();
  if ( result )
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (0000000000433834) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_08_good()
{
  goodB2G1_117();
  goodB2G2_117();
  goodG2B1_101();
  return goodG2B2_101();
}

//----- (0000000000433862) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_68_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_multiply_68_badData = v4;
  return CWE190_Integer_Overflow__int64_t_rand_multiply_68b_badSink();
}
// 679478: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_multiply_68_badData;

//----- (0000000000433928) ----------------------------------------------------
int goodG2B_194()
{
  CWE190_Integer_Overflow__int64_t_rand_multiply_68_goodG2BData = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_multiply_68b_goodG2BSink();
}
// 679488: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_multiply_68_goodG2BData;

//----- (0000000000433957) ----------------------------------------------------
int goodB2G_178()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_multiply_68_goodB2GData = v4;
  return CWE190_Integer_Overflow__int64_t_rand_multiply_68b_goodB2GSink();
}
// 679480: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_multiply_68_goodB2GData;

//----- (0000000000433A1D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_68_good()
{
  goodG2B_194();
  return goodB2G_178();
}

//----- (0000000000433A37) ----------------------------------------------------
void CWE190_Integer_Overflow__int_connect_socket_add_17_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  in_addr_t v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+28h] [rbp-18h]
  int v5; // [rsp+2Ch] [rbp-14h]
  int fd; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = inet_addr("127.0.0.1");
      v2 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    v4 = v7 + 1;
    printIntLine(v7 + 1);
  }
}
// 433A37: using guessed type char buf[16];

//----- (0000000000433B55) ----------------------------------------------------
void goodB2G_179()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  in_addr_t v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+28h] [rbp-18h]
  int v5; // [rsp+2Ch] [rbp-14h]
  int fd; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = inet_addr("127.0.0.1");
      v2 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v7 == 0x7FFFFFFF )
    {
      printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v7 + 1;
      printIntLine(v7 + 1);
    }
  }
}
// 433B55: using guessed type char buf[16];

//----- (0000000000433C88) ----------------------------------------------------
int goodG2B_195()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000433CD9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_17_good()
{
  goodB2G_179();
  return goodG2B_195();
}

//----- (0000000000433CF3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_12_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    v9 = 2;
  }
  result = globalReturnsTrueOrFalse();
  if ( result )
  {
    if ( v9 > 0 )
    {
      v6 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  else if ( v9 > 0 )
  {
    if ( v9 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v9;
      result = printIntLine(2 * v9);
    }
  }
  return result;
}
// 433CF3: using guessed type char buf[16];

//----- (0000000000433E43) ----------------------------------------------------
int goodB2G_180()
{
  int result; // eax
  char nptr[16]; // [rsp+0h] [rbp-60h]
  struct sockaddr addr; // [rsp+10h] [rbp-50h]
  char buf[16]; // [rsp+20h] [rbp-40h]
  __int16 s; // [rsp+30h] [rbp-30h]
  uint16_t v5; // [rsp+32h] [rbp-2Eh]
  in_addr_t v6; // [rsp+34h] [rbp-2Ch]
  int v7; // [rsp+44h] [rbp-1Ch]
  int v8; // [rsp+48h] [rbp-18h]
  int v9; // [rsp+4Ch] [rbp-14h]
  int v10; // [rsp+50h] [rbp-10h]
  int v11; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v6 = inet_addr("127.0.0.1");
      v5 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v11 = recv(fd, buf, 0xDuLL, 0);
        if ( v11 != -1 )
        {
          if ( v11 )
          {
            buf[v11] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    v10 = socket(2, 1, 6);
    if ( v10 != -1 )
    {
      memset(&addr, 0, 0x10uLL);
      addr.sa_family = 2;
      *(_DWORD *)&addr.sa_data[2] = inet_addr("127.0.0.1");
      *(_WORD *)addr.sa_data = htons(0x6987u);
      if ( connect(v10, &addr, 0x10u) != -1 )
      {
        v9 = recv(v10, nptr, 0xDuLL, 0);
        if ( v9 != -1 )
        {
          if ( v9 )
          {
            nptr[v9] = 0;
            v13 = atoi(nptr);
          }
        }
      }
    }
    if ( v10 != -1 )
      close(v10);
  }
  result = globalReturnsTrueOrFalse();
  if ( result )
  {
    if ( v13 > 0 )
    {
      if ( v13 > 1073741822 )
      {
        result = printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v8 = 2 * v13;
        result = printIntLine(2 * v13);
      }
    }
  }
  else if ( v13 > 0 )
  {
    if ( v13 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v7 = 2 * v13;
      result = printIntLine(2 * v13);
    }
  }
  return result;
}
// 433E43: using guessed type char buf[16];
// 433E43: using guessed type char nptr[16];

//----- (0000000000434074) ----------------------------------------------------
int goodG2B_196()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(4u);
}

//----- (00000000004340E3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_12_good()
{
  goodB2G_180();
  return goodG2B_196();
}

//----- (00000000004340FD) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_11_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v10 + 1);
  return result;
}

//----- (00000000004341E6) ----------------------------------------------------
int goodB2G1_118()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}

//----- (00000000004342F7) ----------------------------------------------------
int goodB2G2_118()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}

//----- (00000000004343FC) ----------------------------------------------------
int goodG2B1_102()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000434456) ----------------------------------------------------
int goodG2B2_102()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (00000000004344A4) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_11_good()
{
  goodB2G1_118();
  goodB2G2_118();
  goodG2B1_102();
  return goodG2B2_102();
}

//----- (00000000004344D2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_67b_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (00000000004344F9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000434520) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000043456E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_07_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticFive_5 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticFive_5;
  if ( staticFive_5 == 5 )
    result = printLongLongLine(v10 + 1);
  return result;
}
// 679144: using guessed type int staticFive_5;

//----- (0000000000434651) ----------------------------------------------------
int goodB2G1_119()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticFive_5 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( staticFive_5 != 5 )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}
// 679144: using guessed type int staticFive_5;

//----- (000000000043475C) ----------------------------------------------------
int goodB2G2_119()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticFive_5 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticFive_5;
  if ( staticFive_5 == 5 )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}
// 679144: using guessed type int staticFive_5;

//----- (000000000043485B) ----------------------------------------------------
int goodG2B1_103()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_5 == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = staticFive_5;
  if ( staticFive_5 == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679144: using guessed type int staticFive_5;

//----- (00000000004348AF) ----------------------------------------------------
int goodG2B2_103()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_5 == 5 )
    v1 = 2LL;
  result = staticFive_5;
  if ( staticFive_5 == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679144: using guessed type int staticFive_5;

//----- (00000000004348F7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_07_good()
{
  goodB2G1_119();
  goodB2G2_119();
  goodG2B1_103();
  return goodG2B2_103();
}

//----- (0000000000434925) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_52c_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000434945) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000434965) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000043499A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_02_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (0000000000434A63) ----------------------------------------------------
int goodB2G1_120()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000434B48) ----------------------------------------------------
int goodB2G2_120()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (0000000000434C2D) ----------------------------------------------------
int goodG2B1_104()
{
  return printLongLongLine(3LL);
}

//----- (0000000000434C5F) ----------------------------------------------------
int goodG2B2_104()
{
  return printLongLongLine(3LL);
}

//----- (0000000000434C91) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_02_good()
{
  goodB2G1_120();
  goodB2G2_120();
  goodG2B1_104();
  return goodG2B2_104();
}

//----- (0000000000434CBF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_03_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (0000000000434D30) ----------------------------------------------------
int goodB2G1_121()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (0000000000434DB6) ----------------------------------------------------
int goodB2G2_121()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (0000000000434E3C) ----------------------------------------------------
int goodG2B1_105()
{
  return printIntLine(3u);
}

//----- (0000000000434E67) ----------------------------------------------------
int goodG2B2_105()
{
  return printIntLine(3u);
}

//----- (0000000000434E92) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_03_good()
{
  goodB2G1_121();
  goodB2G2_121();
  goodG2B1_105();
  return goodG2B2_105();
}

//----- (0000000000434EC0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_01_bad()
{
  return printLongLongLine(-2LL);
}

//----- (0000000000434EFE) ----------------------------------------------------
int goodG2B_197()
{
  return printLongLongLine(4LL);
}

//----- (0000000000434F36) ----------------------------------------------------
int goodB2G_181()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000434F90) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_01_good()
{
  goodG2B_197();
  return goodB2G_181();
}

//----- (0000000000434FAA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_53d_badSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (0000000000434FD6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_53d_goodG2BSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (0000000000435002) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_53d_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}

//----- (000000000043504A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_63_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_square_63b_badSink(&v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000435085) ----------------------------------------------------
int goodG2B_198()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_fscanf_square_63b_goodG2BSink(&v1);
}

//----- (00000000004350AB) ----------------------------------------------------
int goodB2G_182()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE190_Integer_Overflow__int64_t_fscanf_square_63b_goodB2GSink(&v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004350E6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_63_good()
{
  goodG2B_198();
  return goodB2G_182();
}

//----- (0000000000435100) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_07_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_6 == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticFive_6;
  if ( staticFive_6 == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679148: using guessed type int staticFive_6;

//----- (000000000043514E) ----------------------------------------------------
int goodB2G1_122()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_6 == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( staticFive_6 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 679148: using guessed type int staticFive_6;

//----- (00000000004351C4) ----------------------------------------------------
int goodB2G2_122()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_6 == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticFive_6;
  if ( staticFive_6 == 5 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 679148: using guessed type int staticFive_6;

//----- (000000000043522E) ----------------------------------------------------
int goodG2B1_106()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_6 == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = staticFive_6;
  if ( staticFive_6 == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679148: using guessed type int staticFive_6;

//----- (0000000000435282) ----------------------------------------------------
int goodG2B2_106()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_6 == 5 )
    v1 = 2LL;
  result = staticFive_6;
  if ( staticFive_6 == 5 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679148: using guessed type int staticFive_6;

//----- (00000000004352CA) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_07_good()
{
  goodB2G1_122();
  goodB2G2_122();
  goodG2B1_106();
  return goodG2B2_106();
}

//----- (00000000004352F8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54d_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_square_54e_badSink(a1);
}

//----- (0000000000435312) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54d_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_square_54e_goodG2BSink(a1);
}

//----- (000000000043532C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_54d_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_square_54e_goodB2GSink(a1);
}

//----- (0000000000435346) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_10_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v10 + 1);
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (0000000000435427) ----------------------------------------------------
int goodB2G1_123()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;

//----- (0000000000435530) ----------------------------------------------------
int goodB2G2_123()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (000000000043562D) ----------------------------------------------------
int goodG2B1_107()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;

//----- (000000000043567F) ----------------------------------------------------
int goodG2B2_107()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (00000000004356C5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_10_good()
{
  goodB2G1_123();
  goodB2G2_123();
  goodG2B1_107();
  return goodG2B2_107();
}

//----- (00000000004356F3) ----------------------------------------------------
int __fastcall badSink_31(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (000000000043571F) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_44_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))badSink_31)(v4);
}

//----- (00000000004357E5) ----------------------------------------------------
int __fastcall goodG2BSink_31(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (0000000000435811) ----------------------------------------------------
int goodG2B_199()
{
  return goodG2BSink_31(2LL);
}

//----- (0000000000435840) ----------------------------------------------------
int __fastcall goodB2GSink_22(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}

//----- (0000000000435888) ----------------------------------------------------
__int64 goodB2G_183()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))goodB2GSink_22)(v4);
}

//----- (000000000043594E) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_44_good()
{
  goodG2B_199();
  return goodB2G_183();
}

//----- (0000000000435968) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_68b_badSink()
{
  return printIntLine(
           CWE190_Integer_Overflow__int_connect_socket_square_68_badData
         * CWE190_Integer_Overflow__int_connect_socket_square_68_badData);
}
// 67945C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_68_badData;

//----- (000000000043598F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_68b_goodG2BSink()
{
  return printIntLine(
           CWE190_Integer_Overflow__int_connect_socket_square_68_goodG2BData
         * CWE190_Integer_Overflow__int_connect_socket_square_68_goodG2BData);
}
// 679454: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_68_goodG2BData;

//----- (00000000004359B6) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_connect_socket_square_68_goodB2GData == 0x80000000
    || CWE190_Integer_Overflow__int_connect_socket_square_68_goodB2GData < -46339
    || CWE190_Integer_Overflow__int_connect_socket_square_68_goodB2GData > 46339 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(
               CWE190_Integer_Overflow__int_connect_socket_square_68_goodB2GData
             * CWE190_Integer_Overflow__int_connect_socket_square_68_goodB2GData);
  }
  return result;
}
// 679458: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_68_goodB2GData;

//----- (0000000000435A04) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_add_54d_badSink(a1);
}

//----- (0000000000435A1E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_add_54d_goodG2BSink(a1);
}

//----- (0000000000435A38) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_add_54d_goodB2GSink(a1);
}

//----- (0000000000435A52) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_12_bad()
{
  __int64 v1; // [rsp+28h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  else
    v1 = 2LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printLongLongLine(v1 * v1);
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 * v1);
}

//----- (0000000000435AFB) ----------------------------------------------------
int goodB2G_184()
{
  int result; // eax

  globalReturnsTrueOrFalse();
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( (long double)abs64(0x7FFFFFFFFFFFFFFFLL) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(1LL);
  }
  else if ( (long double)abs64(0x7FFFFFFFFFFFFFFFLL) > 3037000499.9760496924 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printLongLongLine(1LL);
  }
  return result;
}

//----- (0000000000435BD9) ----------------------------------------------------
int goodG2B_200()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLongLongLine(4LL);
}

//----- (0000000000435C4D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_12_good()
{
  goodB2G_184();
  return goodG2B_200();
}

//----- (0000000000435C67) ----------------------------------------------------
int badSink_32()
{
  return printLongLongLine(
           CWE190_Integer_Overflow__int64_t_fscanf_square_45_badData
         * CWE190_Integer_Overflow__int64_t_fscanf_square_45_badData);
}
// 679340: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_square_45_badData;

//----- (0000000000435C95) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_45_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_459D70, &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_square_45_badData = v1;
  return badSink_32();
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 679340: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_square_45_badData;

//----- (0000000000435CD9) ----------------------------------------------------
int goodG2BSink_32()
{
  return printLongLongLine(
           CWE190_Integer_Overflow__int64_t_fscanf_square_45_goodG2BData
         * CWE190_Integer_Overflow__int64_t_fscanf_square_45_goodG2BData);
}
// 679348: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_square_45_goodG2BData;

//----- (0000000000435D07) ----------------------------------------------------
int goodG2B_201()
{
  CWE190_Integer_Overflow__int64_t_fscanf_square_45_goodG2BData = 2LL;
  return goodG2BSink_32();
}
// 679348: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_square_45_goodG2BData;

//----- (0000000000435D36) ----------------------------------------------------
int goodB2GSink_23()
{
  int result; // eax

  if ( (long double)abs64(CWE190_Integer_Overflow__int64_t_fscanf_square_45_goodB2GData) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(
               CWE190_Integer_Overflow__int64_t_fscanf_square_45_goodB2GData
             * CWE190_Integer_Overflow__int64_t_fscanf_square_45_goodB2GData);
  return result;
}
// 679350: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_square_45_goodB2GData;

//----- (0000000000435D93) ----------------------------------------------------
int goodB2G_185()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_459D70, &v1);
  CWE190_Integer_Overflow__int64_t_fscanf_square_45_goodB2GData = v1;
  return goodB2GSink_23();
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 679350: using guessed type __int64 CWE190_Integer_Overflow__int64_t_fscanf_square_45_goodB2GData;

//----- (0000000000435DD7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_45_good()
{
  goodG2B_201();
  return goodB2G_185();
}

//----- (0000000000435DF1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_06_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  result = 5;
  if ( v8 > 0 )
  {
    v5 = 2 * v8;
    result = printIntLine(2 * v8);
  }
  return result;
}
// 435DF1: using guessed type char buf[16];

//----- (0000000000435EFF) ----------------------------------------------------
int goodB2G1_124()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  result = 5;
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 435EFF: using guessed type char buf[16];

//----- (000000000043602E) ----------------------------------------------------
int goodB2G2_124()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  result = 5;
  if ( v8 > 0 )
  {
    if ( v8 > 1073741822 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = 2 * v8;
      result = printIntLine(2 * v8);
    }
  }
  return result;
}
// 43602E: using guessed type char buf[16];

//----- (0000000000436151) ----------------------------------------------------
int goodG2B1_108()
{
  return printIntLine(4u);
}

//----- (00000000004361A1) ----------------------------------------------------
int goodG2B2_108()
{
  return printIntLine(4u);
}

//----- (00000000004361E5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_06_good()
{
  goodB2G1_124();
  goodB2G2_124();
  goodG2B1_108();
  return goodG2B2_108();
}

//----- (0000000000436213) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_52b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_52c_badSink(a1);
}

//----- (000000000043622D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_52b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_52c_goodG2BSink(a1);
}

//----- (0000000000436247) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_52b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_52c_goodB2GSink(a1);
}

//----- (0000000000436261) ----------------------------------------------------
__int64 staticReturnsTrue_4()
{
  return 1LL;
}

//----- (000000000043626C) ----------------------------------------------------
__int64 staticReturnsFalse_4()
{
  return 0LL;
}

//----- (0000000000436277) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_08_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_4() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticReturnsTrue_4();
  if ( result )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}

//----- (00000000004362D1) ----------------------------------------------------
int goodB2G1_125()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_4() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticReturnsFalse_4();
  if ( result )
    return printLine("Benign, fixed string");
  if ( v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000436353) ----------------------------------------------------
int goodB2G2_125()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_4() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticReturnsTrue_4();
  if ( result )
  {
    if ( v1 > 0 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}

//----- (00000000004363C9) ----------------------------------------------------
int goodG2B1_109()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsFalse_4() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticReturnsTrue_4();
  if ( result )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}

//----- (0000000000436429) ----------------------------------------------------
int goodG2B2_109()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_4() )
    v1 = 2LL;
  result = staticReturnsTrue_4();
  if ( result )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}

//----- (000000000043647D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_08_good()
{
  goodB2G1_125();
  goodB2G2_125();
  goodG2B1_109();
  return goodG2B2_109();
}

//----- (00000000004364AB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_31_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v7 = v10;
  v6 = v10;
  v5 = v10 + 1;
  return printIntLine(v10 + 1);
}
// 4364AB: using guessed type char buf[16];

//----- (00000000004365A8) ----------------------------------------------------
int goodG2B_202()
{
  return printIntLine(3u);
}

//----- (00000000004365DF) ----------------------------------------------------
int goodB2G_186()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v7 = v10;
  v6 = v10;
  if ( v10 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v6 + 1;
  return printIntLine(v6 + 1);
}
// 4365DF: using guessed type char buf[16];

//----- (00000000004366F1) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_31_good()
{
  goodG2B_202();
  return goodB2G_186();
}

//----- (000000000043670B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_09_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000436758) ----------------------------------------------------
int goodB2G1_126()
{
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 * v1);
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004367E0) ----------------------------------------------------
int goodB2G2_126()
{
  int result; // eax
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( (long double)abs64(v1) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 * v1);
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000043685C) ----------------------------------------------------
int goodG2B1_110()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004368AF) ----------------------------------------------------
int goodG2B2_110()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004368F6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_09_good()
{
  goodB2G1_126();
  goodB2G2_126();
  goodG2B1_110();
  return goodG2B2_110();
}

//----- (0000000000436924) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_22_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_square_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_rand_square_22_badSink(v4);
}
// 679358: using guessed type int CWE190_Integer_Overflow__int64_t_rand_square_22_badGlobal;

//----- (00000000004369EB) ----------------------------------------------------
int goodB2G1_127()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_square_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int64_t_rand_square_22_goodB2G1Sink(v4);
}
// 67935C: using guessed type int CWE190_Integer_Overflow__int64_t_rand_square_22_goodB2G1Global;

//----- (0000000000436AB2) ----------------------------------------------------
int goodB2G2_127()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_square_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int64_t_rand_square_22_goodB2G2Sink(v4);
}
// 679360: using guessed type int CWE190_Integer_Overflow__int64_t_rand_square_22_goodB2G2Global;

//----- (0000000000436B79) ----------------------------------------------------
int goodG2B_203()
{
  CWE190_Integer_Overflow__int64_t_rand_square_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_rand_square_22_goodG2BSink(2LL);
}
// 679364: using guessed type int CWE190_Integer_Overflow__int64_t_rand_square_22_goodG2BGlobal;

//----- (0000000000436BA9) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_22_good()
{
  goodB2G1_127();
  goodB2G2_127();
  return goodG2B_203();
}

//----- (0000000000436BCD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_fgets_add_68_badData + 1);
}
// 6794B0: using guessed type int CWE190_Integer_Overflow__int_fgets_add_68_badData;

//----- (0000000000436BF3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_68b_goodG2BSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_fgets_add_68_goodG2BData + 1);
}
// 6794A8: using guessed type int CWE190_Integer_Overflow__int_fgets_add_68_goodG2BData;

//----- (0000000000436C19) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_fgets_add_68_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_fgets_add_68_goodB2GData + 1);
  return result;
}
// 6794AC: using guessed type int CWE190_Integer_Overflow__int_fgets_add_68_goodB2GData;

//----- (0000000000436C54) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_65b_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000436C75) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000436C96) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (0000000000436CDE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_square_53c_badSink(a1);
}

//----- (0000000000436CF5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_square_53c_goodG2BSink(a1);
}

//----- (0000000000436D0C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_square_53c_goodB2GSink(a1);
}

//----- (0000000000436D23) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_61_bad()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_fscanf_square_61b_badSource(0LL);
  return printLongLongLine(v0 * v0);
}

//----- (0000000000436D5E) ----------------------------------------------------
int goodG2B_204()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_fscanf_square_61b_goodG2BSource();
  return printLongLongLine(v0 * v0);
}

//----- (0000000000436D99) ----------------------------------------------------
int goodB2G_187()
{
  int result; // eax
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = CWE190_Integer_Overflow__int64_t_fscanf_square_61b_goodB2GSource(0LL);
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (0000000000436E03) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_61_good()
{
  goodG2B_204();
  return goodB2G_187();
}

//----- (0000000000436E1D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_52c_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000436E3E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (0000000000436E5F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (0000000000436EA7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_13_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000436EF6) ----------------------------------------------------
int goodB2G1_128()
{
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 * v1);
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000436F80) ----------------------------------------------------
int goodB2G2_128()
{
  int result; // eax
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( (long double)abs64(v1) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 * v1);
  }
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000436FFE) ----------------------------------------------------
int goodG2B1_111()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000437053) ----------------------------------------------------
int goodG2B2_111()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2LL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043709C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_13_good()
{
  goodB2G1_128();
  goodB2G2_128();
  goodG2B1_111();
  return goodG2B2_111();
}

//----- (00000000004370CA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_14_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    v5 = v8 + 1;
    result = printIntLine(v8 + 1);
  }
  return result;
}
// 679168: using guessed type int globalFive;
// 4370CA: using guessed type char buf[16];

//----- (00000000004371D5) ----------------------------------------------------
int goodB2G1_129()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 679168: using guessed type int globalFive;
// 4371D5: using guessed type char buf[16];

//----- (0000000000437301) ----------------------------------------------------
int goodB2G2_129()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v8 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v8 + 1;
      result = printIntLine(v8 + 1);
    }
  }
  return result;
}
// 679168: using guessed type int globalFive;
// 437301: using guessed type char buf[16];

//----- (0000000000437421) ----------------------------------------------------
int goodG2B1_112()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (000000000043746E) ----------------------------------------------------
int goodG2B2_112()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (00000000004374AF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_14_good()
{
  goodB2G1_129();
  goodB2G2_129();
  goodG2B1_112();
  return goodG2B2_112();
}

//----- (00000000004374DD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_32_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v8; // [rsp+38h] [rbp-18h]
  int *v9; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v9 = &v5;
  v8 = &v5;
  v5 = 0;
  v10 = 0;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v9 = v10;
  return printIntLine(*v8 + 1);
}
// 4374DD: using guessed type char buf[16];

//----- (00000000004375F9) ----------------------------------------------------
int goodG2B_205()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2;
  v1 = 2;
  v3 = 2;
  v2 = 3;
  return printIntLine(3u);
}

//----- (000000000043764F) ----------------------------------------------------
int goodB2G_188()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+2Ch] [rbp-24h]
  int v8; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v10; // [rsp+38h] [rbp-18h]
  int *v11; // [rsp+40h] [rbp-10h]
  int v12; // [rsp+4Ch] [rbp-4h]

  v11 = &v5;
  v10 = &v5;
  v5 = 0;
  v12 = 0;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v11 = v12;
  v7 = *v10;
  if ( v7 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v6 = v7 + 1;
  return printIntLine(v7 + 1);
}
// 43764F: using guessed type char buf[16];

//----- (0000000000437780) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_32_good()
{
  goodG2B_205();
  return goodB2G_188();
}

//----- (000000000043779A) ----------------------------------------------------
__int64 staticReturnsTrue_5()
{
  return 1LL;
}

//----- (00000000004377A5) ----------------------------------------------------
__int64 staticReturnsFalse_5()
{
  return 0LL;
}

//----- (00000000004377B0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_08_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)staticReturnsTrue_5() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticReturnsTrue_5();
  if ( result )
    result = printLongLongLine(v10 + 1);
  return result;
}

//----- (0000000000437899) ----------------------------------------------------
int goodB2G1_130()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)staticReturnsTrue_5() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( (unsigned int)staticReturnsFalse_5() )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}

//----- (00000000004379AA) ----------------------------------------------------
int goodB2G2_130()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)staticReturnsTrue_5() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticReturnsTrue_5();
  if ( result )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}

//----- (0000000000437AAF) ----------------------------------------------------
int goodG2B1_113()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsFalse_5() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticReturnsTrue_5();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000437B09) ----------------------------------------------------
int goodG2B2_113()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_5() )
    v1 = 2LL;
  result = staticReturnsTrue_5();
  if ( result )
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (0000000000437B57) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_08_good()
{
  goodB2G1_130();
  goodB2G2_130();
  goodG2B1_113();
  return goodG2B2_113();
}

//----- (0000000000437B85) ----------------------------------------------------
int __fastcall badSink_33(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (0000000000437BAC) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_fscanf_square_44_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  int (__fastcall *v2)(__int64); // [rsp+8h] [rbp-8h]

  v2 = badSink_33;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return ((__int64 (__fastcall *)(__int64))v2)(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000437BF0) ----------------------------------------------------
int __fastcall goodG2BSink_33(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (0000000000437C17) ----------------------------------------------------
int goodG2B_206()
{
  return goodG2BSink_33(2LL);
}

//----- (0000000000437C46) ----------------------------------------------------
int __fastcall goodB2GSink_24(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (0000000000437C9C) ----------------------------------------------------
__int64 goodB2G_189()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  int (__fastcall *v2)(__int64); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_24;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return ((__int64 (__fastcall *)(__int64))v2)(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000437CE0) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_fscanf_square_44_good()
{
  goodG2B_206();
  return goodB2G_189();
}

//----- (0000000000437CFA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_54c_badSink(a1);
}

//----- (0000000000437D14) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_54c_goodG2BSink(a1);
}

//----- (0000000000437D2E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_54b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_54c_goodB2GSink(a1);
}

//----- (0000000000437D48) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_53b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_add_53c_badSink(a1);
}

//----- (0000000000437D5F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_53b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_add_53c_goodG2BSink(a1);
}

//----- (0000000000437D76) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_53b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_add_53c_goodB2GSink(a1);
}

//----- (0000000000437D8D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_67b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000437DB3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000437DD9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (0000000000437E14) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_64b_badSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (0000000000437E4B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_64b_goodG2BSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (0000000000437E82) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_64b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+14h] [rbp-Ch]

  result = *a1;
  v2 = *a1;
  if ( *a1 > 0 )
  {
    if ( v2 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * v2);
  }
  return result;
}

//----- (0000000000437ECE) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_61_bad()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_rand_multiply_61b_badSource();
  if ( v0 > 0 )
    LODWORD(v0) = printLongLongLine(2 * v0);
  return v0;
}

//----- (0000000000437F0E) ----------------------------------------------------
int goodG2B_207()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_rand_multiply_61b_goodG2BSource();
  if ( v0 > 0 )
    LODWORD(v0) = printLongLongLine(2 * v0);
  return v0;
}

//----- (0000000000437F4E) ----------------------------------------------------
int goodB2G_190()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_rand_multiply_61b_goodB2GSource();
  if ( v0 > 0 )
  {
    if ( v0 > 4611686018427387902LL )
      LODWORD(v0) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v0) = printLongLongLine(2 * v0);
  }
  return v0;
}

//----- (0000000000437FAA) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_61_good()
{
  goodG2B_207();
  return goodB2G_190();
}

//----- (0000000000437FC4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_67b_badSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000437FEA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 + 1);
}

//----- (0000000000438010) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 + 1);
  return result;
}

//----- (000000000043804B) ----------------------------------------------------
__int64 staticReturnsTrue_6()
{
  return 1LL;
}

//----- (0000000000438056) ----------------------------------------------------
__int64 staticReturnsFalse_6()
{
  return 0LL;
}

//----- (0000000000438061) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_08_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_6() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticReturnsTrue_6();
  if ( result )
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (00000000004380B6) ----------------------------------------------------
int goodB2G1_131()
{
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_6() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( (unsigned int)staticReturnsFalse_6() )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 * v1);
}

//----- (0000000000438146) ----------------------------------------------------
int goodB2G2_131()
{
  int result; // eax
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_6() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticReturnsTrue_6();
  if ( result )
  {
    if ( (long double)abs64(v1) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 * v1);
  }
  return result;
}

//----- (00000000004381CA) ----------------------------------------------------
int goodG2B1_114()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsFalse_6() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticReturnsTrue_6();
  if ( result )
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (0000000000438225) ----------------------------------------------------
int goodG2B2_114()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_6() )
    v1 = 2LL;
  result = staticReturnsTrue_6();
  if ( result )
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (0000000000438274) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_08_good()
{
  goodB2G1_131();
  goodB2G2_131();
  goodG2B1_114();
  return goodG2B2_114();
}

//----- (00000000004382A2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_09_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v10 + 1);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000438383) ----------------------------------------------------
int goodB2G1_132()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 + 1);
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000043848C) ----------------------------------------------------
int goodB2G2_132()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v10 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 + 1);
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000438589) ----------------------------------------------------
int goodG2B1_115()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004385DB) ----------------------------------------------------
int goodG2B2_115()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000438621) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_09_good()
{
  goodB2G1_132();
  goodB2G2_132();
  goodG2B1_115();
  return goodG2B2_115();
}

//----- (000000000043864F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_07_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticFive_7 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticFive_7;
  if ( staticFive_7 == 5 && v10 > 0 )
    result = printLongLongLine(2 * v10);
  return result;
}
// 67914C: using guessed type int staticFive_7;

//----- (0000000000438738) ----------------------------------------------------
int goodB2G1_133()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticFive_7 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticFive_7;
  if ( staticFive_7 != 5 )
    return printLine("Benign, fixed string");
  if ( v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}
// 67914C: using guessed type int staticFive_7;

//----- (0000000000438849) ----------------------------------------------------
int goodB2G2_133()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticFive_7 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticFive_7;
  if ( staticFive_7 == 5 && v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}
// 67914C: using guessed type int staticFive_7;

//----- (000000000043894E) ----------------------------------------------------
int goodG2B1_116()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_7 == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = staticFive_7;
  if ( staticFive_7 == 5 && v1 > 0 )
    result = printLongLongLine(2 * v1);
  return result;
}
// 67914C: using guessed type int staticFive_7;

//----- (00000000004389A8) ----------------------------------------------------
int goodG2B2_116()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_7 == 5 )
    v1 = 2LL;
  result = staticFive_7;
  if ( staticFive_7 == 5 && v1 > 0 )
    result = printLongLongLine(2 * v1);
  return result;
}
// 67914C: using guessed type int staticFive_7;

//----- (00000000004389F6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_07_good()
{
  goodB2G1_133();
  goodB2G2_133();
  goodG2B1_116();
  return goodG2B2_116();
}

//----- (0000000000438A24) ----------------------------------------------------
int __fastcall badSink_34(__int64 a1)
{
  int result; // eax

  result = badStatic_8;
  if ( badStatic_8 )
    result = printLongLongLine(a1 * a1);
  return result;
}
// 679368: using guessed type int badStatic_8;

//----- (0000000000438A55) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_21_bad()
{
  badStatic_8 = 1;
  return badSink_34(0x7FFFFFFFFFFFFFFFLL);
}
// 679368: using guessed type int badStatic_8;

//----- (0000000000438A8B) ----------------------------------------------------
int __fastcall goodB2G1Sink_8(__int64 a1)
{
  if ( goodB2G1Static_8 )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 * a1);
}
// 67936C: using guessed type int goodB2G1Static_8;

//----- (0000000000438AF7) ----------------------------------------------------
int goodB2G1_134()
{
  goodB2G1Static_8 = 0;
  return goodB2G1Sink_8(0x7FFFFFFFFFFFFFFFLL);
}
// 67936C: using guessed type int goodB2G1Static_8;

//----- (0000000000438B2D) ----------------------------------------------------
int __fastcall goodB2G2Sink_8(__int64 a1)
{
  int result; // eax

  result = goodB2G2Static_8;
  if ( goodB2G2Static_8 )
  {
    if ( (long double)abs64(a1) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 * a1);
  }
  return result;
}
// 679370: using guessed type int goodB2G2Static_8;

//----- (0000000000438B8D) ----------------------------------------------------
int goodB2G2_134()
{
  goodB2G2Static_8 = 1;
  return goodB2G2Sink_8(0x7FFFFFFFFFFFFFFFLL);
}
// 679370: using guessed type int goodB2G2Static_8;

//----- (0000000000438BC3) ----------------------------------------------------
int __fastcall goodG2BSink_34(__int64 a1)
{
  int result; // eax

  result = goodG2BStatic_8;
  if ( goodG2BStatic_8 )
    result = printLongLongLine(a1 * a1);
  return result;
}
// 679374: using guessed type int goodG2BStatic_8;

//----- (0000000000438BF4) ----------------------------------------------------
int goodG2B_208()
{
  goodG2BStatic_8 = 1;
  return goodG2BSink_34(2LL);
}
// 679374: using guessed type int goodG2BStatic_8;

//----- (0000000000438C24) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_21_good()
{
  goodB2G1_134();
  goodB2G2_134();
  return goodG2B_208();
}

//----- (0000000000438C48) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_03_bad()
{
  return printLongLongLine(1LL);
}

//----- (0000000000438C81) ----------------------------------------------------
int goodB2G1_135()
{
  int result; // eax

  if ( (long double)abs64(0x7FFFFFFFFFFFFFFFLL) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(1LL);
  return result;
}

//----- (0000000000438CE9) ----------------------------------------------------
int goodB2G2_135()
{
  int result; // eax

  if ( (long double)abs64(0x7FFFFFFFFFFFFFFFLL) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(1LL);
  return result;
}

//----- (0000000000438D51) ----------------------------------------------------
int goodG2B1_117()
{
  return printLongLongLine(4LL);
}

//----- (0000000000438D84) ----------------------------------------------------
int goodG2B2_117()
{
  return printLongLongLine(4LL);
}

//----- (0000000000438DB7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_03_good()
{
  goodB2G1_135();
  goodB2G2_135();
  goodG2B1_117();
  return goodG2B2_117();
}

//----- (0000000000438DE5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_14_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalFive;
  if ( globalFive == 5 && v1 > 0 )
    result = printLongLongLine(2 * v1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (0000000000438E39) ----------------------------------------------------
int goodB2G1_136()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalFive;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 679168: using guessed type int globalFive;

//----- (0000000000438EB5) ----------------------------------------------------
int goodB2G2_136()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalFive;
  if ( globalFive == 5 && v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 679168: using guessed type int globalFive;

//----- (0000000000438F25) ----------------------------------------------------
int goodG2B1_118()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 && v1 > 0 )
    result = printLongLongLine(2 * v1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (0000000000438F7F) ----------------------------------------------------
int goodG2B2_118()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 2LL;
  result = globalFive;
  if ( globalFive == 5 && v1 > 0 )
    result = printLongLongLine(2 * v1);
  return result;
}
// 679168: using guessed type int globalFive;

//----- (0000000000438FCD) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_14_good()
{
  goodB2G1_136();
  goodB2G2_136();
  goodG2B1_118();
  return goodG2B2_118();
}

//----- (0000000000438FFB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_12_bad()
{
  __int64 v1; // [rsp+18h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  else
    v1 = 2LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printLongLongLine(v1 + 1);
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}

//----- (000000000043908F) ----------------------------------------------------
int goodB2G_191()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000439145) ----------------------------------------------------
int goodG2B_209()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLongLongLine(3LL);
}

//----- (00000000004391B7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_12_good()
{
  goodB2G_191();
  return goodG2B_209();
}

//----- (00000000004391D1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_add_54c_badSink(a1);
}

//----- (00000000004391EB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_add_54c_goodG2BSink(a1);
}

//----- (0000000000439205) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_54b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_add_54c_goodB2GSink(a1);
}

//----- (000000000043921F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_04_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 43921F: using guessed type char buf[16];

//----- (0000000000439326) ----------------------------------------------------
int goodB2G1_137()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 439326: using guessed type char buf[16];

//----- (000000000043944E) ----------------------------------------------------
int goodB2G2_137()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 43944E: using guessed type char buf[16];

//----- (000000000043956A) ----------------------------------------------------
int goodG2B1_119()
{
  return printIntLine(3u);
}

//----- (00000000004395B3) ----------------------------------------------------
int goodG2B2_119()
{
  return printIntLine(3u);
}

//----- (00000000004395F0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_04_good()
{
  goodB2G1_137();
  goodB2G2_137();
  goodG2B1_119();
  return goodG2B2_119();
}

//----- (000000000043961E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_09_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v4 = v5 + 1;
    result = printIntLine(v5 + 1);
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004396A3) ----------------------------------------------------
int goodB2G1_138()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000439749) ----------------------------------------------------
int goodB2G2_138()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v5 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v5 + 1;
      result = printIntLine(v5 + 1);
    }
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004397E3) ----------------------------------------------------
int goodG2B1_120()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000043982E) ----------------------------------------------------
int goodG2B2_120()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000043986D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_09_good()
{
  goodB2G1_138();
  goodB2G2_138();
  goodG2B1_120();
  return goodG2B2_120();
}

//----- (000000000043989B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_18_bad()
{
  return printLongLongLine(1LL);
}

//----- (00000000004398D6) ----------------------------------------------------
int goodB2G_192()
{
  int result; // eax

  if ( (long double)abs64(0x7FFFFFFFFFFFFFFFLL) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(1LL);
  return result;
}

//----- (0000000000439940) ----------------------------------------------------
int goodG2B_210()
{
  return printLongLongLine(4LL);
}

//----- (0000000000439975) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_18_good()
{
  goodB2G_192();
  return goodG2B_210();
}

//----- (000000000043998F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_53_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_add_53b_badSink(v4);
}

//----- (00000000004399F7) ----------------------------------------------------
int goodG2B_211()
{
  return CWE190_Integer_Overflow__int_fgets_add_53b_goodG2BSink(2);
}

//----- (0000000000439A19) ----------------------------------------------------
int goodB2G_193()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_add_53b_goodB2GSink(v4);
}

//----- (0000000000439A81) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_53_good()
{
  goodG2B_211();
  return goodB2G_193();
}

//----- (0000000000439A9B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_64_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_add_64b_badSink(&v4);
}

//----- (0000000000439B05) ----------------------------------------------------
int goodG2B_212()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_fgets_add_64b_goodG2BSink(&v1);
}

//----- (0000000000439B29) ----------------------------------------------------
int goodB2G_194()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_add_64b_goodB2GSink(&v4);
}

//----- (0000000000439B93) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_64_good()
{
  goodG2B_212();
  return goodB2G_194();
}

//----- (0000000000439BAD) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_64_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_multiply_64b_badSink(&v5);
}
// 439BAD: using guessed type char buf[16];

//----- (0000000000439C97) ----------------------------------------------------
int goodG2B_213()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_connect_socket_multiply_64b_goodG2BSink(&v1);
}

//----- (0000000000439CBB) ----------------------------------------------------
int goodB2G_195()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_multiply_64b_goodB2GSink(&v5);
}
// 439CBB: using guessed type char buf[16];

//----- (0000000000439DA5) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_64_good()
{
  goodG2B_213();
  return goodB2G_195();
}

//----- (0000000000439DBF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_63b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 * *a1);
}

//----- (0000000000439DF1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_63b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 * *a1);
}

//----- (0000000000439E23) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_square_63b_goodB2GSink(__int64 *a1)
{
  int result; // eax

  if ( (long double)abs64(*a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 * *a1);
  return result;
}

//----- (0000000000439E84) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_67_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE190_Integer_Overflow__int_connect_socket_add_67b_badSink(v8);
}
// 439E84: using guessed type char buf[16];

//----- (0000000000439F72) ----------------------------------------------------
int goodG2B_214()
{
  return CWE190_Integer_Overflow__int_connect_socket_add_67b_goodG2BSink(2);
}

//----- (0000000000439F9A) ----------------------------------------------------
int goodB2G_196()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE190_Integer_Overflow__int_connect_socket_add_67b_goodB2GSink(v8);
}
// 439F9A: using guessed type char buf[16];

//----- (000000000043A088) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_67_good()
{
  goodG2B_214();
  return goodB2G_196();
}

//----- (000000000043A0A2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_11_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (000000000043A0F7) ----------------------------------------------------
int goodB2G1_139()
{
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 * v1);
}

//----- (000000000043A187) ----------------------------------------------------
int goodB2G2_139()
{
  int result; // eax
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( (long double)abs64(v1) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 * v1);
  }
  return result;
}

//----- (000000000043A20B) ----------------------------------------------------
int goodG2B1_121()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (000000000043A266) ----------------------------------------------------
int goodG2B2_121()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (000000000043A2B5) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_11_good()
{
  goodB2G1_139();
  goodB2G2_139();
  goodG2B1_121();
  return goodG2B2_121();
}

//----- (000000000043A2E3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_square_52c_badSink(a1);
}

//----- (000000000043A2FA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_square_52c_goodG2BSink(a1);
}

//----- (000000000043A311) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_square_52c_goodB2GSink(a1);
}

//----- (000000000043A328) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_54c_badSink(a1);
}

//----- (000000000043A342) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_54c_goodG2BSink(a1);
}

//----- (000000000043A35C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_54b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_fscanf_square_54c_goodB2GSink(a1);
}

//----- (000000000043A376) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000043A3A1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) + 1);
}

//----- (000000000043A3CC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 + 1);
  return result;
}

//----- (000000000043A40C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_52_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_multiply_52b_badSink(v4);
}

//----- (000000000043A4C9) ----------------------------------------------------
int goodG2B_215()
{
  return CWE190_Integer_Overflow__int64_t_rand_multiply_52b_goodG2BSink(2LL);
}

//----- (000000000043A4EF) ----------------------------------------------------
int goodB2G_197()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_multiply_52b_goodB2GSink(v4);
}

//----- (000000000043A5AC) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_52_good()
{
  goodG2B_215();
  return goodB2G_197();
}

//----- (000000000043A5C6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_22_badSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_add_22_badGlobal;
  if ( CWE190_Integer_Overflow__int_connect_socket_add_22_badGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 679378: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_22_badGlobal;

//----- (000000000043A5F0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_22_goodB2G1Sink(int a1)
{
  if ( CWE190_Integer_Overflow__int_connect_socket_add_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 67937C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_22_goodB2G1Global;

//----- (000000000043A63B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_add_22_goodB2G2Global;
  if ( CWE190_Integer_Overflow__int_connect_socket_add_22_goodB2G2Global )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 679380: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_22_goodB2G2Global;

//----- (000000000043A67A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_add_22_goodG2BGlobal;
  if ( CWE190_Integer_Overflow__int_connect_socket_add_22_goodG2BGlobal )
    result = printIntLine(a1 + 1);
  return result;
}
// 679384: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_22_goodG2BGlobal;

//----- (000000000043A6A4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_65b_badSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (000000000043A6D0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_65b_goodG2BSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (000000000043A6FC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_65b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}

//----- (000000000043A744) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_68_bad()
{
  CWE190_Integer_Overflow__int64_t_max_add_68_badData = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_add_68b_badSink();
}
// 679490: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_add_68_badData;

//----- (000000000043A779) ----------------------------------------------------
int goodG2B_216()
{
  CWE190_Integer_Overflow__int64_t_max_add_68_goodG2BData = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_add_68b_goodG2BSink();
}
// 6794A0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_add_68_goodG2BData;

//----- (000000000043A7A8) ----------------------------------------------------
int goodB2G_198()
{
  CWE190_Integer_Overflow__int64_t_max_add_68_goodB2GData = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_add_68b_goodB2GSink();
}
// 679498: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_add_68_goodB2GData;

//----- (000000000043A7DD) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_68_good()
{
  goodG2B_216();
  return goodB2G_198();
}

//----- (000000000043A7F7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_54_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_add_54b_badSink(v4);
}

//----- (000000000043A8B4) ----------------------------------------------------
int goodG2B_217()
{
  return CWE190_Integer_Overflow__int64_t_rand_add_54b_goodG2BSink(2LL);
}

//----- (000000000043A8DA) ----------------------------------------------------
int goodB2G_199()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_add_54b_goodB2GSink(v4);
}

//----- (000000000043A997) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_54_good()
{
  goodG2B_217();
  return goodB2G_199();
}

//----- (000000000043A9B1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_53_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_53b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000043A9DD) ----------------------------------------------------
int goodG2B_218()
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_53b_goodG2BSink(2LL);
}

//----- (000000000043AA03) ----------------------------------------------------
int goodB2G_200()
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_53b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000043AA2F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_53_good()
{
  goodG2B_218();
  return goodB2G_200();
}

//----- (000000000043AA49) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_07_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]
  __int64 v2; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_8 == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticFive_8;
  if ( staticFive_8 == 5 )
  {
    v2 = v1 * v1;
    result = printLongLongLine(v1 * v1);
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 679150: using guessed type int staticFive_8;

//----- (000000000043AAAA) ----------------------------------------------------
int goodB2G1_140()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_8 == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( staticFive_8 != 5 )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 679150: using guessed type int staticFive_8;

//----- (000000000043AB42) ----------------------------------------------------
int goodB2G2_140()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_8 == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticFive_8;
  if ( staticFive_8 == 5 )
  {
    if ( (long double)abs64(v1) > 3037000499.9760496924 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printLongLongLine(v1 * v1);
    }
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 679150: using guessed type int staticFive_8;

//----- (000000000043ABCE) ----------------------------------------------------
int goodG2B1_122()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_8 == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = staticFive_8;
  if ( staticFive_8 == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679150: using guessed type int staticFive_8;

//----- (000000000043AC23) ----------------------------------------------------
int goodG2B2_122()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_8 == 5 )
    v1 = 2LL;
  result = staticFive_8;
  if ( staticFive_8 == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679150: using guessed type int staticFive_8;

//----- (000000000043AC6C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_07_good()
{
  goodB2G1_140();
  goodB2G2_140();
  goodG2B1_122();
  return goodG2B2_122();
}

//----- (000000000043AC9A) ----------------------------------------------------
__int64 staticReturnsTrue_7()
{
  return 1LL;
}

//----- (000000000043ACA5) ----------------------------------------------------
__int64 staticReturnsFalse_7()
{
  return 0LL;
}

//----- (000000000043ACB0) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_08_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( (unsigned int)staticReturnsTrue_7() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_7();
  if ( result )
  {
    v4 = v5 + 1;
    result = printIntLine(v5 + 1);
  }
  return result;
}

//----- (000000000043AD3D) ----------------------------------------------------
int goodB2G1_141()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( (unsigned int)staticReturnsTrue_7() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)staticReturnsFalse_7() )
    return printLine("Benign, fixed string");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (000000000043ADEB) ----------------------------------------------------
int goodB2G2_141()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  if ( (unsigned int)staticReturnsTrue_7() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_7();
  if ( result )
  {
    if ( v5 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = v5 + 1;
      result = printIntLine(v5 + 1);
    }
  }
  return result;
}

//----- (000000000043AE8D) ----------------------------------------------------
int goodG2B1_123()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_7() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_7();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000043AEE0) ----------------------------------------------------
int goodG2B2_123()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_7() )
    v1 = 2;
  result = staticReturnsTrue_7();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (000000000043AF27) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_08_good()
{
  goodB2G1_141();
  goodB2G2_141();
  goodG2B1_123();
  return goodG2B2_123();
}

//----- (000000000043AF55) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_52b_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_add_52c_badSink(a1);
}

//----- (000000000043AF6C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_52b_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_add_52c_goodG2BSink(a1);
}

//----- (000000000043AF83) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_52b_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_fgets_add_52c_goodB2GSink(a1);
}

//----- (000000000043AF9A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_15_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (000000000043AFD4) ----------------------------------------------------
int goodB2G1_142()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043B02A) ----------------------------------------------------
int goodB2G2_142()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043B080) ----------------------------------------------------
int goodG2B1_124()
{
  return printLongLongLine(3LL);
}

//----- (000000000043B0B4) ----------------------------------------------------
int goodG2B2_124()
{
  return printLongLongLine(3LL);
}

//----- (000000000043B0E8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_15_good()
{
  goodB2G1_142();
  goodB2G2_142();
  goodG2B1_124();
  return goodG2B2_124();
}

//----- (000000000043B116) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_53c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_53d_badSink(a1);
}

//----- (000000000043B130) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_53c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_53d_goodG2BSink(a1);
}

//----- (000000000043B14A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_53c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_53d_goodB2GSink(a1);
}

//----- (000000000043B164) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_63_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_square_63b_badSink(&v10);
}

//----- (000000000043B221) ----------------------------------------------------
int goodG2B_219()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_square_63b_goodG2BSink(&v1);
}

//----- (000000000043B247) ----------------------------------------------------
int goodB2G_201()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_square_63b_goodB2GSink(&v10);
}

//----- (000000000043B304) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_63_good()
{
  goodG2B_219();
  return goodB2G_201();
}

//----- (000000000043B31E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_68_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_add_68_badData = v4;
  return CWE190_Integer_Overflow__int_fgets_add_68b_badSink();
}
// 6794B0: using guessed type int CWE190_Integer_Overflow__int_fgets_add_68_badData;

//----- (000000000043B38F) ----------------------------------------------------
int goodG2B_220()
{
  CWE190_Integer_Overflow__int_fgets_add_68_goodG2BData = 2;
  return CWE190_Integer_Overflow__int_fgets_add_68b_goodG2BSink();
}
// 6794A8: using guessed type int CWE190_Integer_Overflow__int_fgets_add_68_goodG2BData;

//----- (000000000043B3BA) ----------------------------------------------------
int goodB2G_202()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_add_68_goodB2GData = v4;
  return CWE190_Integer_Overflow__int_fgets_add_68b_goodB2GSink();
}
// 6794AC: using guessed type int CWE190_Integer_Overflow__int_fgets_add_68_goodB2GData;

//----- (000000000043B42B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_68_good()
{
  goodG2B_220();
  return goodB2G_202();
}

//----- (000000000043B445) ----------------------------------------------------
__int64 badSource_6()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (000000000043B461) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_42_bad()
{
  __int64 v0; // rax

  v0 = badSource_6();
  return printLongLongLine(v0 + 1);
}

//----- (000000000043B49B) ----------------------------------------------------
__int64 goodG2BSource_6()
{
  return 2LL;
}

//----- (000000000043B4B1) ----------------------------------------------------
int goodG2B_221()
{
  __int64 v0; // rax

  v0 = goodG2BSource_6();
  return printLongLongLine(v0 + 1);
}

//----- (000000000043B4EB) ----------------------------------------------------
__int64 goodB2GSource_6()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

//----- (000000000043B507) ----------------------------------------------------
int goodB2G_203()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = goodB2GSource_6();
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000043B55D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_42_good()
{
  goodB2G_203();
  return goodG2B_221();
}

//----- (000000000043B577) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_02_bad()
{
  return printLongLongLine(1LL);
}

//----- (000000000043B5B0) ----------------------------------------------------
int goodB2G1_143()
{
  int result; // eax

  if ( (long double)abs64(0x7FFFFFFFFFFFFFFFLL) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(1LL);
  return result;
}

//----- (000000000043B618) ----------------------------------------------------
int goodB2G2_143()
{
  int result; // eax

  if ( (long double)abs64(0x7FFFFFFFFFFFFFFFLL) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(1LL);
  return result;
}

//----- (000000000043B680) ----------------------------------------------------
int goodG2B1_125()
{
  return printLongLongLine(4LL);
}

//----- (000000000043B6B3) ----------------------------------------------------
int goodG2B2_125()
{
  return printLongLongLine(4LL);
}

//----- (000000000043B6E6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_02_good()
{
  goodB2G1_143();
  goodB2G2_143();
  goodG2B1_125();
  return goodG2B2_125();
}

//----- (000000000043B714) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_52_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_square_52b_badSink(v7);
}
// 43B714: using guessed type char buf[16];

//----- (000000000043B7FC) ----------------------------------------------------
int goodG2B_222()
{
  return CWE190_Integer_Overflow__int_connect_socket_square_52b_goodG2BSink(2);
}

//----- (000000000043B81E) ----------------------------------------------------
int goodB2G_204()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_square_52b_goodB2GSink(v7);
}
// 43B81E: using guessed type char buf[16];

//----- (000000000043B906) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_52_good()
{
  goodG2B_222();
  return goodB2G_204();
}

//----- (000000000043B920) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_65b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000043B946) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_65b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000043B96C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_65b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000043B9AE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_51b_badSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000043B9CF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 * a1);
}

//----- (000000000043B9F0) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 || a1 < -46339 || a1 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 * a1);
  return result;
}

//----- (000000000043BA38) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_51_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_add_51b_badSink(v7);
}
// 43BA38: using guessed type char buf[16];

//----- (000000000043BB20) ----------------------------------------------------
int goodG2B_223()
{
  return CWE190_Integer_Overflow__int_connect_socket_add_51b_goodG2BSink(2);
}

//----- (000000000043BB42) ----------------------------------------------------
int goodB2G_205()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_add_51b_goodB2GSink(v7);
}
// 43BB42: using guessed type char buf[16];

//----- (000000000043BC2A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_51_good()
{
  goodG2B_223();
  return goodB2G_205();
}

//----- (000000000043BC44) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_22_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_add_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_connect_socket_add_22_badSink(v7);
}
// 679378: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_22_badGlobal;
// 43BC44: using guessed type char buf[16];

//----- (000000000043BD36) ----------------------------------------------------
int goodB2G1_144()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_add_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_connect_socket_add_22_goodB2G1Sink(v7);
}
// 67937C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_22_goodB2G1Global;
// 43BD36: using guessed type char buf[16];

//----- (000000000043BE28) ----------------------------------------------------
int goodB2G2_144()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_add_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_connect_socket_add_22_goodB2G2Sink(v7);
}
// 679380: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_22_goodB2G2Global;
// 43BE28: using guessed type char buf[16];

//----- (000000000043BF1A) ----------------------------------------------------
int goodG2B_224()
{
  CWE190_Integer_Overflow__int_connect_socket_add_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_connect_socket_add_22_goodG2BSink(2);
}
// 679384: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_22_goodG2BGlobal;

//----- (000000000043BF46) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_22_good()
{
  goodB2G1_144();
  goodB2G2_144();
  return goodG2B_224();
}

//----- (000000000043BF6A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_65_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_65b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000043BF9F) ----------------------------------------------------
int goodG2B_225()
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_65b_goodG2BSink(2LL);
}

//----- (000000000043BFCE) ----------------------------------------------------
int goodB2G_206()
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_65b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000043C003) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_65_good()
{
  goodG2B_225();
  return goodB2G_206();
}

//----- (000000000043C01D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_16_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 43C01D: using guessed type char buf[16];

//----- (000000000043C111) ----------------------------------------------------
int goodB2G_207()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 43C111: using guessed type char buf[16];

//----- (000000000043C22C) ----------------------------------------------------
int goodG2B_226()
{
  return printIntLine(4u);
}

//----- (000000000043C25A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_16_good()
{
  goodB2G_207();
  return goodG2B_226();
}

//----- (000000000043C274) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54d_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_square_54e_badSink(a1);
}

//----- (000000000043C28E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54d_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_square_54e_goodG2BSink(a1);
}

//----- (000000000043C2A8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54d_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_square_54e_goodB2GSink(a1);
}

//----- (000000000043C2C2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_10_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (000000000043C30F) ----------------------------------------------------
int goodB2G1_145()
{
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 * v1);
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;

//----- (000000000043C397) ----------------------------------------------------
int goodB2G2_145()
{
  int result; // eax
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( (long double)abs64(v1) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 * v1);
  }
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (000000000043C413) ----------------------------------------------------
int goodG2B1_126()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679164: using guessed type int globalTrue;
// 6793F8: using guessed type int globalFalse;

//----- (000000000043C466) ----------------------------------------------------
int goodG2B2_126()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679164: using guessed type int globalTrue;

//----- (000000000043C4AD) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_10_good()
{
  goodB2G1_145();
  goodB2G2_145();
  goodG2B1_126();
  return goodG2B2_126();
}

//----- (000000000043C4DB) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_53c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_add_53d_badSink(a1);
}

//----- (000000000043C4F5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_53c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_add_53d_goodG2BSink(a1);
}

//----- (000000000043C50F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_53c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_add_53d_goodB2GSink(a1);
}

//----- (000000000043C529) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_52_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_add_52b_badSink(v4);
}

//----- (000000000043C591) ----------------------------------------------------
int goodG2B_227()
{
  return CWE190_Integer_Overflow__int_fgets_add_52b_goodG2BSink(2);
}

//----- (000000000043C5B3) ----------------------------------------------------
int goodB2G_208()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_add_52b_goodB2GSink(v4);
}

//----- (000000000043C61B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_52_good()
{
  goodG2B_227();
  return goodB2G_208();
}

//----- (000000000043C635) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_09_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000043C687) ----------------------------------------------------
int goodB2G1_146()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_FALSE;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 > 0 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000043C701) ----------------------------------------------------
int goodB2G2_146()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 > 0 )
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000043C76F) ----------------------------------------------------
int goodG2B1_127()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000043C7C7) ----------------------------------------------------
int goodG2B2_127()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000043C813) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_09_good()
{
  goodB2G1_146();
  goodB2G2_146();
  goodG2B1_127();
  return goodG2B2_127();
}

//----- (000000000043C841) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_66_bad()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0x7FFFFFFFFFFFFFFFLL;
  v2 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_multiply_66b_badSink((__int64)&v1);
}

//----- (000000000043C875) ----------------------------------------------------
int goodG2B_228()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 2LL;
  v2 = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_multiply_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000043C8A3) ----------------------------------------------------
int goodB2G_209()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0x7FFFFFFFFFFFFFFFLL;
  v2 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_multiply_66b_goodB2GSink((__int64)&v1);
}

//----- (000000000043C8D7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_66_good()
{
  goodG2B_228();
  return goodB2G_209();
}

//----- (000000000043C8F1) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_square_54d_badSink(a1);
}

//----- (000000000043C90B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_square_54d_goodG2BSink(a1);
}

//----- (000000000043C925) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_square_54d_goodB2GSink(a1);
}

//----- (000000000043C93F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_16_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (000000000043C9B2) ----------------------------------------------------
int goodB2G_210()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (000000000043CA3A) ----------------------------------------------------
int goodG2B_229()
{
  return printIntLine(3u);
}

//----- (000000000043CA67) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_16_good()
{
  goodB2G_210();
  return goodG2B_229();
}

//----- (000000000043CA81) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_05_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_7 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticTrue_7;
  if ( staticTrue_7 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679154: using guessed type int staticTrue_7;

//----- (000000000043CACD) ----------------------------------------------------
int goodB2G1_147()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_7 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if ( staticFalse_7 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 + 1);
}
// 679154: using guessed type int staticTrue_7;
// 679388: using guessed type int staticFalse_7;

//----- (000000000043CB41) ----------------------------------------------------
int goodB2G2_147()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_7 )
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  result = staticTrue_7;
  if ( staticTrue_7 )
  {
    if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 + 1);
  }
  return result;
}
// 679154: using guessed type int staticTrue_7;

//----- (000000000043CBA9) ----------------------------------------------------
int goodG2B1_128()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFalse_7 )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticTrue_7;
  if ( staticTrue_7 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679154: using guessed type int staticTrue_7;
// 679388: using guessed type int staticFalse_7;

//----- (000000000043CBFB) ----------------------------------------------------
int goodG2B2_128()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_7 )
    v1 = 2LL;
  result = staticTrue_7;
  if ( staticTrue_7 )
    result = printLongLongLine(v1 + 1);
  return result;
}
// 679154: using guessed type int staticTrue_7;

//----- (000000000043CC41) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_05_good()
{
  goodB2G1_147();
  goodB2G2_147();
  goodG2B1_128();
  return goodG2B2_128();
}

//----- (000000000043CC6F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_01_bad()
{
  return printLongLongLine(1LL);
}

//----- (000000000043CCA8) ----------------------------------------------------
int goodG2B_230()
{
  return printLongLongLine(4LL);
}

//----- (000000000043CCDB) ----------------------------------------------------
int goodB2G_211()
{
  int result; // eax

  if ( (long double)abs64(0x7FFFFFFFFFFFFFFFLL) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(1LL);
  return result;
}

//----- (000000000043CD43) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_01_good()
{
  goodG2B_230();
  return goodB2G_211();
}

//----- (000000000043CD5D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_68b_badSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_multiply_68_badData;
  if ( CWE190_Integer_Overflow__int64_t_max_multiply_68_badData > 0 )
    result = printLongLongLine(2 * CWE190_Integer_Overflow__int64_t_max_multiply_68_badData);
  return result;
}
// 6794C8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_multiply_68_badData;

//----- (000000000043CD90) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_68b_goodG2BSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_multiply_68_goodG2BData;
  if ( CWE190_Integer_Overflow__int64_t_max_multiply_68_goodG2BData > 0 )
    result = printLongLongLine(2 * CWE190_Integer_Overflow__int64_t_max_multiply_68_goodG2BData);
  return result;
}
// 6794B8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_multiply_68_goodG2BData;

//----- (000000000043CDC3) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_68b_goodB2GSink()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int64_t_max_multiply_68_goodB2GData;
  if ( CWE190_Integer_Overflow__int64_t_max_multiply_68_goodB2GData > 0 )
  {
    if ( CWE190_Integer_Overflow__int64_t_max_multiply_68_goodB2GData > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * CWE190_Integer_Overflow__int64_t_max_multiply_68_goodB2GData);
  }
  return result;
}
// 6794C0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_multiply_68_goodB2GData;

//----- (000000000043CE12) ----------------------------------------------------
int __fastcall badSink_35(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000043CE38) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_41_bad()
{
  return badSink_35(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000043CE64) ----------------------------------------------------
int __fastcall goodG2BSink_35(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000043CE8A) ----------------------------------------------------
int goodG2B_231()
{
  return goodG2BSink_35(2LL);
}

//----- (000000000043CEB0) ----------------------------------------------------
int __fastcall goodB2GSink_25(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000043CEF2) ----------------------------------------------------
int goodB2G_212()
{
  return goodB2GSink_25(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000043CF1E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_41_good()
{
  goodB2G_212();
  return goodG2B_231();
}

//----- (000000000043CF38) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_61_bad()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_max_add_61b_badSource();
  return printLongLongLine(v0 + 1);
}

//----- (000000000043CF72) ----------------------------------------------------
int goodG2B_232()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_max_add_61b_goodG2BSource();
  return printLongLongLine(v0 + 1);
}

//----- (000000000043CFAC) ----------------------------------------------------
int goodB2G_213()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = CWE190_Integer_Overflow__int64_t_max_add_61b_goodB2GSource();
  if ( v1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 + 1);
  return result;
}

//----- (000000000043D002) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_61_good()
{
  goodG2B_232();
  return goodB2G_213();
}

//----- (000000000043D01C) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_51_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_square_51b_badSink(v7);
}
// 43D01C: using guessed type char buf[16];

//----- (000000000043D104) ----------------------------------------------------
int goodG2B_233()
{
  return CWE190_Integer_Overflow__int_connect_socket_square_51b_goodG2BSink(2);
}

//----- (000000000043D126) ----------------------------------------------------
int goodB2G_214()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_square_51b_goodB2GSink(v7);
}
// 43D126: using guessed type char buf[16];

//----- (000000000043D20E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_51_good()
{
  goodG2B_233();
  return goodB2G_214();
}

//----- (000000000043D228) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_13_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v5 = v8 + 1;
    result = printIntLine(v8 + 1);
  }
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;
// 43D228: using guessed type char buf[16];

//----- (000000000043D333) ----------------------------------------------------
int goodB2G1_148()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;
// 43D333: using guessed type char buf[16];

//----- (000000000043D45F) ----------------------------------------------------
int goodB2G2_148()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v8 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v8 + 1;
      result = printIntLine(v8 + 1);
    }
  }
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;
// 43D45F: using guessed type char buf[16];

//----- (000000000043D57F) ----------------------------------------------------
int goodG2B1_129()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043D5CC) ----------------------------------------------------
int goodG2B2_129()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 + 1);
  return result;
}
// 45BAEC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043D60D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_13_good()
{
  goodB2G1_148();
  goodB2G2_148();
  goodG2B1_129();
  return goodG2B2_129();
}

//----- (000000000043D63B) ----------------------------------------------------
void CWE190_Integer_Overflow__int64_t_rand_square_17_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // [rsp+10h] [rbp-20h]
  int j; // [rsp+18h] [rbp-18h]
  int i; // [rsp+1Ch] [rbp-14h]

  v9 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v9 = v4;
  }
  for ( j = 0; j <= 0; ++j )
    printLongLongLine(v9 * v9);
}

//----- (000000000043D732) ----------------------------------------------------
void goodB2G_215()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // [rsp+20h] [rbp-20h]
  int j; // [rsp+28h] [rbp-18h]
  int i; // [rsp+2Ch] [rbp-14h]

  v9 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v9 = v4;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( (long double)abs64(v9) > 3037000499.9760496924 )
      printLine("data value is too large to perform arithmetic safely.");
    else
      printLongLongLine(v9 * v9);
  }
}

//----- (000000000043D858) ----------------------------------------------------
int goodG2B_234()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    v1 = 2LL;
  for ( j = 0; j <= 0; ++j )
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (000000000043D8B1) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_17_good()
{
  goodB2G_215();
  return goodG2B_234();
}

//----- (000000000043D8CB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_22_bad()
{
  CWE190_Integer_Overflow__int64_t_max_square_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_max_square_22_badSink(0x7FFFFFFFFFFFFFFFLL);
}
// 67938C: using guessed type int CWE190_Integer_Overflow__int64_t_max_square_22_badGlobal;

//----- (000000000043D901) ----------------------------------------------------
int goodB2G1_149()
{
  CWE190_Integer_Overflow__int64_t_max_square_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int64_t_max_square_22_goodB2G1Sink(0x7FFFFFFFFFFFFFFFLL);
}
// 679390: using guessed type int CWE190_Integer_Overflow__int64_t_max_square_22_goodB2G1Global;

//----- (000000000043D937) ----------------------------------------------------
int goodB2G2_149()
{
  CWE190_Integer_Overflow__int64_t_max_square_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int64_t_max_square_22_goodB2G2Sink(0x7FFFFFFFFFFFFFFFLL);
}
// 679394: using guessed type int CWE190_Integer_Overflow__int64_t_max_square_22_goodB2G2Global;

//----- (000000000043D96D) ----------------------------------------------------
int goodG2B_235()
{
  CWE190_Integer_Overflow__int64_t_max_square_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int64_t_max_square_22_goodG2BSink(2LL);
}
// 679398: using guessed type int CWE190_Integer_Overflow__int64_t_max_square_22_goodG2BGlobal;

//----- (000000000043D99D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_22_good()
{
  goodB2G1_149();
  goodB2G2_149();
  return goodG2B_235();
}

//----- (000000000043D9C1) ----------------------------------------------------
int __fastcall badSink_36(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000043D9E8) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_square_44_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))badSink_36)(v4);
}

//----- (000000000043DAAE) ----------------------------------------------------
int __fastcall goodG2BSink_36(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (000000000043DAD5) ----------------------------------------------------
int goodG2B_236()
{
  return goodG2BSink_36(2LL);
}

//----- (000000000043DB04) ----------------------------------------------------
int __fastcall goodB2GSink_26(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (000000000043DB5A) ----------------------------------------------------
__int64 goodB2G_216()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))goodB2GSink_26)(v4);
}

//----- (000000000043DC20) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_square_44_good()
{
  goodG2B_236();
  return goodB2G_216();
}

//----- (000000000043DC3A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_34_bad()
{
  return printLongLongLine(0x8000000000000000LL);
}

//----- (000000000043DC82) ----------------------------------------------------
int goodG2B_237()
{
  return printLongLongLine(3LL);
}

//----- (000000000043DCC4) ----------------------------------------------------
int goodB2G_217()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043DD28) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_34_good()
{
  goodG2B_237();
  return goodB2G_217();
}

//----- (000000000043DD42) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_66b_badSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) + 1LL);
}

//----- (000000000043DD74) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_66b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) + 1LL);
}

//----- (000000000043DDA6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+18h] [rbp-8h]

  v2 = *(_QWORD *)(a1 + 16);
  if ( v2 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 + 1);
  return result;
}

//----- (000000000043DDF4) ----------------------------------------------------
int badSink_37()
{
  return printIntLine(
           CWE190_Integer_Overflow__int_connect_socket_square_45_badData
         * CWE190_Integer_Overflow__int_connect_socket_square_45_badData);
}
// 67939C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_45_badData;

//----- (000000000043DE1B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_45_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_square_45_badData = v7;
  return badSink_37();
}
// 67939C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_45_badData;
// 43DE1B: using guessed type char buf[16];

//----- (000000000043DF0C) ----------------------------------------------------
int goodG2BSink_37()
{
  return printIntLine(
           CWE190_Integer_Overflow__int_connect_socket_square_45_goodG2BData
         * CWE190_Integer_Overflow__int_connect_socket_square_45_goodG2BData);
}
// 6793A0: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_45_goodG2BData;

//----- (000000000043DF33) ----------------------------------------------------
int goodG2B_238()
{
  CWE190_Integer_Overflow__int_connect_socket_square_45_goodG2BData = 2;
  return goodG2BSink_37();
}
// 6793A0: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_45_goodG2BData;

//----- (000000000043DF5E) ----------------------------------------------------
int goodB2GSink_27()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_connect_socket_square_45_goodB2GData == 0x80000000
    || CWE190_Integer_Overflow__int_connect_socket_square_45_goodB2GData < -46339
    || CWE190_Integer_Overflow__int_connect_socket_square_45_goodB2GData > 46339 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(
               CWE190_Integer_Overflow__int_connect_socket_square_45_goodB2GData
             * CWE190_Integer_Overflow__int_connect_socket_square_45_goodB2GData);
  }
  return result;
}
// 6793A4: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_45_goodB2GData;

//----- (000000000043DFAC) ----------------------------------------------------
int goodB2G_218()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE190_Integer_Overflow__int_connect_socket_square_45_goodB2GData = v7;
  return goodB2GSink_27();
}
// 6793A4: using guessed type int CWE190_Integer_Overflow__int_connect_socket_square_45_goodB2GData;
// 43DFAC: using guessed type char buf[16];

//----- (000000000043E09D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_45_good()
{
  goodG2B_238();
  return goodB2G_218();
}

//----- (000000000043E0B7) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_51_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_add_51b_badSink(v4);
}

//----- (000000000043E11F) ----------------------------------------------------
int goodG2B_239()
{
  return CWE190_Integer_Overflow__int_fgets_add_51b_goodG2BSink(2);
}

//----- (000000000043E141) ----------------------------------------------------
int goodB2G_219()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE190_Integer_Overflow__int_fgets_add_51b_goodB2GSink(v4);
}

//----- (000000000043E1A9) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_51_good()
{
  goodG2B_239();
  return goodB2G_219();
}

//----- (000000000043E1C3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_53b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_53c_badSink(a1);
}

//----- (000000000043E1DD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_53b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_53c_goodG2BSink(a1);
}

//----- (000000000043E1F7) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_53b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_53c_goodB2GSink(a1);
}

//----- (000000000043E211) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_68b_badSink()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_rand_add_68_badData + 1);
}
// 6794D8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_add_68_badData;

//----- (000000000043E23E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_68b_goodG2BSink()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_rand_add_68_goodG2BData + 1);
}
// 6794D0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_add_68_goodG2BData;

//----- (000000000043E26B) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int64_t_rand_add_68_goodB2GData == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE190_Integer_Overflow__int64_t_rand_add_68_goodB2GData + 1);
  return result;
}
// 6794E0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_add_68_goodB2GData;

//----- (000000000043E2B4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_06_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 43E2B4: using guessed type char buf[16];

//----- (000000000043E3BE) ----------------------------------------------------
int goodB2G1_150()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 43E3BE: using guessed type char buf[16];

//----- (000000000043E4FB) ----------------------------------------------------
int goodB2G2_150()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 43E4FB: using guessed type char buf[16];

//----- (000000000043E62C) ----------------------------------------------------
int goodG2B1_130()
{
  return printIntLine(4u);
}

//----- (000000000043E678) ----------------------------------------------------
int goodG2B2_130()
{
  return printIntLine(4u);
}

//----- (000000000043E6B8) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_06_good()
{
  goodB2G1_150();
  goodB2G2_150();
  goodG2B1_130();
  return goodG2B2_130();
}

//----- (000000000043E6E6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_63b_badSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (000000000043E715) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_63b_goodG2BSink(int *a1)
{
  int result; // eax

  result = *a1;
  if ( *a1 > 0 )
    result = printIntLine(2 * *a1);
  return result;
}

//----- (000000000043E744) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_63b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  result = *a1;
  v2 = *a1;
  if ( *a1 > 0 )
  {
    if ( v2 > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * v2);
  }
  return result;
}

//----- (000000000043E788) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_61b_badSource()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (000000000043E839) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000043E84F) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_multiply_61b_goodB2GSource()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (000000000043E900) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_square_61b_badSource()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (000000000043E9B1) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_square_61b_goodG2BSource()
{
  return 2LL;
}

//----- (000000000043E9C7) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_square_61b_goodB2GSource()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (000000000043EA78) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_68_bad()
{
  CWE190_Integer_Overflow__int64_t_max_multiply_68_badData = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_multiply_68b_badSink();
}
// 6794C8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_multiply_68_badData;

//----- (000000000043EAAD) ----------------------------------------------------
int goodG2B_240()
{
  CWE190_Integer_Overflow__int64_t_max_multiply_68_goodG2BData = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_multiply_68b_goodG2BSink();
}
// 6794B8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_multiply_68_goodG2BData;

//----- (000000000043EADC) ----------------------------------------------------
int goodB2G_220()
{
  CWE190_Integer_Overflow__int64_t_max_multiply_68_goodB2GData = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_multiply_68b_goodB2GSink();
}
// 6794C0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_max_multiply_68_goodB2GData;

//----- (000000000043EB11) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_68_good()
{
  goodG2B_240();
  return goodB2G_220();
}

//----- (000000000043EB2B) ----------------------------------------------------
int __fastcall badSink_38(int a1)
{
  int result; // eax

  result = badStatic_9;
  if ( badStatic_9 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6793A8: using guessed type int badStatic_9;

//----- (000000000043EB55) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_21_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  badStatic_9 = 1;
  return badSink_38(v7);
}
// 6793A8: using guessed type int badStatic_9;
// 43EB55: using guessed type char buf[16];

//----- (000000000043EC47) ----------------------------------------------------
int __fastcall goodB2G1Sink_9(int a1)
{
  if ( goodB2G1Static_9 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 + 1);
}
// 6793AC: using guessed type int goodB2G1Static_9;

//----- (000000000043EC92) ----------------------------------------------------
int goodB2G1_151()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G1Static_9 = 0;
  return goodB2G1Sink_9(v7);
}
// 6793AC: using guessed type int goodB2G1Static_9;
// 43EC92: using guessed type char buf[16];

//----- (000000000043ED84) ----------------------------------------------------
int __fastcall goodB2G2Sink_9(int a1)
{
  int result; // eax

  result = goodB2G2Static_9;
  if ( goodB2G2Static_9 )
  {
    if ( a1 == 0x7FFFFFFF )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 + 1);
  }
  return result;
}
// 6793B0: using guessed type int goodB2G2Static_9;

//----- (000000000043EDC3) ----------------------------------------------------
int goodB2G2_151()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G2Static_9 = 1;
  return goodB2G2Sink_9(v7);
}
// 6793B0: using guessed type int goodB2G2Static_9;
// 43EDC3: using guessed type char buf[16];

//----- (000000000043EEB5) ----------------------------------------------------
int __fastcall goodG2BSink_38(int a1)
{
  int result; // eax

  result = goodG2BStatic_9;
  if ( goodG2BStatic_9 )
    result = printIntLine(a1 + 1);
  return result;
}
// 6793B4: using guessed type int goodG2BStatic_9;

//----- (000000000043EEDF) ----------------------------------------------------
int goodG2B_241()
{
  goodG2BStatic_9 = 1;
  return goodG2BSink_38(2);
}
// 6793B4: using guessed type int goodG2BStatic_9;

//----- (000000000043EF0B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_21_good()
{
  goodB2G1_151();
  goodB2G2_151();
  return goodG2B_241();
}

//----- (000000000043EF2F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_03_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 43EF2F: using guessed type char buf[16];

//----- (000000000043F020) ----------------------------------------------------
int goodB2G1_152()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 43F020: using guessed type char buf[16];

//----- (000000000043F126) ----------------------------------------------------
int goodB2G2_152()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 43F126: using guessed type char buf[16];

//----- (000000000043F22C) ----------------------------------------------------
int goodG2B1_131()
{
  return printIntLine(3u);
}

//----- (000000000043F257) ----------------------------------------------------
int goodG2B2_131()
{
  return printIntLine(3u);
}

//----- (000000000043F282) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_03_good()
{
  goodB2G1_152();
  goodB2G2_152();
  goodG2B1_131();
  return goodG2B2_131();
}

//----- (000000000043F2B0) ----------------------------------------------------
__int64 badSource_7()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (000000000043F361) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_42_bad()
{
  __int64 v0; // rax

  v0 = badSource_7();
  if ( v0 > 0 )
    LODWORD(v0) = printLongLongLine(2 * v0);
  return v0;
}

//----- (000000000043F3A1) ----------------------------------------------------
__int64 goodG2BSource_7()
{
  return 2LL;
}

//----- (000000000043F3B7) ----------------------------------------------------
int goodG2B_242()
{
  __int64 v0; // rax

  v0 = goodG2BSource_7();
  if ( v0 > 0 )
    LODWORD(v0) = printLongLongLine(2 * v0);
  return v0;
}

//----- (000000000043F3F7) ----------------------------------------------------
__int64 goodB2GSource_7()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (000000000043F4A8) ----------------------------------------------------
int goodB2G_221()
{
  __int64 v0; // rax

  v0 = goodB2GSource_7();
  if ( v0 > 0 )
  {
    if ( v0 > 4611686018427387902LL )
      LODWORD(v0) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v0) = printLongLongLine(2 * v0);
  }
  return v0;
}

//----- (000000000043F504) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_42_good()
{
  goodB2G_221();
  return goodG2B_242();
}

//----- (000000000043F51E) ----------------------------------------------------
int badSink_39()
{
  return printIntLine(CWE190_Integer_Overflow__int_fgets_add_45_badData + 1);
}
// 6793B8: using guessed type int CWE190_Integer_Overflow__int_fgets_add_45_badData;

//----- (000000000043F544) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_45_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_add_45_badData = v4;
  return badSink_39();
}
// 6793B8: using guessed type int CWE190_Integer_Overflow__int_fgets_add_45_badData;

//----- (000000000043F5B5) ----------------------------------------------------
int goodG2BSink_39()
{
  return printIntLine(CWE190_Integer_Overflow__int_fgets_add_45_goodG2BData + 1);
}
// 6793BC: using guessed type int CWE190_Integer_Overflow__int_fgets_add_45_goodG2BData;

//----- (000000000043F5DB) ----------------------------------------------------
int goodG2B_243()
{
  CWE190_Integer_Overflow__int_fgets_add_45_goodG2BData = 2;
  return goodG2BSink_39();
}
// 6793BC: using guessed type int CWE190_Integer_Overflow__int_fgets_add_45_goodG2BData;

//----- (000000000043F606) ----------------------------------------------------
int goodB2GSink_28()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_fgets_add_45_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_fgets_add_45_goodB2GData + 1);
  return result;
}
// 6793C0: using guessed type int CWE190_Integer_Overflow__int_fgets_add_45_goodB2GData;

//----- (000000000043F641) ----------------------------------------------------
int goodB2G_222()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_add_45_goodB2GData = v4;
  return goodB2GSink_28();
}
// 6793C0: using guessed type int CWE190_Integer_Overflow__int_fgets_add_45_goodB2GData;

//----- (000000000043F6B2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_45_good()
{
  goodG2B_243();
  return goodB2G_222();
}

//----- (000000000043F6CC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_06_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (000000000043F751) ----------------------------------------------------
int goodB2G1_153()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (000000000043F7F7) ----------------------------------------------------
int goodB2G2_153()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+18h] [rbp-8h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v5 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v4 = v5 + 1;
  return printIntLine(v5 + 1);
}

//----- (000000000043F891) ----------------------------------------------------
int goodG2B1_132()
{
  return printIntLine(3u);
}

//----- (000000000043F8DC) ----------------------------------------------------
int goodG2B2_132()
{
  return printIntLine(3u);
}

//----- (000000000043F91B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_06_good()
{
  goodB2G1_153();
  goodB2G2_153();
  goodG2B1_132();
  return goodG2B2_132();
}

//----- (000000000043F949) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_18_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 43F949: using guessed type char buf[16];

//----- (000000000043FA3C) ----------------------------------------------------
int goodB2G_223()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 43FA3C: using guessed type char buf[16];

//----- (000000000043FB44) ----------------------------------------------------
int goodG2B_244()
{
  return printIntLine(3u);
}

//----- (000000000043FB71) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_18_good()
{
  goodB2G_223();
  return goodG2B_244();
}

//----- (000000000043FB8B) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_53b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_add_53c_badSink(a1);
}

//----- (000000000043FBA5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_53b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_add_53c_goodG2BSink(a1);
}

//----- (000000000043FBBF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_53b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_rand_add_53c_goodB2GSink(a1);
}

//----- (000000000043FBD9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54e_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000043FBFF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54e_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000043FC25) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54e_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000043FC67) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_66_bad()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0x7FFFFFFFFFFFFFFFLL;
  v2 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_add_66b_badSink((__int64)&v1);
}

//----- (000000000043FC9B) ----------------------------------------------------
int goodG2B_245()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 2LL;
  v2 = 2LL;
  return CWE190_Integer_Overflow__int64_t_max_add_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000043FCC9) ----------------------------------------------------
int goodB2G_224()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0x7FFFFFFFFFFFFFFFLL;
  v2 = 0x7FFFFFFFFFFFFFFFLL;
  return CWE190_Integer_Overflow__int64_t_max_add_66b_goodB2GSink((__int64)&v1);
}

//----- (000000000043FCFD) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_add_66_good()
{
  goodG2B_245();
  return goodB2G_224();
}

//----- (000000000043FD17) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_52c_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000043FD3D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_52c_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (000000000043FD63) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_52c_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (000000000043FDA5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_square_54c_badSink(a1);
}

//----- (000000000043FDBF) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_square_54c_goodG2BSink(a1);
}

//----- (000000000043FDD9) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_54b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_square_54c_goodB2GSink(a1);
}

//----- (000000000043FDF3) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_63_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_multiply_63b_badSink(&v5);
}
// 43FDF3: using guessed type char buf[16];

//----- (000000000043FEDD) ----------------------------------------------------
int goodG2B_246()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_connect_socket_multiply_63b_goodG2BSink(&v1);
}

//----- (000000000043FF01) ----------------------------------------------------
int goodB2G_225()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_multiply_63b_goodB2GSink(&v5);
}
// 43FF01: using guessed type char buf[16];

//----- (000000000043FFEB) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_63_good()
{
  goodG2B_246();
  return goodB2G_225();
}

//----- (0000000000440005) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_68_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_add_68_badData = v4;
  return CWE190_Integer_Overflow__int64_t_rand_add_68b_badSink();
}
// 6794D8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_add_68_badData;

//----- (00000000004400CB) ----------------------------------------------------
int goodG2B_247()
{
  CWE190_Integer_Overflow__int64_t_rand_add_68_goodG2BData = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_add_68b_goodG2BSink();
}
// 6794D0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_add_68_goodG2BData;

//----- (00000000004400FA) ----------------------------------------------------
int goodB2G_226()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_add_68_goodB2GData = v4;
  return CWE190_Integer_Overflow__int64_t_rand_add_68b_goodB2GSink();
}
// 6794E0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_add_68_goodB2GData;

//----- (00000000004401C0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_68_good()
{
  goodG2B_247();
  return goodB2G_226();
}

//----- (00000000004401DA) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (000000000044020D) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 * *a1);
}

//----- (0000000000440240) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_square_64b_goodB2GSink(int *a1)
{
  int result; // eax
  int v2; // [rsp+14h] [rbp-Ch]

  v2 = *a1;
  if ( *a1 == 0x80000000 || v2 < -46339 || v2 > 46339 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 * v2);
  return result;
}

//----- (000000000044029A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_61_bad()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_rand_square_61b_badSource();
  return printLongLongLine(v0 * v0);
}

//----- (00000000004402D5) ----------------------------------------------------
int goodG2B_248()
{
  __int64 v0; // rax

  v0 = CWE190_Integer_Overflow__int64_t_rand_square_61b_goodG2BSource();
  return printLongLongLine(v0 * v0);
}

//----- (0000000000440310) ----------------------------------------------------
int goodB2G_227()
{
  int result; // eax
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = CWE190_Integer_Overflow__int64_t_rand_square_61b_goodB2GSource();
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (000000000044037A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_61_good()
{
  goodG2B_248();
  return goodB2G_227();
}

//----- (0000000000440394) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_22_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_add_22_badGlobal = 1;
  return CWE190_Integer_Overflow__int_fgets_add_22_badSink(v4);
}
// 6793C4: using guessed type int CWE190_Integer_Overflow__int_fgets_add_22_badGlobal;

//----- (0000000000440406) ----------------------------------------------------
int goodB2G1_154()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_add_22_goodB2G1Global = 0;
  return CWE190_Integer_Overflow__int_fgets_add_22_goodB2G1Sink(v4);
}
// 6793C8: using guessed type int CWE190_Integer_Overflow__int_fgets_add_22_goodB2G1Global;

//----- (0000000000440478) ----------------------------------------------------
int goodB2G2_154()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE190_Integer_Overflow__int_fgets_add_22_goodB2G2Global = 1;
  return CWE190_Integer_Overflow__int_fgets_add_22_goodB2G2Sink(v4);
}
// 6793CC: using guessed type int CWE190_Integer_Overflow__int_fgets_add_22_goodB2G2Global;

//----- (00000000004404EA) ----------------------------------------------------
int goodG2B_249()
{
  CWE190_Integer_Overflow__int_fgets_add_22_goodG2BGlobal = 1;
  return CWE190_Integer_Overflow__int_fgets_add_22_goodG2BSink(2);
}
// 6793D0: using guessed type int CWE190_Integer_Overflow__int_fgets_add_22_goodG2BGlobal;

//----- (0000000000440516) ----------------------------------------------------
int CWE190_Integer_Overflow__int_fgets_add_22_good()
{
  goodB2G1_154();
  goodB2G2_154();
  return goodG2B_249();
}

//----- (000000000044053A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_12_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    v9 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v6 = v9 * v9;
    result = printIntLine(v9 * v9);
  }
  else if ( v9 == 0x80000000 || v9 < -46339 || v9 > 46339 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v5 = v9 * v9;
    result = printIntLine(v9 * v9);
  }
  return result;
}
// 44053A: using guessed type char buf[16];

//----- (0000000000440694) ----------------------------------------------------
int goodB2G_228()
{
  int result; // eax
  char nptr[16]; // [rsp+0h] [rbp-60h]
  struct sockaddr addr; // [rsp+10h] [rbp-50h]
  char buf[16]; // [rsp+20h] [rbp-40h]
  __int16 s; // [rsp+30h] [rbp-30h]
  uint16_t v5; // [rsp+32h] [rbp-2Eh]
  in_addr_t v6; // [rsp+34h] [rbp-2Ch]
  int v7; // [rsp+44h] [rbp-1Ch]
  int v8; // [rsp+48h] [rbp-18h]
  int v9; // [rsp+4Ch] [rbp-14h]
  int v10; // [rsp+50h] [rbp-10h]
  int v11; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v6 = inet_addr("127.0.0.1");
      v5 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v11 = recv(fd, buf, 0xDuLL, 0);
        if ( v11 != -1 )
        {
          if ( v11 )
          {
            buf[v11] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    v10 = socket(2, 1, 6);
    if ( v10 != -1 )
    {
      memset(&addr, 0, 0x10uLL);
      addr.sa_family = 2;
      *(_DWORD *)&addr.sa_data[2] = inet_addr("127.0.0.1");
      *(_WORD *)addr.sa_data = htons(0x6987u);
      if ( connect(v10, &addr, 0x10u) != -1 )
      {
        v9 = recv(v10, nptr, 0xDuLL, 0);
        if ( v9 != -1 )
        {
          if ( v9 )
          {
            nptr[v9] = 0;
            v13 = atoi(nptr);
          }
        }
      }
    }
    if ( v10 != -1 )
      close(v10);
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v13 == 0x80000000 || v13 < -46339 || v13 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v8 = v13 * v13;
      result = printIntLine(v13 * v13);
    }
  }
  else if ( v13 == 0x80000000 || v13 < -46339 || v13 > 46339 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v7 = v13 * v13;
    result = printIntLine(v13 * v13);
  }
  return result;
}
// 440694: using guessed type char buf[16];
// 440694: using guessed type char nptr[16];

//----- (00000000004408E2) ----------------------------------------------------
int goodG2B_250()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(4u);
}

//----- (0000000000440949) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_12_good()
{
  goodB2G_228();
  return goodG2B_250();
}

//----- (0000000000440963) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_12_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    v9 = 2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v6 = v9 + 1;
    result = printIntLine(v9 + 1);
  }
  else if ( v9 == 0x7FFFFFFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v5 = v9 + 1;
    result = printIntLine(v9 + 1);
  }
  return result;
}
// 440963: using guessed type char buf[16];

//----- (0000000000440AA9) ----------------------------------------------------
int goodB2G_229()
{
  int result; // eax
  char nptr[16]; // [rsp+0h] [rbp-60h]
  struct sockaddr addr; // [rsp+10h] [rbp-50h]
  char buf[16]; // [rsp+20h] [rbp-40h]
  __int16 s; // [rsp+30h] [rbp-30h]
  uint16_t v5; // [rsp+32h] [rbp-2Eh]
  in_addr_t v6; // [rsp+34h] [rbp-2Ch]
  int v7; // [rsp+44h] [rbp-1Ch]
  int v8; // [rsp+48h] [rbp-18h]
  int v9; // [rsp+4Ch] [rbp-14h]
  int v10; // [rsp+50h] [rbp-10h]
  int v11; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v6 = inet_addr("127.0.0.1");
      v5 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v11 = recv(fd, buf, 0xDuLL, 0);
        if ( v11 != -1 )
        {
          if ( v11 )
          {
            buf[v11] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    v10 = socket(2, 1, 6);
    if ( v10 != -1 )
    {
      memset(&addr, 0, 0x10uLL);
      addr.sa_family = 2;
      *(_DWORD *)&addr.sa_data[2] = inet_addr("127.0.0.1");
      *(_WORD *)addr.sa_data = htons(0x6987u);
      if ( connect(v10, &addr, 0x10u) != -1 )
      {
        v9 = recv(v10, nptr, 0xDuLL, 0);
        if ( v9 != -1 )
        {
          if ( v9 )
          {
            nptr[v9] = 0;
            v13 = atoi(nptr);
          }
        }
      }
    }
    if ( v10 != -1 )
      close(v10);
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v13 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v8 = v13 + 1;
      result = printIntLine(v13 + 1);
    }
  }
  else if ( v13 == 0x7FFFFFFF )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    v7 = v13 + 1;
    result = printIntLine(v13 + 1);
  }
  return result;
}
// 440AA9: using guessed type char buf[16];
// 440AA9: using guessed type char nptr[16];

//----- (0000000000440CD0) ----------------------------------------------------
int goodG2B_251()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(3u);
}

//----- (0000000000440D35) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_12_good()
{
  goodB2G_229();
  return goodG2B_251();
}

//----- (0000000000440D4F) ----------------------------------------------------
__int64 staticReturnsTrue_8()
{
  return 1LL;
}

//----- (0000000000440D5A) ----------------------------------------------------
__int64 staticReturnsFalse_8()
{
  return 0LL;
}

//----- (0000000000440D65) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_08_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue_8();
  if ( result )
  {
    v5 = v8 * v8;
    result = printIntLine(v8 * v8);
  }
  return result;
}
// 440D65: using guessed type char buf[16];

//----- (0000000000440E77) ----------------------------------------------------
int goodB2G1_155()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( (unsigned int)staticReturnsFalse_8() )
    return printLine("Benign, fixed string");
  if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 * v8;
  return printIntLine(v8 * v8);
}
// 440E77: using guessed type char buf[16];

//----- (0000000000440FBC) ----------------------------------------------------
int goodB2G2_155()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue_8();
  if ( result )
  {
    if ( v8 == 0x80000000 || v8 < -46339 || v8 > 46339 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v8 * v8;
      result = printIntLine(v8 * v8);
    }
  }
  return result;
}
// 440FBC: using guessed type char buf[16];

//----- (00000000004410F5) ----------------------------------------------------
int goodG2B1_133()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_8() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_8();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (0000000000441149) ----------------------------------------------------
int goodG2B2_133()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
    v1 = 2;
  result = staticReturnsTrue_8();
  if ( result )
    result = printIntLine(v1 * v1);
  return result;
}

//----- (0000000000441191) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_08_good()
{
  goodB2G1_155();
  goodB2G2_155();
  goodG2B1_133();
  return goodG2B2_133();
}

//----- (00000000004411BF) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_05_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticTrue_8 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticTrue_8;
  if ( staticTrue_8 )
  {
    if ( v10 > 0 )
      result = printLongLongLine(2 * v10);
  }
  return result;
}
// 679158: using guessed type int staticTrue_8;

//----- (00000000004412A6) ----------------------------------------------------
int goodB2G1_156()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticTrue_8 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticFalse_8;
  if ( staticFalse_8 )
    return printLine("Benign, fixed string");
  if ( v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}
// 679158: using guessed type int staticTrue_8;
// 6793D4: using guessed type int staticFalse_8;

//----- (00000000004413B5) ----------------------------------------------------
int goodB2G2_156()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticTrue_8 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticTrue_8;
  if ( staticTrue_8 && v10 > 0 )
  {
    if ( v10 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * v10);
  }
  return result;
}
// 679158: using guessed type int staticTrue_8;

//----- (00000000004414B8) ----------------------------------------------------
int goodG2B1_134()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFalse_8 )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticTrue_8;
  if ( staticTrue_8 )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}
// 679158: using guessed type int staticTrue_8;
// 6793D4: using guessed type int staticFalse_8;

//----- (0000000000441510) ----------------------------------------------------
int goodG2B2_134()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_8 )
    v1 = 2LL;
  result = staticTrue_8;
  if ( staticTrue_8 )
  {
    if ( v1 > 0 )
      result = printLongLongLine(2 * v1);
  }
  return result;
}
// 679158: using guessed type int staticTrue_8;

//----- (000000000044155C) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_05_good()
{
  goodB2G1_156();
  goodB2G2_156();
  goodG2B1_134();
  return goodG2B2_134();
}

//----- (000000000044158A) ----------------------------------------------------
int __fastcall badSink_40(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (00000000004415B6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_41_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return badSink_40(v4);
}

//----- (0000000000441673) ----------------------------------------------------
int __fastcall goodG2BSink_40(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (000000000044169F) ----------------------------------------------------
int goodG2B_252()
{
  return goodG2BSink_40(2LL);
}

//----- (00000000004416C5) ----------------------------------------------------
int __fastcall goodB2GSink_29(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}

//----- (000000000044170D) ----------------------------------------------------
int goodB2G_230()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return goodB2GSink_29(v4);
}

//----- (00000000004417CA) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_41_good()
{
  goodB2G_230();
  return goodG2B_252();
}

//----- (00000000004417E4) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_add_54c_badSink(a1);
}

//----- (00000000004417FE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_add_54c_goodG2BSink(a1);
}

//----- (0000000000441818) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_add_54b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_add_54c_goodB2GSink(a1);
}

//----- (0000000000441832) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_15_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  __int64 v2; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044187F) ----------------------------------------------------
int goodB2G1_157()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004418F7) ----------------------------------------------------
int goodB2G2_157()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044196F) ----------------------------------------------------
int goodG2B1_135()
{
  return printLongLongLine(4LL);
}

//----- (00000000004419A4) ----------------------------------------------------
int goodG2B2_135()
{
  return printLongLongLine(4LL);
}

//----- (00000000004419D9) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_15_good()
{
  goodB2G1_157();
  goodB2G2_157();
  goodG2B1_135();
  return goodG2B2_135();
}

//----- (0000000000441A07) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_07_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticFive_9 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticFive_9;
  if ( staticFive_9 == 5 )
    result = printLongLongLine(v10 * v10);
  return result;
}
// 67915C: using guessed type int staticFive_9;

//----- (0000000000441AEB) ----------------------------------------------------
int goodB2G1_158()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+18h] [rbp-18h]

  v10 = 0LL;
  if ( staticFive_9 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( staticFive_9 != 5 )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v10) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 * v10);
}
// 67915C: using guessed type int staticFive_9;

//----- (0000000000441C0A) ----------------------------------------------------
int goodB2G2_158()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+18h] [rbp-18h]

  v10 = 0LL;
  if ( staticFive_9 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticFive_9;
  if ( staticFive_9 == 5 )
  {
    if ( (long double)abs64(v10) > 3037000499.9760496924 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 * v10);
  }
  return result;
}
// 67915C: using guessed type int staticFive_9;

//----- (0000000000441D1D) ----------------------------------------------------
int goodG2B1_136()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_9 == 5 )
    v1 = 2LL;
  else
    printLine("Benign, fixed string");
  result = staticFive_9;
  if ( staticFive_9 == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 67915C: using guessed type int staticFive_9;

//----- (0000000000441D72) ----------------------------------------------------
int goodG2B2_136()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_9 == 5 )
    v1 = 2LL;
  result = staticFive_9;
  if ( staticFive_9 == 5 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 67915C: using guessed type int staticFive_9;

//----- (0000000000441DBB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_07_good()
{
  goodB2G1_158();
  goodB2G2_158();
  goodG2B1_136();
  return goodG2B2_136();
}

//----- (0000000000441DE9) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 441DE9: using guessed type char buf[16];

//----- (0000000000441EC6) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int_connect_socket_multiply_61b_goodG2BSource()
{
  return 2LL;
}

//----- (0000000000441ED9) ----------------------------------------------------
__int64 __fastcall CWE190_Integer_Overflow__int_connect_socket_multiply_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 441ED9: using guessed type char buf[16];

//----- (0000000000441FB6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (0000000000441FE8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 + 1);
}

//----- (000000000044201A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_fgets_add_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 + 1);
  return result;
}

//----- (0000000000442061) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_53_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_add_53b_badSink(v4);
}

//----- (000000000044211E) ----------------------------------------------------
int goodG2B_253()
{
  return CWE190_Integer_Overflow__int64_t_rand_add_53b_goodG2BSink(2LL);
}

//----- (0000000000442144) ----------------------------------------------------
int goodB2G_231()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_add_53b_goodB2GSink(v4);
}

//----- (0000000000442201) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_53_good()
{
  goodG2B_253();
  return goodB2G_231();
}

//----- (000000000044221B) ----------------------------------------------------
__int64 __fastcall badSource_8(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%ld", &v2);
  return v2;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044224A) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_42_bad()
{
  __int64 v0; // rax

  v0 = badSource_8(0LL);
  return printLongLongLine(v0 * v0);
}

//----- (0000000000442285) ----------------------------------------------------
__int64 goodG2BSource_8()
{
  return 2LL;
}

//----- (000000000044229B) ----------------------------------------------------
int goodG2B_254()
{
  __int64 v0; // rax

  v0 = goodG2BSource_8();
  return printLongLongLine(v0 * v0);
}

//----- (00000000004422D6) ----------------------------------------------------
__int64 __fastcall goodB2GSource_8(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%ld", &v2);
  return v2;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000442305) ----------------------------------------------------
int goodB2G_232()
{
  int result; // eax
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = goodB2GSource_8(0LL);
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (000000000044236F) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_42_good()
{
  goodB2G_232();
  return goodG2B_254();
}

//----- (0000000000442389) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_34_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 > 0 )
    LODWORD(v4) = printLongLongLine(2 * v4);
  return v4;
}

//----- (0000000000442468) ----------------------------------------------------
int goodG2B_255()
{
  return printLongLongLine(4LL);
}

//----- (00000000004424B0) ----------------------------------------------------
int goodB2G_233()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 > 0 )
  {
    if ( v4 > 4611686018427387902LL )
      LODWORD(v4) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v4) = printLongLongLine(2 * v4);
  }
  return v4;
}

//----- (00000000004425AB) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_34_good()
{
  goodG2B_255();
  return goodB2G_233();
}

//----- (00000000004425C5) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_66b_badSink(__int64 a1)
{
  __int64 v1; // rax
  __int64 v3; // [rsp+18h] [rbp-8h]

  v1 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 16);
  if ( v3 > 0 )
    LODWORD(v1) = printLongLongLine(2 * v3);
  return v1;
}

//----- (00000000004425FD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_66b_goodG2BSink(__int64 a1)
{
  __int64 v1; // rax
  __int64 v3; // [rsp+18h] [rbp-8h]

  v1 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 16);
  if ( v3 > 0 )
    LODWORD(v1) = printLongLongLine(2 * v3);
  return v1;
}

//----- (0000000000442635) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_multiply_66b_goodB2GSink(__int64 a1)
{
  __int64 v1; // rax
  __int64 v3; // [rsp+18h] [rbp-8h]

  v1 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 16);
  if ( v3 > 0 )
  {
    if ( v3 > 4611686018427387902LL )
      LODWORD(v1) = printLine("data value is too large to perform arithmetic safely.");
    else
      LODWORD(v1) = printLongLongLine(2 * v3);
  }
  return v1;
}

//----- (0000000000442689) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_52b_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_52c_badSink(a1);
}

//----- (00000000004426A3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_52b_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_52c_goodG2BSink(a1);
}

//----- (00000000004426BD) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_52b_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_52c_goodB2GSink(a1);
}

//----- (00000000004426D7) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_54_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_square_54b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000442703) ----------------------------------------------------
int goodG2B_256()
{
  return CWE190_Integer_Overflow__int64_t_max_square_54b_goodG2BSink(2LL);
}

//----- (0000000000442729) ----------------------------------------------------
int goodB2G_234()
{
  return CWE190_Integer_Overflow__int64_t_max_square_54b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000442755) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_54_good()
{
  goodG2B_256();
  return goodB2G_234();
}

//----- (000000000044276F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_64_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_square_64b_badSink(&v5);
}
// 44276F: using guessed type char buf[16];

//----- (0000000000442859) ----------------------------------------------------
int goodG2B_257()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2;
  return CWE190_Integer_Overflow__int_connect_socket_square_64b_goodG2BSink(&v1);
}

//----- (000000000044287D) ----------------------------------------------------
int goodB2G_235()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_square_64b_goodB2GSink(&v5);
}
// 44287D: using guessed type char buf[16];

//----- (0000000000442967) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_64_good()
{
  goodG2B_257();
  return goodB2G_235();
}

//----- (0000000000442981) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_11_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    v5 = v8 + 1;
    result = printIntLine(v8 + 1);
  }
  return result;
}
// 442981: using guessed type char buf[16];

//----- (0000000000442A92) ----------------------------------------------------
int goodB2G1_159()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 442A92: using guessed type char buf[16];

//----- (0000000000442BC4) ----------------------------------------------------
int goodB2G2_159()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v8 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v8 + 1;
      result = printIntLine(v8 + 1);
    }
  }
  return result;
}
// 442BC4: using guessed type char buf[16];

//----- (0000000000442CEA) ----------------------------------------------------
int goodG2B1_137()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000442D3D) ----------------------------------------------------
int goodG2B2_137()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (0000000000442D84) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_11_good()
{
  goodB2G1_159();
  goodB2G2_159();
  goodG2B1_137();
  return goodG2B2_137();
}

//----- (0000000000442DB2) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_02_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 442DB2: using guessed type char buf[16];

//----- (0000000000442EA3) ----------------------------------------------------
int goodB2G1_160()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 442EA3: using guessed type char buf[16];

//----- (0000000000442FA9) ----------------------------------------------------
int goodB2G2_160()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 442FA9: using guessed type char buf[16];

//----- (00000000004430AF) ----------------------------------------------------
int goodG2B1_138()
{
  return printIntLine(3u);
}

//----- (00000000004430DA) ----------------------------------------------------
int goodG2B2_138()
{
  return printIntLine(3u);
}

//----- (0000000000443105) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_02_good()
{
  goodB2G1_160();
  goodB2G2_160();
  goodG2B1_138();
  return goodG2B2_138();
}

//----- (0000000000443133) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_68b_badSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_connect_socket_add_68_badData + 1);
}
// 679448: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_68_badData;

//----- (0000000000443159) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_68b_goodG2BSink()
{
  return printIntLine(CWE190_Integer_Overflow__int_connect_socket_add_68_goodG2BData + 1);
}
// 679450: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_68_goodG2BData;

//----- (000000000044317F) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int_connect_socket_add_68_goodB2GData == 0x7FFFFFFF )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE190_Integer_Overflow__int_connect_socket_add_68_goodB2GData + 1);
  return result;
}
// 67944C: using guessed type int CWE190_Integer_Overflow__int_connect_socket_add_68_goodB2GData;

//----- (00000000004431BA) ----------------------------------------------------
void CWE190_Integer_Overflow__int_connect_socket_multiply_17_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  in_addr_t v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+28h] [rbp-18h]
  int v5; // [rsp+2Ch] [rbp-14h]
  int fd; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = inet_addr("127.0.0.1");
      v2 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v7 > 0 )
    {
      v4 = 2 * v7;
      printIntLine(2 * v7);
    }
  }
}
// 4431BA: using guessed type char buf[16];

//----- (00000000004432DD) ----------------------------------------------------
void goodB2G_236()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  in_addr_t v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+28h] [rbp-18h]
  int v5; // [rsp+2Ch] [rbp-14h]
  int fd; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = inet_addr("127.0.0.1");
      v2 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v7 > 0 )
    {
      if ( v7 > 1073741822 )
      {
        printLine("data value is too large to perform arithmetic safely.");
      }
      else
      {
        v4 = 2 * v7;
        printIntLine(2 * v7);
      }
    }
  }
}
// 4432DD: using guessed type char buf[16];

//----- (0000000000443415) ----------------------------------------------------
int goodG2B_258()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 > 0 )
      result = printIntLine(2 * v1);
  }
  return result;
}

//----- (000000000044346B) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_17_good()
{
  goodB2G_236();
  return goodG2B_258();
}

//----- (0000000000443485) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_65b_badSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (00000000004434AC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_65b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (00000000004434D3) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_65b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (0000000000443529) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_05_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]
  __int64 v2; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_9 )
    __isoc99_fscanf(stdin, &unk_45B6B0, &v1);
  result = staticTrue_9;
  if ( staticTrue_9 )
  {
    v2 = v1 * v1;
    result = printLongLongLine(v1 * v1);
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 679160: using guessed type int staticTrue_9;

//----- (0000000000443588) ----------------------------------------------------
int goodB2G1_161()
{
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_9 )
    __isoc99_fscanf(stdin, &unk_45B6B0, &v1);
  if ( staticFalse_9 )
    return printLine("Benign, fixed string");
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 679160: using guessed type int staticTrue_9;
// 6793D8: using guessed type int staticFalse_9;

//----- (000000000044361E) ----------------------------------------------------
int goodB2G2_161()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_9 )
    __isoc99_fscanf(stdin, &unk_45B6B0, &v1);
  result = staticTrue_9;
  if ( staticTrue_9 )
  {
    if ( (long double)abs64(v1) > 3037000499.9760496924 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = v1 * v1;
      result = printLongLongLine(v1 * v1);
    }
  }
  return result;
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 679160: using guessed type int staticTrue_9;

//----- (00000000004436A8) ----------------------------------------------------
int goodG2B1_139()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFalse_9 )
    printLine("Benign, fixed string");
  else
    v1 = 2LL;
  result = staticTrue_9;
  if ( staticTrue_9 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679160: using guessed type int staticTrue_9;
// 6793D8: using guessed type int staticFalse_9;

//----- (00000000004436FB) ----------------------------------------------------
int goodG2B2_139()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_9 )
    v1 = 2LL;
  result = staticTrue_9;
  if ( staticTrue_9 )
    result = printLongLongLine(v1 * v1);
  return result;
}
// 679160: using guessed type int staticTrue_9;

//----- (0000000000443742) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_05_good()
{
  goodB2G1_161();
  goodB2G2_161();
  goodG2B1_139();
  return goodG2B2_139();
}

//----- (0000000000443770) ----------------------------------------------------
int __fastcall badSink_41(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (0000000000443797) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_41_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_45B720, &v1);
  return badSink_41(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004437D2) ----------------------------------------------------
int __fastcall goodG2BSink_41(__int64 a1)
{
  return printLongLongLine(a1 * a1);
}

//----- (00000000004437F9) ----------------------------------------------------
int goodG2B_259()
{
  return goodG2BSink_41(2LL);
}

//----- (000000000044381F) ----------------------------------------------------
int __fastcall goodB2GSink_30(__int64 a1)
{
  int result; // eax

  if ( (long double)abs64(a1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 * a1);
  return result;
}

//----- (0000000000443875) ----------------------------------------------------
int goodB2G_237()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_45B720, &v1);
  return goodB2GSink_30(v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004438B0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_41_good()
{
  goodB2G_237();
  return goodG2B_259();
}

//----- (00000000004438CA) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_51_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_multiply_51b_badSink(v7);
}
// 4438CA: using guessed type char buf[16];

//----- (00000000004439B2) ----------------------------------------------------
int goodG2B_260()
{
  return CWE190_Integer_Overflow__int_connect_socket_multiply_51b_goodG2BSink(2);
}

//----- (00000000004439D4) ----------------------------------------------------
int goodB2G_238()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE190_Integer_Overflow__int_connect_socket_multiply_51b_goodB2GSink(v7);
}
// 4439D4: using guessed type char buf[16];

//----- (0000000000443ABC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_51_good()
{
  goodG2B_260();
  return goodB2G_238();
}

//----- (0000000000443AD6) ----------------------------------------------------
int badSink_42()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_rand_add_45_badData + 1);
}
// 6793E0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_add_45_badData;

//----- (0000000000443B03) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_45_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_add_45_badData = v4;
  return badSink_42();
}
// 6793E0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_add_45_badData;

//----- (0000000000443BC9) ----------------------------------------------------
int goodG2BSink_42()
{
  return printLongLongLine(CWE190_Integer_Overflow__int64_t_rand_add_45_goodG2BData + 1);
}
// 6793E8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_add_45_goodG2BData;

//----- (0000000000443BF6) ----------------------------------------------------
int goodG2B_261()
{
  CWE190_Integer_Overflow__int64_t_rand_add_45_goodG2BData = 2LL;
  return goodG2BSink_42();
}
// 6793E8: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_add_45_goodG2BData;

//----- (0000000000443C25) ----------------------------------------------------
int goodB2GSink_31()
{
  int result; // eax

  if ( CWE190_Integer_Overflow__int64_t_rand_add_45_goodB2GData == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE190_Integer_Overflow__int64_t_rand_add_45_goodB2GData + 1);
  return result;
}
// 6793F0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_add_45_goodB2GData;

//----- (0000000000443C6E) ----------------------------------------------------
int goodB2G_239()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE190_Integer_Overflow__int64_t_rand_add_45_goodB2GData = v4;
  return goodB2GSink_31();
}
// 6793F0: using guessed type __int64 CWE190_Integer_Overflow__int64_t_rand_add_45_goodB2GData;

//----- (0000000000443D34) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_45_good()
{
  goodG2B_261();
  return goodB2G_239();
}

//----- (0000000000443D4E) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54c_badSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_add_54d_badSink(a1);
}

//----- (0000000000443D65) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54c_goodG2BSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_add_54d_goodG2BSink(a1);
}

//----- (0000000000443D7C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int_connect_socket_add_54c_goodB2GSink(int a1)
{
  return CWE190_Integer_Overflow__int_connect_socket_add_54d_goodB2GSink(a1);
}

//----- (0000000000443D93) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_add_65_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))CWE190_Integer_Overflow__int64_t_rand_add_65b_badSink)(v4);
}

//----- (0000000000443E59) ----------------------------------------------------
int goodG2B_262()
{
  return CWE190_Integer_Overflow__int64_t_rand_add_65b_goodG2BSink(2LL);
}

//----- (0000000000443E88) ----------------------------------------------------
__int64 goodB2G_240()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))CWE190_Integer_Overflow__int64_t_rand_add_65b_goodB2GSink)(v4);
}

//----- (0000000000443F4E) ----------------------------------------------------
__int64 CWE190_Integer_Overflow__int64_t_rand_add_65_good()
{
  goodG2B_262();
  return goodB2G_240();
}

//----- (0000000000443F68) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_52_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_52b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000443F94) ----------------------------------------------------
int goodG2B_263()
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_52b_goodG2BSink(2LL);
}

//----- (0000000000443FBA) ----------------------------------------------------
int goodB2G_241()
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_52b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000443FE6) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_52_good()
{
  goodG2B_263();
  return goodB2G_241();
}

//----- (0000000000444000) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_66_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  char v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+10h] [rbp-30h]
  __int64 v12; // [rsp+28h] [rbp-18h]

  v12 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v12 = v4;
  v11 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_multiply_66b_badSink((__int64)&v10);
}

//----- (00000000004440C5) ----------------------------------------------------
int goodG2B_264()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 2LL;
  v2 = 2LL;
  return CWE190_Integer_Overflow__int64_t_rand_multiply_66b_goodG2BSink((__int64)&v1);
}

//----- (00000000004440F3) ----------------------------------------------------
int goodB2G_242()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  char v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+10h] [rbp-30h]
  __int64 v12; // [rsp+28h] [rbp-18h]

  v12 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v12 = v4;
  v11 = v4;
  return CWE190_Integer_Overflow__int64_t_rand_multiply_66b_goodB2GSink((__int64)&v10);
}

//----- (00000000004441B8) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_multiply_66_good()
{
  goodG2B_264();
  return goodB2G_242();
}

//----- (00000000004441D2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_51b_badSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (00000000004441FE) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_51b_goodG2BSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
    result = printLongLongLine(2 * a1);
  return result;
}

//----- (000000000044422A) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_multiply_51b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 > 0 )
  {
    if ( a1 > 4611686018427387902LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(2 * a1);
  }
  return result;
}

//----- (0000000000444272) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_53c_badSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_square_53d_badSink(a1);
}

//----- (000000000044428C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_53c_goodG2BSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_square_53d_goodG2BSink(a1);
}

//----- (00000000004442A6) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_max_square_53c_goodB2GSink(__int64 a1)
{
  return CWE190_Integer_Overflow__int64_t_max_square_53d_goodB2GSink(a1);
}

//----- (00000000004442C0) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_34_bad()
{
  __int64 v1; // [rsp+8h] [rbp-18h]
  __int64 v2; // [rsp+10h] [rbp-10h]
  __int64 v3; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  v3 = v1;
  v2 = v1 * v1;
  return printLongLongLine(v1 * v1);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000444318) ----------------------------------------------------
int goodG2B_265()
{
  return printLongLongLine(4LL);
}

//----- (000000000044435B) ----------------------------------------------------
int goodB2G_243()
{
  __int64 v1; // [rsp+18h] [rbp-18h]
  __int64 v2; // [rsp+20h] [rbp-10h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  v3 = v1;
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    return printLine("data value is too large to perform arithmetic safely.");
  v2 = v3 * v3;
  return printLongLongLine(v3 * v3);
}
// 400B90: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004443E2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_fscanf_square_34_good()
{
  goodG2B_265();
  return goodB2G_243();
}

//----- (00000000004443FC) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_16_bad()
{
  return printLongLongLine(-2LL);
}

//----- (000000000044443C) ----------------------------------------------------
int goodB2G_244()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000444498) ----------------------------------------------------
int goodG2B_266()
{
  return printLongLongLine(4LL);
}

//----- (00000000004444D2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_16_good()
{
  goodB2G_244();
  return goodG2B_266();
}

//----- (00000000004444EC) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_66b_badSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) * *(_QWORD *)(a1 + 16));
}

//----- (000000000044451F) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_66b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) * *(_QWORD *)(a1 + 16));
}

//----- (0000000000444552) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_fscanf_square_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+18h] [rbp-8h]

  v2 = *(_QWORD *)(a1 + 16);
  if ( (long double)abs64(v2) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 * v2);
  return result;
}

//----- (00000000004445B4) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_65_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_square_65b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (00000000004445E9) ----------------------------------------------------
int goodG2B_267()
{
  return CWE190_Integer_Overflow__int64_t_max_square_65b_goodG2BSink(2LL);
}

//----- (0000000000444618) ----------------------------------------------------
int goodB2G_245()
{
  return CWE190_Integer_Overflow__int64_t_max_square_65b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000044464D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_square_65_good()
{
  goodG2B_267();
  return goodB2G_245();
}

//----- (0000000000444667) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_52_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_add_52b_badSink(v4);
}

//----- (0000000000444724) ----------------------------------------------------
int goodG2B_268()
{
  return CWE190_Integer_Overflow__int64_t_rand_add_52b_goodG2BSink(2LL);
}

//----- (000000000044474A) ----------------------------------------------------
int goodB2G_246()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE190_Integer_Overflow__int64_t_rand_add_52b_goodB2GSink(v4);
}

//----- (0000000000444807) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_52_good()
{
  goodG2B_268();
  return goodB2G_246();
}

//----- (0000000000444821) ----------------------------------------------------
__int64 badSource_9()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (00000000004448D2) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_42_bad()
{
  __int64 v0; // rax

  v0 = badSource_9();
  return printLongLongLine(v0 * v0);
}

//----- (000000000044490D) ----------------------------------------------------
__int64 goodG2BSource_9()
{
  return 2LL;
}

//----- (0000000000444923) ----------------------------------------------------
int goodG2B_269()
{
  __int64 v0; // rax

  v0 = goodG2BSource_9();
  return printLongLongLine(v0 * v0);
}

//----- (000000000044495E) ----------------------------------------------------
__int64 goodB2GSource_9()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (0000000000444A0F) ----------------------------------------------------
int goodB2G_247()
{
  int result; // eax
  __int64 v1; // [rsp+18h] [rbp-8h]

  v1 = goodB2GSource_9();
  if ( (long double)abs64(v1) > 3037000499.9760496924 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 * v1);
  return result;
}

//----- (0000000000444A79) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_square_42_good()
{
  goodB2G_247();
  return goodG2B_269();
}

//----- (0000000000444A93) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_09_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v5 = v8 + 1;
    result = printIntLine(v8 + 1);
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 444A93: using guessed type char buf[16];

//----- (0000000000444B9C) ----------------------------------------------------
int goodB2G1_162()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;
// 444B9C: using guessed type char buf[16];

//----- (0000000000444CC6) ----------------------------------------------------
int goodB2G2_162()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v8 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v8 + 1;
      result = printIntLine(v8 + 1);
    }
  }
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 444CC6: using guessed type char buf[16];

//----- (0000000000444DE4) ----------------------------------------------------
int goodG2B1_140()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;
// 45BAE8: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000444E2F) ----------------------------------------------------
int goodG2B2_140()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 + 1);
  return result;
}
// 45BAE4: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000444E6E) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_09_good()
{
  goodB2G1_162();
  goodB2G2_162();
  goodG2B1_140();
  return goodG2B2_140();
}

//----- (0000000000444E9C) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_51b_badSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000444EC2) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_51b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 + 1);
}

//----- (0000000000444EE8) ----------------------------------------------------
int __fastcall CWE190_Integer_Overflow__int64_t_rand_add_51b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 + 1);
  return result;
}

//----- (0000000000444F2A) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_66_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE190_Integer_Overflow__int_connect_socket_square_66b_badSink((__int64)&v5);
}
// 444F2A: using guessed type char buf[16];

//----- (000000000044501A) ----------------------------------------------------
int goodG2B_270()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2;
  v2 = 2;
  return CWE190_Integer_Overflow__int_connect_socket_square_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000445044) ----------------------------------------------------
int goodB2G_248()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE190_Integer_Overflow__int_connect_socket_square_66b_goodB2GSink((__int64)&v5);
}
// 445044: using guessed type char buf[16];

//----- (0000000000445134) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_square_66_good()
{
  goodG2B_270();
  return goodB2G_248();
}

//----- (000000000044514E) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_51_bad()
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_51b_badSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000044517A) ----------------------------------------------------
int goodG2B_271()
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_51b_goodG2BSink(2LL);
}

//----- (00000000004451A0) ----------------------------------------------------
int goodB2G_249()
{
  return CWE190_Integer_Overflow__int64_t_max_multiply_51b_goodB2GSink(0x7FFFFFFFFFFFFFFFLL);
}

//----- (00000000004451CC) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_max_multiply_51_good()
{
  goodG2B_271();
  return goodB2G_249();
}

//----- (00000000004451E6) ----------------------------------------------------
__int64 staticReturnsTrue_9()
{
  return 1LL;
}

//----- (00000000004451F1) ----------------------------------------------------
__int64 staticReturnsFalse_9()
{
  return 0LL;
}

//----- (00000000004451FC) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_08_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)staticReturnsTrue_9() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue_9();
  if ( result )
  {
    v5 = v8 + 1;
    result = printIntLine(v8 + 1);
  }
  return result;
}
// 4451FC: using guessed type char buf[16];

//----- (000000000044530D) ----------------------------------------------------
int goodB2G1_163()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)staticReturnsTrue_9() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( (unsigned int)staticReturnsFalse_9() )
    return printLine("Benign, fixed string");
  if ( v8 == 0x7FFFFFFF )
    return printLine("data value is too large to perform arithmetic safely.");
  v5 = v8 + 1;
  return printIntLine(v8 + 1);
}
// 44530D: using guessed type char buf[16];

//----- (000000000044543F) ----------------------------------------------------
int goodB2G2_163()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)staticReturnsTrue_9() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue_9();
  if ( result )
  {
    if ( v8 == 0x7FFFFFFF )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v5 = v8 + 1;
      result = printIntLine(v8 + 1);
    }
  }
  return result;
}
// 44543F: using guessed type char buf[16];

//----- (0000000000445565) ----------------------------------------------------
int goodG2B1_141()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_9() )
    printLine("Benign, fixed string");
  else
    v1 = 2;
  result = staticReturnsTrue_9();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (00000000004455B8) ----------------------------------------------------
int goodG2B2_141()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_9() )
    v1 = 2;
  result = staticReturnsTrue_9();
  if ( result )
    result = printIntLine(v1 + 1);
  return result;
}

//----- (00000000004455FF) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_add_08_good()
{
  goodB2G1_163();
  goodB2G2_163();
  goodG2B1_141();
  return goodG2B2_141();
}

//----- (000000000044562D) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_16_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 + 1);
}

//----- (00000000004456F8) ----------------------------------------------------
int goodB2G_250()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x7FFFFFFFFFFFFFFFLL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 + 1);
  return result;
}

//----- (00000000004457DF) ----------------------------------------------------
int goodG2B_272()
{
  return printLongLongLine(3LL);
}

//----- (0000000000445813) ----------------------------------------------------
int CWE190_Integer_Overflow__int64_t_rand_add_16_good()
{
  goodB2G_250();
  return goodG2B_272();
}

//----- (000000000044582D) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_61_bad()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_multiply_61b_badSource(0);
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (0000000000445863) ----------------------------------------------------
int goodG2B_273()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_multiply_61b_goodG2BSource();
  if ( result > 0 )
    result = printIntLine(2 * result);
  return result;
}

//----- (0000000000445899) ----------------------------------------------------
int goodB2G_251()
{
  int result; // eax

  result = CWE190_Integer_Overflow__int_connect_socket_multiply_61b_goodB2GSource(0);
  if ( result > 0 )
  {
    if ( result > 1073741822 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(2 * result);
  }
  return result;
}

//----- (00000000004458E4) ----------------------------------------------------
int CWE190_Integer_Overflow__int_connect_socket_multiply_61_good()
{
  goodG2B_273();
  return goodB2G_251();
}

//----- (00000000004458FE) ----------------------------------------------------
int __fastcall printLine(const char *a1)
{
  int result; // eax

  if ( a1 )
    result = puts(a1);
  return result;
}

//----- (000000000044591F) ----------------------------------------------------
int __fastcall printWLine(__int64 a1)
{
  int result; // eax

  if ( a1 )
    result = wprintf("%", a1);
  return result;
}

//----- (000000000044594A) ----------------------------------------------------
int __fastcall printIntLine(unsigned int a1)
{
  return printf("%d\n", a1);
}

//----- (000000000044596B) ----------------------------------------------------
int __fastcall printShortLine(__int16 a1)
{
  return printf("%hd\n", (unsigned int)a1);
}

//----- (0000000000445990) ----------------------------------------------------
int __fastcall printFloatLine(float a1)
{
  return printf("%f\n", a1);
}

//----- (00000000004459B6) ----------------------------------------------------
int __fastcall printLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (00000000004459DA) ----------------------------------------------------
int __fastcall printLongLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (00000000004459FE) ----------------------------------------------------
int __fastcall printSizeTLine(__int64 a1)
{
  return printf("%zu\n", a1);
}

//----- (0000000000445A22) ----------------------------------------------------
int __fastcall printHexCharLine(char a1)
{
  return printf("%02x\n", (unsigned int)a1);
}

//----- (0000000000445A46) ----------------------------------------------------
int __fastcall printWcharLine(int a1)
{
  int v2; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+14h] [rbp-Ch]

  v2 = a1;
  v3 = 0;
  return printf("%ls\n", &v2);
}

//----- (0000000000445A76) ----------------------------------------------------
int __fastcall printUnsignedLine(unsigned int a1)
{
  return printf("%u\n", a1);
}

//----- (0000000000445A97) ----------------------------------------------------
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1)
{
  return printf("%02x\n", a1);
}

//----- (0000000000445ABB) ----------------------------------------------------
int __fastcall printDoubleLine(double a1)
{
  return printf("%g\n", a1);
}

//----- (0000000000445AE6) ----------------------------------------------------
int __fastcall printStructLine(unsigned int *a1)
{
  return printf("%d -- %d\n", *a1, a1[1]);
}

//----- (0000000000445B12) ----------------------------------------------------
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2)
{
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; i < a2; ++i )
    printf("%02x", *(unsigned __int8 *)(a1 + i));
  return puts(s);
}

//----- (0000000000445B69) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL;
        i < a2
     && (*__ctype_b_loc())[*(char *)(2 * i + v4)] & 0x1000
     && (*__ctype_b_loc())[*(char *)(2 * i + 1 + v4)] & 0x1000;
        ++i )
  {
    __isoc99_sscanf(2 * i + v4, "%02x", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400BC0: using guessed type __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000445C42) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL; i < a2 && iswxdigit(*(_DWORD *)(8 * i + v4)) && iswxdigit(*(_DWORD *)(8 * i + 4 + v4)); ++i )
  {
    __isoc99_swscanf(8 * i + v4, "%", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400CC0: using guessed type __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000445CF6) ----------------------------------------------------
__int64 globalReturnsTrue()
{
  return 1LL;
}

//----- (0000000000445D01) ----------------------------------------------------
__int64 globalReturnsFalse()
{
  return 0LL;
}

//----- (0000000000445D0C) ----------------------------------------------------
__int64 globalReturnsTrueOrFalse()
{
  return (unsigned int)(rand() % 2);
}

//----- (0000000000445D22) ----------------------------------------------------
void good1()
{
  ;
}

//----- (0000000000445D28) ----------------------------------------------------
void good2()
{
  ;
}

//----- (0000000000445D2E) ----------------------------------------------------
void good3()
{
  ;
}

//----- (0000000000445D34) ----------------------------------------------------
void good4()
{
  ;
}

//----- (0000000000445D3A) ----------------------------------------------------
void good5()
{
  ;
}

//----- (0000000000445D40) ----------------------------------------------------
void good6()
{
  ;
}

//----- (0000000000445D46) ----------------------------------------------------
void good7()
{
  ;
}

//----- (0000000000445D4C) ----------------------------------------------------
void good8()
{
  ;
}

//----- (0000000000445D52) ----------------------------------------------------
void good9()
{
  ;
}

//----- (0000000000445D58) ----------------------------------------------------
void bad1()
{
  ;
}

//----- (0000000000445D5E) ----------------------------------------------------
void bad2()
{
  ;
}

//----- (0000000000445D64) ----------------------------------------------------
void bad3()
{
  ;
}

//----- (0000000000445D6A) ----------------------------------------------------
void bad4()
{
  ;
}

//----- (0000000000445D70) ----------------------------------------------------
void bad5()
{
  ;
}

//----- (0000000000445D76) ----------------------------------------------------
void bad6()
{
  ;
}

//----- (0000000000445D7C) ----------------------------------------------------
void bad7()
{
  ;
}

//----- (0000000000445D82) ----------------------------------------------------
void bad8()
{
  ;
}

//----- (0000000000445D88) ----------------------------------------------------
void bad9()
{
  ;
}

//----- (0000000000445D8E) ----------------------------------------------------
void __fastcall __noreturn internal_start(void *a1)
{
  (*((void (__fastcall **)(_QWORD))a1 + 1))(*((_QWORD *)a1 + 2));
  pthread_exit(0LL);
}

//----- (0000000000445DC1) ----------------------------------------------------
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3)
{
  __int64 result; // rax
  void **v4; // [rsp+8h] [rbp-28h]
  pthread_t newthread; // [rsp+20h] [rbp-10h]
  void *arg; // [rsp+28h] [rbp-8h]

  v4 = a3;
  *a3 = 0LL;
  arg = malloc(0x18uLL);
  if ( !arg )
    return 0LL;
  *((_QWORD *)arg + 1) = a1;
  *((_QWORD *)arg + 2) = a2;
  if ( pthread_create(&newthread, 0LL, (void *(*)(void *))internal_start, arg) )
  {
    free(arg);
    result = 0LL;
  }
  else
  {
    *(_QWORD *)arg = newthread;
    *v4 = arg;
    result = 1LL;
  }
  return result;
}

//----- (0000000000445E65) ----------------------------------------------------
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1)
{
  void *thread_return; // [rsp+18h] [rbp-8h]

  return pthread_join(*a1, &thread_return) == 0;
}

//----- (0000000000445E99) ----------------------------------------------------
__int64 __fastcall stdThreadDestroy(void *a1)
{
  free(a1);
  return 1LL;
}

//----- (0000000000445EB8) ----------------------------------------------------
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1)
{
  __int64 result; // rax
  pthread_mutex_t *mutex; // [rsp+18h] [rbp-8h]

  *a1 = 0LL;
  mutex = (pthread_mutex_t *)malloc(0x28uLL);
  if ( !mutex )
    return 0LL;
  if ( pthread_mutex_init(mutex, 0LL) )
  {
    free(a1);
    result = 0LL;
  }
  else
  {
    *a1 = mutex;
    result = 1LL;
  }
  return result;
}

//----- (0000000000445F2D) ----------------------------------------------------
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1)
{
  return pthread_mutex_lock(a1);
}

//----- (0000000000445F47) ----------------------------------------------------
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1)
{
  return pthread_mutex_unlock(a1);
}

//----- (0000000000445F61) ----------------------------------------------------
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1)
{
  pthread_mutex_destroy(a1);
  free(a1);
}

//----- (0000000000445F90) ----------------------------------------------------
void _libc_csu_init(void)
{
  __int64 v0; // rbx
  signed __int64 v1; // rbp

  v0 = 0LL;
  v1 = &_do_global_dtors_aux_fini_array_entry - _frame_dummy_init_array_entry;
  init_proc();
  if ( v1 )
  {
    do
      _frame_dummy_init_array_entry[v0++]();
    while ( v0 != v1 );
  }
}
// 678DD0: using guessed type __int64 (__fastcall *_frame_dummy_init_array_entry[2])();
// 678DD8: using guessed type __int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)();

//----- (0000000000446004) ----------------------------------------------------
void term_proc()
{
  ;
}

// ALL OK, 2839 function(s) have been successfully decompiled
