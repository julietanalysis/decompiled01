/* This file was generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2018 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

void *init_proc();
__int64 sub_400950();
// int printf(const char *format, ...);
// int puts(const char *s);
// __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD); weak
// void __noreturn exit(int status);
// void *malloc(size_t size);
// int __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end);
// int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr);
// int iswxdigit(wint_t wc);
// void free(void *ptr);
// int pthread_create(pthread_t *newthread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);
// const unsigned __int16 **__ctype_b_loc(void);
// int pthread_join(pthread_t th, void **thread_return);
// void __noreturn pthread_exit(void *retval);
// int wprintf(const wchar_t *format, ...);
// __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD); weak
// void srand(unsigned int seed);
// int pthread_mutex_lock(pthread_mutex_t *mutex);
// int rand(void);
// int pthread_mutex_destroy(pthread_mutex_t *mutex);
// int pthread_mutex_unlock(pthread_mutex_t *mutex);
// void *memcpy(void *dest, const void *src, size_t n);
// time_t time(time_t *timer);
// __int64 _gmon_start__(void); weak
// void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>);
__int64 deregister_tm_clones();
__int64 register_tm_clones();
__int64 _do_global_dtors_aux();
__int64 frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54_bad();
void goodG2B();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61_bad();
void goodG2B_0();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_16_bad();
void goodG2B_1();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_16_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_09_bad();
void goodG2B1();
void goodG2B2();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_09_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_65b_badSink(_DWORD *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_65b_goodG2BSink(_DWORD *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_09_bad();
void goodG2B1_0();
void goodG2B2_0();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_09_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53c_badSink(_DWORD *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53c_goodG2BSink(_DWORD *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_15_bad();
void goodG2B1_1();
void goodG2B2_1();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_15_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68b_badSink();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68b_goodG2BSink();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_67_bad();
void goodG2B_2();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_67_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_15_bad();
void goodG2B1_2();
void goodG2B2_2();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_15_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_07_bad();
void goodG2B1_3();
void goodG2B2_3();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_07_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_05_bad();
void goodG2B1_4();
void goodG2B2_4();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_05_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_41_badSink(_DWORD *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_41_bad();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_41_goodG2BSink(_DWORD *a1);
void goodG2B_3();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_41_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52c_badSink(_DWORD *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52c_goodG2BSink(_DWORD *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_bad();
void goodG2B_4();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_bad();
void goodG2B_5();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_51b_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_51b_goodG2BSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_66b_badSink(__int64 a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_66b_goodG2BSink(__int64 a1);
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_65_bad();
__int64 goodG2B_6();
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_65_good();
void *__fastcall badSource(void *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_21_bad();
void *__fastcall goodG2B1Source(void *a1);
void goodG2B1_5();
void *__fastcall goodG2B2Source(void *a1);
void goodG2B2_5();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_21_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53_bad();
void goodG2B_7();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53_good();
void *badSource_0();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_42_bad();
void *goodG2BSource();
void goodG2B_8();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_42_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54e_badSink(_DWORD *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54e_goodG2BSink(_DWORD *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_66_bad();
void goodG2B_9();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_66_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68b_badSink();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68b_goodG2BSink();
__int64 staticReturnsTrue();
__int64 staticReturnsFalse();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_08_bad();
void goodG2B1_6();
void goodG2B2_6();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_08_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52b_badSink(_DWORD *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52b_goodG2BSink(_DWORD *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_05_bad();
void goodG2B1_7();
void goodG2B2_7();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_05_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_41_badSink(unsigned int *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_41_bad();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_41_goodG2BSink(unsigned int *a1);
void goodG2B_10();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_41_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53b_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53b_goodG2BSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52c_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52c_goodG2BSink(unsigned int *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68_bad();
void goodG2B_11();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_34_bad();
void goodG2B_12();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_34_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_51_bad();
void goodG2B_13();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_51_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52_bad();
void goodG2B_14();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53b_badSink(_DWORD *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53b_goodG2BSink(_DWORD *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53_bad();
void goodG2B_15();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54e_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54e_goodG2BSink(unsigned int *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_66_bad();
void goodG2B_16();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_66_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_51_bad();
void goodG2B_17();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_51_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52b_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52b_goodG2BSink(unsigned int *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_06_bad();
void goodG2B1_8();
void goodG2B2_8();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_06_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52_bad();
void goodG2B_18();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54b_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54b_goodG2BSink(unsigned int *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_16_bad();
void goodG2B_19();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_16_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_64b_badSink(void **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_64b_goodG2BSink(void **a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_14_bad();
void goodG2B1_9();
void goodG2B2_9();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_14_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_32_bad();
void goodG2B_20();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_32_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_11_bad();
void goodG2B1_10();
void goodG2B2_10();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_11_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_67b_badSink(void *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_67b_goodG2BSink(void *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_64_bad();
void goodG2B_21();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_64_good();
void badSink();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_45_bad();
void goodG2BSink();
void goodG2B_22();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_45_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_06_bad();
void goodG2B1_11();
void goodG2B2_11();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_06_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_04_bad();
void goodG2B1_12();
void goodG2B2_12();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_04_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_31_bad();
void goodG2B_23();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_31_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_66b_badSink(__int64 a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_66b_goodG2BSink(__int64 a1);
void *__fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_badSource(void *a1);
void *__fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B1Source(void *a1);
void *__fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B2Source(void *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_64b_badSink(void **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_64b_goodG2BSink(void **a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54_bad();
void goodG2B_24();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54_good();
void badSink_0();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_bad();
void goodG2BSink_0();
void goodG2B_25();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_14_bad();
void goodG2B1_13();
void goodG2B2_13();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_14_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_32_bad();
void goodG2B_26();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_32_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_61_bad();
void goodG2B_27();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_61_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_65b_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_65b_goodG2BSink(unsigned int *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_bad();
void goodG2B1_14();
void goodG2B2_14();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_67b_badSink(void *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_67b_goodG2BSink(void *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_01_bad();
void goodG2B_28();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_01_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_64_bad();
void goodG2B_29();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_64_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_51b_badSink(_DWORD *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_51b_goodG2BSink(_DWORD *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53c_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53c_goodG2BSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54d_badSink(_DWORD *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54d_goodG2BSink(_DWORD *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_04_bad();
void goodG2B1_15();
void goodG2B2_15();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_04_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_31_bad();
void goodG2B_30();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_31_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_02_bad();
void goodG2B1_16();
void goodG2B2_16();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_02_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_63b_badSink(void **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_63b_goodG2BSink(void **a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_67_bad();
void goodG2B_31();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_67_good();
void *__fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_badSource(void *a1);
void *__fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_goodG2B1Source(void *a1);
void *__fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_goodG2B2Source(void *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_07_bad();
void goodG2B1_17();
void goodG2B2_17();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_07_good();
void *badSource_1();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_42_bad();
void *goodG2BSource_0();
void goodG2B_32();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_42_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_63_bad();
void goodG2B_33();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_63_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_18_bad();
void goodG2B_34();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_18_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_bad();
void goodG2B1_18();
void goodG2B2_18();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_good();
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_65_bad();
__int64 goodG2B_35();
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_65_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_12_bad();
void goodG2B_36();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_12_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54d_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54d_goodG2BSink(unsigned int *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_13_bad();
void goodG2B1_19();
void goodG2B2_19();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_13_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_63b_badSink(void **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_63b_goodG2BSink(void **a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_17_bad();
void goodG2B_37();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_17_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_13_bad();
void goodG2B1_20();
void goodG2B2_20();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_13_good();
void __fastcall badSink_1(_DWORD *a1);
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_44_bad();
void __fastcall goodG2BSink_1(_DWORD *a1);
__int64 goodG2B_38();
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_44_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_02_bad();
void goodG2B1_21();
void goodG2B2_21();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_02_good();
void *CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_61b_badSource();
void *CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_61b_goodG2BSource();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_10_bad();
void goodG2B1_22();
void goodG2B2_22();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_10_good();
void *__fastcall badSource_2(void *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_21_bad();
void *__fastcall goodG2B1Source_0(void *a1);
void goodG2B1_23();
void *__fastcall goodG2B2Source_0(void *a1);
void goodG2B2_23();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_21_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_03_bad();
void goodG2B1_24();
void goodG2B2_24();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_03_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_63_bad();
void goodG2B_39();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_63_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54c_badSink(_DWORD *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54c_goodG2BSink(_DWORD *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_18_bad();
void goodG2B_40();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_18_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53d_badSink(_DWORD *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53d_goodG2BSink(_DWORD *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_12_bad();
void goodG2B_41();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_12_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_03_bad();
void goodG2B1_25();
void goodG2B2_25();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_03_good();
__int64 staticReturnsTrue_0();
__int64 staticReturnsFalse_0();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_08_bad();
void goodG2B1_26();
void goodG2B2_26();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_08_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_17_bad();
void goodG2B_42();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_17_good();
void __fastcall badSink_2(unsigned int *a1);
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_44_bad();
void __fastcall goodG2BSink_2(unsigned int *a1);
__int64 goodG2B_43();
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_44_good();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_11_bad();
void goodG2B1_27();
void goodG2B2_27();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_11_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54b_badSink(_DWORD *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54b_goodG2BSink(_DWORD *a1);
void *CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61b_badSource();
void *CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61b_goodG2BSource();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_10_bad();
void goodG2B1_28();
void goodG2B2_28();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_10_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54c_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54c_goodG2BSink(unsigned int *a1);
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_01_bad();
void goodG2B_44();
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_01_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53d_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53d_goodG2BSink(unsigned int *a1);
int __fastcall printLine(const char *a1);
int __fastcall printWLine(__int64 a1);
int __fastcall printIntLine(unsigned int a1);
int __fastcall printShortLine(__int16 a1);
int __fastcall printFloatLine(float a1);
int __fastcall printLongLine(__int64 a1);
int __fastcall printLongLongLine(__int64 a1);
int __fastcall printSizeTLine(__int64 a1);
int __fastcall printHexCharLine(char a1);
int __fastcall printWcharLine(int a1);
int __fastcall printUnsignedLine(unsigned int a1);
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1);
int __fastcall printDoubleLine(double a1);
int __fastcall printStructLine(unsigned int *a1);
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2);
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3);
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3);
__int64 globalReturnsTrue();
__int64 globalReturnsFalse();
__int64 globalReturnsTrueOrFalse();
void good1();
void good2();
void good3();
void good4();
void good5();
void good6();
void good7();
void good8();
void good9();
void bad1();
void bad2();
void bad3();
void bad4();
void bad5();
void bad6();
void bad7();
void bad8();
void bad9();
void __fastcall __noreturn internal_start(void *a1);
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3);
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1);
__int64 __fastcall stdThreadDestroy(void *a1);
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1);
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1);
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1);
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1);
void _libc_csu_init(void); // idb
void _libc_csu_fini(void); // idb
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

char s[3] = { '\0', '\0', '\0' }; // idb
int GLOBAL_CONST_TRUE = 1; // weak
int GLOBAL_CONST_FALSE = 0; // weak
int GLOBAL_CONST_FIVE = 5; // weak
__int64 (__fastcall *_frame_dummy_init_array_entry[2])() = { &frame_dummy, &_do_global_dtors_aux }; // weak
__int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)() = &_do_global_dtors_aux; // weak
__int64 (*qword_612010)(void) = NULL; // weak
int staticFive = 5; // weak
int staticTrue = 1; // weak
int staticTrue_0 = 1; // weak
int staticFive_0 = 5; // weak
int globalTrue = 1; // weak
int globalFive = 5; // weak
char completed_6355; // weak
int staticFalse; // weak
int badStatic; // weak
int goodG2B1Static; // weak
int goodG2B2Static; // weak
int staticFalse_0; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_45_badData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_45_goodG2BData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_badData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_goodG2BData; // weak
int CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_badGlobal; // weak
int CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B1Global; // weak
int CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B2Global; // weak
int CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_badGlobal; // weak
int CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_goodG2B1Global; // weak
int CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_goodG2B2Global; // weak
int badStatic_0; // weak
int goodG2B1Static_0; // weak
int goodG2B2Static_0; // weak
int globalFalse; // weak
int globalArgc; // weak
__int64 globalArgv; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_goodG2BData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_badData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68_goodG2BData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68_badData; // weak
// extern _UNKNOWN __gmon_start__; weak


//----- (0000000000400930) ----------------------------------------------------
void *init_proc()
{
  void *result; // rax

  result = &__gmon_start__;
  if ( &__gmon_start__ )
    result = (void *)_gmon_start__();
  return result;
}
// 400AC0: using guessed type __int64 _gmon_start__(void);

//----- (0000000000400950) ----------------------------------------------------
__int64 sub_400950()
{
  return qword_612010();
}
// 612010: using guessed type __int64 (*qword_612010)(void);

//----- (0000000000400AD0) ----------------------------------------------------
// positive sp value has been detected, the output may be wrong!
void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>)
{
  int v2; // esi
  int v3; // [rsp-8h] [rbp-8h]
  __int64 _0; // [rsp+0h] [rbp+0h]

  v2 = v3;
  *(_QWORD *)&v3 = a1;
  __libc_start_main(
    (int (__fastcall *)(int, char **, char **))main,
    v2,
    (char **)&_0,
    _libc_csu_init,
    _libc_csu_fini,
    a2,
    &v3);
  __halt();
}
// 400AD6: positive sp value 8 has been found

//----- (0000000000400B00) ----------------------------------------------------
__int64 deregister_tm_clones()
{
  __int64 result; // rax

  result = 6365423LL - (_QWORD)&completed_6355;
  if ( (unsigned __int64)(6365423LL - (_QWORD)&completed_6355) > 0xE )
    result = 0LL;
  return result;
}
// 6120E8: using guessed type char completed_6355;

//----- (0000000000400B30) ----------------------------------------------------
__int64 register_tm_clones()
{
  return 0LL;
}

//----- (0000000000400B70) ----------------------------------------------------
__int64 _do_global_dtors_aux()
{
  __int64 result; // rax

  if ( !completed_6355 )
  {
    result = deregister_tm_clones();
    completed_6355 = 1;
  }
  return result;
}
// 6120E8: using guessed type char completed_6355;

//----- (0000000000400B90) ----------------------------------------------------
__int64 frame_dummy()
{
  return register_tm_clones();
}
// 400B90: could not find valid save-restore pair for rbp

//----- (0000000000400BBD) ----------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  unsigned int v3; // eax

  v3 = time(0LL);
  srand(v3);
  globalArgc = argc;
  globalArgv = (__int64)argv;
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_64_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_64_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_42_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_42_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_41_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_41_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_42_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_42_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_05_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_05_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_51_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_51_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_61_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_61_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_06_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_06_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_14_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_14_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_21_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_21_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_05_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_05_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_10_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_10_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_41_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_41_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_12_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_12_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_21_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_21_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_32_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_32_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_63_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_63_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_10_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_10_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_15_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_15_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_09_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_09_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_01_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_01_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_67_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_67_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_01_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_01_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_44_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_44_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_45_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_45_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_31_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_31_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_16_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_16_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_02_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_02_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_31_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_31_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_08_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_08_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_04_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_04_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_32_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_32_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_04_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_04_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_03_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_03_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_67_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_67_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_03_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_03_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_34_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_34_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_14_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_14_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_17_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_17_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_09_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_09_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_12_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_12_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_44_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_44_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_02_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_02_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_64_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_64_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_11_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_11_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_18_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_18_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_65_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_65_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_17_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_17_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_07_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_07_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_16_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_16_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_07_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_07_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_11_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_11_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_63_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_63_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_66_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_66_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_06_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_06_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_15_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_15_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_13_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_13_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_18_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_18_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_08_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_08_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_13_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_13_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_65_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_65_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_66_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_66_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_51_good();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_51_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_64_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_64_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_42_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_42_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_41_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_41_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_42_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_42_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_05_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_05_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_51_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_51_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_61_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_61_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_06_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_06_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_14_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_14_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_21_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_21_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_05_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_05_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_10_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_10_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_41_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_41_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_12_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_12_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_21_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_21_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_32_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_32_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_63_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_63_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_10_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_10_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_15_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_15_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_09_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_09_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_01_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_01_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_67_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_67_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_01_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_01_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_44_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_44_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_45_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_45_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_31_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_31_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_16_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_16_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_02_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_02_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_31_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_31_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_08_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_08_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_04_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_04_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_32_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_32_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_04_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_04_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_03_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_03_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_67_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_67_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_03_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_03_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_34_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_34_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_14_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_14_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_17_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_17_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_09_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_09_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_12_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_12_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_44_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_44_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_02_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_02_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_64_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_64_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_11_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_11_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_18_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_18_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_65_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_65_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_17_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_17_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_07_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_07_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_16_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_16_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_07_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_07_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_11_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_11_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_63_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_63_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_66_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_66_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_06_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_06_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_15_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_15_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_13_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_13_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_18_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_18_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_08_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_08_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_13_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_13_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_65_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_65_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_66_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_66_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_51_bad();");
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_51_bad();
  return 0;
}
// 61214C: using guessed type int globalArgc;
// 612150: using guessed type __int64 globalArgv;

//----- (00000000004017D8) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54_bad()
{
  _DWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54b_badSink(v0);
}

//----- (0000000000401815) ----------------------------------------------------
void goodG2B()
{
  _DWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54b_goodG2BSink(v0);
}

//----- (0000000000401852) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54_good()
{
  goodG2B();
}

//----- (0000000000401862) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61b_badSource();
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (00000000004018F8) ----------------------------------------------------
void goodG2B_0()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61b_goodG2BSource();
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (000000000040198E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61_good()
{
  goodG2B_0();
}

//----- (000000000040199E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_16_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0xAuLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000401A29) ----------------------------------------------------
void goodG2B_1()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0x28uLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000401AB4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_16_good()
{
  goodG2B_1();
}

//----- (0000000000401AC4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_09_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0xAuLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 40D138: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000401B73) ----------------------------------------------------
void goodG2B1()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FALSE )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 40D13C: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000401C2E) ----------------------------------------------------
void goodG2B2()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 40D138: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000401CDD) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_09_good()
{
  goodG2B1();
  goodG2B2();
}

//----- (0000000000401CF7) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_65b_badSink(_DWORD *a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]

  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(a1, &src, 0x28uLL);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000401D5E) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_65b_goodG2BSink(_DWORD *a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]

  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(a1, &src, 0x28uLL);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000401DC5) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_09_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    dest = malloc(0xAuLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 40D138: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000401E59) ----------------------------------------------------
void goodG2B1_0()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FALSE )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 40D13C: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000401EF9) ----------------------------------------------------
void goodG2B2_0()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 40D138: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000401F8D) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_09_good()
{
  goodG2B1_0();
  goodG2B2_0();
}

//----- (0000000000401FA7) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53c_badSink(_DWORD *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53d_badSink(a1);
}

//----- (0000000000401FC1) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53c_goodG2BSink(_DWORD *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53d_goodG2BSink(a1);
}

//----- (0000000000401FDB) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_15_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0xAuLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000402066) ----------------------------------------------------
void goodG2B1_1()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0x28uLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (00000000004020F1) ----------------------------------------------------
void goodG2B2_1()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0x28uLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (000000000040217C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_15_good()
{
  goodG2B1_1();
  goodG2B2_1();
}

//----- (0000000000402196) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68b_badSink()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = (void *)CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_badData;
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy((void *)CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_badData, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 612160: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_badData;

//----- (0000000000402204) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68b_goodG2BSink()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = (void *)CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_goodG2BData;
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy((void *)CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_goodG2BData, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 612158: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_goodG2BData;

//----- (0000000000402272) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_67_bad()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_67b_badSink(v0);
}

//----- (00000000004022B7) ----------------------------------------------------
void goodG2B_2()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_67b_goodG2BSink(v0);
}

//----- (00000000004022FC) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_67_good()
{
  goodG2B_2();
}

//----- (000000000040230C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_15_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = malloc(0xAuLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (00000000004023B2) ----------------------------------------------------
void goodG2B1_2()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = malloc(0x28uLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000402458) ----------------------------------------------------
void goodG2B2_2()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = malloc(0x28uLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (00000000004024FE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_15_good()
{
  goodG2B1_2();
  goodG2B2_2();
}

//----- (0000000000402518) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_07_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( staticFive == 5 )
  {
    dest = malloc(0xAuLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 6120CC: using guessed type int staticFive;

//----- (00000000004025AD) ----------------------------------------------------
void goodG2B1_3()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( staticFive == 5 )
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 6120CC: using guessed type int staticFive;

//----- (000000000040264E) ----------------------------------------------------
void goodG2B2_3()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( staticFive == 5 )
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 6120CC: using guessed type int staticFive;

//----- (00000000004026E3) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_07_good()
{
  goodG2B1_3();
  goodG2B2_3();
}

//----- (00000000004026FD) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_05_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( staticTrue )
  {
    dest = malloc(0xAuLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 6120D0: using guessed type int staticTrue;

//----- (0000000000402791) ----------------------------------------------------
void goodG2B1_4()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( staticFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 6120EC: using guessed type int staticFalse;

//----- (0000000000402831) ----------------------------------------------------
void goodG2B2_4()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( staticTrue )
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 6120D0: using guessed type int staticTrue;

//----- (00000000004028C5) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_05_good()
{
  goodG2B1_4();
  goodG2B2_4();
}

//----- (00000000004028DF) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_41_badSink(_DWORD *a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]

  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(a1, &src, 0x28uLL);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000402946) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_41_bad()
{
  _DWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_41_badSink(v0);
}

//----- (0000000000402983) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_41_goodG2BSink(_DWORD *a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]

  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(a1, &src, 0x28uLL);
  printIntLine(*a1);
  free(a1);
}

//----- (00000000004029EA) ----------------------------------------------------
void goodG2B_3()
{
  _DWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_41_goodG2BSink(v0);
}

//----- (0000000000402A27) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_41_good()
{
  goodG2B_3();
}

//----- (0000000000402A37) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52c_badSink(_DWORD *a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]

  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(a1, &src, 0x28uLL);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000402A9E) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52c_goodG2BSink(_DWORD *a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]

  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(a1, &src, 0x28uLL);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000402B05) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_bad()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_badData = (__int64)v0;
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68b_badSink();
}
// 612160: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_badData;

//----- (0000000000402B4B) ----------------------------------------------------
void goodG2B_4()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_goodG2BData = (__int64)v0;
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68b_goodG2BSink();
}
// 612158: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_goodG2BData;

//----- (0000000000402B91) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_68_good()
{
  goodG2B_4();
}

//----- (0000000000402BA1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_bad()
{
  __int64 src; // [rsp+0h] [rbp-50h]
  __int64 v1; // [rsp+8h] [rbp-48h]
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  void *v5; // [rsp+30h] [rbp-20h]
  void *dest; // [rsp+40h] [rbp-10h]
  void *v7; // [rsp+48h] [rbp-8h]

  v7 = malloc(0xAuLL);
  if ( !v7 )
    exit(-1);
  v5 = v7;
  dest = v7;
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(v7, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000402C3B) ----------------------------------------------------
void goodG2B_5()
{
  __int64 src; // [rsp+0h] [rbp-50h]
  __int64 v1; // [rsp+8h] [rbp-48h]
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  void *v5; // [rsp+30h] [rbp-20h]
  void *dest; // [rsp+40h] [rbp-10h]
  void *v7; // [rsp+48h] [rbp-8h]

  v7 = malloc(0x28uLL);
  if ( !v7 )
    exit(-1);
  v5 = v7;
  dest = v7;
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(v7, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000402CD5) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_34_good()
{
  goodG2B_5();
}

//----- (0000000000402CE5) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_51b_badSink(unsigned int *a1)
{
  __int64 v1; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    a1[i] = *((_DWORD *)&v1 + i);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000402D67) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_51b_goodG2BSink(unsigned int *a1)
{
  __int64 v1; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    a1[i] = *((_DWORD *)&v1 + i);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000402DE9) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_66b_badSink(__int64 a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  void *dest; // [rsp+38h] [rbp-8h]

  dest = *(void **)(a1 + 16);
  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000402E5C) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_66b_goodG2BSink(__int64 a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  void *dest; // [rsp+38h] [rbp-8h]

  dest = *(void **)(a1 + 16);
  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000402ECF) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_65_bad()
{
  void *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0xAuLL);
  if ( !v1 )
    exit(-1);
  return ((__int64 (__fastcall *)(void *))CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_65b_badSink)(v1);
}

//----- (0000000000402F15) ----------------------------------------------------
__int64 goodG2B_6()
{
  void *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x28uLL);
  if ( !v1 )
    exit(-1);
  return ((__int64 (__fastcall *)(void *))CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_65b_goodG2BSink)(v1);
}

//----- (0000000000402F5B) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_65_good()
{
  return goodG2B_6();
}

//----- (0000000000402F6B) ----------------------------------------------------
void *__fastcall badSource(void *a1)
{
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( badStatic )
  {
    v2 = malloc(0xAuLL);
    if ( !v2 )
      exit(-1);
  }
  return v2;
}
// 6120F0: using guessed type int badStatic;

//----- (0000000000402FA6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_21_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  badStatic = 1;
  dest = badSource(0LL);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 6120F0: using guessed type int badStatic;

//----- (000000000040302B) ----------------------------------------------------
void *__fastcall goodG2B1Source(void *a1)
{
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( goodG2B1Static )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    v2 = malloc(0x28uLL);
    if ( !v2 )
      exit(-1);
  }
  return v2;
}
// 6120F4: using guessed type int goodG2B1Static;

//----- (0000000000403072) ----------------------------------------------------
void goodG2B1_5()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  goodG2B1Static = 0;
  dest = goodG2B1Source(0LL);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 6120F4: using guessed type int goodG2B1Static;

//----- (00000000004030F7) ----------------------------------------------------
void *__fastcall goodG2B2Source(void *a1)
{
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( goodG2B2Static )
  {
    v2 = malloc(0x28uLL);
    if ( !v2 )
      exit(-1);
  }
  return v2;
}
// 6120F8: using guessed type int goodG2B2Static;

//----- (0000000000403132) ----------------------------------------------------
void goodG2B2_5()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  goodG2B2Static = 1;
  dest = goodG2B2Source(0LL);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 6120F8: using guessed type int goodG2B2Static;

//----- (00000000004031B7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_21_good()
{
  goodG2B1_5();
  goodG2B2_5();
}

//----- (00000000004031D1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53_bad()
{
  _DWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53b_badSink(v0);
}

//----- (000000000040320E) ----------------------------------------------------
void goodG2B_7()
{
  _DWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53b_goodG2BSink(v0);
}

//----- (000000000040324B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53_good()
{
  goodG2B_7();
}

//----- (000000000040325B) ----------------------------------------------------
void *badSource_0()
{
  void *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0xAuLL);
  if ( !v1 )
    exit(-1);
  return v1;
}

//----- (000000000040328C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_42_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = badSource_0();
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000403322) ----------------------------------------------------
void *goodG2BSource()
{
  void *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x28uLL);
  if ( !v1 )
    exit(-1);
  return v1;
}

//----- (0000000000403353) ----------------------------------------------------
void goodG2B_8()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = goodG2BSource();
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (00000000004033E9) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_42_good()
{
  goodG2B_8();
}

//----- (00000000004033F9) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54e_badSink(_DWORD *a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]

  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(a1, &src, 0x28uLL);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000403460) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54e_goodG2BSink(_DWORD *a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]

  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(a1, &src, 0x28uLL);
  printIntLine(*a1);
  free(a1);
}

//----- (00000000004034C7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_66_bad()
{
  char v0; // [rsp+0h] [rbp-30h]
  void *v1; // [rsp+10h] [rbp-20h]
  void *v2; // [rsp+28h] [rbp-8h]

  v2 = malloc(0xAuLL);
  if ( !v2 )
    exit(-1);
  v1 = v2;
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_66b_badSink((__int64)&v0);
}

//----- (000000000040350C) ----------------------------------------------------
void goodG2B_9()
{
  char v0; // [rsp+0h] [rbp-30h]
  void *v1; // [rsp+10h] [rbp-20h]
  void *v2; // [rsp+28h] [rbp-8h]

  v2 = malloc(0x28uLL);
  if ( !v2 )
    exit(-1);
  v1 = v2;
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_66b_goodG2BSink((__int64)&v0);
}

//----- (0000000000403551) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_66_good()
{
  goodG2B_9();
}

//----- (0000000000403561) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68b_badSink()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = (void *)CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68_badData;
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 612170: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68_badData;

//----- (00000000004035EA) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68b_goodG2BSink()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = (void *)CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68_goodG2BData;
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 612168: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68_goodG2BData;

//----- (0000000000403673) ----------------------------------------------------
__int64 staticReturnsTrue()
{
  return 1LL;
}

//----- (000000000040367E) ----------------------------------------------------
__int64 staticReturnsFalse()
{
  return 0LL;
}

//----- (0000000000403689) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_08_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsTrue() )
  {
    ptr = malloc(0xAuLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (000000000040373C) ----------------------------------------------------
void goodG2B1_6()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (00000000004037FB) ----------------------------------------------------
void goodG2B2_6()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsTrue() )
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (00000000004038AE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_08_good()
{
  goodG2B1_6();
  goodG2B2_6();
}

//----- (00000000004038C8) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52b_badSink(_DWORD *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52c_badSink(a1);
}

//----- (00000000004038E2) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52b_goodG2BSink(_DWORD *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52c_goodG2BSink(a1);
}

//----- (00000000004038FC) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_05_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( staticTrue_0 )
  {
    ptr = malloc(0xAuLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 6120D4: using guessed type int staticTrue_0;

//----- (00000000004039AB) ----------------------------------------------------
void goodG2B1_7()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( staticFalse_0 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 6120FC: using guessed type int staticFalse_0;

//----- (0000000000403A66) ----------------------------------------------------
void goodG2B2_7()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( staticTrue_0 )
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 6120D4: using guessed type int staticTrue_0;

//----- (0000000000403B15) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_05_good()
{
  goodG2B1_7();
  goodG2B2_7();
}

//----- (0000000000403B2F) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_41_badSink(unsigned int *a1)
{
  __int64 v1; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    a1[i] = *((_DWORD *)&v1 + i);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000403BB1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_41_bad()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_41_badSink(v0);
}

//----- (0000000000403BEE) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_41_goodG2BSink(unsigned int *a1)
{
  __int64 v1; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    a1[i] = *((_DWORD *)&v1 + i);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000403C70) ----------------------------------------------------
void goodG2B_10()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_41_goodG2BSink(v0);
}

//----- (0000000000403CAD) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_41_good()
{
  goodG2B_10();
}

//----- (0000000000403CBD) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53b_badSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53c_badSink(a1);
}

//----- (0000000000403CD7) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53b_goodG2BSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53c_goodG2BSink(a1);
}

//----- (0000000000403CF1) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52c_badSink(unsigned int *a1)
{
  __int64 v1; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    a1[i] = *((_DWORD *)&v1 + i);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000403D73) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52c_goodG2BSink(unsigned int *a1)
{
  __int64 v1; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    a1[i] = *((_DWORD *)&v1 + i);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000403DF5) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68_bad()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68_badData = (__int64)v0;
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68b_badSink();
}
// 612170: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68_badData;

//----- (0000000000403E3B) ----------------------------------------------------
void goodG2B_11()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68_goodG2BData = (__int64)v0;
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68b_goodG2BSink();
}
// 612168: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68_goodG2BData;

//----- (0000000000403E81) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_68_good()
{
  goodG2B_11();
}

//----- (0000000000403E91) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_34_bad()
{
  __int64 v0; // [rsp+0h] [rbp-50h]
  __int64 v1; // [rsp+8h] [rbp-48h]
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  void *v5; // [rsp+30h] [rbp-20h]
  void *ptr; // [rsp+38h] [rbp-18h]
  void *v7; // [rsp+40h] [rbp-10h]
  unsigned __int64 i; // [rsp+48h] [rbp-8h]

  v7 = malloc(0xAuLL);
  if ( !v7 )
    exit(-1);
  v5 = v7;
  ptr = v7;
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000403F46) ----------------------------------------------------
void goodG2B_12()
{
  __int64 v0; // [rsp+0h] [rbp-50h]
  __int64 v1; // [rsp+8h] [rbp-48h]
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  void *v5; // [rsp+30h] [rbp-20h]
  void *ptr; // [rsp+38h] [rbp-18h]
  void *v7; // [rsp+40h] [rbp-10h]
  unsigned __int64 i; // [rsp+48h] [rbp-8h]

  v7 = malloc(0x28uLL);
  if ( !v7 )
    exit(-1);
  v5 = v7;
  ptr = v7;
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000403FFB) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_34_good()
{
  goodG2B_12();
}

//----- (000000000040400B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_51_bad()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_51b_badSink(v0);
}

//----- (0000000000404048) ----------------------------------------------------
void goodG2B_13()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_51b_goodG2BSink(v0);
}

//----- (0000000000404085) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_51_good()
{
  goodG2B_13();
}

//----- (0000000000404095) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52_bad()
{
  _DWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52b_badSink(v0);
}

//----- (00000000004040D2) ----------------------------------------------------
void goodG2B_14()
{
  _DWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52b_goodG2BSink(v0);
}

//----- (000000000040410F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_52_good()
{
  goodG2B_14();
}

//----- (000000000040411F) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53b_badSink(_DWORD *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53c_badSink(a1);
}

//----- (0000000000404139) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53b_goodG2BSink(_DWORD *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53c_goodG2BSink(a1);
}

//----- (0000000000404153) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53_bad()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53b_badSink(v0);
}

//----- (0000000000404190) ----------------------------------------------------
void goodG2B_15()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53b_goodG2BSink(v0);
}

//----- (00000000004041CD) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53_good()
{
  goodG2B_15();
}

//----- (00000000004041DD) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54e_badSink(unsigned int *a1)
{
  __int64 v1; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    a1[i] = *((_DWORD *)&v1 + i);
  printIntLine(*a1);
  free(a1);
}

//----- (000000000040425F) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54e_goodG2BSink(unsigned int *a1)
{
  __int64 v1; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    a1[i] = *((_DWORD *)&v1 + i);
  printIntLine(*a1);
  free(a1);
}

//----- (00000000004042E1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_66_bad()
{
  char v0; // [rsp+0h] [rbp-30h]
  void *v1; // [rsp+10h] [rbp-20h]
  void *v2; // [rsp+28h] [rbp-8h]

  v2 = malloc(0xAuLL);
  if ( !v2 )
    exit(-1);
  v1 = v2;
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_66b_badSink((__int64)&v0);
}

//----- (0000000000404326) ----------------------------------------------------
void goodG2B_16()
{
  char v0; // [rsp+0h] [rbp-30h]
  void *v1; // [rsp+10h] [rbp-20h]
  void *v2; // [rsp+28h] [rbp-8h]

  v2 = malloc(0x28uLL);
  if ( !v2 )
    exit(-1);
  v1 = v2;
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_66b_goodG2BSink((__int64)&v0);
}

//----- (000000000040436B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_66_good()
{
  goodG2B_16();
}

//----- (000000000040437B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_51_bad()
{
  _DWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_51b_badSink(v0);
}

//----- (00000000004043B8) ----------------------------------------------------
void goodG2B_17()
{
  _DWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_51b_goodG2BSink(v0);
}

//----- (00000000004043F5) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_51_good()
{
  goodG2B_17();
}

//----- (0000000000404405) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52b_badSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52c_badSink(a1);
}

//----- (000000000040441F) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52b_goodG2BSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52c_goodG2BSink(a1);
}

//----- (0000000000404439) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_06_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0xAuLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (00000000004044CD) ----------------------------------------------------
void goodG2B1_8()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0x28uLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (000000000040456D) ----------------------------------------------------
void goodG2B2_8()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0x28uLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000404601) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_06_good()
{
  goodG2B1_8();
  goodG2B2_8();
}

//----- (000000000040461B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52_bad()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52b_badSink(v0);
}

//----- (0000000000404658) ----------------------------------------------------
void goodG2B_18()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52b_goodG2BSink(v0);
}

//----- (0000000000404695) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_52_good()
{
  goodG2B_18();
}

//----- (00000000004046A5) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54b_badSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54c_badSink(a1);
}

//----- (00000000004046BF) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54b_goodG2BSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54c_goodG2BSink(a1);
}

//----- (00000000004046D9) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_16_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = malloc(0xAuLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (000000000040477F) ----------------------------------------------------
void goodG2B_19()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = malloc(0x28uLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000404825) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_16_good()
{
  goodG2B_19();
}

//----- (0000000000404835) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_64b_badSink(void **a1)
{
  __int64 src; // [rsp+10h] [rbp-40h]
  __int64 v2; // [rsp+18h] [rbp-38h]
  __int64 v3; // [rsp+20h] [rbp-30h]
  __int64 v4; // [rsp+28h] [rbp-28h]
  __int64 v5; // [rsp+30h] [rbp-20h]
  void *dest; // [rsp+40h] [rbp-10h]
  void **v7; // [rsp+48h] [rbp-8h]

  v7 = a1;
  dest = *a1;
  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (00000000004048AF) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_64b_goodG2BSink(void **a1)
{
  __int64 src; // [rsp+10h] [rbp-40h]
  __int64 v2; // [rsp+18h] [rbp-38h]
  __int64 v3; // [rsp+20h] [rbp-30h]
  __int64 v4; // [rsp+28h] [rbp-28h]
  __int64 v5; // [rsp+30h] [rbp-20h]
  void *dest; // [rsp+40h] [rbp-10h]
  void **v7; // [rsp+48h] [rbp-8h]

  v7 = a1;
  dest = *a1;
  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000404929) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_14_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( globalFive == 5 )
  {
    dest = malloc(0xAuLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 6120E0: using guessed type int globalFive;

//----- (00000000004049BE) ----------------------------------------------------
void goodG2B1_9()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( globalFive == 5 )
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 6120E0: using guessed type int globalFive;

//----- (0000000000404A5F) ----------------------------------------------------
void goodG2B2_9()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( globalFive == 5 )
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 6120E0: using guessed type int globalFive;

//----- (0000000000404AF4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_14_good()
{
  goodG2B1_9();
  goodG2B2_9();
}

//----- (0000000000404B0E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_32_bad()
{
  __int64 src; // [rsp+0h] [rbp-50h]
  __int64 v1; // [rsp+8h] [rbp-48h]
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  void *dest; // [rsp+30h] [rbp-20h]
  void *v7; // [rsp+38h] [rbp-18h]
  void **v8; // [rsp+40h] [rbp-10h]
  __int64 *v9; // [rsp+48h] [rbp-8h]

  v9 = &v5;
  v8 = (void **)&v5;
  v5 = 0LL;
  v7 = 0LL;
  v7 = malloc(0xAuLL);
  if ( !v7 )
    exit(-1);
  *v9 = (__int64)v7;
  dest = *v8;
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000404BC9) ----------------------------------------------------
void goodG2B_20()
{
  __int64 src; // [rsp+0h] [rbp-50h]
  __int64 v1; // [rsp+8h] [rbp-48h]
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  void *dest; // [rsp+30h] [rbp-20h]
  void *v7; // [rsp+38h] [rbp-18h]
  void **v8; // [rsp+40h] [rbp-10h]
  __int64 *v9; // [rsp+48h] [rbp-8h]

  v9 = &v5;
  v8 = (void **)&v5;
  v5 = 0LL;
  v7 = 0LL;
  v7 = malloc(0x28uLL);
  if ( !v7 )
    exit(-1);
  *v9 = (__int64)v7;
  dest = *v8;
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000404C84) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_32_good()
{
  goodG2B_20();
}

//----- (0000000000404C94) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_11_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    dest = malloc(0xAuLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000404D2C) ----------------------------------------------------
void goodG2B1_10()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000404DD0) ----------------------------------------------------
void goodG2B2_10()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000404E68) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_11_good()
{
  goodG2B1_10();
  goodG2B2_10();
}

//----- (0000000000404E82) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_67b_badSink(void *a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  void *dest; // [rsp+38h] [rbp-8h]

  dest = a1;
  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(a1, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000404EF1) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_67b_goodG2BSink(void *a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  void *dest; // [rsp+38h] [rbp-8h]

  dest = a1;
  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(a1, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000404F60) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_64_bad()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_64b_badSink(&v0);
}

//----- (0000000000404F9F) ----------------------------------------------------
void goodG2B_21()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_64b_goodG2BSink(&v0);
}

//----- (0000000000404FDE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_64_good()
{
  goodG2B_21();
}

//----- (0000000000404FEE) ----------------------------------------------------
void badSink()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = (void *)CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_45_badData;
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 612100: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_45_badData;

//----- (0000000000405077) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_45_bad()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_45_badData = (__int64)v0;
  badSink();
}
// 612100: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_45_badData;

//----- (00000000004050BD) ----------------------------------------------------
void goodG2BSink()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = (void *)CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_45_goodG2BData;
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 612108: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_45_goodG2BData;

//----- (0000000000405146) ----------------------------------------------------
void goodG2B_22()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_45_goodG2BData = (__int64)v0;
  goodG2BSink();
}
// 612108: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_45_goodG2BData;

//----- (000000000040518C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_45_good()
{
  goodG2B_22();
}

//----- (000000000040519C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_06_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = malloc(0xAuLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (000000000040524B) ----------------------------------------------------
void goodG2B1_11()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = malloc(0x28uLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000405306) ----------------------------------------------------
void goodG2B2_11()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = malloc(0x28uLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (00000000004053B5) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_06_good()
{
  goodG2B1_11();
  goodG2B2_11();
}

//----- (00000000004053CF) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_04_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0xAuLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000405462) ----------------------------------------------------
void goodG2B1_12()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0x28uLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000405501) ----------------------------------------------------
void goodG2B2_12()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0x28uLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000405594) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_04_good()
{
  goodG2B1_12();
  goodG2B2_12();
}

//----- (00000000004055AE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_31_bad()
{
  __int64 src; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *dest; // [rsp+28h] [rbp-18h]
  void *v6; // [rsp+30h] [rbp-10h]
  void *v7; // [rsp+38h] [rbp-8h]

  v7 = malloc(0xAuLL);
  if ( !v7 )
    exit(-1);
  v6 = v7;
  dest = v7;
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(v7, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000405648) ----------------------------------------------------
void goodG2B_23()
{
  __int64 src; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *dest; // [rsp+28h] [rbp-18h]
  void *v6; // [rsp+30h] [rbp-10h]
  void *v7; // [rsp+38h] [rbp-8h]

  v7 = malloc(0x28uLL);
  if ( !v7 )
    exit(-1);
  v6 = v7;
  dest = v7;
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(v7, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (00000000004056E2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_31_good()
{
  goodG2B_23();
}

//----- (00000000004056F2) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_66b_badSink(__int64 a1)
{
  __int64 v1; // [rsp+10h] [rbp-40h]
  __int64 v2; // [rsp+18h] [rbp-38h]
  __int64 v3; // [rsp+20h] [rbp-30h]
  __int64 v4; // [rsp+28h] [rbp-28h]
  __int64 v5; // [rsp+30h] [rbp-20h]
  void *ptr; // [rsp+40h] [rbp-10h]
  unsigned __int64 i; // [rsp+48h] [rbp-8h]

  ptr = *(void **)(a1 + 16);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v1 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000405780) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_66b_goodG2BSink(__int64 a1)
{
  __int64 v1; // [rsp+10h] [rbp-40h]
  __int64 v2; // [rsp+18h] [rbp-38h]
  __int64 v3; // [rsp+20h] [rbp-30h]
  __int64 v4; // [rsp+28h] [rbp-28h]
  __int64 v5; // [rsp+30h] [rbp-20h]
  void *ptr; // [rsp+40h] [rbp-10h]
  unsigned __int64 i; // [rsp+48h] [rbp-8h]

  ptr = *(void **)(a1 + 16);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v1 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (000000000040580E) ----------------------------------------------------
void *__fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_badSource(void *a1)
{
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_badGlobal )
  {
    v2 = malloc(0xAuLL);
    if ( !v2 )
      exit(-1);
  }
  return v2;
}
// 612120: using guessed type int CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_badGlobal;

//----- (0000000000405849) ----------------------------------------------------
void *__fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B1Source(void *a1)
{
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B1Global )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    v2 = malloc(0x28uLL);
    if ( !v2 )
      exit(-1);
  }
  return v2;
}
// 612124: using guessed type int CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B1Global;

//----- (0000000000405890) ----------------------------------------------------
void *__fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B2Source(void *a1)
{
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B2Global )
  {
    v2 = malloc(0x28uLL);
    if ( !v2 )
      exit(-1);
  }
  return v2;
}
// 612128: using guessed type int CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B2Global;

//----- (00000000004058CB) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_64b_badSink(void **a1)
{
  __int64 v1; // [rsp+10h] [rbp-40h]
  __int64 v2; // [rsp+18h] [rbp-38h]
  __int64 v3; // [rsp+20h] [rbp-30h]
  __int64 v4; // [rsp+28h] [rbp-28h]
  __int64 v5; // [rsp+30h] [rbp-20h]
  void *ptr; // [rsp+38h] [rbp-18h]
  void **v7; // [rsp+40h] [rbp-10h]
  unsigned __int64 i; // [rsp+48h] [rbp-8h]

  v7 = a1;
  ptr = *a1;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v1 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000405960) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_64b_goodG2BSink(void **a1)
{
  __int64 v1; // [rsp+10h] [rbp-40h]
  __int64 v2; // [rsp+18h] [rbp-38h]
  __int64 v3; // [rsp+20h] [rbp-30h]
  __int64 v4; // [rsp+28h] [rbp-28h]
  __int64 v5; // [rsp+30h] [rbp-20h]
  void *ptr; // [rsp+38h] [rbp-18h]
  void **v7; // [rsp+40h] [rbp-10h]
  unsigned __int64 i; // [rsp+48h] [rbp-8h]

  v7 = a1;
  ptr = *a1;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v1 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (00000000004059F5) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54_bad()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54b_badSink(v0);
}

//----- (0000000000405A32) ----------------------------------------------------
void goodG2B_24()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54b_goodG2BSink(v0);
}

//----- (0000000000405A6F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54_good()
{
  goodG2B_24();
}

//----- (0000000000405A7F) ----------------------------------------------------
void badSink_0()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = (void *)CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_badData;
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy((void *)CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_badData, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 612110: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_badData;

//----- (0000000000405AED) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_bad()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_badData = (__int64)v0;
  badSink_0();
}
// 612110: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_badData;

//----- (0000000000405B33) ----------------------------------------------------
void goodG2BSink_0()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = (void *)CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_goodG2BData;
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy((void *)CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_goodG2BData, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 612118: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_goodG2BData;

//----- (0000000000405BA1) ----------------------------------------------------
void goodG2B_25()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_goodG2BData = (__int64)v0;
  goodG2BSink_0();
}
// 612118: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_goodG2BData;

//----- (0000000000405BE7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_45_good()
{
  goodG2B_25();
}

//----- (0000000000405BF7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_14_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = malloc(0xAuLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 6120E0: using guessed type int globalFive;

//----- (0000000000405CA7) ----------------------------------------------------
void goodG2B1_13()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 6120E0: using guessed type int globalFive;

//----- (0000000000405D63) ----------------------------------------------------
void goodG2B2_13()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 6120E0: using guessed type int globalFive;

//----- (0000000000405E13) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_14_good()
{
  goodG2B1_13();
  goodG2B2_13();
}

//----- (0000000000405E2D) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_32_bad()
{
  __int64 v0; // [rsp+0h] [rbp-60h]
  __int64 v1; // [rsp+8h] [rbp-58h]
  __int64 v2; // [rsp+10h] [rbp-50h]
  __int64 v3; // [rsp+18h] [rbp-48h]
  __int64 v4; // [rsp+20h] [rbp-40h]
  __int64 v5; // [rsp+30h] [rbp-30h]
  void *ptr; // [rsp+38h] [rbp-28h]
  void *v7; // [rsp+40h] [rbp-20h]
  void **v8; // [rsp+48h] [rbp-18h]
  __int64 *v9; // [rsp+50h] [rbp-10h]
  unsigned __int64 i; // [rsp+58h] [rbp-8h]

  v9 = &v5;
  v8 = (void **)&v5;
  v5 = 0LL;
  v7 = 0LL;
  v7 = malloc(0xAuLL);
  if ( !v7 )
    exit(-1);
  *v9 = (__int64)v7;
  ptr = *v8;
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000405F03) ----------------------------------------------------
void goodG2B_26()
{
  __int64 v0; // [rsp+0h] [rbp-60h]
  __int64 v1; // [rsp+8h] [rbp-58h]
  __int64 v2; // [rsp+10h] [rbp-50h]
  __int64 v3; // [rsp+18h] [rbp-48h]
  __int64 v4; // [rsp+20h] [rbp-40h]
  __int64 v5; // [rsp+30h] [rbp-30h]
  void *ptr; // [rsp+38h] [rbp-28h]
  void *v7; // [rsp+40h] [rbp-20h]
  void **v8; // [rsp+48h] [rbp-18h]
  __int64 *v9; // [rsp+50h] [rbp-10h]
  unsigned __int64 i; // [rsp+58h] [rbp-8h]

  v9 = &v5;
  v8 = (void **)&v5;
  v5 = 0LL;
  v7 = 0LL;
  v7 = malloc(0x28uLL);
  if ( !v7 )
    exit(-1);
  *v9 = (__int64)v7;
  ptr = *v8;
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000405FD9) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_32_good()
{
  goodG2B_26();
}

//----- (0000000000405FE9) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_61_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_61b_badSource();
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000406064) ----------------------------------------------------
void goodG2B_27()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_61b_goodG2BSource();
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (00000000004060DF) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_61_good()
{
  goodG2B_27();
}

//----- (00000000004060EF) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_65b_badSink(unsigned int *a1)
{
  __int64 v1; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    a1[i] = *((_DWORD *)&v1 + i);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000406171) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_65b_goodG2BSink(unsigned int *a1)
{
  __int64 v1; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    a1[i] = *((_DWORD *)&v1 + i);
  printIntLine(*a1);
  free(a1);
}

//----- (00000000004061F3) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_badGlobal = 1;
  dest = CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_badSource(0LL);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 612120: using guessed type int CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_badGlobal;

//----- (0000000000406278) ----------------------------------------------------
void goodG2B1_14()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B1Global = 0;
  dest = CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B1Source(0LL);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 612124: using guessed type int CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B1Global;

//----- (00000000004062FD) ----------------------------------------------------
void goodG2B2_14()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B2Global = 1;
  dest = CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B2Source(0LL);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 612128: using guessed type int CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B2Global;

//----- (0000000000406382) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_good()
{
  goodG2B1_14();
  goodG2B2_14();
}

//----- (000000000040639C) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_67b_badSink(void *a1)
{
  __int64 v1; // [rsp+10h] [rbp-40h]
  __int64 v2; // [rsp+18h] [rbp-38h]
  __int64 v3; // [rsp+20h] [rbp-30h]
  __int64 v4; // [rsp+28h] [rbp-28h]
  __int64 v5; // [rsp+30h] [rbp-20h]
  void *ptr; // [rsp+40h] [rbp-10h]
  unsigned __int64 i; // [rsp+48h] [rbp-8h]

  ptr = a1;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v1 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000406426) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_67b_goodG2BSink(void *a1)
{
  __int64 v1; // [rsp+10h] [rbp-40h]
  __int64 v2; // [rsp+18h] [rbp-38h]
  __int64 v3; // [rsp+20h] [rbp-30h]
  __int64 v4; // [rsp+28h] [rbp-28h]
  __int64 v5; // [rsp+30h] [rbp-20h]
  void *ptr; // [rsp+40h] [rbp-10h]
  unsigned __int64 i; // [rsp+48h] [rbp-8h]

  ptr = a1;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v1 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (00000000004064B0) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_01_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0xAuLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (000000000040653A) ----------------------------------------------------
void goodG2B_28()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0x28uLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (00000000004065C4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_01_good()
{
  goodG2B_28();
}

//----- (00000000004065D4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_64_bad()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_64b_badSink(&v0);
}

//----- (0000000000406613) ----------------------------------------------------
void goodG2B_29()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_64b_goodG2BSink(&v0);
}

//----- (0000000000406652) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_64_good()
{
  goodG2B_29();
}

//----- (0000000000406662) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_51b_badSink(_DWORD *a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]

  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(a1, &src, 0x28uLL);
  printIntLine(*a1);
  free(a1);
}

//----- (00000000004066C9) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_51b_goodG2BSink(_DWORD *a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]

  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(a1, &src, 0x28uLL);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000406730) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53c_badSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53d_badSink(a1);
}

//----- (000000000040674A) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53c_goodG2BSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53d_goodG2BSink(a1);
}

//----- (0000000000406764) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54d_badSink(_DWORD *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54e_badSink(a1);
}

//----- (000000000040677E) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54d_goodG2BSink(_DWORD *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54e_goodG2BSink(a1);
}

//----- (0000000000406798) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_04_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = malloc(0xAuLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000406846) ----------------------------------------------------
void goodG2B1_15()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = malloc(0x28uLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000406900) ----------------------------------------------------
void goodG2B2_15()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = malloc(0x28uLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (00000000004069AE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_04_good()
{
  goodG2B1_15();
  goodG2B2_15();
}

//----- (00000000004069C8) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_31_bad()
{
  __int64 v0; // [rsp+0h] [rbp-50h]
  __int64 v1; // [rsp+8h] [rbp-48h]
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  void *ptr; // [rsp+30h] [rbp-20h]
  void *v6; // [rsp+38h] [rbp-18h]
  void *v7; // [rsp+40h] [rbp-10h]
  unsigned __int64 i; // [rsp+48h] [rbp-8h]

  v7 = malloc(0xAuLL);
  if ( !v7 )
    exit(-1);
  v6 = v7;
  ptr = v7;
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000406A7D) ----------------------------------------------------
void goodG2B_30()
{
  __int64 v0; // [rsp+0h] [rbp-50h]
  __int64 v1; // [rsp+8h] [rbp-48h]
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  void *ptr; // [rsp+30h] [rbp-20h]
  void *v6; // [rsp+38h] [rbp-18h]
  void *v7; // [rsp+40h] [rbp-10h]
  unsigned __int64 i; // [rsp+48h] [rbp-8h]

  v7 = malloc(0x28uLL);
  if ( !v7 )
    exit(-1);
  v6 = v7;
  ptr = v7;
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000406B32) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_31_good()
{
  goodG2B_30();
}

//----- (0000000000406B42) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_02_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = malloc(0xAuLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000406BE7) ----------------------------------------------------
void goodG2B1_16()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = malloc(0x28uLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000406C8C) ----------------------------------------------------
void goodG2B2_16()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = malloc(0x28uLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000406D31) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_02_good()
{
  goodG2B1_16();
  goodG2B2_16();
}

//----- (0000000000406D4B) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_63b_badSink(void **a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  void *dest; // [rsp+38h] [rbp-8h]

  dest = *a1;
  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000406DBD) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_63b_goodG2BSink(void **a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  void *dest; // [rsp+38h] [rbp-8h]

  dest = *a1;
  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000406E2F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_67_bad()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_67b_badSink(v0);
}

//----- (0000000000406E74) ----------------------------------------------------
void goodG2B_31()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_67b_goodG2BSink(v0);
}

//----- (0000000000406EB9) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_67_good()
{
  goodG2B_31();
}

//----- (0000000000406EC9) ----------------------------------------------------
void *__fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_badSource(void *a1)
{
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_badGlobal )
  {
    v2 = malloc(0xAuLL);
    if ( !v2 )
      exit(-1);
  }
  return v2;
}
// 61212C: using guessed type int CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_badGlobal;

//----- (0000000000406F04) ----------------------------------------------------
void *__fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_goodG2B1Source(void *a1)
{
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_goodG2B1Global )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    v2 = malloc(0x28uLL);
    if ( !v2 )
      exit(-1);
  }
  return v2;
}
// 612130: using guessed type int CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_goodG2B1Global;

//----- (0000000000406F4B) ----------------------------------------------------
void *__fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_goodG2B2Source(void *a1)
{
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_goodG2B2Global )
  {
    v2 = malloc(0x28uLL);
    if ( !v2 )
      exit(-1);
  }
  return v2;
}
// 612134: using guessed type int CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_goodG2B2Global;

//----- (0000000000406F86) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_07_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_0 == 5 )
  {
    ptr = malloc(0xAuLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 6120D8: using guessed type int staticFive_0;

//----- (0000000000407036) ----------------------------------------------------
void goodG2B1_17()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_0 == 5 )
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 6120D8: using guessed type int staticFive_0;

//----- (00000000004070F2) ----------------------------------------------------
void goodG2B2_17()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_0 == 5 )
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 6120D8: using guessed type int staticFive_0;

//----- (00000000004071A2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_07_good()
{
  goodG2B1_17();
  goodG2B2_17();
}

//----- (00000000004071BC) ----------------------------------------------------
void *badSource_1()
{
  void *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0xAuLL);
  if ( !v1 )
    exit(-1);
  return v1;
}

//----- (00000000004071ED) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_42_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = badSource_1();
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000407268) ----------------------------------------------------
void *goodG2BSource_0()
{
  void *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x28uLL);
  if ( !v1 )
    exit(-1);
  return v1;
}

//----- (0000000000407299) ----------------------------------------------------
void goodG2B_32()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = goodG2BSource_0();
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000407314) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_42_good()
{
  goodG2B_32();
}

//----- (0000000000407324) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_63_bad()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_63b_badSink(&v0);
}

//----- (0000000000407363) ----------------------------------------------------
void goodG2B_33()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_63b_goodG2BSink(&v0);
}

//----- (00000000004073A2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_63_good()
{
  goodG2B_33();
}

//----- (00000000004073B2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_18_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0xAuLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (000000000040743D) ----------------------------------------------------
void goodG2B_34()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0x28uLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (00000000004074C8) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_18_good()
{
  goodG2B_34();
}

//----- (00000000004074D8) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_badGlobal = 1;
  ptr = CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_badSource(0LL);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 61212C: using guessed type int CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_badGlobal;

//----- (0000000000407578) ----------------------------------------------------
void goodG2B1_18()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_goodG2B1Global = 0;
  ptr = CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_goodG2B1Source(0LL);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 612130: using guessed type int CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_goodG2B1Global;

//----- (0000000000407618) ----------------------------------------------------
void goodG2B2_18()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_goodG2B2Global = 1;
  ptr = CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_goodG2B2Source(0LL);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 612134: using guessed type int CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_goodG2B2Global;

//----- (00000000004076B8) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_22_good()
{
  goodG2B1_18();
  goodG2B2_18();
}

//----- (00000000004076D2) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_65_bad()
{
  void *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0xAuLL);
  if ( !v1 )
    exit(-1);
  return ((__int64 (__fastcall *)(void *))CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_65b_badSink)(v1);
}

//----- (0000000000407718) ----------------------------------------------------
__int64 goodG2B_35()
{
  void *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x28uLL);
  if ( !v1 )
    exit(-1);
  return ((__int64 (__fastcall *)(void *))CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_65b_goodG2BSink)(v1);
}

//----- (000000000040775E) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_65_good()
{
  return goodG2B_35();
}

//----- (000000000040776E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_12_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    dest = malloc(0xAuLL);
    if ( !dest )
      exit(-1);
  }
  else
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000407825) ----------------------------------------------------
void goodG2B_36()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  else
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (00000000004078DC) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_12_good()
{
  goodG2B_36();
}

//----- (00000000004078EC) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54d_badSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54e_badSink(a1);
}

//----- (0000000000407906) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54d_goodG2BSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54e_goodG2BSink(a1);
}

//----- (0000000000407920) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_13_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0xAuLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 40D140: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004079D0) ----------------------------------------------------
void goodG2B1_19()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 40D140: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000407A8C) ----------------------------------------------------
void goodG2B2_19()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 40D140: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000407B3C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_13_good()
{
  goodG2B1_19();
  goodG2B2_19();
}

//----- (0000000000407B56) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_63b_badSink(void **a1)
{
  __int64 v1; // [rsp+10h] [rbp-40h]
  __int64 v2; // [rsp+18h] [rbp-38h]
  __int64 v3; // [rsp+20h] [rbp-30h]
  __int64 v4; // [rsp+28h] [rbp-28h]
  __int64 v5; // [rsp+30h] [rbp-20h]
  void *ptr; // [rsp+40h] [rbp-10h]
  unsigned __int64 i; // [rsp+48h] [rbp-8h]

  ptr = *a1;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v1 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000407BE3) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_63b_goodG2BSink(void **a1)
{
  __int64 v1; // [rsp+10h] [rbp-40h]
  __int64 v2; // [rsp+18h] [rbp-38h]
  __int64 v3; // [rsp+20h] [rbp-30h]
  __int64 v4; // [rsp+28h] [rbp-28h]
  __int64 v5; // [rsp+30h] [rbp-20h]
  void *ptr; // [rsp+40h] [rbp-10h]
  unsigned __int64 i; // [rsp+48h] [rbp-8h]

  ptr = *a1;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v1 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000407C70) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_17_bad()
{
  __int64 src; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *dest; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  dest = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    dest = malloc(0xAuLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000407D0D) ----------------------------------------------------
void goodG2B_37()
{
  __int64 src; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *dest; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  dest = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000407DAA) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_17_good()
{
  goodG2B_37();
}

//----- (0000000000407DBA) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_13_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    dest = malloc(0xAuLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 40D140: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000407E4F) ----------------------------------------------------
void goodG2B1_20()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 40D140: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000407EF0) ----------------------------------------------------
void goodG2B2_20()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 40D140: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000407F85) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_13_good()
{
  goodG2B1_20();
  goodG2B2_20();
}

//----- (0000000000407F9F) ----------------------------------------------------
void __fastcall badSink_1(_DWORD *a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]

  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(a1, &src, 0x28uLL);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000408006) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_44_bad()
{
  void *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0xAuLL);
  if ( !v1 )
    exit(-1);
  return ((__int64 (__fastcall *)(void *))badSink_1)(v1);
}

//----- (000000000040804C) ----------------------------------------------------
void __fastcall goodG2BSink_1(_DWORD *a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]

  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(a1, &src, 0x28uLL);
  printIntLine(*a1);
  free(a1);
}

//----- (00000000004080B3) ----------------------------------------------------
__int64 goodG2B_38()
{
  void *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x28uLL);
  if ( !v1 )
    exit(-1);
  return ((__int64 (__fastcall *)(void *))goodG2BSink_1)(v1);
}

//----- (00000000004080F9) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_44_good()
{
  return goodG2B_38();
}

//----- (0000000000408109) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_02_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0xAuLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000408193) ----------------------------------------------------
void goodG2B1_21()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0x28uLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (000000000040821D) ----------------------------------------------------
void goodG2B2_21()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0x28uLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (00000000004082A7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_02_good()
{
  goodG2B1_21();
  goodG2B2_21();
}

//----- (00000000004082C1) ----------------------------------------------------
void *CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_61b_badSource()
{
  void *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0xAuLL);
  if ( !v1 )
    exit(-1);
  return v1;
}

//----- (00000000004082F2) ----------------------------------------------------
void *CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_61b_goodG2BSource()
{
  void *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x28uLL);
  if ( !v1 )
    exit(-1);
  return v1;
}

//----- (0000000000408323) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_10_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( globalTrue )
  {
    dest = malloc(0xAuLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 6120DC: using guessed type int globalTrue;

//----- (00000000004083B7) ----------------------------------------------------
void goodG2B1_22()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( globalFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 612148: using guessed type int globalFalse;

//----- (0000000000408457) ----------------------------------------------------
void goodG2B2_22()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( globalTrue )
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}
// 6120DC: using guessed type int globalTrue;

//----- (00000000004084EB) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_10_good()
{
  goodG2B1_22();
  goodG2B2_22();
}

//----- (0000000000408505) ----------------------------------------------------
void *__fastcall badSource_2(void *a1)
{
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( badStatic_0 )
  {
    v2 = malloc(0xAuLL);
    if ( !v2 )
      exit(-1);
  }
  return v2;
}
// 612138: using guessed type int badStatic_0;

//----- (0000000000408540) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_21_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  badStatic_0 = 1;
  ptr = badSource_2(0LL);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 612138: using guessed type int badStatic_0;

//----- (00000000004085E0) ----------------------------------------------------
void *__fastcall goodG2B1Source_0(void *a1)
{
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( goodG2B1Static_0 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    v2 = malloc(0x28uLL);
    if ( !v2 )
      exit(-1);
  }
  return v2;
}
// 61213C: using guessed type int goodG2B1Static_0;

//----- (0000000000408627) ----------------------------------------------------
void goodG2B1_23()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  goodG2B1Static_0 = 0;
  ptr = goodG2B1Source_0(0LL);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 61213C: using guessed type int goodG2B1Static_0;

//----- (00000000004086C7) ----------------------------------------------------
void *__fastcall goodG2B2Source_0(void *a1)
{
  void *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( goodG2B2Static_0 )
  {
    v2 = malloc(0x28uLL);
    if ( !v2 )
      exit(-1);
  }
  return v2;
}
// 612140: using guessed type int goodG2B2Static_0;

//----- (0000000000408702) ----------------------------------------------------
void goodG2B2_23()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  goodG2B2Static_0 = 1;
  ptr = goodG2B2Source_0(0LL);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 612140: using guessed type int goodG2B2Static_0;

//----- (00000000004087A2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_21_good()
{
  goodG2B1_23();
  goodG2B2_23();
}

//----- (00000000004087BC) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_03_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = malloc(0xAuLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000408861) ----------------------------------------------------
void goodG2B1_24()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = malloc(0x28uLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000408906) ----------------------------------------------------
void goodG2B2_24()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = malloc(0x28uLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (00000000004089AB) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_03_good()
{
  goodG2B1_24();
  goodG2B2_24();
}

//----- (00000000004089C5) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_63_bad()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0xAuLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_63b_badSink(&v0);
}

//----- (0000000000408A04) ----------------------------------------------------
void goodG2B_39()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x28uLL);
  if ( !v0 )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_63b_goodG2BSink(&v0);
}

//----- (0000000000408A43) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_63_good()
{
  goodG2B_39();
}

//----- (0000000000408A53) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54c_badSink(_DWORD *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54d_badSink(a1);
}

//----- (0000000000408A6D) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54c_goodG2BSink(_DWORD *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54d_goodG2BSink(a1);
}

//----- (0000000000408A87) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_18_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = malloc(0xAuLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000408B2D) ----------------------------------------------------
void goodG2B_40()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = malloc(0x28uLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000408BD3) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_18_good()
{
  goodG2B_40();
}

//----- (0000000000408BE3) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53d_badSink(_DWORD *a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]

  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(a1, &src, 0x28uLL);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000408C4A) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_53d_goodG2BSink(_DWORD *a1)
{
  __int64 src; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]

  src = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  memcpy(a1, &src, 0x28uLL);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000408CB1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_12_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = malloc(0xAuLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000408D83) ----------------------------------------------------
void goodG2B_41()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000408E55) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_12_good()
{
  goodG2B_41();
}

//----- (0000000000408E65) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_03_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0xAuLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000408EEF) ----------------------------------------------------
void goodG2B1_25()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0x28uLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000408F79) ----------------------------------------------------
void goodG2B2_25()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = malloc(0x28uLL);
  if ( !dest )
    exit(-1);
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000409003) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_03_good()
{
  goodG2B1_25();
  goodG2B2_25();
}

//----- (000000000040901D) ----------------------------------------------------
__int64 staticReturnsTrue_0()
{
  return 1LL;
}

//----- (0000000000409028) ----------------------------------------------------
__int64 staticReturnsFalse_0()
{
  return 0LL;
}

//----- (0000000000409033) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_08_bad()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    dest = malloc(0xAuLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (00000000004090CB) ----------------------------------------------------
void goodG2B1_26()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)staticReturnsFalse_0() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (000000000040916F) ----------------------------------------------------
void goodG2B2_26()
{
  __int64 src; // [rsp+0h] [rbp-30h]
  __int64 v1; // [rsp+8h] [rbp-28h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 v4; // [rsp+20h] [rbp-10h]
  void *dest; // [rsp+28h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    dest = malloc(0x28uLL);
    if ( !dest )
      exit(-1);
  }
  src = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  memcpy(dest, &src, 0x28uLL);
  printIntLine(*(_DWORD *)dest);
  free(dest);
}

//----- (0000000000409207) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_08_good()
{
  goodG2B1_26();
  goodG2B2_26();
}

//----- (0000000000409221) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_17_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 j; // [rsp+28h] [rbp-18h]
  void *ptr; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  ptr = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    ptr = malloc(0xAuLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( j = 0LL; j <= 9; ++j )
    *((_DWORD *)ptr + j) = *((_DWORD *)&v0 + j);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (00000000004092D9) ----------------------------------------------------
void goodG2B_42()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 j; // [rsp+28h] [rbp-18h]
  void *ptr; // [rsp+30h] [rbp-10h]
  int i; // [rsp+3Ch] [rbp-4h]

  ptr = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( j = 0LL; j <= 9; ++j )
    *((_DWORD *)ptr + j) = *((_DWORD *)&v0 + j);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000409391) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_17_good()
{
  goodG2B_42();
}

//----- (00000000004093A1) ----------------------------------------------------
void __fastcall badSink_2(unsigned int *a1)
{
  __int64 v1; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    a1[i] = *((_DWORD *)&v1 + i);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000409423) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_44_bad()
{
  void *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0xAuLL);
  if ( !v1 )
    exit(-1);
  return ((__int64 (__fastcall *)(void *))badSink_2)(v1);
}

//----- (0000000000409469) ----------------------------------------------------
void __fastcall goodG2BSink_2(unsigned int *a1)
{
  __int64 v1; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    a1[i] = *((_DWORD *)&v1 + i);
  printIntLine(*a1);
  free(a1);
}

//----- (00000000004094EB) ----------------------------------------------------
__int64 goodG2B_43()
{
  void *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x28uLL);
  if ( !v1 )
    exit(-1);
  return ((__int64 (__fastcall *)(void *))goodG2BSink_2)(v1);
}

//----- (0000000000409531) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_44_good()
{
  return goodG2B_43();
}

//----- (0000000000409541) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_11_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0xAuLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (00000000004095F4) ----------------------------------------------------
void goodG2B1_27()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (00000000004096B3) ----------------------------------------------------
void goodG2B2_27()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000409766) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_11_good()
{
  goodG2B1_27();
  goodG2B2_27();
}

//----- (0000000000409780) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54b_badSink(_DWORD *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54c_badSink(a1);
}

//----- (000000000040979A) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54b_goodG2BSink(_DWORD *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_54c_goodG2BSink(a1);
}

//----- (00000000004097B4) ----------------------------------------------------
void *CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61b_badSource()
{
  void *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0xAuLL);
  if ( !v1 )
    exit(-1);
  return v1;
}

//----- (00000000004097E5) ----------------------------------------------------
void *CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_61b_goodG2BSource()
{
  void *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x28uLL);
  if ( !v1 )
    exit(-1);
  return v1;
}

//----- (0000000000409816) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_10_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( globalTrue )
  {
    ptr = malloc(0xAuLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 6120DC: using guessed type int globalTrue;

//----- (00000000004098C5) ----------------------------------------------------
void goodG2B1_28()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( globalFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 612148: using guessed type int globalFalse;

//----- (0000000000409980) ----------------------------------------------------
void goodG2B2_28()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  void *ptr; // [rsp+38h] [rbp-8h]

  ptr = 0LL;
  if ( globalTrue )
  {
    ptr = malloc(0x28uLL);
    if ( !ptr )
      exit(-1);
  }
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}
// 6120DC: using guessed type int globalTrue;

//----- (0000000000409A2F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_10_good()
{
  goodG2B1_28();
  goodG2B2_28();
}

//----- (0000000000409A49) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54c_badSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54d_badSink(a1);
}

//----- (0000000000409A63) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54c_goodG2BSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_54d_goodG2BSink(a1);
}

//----- (0000000000409A7D) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_01_bad()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = malloc(0xAuLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000409B22) ----------------------------------------------------
void goodG2B_44()
{
  __int64 v0; // [rsp+0h] [rbp-40h]
  __int64 v1; // [rsp+8h] [rbp-38h]
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  void *ptr; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  ptr = malloc(0x28uLL);
  if ( !ptr )
    exit(-1);
  v0 = 0LL;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    *((_DWORD *)ptr + i) = *((_DWORD *)&v0 + i);
  printIntLine(*(_DWORD *)ptr);
  free(ptr);
}

//----- (0000000000409BC7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_01_good()
{
  goodG2B_44();
}

//----- (0000000000409BD7) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53d_badSink(unsigned int *a1)
{
  __int64 v1; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    a1[i] = *((_DWORD *)&v1 + i);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000409C59) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_53d_goodG2BSink(unsigned int *a1)
{
  __int64 v1; // [rsp+10h] [rbp-30h]
  __int64 v2; // [rsp+18h] [rbp-28h]
  __int64 v3; // [rsp+20h] [rbp-20h]
  __int64 v4; // [rsp+28h] [rbp-18h]
  __int64 v5; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  for ( i = 0LL; i <= 9; ++i )
    a1[i] = *((_DWORD *)&v1 + i);
  printIntLine(*a1);
  free(a1);
}

//----- (0000000000409CDB) ----------------------------------------------------
int __fastcall printLine(const char *a1)
{
  int result; // eax

  if ( a1 )
    result = puts(a1);
  return result;
}

//----- (0000000000409CFC) ----------------------------------------------------
int __fastcall printWLine(__int64 a1)
{
  int result; // eax

  if ( a1 )
    result = wprintf("%", a1);
  return result;
}

//----- (0000000000409D27) ----------------------------------------------------
int __fastcall printIntLine(unsigned int a1)
{
  return printf("%d\n", a1);
}

//----- (0000000000409D48) ----------------------------------------------------
int __fastcall printShortLine(__int16 a1)
{
  return printf("%hd\n", (unsigned int)a1);
}

//----- (0000000000409D6D) ----------------------------------------------------
int __fastcall printFloatLine(float a1)
{
  return printf("%f\n", a1);
}

//----- (0000000000409D93) ----------------------------------------------------
int __fastcall printLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (0000000000409DB7) ----------------------------------------------------
int __fastcall printLongLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (0000000000409DDB) ----------------------------------------------------
int __fastcall printSizeTLine(__int64 a1)
{
  return printf("%zu\n", a1);
}

//----- (0000000000409DFF) ----------------------------------------------------
int __fastcall printHexCharLine(char a1)
{
  return printf("%02x\n", (unsigned int)a1);
}

//----- (0000000000409E23) ----------------------------------------------------
int __fastcall printWcharLine(int a1)
{
  int v2; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+14h] [rbp-Ch]

  v2 = a1;
  v3 = 0;
  return printf("%ls\n", &v2);
}

//----- (0000000000409E53) ----------------------------------------------------
int __fastcall printUnsignedLine(unsigned int a1)
{
  return printf("%u\n", a1);
}

//----- (0000000000409E74) ----------------------------------------------------
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1)
{
  return printf("%02x\n", a1);
}

//----- (0000000000409E98) ----------------------------------------------------
int __fastcall printDoubleLine(double a1)
{
  return printf("%g\n", a1);
}

//----- (0000000000409EC3) ----------------------------------------------------
int __fastcall printStructLine(unsigned int *a1)
{
  return printf("%d -- %d\n", *a1, a1[1]);
}

//----- (0000000000409EEF) ----------------------------------------------------
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2)
{
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; i < a2; ++i )
    printf("%02x", *(unsigned __int8 *)(a1 + i));
  return puts(s);
}

//----- (0000000000409F46) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL;
        i < a2
     && (*__ctype_b_loc())[*(char *)(2 * i + v4)] & 0x1000
     && (*__ctype_b_loc())[*(char *)(2 * i + 1 + v4)] & 0x1000;
        ++i )
  {
    __isoc99_sscanf(2 * i + v4, "%02x", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400980: using guessed type __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040A01F) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL; i < a2 && iswxdigit(*(_DWORD *)(8 * i + v4)) && iswxdigit(*(_DWORD *)(8 * i + 4 + v4)); ++i )
  {
    __isoc99_swscanf(8 * i + v4, "%", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400A40: using guessed type __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040A0D3) ----------------------------------------------------
__int64 globalReturnsTrue()
{
  return 1LL;
}

//----- (000000000040A0DE) ----------------------------------------------------
__int64 globalReturnsFalse()
{
  return 0LL;
}

//----- (000000000040A0E9) ----------------------------------------------------
__int64 globalReturnsTrueOrFalse()
{
  return (unsigned int)(rand() % 2);
}

//----- (000000000040A0FF) ----------------------------------------------------
void good1()
{
  ;
}

//----- (000000000040A105) ----------------------------------------------------
void good2()
{
  ;
}

//----- (000000000040A10B) ----------------------------------------------------
void good3()
{
  ;
}

//----- (000000000040A111) ----------------------------------------------------
void good4()
{
  ;
}

//----- (000000000040A117) ----------------------------------------------------
void good5()
{
  ;
}

//----- (000000000040A11D) ----------------------------------------------------
void good6()
{
  ;
}

//----- (000000000040A123) ----------------------------------------------------
void good7()
{
  ;
}

//----- (000000000040A129) ----------------------------------------------------
void good8()
{
  ;
}

//----- (000000000040A12F) ----------------------------------------------------
void good9()
{
  ;
}

//----- (000000000040A135) ----------------------------------------------------
void bad1()
{
  ;
}

//----- (000000000040A13B) ----------------------------------------------------
void bad2()
{
  ;
}

//----- (000000000040A141) ----------------------------------------------------
void bad3()
{
  ;
}

//----- (000000000040A147) ----------------------------------------------------
void bad4()
{
  ;
}

//----- (000000000040A14D) ----------------------------------------------------
void bad5()
{
  ;
}

//----- (000000000040A153) ----------------------------------------------------
void bad6()
{
  ;
}

//----- (000000000040A159) ----------------------------------------------------
void bad7()
{
  ;
}

//----- (000000000040A15F) ----------------------------------------------------
void bad8()
{
  ;
}

//----- (000000000040A165) ----------------------------------------------------
void bad9()
{
  ;
}

//----- (000000000040A16B) ----------------------------------------------------
void __fastcall __noreturn internal_start(void *a1)
{
  (*((void (__fastcall **)(_QWORD))a1 + 1))(*((_QWORD *)a1 + 2));
  pthread_exit(0LL);
}

//----- (000000000040A19E) ----------------------------------------------------
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3)
{
  __int64 result; // rax
  void **v4; // [rsp+8h] [rbp-28h]
  pthread_t newthread; // [rsp+20h] [rbp-10h]
  void *arg; // [rsp+28h] [rbp-8h]

  v4 = a3;
  *a3 = 0LL;
  arg = malloc(0x18uLL);
  if ( !arg )
    return 0LL;
  *((_QWORD *)arg + 1) = a1;
  *((_QWORD *)arg + 2) = a2;
  if ( pthread_create(&newthread, 0LL, (void *(*)(void *))internal_start, arg) )
  {
    free(arg);
    result = 0LL;
  }
  else
  {
    *(_QWORD *)arg = newthread;
    *v4 = arg;
    result = 1LL;
  }
  return result;
}

//----- (000000000040A242) ----------------------------------------------------
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1)
{
  void *thread_return; // [rsp+18h] [rbp-8h]

  return pthread_join(*a1, &thread_return) == 0;
}

//----- (000000000040A276) ----------------------------------------------------
__int64 __fastcall stdThreadDestroy(void *a1)
{
  free(a1);
  return 1LL;
}

//----- (000000000040A295) ----------------------------------------------------
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1)
{
  __int64 result; // rax
  pthread_mutex_t *mutex; // [rsp+18h] [rbp-8h]

  *a1 = 0LL;
  mutex = (pthread_mutex_t *)malloc(0x28uLL);
  if ( !mutex )
    return 0LL;
  if ( pthread_mutex_init(mutex, 0LL) )
  {
    free(a1);
    result = 0LL;
  }
  else
  {
    *a1 = mutex;
    result = 1LL;
  }
  return result;
}

//----- (000000000040A30A) ----------------------------------------------------
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1)
{
  return pthread_mutex_lock(a1);
}

//----- (000000000040A324) ----------------------------------------------------
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1)
{
  return pthread_mutex_unlock(a1);
}

//----- (000000000040A33E) ----------------------------------------------------
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1)
{
  pthread_mutex_destroy(a1);
  free(a1);
}

//----- (000000000040A370) ----------------------------------------------------
void _libc_csu_init(void)
{
  __int64 v0; // rbx
  signed __int64 v1; // rbp

  v0 = 0LL;
  v1 = &_do_global_dtors_aux_fini_array_entry - _frame_dummy_init_array_entry;
  init_proc();
  if ( v1 )
  {
    do
      _frame_dummy_init_array_entry[v0++]();
    while ( v0 != v1 );
  }
}
// 611DD0: using guessed type __int64 (__fastcall *_frame_dummy_init_array_entry[2])();
// 611DD8: using guessed type __int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)();

//----- (000000000040A3E4) ----------------------------------------------------
void term_proc()
{
  ;
}

// ALL OK, 414 function(s) have been successfully decompiled
