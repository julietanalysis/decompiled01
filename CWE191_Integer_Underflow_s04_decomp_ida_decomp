/* This file was generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2018 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

void *init_proc();
__int64 sub_400BF0();
// int printf(const char *format, ...);
// void *memset(void *s, int c, size_t n);
// int close(int fd);
// __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD); weak
// int puts(const char *s);
// uint16_t htons(uint16_t hostshort);
// __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD); weak
// void *malloc(size_t size);
// int __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end);
// ssize_t recv(int fd, void *buf, size_t n, int flags);
// int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr);
// char *fgets(char *s, int n, FILE *stream);
// int iswxdigit(wint_t wc);
// void free(void *ptr);
// int pthread_create(pthread_t *newthread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);
// int listen(int fd, int n);
// const unsigned __int16 **__ctype_b_loc(void);
// int pthread_join(pthread_t th, void **thread_return);
// void __noreturn pthread_exit(void *retval);
// int atoi(const char *nptr);
// int connect(int fd, const struct sockaddr *addr, socklen_t len);
// int socket(int domain, int type, int protocol);
// int wprintf(const wchar_t *format, ...);
// __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD); weak
// void srand(unsigned int seed);
// int bind(int fd, const struct sockaddr *addr, socklen_t len);
// int pthread_mutex_lock(pthread_mutex_t *mutex);
// int rand(void);
// int pthread_mutex_destroy(pthread_mutex_t *mutex);
// int accept(int fd, struct sockaddr *addr, socklen_t *addr_len);
// int pthread_mutex_unlock(pthread_mutex_t *mutex);
// time_t time(time_t *timer);
// in_addr_t inet_addr(const char *cp);
// __int64 _gmon_start__(void); weak
// void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>);
__int64 deregister_tm_clones();
__int64 register_tm_clones();
__int64 _do_global_dtors_aux();
__int64 frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
__int64 badSource();
int CWE191_Integer_Underflow__int_min_postdec_42_bad();
__int64 goodG2BSource();
int goodG2B();
__int64 goodB2GSource();
int goodB2G();
int CWE191_Integer_Underflow__int_min_postdec_42_good();
__int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_65_bad();
int goodG2B_0();
__int64 goodB2G_0();
__int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_65_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_09_bad();
int goodB2G1();
int goodB2G2();
int goodG2B1();
int goodG2B2();
int CWE191_Integer_Underflow__int64_t_min_postdec_09_good();
int CWE191_Integer_Underflow__short_min_postdec_51_bad();
int goodG2B_1();
int goodB2G_1();
int CWE191_Integer_Underflow__short_min_postdec_51_good();
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_52b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_52b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_52b_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_53d_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_53d_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_53d_goodB2GSink(char a1);
int CWE191_Integer_Underflow__char_fscanf_postdec_13_bad();
int goodB2G1_0();
int goodB2G2_0();
int goodG2B1_0();
int goodG2B2_0();
int CWE191_Integer_Underflow__char_fscanf_postdec_13_good();
__int64 CWE191_Integer_Underflow__int_fgets_postdec_65_bad();
int goodG2B_2();
__int64 goodB2G_2();
__int64 CWE191_Integer_Underflow__int_fgets_postdec_65_good();
int __fastcall CWE191_Integer_Underflow__char_min_postdec_22_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_22_goodB2G1Sink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_22_goodB2G2Sink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_22_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_63b_badSink(_WORD *a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_63b_goodG2BSink(_WORD *a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_63b_goodB2GSink(_WORD *a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_65b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_65b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_65b_goodB2GSink(__int64 a1);
int badSink();
int CWE191_Integer_Underflow__short_min_postdec_45_bad();
int goodG2BSink();
int goodG2B_3();
int goodB2GSink();
int goodB2G_3();
int CWE191_Integer_Underflow__short_min_postdec_45_good();
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54c_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54c_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54c_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__int_min_postdec_05_bad();
int goodB2G1_1();
int goodB2G2_1();
int goodG2B1_1();
int goodG2B2_1();
int CWE191_Integer_Underflow__int_min_postdec_05_good();
void CWE191_Integer_Underflow__unsigned_int_rand_postdec_17_bad();
void goodB2G_4();
int goodG2B_4();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_17_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_67_bad();
int goodG2B_5();
int goodB2G_5();
int CWE191_Integer_Underflow__int64_t_min_postdec_67_good();
int __fastcall badSink_0(int a1);
int CWE191_Integer_Underflow__int_min_postdec_41_bad();
int __fastcall goodG2BSink_0(int a1);
int goodG2B_6();
int __fastcall goodB2GSink_0(int a1);
int goodB2G_6();
int CWE191_Integer_Underflow__int_min_postdec_41_good();
int CWE191_Integer_Underflow__short_min_postdec_06_bad();
int goodB2G1_2();
int goodB2G2_2();
int goodG2B1_2();
int goodG2B2_2();
int CWE191_Integer_Underflow__short_min_postdec_06_good();
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_53d_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_53d_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_53d_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_18_bad();
int goodB2G_7();
int goodG2B_7();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_18_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_52_bad();
int goodG2B_8();
int goodB2G_8();
int CWE191_Integer_Underflow__int_listen_socket_postdec_52_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_34_bad();
int goodG2B_9();
int goodB2G_9();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_34_good();
int CWE191_Integer_Underflow__int_min_postdec_34_bad();
int goodG2B_10();
int goodB2G_10();
int CWE191_Integer_Underflow__int_min_postdec_34_good();
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_51b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_51b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_51b_goodB2GSink(int a1);
int __fastcall badSink_1(char a1);
int CWE191_Integer_Underflow__char_fscanf_postdec_21_bad();
int __fastcall goodB2G1Sink(char a1);
int goodB2G1_3();
int __fastcall goodB2G2Sink(char a1);
int goodB2G2_3();
int __fastcall goodG2BSink_1(char a1);
int goodG2B_11();
int CWE191_Integer_Underflow__char_fscanf_postdec_21_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_03_bad();
int goodB2G1_4();
int goodB2G2_4();
int goodG2B1_3();
int goodG2B2_3();
int CWE191_Integer_Underflow__char_fscanf_postdec_03_good();
int __fastcall CWE191_Integer_Underflow__int_min_postdec_66b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_66b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_66b_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__int_listen_socket_postdec_16_bad();
int goodB2G_11();
int goodG2B_12();
int CWE191_Integer_Underflow__int_listen_socket_postdec_16_good();
int CWE191_Integer_Underflow__char_min_postdec_22_bad();
int goodB2G1_5();
int goodB2G2_5();
int goodG2B_13();
int CWE191_Integer_Underflow__char_min_postdec_22_good();
__int64 staticReturnsTrue();
__int64 staticReturnsFalse();
int CWE191_Integer_Underflow__int64_t_rand_postdec_08_bad();
int goodB2G1_6();
int goodB2G2_6();
int goodG2B1_4();
int goodG2B2_4();
int CWE191_Integer_Underflow__int64_t_rand_postdec_08_good();
int CWE191_Integer_Underflow__char_rand_postdec_67_bad();
int goodG2B_14();
int goodB2G_12();
int CWE191_Integer_Underflow__char_rand_postdec_67_good();
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_67b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_67b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_67b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_listen_socket_postdec_51_bad();
int goodG2B_15();
int goodB2G_13();
int CWE191_Integer_Underflow__int_listen_socket_postdec_51_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_12_bad();
int goodB2G_14();
int goodG2B_16();
int CWE191_Integer_Underflow__char_fscanf_postdec_12_good();
int CWE191_Integer_Underflow__char_min_postdec_13_bad();
int goodB2G1_7();
int goodB2G2_7();
int goodG2B1_5();
int goodG2B2_5();
int CWE191_Integer_Underflow__char_min_postdec_13_good();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_61_bad();
int goodG2B_17();
int goodB2G_15();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_61_good();
int CWE191_Integer_Underflow__int_min_postdec_66_bad();
int goodG2B_18();
int goodB2G_16();
int CWE191_Integer_Underflow__int_min_postdec_66_good();
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54b_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_15_bad();
int goodB2G1_8();
int goodB2G2_8();
int goodG2B1_6();
int goodG2B2_6();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_15_good();
int badSink_2();
int CWE191_Integer_Underflow__int_listen_socket_postdec_45_bad();
int goodG2BSink_2();
int goodG2B_19();
int goodB2GSink_1();
int goodB2G_17();
int CWE191_Integer_Underflow__int_listen_socket_postdec_45_good();
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_52c_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_52c_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_52c_goodB2GSink(char a1);
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_68b_badSink();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_68b_goodG2BSink();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_68b_goodB2GSink();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_07_bad();
int goodB2G1_9();
int goodB2G2_9();
int goodG2B1_7();
int goodG2B2_7();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_07_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_06_bad();
int goodB2G1_10();
int goodB2G2_10();
int goodG2B1_8();
int goodG2B2_8();
int CWE191_Integer_Underflow__int_listen_socket_postdec_06_good();
__int64 __fastcall badSource_0(unsigned int a1);
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_42_bad();
__int64 goodG2BSource_0();
int goodG2B_20();
__int64 __fastcall goodB2GSource_0(unsigned int a1);
int goodB2G_18();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_42_good();
int CWE191_Integer_Underflow__short_min_postdec_63_bad();
int goodG2B_21();
int goodB2G_19();
int CWE191_Integer_Underflow__short_min_postdec_63_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54e_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54e_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54e_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_connect_socket_postdec_67_bad();
int goodG2B_22();
int goodB2G_20();
int CWE191_Integer_Underflow__int_connect_socket_postdec_67_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_11_bad();
int goodB2G1_11();
int goodB2G2_11();
int goodG2B1_9();
int goodG2B2_9();
int CWE191_Integer_Underflow__char_fscanf_postdec_11_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_02_bad();
int goodB2G1_12();
int goodB2G2_12();
int goodG2B1_10();
int goodG2B2_10();
int CWE191_Integer_Underflow__char_fscanf_postdec_02_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_22_bad();
int goodB2G1_13();
int goodB2G2_13();
int goodG2B_23();
int CWE191_Integer_Underflow__int64_t_min_postdec_22_good();
int __fastcall badSink_3(char a1);
int CWE191_Integer_Underflow__char_min_postdec_21_bad();
int __fastcall goodB2G1Sink_0(char a1);
int goodB2G1_14();
int __fastcall goodB2G2Sink_0(char a1);
int goodB2G2_14();
int __fastcall goodG2BSink_3(char a1);
int goodG2B_24();
int CWE191_Integer_Underflow__char_min_postdec_21_good();
int CWE191_Integer_Underflow__char_min_postdec_03_bad();
int goodB2G1_15();
int goodB2G2_15();
int goodG2B1_11();
int goodG2B2_11();
int CWE191_Integer_Underflow__char_min_postdec_03_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_67b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_67b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_67b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int64_t_min_postdec_65_bad();
int goodG2B_25();
int goodB2G_21();
int CWE191_Integer_Underflow__int64_t_min_postdec_65_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_10_bad();
int goodB2G1_16();
int goodB2G2_16();
int goodG2B1_12();
int goodG2B2_12();
int CWE191_Integer_Underflow__char_fscanf_postdec_10_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_54_bad();
int goodG2B_26();
int goodB2G_22();
int CWE191_Integer_Underflow__int64_t_rand_postdec_54_good();
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_64b_badSink(_WORD *a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_64b_goodG2BSink(_WORD *a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_64b_goodB2GSink(_WORD *a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54d_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54d_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54d_goodB2GSink(char a1);
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_05_bad();
int goodB2G1_17();
int goodB2G2_17();
int goodG2B1_13();
int goodG2B2_13();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_05_good();
int __fastcall badSink_4(int a1);
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_41_bad();
int __fastcall goodG2BSink_4(int a1);
int goodG2B_27();
int __fastcall goodB2GSink_2(int a1);
int goodB2G_23();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_41_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_01_bad();
int goodG2B_28();
int goodB2G_24();
int CWE191_Integer_Underflow__char_fscanf_postdec_01_good();
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54e_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54e_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54e_goodB2GSink(int a1);
int CWE191_Integer_Underflow__char_min_postdec_12_bad();
int goodB2G_25();
int goodG2B_29();
int CWE191_Integer_Underflow__char_min_postdec_12_good();
int __fastcall badSink_5(char a1);
int CWE191_Integer_Underflow__char_fscanf_postdec_41_bad();
int __fastcall goodG2BSink_5(char a1);
int goodG2B_30();
int __fastcall goodB2GSink_3(char a1);
int goodB2G_26();
int CWE191_Integer_Underflow__char_fscanf_postdec_41_good();
int CWE191_Integer_Underflow__int_connect_socket_postdec_07_bad();
int goodB2G1_18();
int goodB2G2_18();
int goodG2B1_14();
int goodG2B2_14();
int CWE191_Integer_Underflow__int_connect_socket_postdec_07_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_51_bad();
int goodG2B_31();
int goodB2G_27();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_51_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_04_bad();
int goodB2G1_19();
int goodB2G2_19();
int goodG2B1_15();
int goodG2B2_15();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_04_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_34_bad();
int goodG2B_32();
int goodB2G_28();
int CWE191_Integer_Underflow__char_fscanf_postdec_34_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_54_bad();
int goodG2B_33();
int goodB2G_29();
int CWE191_Integer_Underflow__short_fscanf_postdec_54_good();
int CWE191_Integer_Underflow__short_rand_postdec_11_bad();
int goodB2G1_20();
int goodB2G2_20();
int goodG2B1_16();
int goodG2B2_16();
int CWE191_Integer_Underflow__short_rand_postdec_11_good();
__int64 staticReturnsTrue_0();
__int64 staticReturnsFalse_0();
int CWE191_Integer_Underflow__short_min_postdec_08_bad();
int goodB2G1_21();
int goodB2G2_21();
int goodG2B1_17();
int goodG2B2_17();
int CWE191_Integer_Underflow__short_min_postdec_08_good();
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_66b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_66b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_66b_goodB2GSink(__int64 a1);
int badSink_6();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_45_bad();
int goodG2BSink_6();
int goodG2B_34();
int goodB2GSink_4();
int goodB2G_30();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_45_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_06_bad();
int goodB2G1_22();
int goodB2G2_22();
int goodG2B1_18();
int goodG2B2_18();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_06_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_66b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_66b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_66b_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__int_fgets_postdec_22_bad();
int goodB2G1_23();
int goodB2G2_23();
int goodG2B_35();
int CWE191_Integer_Underflow__int_fgets_postdec_22_good();
__int64 badSource_1();
int CWE191_Integer_Underflow__char_min_postdec_42_bad();
__int64 goodG2BSource_1();
int goodG2B_36();
__int64 goodB2GSource_1();
int goodB2G_31();
int CWE191_Integer_Underflow__char_min_postdec_42_good();
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodB2G1Sink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodB2G2Sink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodG2BSink(__int64 a1);
int CWE191_Integer_Underflow__short_rand_postdec_10_bad();
int goodB2G1_24();
int goodB2G2_24();
int goodG2B1_19();
int goodG2B2_19();
int CWE191_Integer_Underflow__short_rand_postdec_10_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_32_bad();
int goodG2B_37();
int goodB2G_32();
int CWE191_Integer_Underflow__int64_t_min_postdec_32_good();
int __fastcall badSink_7(int a1);
__int64 CWE191_Integer_Underflow__int_fscanf_postdec_44_bad();
int __fastcall goodG2BSink_7(int a1);
int goodG2B_38();
int __fastcall goodB2GSink_5(int a1);
__int64 goodB2G_33();
__int64 CWE191_Integer_Underflow__int_fscanf_postdec_44_good();
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54b_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54b_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54b_goodB2GSink(__int16 a1);
int CWE191_Integer_Underflow__short_rand_postdec_01_bad();
int goodG2B_39();
int goodB2G_34();
int CWE191_Integer_Underflow__short_rand_postdec_01_good();
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54c_goodB2GSink(int a1);
int CWE191_Integer_Underflow__char_fscanf_postdec_66_bad();
int goodG2B_40();
int goodB2G_35();
int CWE191_Integer_Underflow__char_fscanf_postdec_66_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_17_bad();
int goodB2G_36();
int goodG2B_41();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_17_good();
int __fastcall CWE191_Integer_Underflow__short_min_postdec_64b_badSink(_WORD *a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_64b_goodG2BSink(_WORD *a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_64b_goodB2GSink(_WORD *a1);
int CWE191_Integer_Underflow__int_fgets_postdec_13_bad();
int goodB2G1_25();
int goodB2G2_25();
int goodG2B1_20();
int goodG2B2_20();
int CWE191_Integer_Underflow__int_fgets_postdec_13_good();
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_53d_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_53d_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_53d_goodB2GSink(int a1);
int CWE191_Integer_Underflow__char_min_postdec_05_bad();
int goodB2G1_26();
int goodB2G2_26();
int goodG2B1_21();
int goodG2B2_21();
int CWE191_Integer_Underflow__char_min_postdec_05_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_bad();
int goodB2G1_27();
int goodB2G2_27();
int goodG2B_42();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_good();
int __fastcall badSink_8(char a1);
int CWE191_Integer_Underflow__char_min_postdec_41_bad();
int __fastcall goodG2BSink_8(char a1);
int goodG2B_43();
int __fastcall goodB2GSink_6(char a1);
int goodB2G_37();
int CWE191_Integer_Underflow__char_min_postdec_41_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_04_bad();
int goodB2G1_28();
int goodB2G2_28();
int goodG2B1_22();
int goodG2B2_22();
int CWE191_Integer_Underflow__int64_t_min_postdec_04_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_31_bad();
int goodG2B_44();
int goodB2G_38();
int CWE191_Integer_Underflow__int64_t_min_postdec_31_good();
int CWE191_Integer_Underflow__char_min_postdec_34_bad();
int goodG2B_45();
int goodB2G_39();
int CWE191_Integer_Underflow__char_min_postdec_34_good();
int CWE191_Integer_Underflow__short_min_postdec_54_bad();
int goodG2B_46();
int goodB2G_40();
int CWE191_Integer_Underflow__short_min_postdec_54_good();
int __fastcall CWE191_Integer_Underflow__char_min_postdec_66b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_66b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_66b_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__int64_t_min_postdec_13_bad();
int goodB2G1_29();
int goodB2G2_29();
int goodG2B1_23();
int goodG2B2_23();
int CWE191_Integer_Underflow__int64_t_min_postdec_13_good();
__int64 CWE191_Integer_Underflow__char_fscanf_postdec_65_bad();
int goodG2B_47();
__int64 goodB2G_41();
__int64 CWE191_Integer_Underflow__char_fscanf_postdec_65_good();
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_63b_badSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_63b_goodB2GSink(_DWORD *a1);
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_13_bad();
int goodB2G1_30();
int goodB2G2_30();
int goodG2B1_24();
int goodG2B2_24();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_13_good();
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_22_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_22_goodB2G1Sink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_22_goodB2G2Sink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_22_goodG2BSink(__int64 a1);
int __fastcall badSink_9(int a1);
int CWE191_Integer_Underflow__int_min_postdec_44_bad();
int __fastcall goodG2BSink_9(int a1);
int goodG2B_48();
int __fastcall goodB2GSink_7(int a1);
int goodB2G_42();
int CWE191_Integer_Underflow__int_min_postdec_44_good();
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_67b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_67b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_67b_goodB2GSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54b_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_53b_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_53b_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_53b_goodB2GSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_53c_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_53c_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_53c_goodB2GSink(__int16 a1);
int CWE191_Integer_Underflow__int_fgets_postdec_12_bad();
int goodB2G_43();
int goodG2B_49();
int CWE191_Integer_Underflow__int_fgets_postdec_12_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_64b_badSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_64b_goodB2GSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_52c_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_52c_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_52c_goodB2GSink(__int16 a1);
int __fastcall badSink_10(__int64 a1);
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_21_bad();
int __fastcall goodB2G1Sink_1(__int64 a1);
int goodB2G1_31();
int __fastcall goodB2G2Sink_1(__int64 a1);
int goodB2G2_31();
int __fastcall goodG2BSink_10(__int64 a1);
int goodG2B_50();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_21_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_03_bad();
int goodB2G1_32();
int goodB2G2_32();
int goodG2B1_25();
int goodG2B2_25();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_03_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_68_bad();
int goodG2B_51();
int goodB2G_44();
int CWE191_Integer_Underflow__short_fscanf_postdec_68_good();
__int64 staticReturnsTrue_1();
__int64 staticReturnsFalse_1();
int CWE191_Integer_Underflow__int_fscanf_postdec_08_bad();
int goodB2G1_33();
int goodB2G2_33();
int goodG2B1_26();
int goodG2B2_26();
int CWE191_Integer_Underflow__int_fscanf_postdec_08_good();
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_66b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_66b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_66b_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__short_min_postdec_64_bad();
int goodG2B_52();
int goodB2G_45();
int CWE191_Integer_Underflow__short_min_postdec_64_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_67_bad();
int goodG2B_53();
int goodB2G_46();
int CWE191_Integer_Underflow__int64_t_rand_postdec_67_good();
int CWE191_Integer_Underflow__int_fgets_postdec_11_bad();
int goodB2G1_34();
int goodB2G2_34();
int goodG2B1_27();
int goodG2B2_27();
int CWE191_Integer_Underflow__int_fgets_postdec_11_good();
int CWE191_Integer_Underflow__int_fgets_postdec_02_bad();
int goodB2G1_35();
int goodB2G2_35();
int goodG2B1_28();
int goodG2B2_28();
int CWE191_Integer_Underflow__int_fgets_postdec_02_good();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_64_bad();
int goodG2B_54();
int goodB2G_47();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_64_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_12_bad();
int goodB2G_48();
int goodG2B_55();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_12_good();
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_65b_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_65b_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_65b_goodB2GSink(__int16 a1);
int CWE191_Integer_Underflow__int_fgets_postdec_10_bad();
int goodB2G1_36();
int goodB2G2_36();
int goodG2B1_29();
int goodG2B2_29();
int CWE191_Integer_Underflow__int_fgets_postdec_10_good();
void CWE191_Integer_Underflow__int_rand_postdec_17_bad();
void goodB2G_49();
int goodG2B_56();
int CWE191_Integer_Underflow__int_rand_postdec_17_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_64b_badSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_64b_goodB2GSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_53c_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_53c_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_53c_goodB2GSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54e_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54e_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54e_goodB2GSink(char a1);
int CWE191_Integer_Underflow__int_fgets_postdec_01_bad();
int goodG2B_57();
int goodB2G_50();
int CWE191_Integer_Underflow__int_fgets_postdec_01_good();
int __fastcall CWE191_Integer_Underflow__short_min_postdec_53b_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_53b_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_53b_goodB2GSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_52b_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_52b_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_52b_goodB2GSink(__int16 a1);
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_02_bad();
int goodB2G1_37();
int goodB2G2_37();
int goodG2B1_30();
int goodG2B2_30();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_02_good();
int __fastcall CWE191_Integer_Underflow__short_min_postdec_52c_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_52c_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_52c_goodB2GSink(__int16 a1);
int __fastcall badSink_11(__int64 a1);
int CWE191_Integer_Underflow__int64_t_min_postdec_21_bad();
int __fastcall goodB2G1Sink_2(__int64 a1);
int goodB2G1_38();
int __fastcall goodB2G2Sink_2(__int64 a1);
int goodB2G2_38();
int __fastcall goodG2BSink_11(__int64 a1);
int goodG2B_58();
int CWE191_Integer_Underflow__int64_t_min_postdec_21_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_03_bad();
int goodB2G1_39();
int goodB2G2_39();
int goodG2B1_31();
int goodG2B2_31();
int CWE191_Integer_Underflow__int64_t_min_postdec_03_good();
int CWE191_Integer_Underflow__short_min_postdec_68_bad();
int goodG2B_59();
int goodB2G_51();
int CWE191_Integer_Underflow__short_min_postdec_68_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_10_bad();
int goodB2G1_40();
int goodB2G2_40();
int goodG2B1_32();
int goodG2B2_32();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_10_good();
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54d_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54d_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54d_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__char_fscanf_postdec_32_bad();
int goodG2B_60();
int goodB2G_52();
int CWE191_Integer_Underflow__char_fscanf_postdec_32_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_32_bad();
int goodG2B_61();
int goodB2G_53();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_32_good();
int CWE191_Integer_Underflow__int_fgets_postdec_09_bad();
int goodB2G1_41();
int goodB2G2_41();
int goodG2B1_33();
int goodG2B2_33();
int CWE191_Integer_Underflow__int_fgets_postdec_09_good();
int CWE191_Integer_Underflow__short_min_postdec_53_bad();
int goodG2B_62();
int goodB2G_54();
int CWE191_Integer_Underflow__short_min_postdec_53_good();
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54e_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54e_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54e_goodB2GSink(int a1);
int __fastcall badSink_12(int a1);
__int64 CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_44_bad();
int __fastcall goodG2BSink_12(int a1);
int goodG2B_63();
int __fastcall goodB2GSink_8(int a1);
__int64 goodB2G_55();
__int64 CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_44_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_01_bad();
int goodG2B_64();
int goodB2G_56();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_01_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_52_bad();
int goodG2B_65();
int goodB2G_57();
int CWE191_Integer_Underflow__short_fscanf_postdec_52_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_12_bad();
int goodB2G_58();
int goodG2B_66();
int CWE191_Integer_Underflow__int64_t_min_postdec_12_good();
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_51b_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_51b_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_51b_goodB2GSink(__int16 a1);
int CWE191_Integer_Underflow__int_rand_postdec_61_bad();
int goodG2B_67();
int goodB2G_59();
int CWE191_Integer_Underflow__int_rand_postdec_61_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_04_bad();
int goodB2G1_42();
int goodB2G2_42();
int goodG2B1_34();
int goodG2B2_34();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_04_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_16_bad();
int goodB2G_60();
int goodG2B_68();
int CWE191_Integer_Underflow__short_fscanf_postdec_16_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_68b_badSink();
int CWE191_Integer_Underflow__int_listen_socket_postdec_68b_goodG2BSink();
int CWE191_Integer_Underflow__int_listen_socket_postdec_68b_goodB2GSink();
int CWE191_Integer_Underflow__int_fscanf_postdec_15_bad();
int goodB2G1_43();
int goodB2G2_43();
int goodG2B1_35();
int goodG2B2_35();
int CWE191_Integer_Underflow__int_fscanf_postdec_15_good();
int CWE191_Integer_Underflow__int_rand_postdec_07_bad();
int goodB2G1_44();
int goodB2G2_44();
int goodG2B1_36();
int goodG2B2_36();
int CWE191_Integer_Underflow__int_rand_postdec_07_good();
int CWE191_Integer_Underflow__short_rand_postdec_61_bad();
int goodG2B_69();
int goodB2G_61();
int CWE191_Integer_Underflow__short_rand_postdec_61_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_04_bad();
int goodB2G1_45();
int goodB2G2_45();
int goodG2B1_37();
int goodG2B2_37();
int CWE191_Integer_Underflow__char_fscanf_postdec_04_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_31_bad();
int goodG2B_70();
int goodB2G_62();
int CWE191_Integer_Underflow__char_fscanf_postdec_31_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_15_bad();
int goodB2G1_46();
int goodB2G2_46();
int goodG2B1_38();
int goodG2B2_38();
int CWE191_Integer_Underflow__int64_t_rand_postdec_15_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_09_bad();
int goodB2G1_47();
int goodB2G2_47();
int goodG2B1_39();
int goodG2B2_39();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_09_good();
__int64 badSource_2();
int CWE191_Integer_Underflow__int_rand_postdec_42_bad();
__int64 goodG2BSource_2();
int goodG2B_71();
__int64 goodB2GSource_2();
int goodB2G_63();
int CWE191_Integer_Underflow__int_rand_postdec_42_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_11_bad();
int goodB2G1_48();
int goodB2G2_48();
int goodG2B1_40();
int goodG2B2_40();
int CWE191_Integer_Underflow__int64_t_min_postdec_11_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_02_bad();
int goodB2G1_49();
int goodB2G2_49();
int goodG2B1_41();
int goodG2B2_41();
int CWE191_Integer_Underflow__int64_t_min_postdec_02_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_51_bad();
int goodG2B_72();
int goodB2G_64();
int CWE191_Integer_Underflow__short_fscanf_postdec_51_good();
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_53b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_53b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_53b_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_63b_badSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_63b_goodB2GSink(_DWORD *a1);
int CWE191_Integer_Underflow__int_min_postdec_01_bad();
int goodG2B_73();
int goodB2G_65();
int CWE191_Integer_Underflow__int_min_postdec_01_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_18_bad();
int goodB2G_66();
int goodG2B_74();
int CWE191_Integer_Underflow__int64_t_rand_postdec_18_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_68_bad();
int goodG2B_75();
int goodB2G_67();
int CWE191_Integer_Underflow__int_listen_socket_postdec_68_good();
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_22_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_22_goodB2G1Sink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_22_goodB2G2Sink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_22_goodG2BSink(char a1);
int CWE191_Integer_Underflow__int64_t_min_postdec_10_bad();
int goodB2G1_50();
int goodB2G2_50();
int goodG2B1_42();
int goodG2B2_42();
int CWE191_Integer_Underflow__int64_t_min_postdec_10_good();
int CWE191_Integer_Underflow__char_min_postdec_14_bad();
int goodB2G1_51();
int goodB2G2_51();
int goodG2B1_43();
int goodG2B2_43();
int CWE191_Integer_Underflow__char_min_postdec_14_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_bad();
int goodB2G1_52();
int goodB2G2_52();
int goodG2B_76();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_good();
int badSink_13();
int CWE191_Integer_Underflow__short_fscanf_postdec_45_bad();
int goodG2BSink_13();
int goodG2B_77();
int goodB2GSink_9();
int goodB2G_68();
int CWE191_Integer_Underflow__short_fscanf_postdec_45_good();
int CWE191_Integer_Underflow__char_min_postdec_32_bad();
int goodG2B_78();
int goodB2G_69();
int CWE191_Integer_Underflow__char_min_postdec_32_good();
int CWE191_Integer_Underflow__int_fscanf_postdec_05_bad();
int goodB2G1_53();
int goodB2G2_53();
int goodG2B1_44();
int goodG2B2_44();
int CWE191_Integer_Underflow__int_fscanf_postdec_05_good();
int __fastcall badSink_14(int a1);
int CWE191_Integer_Underflow__int_fscanf_postdec_41_bad();
int __fastcall goodG2BSink_14(int a1);
int goodG2B_79();
int __fastcall goodB2GSink_10(int a1);
int goodB2G_70();
int CWE191_Integer_Underflow__int_fscanf_postdec_41_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_06_bad();
int goodB2G1_54();
int goodB2G2_54();
int goodG2B1_45();
int goodG2B2_45();
int CWE191_Integer_Underflow__short_fscanf_postdec_06_good();
int CWE191_Integer_Underflow__char_rand_postdec_15_bad();
int goodB2G1_55();
int goodB2G2_55();
int goodG2B1_46();
int goodG2B2_46();
int CWE191_Integer_Underflow__char_rand_postdec_15_good();
int __fastcall CWE191_Integer_Underflow__char_min_postdec_67b_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_67b_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_67b_goodB2GSink(char a1);
int __fastcall badSink_15(int a1);
int CWE191_Integer_Underflow__unsigned_int_min_postdec_44_bad();
int __fastcall goodG2BSink_15(int a1);
int goodG2B_80();
int __fastcall goodB2GSink_11(int a1);
int goodB2G_71();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_44_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_01_bad();
int goodG2B_81();
int goodB2G_72();
int CWE191_Integer_Underflow__int64_t_min_postdec_01_good();
int CWE191_Integer_Underflow__short_min_postdec_52_bad();
int goodG2B_82();
int goodB2G_73();
int CWE191_Integer_Underflow__short_min_postdec_52_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_53_bad();
int goodG2B_83();
int goodB2G_74();
int CWE191_Integer_Underflow__int_listen_socket_postdec_53_good();
int __fastcall CWE191_Integer_Underflow__short_min_postdec_51b_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_51b_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_51b_goodB2GSink(__int16 a1);
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_63_bad();
int goodG2B_84();
int goodB2G_75();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_63_good();
int CWE191_Integer_Underflow__short_min_postdec_16_bad();
int goodB2G_76();
int goodG2B_85();
int CWE191_Integer_Underflow__short_min_postdec_16_good();
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_66b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_66b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_66b_goodB2GSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_65b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_65b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_65b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__char_fscanf_postdec_22_bad();
int goodB2G1_56();
int goodB2G2_56();
int goodG2B_86();
int CWE191_Integer_Underflow__char_fscanf_postdec_22_good();
int CWE191_Integer_Underflow__int_min_postdec_15_bad();
int goodB2G1_57();
int goodB2G2_57();
int goodG2B1_47();
int goodG2B2_47();
int CWE191_Integer_Underflow__int_min_postdec_15_good();
int CWE191_Integer_Underflow__char_min_postdec_04_bad();
int goodB2G1_58();
int goodB2G2_58();
int goodG2B1_48();
int goodG2B2_48();
int CWE191_Integer_Underflow__char_min_postdec_04_good();
int CWE191_Integer_Underflow__char_min_postdec_31_bad();
int goodG2B_87();
int goodB2G_77();
int CWE191_Integer_Underflow__char_min_postdec_31_good();
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_63b_badSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_63b_goodB2GSink(_DWORD *a1);
int CWE191_Integer_Underflow__short_fscanf_postdec_61_bad();
int goodG2B_88();
int goodB2G_78();
int CWE191_Integer_Underflow__short_fscanf_postdec_61_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_16_bad();
int goodB2G_79();
int goodG2B_89();
int CWE191_Integer_Underflow__int64_t_min_postdec_16_good();
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54d_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54d_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54d_goodB2GSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54d_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54d_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54d_goodB2GSink(int a1);
int CWE191_Integer_Underflow__short_min_postdec_17_bad();
int goodB2G_80();
int goodG2B_90();
int CWE191_Integer_Underflow__short_min_postdec_17_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_07_bad();
int goodB2G1_59();
int goodB2G2_59();
int goodG2B1_49();
int goodG2B2_49();
int CWE191_Integer_Underflow__short_fscanf_postdec_07_good();
int CWE191_Integer_Underflow__int_connect_socket_postdec_10_bad();
int goodB2G1_60();
int goodB2G2_60();
int goodG2B1_50();
int goodG2B2_50();
int CWE191_Integer_Underflow__int_connect_socket_postdec_10_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_14_bad();
int goodB2G1_61();
int goodB2G2_61();
int goodG2B1_51();
int goodG2B2_51();
int CWE191_Integer_Underflow__int64_t_min_postdec_14_good();
int CWE191_Integer_Underflow__int_rand_postdec_51_bad();
int goodG2B_91();
int goodB2G_81();
int CWE191_Integer_Underflow__int_rand_postdec_51_good();
int CWE191_Integer_Underflow__char_rand_postdec_09_bad();
int goodB2G1_62();
int goodB2G2_62();
int goodG2B1_52();
int goodG2B2_52();
int CWE191_Integer_Underflow__char_rand_postdec_09_good();
int CWE191_Integer_Underflow__char_min_postdec_54_bad();
int goodG2B_92();
int goodB2G_82();
int CWE191_Integer_Underflow__char_min_postdec_54_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_51_bad();
int goodG2B_93();
int goodB2G_83();
int CWE191_Integer_Underflow__int64_t_min_postdec_51_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_09_bad();
int goodB2G1_63();
int goodB2G2_63();
int goodG2B1_53();
int goodG2B2_53();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_09_good();
int CWE191_Integer_Underflow__int_connect_socket_postdec_01_bad();
int goodG2B_94();
int goodB2G_84();
int CWE191_Integer_Underflow__int_connect_socket_postdec_01_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_63_bad();
int goodG2B_95();
int goodB2G_85();
int CWE191_Integer_Underflow__int_listen_socket_postdec_63_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_68b_badSink();
int CWE191_Integer_Underflow__char_fscanf_postdec_68b_goodG2BSink();
int CWE191_Integer_Underflow__char_fscanf_postdec_68b_goodB2GSink();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_66_bad();
int goodG2B_96();
int goodB2G_86();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_66_good();
int badSink_16();
int CWE191_Integer_Underflow__int64_t_min_postdec_45_bad();
int goodG2BSink_16();
int goodG2B_97();
int goodB2GSink_12();
int goodB2G_87();
int CWE191_Integer_Underflow__int64_t_min_postdec_45_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_06_bad();
int goodB2G1_64();
int goodB2G2_64();
int goodG2B1_54();
int goodG2B2_54();
int CWE191_Integer_Underflow__int64_t_min_postdec_06_good();
int CWE191_Integer_Underflow__int_rand_postdec_04_bad();
int goodB2G1_65();
int goodB2G2_65();
int goodG2B1_55();
int goodG2B2_55();
int CWE191_Integer_Underflow__int_rand_postdec_04_good();
int CWE191_Integer_Underflow__int_rand_postdec_31_bad();
int goodG2B_98();
int goodB2G_88();
int CWE191_Integer_Underflow__int_rand_postdec_31_good();
int CWE191_Integer_Underflow__int_connect_socket_postdec_09_bad();
int goodB2G1_66();
int goodB2G2_66();
int goodG2B1_56();
int goodG2B2_56();
int CWE191_Integer_Underflow__int_connect_socket_postdec_09_good();
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_53b_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_53b_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_53b_goodB2GSink(char a1);
int CWE191_Integer_Underflow__int_fscanf_postdec_18_bad();
int goodB2G_89();
int goodG2B_99();
int CWE191_Integer_Underflow__int_fscanf_postdec_18_good();
int CWE191_Integer_Underflow__char_min_postdec_17_bad();
int goodB2G_90();
int goodG2B_100();
int CWE191_Integer_Underflow__char_min_postdec_17_good();
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54d_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54d_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54d_goodB2GSink(int a1);
int CWE191_Integer_Underflow__char_fscanf_postdec_68_bad();
int goodG2B_101();
int goodB2G_91();
int CWE191_Integer_Underflow__char_fscanf_postdec_68_good();
int CWE191_Integer_Underflow__int_connect_socket_postdec_12_bad();
int goodB2G_92();
int goodG2B_102();
int CWE191_Integer_Underflow__int_connect_socket_postdec_12_good();
void CWE191_Integer_Underflow__int_listen_socket_postdec_17_bad();
void goodB2G_93();
int goodG2B_103();
int CWE191_Integer_Underflow__int_listen_socket_postdec_17_good();
int CWE191_Integer_Underflow__short_min_postdec_07_bad();
int goodB2G1_67();
int goodB2G2_67();
int goodG2B1_57();
int goodG2B2_57();
int CWE191_Integer_Underflow__short_min_postdec_07_good();
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_22_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_22_goodB2G1Sink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_22_goodB2G2Sink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_22_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_67b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_67b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_67b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_connect_socket_postdec_64_bad();
int goodG2B_104();
int goodB2G_94();
int CWE191_Integer_Underflow__int_connect_socket_postdec_64_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_53_bad();
int goodG2B_105();
int goodB2G_95();
int CWE191_Integer_Underflow__char_fscanf_postdec_53_good();
int CWE191_Integer_Underflow__char_min_postdec_68b_badSink();
int CWE191_Integer_Underflow__char_min_postdec_68b_goodG2BSink();
int CWE191_Integer_Underflow__char_min_postdec_68b_goodB2GSink();
__int64 __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_61b_badSource(unsigned int a1);
__int64 CWE191_Integer_Underflow__int_listen_socket_postdec_61b_goodG2BSource();
__int64 __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_61b_goodB2GSource(unsigned int a1);
int CWE191_Integer_Underflow__short_fscanf_postdec_12_bad();
int goodB2G_96();
int goodG2B_106();
int CWE191_Integer_Underflow__short_fscanf_postdec_12_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_67_bad();
int goodG2B_107();
int goodB2G_97();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_67_good();
int __fastcall CWE191_Integer_Underflow__char_min_postdec_53b_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_53b_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_53b_goodB2GSink(char a1);
int CWE191_Integer_Underflow__int_min_postdec_18_bad();
int goodB2G_98();
int goodG2B_108();
int CWE191_Integer_Underflow__int_min_postdec_18_good();
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_52b_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_52b_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_52b_goodB2GSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_52c_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_52c_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_52c_goodB2GSink(char a1);
int CWE191_Integer_Underflow__short_fscanf_postdec_64_bad();
int goodG2B_109();
int goodB2G_99();
int CWE191_Integer_Underflow__short_fscanf_postdec_64_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_61_bad();
int goodG2B_110();
int goodB2G_100();
int CWE191_Integer_Underflow__int_listen_socket_postdec_61_good();
int CWE191_Integer_Underflow__char_min_postdec_68_bad();
int goodG2B_111();
int goodB2G_101();
int CWE191_Integer_Underflow__char_min_postdec_68_good();
int CWE191_Integer_Underflow__int_connect_socket_postdec_02_bad();
int goodB2G1_68();
int goodB2G2_68();
int goodG2B1_58();
int goodG2B2_58();
int CWE191_Integer_Underflow__int_connect_socket_postdec_02_good();
__int64 CWE191_Integer_Underflow__char_rand_postdec_65_bad();
int goodG2B_112();
__int64 goodB2G_102();
__int64 CWE191_Integer_Underflow__char_rand_postdec_65_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_14_bad();
int goodB2G1_69();
int goodB2G2_69();
int goodG2B1_59();
int goodG2B2_59();
int CWE191_Integer_Underflow__int_listen_socket_postdec_14_good();
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_65b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_65b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_65b_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_67b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_67b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_67b_goodB2GSink(int a1);
int __fastcall badSink_17(__int16 a1);
int CWE191_Integer_Underflow__short_rand_postdec_21_bad();
int __fastcall goodB2G1Sink_3(__int16 a1);
int goodB2G1_70();
int __fastcall goodB2G2Sink_3(__int16 a1);
int goodB2G2_70();
int __fastcall goodG2BSink_17(__int16 a1);
int goodG2B_113();
int CWE191_Integer_Underflow__short_rand_postdec_21_good();
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_65b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_65b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_65b_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__int_connect_socket_postdec_11_bad();
int goodB2G1_71();
int goodB2G2_71();
int goodG2B1_60();
int goodG2B2_60();
int CWE191_Integer_Underflow__int_connect_socket_postdec_11_good();
int CWE191_Integer_Underflow__char_min_postdec_53_bad();
int goodG2B_114();
int goodB2G_103();
int CWE191_Integer_Underflow__char_min_postdec_53_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_52_bad();
int goodG2B_115();
int goodB2G_104();
int CWE191_Integer_Underflow__char_fscanf_postdec_52_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_16_bad();
int goodB2G_105();
int goodG2B_116();
int CWE191_Integer_Underflow__char_fscanf_postdec_16_good();
int __fastcall badSink_18(int a1);
int CWE191_Integer_Underflow__int_rand_postdec_21_bad();
int __fastcall goodB2G1Sink_4(int a1);
int goodB2G1_72();
int __fastcall goodB2G2Sink_4(int a1);
int goodB2G2_72();
int __fastcall goodG2BSink_18(int a1);
int goodG2B_117();
int CWE191_Integer_Underflow__int_rand_postdec_21_good();
int CWE191_Integer_Underflow__int_rand_postdec_03_bad();
int goodB2G1_73();
int goodB2G2_73();
int goodG2B1_61();
int goodG2B2_61();
int CWE191_Integer_Underflow__int_rand_postdec_03_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54d_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54d_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54d_goodB2GSink(int a1);
__int64 CWE191_Integer_Underflow__int_connect_socket_postdec_65_bad();
int goodG2B_118();
__int64 goodB2G_106();
__int64 CWE191_Integer_Underflow__int_connect_socket_postdec_65_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_67_bad();
int goodG2B_119();
int goodB2G_107();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_67_good();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_14_bad();
int goodB2G1_74();
int goodB2G2_74();
int goodG2B1_62();
int goodG2B2_62();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_14_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_51_bad();
int goodG2B_120();
int goodB2G_108();
int CWE191_Integer_Underflow__char_fscanf_postdec_51_good();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_32_bad();
int goodG2B_121();
int goodB2G_109();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_32_good();
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54c_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_rand_postdec_12_bad();
int goodB2G_110();
int goodG2B_122();
int CWE191_Integer_Underflow__int_rand_postdec_12_good();
int __fastcall badSink_19(int a1);
__int64 CWE191_Integer_Underflow__int_fgets_postdec_44_bad();
int __fastcall goodG2BSink_19(int a1);
int goodG2B_123();
int __fastcall goodB2GSink_13(int a1);
__int64 goodB2G_111();
__int64 CWE191_Integer_Underflow__int_fgets_postdec_44_good();
int __fastcall CWE191_Integer_Underflow__int_min_postdec_53d_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_53d_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_53d_goodB2GSink(int a1);
int badSink_20();
int CWE191_Integer_Underflow__char_fscanf_postdec_45_bad();
int goodG2BSink_20();
int goodG2B_124();
int goodB2GSink_14();
int goodB2G_112();
int CWE191_Integer_Underflow__char_fscanf_postdec_45_good();
int CWE191_Integer_Underflow__int_min_postdec_12_bad();
int goodB2G_113();
int goodG2B_125();
int CWE191_Integer_Underflow__int_min_postdec_12_good();
int CWE191_Integer_Underflow__char_min_postdec_52_bad();
int goodG2B_126();
int goodB2G_114();
int CWE191_Integer_Underflow__char_min_postdec_52_good();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_04_bad();
int goodB2G1_75();
int goodB2G2_75();
int goodG2B1_63();
int goodG2B2_63();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_04_good();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_31_bad();
int goodG2B_127();
int goodB2G_115();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_31_good();
int __fastcall CWE191_Integer_Underflow__char_min_postdec_51b_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_51b_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_51b_goodB2GSink(char a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54e_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54e_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54e_goodB2GSink(__int16 a1);
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_18_bad();
int goodB2G_116();
int goodG2B_128();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_18_good();
int CWE191_Integer_Underflow__char_min_postdec_16_bad();
int goodB2G_117();
int goodG2B_129();
int CWE191_Integer_Underflow__char_min_postdec_16_good();
int CWE191_Integer_Underflow__int_rand_postdec_11_bad();
int goodB2G1_76();
int goodB2G2_76();
int goodG2B1_64();
int goodG2B2_64();
int CWE191_Integer_Underflow__int_rand_postdec_11_good();
__int64 staticReturnsTrue_2();
__int64 staticReturnsFalse_2();
int CWE191_Integer_Underflow__int_min_postdec_08_bad();
int goodB2G1_77();
int goodB2G2_77();
int goodG2B1_65();
int goodG2B2_65();
int CWE191_Integer_Underflow__int_min_postdec_08_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54d_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54d_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54d_goodB2GSink(int a1);
int __fastcall badSink_21(__int64 a1);
__int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_44_bad();
int __fastcall goodG2BSink_21(__int64 a1);
int goodG2B_130();
int __fastcall goodB2GSink_15(__int64 a1);
__int64 goodB2G_118();
__int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_44_good();
__int64 CWE191_Integer_Underflow__int_rand_postdec_61b_badSource();
__int64 CWE191_Integer_Underflow__int_rand_postdec_61b_goodG2BSource();
__int64 CWE191_Integer_Underflow__int_rand_postdec_61b_goodB2GSource();
int CWE191_Integer_Underflow__int_rand_postdec_10_bad();
int goodB2G1_78();
int goodB2G2_78();
int goodG2B1_66();
int goodG2B2_66();
int CWE191_Integer_Underflow__int_rand_postdec_10_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodB2G1Sink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodB2G2Sink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodG2BSink(int a1);
int CWE191_Integer_Underflow__char_min_postdec_51_bad();
int goodG2B_131();
int goodB2G_119();
int CWE191_Integer_Underflow__char_min_postdec_51_good();
int CWE191_Integer_Underflow__short_rand_postdec_15_bad();
int goodB2G1_79();
int goodB2G2_79();
int goodG2B1_67();
int goodG2B2_67();
int CWE191_Integer_Underflow__short_rand_postdec_15_good();
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_rand_postdec_01_bad();
int goodG2B_132();
int goodB2G_120();
int CWE191_Integer_Underflow__int_rand_postdec_01_good();
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_67b_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_67b_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_67b_goodB2GSink(char a1);
__int64 badSource_3();
int CWE191_Integer_Underflow__short_rand_postdec_42_bad();
__int64 goodG2BSource_3();
int goodG2B_133();
__int64 goodB2GSource_3();
int goodB2G_121();
int CWE191_Integer_Underflow__short_rand_postdec_42_good();
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_53c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_53c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_53c_goodB2GSink(int a1);
int CWE191_Integer_Underflow__short_fscanf_postdec_11_bad();
int goodB2G1_80();
int goodB2G2_80();
int goodG2B1_68();
int goodG2B2_68();
int CWE191_Integer_Underflow__short_fscanf_postdec_11_good();
int CWE191_Integer_Underflow__char_min_postdec_06_bad();
int goodB2G1_81();
int goodB2G2_81();
int goodG2B1_69();
int goodG2B2_69();
int CWE191_Integer_Underflow__char_min_postdec_06_good();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_bad();
int goodB2G1_82();
int goodB2G2_82();
int goodG2B_134();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_good();
int CWE191_Integer_Underflow__int_rand_postdec_09_bad();
int goodB2G1_83();
int goodB2G2_83();
int goodG2B1_70();
int goodG2B2_70();
int CWE191_Integer_Underflow__int_rand_postdec_09_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_18_bad();
int goodB2G_122();
int goodG2B_135();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_18_good();
int CWE191_Integer_Underflow__short_rand_postdec_05_bad();
int goodB2G1_84();
int goodB2G2_84();
int goodG2B1_71();
int goodG2B2_71();
int CWE191_Integer_Underflow__short_rand_postdec_05_good();
int __fastcall badSink_22(__int16 a1);
int CWE191_Integer_Underflow__short_rand_postdec_41_bad();
int __fastcall goodG2BSink_22(__int16 a1);
int goodG2B_136();
int __fastcall goodB2GSink_16(__int16 a1);
int goodB2G_123();
int CWE191_Integer_Underflow__short_rand_postdec_41_good();
int __fastcall badSink_23(__int64 a1);
int CWE191_Integer_Underflow__int64_t_min_postdec_44_bad();
int __fastcall goodG2BSink_23(__int64 a1);
int goodG2B_137();
int __fastcall goodB2GSink_17(__int64 a1);
int goodB2G_124();
int CWE191_Integer_Underflow__int64_t_min_postdec_44_good();
int __fastcall CWE191_Integer_Underflow__char_min_postdec_53d_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_53d_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_53d_goodB2GSink(char a1);
int CWE191_Integer_Underflow__int_fscanf_postdec_68b_badSink();
int CWE191_Integer_Underflow__int_fscanf_postdec_68b_goodG2BSink();
int CWE191_Integer_Underflow__int_fscanf_postdec_68b_goodB2GSink();
int CWE191_Integer_Underflow__int64_t_rand_postdec_63_bad();
int goodG2B_138();
int goodB2G_125();
int CWE191_Integer_Underflow__int64_t_rand_postdec_63_good();
int CWE191_Integer_Underflow__short_rand_postdec_34_bad();
int goodG2B_139();
int goodB2G_126();
int CWE191_Integer_Underflow__short_rand_postdec_34_good();
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_66b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_66b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_66b_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__unsigned_int_min_postdec_11_bad();
int goodB2G1_85();
int goodB2G2_85();
int goodG2B1_72();
int goodG2B2_72();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_11_good();
__int64 staticReturnsTrue_3();
__int64 staticReturnsFalse_3();
int CWE191_Integer_Underflow__char_fscanf_postdec_08_bad();
int goodB2G1_86();
int goodB2G2_86();
int goodG2B1_73();
int goodG2B2_73();
int CWE191_Integer_Underflow__char_fscanf_postdec_08_good();
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_53b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_53b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_53b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_fgets_postdec_61_bad();
int goodG2B_140();
int goodB2G_127();
int CWE191_Integer_Underflow__int_fgets_postdec_61_good();
int __fastcall CWE191_Integer_Underflow__int_min_postdec_53c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_53c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_53c_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_07_bad();
int goodB2G1_87();
int goodB2G2_87();
int goodG2B1_74();
int goodG2B2_74();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_07_good();
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_52c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_52c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_52c_goodB2GSink(int a1);
__int64 staticReturnsTrue_4();
__int64 staticReturnsFalse_4();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_08_bad();
int goodB2G1_88();
int goodB2G2_88();
int goodG2B1_75();
int goodG2B2_75();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_08_good();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_03_bad();
int goodB2G1_89();
int goodB2G2_89();
int goodG2B1_76();
int goodG2B2_76();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_03_good();
int CWE191_Integer_Underflow__int_fscanf_postdec_68_bad();
int goodG2B_141();
int goodB2G_128();
int CWE191_Integer_Underflow__int_fscanf_postdec_68_good();
int CWE191_Integer_Underflow__int_min_postdec_10_bad();
int goodB2G1_90();
int goodB2G2_90();
int goodG2B1_77();
int goodG2B2_77();
int CWE191_Integer_Underflow__int_min_postdec_10_good();
void CWE191_Integer_Underflow__int64_t_rand_postdec_17_bad();
void goodB2G_129();
int goodG2B_142();
int CWE191_Integer_Underflow__int64_t_rand_postdec_17_good();
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54e_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54e_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54e_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_fscanf_postdec_53_bad();
int goodG2B_143();
int goodB2G_130();
int CWE191_Integer_Underflow__int_fscanf_postdec_53_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54c_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_12_bad();
int goodB2G_131();
int goodG2B_144();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_12_good();
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54e_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54e_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54e_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_min_postdec_68b_badSink();
int CWE191_Integer_Underflow__int_min_postdec_68b_goodG2BSink();
int CWE191_Integer_Underflow__int_min_postdec_68b_goodB2GSink();
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_64b_badSink(_BYTE *a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_64b_goodG2BSink(_BYTE *a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_64b_goodB2GSink(_BYTE *a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_53d_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_53d_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_53d_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_65b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_65b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_65b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_fgets_postdec_15_bad();
int goodB2G1_91();
int goodB2G2_91();
int goodG2B1_78();
int goodG2B2_78();
int CWE191_Integer_Underflow__int_fgets_postdec_15_good();
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_67b_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_67b_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_67b_goodB2GSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_66b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_66b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_66b_goodB2GSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_53b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_53b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_53b_goodB2GSink(int a1);
__int64 __fastcall badSource_4(unsigned int a1);
int CWE191_Integer_Underflow__int_fgets_postdec_42_bad();
__int64 goodG2BSource_4();
int goodG2B_145();
__int64 __fastcall goodB2GSource_4(unsigned int a1);
int goodB2G_132();
int CWE191_Integer_Underflow__int_fgets_postdec_42_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_63_bad();
int goodG2B_146();
int goodB2G_133();
int CWE191_Integer_Underflow__short_fscanf_postdec_63_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54_bad();
int goodG2B_147();
int goodB2G_134();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54_good();
int __fastcall CWE191_Integer_Underflow__int_min_postdec_52c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_52c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_52c_goodB2GSink(int a1);
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_11_bad();
int goodB2G1_92();
int goodB2G2_92();
int goodG2B1_79();
int goodG2B2_79();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_11_good();
__int64 staticReturnsTrue_5();
__int64 staticReturnsFalse_5();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_08_bad();
int goodB2G1_93();
int goodB2G2_93();
int goodG2B1_80();
int goodG2B2_80();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_08_good();
int CWE191_Integer_Underflow__char_rand_postdec_64_bad();
int goodG2B_148();
int goodB2G_135();
int CWE191_Integer_Underflow__char_rand_postdec_64_good();
int CWE191_Integer_Underflow__int_min_postdec_68_bad();
int goodG2B_149();
int goodB2G_136();
int CWE191_Integer_Underflow__int_min_postdec_68_good();
__int64 CWE191_Integer_Underflow__int_rand_postdec_65_bad();
int goodG2B_150();
__int64 goodB2G_137();
__int64 CWE191_Integer_Underflow__int_rand_postdec_65_good();
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_64b_badSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_64b_goodB2GSink(_DWORD *a1);
int CWE191_Integer_Underflow__int64_t_rand_postdec_61_bad();
int goodG2B_151();
int goodB2G_138();
int CWE191_Integer_Underflow__int64_t_rand_postdec_61_good();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_10_bad();
int goodB2G1_94();
int goodB2G2_94();
int goodG2B1_81();
int goodG2B2_81();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_10_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_67_bad();
int goodG2B_152();
int goodB2G_139();
int CWE191_Integer_Underflow__short_fscanf_postdec_67_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_07_bad();
int goodB2G1_95();
int goodB2G2_95();
int goodG2B1_82();
int goodG2B2_82();
int CWE191_Integer_Underflow__int64_t_rand_postdec_07_good();
int __fastcall badSink_24(int a1);
int CWE191_Integer_Underflow__int_fgets_postdec_41_bad();
int __fastcall goodG2BSink_24(int a1);
int goodG2B_153();
int __fastcall goodB2GSink_18(int a1);
int goodB2G_140();
int CWE191_Integer_Underflow__int_fgets_postdec_41_good();
int CWE191_Integer_Underflow__int_fscanf_postdec_52_bad();
int goodG2B_154();
int goodB2G_141();
int CWE191_Integer_Underflow__int_fscanf_postdec_52_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_01_bad();
int goodG2B_155();
int goodB2G_142();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_01_good();
int CWE191_Integer_Underflow__int_rand_postdec_13_bad();
int goodB2G1_96();
int goodB2G2_96();
int goodG2B1_83();
int goodG2B2_83();
int CWE191_Integer_Underflow__int_rand_postdec_13_good();
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_51b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_51b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_51b_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53c_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_fscanf_postdec_16_bad();
int goodB2G_143();
int goodG2B_156();
int CWE191_Integer_Underflow__int_fscanf_postdec_16_good();
int CWE191_Integer_Underflow__int_fgets_postdec_34_bad();
int goodG2B_157();
int goodB2G_144();
int CWE191_Integer_Underflow__int_fgets_postdec_34_good();
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_66b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_66b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_66b_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__short_rand_postdec_09_bad();
int goodB2G1_97();
int goodB2G2_97();
int goodG2B1_84();
int goodG2B2_84();
int CWE191_Integer_Underflow__short_rand_postdec_09_good();
int CWE191_Integer_Underflow__int_fscanf_postdec_66_bad();
int goodG2B_158();
int goodB2G_145();
int CWE191_Integer_Underflow__int_fscanf_postdec_66_good();
int __fastcall CWE191_Integer_Underflow__short_min_postdec_67b_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_67b_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_67b_goodB2GSink(__int16 a1);
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_09_bad();
int goodB2G1_98();
int goodB2G2_98();
int goodG2B1_85();
int goodG2B2_85();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_09_good();
int __fastcall CWE191_Integer_Underflow__int_min_postdec_52b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_52b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_52b_goodB2GSink(int a1);
int badSink_25();
int CWE191_Integer_Underflow__char_min_postdec_45_bad();
int goodG2BSink_25();
int goodG2B_159();
int goodB2GSink_19();
int goodB2G_146();
int CWE191_Integer_Underflow__char_min_postdec_45_good();
int __fastcall badSink_26(__int64 a1);
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_41_bad();
int __fastcall goodG2BSink_26(__int64 a1);
int goodG2B_160();
int __fastcall goodB2GSink_20(__int64 a1);
int goodB2G_147();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_41_good();
int __fastcall badSink_27(char a1);
__int64 CWE191_Integer_Underflow__char_fscanf_postdec_44_bad();
int __fastcall goodG2BSink_27(char a1);
int goodG2B_161();
int __fastcall goodB2GSink_21(char a1);
__int64 goodB2G_148();
__int64 CWE191_Integer_Underflow__char_fscanf_postdec_44_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68b_badSink();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68b_goodG2BSink();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68b_goodB2GSink();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_34_bad();
int goodG2B_162();
int goodB2G_149();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_34_good();
int CWE191_Integer_Underflow__int_fgets_postdec_16_bad();
int goodB2G_150();
int goodG2B_163();
int CWE191_Integer_Underflow__int_fgets_postdec_16_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_66_bad();
int goodG2B_164();
int goodB2G_151();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_66_good();
int badSink_28();
int CWE191_Integer_Underflow__int_fscanf_postdec_45_bad();
int goodG2BSink_28();
int goodG2B_165();
int goodB2GSink_22();
int goodB2G_152();
int CWE191_Integer_Underflow__int_fscanf_postdec_45_good();
__int64 __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_61b_badSource(unsigned int a1);
__int64 CWE191_Integer_Underflow__int_connect_socket_postdec_61b_goodG2BSource();
__int64 __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_61b_goodB2GSource(unsigned int a1);
int CWE191_Integer_Underflow__int_fgets_postdec_66_bad();
int goodG2B_166();
int goodB2G_153();
int CWE191_Integer_Underflow__int_fgets_postdec_66_good();
int CWE191_Integer_Underflow__short_min_postdec_04_bad();
int goodB2G1_99();
int goodB2G2_99();
int goodG2B1_86();
int goodG2B2_86();
int CWE191_Integer_Underflow__short_min_postdec_04_good();
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_66b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_66b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_66b_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__int64_t_min_postdec_15_bad();
int goodB2G1_100();
int goodB2G2_100();
int goodG2B1_87();
int goodG2B2_87();
int CWE191_Integer_Underflow__int64_t_min_postdec_15_good();
int CWE191_Integer_Underflow__short_min_postdec_67_bad();
int goodG2B_167();
int goodB2G_154();
int CWE191_Integer_Underflow__short_min_postdec_67_good();
int CWE191_Integer_Underflow__int_min_postdec_52_bad();
int goodG2B_168();
int goodB2G_155();
int CWE191_Integer_Underflow__int_min_postdec_52_good();
int __fastcall CWE191_Integer_Underflow__int_min_postdec_51b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_51b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_51b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_min_postdec_63_bad();
int goodG2B_169();
int goodB2G_156();
int CWE191_Integer_Underflow__int_min_postdec_63_good();
int CWE191_Integer_Underflow__short_rand_postdec_14_bad();
int goodB2G1_101();
int goodB2G2_101();
int goodG2B1_88();
int goodG2B2_88();
int CWE191_Integer_Underflow__short_rand_postdec_14_good();
int CWE191_Integer_Underflow__short_rand_postdec_02_bad();
int goodB2G1_102();
int goodB2G2_102();
int goodG2B1_89();
int goodG2B2_89();
int CWE191_Integer_Underflow__short_rand_postdec_02_good();
int CWE191_Integer_Underflow__int_min_postdec_16_bad();
int goodB2G_157();
int goodG2B_170();
int CWE191_Integer_Underflow__int_min_postdec_16_good();
int CWE191_Integer_Underflow__short_rand_postdec_32_bad();
int goodG2B_171();
int goodB2G_158();
int CWE191_Integer_Underflow__short_rand_postdec_32_good();
int __fastcall CWE191_Integer_Underflow__short_min_postdec_52b_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_52b_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_52b_goodB2GSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_65b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_65b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_65b_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_63b_badSink(_BYTE *a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_63b_goodG2BSink(_BYTE *a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_63b_goodB2GSink(_BYTE *a1);
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_bad();
int goodG2B_172();
int goodB2G_159();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_good();
int CWE191_Integer_Underflow__char_rand_postdec_18_bad();
int goodB2G_160();
int goodG2B_173();
int CWE191_Integer_Underflow__char_rand_postdec_18_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_66_bad();
int goodG2B_174();
int goodB2G_161();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_66_good();
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_67b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_67b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_67b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int64_t_min_postdec_05_bad();
int goodB2G1_103();
int goodB2G2_103();
int goodG2B1_90();
int goodG2B2_90();
int CWE191_Integer_Underflow__int64_t_min_postdec_05_good();
int CWE191_Integer_Underflow__int_min_postdec_51_bad();
int goodG2B_175();
int goodB2G_162();
int CWE191_Integer_Underflow__int_min_postdec_51_good();
int __fastcall badSink_29(char a1);
int CWE191_Integer_Underflow__char_min_postdec_44_bad();
int __fastcall goodG2BSink_29(char a1);
int goodG2B_176();
int __fastcall goodB2GSink_23(char a1);
int goodB2G_163();
int CWE191_Integer_Underflow__char_min_postdec_44_good();
int CWE191_Integer_Underflow__short_rand_postdec_04_bad();
int goodB2G1_104();
int goodB2G2_104();
int goodG2B1_91();
int goodG2B2_91();
int CWE191_Integer_Underflow__short_rand_postdec_04_good();
int CWE191_Integer_Underflow__short_rand_postdec_31_bad();
int goodG2B_177();
int goodB2G_164();
int CWE191_Integer_Underflow__short_rand_postdec_31_good();
int CWE191_Integer_Underflow__char_rand_postdec_63_bad();
int goodG2B_178();
int goodB2G_165();
int CWE191_Integer_Underflow__char_rand_postdec_63_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_18_bad();
int goodB2G_166();
int goodG2B_179();
int CWE191_Integer_Underflow__short_fscanf_postdec_18_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_34_bad();
int goodG2B_180();
int goodB2G_167();
int CWE191_Integer_Underflow__int64_t_min_postdec_34_good();
int badSink_30();
int CWE191_Integer_Underflow__int_min_postdec_45_bad();
int goodG2BSink_30();
int goodG2B_181();
int goodB2GSink_24();
int goodB2G_168();
int CWE191_Integer_Underflow__int_min_postdec_45_good();
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_63b_badSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_63b_goodB2GSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_66b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_66b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_66b_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__int_min_postdec_06_bad();
int goodB2G1_105();
int goodB2G2_105();
int goodG2B1_92();
int goodG2B2_92();
int CWE191_Integer_Underflow__int_min_postdec_06_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_67_bad();
int goodG2B_182();
int goodB2G_169();
int CWE191_Integer_Underflow__int_listen_socket_postdec_67_good();
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_22_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G1Sink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G2Sink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_22_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_53b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_53b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_53b_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52b_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_52c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_52c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_52c_goodB2GSink(int a1);
int CWE191_Integer_Underflow__unsigned_int_min_postdec_68_bad();
int goodG2B_183();
int goodB2G_170();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_68_good();
__int64 CWE191_Integer_Underflow__unsigned_int_rand_postdec_65_bad();
int goodG2B_184();
__int64 goodB2G_171();
__int64 CWE191_Integer_Underflow__unsigned_int_rand_postdec_65_good();
int CWE191_Integer_Underflow__int_connect_socket_postdec_63_bad();
int goodG2B_185();
int goodB2G_172();
int CWE191_Integer_Underflow__int_connect_socket_postdec_63_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_66_bad();
int goodG2B_186();
int goodB2G_173();
int CWE191_Integer_Underflow__int64_t_min_postdec_66_good();
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54e_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54e_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54e_goodB2GSink(char a1);
void CWE191_Integer_Underflow__char_rand_postdec_17_bad();
void goodB2G_174();
int goodG2B_187();
int CWE191_Integer_Underflow__char_rand_postdec_17_good();
int CWE191_Integer_Underflow__short_rand_postdec_22_bad();
int goodB2G1_106();
int goodB2G2_106();
int goodG2B_188();
int CWE191_Integer_Underflow__short_rand_postdec_22_good();
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_67b_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_67b_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_67b_goodB2GSink(char a1);
int CWE191_Integer_Underflow__unsigned_int_min_postdec_53_bad();
int goodG2B_189();
int goodB2G_175();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_53_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_51b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_51b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_51b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__short_min_postdec_18_bad();
int goodB2G_176();
int goodG2B_190();
int CWE191_Integer_Underflow__short_min_postdec_18_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_16_bad();
int goodB2G_177();
int goodG2B_191();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_16_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_15_bad();
int goodB2G1_107();
int goodB2G2_107();
int goodG2B1_93();
int goodG2B2_93();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_15_good();
__int64 CWE191_Integer_Underflow__char_rand_postdec_61b_badSource();
__int64 CWE191_Integer_Underflow__char_rand_postdec_61b_goodG2BSource();
__int64 CWE191_Integer_Underflow__char_rand_postdec_61b_goodB2GSource();
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54c_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54c_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54c_goodB2GSink(__int16 a1);
int CWE191_Integer_Underflow__int_min_postdec_14_bad();
int goodB2G1_108();
int goodB2G2_108();
int goodG2B1_94();
int goodG2B2_94();
int CWE191_Integer_Underflow__int_min_postdec_14_good();
__int64 CWE191_Integer_Underflow__int_min_postdec_61b_badSource();
__int64 CWE191_Integer_Underflow__int_min_postdec_61b_goodG2BSource();
__int64 CWE191_Integer_Underflow__int_min_postdec_61b_goodB2GSource();
int CWE191_Integer_Underflow__short_rand_postdec_13_bad();
int goodB2G1_109();
int goodB2G2_109();
int goodG2B1_95();
int goodG2B2_95();
int CWE191_Integer_Underflow__short_rand_postdec_13_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_11_bad();
int goodB2G1_110();
int goodB2G2_110();
int goodG2B1_96();
int goodG2B2_96();
int CWE191_Integer_Underflow__int_listen_socket_postdec_11_good();
void CWE191_Integer_Underflow__int_connect_socket_postdec_17_bad();
void goodB2G_178();
int goodG2B_192();
int CWE191_Integer_Underflow__int_connect_socket_postdec_17_good();
int CWE191_Integer_Underflow__int_fgets_postdec_14_bad();
int goodB2G1_111();
int goodB2G2_111();
int goodG2B1_97();
int goodG2B2_97();
int CWE191_Integer_Underflow__int_fgets_postdec_14_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_51_bad();
int goodG2B_193();
int goodB2G_179();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_51_good();
int CWE191_Integer_Underflow__int_fgets_postdec_32_bad();
int goodG2B_194();
int goodB2G_180();
int CWE191_Integer_Underflow__int_fgets_postdec_32_good();
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54e_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54e_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54e_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__char_rand_postdec_61_bad();
int goodG2B_195();
int goodB2G_181();
int CWE191_Integer_Underflow__char_rand_postdec_61_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_15_bad();
int goodB2G1_112();
int goodB2G2_112();
int goodG2B1_98();
int goodG2B2_98();
int CWE191_Integer_Underflow__char_fscanf_postdec_15_good();
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_64b_badSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_64b_goodB2GSink(_DWORD *a1);
__int64 staticReturnsTrue_6();
__int64 staticReturnsFalse_6();
int CWE191_Integer_Underflow__short_fscanf_postdec_08_bad();
int goodB2G1_113();
int goodB2G2_113();
int goodG2B1_99();
int goodG2B2_99();
int CWE191_Integer_Underflow__short_fscanf_postdec_08_good();
int badSink_31();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_bad();
int goodG2BSink_31();
int goodG2B_196();
int goodB2GSink_25();
int goodB2G_182();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_good();
int CWE191_Integer_Underflow__short_rand_postdec_03_bad();
int goodB2G1_114();
int goodB2G2_114();
int goodG2B1_100();
int goodG2B2_100();
int CWE191_Integer_Underflow__short_rand_postdec_03_good();
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_53d_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_53d_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_53d_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_06_bad();
int goodB2G1_115();
int goodB2G2_115();
int goodG2B1_101();
int goodG2B2_101();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_06_good();
__int64 __fastcall badSource_5(unsigned __int8 a1);
int CWE191_Integer_Underflow__char_fscanf_postdec_42_bad();
__int64 goodG2BSource_5();
int goodG2B_197();
__int64 __fastcall goodB2GSource_5(unsigned __int8 a1);
int goodB2G_183();
int CWE191_Integer_Underflow__char_fscanf_postdec_42_good();
int CWE191_Integer_Underflow__char_min_postdec_66_bad();
int goodG2B_198();
int goodB2G_184();
int CWE191_Integer_Underflow__char_min_postdec_66_good();
int CWE191_Integer_Underflow__int_fgets_postdec_04_bad();
int goodB2G1_116();
int goodB2G2_116();
int goodG2B1_102();
int goodG2B2_102();
int CWE191_Integer_Underflow__int_fgets_postdec_04_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_51b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_51b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_51b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_14_bad();
int goodB2G1_117();
int goodB2G2_117();
int goodG2B1_103();
int goodG2B2_103();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_14_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_32_bad();
int goodG2B_199();
int goodB2G_185();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_32_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_16_bad();
int goodB2G_186();
int goodG2B_200();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_16_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_18_bad();
int goodB2G_187();
int goodG2B_201();
int CWE191_Integer_Underflow__int_listen_socket_postdec_18_good();
int CWE191_Integer_Underflow__int_rand_postdec_64_bad();
int goodG2B_202();
int goodB2G_188();
int CWE191_Integer_Underflow__int_rand_postdec_64_good();
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54c_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54c_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54c_goodB2GSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54b_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54b_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54b_goodB2GSink(__int16 a1);
int CWE191_Integer_Underflow__int_connect_socket_postdec_61_bad();
int goodG2B_203();
int goodB2G_189();
int CWE191_Integer_Underflow__int_connect_socket_postdec_61_good();
int CWE191_Integer_Underflow__short_rand_postdec_12_bad();
int goodB2G_190();
int goodG2B_204();
int CWE191_Integer_Underflow__short_rand_postdec_12_good();
__int64 __fastcall badSource_6(__int64 a1);
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_42_bad();
__int64 goodG2BSource_6();
int goodG2B_205();
__int64 __fastcall goodB2GSource_6(__int64 a1);
int goodB2G_191();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_42_good();
int CWE191_Integer_Underflow__char_rand_postdec_07_bad();
int goodB2G1_118();
int goodB2G2_118();
int goodG2B1_104();
int goodG2B2_104();
int CWE191_Integer_Underflow__char_rand_postdec_07_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_05_bad();
int goodB2G1_119();
int goodB2G2_119();
int goodG2B1_105();
int goodG2B2_105();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_05_good();
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_22_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_22_goodB2G1Sink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_22_goodB2G2Sink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_22_goodG2BSink(int a1);
int CWE191_Integer_Underflow__char_fscanf_postdec_05_bad();
int goodB2G1_120();
int goodB2G2_120();
int goodG2B1_106();
int goodG2B2_106();
int CWE191_Integer_Underflow__char_fscanf_postdec_05_good();
int CWE191_Integer_Underflow__int_fgets_postdec_54_bad();
int goodG2B_206();
int goodB2G_192();
int CWE191_Integer_Underflow__int_fgets_postdec_54_good();
int __fastcall badSink_32(__int16 a1);
int CWE191_Integer_Underflow__short_min_postdec_44_bad();
int __fastcall goodG2BSink_32(__int16 a1);
int goodG2B_207();
int __fastcall goodB2GSink_26(__int16 a1);
int goodB2G_193();
int CWE191_Integer_Underflow__short_min_postdec_44_good();
int CWE191_Integer_Underflow__int_fgets_postdec_64_bad();
int goodG2B_208();
int goodB2G_194();
int CWE191_Integer_Underflow__int_fgets_postdec_64_good();
int CWE191_Integer_Underflow__int_fgets_postdec_03_bad();
int goodB2G1_121();
int goodB2G2_121();
int goodG2B1_107();
int goodG2B2_107();
int CWE191_Integer_Underflow__int_fgets_postdec_03_good();
int CWE191_Integer_Underflow__int_fscanf_postdec_13_bad();
int goodB2G1_122();
int goodB2G2_122();
int goodG2B1_108();
int goodG2B2_108();
int CWE191_Integer_Underflow__int_fscanf_postdec_13_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_52_bad();
int goodG2B_209();
int goodB2G_195();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_52_good();
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_52b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_52b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_52b_goodB2GSink(__int64 a1);
__int64 staticReturnsTrue_7();
__int64 staticReturnsFalse_7();
int CWE191_Integer_Underflow__char_rand_postdec_08_bad();
int goodB2G1_123();
int goodB2G2_123();
int goodG2B1_109();
int goodG2B2_109();
int CWE191_Integer_Underflow__char_rand_postdec_08_good();
int CWE191_Integer_Underflow__short_rand_postdec_63_bad();
int goodG2B_210();
int goodB2G_196();
int CWE191_Integer_Underflow__short_rand_postdec_63_good();
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54c_goodB2GSink(int a1);
int CWE191_Integer_Underflow__short_rand_postdec_18_bad();
int goodB2G_197();
int goodG2B_211();
int CWE191_Integer_Underflow__short_rand_postdec_18_good();
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_53d_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_53d_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_53d_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_67b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_67b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_67b_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_53c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_53c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_53c_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_51b_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_51b_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_51b_goodB2GSink(char a1);
int CWE191_Integer_Underflow__short_min_postdec_61_bad();
int goodG2B_212();
int goodB2G_198();
int CWE191_Integer_Underflow__short_min_postdec_61_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54e_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54e_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54e_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_65b_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_65b_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_65b_goodB2GSink(char a1);
int __fastcall badSink_33(int a1);
int CWE191_Integer_Underflow__int_fscanf_postdec_21_bad();
int __fastcall goodB2G1Sink_5(int a1);
int goodB2G1_124();
int __fastcall goodB2G2Sink_5(int a1);
int goodB2G2_124();
int __fastcall goodG2BSink_33(int a1);
int goodG2B_213();
int CWE191_Integer_Underflow__int_fscanf_postdec_21_good();
int CWE191_Integer_Underflow__int_fscanf_postdec_03_bad();
int goodB2G1_125();
int goodB2G2_125();
int goodG2B1_110();
int goodG2B2_110();
int CWE191_Integer_Underflow__int_fscanf_postdec_03_good();
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54b_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54b_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54b_goodB2GSink(char a1);
int CWE191_Integer_Underflow__int_min_postdec_22_bad();
int goodB2G1_126();
int goodB2G2_126();
int goodG2B_214();
int CWE191_Integer_Underflow__int_min_postdec_22_good();
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_51b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_51b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_51b_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__short_fscanf_postdec_17_bad();
int goodB2G_199();
int goodG2B_215();
int CWE191_Integer_Underflow__short_fscanf_postdec_17_good();
__int64 staticReturnsTrue_8();
__int64 staticReturnsFalse_8();
int CWE191_Integer_Underflow__int_connect_socket_postdec_08_bad();
int goodB2G1_127();
int goodB2G2_127();
int goodG2B1_111();
int goodG2B2_111();
int CWE191_Integer_Underflow__int_connect_socket_postdec_08_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_16_bad();
int goodB2G_200();
int goodG2B_216();
int CWE191_Integer_Underflow__int64_t_rand_postdec_16_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_14_bad();
int goodB2G1_128();
int goodB2G2_128();
int goodG2B1_112();
int goodG2B2_112();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_14_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_32_bad();
int goodG2B_217();
int goodB2G_201();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_32_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_connect_socket_postdec_18_bad();
int goodB2G_202();
int goodG2B_218();
int CWE191_Integer_Underflow__int_connect_socket_postdec_18_good();
int CWE191_Integer_Underflow__char_min_postdec_15_bad();
int goodB2G1_129();
int goodB2G2_129();
int goodG2B1_113();
int goodG2B2_113();
int CWE191_Integer_Underflow__char_min_postdec_15_good();
int CWE191_Integer_Underflow__char_min_postdec_65_bad();
int goodG2B_219();
int goodB2G_203();
int CWE191_Integer_Underflow__char_min_postdec_65_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_68b_badSink();
int CWE191_Integer_Underflow__short_fscanf_postdec_68b_goodG2BSink();
int CWE191_Integer_Underflow__short_fscanf_postdec_68b_goodB2GSink();
int CWE191_Integer_Underflow__int_fscanf_postdec_12_bad();
int goodB2G_204();
int goodG2B_220();
int CWE191_Integer_Underflow__int_fscanf_postdec_12_good();
int CWE191_Integer_Underflow__int_min_postdec_13_bad();
int goodB2G1_130();
int goodB2G2_130();
int goodG2B1_114();
int goodG2B2_114();
int CWE191_Integer_Underflow__int_min_postdec_13_good();
int CWE191_Integer_Underflow__char_rand_postdec_54_bad();
int goodG2B_221();
int goodB2G_205();
int CWE191_Integer_Underflow__char_rand_postdec_54_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_51_bad();
int goodG2B_222();
int goodB2G_206();
int CWE191_Integer_Underflow__int64_t_rand_postdec_51_good();
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_53d_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_53d_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_53d_goodB2GSink(__int64 a1);
__int64 CWE191_Integer_Underflow__short_rand_postdec_61b_badSource();
__int64 CWE191_Integer_Underflow__short_rand_postdec_61b_goodG2BSource();
__int64 CWE191_Integer_Underflow__short_rand_postdec_61b_goodB2GSource();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_04_bad();
int goodB2G1_131();
int goodB2G2_131();
int goodG2B1_115();
int goodG2B2_115();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_04_good();
int badSink_34();
int CWE191_Integer_Underflow__int64_t_rand_postdec_45_bad();
int goodG2BSink_34();
int goodG2B_223();
int goodB2GSink_27();
int goodB2G_207();
int CWE191_Integer_Underflow__int64_t_rand_postdec_45_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_06_bad();
int goodB2G1_132();
int goodB2G2_132();
int goodG2B1_116();
int goodG2B2_116();
int CWE191_Integer_Underflow__int64_t_rand_postdec_06_good();
int CWE191_Integer_Underflow__int_fscanf_postdec_11_bad();
int goodB2G1_133();
int goodB2G2_133();
int goodG2B1_117();
int goodG2B2_117();
int CWE191_Integer_Underflow__int_fscanf_postdec_11_good();
int CWE191_Integer_Underflow__int_fscanf_postdec_02_bad();
int goodB2G1_134();
int goodB2G2_134();
int goodG2B1_118();
int goodG2B2_118();
int CWE191_Integer_Underflow__int_fscanf_postdec_02_good();
int CWE191_Integer_Underflow__int_min_postdec_03_bad();
int goodB2G1_135();
int goodB2G2_135();
int goodG2B1_119();
int goodG2B2_119();
int CWE191_Integer_Underflow__int_min_postdec_03_good();
__int64 CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_65_bad();
int goodG2B_224();
__int64 goodB2G_208();
__int64 CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_65_good();
int CWE191_Integer_Underflow__short_rand_postdec_66_bad();
int goodG2B_225();
int goodB2G_209();
int CWE191_Integer_Underflow__short_rand_postdec_66_good();
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_52c_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_52c_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_52c_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__int_connect_socket_postdec_54_bad();
int goodG2B_226();
int goodB2G_210();
int CWE191_Integer_Underflow__int_connect_socket_postdec_54_good();
unsigned __int64 badSource_7();
int CWE191_Integer_Underflow__int64_t_min_postdec_42_bad();
__int64 goodG2BSource_7();
int goodG2B_227();
unsigned __int64 goodB2GSource_7();
int goodB2G_211();
int CWE191_Integer_Underflow__int64_t_min_postdec_42_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodB2G1Sink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodB2G2Sink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54d_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54d_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54d_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_53b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_53b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_53b_goodB2GSink(__int64 a1);
int __fastcall badSink_35(__int64 a1);
int CWE191_Integer_Underflow__int64_t_rand_postdec_21_bad();
int __fastcall goodB2G1Sink_6(__int64 a1);
int goodB2G1_136();
int __fastcall goodB2G2Sink_6(__int64 a1);
int goodB2G2_136();
int __fastcall goodG2BSink_35(__int64 a1);
int goodG2B_228();
int CWE191_Integer_Underflow__int64_t_rand_postdec_21_good();
int CWE191_Integer_Underflow__short_rand_postdec_07_bad();
int goodB2G1_137();
int goodB2G2_137();
int goodG2B1_120();
int goodG2B2_120();
int CWE191_Integer_Underflow__short_rand_postdec_07_good();
int CWE191_Integer_Underflow__int_fscanf_postdec_01_bad();
int goodG2B_229();
int goodB2G_212();
int CWE191_Integer_Underflow__int_fscanf_postdec_01_good();
int CWE191_Integer_Underflow__int_min_postdec_54_bad();
int goodG2B_230();
int goodB2G_213();
int CWE191_Integer_Underflow__int_min_postdec_54_good();
__int64 __fastcall badSource_8(unsigned __int16 a1);
int CWE191_Integer_Underflow__short_fscanf_postdec_42_bad();
__int64 goodG2BSource_8();
int goodG2B_231();
__int64 __fastcall goodB2GSource_8(unsigned __int16 a1);
int goodB2G_214();
int CWE191_Integer_Underflow__short_fscanf_postdec_42_good();
int CWE191_Integer_Underflow__int_fscanf_postdec_54_bad();
int goodG2B_232();
int goodB2G_215();
int CWE191_Integer_Underflow__int_fscanf_postdec_54_good();
int CWE191_Integer_Underflow__int_fgets_postdec_63_bad();
int goodG2B_233();
int goodB2G_216();
int CWE191_Integer_Underflow__int_fgets_postdec_63_good();
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_63b_badSink(_QWORD *a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_63b_goodG2BSink(_QWORD *a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_63b_goodB2GSink(_QWORD *a1);
int CWE191_Integer_Underflow__char_rand_postdec_68b_badSink();
int CWE191_Integer_Underflow__char_rand_postdec_68b_goodG2BSink();
int CWE191_Integer_Underflow__char_rand_postdec_68b_goodB2GSink();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_31_bad();
int goodG2B_234();
int goodB2G_217();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_31_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_12_bad();
int goodB2G_218();
int goodG2B_235();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_12_good();
int CWE191_Integer_Underflow__int_fscanf_postdec_09_bad();
int goodB2G1_138();
int goodB2G2_138();
int goodG2B1_121();
int goodG2B2_121();
int CWE191_Integer_Underflow__int_fscanf_postdec_09_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_05_bad();
int goodB2G1_139();
int goodB2G2_139();
int goodG2B1_122();
int goodG2B2_122();
int CWE191_Integer_Underflow__short_fscanf_postdec_05_good();
int CWE191_Integer_Underflow__int_min_postdec_02_bad();
int goodB2G1_140();
int goodB2G2_140();
int goodG2B1_123();
int goodG2B2_123();
int CWE191_Integer_Underflow__int_min_postdec_02_good();
int __fastcall badSink_36(__int16 a1);
int CWE191_Integer_Underflow__short_fscanf_postdec_41_bad();
int __fastcall goodG2BSink_36(__int16 a1);
int goodG2B_236();
int __fastcall goodB2GSink_28(__int16 a1);
int goodB2G_219();
int CWE191_Integer_Underflow__short_fscanf_postdec_41_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_17_bad();
int goodB2G_220();
int goodG2B_237();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_17_good();
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_53b_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_53b_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_53b_goodB2GSink(char a1);
int CWE191_Integer_Underflow__int_rand_postdec_18_bad();
int goodB2G_221();
int goodG2B_238();
int CWE191_Integer_Underflow__int_rand_postdec_18_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_63_bad();
int goodG2B_239();
int goodB2G_222();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_63_good();
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_52c_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_52c_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_52c_goodB2GSink(char a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_22_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodB2G1Sink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodB2G2Sink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodG2BSink(int a1);
int CWE191_Integer_Underflow__short_fscanf_postdec_34_bad();
int goodG2B_240();
int goodB2G_223();
int CWE191_Integer_Underflow__short_fscanf_postdec_34_good();
int CWE191_Integer_Underflow__char_rand_postdec_68_bad();
int goodG2B_241();
int goodB2G_224();
int CWE191_Integer_Underflow__char_rand_postdec_68_good();
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_66b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_66b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_66b_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__short_min_postdec_15_bad();
int goodB2G1_141();
int goodB2G2_141();
int goodG2B1_124();
int goodG2B2_124();
int CWE191_Integer_Underflow__short_min_postdec_15_good();
int CWE191_Integer_Underflow__int_connect_socket_postdec_68b_badSink();
int CWE191_Integer_Underflow__int_connect_socket_postdec_68b_goodG2BSink();
int CWE191_Integer_Underflow__int_connect_socket_postdec_68b_goodB2GSink();
void CWE191_Integer_Underflow__int_fgets_postdec_17_bad();
void goodB2G_225();
int goodG2B_242();
int CWE191_Integer_Underflow__int_fgets_postdec_17_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_68b_badSink();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_68b_goodG2BSink();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_68b_goodB2GSink();
__int64 badSource_9();
int CWE191_Integer_Underflow__short_min_postdec_42_bad();
__int64 goodG2BSource_9();
int goodG2B_243();
__int64 goodB2GSource_9();
int goodB2G_226();
int CWE191_Integer_Underflow__short_min_postdec_42_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_53_bad();
int goodG2B_244();
int goodB2G_227();
int CWE191_Integer_Underflow__int64_t_rand_postdec_53_good();
int CWE191_Integer_Underflow__char_rand_postdec_53_bad();
int goodG2B_245();
int goodB2G_228();
int CWE191_Integer_Underflow__char_rand_postdec_53_good();
int __fastcall badSink_37(int a1);
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_21_bad();
int __fastcall goodB2G1Sink_7(int a1);
int goodB2G1_142();
int __fastcall goodB2G2Sink_7(int a1);
int goodB2G2_142();
int __fastcall goodG2BSink_37(int a1);
int goodG2B_246();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_21_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_03_bad();
int goodB2G1_143();
int goodB2G2_143();
int goodG2B1_125();
int goodG2B2_125();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_03_good();
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_63b_badSink(_QWORD *a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_63b_goodG2BSink(_QWORD *a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_63b_goodB2GSink(_QWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_53b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_53b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_53b_goodB2GSink(int a1);
__int64 __fastcall CWE191_Integer_Underflow__int_fgets_postdec_61b_badSource(unsigned int a1);
__int64 CWE191_Integer_Underflow__int_fgets_postdec_61b_goodG2BSource();
__int64 __fastcall CWE191_Integer_Underflow__int_fgets_postdec_61b_goodB2GSource(unsigned int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_52c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_52c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_52c_goodB2GSink(int a1);
int CWE191_Integer_Underflow__short_fscanf_postdec_66_bad();
int goodG2B_247();
int goodB2G_229();
int CWE191_Integer_Underflow__short_fscanf_postdec_66_good();
int CWE191_Integer_Underflow__int_connect_socket_postdec_22_bad();
int goodB2G1_144();
int goodB2G2_144();
int goodG2B_248();
int CWE191_Integer_Underflow__int_connect_socket_postdec_22_good();
int CWE191_Integer_Underflow__int_connect_socket_postdec_68_bad();
int goodG2B_249();
int goodB2G_230();
int CWE191_Integer_Underflow__int_connect_socket_postdec_68_good();
int CWE191_Integer_Underflow__int_min_postdec_09_bad();
int goodB2G1_145();
int goodB2G2_145();
int goodG2B1_126();
int goodG2B2_126();
int CWE191_Integer_Underflow__int_min_postdec_09_good();
int __fastcall badSink_38(int a1);
int CWE191_Integer_Underflow__int_min_postdec_21_bad();
int __fastcall goodB2G1Sink_8(int a1);
int goodB2G1_146();
int __fastcall goodB2G2Sink_8(int a1);
int goodB2G2_146();
int __fastcall goodG2BSink_38(int a1);
int goodG2B_250();
int CWE191_Integer_Underflow__int_min_postdec_21_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_17_bad();
int goodB2G_231();
int goodG2B_251();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_17_good();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_67_bad();
int goodG2B_252();
int goodB2G_232();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_67_good();
int __fastcall badSink_39(__int16 a1);
int CWE191_Integer_Underflow__short_min_postdec_41_bad();
int __fastcall goodG2BSink_39(__int16 a1);
int goodG2B_253();
int __fastcall goodB2GSink_29(__int16 a1);
int goodB2G_233();
int CWE191_Integer_Underflow__short_min_postdec_41_good();
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54b_goodB2GSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_53d_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_53d_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_53d_goodB2GSink(int a1);
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12_bad();
int goodB2G_234();
int goodG2B_254();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12_good();
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_64b_badSink(_BYTE *a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_64b_goodG2BSink(_BYTE *a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_64b_goodB2GSink(_BYTE *a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_52b_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_52b_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_52b_goodB2GSink(char a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_65b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_65b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_65b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_connect_socket_postdec_53_bad();
int goodG2B_255();
int goodB2G_235();
int CWE191_Integer_Underflow__int_connect_socket_postdec_53_good();
int CWE191_Integer_Underflow__short_min_postdec_34_bad();
int goodG2B_256();
int goodB2G_236();
int CWE191_Integer_Underflow__short_min_postdec_34_good();
int __fastcall badSink_40(__int16 a1);
int CWE191_Integer_Underflow__short_min_postdec_21_bad();
int __fastcall goodB2G1Sink_9(__int16 a1);
int goodB2G1_147();
int __fastcall goodB2G2Sink_9(__int16 a1);
int goodB2G2_147();
int __fastcall goodG2BSink_40(__int16 a1);
int goodG2B_257();
int CWE191_Integer_Underflow__short_min_postdec_21_good();
__int64 CWE191_Integer_Underflow__int_fscanf_postdec_65_bad();
int goodG2B_258();
__int64 goodB2G_237();
__int64 CWE191_Integer_Underflow__int_fscanf_postdec_65_good();
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54c_goodB2GSink(int a1);
__int64 __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_61b_badSource(__int64 a1);
__int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_61b_goodG2BSource();
__int64 __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_61b_goodB2GSource(__int64 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_66b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_66b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_66b_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__int_connect_socket_postdec_34_bad();
int goodG2B_259();
int goodB2G_238();
int CWE191_Integer_Underflow__int_connect_socket_postdec_34_good();
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_53d_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_53d_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_53d_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_listen_socket_postdec_15_bad();
int goodB2G1_148();
int goodB2G2_148();
int goodG2B1_127();
int goodG2B2_127();
int CWE191_Integer_Underflow__int_listen_socket_postdec_15_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_64_bad();
int goodG2B_260();
int goodB2G_239();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_64_good();
int CWE191_Integer_Underflow__int_fgets_postdec_07_bad();
int goodB2G1_149();
int goodB2G2_149();
int goodG2B1_128();
int goodG2B2_128();
int CWE191_Integer_Underflow__int_fgets_postdec_07_good();
__int64 __fastcall badSource_10(unsigned int a1);
int CWE191_Integer_Underflow__int_listen_socket_postdec_42_bad();
__int64 goodG2BSource_10();
int goodG2B_261();
__int64 __fastcall goodB2GSource_10(unsigned int a1);
int goodB2G_240();
int CWE191_Integer_Underflow__int_listen_socket_postdec_42_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_02_bad();
int goodB2G1_150();
int goodB2G2_150();
int goodG2B1_129();
int goodG2B2_129();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_02_good();
int CWE191_Integer_Underflow__char_rand_postdec_52_bad();
int goodG2B_262();
int goodB2G_241();
int CWE191_Integer_Underflow__char_rand_postdec_52_good();
int __fastcall badSink_41(int a1);
int CWE191_Integer_Underflow__unsigned_int_min_postdec_21_bad();
int __fastcall goodB2G1Sink_10(int a1);
int goodB2G1_151();
int __fastcall goodB2G2Sink_10(int a1);
int goodB2G2_151();
int __fastcall goodG2BSink_41(int a1);
int goodG2B_263();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_21_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_03_bad();
int goodB2G1_152();
int goodB2G2_152();
int goodG2B1_130();
int goodG2B2_130();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_03_good();
int CWE191_Integer_Underflow__int_min_postdec_67_bad();
int goodG2B_264();
int goodB2G_242();
int CWE191_Integer_Underflow__int_min_postdec_67_good();
int __fastcall CWE191_Integer_Underflow__int_min_postdec_22_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_22_goodB2G1Sink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_22_goodB2G2Sink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_22_goodG2BSink(int a1);
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_61_bad();
int goodG2B_265();
int goodB2G_243();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_61_good();
int CWE191_Integer_Underflow__char_rand_postdec_16_bad();
int goodB2G_244();
int goodG2B_266();
int CWE191_Integer_Underflow__char_rand_postdec_16_good();
int CWE191_Integer_Underflow__short_min_postdec_66_bad();
int goodG2B_267();
int goodB2G_245();
int CWE191_Integer_Underflow__short_min_postdec_66_good();
__int64 staticReturnsTrue_9();
__int64 staticReturnsFalse_9();
int CWE191_Integer_Underflow__int_rand_postdec_08_bad();
int goodB2G1_153();
int goodB2G2_153();
int goodG2B1_131();
int goodG2B2_131();
int CWE191_Integer_Underflow__int_rand_postdec_08_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_10_bad();
int goodB2G1_154();
int goodB2G2_154();
int goodG2B1_132();
int goodG2B2_132();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_10_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_09_bad();
int goodB2G1_155();
int goodB2G2_155();
int goodG2B1_133();
int goodG2B2_133();
int CWE191_Integer_Underflow__char_fscanf_postdec_09_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54d_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54d_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54d_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int64_t_min_postdec_17_bad();
int goodB2G_246();
int goodG2B_268();
int CWE191_Integer_Underflow__int64_t_min_postdec_17_good();
int __fastcall badSink_42(int a1);
int CWE191_Integer_Underflow__int_listen_socket_postdec_41_bad();
int __fastcall goodG2BSink_42(int a1);
int goodG2B_269();
int __fastcall goodB2GSink_30(int a1);
int goodB2G_247();
int CWE191_Integer_Underflow__int_listen_socket_postdec_41_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_01_bad();
int goodG2B_270();
int goodB2G_248();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_01_good();
int __fastcall CWE191_Integer_Underflow__char_min_postdec_64b_badSink(_BYTE *a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_64b_goodG2BSink(_BYTE *a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_64b_goodB2GSink(_BYTE *a1);
int CWE191_Integer_Underflow__char_rand_postdec_51_bad();
int goodG2B_271();
int goodB2G_249();
int CWE191_Integer_Underflow__char_rand_postdec_51_good();
int __fastcall CWE191_Integer_Underflow__int_min_postdec_65b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_65b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_65b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_connect_socket_postdec_52_bad();
int goodG2B_272();
int goodB2G_250();
int CWE191_Integer_Underflow__int_connect_socket_postdec_52_good();
unsigned __int64 CWE191_Integer_Underflow__int64_t_min_postdec_61b_badSource();
__int64 CWE191_Integer_Underflow__int64_t_min_postdec_61b_goodG2BSource();
unsigned __int64 CWE191_Integer_Underflow__int64_t_min_postdec_61b_goodB2GSource();
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_51b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_51b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_51b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_connect_socket_postdec_16_bad();
int goodB2G_251();
int goodG2B_273();
int CWE191_Integer_Underflow__int_connect_socket_postdec_16_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_64_bad();
int goodG2B_274();
int goodB2G_252();
int CWE191_Integer_Underflow__char_fscanf_postdec_64_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_11_bad();
int goodB2G1_156();
int goodB2G2_156();
int goodG2B1_134();
int goodG2B2_134();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_11_good();
int badSink_43();
int CWE191_Integer_Underflow__char_rand_postdec_45_bad();
int goodG2BSink_43();
int goodG2B_275();
int goodB2GSink_31();
int goodB2G_253();
int CWE191_Integer_Underflow__char_rand_postdec_45_good();
int CWE191_Integer_Underflow__char_rand_postdec_06_bad();
int goodB2G1_157();
int goodB2G2_157();
int goodG2B1_135();
int goodG2B2_135();
int CWE191_Integer_Underflow__char_rand_postdec_06_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_02_bad();
int goodB2G1_158();
int goodB2G2_158();
int goodG2B1_136();
int goodG2B2_136();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_02_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_52_bad();
int goodG2B_276();
int goodB2G_254();
int CWE191_Integer_Underflow__int64_t_rand_postdec_52_good();
int CWE191_Integer_Underflow__char_min_postdec_64_bad();
int goodG2B_277();
int goodB2G_255();
int CWE191_Integer_Underflow__char_min_postdec_64_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52c_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_min_postdec_65_bad();
int goodG2B_278();
int goodB2G_256();
int CWE191_Integer_Underflow__int_min_postdec_65_good();
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54e_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54e_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54e_goodB2GSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_67b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_67b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_67b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_connect_socket_postdec_51_bad();
int goodG2B_279();
int goodB2G_257();
int CWE191_Integer_Underflow__int_connect_socket_postdec_51_good();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_34_bad();
int goodG2B_280();
int goodB2G_258();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_34_good();
int CWE191_Integer_Underflow__int_rand_postdec_54_bad();
int goodG2B_281();
int goodB2G_259();
int CWE191_Integer_Underflow__int_rand_postdec_54_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_10_bad();
int goodB2G1_159();
int goodB2G2_159();
int goodG2B1_137();
int goodG2B2_137();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_10_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_66_bad();
int goodG2B_282();
int goodB2G_260();
int CWE191_Integer_Underflow__int_listen_socket_postdec_66_good();
int __fastcall badSink_44(__int64 a1);
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_44_bad();
int __fastcall goodG2BSink_44(__int64 a1);
int goodG2B_283();
int __fastcall goodB2GSink_32(__int64 a1);
__int64 goodB2G_261();
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_44_good();
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_51b_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_51b_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_51b_goodB2GSink(char a1);
int CWE191_Integer_Underflow__int64_t_min_postdec_07_bad();
int goodB2G1_160();
int goodB2G2_160();
int goodG2B1_138();
int goodG2B2_138();
int CWE191_Integer_Underflow__int64_t_min_postdec_07_good();
int badSink_45();
int CWE191_Integer_Underflow__int_connect_socket_postdec_45_bad();
int goodG2BSink_45();
int goodG2B_284();
int goodB2GSink_33();
int goodB2G_262();
int CWE191_Integer_Underflow__int_connect_socket_postdec_45_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_01_bad();
int goodG2B_285();
int goodB2G_263();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_01_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_14_bad();
int goodB2G1_161();
int goodB2G2_161();
int goodG2B1_139();
int goodG2B2_139();
int CWE191_Integer_Underflow__short_fscanf_postdec_14_good();
int CWE191_Integer_Underflow__int_connect_socket_postdec_06_bad();
int goodB2G1_162();
int goodB2G2_162();
int goodG2B1_140();
int goodG2B2_140();
int CWE191_Integer_Underflow__int_connect_socket_postdec_06_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_32_bad();
int goodG2B_286();
int goodB2G_264();
int CWE191_Integer_Underflow__short_fscanf_postdec_32_good();
void CWE191_Integer_Underflow__short_rand_postdec_17_bad();
void goodB2G_265();
int goodG2B_287();
int CWE191_Integer_Underflow__short_rand_postdec_17_good();
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_63b_badSink(_BYTE *a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_63b_goodG2BSink(_BYTE *a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_63b_goodB2GSink(_BYTE *a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54b_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_53c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_53c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_53c_goodB2GSink(int a1);
int CWE191_Integer_Underflow__unsigned_int_min_postdec_22_bad();
int goodB2G1_163();
int goodB2G2_163();
int goodG2B_288();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_22_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_09_bad();
int goodB2G1_164();
int goodB2G2_164();
int goodG2B1_141();
int goodG2B2_141();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_09_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_04_bad();
int goodB2G1_165();
int goodB2G2_165();
int goodG2B1_142();
int goodG2B2_142();
int CWE191_Integer_Underflow__short_fscanf_postdec_04_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_31_bad();
int goodG2B_289();
int goodB2G_266();
int CWE191_Integer_Underflow__short_fscanf_postdec_31_good();
int CWE191_Integer_Underflow__int_min_postdec_11_bad();
int goodB2G1_166();
int goodB2G2_166();
int goodG2B1_143();
int goodG2B2_143();
int CWE191_Integer_Underflow__int_min_postdec_11_good();
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54e_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54e_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54e_goodB2GSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_65b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_65b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_65b_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54c_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_rand_postdec_68b_badSink();
int CWE191_Integer_Underflow__int_rand_postdec_68b_goodG2BSink();
int CWE191_Integer_Underflow__int_rand_postdec_68b_goodB2GSink();
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_53d_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_53d_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_53d_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_22_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_22_goodB2G1Sink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_22_goodB2G2Sink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_22_goodG2BSink(__int16 a1);
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53_bad();
int goodG2B_290();
int goodB2G_267();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53_good();
int CWE191_Integer_Underflow__short_min_postdec_14_bad();
int goodB2G1_167();
int goodB2G2_167();
int goodG2B1_144();
int goodG2B2_144();
int CWE191_Integer_Underflow__short_min_postdec_14_good();
int CWE191_Integer_Underflow__short_min_postdec_32_bad();
int goodG2B_291();
int goodB2G_268();
int CWE191_Integer_Underflow__short_min_postdec_32_good();
int __fastcall CWE191_Integer_Underflow__char_min_postdec_63b_badSink(_BYTE *a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_63b_goodG2BSink(_BYTE *a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_63b_goodB2GSink(_BYTE *a1);
int __fastcall badSink_46(__int16 a1);
__int64 CWE191_Integer_Underflow__short_rand_postdec_44_bad();
int __fastcall goodG2BSink_46(__int16 a1);
int goodG2B_292();
int __fastcall goodB2GSink_34(__int16 a1);
__int64 goodB2G_269();
__int64 CWE191_Integer_Underflow__short_rand_postdec_44_good();
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_53b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_53b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_53b_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_52c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_52c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_52c_goodB2GSink(int a1);
__int64 staticReturnsTrue_10();
__int64 staticReturnsFalse_10();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_08_bad();
int goodB2G1_168();
int goodB2G2_168();
int goodG2B1_145();
int goodG2B2_145();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_08_good();
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_52b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_52b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_52b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__char_fscanf_postdec_17_bad();
int goodB2G_270();
int goodG2B_293();
int CWE191_Integer_Underflow__char_fscanf_postdec_17_good();
int CWE191_Integer_Underflow__int_rand_postdec_68_bad();
int goodG2B_294();
int goodB2G_271();
int CWE191_Integer_Underflow__int_rand_postdec_68_good();
int CWE191_Integer_Underflow__char_rand_postdec_13_bad();
int goodB2G1_169();
int goodB2G2_169();
int goodG2B1_146();
int goodG2B2_146();
int CWE191_Integer_Underflow__char_rand_postdec_13_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_22_bad();
int goodB2G1_170();
int goodB2G2_170();
int goodG2B_295();
int CWE191_Integer_Underflow__short_fscanf_postdec_22_good();
int CWE191_Integer_Underflow__short_min_postdec_31_bad();
int goodG2B_296();
int goodB2G_272();
int CWE191_Integer_Underflow__short_min_postdec_31_good();
int CWE191_Integer_Underflow__char_min_postdec_63_bad();
int goodG2B_297();
int goodB2G_273();
int CWE191_Integer_Underflow__char_min_postdec_63_good();
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54e_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54e_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54e_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_65b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_65b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_65b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_rand_postdec_53_bad();
int goodG2B_298();
int goodB2G_274();
int CWE191_Integer_Underflow__int_rand_postdec_53_good();
__int64 __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_61b_badSource(unsigned __int8 a1);
__int64 CWE191_Integer_Underflow__char_fscanf_postdec_61b_goodG2BSource();
__int64 __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_61b_goodB2GSource(unsigned __int8 a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54b_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_52c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_52c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_52c_goodB2GSink(int a1);
int CWE191_Integer_Underflow__short_rand_postdec_68_bad();
int goodG2B_299();
int goodB2G_275();
int CWE191_Integer_Underflow__short_rand_postdec_68_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_13_bad();
int goodB2G1_171();
int goodB2G2_171();
int goodG2B1_147();
int goodG2B2_147();
int CWE191_Integer_Underflow__short_fscanf_postdec_13_good();
int __fastcall CWE191_Integer_Underflow__short_min_postdec_22_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_22_goodB2G1Sink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_22_goodB2G2Sink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_22_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_53b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_53b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_53b_goodB2GSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_64b_badSink(_QWORD *a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_64b_goodG2BSink(_QWORD *a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_64b_goodB2GSink(_QWORD *a1);
int CWE191_Integer_Underflow__int_listen_socket_postdec_32_bad();
int goodG2B_300();
int goodB2G_276();
int CWE191_Integer_Underflow__int_listen_socket_postdec_32_good();
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_67b_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_67b_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_67b_goodB2GSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54e_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54e_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54e_goodB2GSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_53d_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_53d_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_53d_goodB2GSink(__int16 a1);
int CWE191_Integer_Underflow__unsigned_int_min_postdec_65_bad();
int goodG2B_301();
int goodB2G_277();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_65_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_61_bad();
int goodG2B_302();
int goodB2G_278();
int CWE191_Integer_Underflow__char_fscanf_postdec_61_good();
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_64b_badSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_64b_goodB2GSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_52b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_52b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_52b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_54_bad();
int goodG2B_303();
int goodB2G_279();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_54_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_31_bad();
int goodG2B_304();
int goodB2G_280();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_31_good();
int __fastcall badSink_47(__int16 a1);
int CWE191_Integer_Underflow__short_fscanf_postdec_21_bad();
int __fastcall goodB2G1Sink_11(__int16 a1);
int goodB2G1_172();
int __fastcall goodB2G2Sink_11(__int16 a1);
int goodB2G2_172();
int __fastcall goodG2BSink_47(__int16 a1);
int goodG2B_305();
int CWE191_Integer_Underflow__short_fscanf_postdec_21_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_03_bad();
int goodB2G1_173();
int goodB2G2_173();
int goodG2B1_148();
int goodG2B2_148();
int CWE191_Integer_Underflow__short_fscanf_postdec_03_good();
int CWE191_Integer_Underflow__short_min_postdec_22_bad();
int goodB2G1_174();
int goodB2G2_174();
int goodG2B_306();
int CWE191_Integer_Underflow__short_min_postdec_22_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_07_bad();
int goodB2G1_175();
int goodB2G2_175();
int goodG2B1_149();
int goodG2B2_149();
int CWE191_Integer_Underflow__char_fscanf_postdec_07_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_04_bad();
int goodB2G1_176();
int goodB2G2_176();
int goodG2B1_150();
int goodG2B2_150();
int CWE191_Integer_Underflow__int_listen_socket_postdec_04_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_31_bad();
int goodG2B_307();
int goodB2G_281();
int CWE191_Integer_Underflow__int_listen_socket_postdec_31_good();
int CWE191_Integer_Underflow__short_rand_postdec_67_bad();
int goodG2B_308();
int goodB2G_282();
int CWE191_Integer_Underflow__short_rand_postdec_67_good();
__int64 CWE191_Integer_Underflow__char_min_postdec_61b_badSource();
__int64 CWE191_Integer_Underflow__char_min_postdec_61b_goodG2BSource();
__int64 CWE191_Integer_Underflow__char_min_postdec_61b_goodB2GSource();
int CWE191_Integer_Underflow__int_rand_postdec_52_bad();
int goodG2B_309();
int goodB2G_283();
int CWE191_Integer_Underflow__int_rand_postdec_52_good();
int CWE191_Integer_Underflow__int_fscanf_postdec_64_bad();
int goodG2B_310();
int goodB2G_284();
int CWE191_Integer_Underflow__int_fscanf_postdec_64_good();
int __fastcall badSink_48(int a1);
__int64 CWE191_Integer_Underflow__int_listen_socket_postdec_44_bad();
int __fastcall goodG2BSink_48(int a1);
int goodG2B_311();
int __fastcall goodB2GSink_35(int a1);
__int64 goodB2G_285();
__int64 CWE191_Integer_Underflow__int_listen_socket_postdec_44_good();
__int64 badSource_11();
int CWE191_Integer_Underflow__int64_t_rand_postdec_42_bad();
__int64 goodG2BSource_11();
int goodG2B_312();
__int64 goodB2GSource_11();
int goodB2G_286();
int CWE191_Integer_Underflow__int64_t_rand_postdec_42_good();
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_51b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_51b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_51b_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_53c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_53c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_53c_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_rand_postdec_16_bad();
int goodB2G_287();
int goodG2B_313();
int CWE191_Integer_Underflow__int_rand_postdec_16_good();
int CWE191_Integer_Underflow__short_min_postdec_13_bad();
int goodB2G1_177();
int goodB2G2_177();
int goodG2B1_151();
int goodG2B2_151();
int CWE191_Integer_Underflow__short_min_postdec_13_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_63_bad();
int goodG2B_314();
int goodB2G_288();
int CWE191_Integer_Underflow__char_fscanf_postdec_63_good();
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_22_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodB2G1Sink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodB2G2Sink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodG2BSink(int a1);
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52_bad();
int goodG2B_315();
int goodB2G_289();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52_good();
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54e_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54e_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54e_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__char_min_postdec_61_bad();
int goodG2B_316();
int goodB2G_290();
int CWE191_Integer_Underflow__char_min_postdec_61_good();
int __fastcall CWE191_Integer_Underflow__int_min_postdec_64b_badSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_64b_goodB2GSink(_DWORD *a1);
int CWE191_Integer_Underflow__int64_t_rand_postdec_05_bad();
int goodB2G1_178();
int goodB2G2_178();
int goodG2B1_152();
int goodG2B2_152();
int CWE191_Integer_Underflow__int64_t_rand_postdec_05_good();
int __fastcall badSink_49(__int64 a1);
int CWE191_Integer_Underflow__int64_t_rand_postdec_41_bad();
int __fastcall goodG2BSink_49(__int64 a1);
int goodG2B_317();
int __fastcall goodB2GSink_36(__int64 a1);
int goodB2G_291();
int CWE191_Integer_Underflow__int64_t_rand_postdec_41_good();
__int64 staticReturnsTrue_11();
__int64 staticReturnsFalse_11();
int CWE191_Integer_Underflow__int_listen_socket_postdec_08_bad();
int goodB2G1_179();
int goodB2G2_179();
int goodG2B1_153();
int goodG2B2_153();
int CWE191_Integer_Underflow__int_listen_socket_postdec_08_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_02_bad();
int goodB2G1_180();
int goodB2G2_180();
int goodG2B1_154();
int goodG2B2_154();
int CWE191_Integer_Underflow__short_fscanf_postdec_02_good();
int __fastcall badSink_50(char a1);
__int64 CWE191_Integer_Underflow__char_rand_postdec_44_bad();
int __fastcall goodG2BSink_50(char a1);
int goodG2B_318();
int __fastcall goodB2GSink_37(char a1);
__int64 goodB2G_292();
__int64 CWE191_Integer_Underflow__char_rand_postdec_44_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_64_bad();
int goodG2B_319();
int goodB2G_293();
int CWE191_Integer_Underflow__int64_t_rand_postdec_64_good();
int CWE191_Integer_Underflow__short_min_postdec_03_bad();
int goodB2G1_181();
int goodB2G2_181();
int goodG2B1_155();
int goodG2B2_155();
int CWE191_Integer_Underflow__short_min_postdec_03_good();
int CWE191_Integer_Underflow__char_min_postdec_07_bad();
int goodB2G1_182();
int goodB2G2_182();
int goodG2B1_156();
int goodG2B2_156();
int CWE191_Integer_Underflow__char_min_postdec_07_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_15_bad();
int goodB2G1_183();
int goodB2G2_183();
int goodG2B1_157();
int goodG2B2_157();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_15_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_34_bad();
int goodG2B_320();
int goodB2G_294();
int CWE191_Integer_Underflow__int64_t_rand_postdec_34_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_10_bad();
int goodB2G1_184();
int goodB2G2_184();
int goodG2B1_158();
int goodG2B2_158();
int CWE191_Integer_Underflow__short_fscanf_postdec_10_good();
int badSink_51();
int CWE191_Integer_Underflow__int_rand_postdec_45_bad();
int goodG2BSink_51();
int goodG2B_321();
int goodB2GSink_38();
int goodB2G_295();
int CWE191_Integer_Underflow__int_rand_postdec_45_good();
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_66b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_66b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_66b_goodB2GSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54d_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54d_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54d_goodB2GSink(__int16 a1);
int CWE191_Integer_Underflow__int_rand_postdec_06_bad();
int goodB2G1_185();
int goodB2G2_185();
int goodG2B1_159();
int goodG2B2_159();
int CWE191_Integer_Underflow__int_rand_postdec_06_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_10_bad();
int goodB2G1_186();
int goodB2G2_186();
int goodG2B1_160();
int goodG2B2_160();
int CWE191_Integer_Underflow__int_listen_socket_postdec_10_good();
int CWE191_Integer_Underflow__int_min_postdec_64_bad();
int goodG2B_322();
int goodB2G_296();
int CWE191_Integer_Underflow__int_min_postdec_64_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_01_bad();
int goodG2B_323();
int goodB2G_297();
int CWE191_Integer_Underflow__short_fscanf_postdec_01_good();
int CWE191_Integer_Underflow__short_min_postdec_12_bad();
int goodB2G_298();
int goodG2B_324();
int CWE191_Integer_Underflow__short_min_postdec_12_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_53b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_53b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_53b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_listen_socket_postdec_07_bad();
int goodB2G1_187();
int goodB2G2_187();
int goodG2B1_161();
int goodG2B2_161();
int CWE191_Integer_Underflow__int_listen_socket_postdec_07_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_52c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_52c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_52c_goodB2GSink(int a1);
int __fastcall badSink_52(int a1);
__int64 CWE191_Integer_Underflow__int_connect_socket_postdec_44_bad();
int __fastcall goodG2BSink_52(int a1);
int goodG2B_325();
int __fastcall goodB2GSink_39(int a1);
__int64 goodB2G_299();
__int64 CWE191_Integer_Underflow__int_connect_socket_postdec_44_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_13_bad();
int goodB2G1_188();
int goodB2G2_188();
int goodG2B1_162();
int goodG2B2_162();
int CWE191_Integer_Underflow__int_listen_socket_postdec_13_good();
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_bad();
int goodG2B_326();
int goodB2G_300();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_02_bad();
int goodB2G1_189();
int goodB2G2_189();
int goodG2B1_163();
int goodG2B2_163();
int CWE191_Integer_Underflow__int64_t_rand_postdec_02_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_66_bad();
int goodG2B_327();
int goodB2G_301();
int CWE191_Integer_Underflow__int64_t_rand_postdec_66_good();
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_52b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_52b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_52b_goodB2GSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_67b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_67b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_67b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__short_fscanf_postdec_09_bad();
int goodB2G1_190();
int goodB2G2_190();
int goodG2B1_164();
int goodG2B2_164();
int CWE191_Integer_Underflow__short_fscanf_postdec_09_good();
int CWE191_Integer_Underflow__short_min_postdec_11_bad();
int goodB2G1_191();
int goodB2G2_191();
int goodG2B1_165();
int goodG2B2_165();
int CWE191_Integer_Underflow__short_min_postdec_11_good();
int CWE191_Integer_Underflow__short_min_postdec_02_bad();
int goodB2G1_192();
int goodB2G2_192();
int goodG2B1_166();
int goodG2B2_166();
int CWE191_Integer_Underflow__short_min_postdec_02_good();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_53_bad();
int goodG2B_328();
int goodB2G_302();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_53_good();
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_63b_badSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_63b_goodB2GSink(_DWORD *a1);
int CWE191_Integer_Underflow__int64_t_rand_postdec_11_bad();
int goodB2G1_193();
int goodB2G2_193();
int goodG2B1_167();
int goodG2B2_167();
int CWE191_Integer_Underflow__int64_t_rand_postdec_11_good();
int __fastcall badSink_53(int a1);
int CWE191_Integer_Underflow__int_listen_socket_postdec_21_bad();
int __fastcall goodB2G1Sink_12(int a1);
int goodB2G1_194();
int __fastcall goodB2G2Sink_12(int a1);
int goodB2G2_194();
int __fastcall goodG2BSink_53(int a1);
int goodG2B_329();
int CWE191_Integer_Underflow__int_listen_socket_postdec_21_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_03_bad();
int goodB2G1_195();
int goodB2G2_195();
int goodG2B1_168();
int goodG2B2_168();
int CWE191_Integer_Underflow__int_listen_socket_postdec_03_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_13_bad();
int goodB2G1_196();
int goodB2G2_196();
int goodG2B1_169();
int goodG2B2_169();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_13_good();
int CWE191_Integer_Underflow__short_min_postdec_10_bad();
int goodB2G1_197();
int goodB2G2_197();
int goodG2B1_170();
int goodG2B2_170();
int CWE191_Integer_Underflow__short_min_postdec_10_good();
int CWE191_Integer_Underflow__char_rand_postdec_02_bad();
int goodB2G1_198();
int goodB2G2_198();
int goodG2B1_171();
int goodG2B2_171();
int CWE191_Integer_Underflow__char_rand_postdec_02_good();
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_64b_badSink(_QWORD *a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_64b_goodG2BSink(_QWORD *a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_64b_goodB2GSink(_QWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54d_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54d_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54d_goodB2GSink(int a1);
__int64 badSource_12();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_42_bad();
__int64 goodG2BSource_12();
int goodG2B_330();
__int64 goodB2GSource_12();
int goodB2G_303();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_42_good();
int CWE191_Integer_Underflow__int_fgets_postdec_67_bad();
int goodG2B_331();
int goodB2G_304();
int CWE191_Integer_Underflow__int_fgets_postdec_67_good();
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_67b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_67b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_67b_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__short_min_postdec_01_bad();
int goodG2B_332();
int goodB2G_305();
int CWE191_Integer_Underflow__short_min_postdec_01_good();
int CWE191_Integer_Underflow__int_fscanf_postdec_63_bad();
int goodG2B_333();
int goodB2G_306();
int CWE191_Integer_Underflow__int_fscanf_postdec_63_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_52b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_52b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_52b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_listen_socket_postdec_12_bad();
int goodB2G_307();
int goodG2B_334();
int CWE191_Integer_Underflow__int_listen_socket_postdec_12_good();
int CWE191_Integer_Underflow__int_rand_postdec_63_bad();
int goodG2B_335();
int goodB2G_308();
int CWE191_Integer_Underflow__int_rand_postdec_63_good();
int CWE191_Integer_Underflow__int_rand_postdec_14_bad();
int goodB2G1_199();
int goodB2G2_199();
int goodG2B1_172();
int goodG2B2_172();
int CWE191_Integer_Underflow__int_rand_postdec_14_good();
int CWE191_Integer_Underflow__short_min_postdec_09_bad();
int goodB2G1_200();
int goodB2G2_200();
int goodG2B1_173();
int goodG2B2_173();
int CWE191_Integer_Underflow__short_min_postdec_09_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_67_bad();
int goodG2B_336();
int goodB2G_309();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_67_good();
int __fastcall CWE191_Integer_Underflow__int_min_postdec_63b_badSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_63b_goodB2GSink(_DWORD *a1);
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_52_bad();
int goodG2B_337();
int goodB2G_310();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_52_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_02_bad();
int goodB2G1_201();
int goodB2G2_201();
int goodG2B1_174();
int goodG2B2_174();
int CWE191_Integer_Underflow__int_listen_socket_postdec_02_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_64_bad();
int goodG2B_338();
int goodB2G_311();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_64_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_51b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_51b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_51b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_16_bad();
int goodB2G_312();
int goodG2B_339();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_16_good();
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_65b_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_65b_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_65b_goodB2GSink(__int16 a1);
int CWE191_Integer_Underflow__int_fscanf_postdec_17_bad();
int goodB2G_313();
int goodG2B_340();
int CWE191_Integer_Underflow__int_fscanf_postdec_17_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_64b_badSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_64b_goodB2GSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54c_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54c_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54c_goodB2GSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54d_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54d_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54d_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_rand_postdec_32_bad();
int goodG2B_341();
int goodB2G_314();
int CWE191_Integer_Underflow__int_rand_postdec_32_good();
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_67b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_67b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_67b_goodB2GSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54e_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54e_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54e_goodB2GSink(char a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_53c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_53c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_53c_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_listen_socket_postdec_01_bad();
int goodG2B_342();
int goodB2G_315();
int CWE191_Integer_Underflow__int_listen_socket_postdec_01_good();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_51_bad();
int goodG2B_343();
int goodB2G_316();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_51_good();
int CWE191_Integer_Underflow__short_min_postdec_05_bad();
int goodB2G1_202();
int goodB2G2_202();
int goodG2B1_175();
int goodG2B2_175();
int CWE191_Integer_Underflow__short_min_postdec_05_good();
__int64 CWE191_Integer_Underflow__unsigned_int_rand_postdec_61b_badSource();
__int64 CWE191_Integer_Underflow__unsigned_int_rand_postdec_61b_goodG2BSource();
__int64 CWE191_Integer_Underflow__unsigned_int_rand_postdec_61b_goodB2GSource();
__int64 __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_61b_badSource(unsigned int a1);
__int64 CWE191_Integer_Underflow__int_fscanf_postdec_61b_goodG2BSource();
__int64 __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_61b_goodB2GSource(unsigned int a1);
int __fastcall badSink_54(int a1);
int CWE191_Integer_Underflow__unsigned_int_min_postdec_41_bad();
int __fastcall goodG2BSink_54(int a1);
int goodG2B_344();
int __fastcall goodB2GSink_40(int a1);
int goodB2G_317();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_41_good();
__int64 staticReturnsTrue_12();
__int64 staticReturnsFalse_12();
int CWE191_Integer_Underflow__short_rand_postdec_08_bad();
int goodB2G1_203();
int goodB2G2_203();
int goodG2B1_176();
int goodG2B2_176();
int CWE191_Integer_Underflow__short_rand_postdec_08_good();
int badSink_55();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_bad();
int goodG2BSink_55();
int goodG2B_345();
int goodB2GSink_41();
int goodB2G_318();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_good();
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54d_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54d_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54d_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_06_bad();
int goodB2G1_204();
int goodB2G2_204();
int goodG2B1_177();
int goodG2B2_177();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_06_good();
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_63b_badSink(_QWORD *a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_63b_goodG2BSink(_QWORD *a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_63b_goodB2GSink(_QWORD *a1);
int CWE191_Integer_Underflow__int_listen_socket_postdec_09_bad();
int goodB2G1_205();
int goodB2G2_205();
int goodG2B1_178();
int goodG2B2_178();
int CWE191_Integer_Underflow__int_listen_socket_postdec_09_good();
int CWE191_Integer_Underflow__short_min_postdec_68b_badSink();
int CWE191_Integer_Underflow__short_min_postdec_68b_goodG2BSink();
int CWE191_Integer_Underflow__short_min_postdec_68b_goodB2GSink();
__int64 badSource_13();
int CWE191_Integer_Underflow__char_rand_postdec_42_bad();
__int64 goodG2BSource_13();
int goodG2B_346();
__int64 goodB2GSource_13();
int goodB2G_319();
int CWE191_Integer_Underflow__char_rand_postdec_42_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_64_bad();
int goodG2B_347();
int goodB2G_320();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_64_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_14_bad();
int goodB2G1_206();
int goodB2G2_206();
int goodG2B1_179();
int goodG2B2_179();
int CWE191_Integer_Underflow__int64_t_rand_postdec_14_good();
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_53c_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_53c_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_53c_goodB2GSink(__int16 a1);
int CWE191_Integer_Underflow__int_fscanf_postdec_61_bad();
int goodG2B_348();
int goodB2G_321();
int CWE191_Integer_Underflow__int_fscanf_postdec_61_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_32_bad();
int goodG2B_349();
int goodB2G_322();
int CWE191_Integer_Underflow__int64_t_rand_postdec_32_good();
int CWE191_Integer_Underflow__int_fgets_postdec_18_bad();
int goodB2G_323();
int goodG2B_350();
int CWE191_Integer_Underflow__int_fgets_postdec_18_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_22_bad();
int goodB2G1_207();
int goodB2G2_207();
int goodG2B_351();
int CWE191_Integer_Underflow__int_listen_socket_postdec_22_good();
int __fastcall CWE191_Integer_Underflow__short_min_postdec_65b_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_65b_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_65b_goodB2GSink(__int16 a1);
int CWE191_Integer_Underflow__int_min_postdec_17_bad();
int goodB2G_324();
int goodG2B_352();
int CWE191_Integer_Underflow__int_min_postdec_17_good();
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54b_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54b_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54b_goodB2GSink(__int16 a1);
int CWE191_Integer_Underflow__int_fscanf_postdec_07_bad();
int goodB2G1_208();
int goodB2G2_208();
int goodG2B1_180();
int goodG2B2_180();
int CWE191_Integer_Underflow__int_fscanf_postdec_07_good();
int CWE191_Integer_Underflow__int_connect_socket_postdec_15_bad();
int goodB2G1_209();
int goodB2G2_209();
int goodG2B1_181();
int goodG2B2_181();
int CWE191_Integer_Underflow__int_connect_socket_postdec_15_good();
int CWE191_Integer_Underflow__char_rand_postdec_05_bad();
int goodB2G1_210();
int goodB2G2_210();
int goodG2B1_182();
int goodG2B2_182();
int CWE191_Integer_Underflow__char_rand_postdec_05_good();
int __fastcall badSink_56(char a1);
int CWE191_Integer_Underflow__char_rand_postdec_41_bad();
int __fastcall goodG2BSink_56(char a1);
int goodG2B_353();
int __fastcall goodB2GSink_42(char a1);
int goodB2G_325();
int CWE191_Integer_Underflow__char_rand_postdec_41_good();
__int64 __fastcall badSource_14(unsigned int a1);
int CWE191_Integer_Underflow__int_connect_socket_postdec_42_bad();
__int64 goodG2BSource_14();
int goodG2B_354();
__int64 __fastcall goodB2GSource_14(unsigned int a1);
int goodB2G_326();
int CWE191_Integer_Underflow__int_connect_socket_postdec_42_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_04_bad();
int goodB2G1_211();
int goodB2G2_211();
int goodG2B1_183();
int goodG2B2_183();
int CWE191_Integer_Underflow__int64_t_rand_postdec_04_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_31_bad();
int goodG2B_355();
int goodB2G_327();
int CWE191_Integer_Underflow__int64_t_rand_postdec_31_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_63b_badSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_63b_goodB2GSink(_DWORD *a1);
int CWE191_Integer_Underflow__short_min_postdec_65_bad();
int goodG2B_356();
int goodB2G_328();
int CWE191_Integer_Underflow__short_min_postdec_65_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_18_bad();
int goodB2G_329();
int goodG2B_357();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_18_good();
int CWE191_Integer_Underflow__char_rand_postdec_34_bad();
int goodG2B_358();
int goodB2G_330();
int CWE191_Integer_Underflow__char_rand_postdec_34_good();
int CWE191_Integer_Underflow__short_rand_postdec_54_bad();
int goodG2B_359();
int goodB2G_331();
int CWE191_Integer_Underflow__short_rand_postdec_54_good();
int CWE191_Integer_Underflow__int_fgets_postdec_31_bad();
int goodG2B_360();
int goodB2G_332();
int CWE191_Integer_Underflow__int_fgets_postdec_31_good();
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54d_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54d_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54d_goodB2GSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_53d_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_53d_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_53d_goodB2GSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_22_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodB2G1Sink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodB2G2Sink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54c_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_connect_socket_postdec_05_bad();
int goodB2G1_212();
int goodB2G2_212();
int goodG2B1_184();
int goodG2B2_184();
int CWE191_Integer_Underflow__int_connect_socket_postdec_05_good();
int CWE191_Integer_Underflow__int_min_postdec_61_bad();
int goodG2B_361();
int goodB2G_333();
int CWE191_Integer_Underflow__int_min_postdec_61_good();
int __fastcall badSink_57(int a1);
int CWE191_Integer_Underflow__int_connect_socket_postdec_41_bad();
int __fastcall goodG2BSink_57(int a1);
int goodG2B_362();
int __fastcall goodB2GSink_43(int a1);
int goodB2G_334();
int CWE191_Integer_Underflow__int_connect_socket_postdec_41_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_63_bad();
int goodG2B_363();
int goodB2G_335();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_63_good();
__int64 CWE191_Integer_Underflow__short_fscanf_postdec_65_bad();
int goodG2B_364();
__int64 goodB2G_336();
__int64 CWE191_Integer_Underflow__short_fscanf_postdec_65_good();
int __fastcall badSink_58(int a1);
__int64 CWE191_Integer_Underflow__int_rand_postdec_44_bad();
int __fastcall goodG2BSink_58(int a1);
int goodG2B_365();
int __fastcall goodB2GSink_44(int a1);
__int64 goodB2G_337();
__int64 CWE191_Integer_Underflow__int_rand_postdec_44_good();
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_65b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_65b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_65b_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54c_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_min_postdec_07_bad();
int goodB2G1_213();
int goodB2G2_213();
int goodG2B1_185();
int goodG2B2_185();
int CWE191_Integer_Underflow__int_min_postdec_07_good();
int CWE191_Integer_Underflow__char_rand_postdec_66_bad();
int goodG2B_366();
int goodB2G_338();
int CWE191_Integer_Underflow__char_rand_postdec_66_good();
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_53c_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_53c_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_53c_goodB2GSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_66b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_66b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_66b_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__int64_t_rand_postdec_22_bad();
int goodB2G1_214();
int goodB2G2_214();
int goodG2B_367();
int CWE191_Integer_Underflow__int64_t_rand_postdec_22_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_54_bad();
int goodG2B_368();
int goodB2G_339();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_54_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_11_bad();
int goodB2G1_215();
int goodB2G2_215();
int goodG2B1_186();
int goodG2B2_186();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_11_good();
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_64b_badSink(_QWORD *a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_64b_goodG2BSink(_QWORD *a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_64b_goodB2GSink(_QWORD *a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_63b_badSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_63b_goodB2GSink(_DWORD *a1);
int CWE191_Integer_Underflow__int64_t_min_postdec_18_bad();
int goodB2G_340();
int goodG2B_369();
int CWE191_Integer_Underflow__int64_t_min_postdec_18_good();
__int64 CWE191_Integer_Underflow__int_listen_socket_postdec_65_bad();
int goodG2B_370();
__int64 goodB2G_341();
__int64 CWE191_Integer_Underflow__int_listen_socket_postdec_65_good();
__int64 staticReturnsTrue_13();
__int64 staticReturnsFalse_13();
int CWE191_Integer_Underflow__int_fgets_postdec_08_bad();
int goodB2G1_216();
int goodB2G2_216();
int goodG2B1_187();
int goodG2B2_187();
int CWE191_Integer_Underflow__int_fgets_postdec_08_good();
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54c_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54c_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54c_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__int_fscanf_postdec_10_bad();
int goodB2G1_217();
int goodB2G2_217();
int goodG2B1_188();
int goodG2B2_188();
int CWE191_Integer_Underflow__int_fscanf_postdec_10_good();
int CWE191_Integer_Underflow__int_connect_socket_postdec_66_bad();
int goodG2B_371();
int goodB2G_342();
int CWE191_Integer_Underflow__int_connect_socket_postdec_66_good();
int CWE191_Integer_Underflow__int_fscanf_postdec_51_bad();
int goodG2B_372();
int goodB2G_343();
int CWE191_Integer_Underflow__int_fscanf_postdec_51_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_13_bad();
int goodB2G1_218();
int goodB2G2_218();
int goodG2B1_189();
int goodG2B2_189();
int CWE191_Integer_Underflow__int64_t_rand_postdec_13_good();
int CWE191_Integer_Underflow__short_rand_postdec_68b_badSink();
int CWE191_Integer_Underflow__short_rand_postdec_68b_goodG2BSink();
int CWE191_Integer_Underflow__short_rand_postdec_68b_goodB2GSink();
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_53c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_53c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_53c_goodB2GSink(int a1);
int CWE191_Integer_Underflow__unsigned_int_min_postdec_63_bad();
int goodG2B_373();
int goodB2G_344();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_63_good();
__int64 __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_61b_badSource(unsigned int a1);
__int64 CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_61b_goodG2BSource();
__int64 __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_61b_goodB2GSource(unsigned int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54b_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_53b_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_53b_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_53b_goodB2GSink(__int16 a1);
__int64 staticReturnsTrue_14();
__int64 staticReturnsFalse_14();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_08_bad();
int goodB2G1_219();
int goodB2G2_219();
int goodG2B1_190();
int goodG2B2_190();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_08_good();
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_52c_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_52c_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_52c_goodB2GSink(__int16 a1);
int CWE191_Integer_Underflow__int64_t_rand_postdec_03_bad();
int goodB2G1_220();
int goodB2G2_220();
int goodG2B1_191();
int goodG2B2_191();
int CWE191_Integer_Underflow__int64_t_rand_postdec_03_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_67_bad();
int goodG2B_374();
int goodB2G_345();
int CWE191_Integer_Underflow__char_fscanf_postdec_67_good();
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_53d_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_53d_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_53d_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54d_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54d_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54d_goodB2GSink(__int16 a1);
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_61_bad();
int goodG2B_375();
int goodB2G_346();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_61_good();
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54c_goodB2GSink(int a1);
int CWE191_Integer_Underflow__short_rand_postdec_53_bad();
int goodG2B_376();
int goodB2G_347();
int CWE191_Integer_Underflow__short_rand_postdec_53_good();
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54c_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54c_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54c_goodB2GSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54b_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__int64_t_rand_postdec_12_bad();
int goodB2G_348();
int goodG2B_377();
int CWE191_Integer_Underflow__int64_t_rand_postdec_12_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_64_bad();
int goodG2B_378();
int goodB2G_349();
int CWE191_Integer_Underflow__int64_t_min_postdec_64_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_07_bad();
int goodB2G1_221();
int goodB2G2_221();
int goodG2B1_192();
int goodG2B2_192();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_07_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_05_bad();
int goodB2G1_222();
int goodB2G2_222();
int goodG2B1_193();
int goodG2B2_193();
int CWE191_Integer_Underflow__int_listen_socket_postdec_05_good();
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_61b_badSource();
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_61b_goodG2BSource();
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_61b_goodB2GSource();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_13_bad();
int goodB2G1_223();
int goodB2G2_223();
int goodG2B1_194();
int goodG2B2_194();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_13_good();
__int64 CWE191_Integer_Underflow__unsigned_int_min_postdec_61b_badSource();
__int64 CWE191_Integer_Underflow__unsigned_int_min_postdec_61b_goodG2BSource();
__int64 CWE191_Integer_Underflow__unsigned_int_min_postdec_61b_goodB2GSource();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_54_bad();
int goodG2B_379();
int goodB2G_350();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_54_good();
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_64b_badSink(_WORD *a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_64b_goodG2BSink(_WORD *a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_64b_goodB2GSink(_WORD *a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_52b_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_52b_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_52b_goodB2GSink(__int16 a1);
__int64 staticReturnsTrue_15();
__int64 staticReturnsFalse_15();
int CWE191_Integer_Underflow__int64_t_min_postdec_08_bad();
int goodB2G1_224();
int goodB2G2_224();
int goodG2B1_195();
int goodG2B2_195();
int CWE191_Integer_Underflow__int64_t_min_postdec_08_good();
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54d_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54d_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54d_goodB2GSink(char a1);
int CWE191_Integer_Underflow__char_min_postdec_67_bad();
int goodG2B_380();
int goodB2G_351();
int CWE191_Integer_Underflow__char_min_postdec_67_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_10_bad();
int goodB2G1_225();
int goodB2G2_225();
int goodG2B1_196();
int goodG2B2_196();
int CWE191_Integer_Underflow__int64_t_rand_postdec_10_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_06_bad();
int goodB2G1_226();
int goodB2G2_226();
int goodG2B1_197();
int goodG2B2_197();
int CWE191_Integer_Underflow__char_fscanf_postdec_06_good();
int CWE191_Integer_Underflow__char_rand_postdec_14_bad();
int goodB2G1_227();
int goodB2G2_227();
int goodG2B1_198();
int goodG2B2_198();
int CWE191_Integer_Underflow__char_rand_postdec_14_good();
int CWE191_Integer_Underflow__char_rand_postdec_32_bad();
int goodG2B_381();
int goodB2G_352();
int CWE191_Integer_Underflow__char_rand_postdec_32_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_61_bad();
int goodG2B_382();
int goodB2G_353();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_61_good();
int CWE191_Integer_Underflow__int_fscanf_postdec_06_bad();
int goodB2G1_228();
int goodB2G2_228();
int goodG2B1_199();
int goodG2B2_199();
int CWE191_Integer_Underflow__int_fscanf_postdec_06_good();
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_52b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_52b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_52b_goodB2GSink(int a1);
int __fastcall badSink_59(int a1);
__int64 CWE191_Integer_Underflow__unsigned_int_rand_postdec_44_bad();
int __fastcall goodG2BSink_59(int a1);
int goodG2B_383();
int __fastcall goodB2GSink_45(int a1);
__int64 goodB2G_354();
__int64 CWE191_Integer_Underflow__unsigned_int_rand_postdec_44_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_01_bad();
int goodG2B_384();
int goodB2G_355();
int CWE191_Integer_Underflow__int64_t_rand_postdec_01_good();
int CWE191_Integer_Underflow__short_rand_postdec_52_bad();
int goodG2B_385();
int goodB2G_356();
int CWE191_Integer_Underflow__short_rand_postdec_52_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_34_bad();
int goodG2B_386();
int goodB2G_357();
int CWE191_Integer_Underflow__int_listen_socket_postdec_34_good();
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_51b_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_51b_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_51b_goodB2GSink(__int16 a1);
int CWE191_Integer_Underflow__unsigned_int_min_postdec_07_bad();
int goodB2G1_229();
int goodB2G2_229();
int goodG2B1_200();
int goodG2B2_200();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_07_good();
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_53c_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_53c_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_53c_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__short_rand_postdec_16_bad();
int goodB2G_358();
int goodG2B_387();
int CWE191_Integer_Underflow__short_rand_postdec_16_good();
int CWE191_Integer_Underflow__int_fgets_postdec_68b_badSink();
int CWE191_Integer_Underflow__int_fgets_postdec_68b_goodG2BSink();
int CWE191_Integer_Underflow__int_fgets_postdec_68b_goodB2GSink();
int CWE191_Integer_Underflow__int_rand_postdec_15_bad();
int goodB2G1_230();
int goodB2G2_230();
int goodG2B1_201();
int goodG2B2_201();
int CWE191_Integer_Underflow__int_rand_postdec_15_good();
int CWE191_Integer_Underflow__char_rand_postdec_04_bad();
int goodB2G1_231();
int goodB2G2_231();
int goodG2B1_202();
int goodG2B2_202();
int CWE191_Integer_Underflow__char_rand_postdec_04_good();
int CWE191_Integer_Underflow__char_rand_postdec_31_bad();
int goodG2B_388();
int goodB2G_359();
int CWE191_Integer_Underflow__char_rand_postdec_31_good();
int CWE191_Integer_Underflow__int_connect_socket_postdec_14_bad();
int goodB2G1_232();
int goodB2G2_232();
int goodG2B1_203();
int goodG2B2_203();
int CWE191_Integer_Underflow__int_connect_socket_postdec_14_good();
int __fastcall CWE191_Integer_Underflow__char_min_postdec_53c_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_53c_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_53c_goodB2GSink(char a1);
int CWE191_Integer_Underflow__char_fscanf_postdec_18_bad();
int goodB2G_360();
int goodG2B_389();
int CWE191_Integer_Underflow__char_fscanf_postdec_18_good();
int CWE191_Integer_Underflow__int_connect_socket_postdec_32_bad();
int goodG2B_390();
int goodB2G_361();
int CWE191_Integer_Underflow__int_connect_socket_postdec_32_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_09_bad();
int goodB2G1_233();
int goodB2G2_233();
int goodG2B1_204();
int goodG2B2_204();
int CWE191_Integer_Underflow__int64_t_rand_postdec_09_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_54_bad();
int goodG2B_391();
int goodB2G_362();
int CWE191_Integer_Underflow__int64_t_min_postdec_54_good();
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_53b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_53b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_53b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__short_rand_postdec_51_bad();
int goodG2B_392();
int goodB2G_363();
int CWE191_Integer_Underflow__short_rand_postdec_51_good();
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54d_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54d_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54d_goodB2GSink(char a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_52c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_52c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_52c_goodB2GSink(int a1);
int __fastcall badSink_60(int a1);
int CWE191_Integer_Underflow__int_fgets_postdec_21_bad();
int __fastcall goodB2G1Sink_13(int a1);
int goodB2G1_234();
int __fastcall goodB2G2Sink_13(int a1);
int goodB2G2_234();
int __fastcall goodG2BSink_60(int a1);
int goodG2B_393();
int CWE191_Integer_Underflow__int_fgets_postdec_21_good();
int CWE191_Integer_Underflow__int_fgets_postdec_68_bad();
int goodG2B_394();
int goodB2G_364();
int CWE191_Integer_Underflow__int_fgets_postdec_68_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_68b_badSink();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_68b_goodG2BSink();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_68b_goodB2GSink();
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_22_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G1Sink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G2Sink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_22_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54e_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54e_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54e_goodB2GSink(int a1);
int badSink_61();
int CWE191_Integer_Underflow__short_rand_postdec_45_bad();
int goodG2BSink_61();
int goodG2B_395();
int goodB2GSink_46();
int goodB2G_365();
int CWE191_Integer_Underflow__short_rand_postdec_45_good();
int CWE191_Integer_Underflow__int_rand_postdec_05_bad();
int goodB2G1_235();
int goodB2G2_235();
int goodG2B1_205();
int goodG2B2_205();
int CWE191_Integer_Underflow__int_rand_postdec_05_good();
int __fastcall badSink_62(int a1);
int CWE191_Integer_Underflow__int_rand_postdec_41_bad();
int __fastcall goodG2BSink_62(int a1);
int goodG2B_396();
int __fastcall goodB2GSink_47(int a1);
int goodB2G_366();
int CWE191_Integer_Underflow__int_rand_postdec_41_good();
int CWE191_Integer_Underflow__int_connect_socket_postdec_04_bad();
int goodB2G1_236();
int goodB2G2_236();
int goodG2B1_206();
int goodG2B2_206();
int CWE191_Integer_Underflow__int_connect_socket_postdec_04_good();
int CWE191_Integer_Underflow__int_connect_socket_postdec_31_bad();
int goodG2B_397();
int goodB2G_367();
int CWE191_Integer_Underflow__int_connect_socket_postdec_31_good();
int __fastcall badSink_63(int a1);
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_21_bad();
int __fastcall goodB2G1Sink_14(int a1);
int goodB2G1_237();
int __fastcall goodB2G2Sink_14(int a1);
int goodB2G2_237();
int __fastcall goodG2BSink_63(int a1);
int goodG2B_398();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_21_good();
int CWE191_Integer_Underflow__int_fgets_postdec_53_bad();
int goodG2B_399();
int goodB2G_368();
int CWE191_Integer_Underflow__int_fgets_postdec_53_good();
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_53b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_53b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_53b_goodB2GSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_53c_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_53c_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_53c_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__int_rand_postdec_34_bad();
int goodG2B_400();
int goodB2G_369();
int CWE191_Integer_Underflow__int_rand_postdec_34_good();
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_52c_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_52c_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_52c_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__unsigned_int_min_postdec_14_bad();
int goodB2G1_238();
int goodB2G2_238();
int goodG2B1_207();
int goodG2B2_207();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_14_good();
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_66b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_66b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_66b_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__char_rand_postdec_22_bad();
int goodB2G1_239();
int goodB2G2_239();
int goodG2B_401();
int CWE191_Integer_Underflow__char_rand_postdec_22_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_bad();
int goodG2B_402();
int goodB2G_370();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_good();
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_22_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodB2G1Sink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodB2G2Sink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodG2BSink(int a1);
int CWE191_Integer_Underflow__int_min_postdec_53_bad();
int goodG2B_403();
int goodB2G_371();
int CWE191_Integer_Underflow__int_min_postdec_53_good();
int CWE191_Integer_Underflow__char_min_postdec_18_bad();
int goodB2G_372();
int goodG2B_404();
int CWE191_Integer_Underflow__char_min_postdec_18_good();
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_52b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_52b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_52b_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54c_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54c_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54c_goodB2GSink(char a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_64b_badSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_64b_goodB2GSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_63b_badSink(_WORD *a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_63b_goodG2BSink(_WORD *a1);
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_63b_goodB2GSink(_WORD *a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_53d_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_53d_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_53d_goodB2GSink(char a1);
int CWE191_Integer_Underflow__int64_t_min_postdec_68b_badSink();
int CWE191_Integer_Underflow__int64_t_min_postdec_68b_goodG2BSink();
int CWE191_Integer_Underflow__int64_t_min_postdec_68b_goodB2GSink();
int CWE191_Integer_Underflow__int_rand_postdec_66_bad();
int goodG2B_405();
int goodB2G_373();
int CWE191_Integer_Underflow__int_rand_postdec_66_good();
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_65b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_65b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_65b_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__short_fscanf_postdec_15_bad();
int goodB2G1_240();
int goodB2G2_240();
int goodG2B1_208();
int goodG2B2_208();
int CWE191_Integer_Underflow__short_fscanf_postdec_15_good();
int __fastcall badSink_64(__int64 a1);
int CWE191_Integer_Underflow__int64_t_min_postdec_41_bad();
int __fastcall goodG2BSink_64(__int64 a1);
int goodG2B_406();
int __fastcall goodB2GSink_48(__int64 a1);
int goodB2G_374();
int CWE191_Integer_Underflow__int64_t_min_postdec_41_good();
int CWE191_Integer_Underflow__int_fgets_postdec_52_bad();
int goodG2B_407();
int goodB2G_375();
int CWE191_Integer_Underflow__int_fgets_postdec_52_good();
int CWE191_Integer_Underflow__int_rand_postdec_02_bad();
int goodB2G1_241();
int goodB2G2_241();
int goodG2B1_209();
int goodG2B2_209();
int CWE191_Integer_Underflow__int_rand_postdec_02_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_64_bad();
int goodG2B_408();
int goodB2G_376();
int CWE191_Integer_Underflow__int_listen_socket_postdec_64_good();
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_51b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_51b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_51b_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_52b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_52b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_52b_goodB2GSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_52c_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_52c_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_52c_goodB2GSink(__int64 a1);
int __fastcall badSink_65(char a1);
int CWE191_Integer_Underflow__char_rand_postdec_21_bad();
int __fastcall goodB2G1Sink_15(char a1);
int goodB2G1_242();
int __fastcall goodB2G2Sink_15(char a1);
int goodB2G2_242();
int __fastcall goodG2BSink_65(char a1);
int goodG2B_409();
int CWE191_Integer_Underflow__char_rand_postdec_21_good();
int CWE191_Integer_Underflow__char_rand_postdec_03_bad();
int goodB2G1_243();
int goodB2G2_243();
int goodG2B1_210();
int goodG2B2_210();
int CWE191_Integer_Underflow__char_rand_postdec_03_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_68_bad();
int goodG2B_410();
int goodB2G_377();
int CWE191_Integer_Underflow__int64_t_min_postdec_68_good();
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_65_bad();
int goodG2B_411();
__int64 goodB2G_378();
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_65_good();
int CWE191_Integer_Underflow__int_listen_socket_postdec_54_bad();
int goodG2B_412();
int goodB2G_379();
int CWE191_Integer_Underflow__int_listen_socket_postdec_54_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54e_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54e_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54e_goodB2GSink(int a1);
__int64 CWE191_Integer_Underflow__short_rand_postdec_65_bad();
int goodG2B_413();
__int64 goodB2G_380();
__int64 CWE191_Integer_Underflow__short_rand_postdec_65_good();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_02_bad();
int goodB2G1_244();
int goodB2G2_244();
int goodG2B1_211();
int goodG2B2_211();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_02_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_53_bad();
int goodG2B_414();
int goodB2G_381();
int CWE191_Integer_Underflow__int64_t_min_postdec_53_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_52b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_52b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_52b_goodB2GSink(int a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54c_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54c_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54c_goodB2GSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54b_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54b_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54b_goodB2GSink(char a1);
int CWE191_Integer_Underflow__char_rand_postdec_12_bad();
int goodB2G_382();
int goodG2B_415();
int CWE191_Integer_Underflow__char_rand_postdec_12_good();
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_51b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_51b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_51b_goodB2GSink(__int64 a1);
int CWE191_Integer_Underflow__int_connect_socket_postdec_13_bad();
int goodB2G1_245();
int goodB2G2_245();
int goodG2B1_212();
int goodG2B2_212();
int CWE191_Integer_Underflow__int_connect_socket_postdec_13_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_16_bad();
int goodB2G_383();
int goodG2B_416();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_16_good();
int __fastcall badSink_66(int a1);
int CWE191_Integer_Underflow__int_connect_socket_postdec_21_bad();
int __fastcall goodB2G1Sink_16(int a1);
int goodB2G1_246();
int __fastcall goodB2G2Sink_16(int a1);
int goodB2G2_246();
int __fastcall goodG2BSink_66(int a1);
int goodG2B_417();
int CWE191_Integer_Underflow__int_connect_socket_postdec_21_good();
int CWE191_Integer_Underflow__int_connect_socket_postdec_03_bad();
int goodB2G1_247();
int goodB2G2_247();
int goodG2B1_213();
int goodG2B2_213();
int CWE191_Integer_Underflow__int_connect_socket_postdec_03_good();
int badSink_67();
int CWE191_Integer_Underflow__int_fgets_postdec_45_bad();
int goodG2BSink_67();
int goodG2B_418();
int goodB2GSink_49();
int goodB2G_384();
int CWE191_Integer_Underflow__int_fgets_postdec_45_good();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_15_bad();
int goodB2G1_248();
int goodB2G2_248();
int goodG2B1_214();
int goodG2B2_214();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_15_good();
int CWE191_Integer_Underflow__int_fscanf_postdec_67_bad();
int goodG2B_419();
int goodB2G_385();
int CWE191_Integer_Underflow__int_fscanf_postdec_67_good();
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_53c_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_53c_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_53c_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_fgets_postdec_06_bad();
int goodB2G1_249();
int goodB2G2_249();
int goodG2B1_215();
int goodG2B2_215();
int CWE191_Integer_Underflow__int_fgets_postdec_06_good();
int __fastcall CWE191_Integer_Underflow__short_min_postdec_53d_badSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_53d_goodG2BSink(__int16 a1);
int __fastcall CWE191_Integer_Underflow__short_min_postdec_53d_goodB2GSink(__int16 a1);
__int64 badSource_15();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_42_bad();
__int64 goodG2BSource_15();
int goodG2B_420();
__int64 goodB2GSource_15();
int goodB2G_386();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_42_good();
int CWE191_Integer_Underflow__char_fscanf_postdec_54_bad();
int goodG2B_421();
int goodB2G_387();
int CWE191_Integer_Underflow__char_fscanf_postdec_54_good();
int CWE191_Integer_Underflow__char_rand_postdec_11_bad();
int goodB2G1_250();
int goodB2G2_250();
int goodG2B1_216();
int goodG2B2_216();
int CWE191_Integer_Underflow__char_rand_postdec_11_good();
__int64 staticReturnsTrue_16();
__int64 staticReturnsFalse_16();
int CWE191_Integer_Underflow__char_min_postdec_08_bad();
int goodB2G1_251();
int goodB2G2_251();
int goodG2B1_217();
int goodG2B2_217();
int CWE191_Integer_Underflow__char_min_postdec_08_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_51_bad();
int goodG2B_422();
int goodB2G_388();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_51_good();
__int64 __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_61b_badSource(unsigned __int16 a1);
__int64 CWE191_Integer_Underflow__short_fscanf_postdec_61b_goodG2BSource();
__int64 __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_61b_goodB2GSource(unsigned __int16 a1);
int CWE191_Integer_Underflow__int64_t_min_postdec_63_bad();
int goodG2B_423();
int goodB2G_389();
int CWE191_Integer_Underflow__int64_t_min_postdec_63_good();
int __fastcall CWE191_Integer_Underflow__int_min_postdec_67b_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_67b_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_min_postdec_67b_goodB2GSink(int a1);
int CWE191_Integer_Underflow__char_rand_postdec_10_bad();
int goodB2G1_252();
int goodB2G2_252();
int goodG2B1_218();
int goodG2B2_218();
int CWE191_Integer_Underflow__char_rand_postdec_10_good();
int badSink_68();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_bad();
int goodG2BSink_68();
int goodG2B_424();
int goodB2GSink_50();
int goodB2G_390();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_good();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_05_bad();
int goodB2G1_253();
int goodB2G2_253();
int goodG2B1_219();
int goodG2B2_219();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_05_good();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_06_bad();
int goodB2G1_254();
int goodB2G2_254();
int goodG2B1_220();
int goodG2B2_220();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_06_good();
int __fastcall badSink_69(int a1);
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_41_bad();
int __fastcall goodG2BSink_69(int a1);
int goodG2B_425();
int __fastcall goodB2GSink_51(int a1);
int goodB2G_391();
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_41_good();
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54b_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54b_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54b_goodB2GSink(char a1);
int CWE191_Integer_Underflow__char_rand_postdec_01_bad();
int goodG2B_426();
int goodB2G_392();
int CWE191_Integer_Underflow__char_rand_postdec_01_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_52_bad();
int goodG2B_427();
int goodB2G_393();
int CWE191_Integer_Underflow__int64_t_min_postdec_52_good();
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_51b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_51b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_51b_goodB2GSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_53c_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_53c_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_53c_goodB2GSink(char a1);
int CWE191_Integer_Underflow__char_fscanf_postdec_14_bad();
int goodB2G1_255();
int goodB2G2_255();
int goodG2B1_221();
int goodG2B2_221();
int CWE191_Integer_Underflow__char_fscanf_postdec_14_good();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_34_bad();
int goodG2B_428();
int goodB2G_394();
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_34_good();
int __fastcall CWE191_Integer_Underflow__char_min_postdec_52b_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_52b_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_min_postdec_52b_goodB2GSink(char a1);
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_53_bad();
int goodG2B_429();
int goodB2G_395();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_53_good();
int CWE191_Integer_Underflow__short_rand_postdec_64_bad();
int goodG2B_430();
int goodB2G_396();
int CWE191_Integer_Underflow__short_rand_postdec_64_good();
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_53c_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_53c_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_53c_goodB2GSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54d_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54d_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54d_goodB2GSink(int a1);
int CWE191_Integer_Underflow__int_fscanf_postdec_14_bad();
int goodB2G1_256();
int goodB2G2_256();
int goodG2B1_222();
int goodG2B2_222();
int CWE191_Integer_Underflow__int_fscanf_postdec_14_good();
int CWE191_Integer_Underflow__int_fscanf_postdec_32_bad();
int goodG2B_431();
int goodB2G_397();
int CWE191_Integer_Underflow__int_fscanf_postdec_32_good();
int CWE191_Integer_Underflow__char_min_postdec_11_bad();
int goodB2G1_257();
int goodB2G2_257();
int goodG2B1_223();
int goodG2B2_223();
int CWE191_Integer_Underflow__char_min_postdec_11_good();
int CWE191_Integer_Underflow__char_min_postdec_02_bad();
int goodB2G1_258();
int goodB2G2_258();
int goodG2B1_224();
int goodG2B2_224();
int CWE191_Integer_Underflow__char_min_postdec_02_good();
int CWE191_Integer_Underflow__int_rand_postdec_67_bad();
int goodG2B_432();
int goodB2G_398();
int CWE191_Integer_Underflow__int_rand_postdec_67_good();
int CWE191_Integer_Underflow__short_rand_postdec_06_bad();
int goodB2G1_259();
int goodB2G2_259();
int goodG2B1_225();
int goodG2B2_225();
int CWE191_Integer_Underflow__short_rand_postdec_06_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_66_bad();
int goodG2B_433();
int goodB2G_399();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_66_good();
int CWE191_Integer_Underflow__char_min_postdec_10_bad();
int goodB2G1_260();
int goodB2G2_260();
int goodG2B1_226();
int goodG2B2_226();
int CWE191_Integer_Underflow__char_min_postdec_10_good();
int CWE191_Integer_Underflow__short_fscanf_postdec_53_bad();
int goodG2B_434();
int goodB2G_400();
int CWE191_Integer_Underflow__short_fscanf_postdec_53_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_05_bad();
int goodB2G1_261();
int goodB2G2_261();
int goodG2B1_227();
int goodG2B2_227();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_05_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_68b_badSink();
int CWE191_Integer_Underflow__int64_t_rand_postdec_68b_goodG2BSink();
int CWE191_Integer_Underflow__int64_t_rand_postdec_68b_goodB2GSink();
int CWE191_Integer_Underflow__int_fscanf_postdec_04_bad();
int goodB2G1_262();
int goodB2G2_262();
int goodG2B1_228();
int goodG2B2_228();
int CWE191_Integer_Underflow__int_fscanf_postdec_04_good();
int CWE191_Integer_Underflow__int_fscanf_postdec_31_bad();
int goodG2B_435();
int goodB2G_401();
int CWE191_Integer_Underflow__int_fscanf_postdec_31_good();
int CWE191_Integer_Underflow__char_min_postdec_01_bad();
int goodG2B_436();
int goodB2G_402();
int CWE191_Integer_Underflow__char_min_postdec_01_good();
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_66b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_66b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_66b_goodB2GSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53d_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53d_goodG2BSink(int a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53d_goodB2GSink(int a1);
__int64 __fastcall badSource_16(unsigned int a1);
int CWE191_Integer_Underflow__int_fscanf_postdec_42_bad();
__int64 goodG2BSource_16();
int goodG2B_437();
__int64 __fastcall goodB2GSource_16(unsigned int a1);
int goodB2G_403();
int CWE191_Integer_Underflow__int_fscanf_postdec_42_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_13_bad();
int goodB2G1_263();
int goodB2G2_263();
int goodG2B1_229();
int goodG2B2_229();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_13_good();
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_66b_badSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_66b_goodG2BSink(__int64 a1);
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_66b_goodB2GSink(__int64 a1);
int __fastcall badSink_70(__int16 a1);
__int64 CWE191_Integer_Underflow__short_fscanf_postdec_44_bad();
int __fastcall goodG2BSink_70(__int16 a1);
int goodG2B_438();
int __fastcall goodB2GSink_52(__int16 a1);
__int64 goodB2G_404();
__int64 CWE191_Integer_Underflow__short_fscanf_postdec_44_good();
int CWE191_Integer_Underflow__int_fgets_postdec_51_bad();
int goodG2B_439();
int goodB2G_405();
int CWE191_Integer_Underflow__int_fgets_postdec_51_good();
__int64 CWE191_Integer_Underflow__short_min_postdec_61b_badSource();
__int64 CWE191_Integer_Underflow__short_min_postdec_61b_goodG2BSource();
__int64 CWE191_Integer_Underflow__short_min_postdec_61b_goodB2GSource();
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_22_badSink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_22_goodB2G1Sink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_22_goodB2G2Sink(int a1);
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_22_goodG2BSink(int a1);
int CWE191_Integer_Underflow__char_min_postdec_09_bad();
int goodB2G1_264();
int goodB2G2_264();
int goodG2B1_230();
int goodG2B2_230();
int CWE191_Integer_Underflow__char_min_postdec_09_good();
int CWE191_Integer_Underflow__int_min_postdec_32_bad();
int goodG2B_440();
int goodB2G_406();
int CWE191_Integer_Underflow__int_min_postdec_32_good();
int CWE191_Integer_Underflow__int64_t_rand_postdec_68_bad();
int goodG2B_441();
int goodB2G_407();
int CWE191_Integer_Underflow__int64_t_rand_postdec_68_good();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_52_bad();
int goodG2B_442();
int goodB2G_408();
int CWE191_Integer_Underflow__unsigned_int_min_postdec_52_good();
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_63b_badSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_63b_goodG2BSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_63b_goodB2GSink(_DWORD *a1);
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_31_bad();
int goodG2B_443();
int goodB2G_409();
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_31_good();
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_65b_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_65b_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_65b_goodB2GSink(char a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_64b_badSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_64b_goodG2BSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_64b_goodB2GSink(_DWORD *a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54c_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54c_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54c_goodB2GSink(char a1);
int CWE191_Integer_Underflow__int_fscanf_postdec_22_bad();
int goodB2G1_265();
int goodB2G2_265();
int goodG2B_444();
int CWE191_Integer_Underflow__int_fscanf_postdec_22_good();
int CWE191_Integer_Underflow__int_rand_postdec_22_bad();
int goodB2G1_266();
int goodB2G2_266();
int goodG2B_445();
int CWE191_Integer_Underflow__int_rand_postdec_22_good();
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_63b_badSink(_WORD *a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_63b_goodG2BSink(_WORD *a1);
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_63b_goodB2GSink(_WORD *a1);
int CWE191_Integer_Underflow__int_fgets_postdec_05_bad();
int goodB2G1_267();
int goodB2G2_267();
int goodG2B1_231();
int goodG2B2_231();
int CWE191_Integer_Underflow__int_fgets_postdec_05_good();
int CWE191_Integer_Underflow__int_min_postdec_04_bad();
int goodB2G1_268();
int goodB2G2_268();
int goodG2B1_232();
int goodG2B2_232();
int CWE191_Integer_Underflow__int_min_postdec_04_good();
int CWE191_Integer_Underflow__int_min_postdec_31_bad();
int goodG2B_446();
int goodB2G_410();
int CWE191_Integer_Underflow__int_min_postdec_31_good();
int CWE191_Integer_Underflow__int64_t_min_postdec_61_bad();
int goodG2B_447();
int goodB2G_411();
int CWE191_Integer_Underflow__int64_t_min_postdec_61_good();
int CWE191_Integer_Underflow__int_fscanf_postdec_34_bad();
int goodG2B_448();
int goodB2G_412();
int CWE191_Integer_Underflow__int_fscanf_postdec_34_good();
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_65b_badSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_65b_goodG2BSink(char a1);
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_65b_goodB2GSink(char a1);
int __fastcall printLine(const char *a1);
int __fastcall printWLine(__int64 a1);
int __fastcall printIntLine(unsigned int a1);
int __fastcall printShortLine(__int16 a1);
int __fastcall printFloatLine(float a1);
int __fastcall printLongLine(__int64 a1);
int __fastcall printLongLongLine(__int64 a1);
int __fastcall printSizeTLine(__int64 a1);
int __fastcall printHexCharLine(char a1);
int __fastcall printWcharLine(int a1);
int __fastcall printUnsignedLine(unsigned int a1);
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1);
int __fastcall printDoubleLine(double a1);
int __fastcall printStructLine(unsigned int *a1);
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2);
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3);
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3);
__int64 globalReturnsTrue();
__int64 globalReturnsFalse();
__int64 globalReturnsTrueOrFalse();
void good1();
void good2();
void good3();
void good4();
void good5();
void good6();
void good7();
void good8();
void good9();
void bad1();
void bad2();
void bad3();
void bad4();
void bad5();
void bad6();
void bad7();
void bad8();
void bad9();
void __fastcall __noreturn internal_start(void *a1);
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3);
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1);
__int64 __fastcall stdThreadDestroy(void *a1);
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1);
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1);
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1);
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1);
void _libc_csu_init(void); // idb
void _libc_csu_fini(void); // idb
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

_UNKNOWN unk_472298; // weak
_UNKNOWN unk_473448; // weak
_UNKNOWN unk_4738DC; // weak
_UNKNOWN unk_47658C; // weak
_UNKNOWN unk_477040; // weak
_UNKNOWN unk_478760; // weak
_UNKNOWN unk_47AE44; // weak
_UNKNOWN unk_47AF5C; // weak
_UNKNOWN unk_47C014; // weak
_UNKNOWN unk_47C400; // weak
char s[3] = { '\0', '\0', '\0' }; // idb
int GLOBAL_CONST_TRUE = 1; // weak
int GLOBAL_CONST_FALSE = 0; // weak
int GLOBAL_CONST_FIVE = 5; // weak
__int64 (__fastcall *_frame_dummy_init_array_entry[2])() = { &frame_dummy, &_do_global_dtors_aux }; // weak
__int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)() = &_do_global_dtors_aux; // weak
__int64 (*qword_6AB010)(void) = NULL; // weak
int staticTrue = 1; // weak
int staticFive = 5; // weak
int staticTrue_0 = 1; // weak
int staticFive_0 = 5; // weak
int staticTrue_1 = 1; // weak
int staticFive_1 = 5; // weak
int staticTrue_2 = 1; // weak
int staticFive_2 = 5; // weak
int staticFive_3 = 5; // weak
int staticTrue_3 = 1; // weak
int staticFive_4 = 5; // weak
int staticFive_5 = 5; // weak
int staticTrue_4 = 1; // weak
int staticFive_6 = 5; // weak
int staticTrue_5 = 1; // weak
int staticTrue_6 = 1; // weak
int staticFive_7 = 5; // weak
int staticTrue_7 = 1; // weak
int staticFive_8 = 5; // weak
int staticFive_9 = 5; // weak
int staticFive_10 = 5; // weak
int staticTrue_8 = 1; // weak
int staticFive_11 = 5; // weak
int staticFive_12 = 5; // weak
int staticTrue_9 = 1; // weak
int staticFive_13 = 5; // weak
int staticTrue_10 = 1; // weak
int staticTrue_11 = 1; // weak
int staticFive_14 = 5; // weak
int staticFive_15 = 5; // weak
int staticTrue_12 = 1; // weak
int staticFive_16 = 5; // weak
int staticTrue_13 = 1; // weak
int staticTrue_14 = 1; // weak
int staticTrue_15 = 1; // weak
int staticTrue_16 = 1; // weak
int globalTrue = 1; // weak
int globalFive = 5; // weak
FILE *stdin; // idb
char completed_6355; // weak
__int16 CWE191_Integer_Underflow__short_min_postdec_45_badData; // weak
__int16 CWE191_Integer_Underflow__short_min_postdec_45_goodG2BData; // weak
__int16 CWE191_Integer_Underflow__short_min_postdec_45_goodB2GData; // weak
int staticFalse; // weak
int badStatic; // weak
int goodB2G1Static; // weak
int goodB2G2Static; // weak
int goodG2BStatic; // weak
int CWE191_Integer_Underflow__char_min_postdec_22_badGlobal; // weak
int CWE191_Integer_Underflow__char_min_postdec_22_goodB2G1Global; // weak
int CWE191_Integer_Underflow__char_min_postdec_22_goodB2G2Global; // weak
int CWE191_Integer_Underflow__char_min_postdec_22_goodG2BGlobal; // weak
int CWE191_Integer_Underflow__int_listen_socket_postdec_45_badData; // weak
int CWE191_Integer_Underflow__int_listen_socket_postdec_45_goodG2BData; // weak
int CWE191_Integer_Underflow__int_listen_socket_postdec_45_goodB2GData; // weak
int CWE191_Integer_Underflow__int64_t_min_postdec_22_badGlobal; // weak
int CWE191_Integer_Underflow__int64_t_min_postdec_22_goodB2G1Global; // weak
int CWE191_Integer_Underflow__int64_t_min_postdec_22_goodB2G2Global; // weak
int CWE191_Integer_Underflow__int64_t_min_postdec_22_goodG2BGlobal; // weak
int badStatic_0; // weak
int goodB2G1Static_0; // weak
int goodB2G2Static_0; // weak
int goodG2BStatic_0; // weak
int staticFalse_0; // weak
int CWE191_Integer_Underflow__unsigned_int_min_postdec_45_badData; // weak
int CWE191_Integer_Underflow__unsigned_int_min_postdec_45_goodG2BData; // weak
int CWE191_Integer_Underflow__unsigned_int_min_postdec_45_goodB2GData; // weak
int CWE191_Integer_Underflow__int_fgets_postdec_22_badGlobal; // weak
int CWE191_Integer_Underflow__int_fgets_postdec_22_goodB2G1Global; // weak
int CWE191_Integer_Underflow__int_fgets_postdec_22_goodB2G2Global; // weak
int CWE191_Integer_Underflow__int_fgets_postdec_22_goodG2BGlobal; // weak
int staticFalse_1; // weak
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_badGlobal; // weak
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodB2G1Global; // weak
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodB2G2Global; // weak
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodG2BGlobal; // weak
int badStatic_1; // weak
int goodB2G1Static_1; // weak
int goodB2G2Static_1; // weak
int goodG2BStatic_1; // weak
int badStatic_2; // weak
int goodB2G1Static_2; // weak
int goodB2G2Static_2; // weak
int goodG2BStatic_2; // weak
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_badGlobal; // weak
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodB2G1Global; // weak
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodB2G2Global; // weak
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodG2BGlobal; // weak
__int16 CWE191_Integer_Underflow__short_fscanf_postdec_45_badData; // weak
__int16 CWE191_Integer_Underflow__short_fscanf_postdec_45_goodG2BData; // weak
__int16 CWE191_Integer_Underflow__short_fscanf_postdec_45_goodB2GData; // weak
int staticFalse_2; // weak
int CWE191_Integer_Underflow__char_fscanf_postdec_22_badGlobal; // weak
int CWE191_Integer_Underflow__char_fscanf_postdec_22_goodB2G1Global; // weak
int CWE191_Integer_Underflow__char_fscanf_postdec_22_goodB2G2Global; // weak
int CWE191_Integer_Underflow__char_fscanf_postdec_22_goodG2BGlobal; // weak
__int64 CWE191_Integer_Underflow__int64_t_min_postdec_45_badData; // weak
__int64 CWE191_Integer_Underflow__int64_t_min_postdec_45_goodG2BData; // weak
__int64 CWE191_Integer_Underflow__int64_t_min_postdec_45_goodB2GData; // weak
int badStatic_3; // weak
int goodB2G1Static_3; // weak
int goodB2G2Static_3; // weak
int goodG2BStatic_3; // weak
int badStatic_4; // weak
int goodB2G1Static_4; // weak
int goodB2G2Static_4; // weak
int goodG2BStatic_4; // weak
char CWE191_Integer_Underflow__char_fscanf_postdec_45_badData; // weak
char CWE191_Integer_Underflow__char_fscanf_postdec_45_goodG2BData; // weak
char CWE191_Integer_Underflow__char_fscanf_postdec_45_goodB2GData; // weak
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_badGlobal; // weak
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodB2G1Global; // weak
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodB2G2Global; // weak
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodG2BGlobal; // weak
int staticFalse_3; // weak
char CWE191_Integer_Underflow__char_min_postdec_45_badData; // weak
char CWE191_Integer_Underflow__char_min_postdec_45_goodG2BData; // weak
char CWE191_Integer_Underflow__char_min_postdec_45_goodB2GData; // weak
int CWE191_Integer_Underflow__int_fscanf_postdec_45_badData; // weak
int CWE191_Integer_Underflow__int_fscanf_postdec_45_goodG2BData; // weak
int CWE191_Integer_Underflow__int_fscanf_postdec_45_goodB2GData; // weak
int staticFalse_4; // weak
int CWE191_Integer_Underflow__int_min_postdec_45_badData; // weak
int CWE191_Integer_Underflow__int_min_postdec_45_goodG2BData; // weak
int CWE191_Integer_Underflow__int_min_postdec_45_goodB2GData; // weak
int CWE191_Integer_Underflow__short_rand_postdec_22_badGlobal; // weak
int CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G1Global; // weak
int CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G2Global; // weak
int CWE191_Integer_Underflow__short_rand_postdec_22_goodG2BGlobal; // weak
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_badData; // weak
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_goodG2BData; // weak
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_goodB2GData; // weak
int staticFalse_5; // weak
int staticFalse_6; // weak
int badStatic_5; // weak
int goodB2G1Static_5; // weak
int goodB2G2Static_5; // weak
int goodG2BStatic_5; // weak
int CWE191_Integer_Underflow__int_min_postdec_22_badGlobal; // weak
int CWE191_Integer_Underflow__int_min_postdec_22_goodB2G1Global; // weak
int CWE191_Integer_Underflow__int_min_postdec_22_goodB2G2Global; // weak
int CWE191_Integer_Underflow__int_min_postdec_22_goodG2BGlobal; // weak
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_45_badData; // weak
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_45_goodG2BData; // weak
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_45_goodB2GData; // weak
int badStatic_6; // weak
int goodB2G1Static_6; // weak
int goodB2G2Static_6; // weak
int goodG2BStatic_6; // weak
int staticFalse_7; // weak
int badStatic_7; // weak
int goodB2G1Static_7; // weak
int goodB2G2Static_7; // weak
int goodG2BStatic_7; // weak
int CWE191_Integer_Underflow__int_connect_socket_postdec_22_badGlobal; // weak
int CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodB2G1Global; // weak
int CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodB2G2Global; // weak
int CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodG2BGlobal; // weak
int badStatic_8; // weak
int goodB2G1Static_8; // weak
int goodB2G2Static_8; // weak
int goodG2BStatic_8; // weak
int badStatic_9; // weak
int goodB2G1Static_9; // weak
int goodB2G2Static_9; // weak
int goodG2BStatic_9; // weak
int badStatic_10; // weak
int goodB2G1Static_10; // weak
int goodB2G2Static_10; // weak
int goodG2BStatic_10; // weak
char CWE191_Integer_Underflow__char_rand_postdec_45_badData; // weak
char CWE191_Integer_Underflow__char_rand_postdec_45_goodG2BData; // weak
char CWE191_Integer_Underflow__char_rand_postdec_45_goodB2GData; // weak
int CWE191_Integer_Underflow__int_connect_socket_postdec_45_badData; // weak
int CWE191_Integer_Underflow__int_connect_socket_postdec_45_goodG2BData; // weak
int CWE191_Integer_Underflow__int_connect_socket_postdec_45_goodB2GData; // weak
int CWE191_Integer_Underflow__unsigned_int_min_postdec_22_badGlobal; // weak
int CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodB2G1Global; // weak
int CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodB2G2Global; // weak
int CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodG2BGlobal; // weak
int CWE191_Integer_Underflow__short_fscanf_postdec_22_badGlobal; // weak
int CWE191_Integer_Underflow__short_fscanf_postdec_22_goodB2G1Global; // weak
int CWE191_Integer_Underflow__short_fscanf_postdec_22_goodB2G2Global; // weak
int CWE191_Integer_Underflow__short_fscanf_postdec_22_goodG2BGlobal; // weak
int badStatic_11; // weak
int goodB2G1Static_11; // weak
int goodB2G2Static_11; // weak
int goodG2BStatic_11; // weak
int CWE191_Integer_Underflow__short_min_postdec_22_badGlobal; // weak
int CWE191_Integer_Underflow__short_min_postdec_22_goodB2G1Global; // weak
int CWE191_Integer_Underflow__short_min_postdec_22_goodB2G2Global; // weak
int CWE191_Integer_Underflow__short_min_postdec_22_goodG2BGlobal; // weak
int staticFalse_8; // weak
int CWE191_Integer_Underflow__int_rand_postdec_45_badData; // weak
int CWE191_Integer_Underflow__int_rand_postdec_45_goodG2BData; // weak
int CWE191_Integer_Underflow__int_rand_postdec_45_goodB2GData; // weak
int badStatic_12; // weak
int goodB2G1Static_12; // weak
int goodB2G2Static_12; // weak
int goodG2BStatic_12; // weak
int staticFalse_9; // weak
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_badData; // weak
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_goodG2BData; // weak
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_goodB2GData; // weak
int CWE191_Integer_Underflow__int_listen_socket_postdec_22_badGlobal; // weak
int CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodB2G1Global; // weak
int CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodB2G2Global; // weak
int CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodG2BGlobal; // weak
int staticFalse_10; // weak
int staticFalse_11; // weak
int CWE191_Integer_Underflow__int64_t_rand_postdec_22_badGlobal; // weak
int CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodB2G1Global; // weak
int CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodB2G2Global; // weak
int CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodG2BGlobal; // weak
int staticFalse_12; // weak
int badStatic_13; // weak
int goodB2G1Static_13; // weak
int goodB2G2Static_13; // weak
int goodG2BStatic_13; // weak
__int16 CWE191_Integer_Underflow__short_rand_postdec_45_badData; // weak
__int16 CWE191_Integer_Underflow__short_rand_postdec_45_goodG2BData; // weak
__int16 CWE191_Integer_Underflow__short_rand_postdec_45_goodB2GData; // weak
int staticFalse_13; // weak
int badStatic_14; // weak
int goodB2G1Static_14; // weak
int goodB2G2Static_14; // weak
int goodG2BStatic_14; // weak
int CWE191_Integer_Underflow__char_rand_postdec_22_badGlobal; // weak
int CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G1Global; // weak
int CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G2Global; // weak
int CWE191_Integer_Underflow__char_rand_postdec_22_goodG2BGlobal; // weak
int badStatic_15; // weak
int goodB2G1Static_15; // weak
int goodB2G2Static_15; // weak
int goodG2BStatic_15; // weak
int badStatic_16; // weak
int goodB2G1Static_16; // weak
int goodB2G2Static_16; // weak
int goodG2BStatic_16; // weak
int CWE191_Integer_Underflow__int_fgets_postdec_45_badData; // weak
int CWE191_Integer_Underflow__int_fgets_postdec_45_goodG2BData; // weak
int CWE191_Integer_Underflow__int_fgets_postdec_45_goodB2GData; // weak
__int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_badData; // weak
__int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_goodG2BData; // weak
__int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_goodB2GData; // weak
int staticFalse_14; // weak
int staticFalse_15; // weak
int CWE191_Integer_Underflow__int_fscanf_postdec_22_badGlobal; // weak
int CWE191_Integer_Underflow__int_fscanf_postdec_22_goodB2G1Global; // weak
int CWE191_Integer_Underflow__int_fscanf_postdec_22_goodB2G2Global; // weak
int CWE191_Integer_Underflow__int_fscanf_postdec_22_goodG2BGlobal; // weak
int CWE191_Integer_Underflow__int_rand_postdec_22_badGlobal; // weak
int CWE191_Integer_Underflow__int_rand_postdec_22_goodB2G1Global; // weak
int CWE191_Integer_Underflow__int_rand_postdec_22_goodB2G2Global; // weak
int CWE191_Integer_Underflow__int_rand_postdec_22_goodG2BGlobal; // weak
int staticFalse_16; // weak
int globalFalse; // weak
int globalArgc; // weak
__int64 globalArgv; // weak
__int16 CWE191_Integer_Underflow__short_fscanf_postdec_68_goodB2GData; // weak
__int16 CWE191_Integer_Underflow__short_fscanf_postdec_68_badData; // weak
__int16 CWE191_Integer_Underflow__short_fscanf_postdec_68_goodG2BData; // weak
__int16 CWE191_Integer_Underflow__short_min_postdec_68_badData; // weak
__int16 CWE191_Integer_Underflow__short_min_postdec_68_goodG2BData; // weak
__int16 CWE191_Integer_Underflow__short_min_postdec_68_goodB2GData; // weak
int CWE191_Integer_Underflow__int_listen_socket_postdec_68_goodB2GData; // weak
int CWE191_Integer_Underflow__int_listen_socket_postdec_68_badData; // weak
int CWE191_Integer_Underflow__int_listen_socket_postdec_68_goodG2BData; // weak
char CWE191_Integer_Underflow__char_fscanf_postdec_68_badData; // weak
char CWE191_Integer_Underflow__char_fscanf_postdec_68_goodB2GData; // weak
char CWE191_Integer_Underflow__char_fscanf_postdec_68_goodG2BData; // weak
char CWE191_Integer_Underflow__char_min_postdec_68_badData; // weak
char CWE191_Integer_Underflow__char_min_postdec_68_goodB2GData; // weak
char CWE191_Integer_Underflow__char_min_postdec_68_goodG2BData; // weak
int CWE191_Integer_Underflow__int_fscanf_postdec_68_goodB2GData; // weak
int CWE191_Integer_Underflow__int_fscanf_postdec_68_goodG2BData; // weak
int CWE191_Integer_Underflow__int_fscanf_postdec_68_badData; // weak
int CWE191_Integer_Underflow__int_min_postdec_68_goodG2BData; // weak
int CWE191_Integer_Underflow__int_min_postdec_68_badData; // weak
int CWE191_Integer_Underflow__int_min_postdec_68_goodB2GData; // weak
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_goodB2GData; // weak
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_goodG2BData; // weak
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_badData; // weak
int CWE191_Integer_Underflow__unsigned_int_min_postdec_68_goodB2GData; // weak
int CWE191_Integer_Underflow__unsigned_int_min_postdec_68_goodG2BData; // weak
int CWE191_Integer_Underflow__unsigned_int_min_postdec_68_badData; // weak
char CWE191_Integer_Underflow__char_rand_postdec_68_goodB2GData; // weak
char CWE191_Integer_Underflow__char_rand_postdec_68_badData; // weak
char CWE191_Integer_Underflow__char_rand_postdec_68_goodG2BData; // weak
int CWE191_Integer_Underflow__int_connect_socket_postdec_68_badData; // weak
int CWE191_Integer_Underflow__int_connect_socket_postdec_68_goodG2BData; // weak
int CWE191_Integer_Underflow__int_connect_socket_postdec_68_goodB2GData; // weak
int CWE191_Integer_Underflow__int_rand_postdec_68_badData; // weak
int CWE191_Integer_Underflow__int_rand_postdec_68_goodG2BData; // weak
int CWE191_Integer_Underflow__int_rand_postdec_68_goodB2GData; // weak
__int16 CWE191_Integer_Underflow__short_rand_postdec_68_goodB2GData; // weak
__int16 CWE191_Integer_Underflow__short_rand_postdec_68_badData; // weak
__int16 CWE191_Integer_Underflow__short_rand_postdec_68_goodG2BData; // weak
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_goodG2BData; // weak
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_goodB2GData; // weak
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_badData; // weak
int CWE191_Integer_Underflow__int_fgets_postdec_68_badData; // weak
int CWE191_Integer_Underflow__int_fgets_postdec_68_goodB2GData; // weak
int CWE191_Integer_Underflow__int_fgets_postdec_68_goodG2BData; // weak
__int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_goodG2BData; // weak
__int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_goodB2GData; // weak
__int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_badData; // weak
__int64 CWE191_Integer_Underflow__int64_t_min_postdec_68_badData; // weak
__int64 CWE191_Integer_Underflow__int64_t_min_postdec_68_goodB2GData; // weak
__int64 CWE191_Integer_Underflow__int64_t_min_postdec_68_goodG2BData; // weak
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_68_badData; // weak
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_68_goodB2GData; // weak
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_68_goodG2BData; // weak
// extern _UNKNOWN __gmon_start__; weak


//----- (0000000000400BD0) ----------------------------------------------------
void *init_proc()
{
  void *result; // rax

  result = &__gmon_start__;
  if ( &__gmon_start__ )
    result = (void *)_gmon_start__();
  return result;
}
// 400E10: using guessed type __int64 _gmon_start__(void);

//----- (0000000000400BF0) ----------------------------------------------------
__int64 sub_400BF0()
{
  return qword_6AB010();
}
// 6AB010: using guessed type __int64 (*qword_6AB010)(void);

//----- (0000000000400E20) ----------------------------------------------------
// positive sp value has been detected, the output may be wrong!
void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>)
{
  int v2; // esi
  int v3; // [rsp-8h] [rbp-8h]
  __int64 _0; // [rsp+0h] [rbp+0h]

  v2 = v3;
  *(_QWORD *)&v3 = a1;
  __libc_start_main(
    (int (__fastcall *)(int, char **, char **))main,
    v2,
    (char **)&_0,
    _libc_csu_init,
    _libc_csu_fini,
    a2,
    &v3);
  __halt();
}
// 400E26: positive sp value 8 has been found

//----- (0000000000400E50) ----------------------------------------------------
__int64 deregister_tm_clones()
{
  __int64 result; // rax

  result = 6992327LL - (_QWORD)&stdin;
  if ( (unsigned __int64)(6992327LL - (_QWORD)&stdin) > 0xE )
    result = 0LL;
  return result;
}

//----- (0000000000400E80) ----------------------------------------------------
__int64 register_tm_clones()
{
  return 0LL;
}

//----- (0000000000400EC0) ----------------------------------------------------
__int64 _do_global_dtors_aux()
{
  __int64 result; // rax

  if ( !completed_6355 )
  {
    result = deregister_tm_clones();
    completed_6355 = 1;
  }
  return result;
}
// 6AB1C8: using guessed type char completed_6355;

//----- (0000000000400EE0) ----------------------------------------------------
__int64 frame_dummy()
{
  return register_tm_clones();
}
// 400EE0: could not find valid save-restore pair for rbp

//----- (0000000000400F0D) ----------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  unsigned int v3; // eax

  v3 = time(0LL);
  srand(v3);
  globalArgc = argc;
  globalArgv = (__int64)argv;
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_22_good();");
  CWE191_Integer_Underflow__short_min_postdec_22_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_61_good();");
  CWE191_Integer_Underflow__char_rand_postdec_61_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_66_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_66_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_32_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_32_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_04_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_04_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_67_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_67_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_05_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_05_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_41_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_41_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_66_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_66_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_11_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_11_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_51_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_51_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_52_good();");
  CWE191_Integer_Underflow__char_rand_postdec_52_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_21_good();");
  CWE191_Integer_Underflow__int_rand_postdec_21_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_08_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_08_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_05_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_05_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_68_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_68_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_16_good();");
  CWE191_Integer_Underflow__int_min_postdec_16_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_61_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_61_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_03_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_03_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_14_good();");
  CWE191_Integer_Underflow__char_rand_postdec_14_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_14_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_14_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_51_good();");
  CWE191_Integer_Underflow__short_rand_postdec_51_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_17_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_17_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_03_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_03_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_54_good();");
  CWE191_Integer_Underflow__char_min_postdec_54_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_14_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_14_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_64_good();");
  CWE191_Integer_Underflow__char_min_postdec_64_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_16_good();");
  CWE191_Integer_Underflow__short_rand_postdec_16_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_12_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_12_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_04_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_04_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_09_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_09_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_11_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_11_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_16_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_16_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_11_good();");
  CWE191_Integer_Underflow__short_min_postdec_11_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_03_good();");
  CWE191_Integer_Underflow__int_rand_postdec_03_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_15_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_15_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_53_good();");
  CWE191_Integer_Underflow__char_min_postdec_53_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_67_good();");
  CWE191_Integer_Underflow__short_min_postdec_67_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_22_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_22_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_61_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_61_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_09_good();");
  CWE191_Integer_Underflow__int_rand_postdec_09_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_67_good();");
  CWE191_Integer_Underflow__short_rand_postdec_67_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_63_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_63_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_01_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_01_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_09_good();");
  CWE191_Integer_Underflow__short_rand_postdec_09_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_21_good();");
  CWE191_Integer_Underflow__char_min_postdec_21_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_18_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_18_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_51_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_51_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_61_good();");
  CWE191_Integer_Underflow__short_rand_postdec_61_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_07_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_07_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_12_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_12_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_12_good();");
  CWE191_Integer_Underflow__short_rand_postdec_12_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_01_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_01_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_63_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_63_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_53_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_53_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_02_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_02_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_64_good();");
  CWE191_Integer_Underflow__short_min_postdec_64_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_32_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_32_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_12_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_12_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_65_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_65_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_13_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_13_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_08_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_08_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_44_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_44_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_63_good();");
  CWE191_Integer_Underflow__char_min_postdec_63_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_11_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_11_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_68_good();");
  CWE191_Integer_Underflow__int_rand_postdec_68_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_63_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_63_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_67_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_67_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_54_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_54_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_34_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_34_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_52_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_52_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_11_good();");
  CWE191_Integer_Underflow__char_min_postdec_11_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_53_good();");
  CWE191_Integer_Underflow__short_rand_postdec_53_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_22_good();");
  CWE191_Integer_Underflow__int_rand_postdec_22_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_17_good();");
  CWE191_Integer_Underflow__int_min_postdec_17_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_64_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_64_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_13_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_13_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_11_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_11_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_01_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_01_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_42_good();");
  CWE191_Integer_Underflow__short_rand_postdec_42_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_09_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_09_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_68_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_68_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_02_good();");
  CWE191_Integer_Underflow__short_min_postdec_02_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_51_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_51_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_04_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_04_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_44_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_44_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_34_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_34_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_63_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_63_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_66_good();");
  CWE191_Integer_Underflow__char_rand_postdec_66_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_03_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_03_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_54_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_54_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_53_good();");
  CWE191_Integer_Underflow__int_min_postdec_53_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_67_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_67_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_42_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_42_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_61_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_61_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_18_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_18_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_07_good();");
  CWE191_Integer_Underflow__short_min_postdec_07_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_52_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_52_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_22_good();");
  CWE191_Integer_Underflow__char_rand_postdec_22_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_15_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_15_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_04_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_04_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_18_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_18_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_22_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_22_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_63_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_63_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_52_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_52_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_15_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_15_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_66_good();");
  CWE191_Integer_Underflow__char_min_postdec_66_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_34_good();");
  CWE191_Integer_Underflow__short_min_postdec_34_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_67_good();");
  CWE191_Integer_Underflow__int_rand_postdec_67_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_11_good();");
  CWE191_Integer_Underflow__char_rand_postdec_11_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_16_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_16_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_66_good();");
  CWE191_Integer_Underflow__int_rand_postdec_66_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_41_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_41_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_34_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_34_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_05_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_05_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_66_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_66_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_42_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_42_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_52_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_52_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_16_good();");
  CWE191_Integer_Underflow__char_min_postdec_16_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_54_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_54_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_06_good();");
  CWE191_Integer_Underflow__int_min_postdec_06_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_44_good();");
  CWE191_Integer_Underflow__int_rand_postdec_44_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_05_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_05_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_65_good();");
  CWE191_Integer_Underflow__int_rand_postdec_65_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_02_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_02_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_61_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_61_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_17_good();");
  CWE191_Integer_Underflow__short_rand_postdec_17_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_14_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_14_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_63_good();");
  CWE191_Integer_Underflow__short_rand_postdec_63_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_61_good();");
  CWE191_Integer_Underflow__short_min_postdec_61_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_41_good();");
  CWE191_Integer_Underflow__char_rand_postdec_41_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_09_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_09_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_65_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_65_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_53_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_53_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_41_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_41_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_13_good();");
  CWE191_Integer_Underflow__short_rand_postdec_13_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_53_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_53_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_08_good();");
  CWE191_Integer_Underflow__int_min_postdec_08_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_66_good();");
  CWE191_Integer_Underflow__short_min_postdec_66_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_22_good();");
  CWE191_Integer_Underflow__short_rand_postdec_22_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_34_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_34_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_41_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_41_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_05_good();");
  CWE191_Integer_Underflow__short_min_postdec_05_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_22_good();");
  CWE191_Integer_Underflow__int_min_postdec_22_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_18_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_18_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_42_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_42_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_18_good();");
  CWE191_Integer_Underflow__int_min_postdec_18_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_45_good();");
  CWE191_Integer_Underflow__char_rand_postdec_45_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_52_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_52_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_07_good();");
  CWE191_Integer_Underflow__short_rand_postdec_07_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_65_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_65_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_67_good();");
  CWE191_Integer_Underflow__char_min_postdec_67_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_65_good();");
  CWE191_Integer_Underflow__short_rand_postdec_65_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_11_good();");
  CWE191_Integer_Underflow__short_rand_postdec_11_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_16_good();");
  CWE191_Integer_Underflow__char_rand_postdec_16_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_63_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_63_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_04_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_04_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_31_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_31_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_42_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_42_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_65_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_65_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_13_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_13_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_06_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_06_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_04_good();");
  CWE191_Integer_Underflow__char_min_postdec_04_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_66_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_66_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_68_good();");
  CWE191_Integer_Underflow__int_min_postdec_68_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_21_good();");
  CWE191_Integer_Underflow__short_min_postdec_21_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_41_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_41_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_66_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_66_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_51_good();");
  CWE191_Integer_Underflow__int_rand_postdec_51_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_06_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_06_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_07_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_07_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_31_good();");
  CWE191_Integer_Underflow__char_min_postdec_31_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_42_good();");
  CWE191_Integer_Underflow__char_min_postdec_42_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_63_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_63_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_51_good();");
  CWE191_Integer_Underflow__short_min_postdec_51_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_15_good();");
  CWE191_Integer_Underflow__short_min_postdec_15_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_16_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_16_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_32_good();");
  CWE191_Integer_Underflow__int_rand_postdec_32_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_51_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_51_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_14_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_14_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_10_good();");
  CWE191_Integer_Underflow__char_rand_postdec_10_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_42_good();");
  CWE191_Integer_Underflow__char_rand_postdec_42_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_44_good();");
  CWE191_Integer_Underflow__char_min_postdec_44_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_31_good();");
  CWE191_Integer_Underflow__int_min_postdec_31_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_05_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_05_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_44_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_44_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_65_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_65_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_67_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_67_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_67_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_67_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_08_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_08_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_06_good();");
  CWE191_Integer_Underflow__int_rand_postdec_06_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_04_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_04_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_45_good();");
  CWE191_Integer_Underflow__short_min_postdec_45_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_03_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_03_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_34_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_34_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_66_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_66_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_07_good();");
  CWE191_Integer_Underflow__int_min_postdec_07_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_09_good();");
  CWE191_Integer_Underflow__char_min_postdec_09_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_41_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_41_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_14_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_14_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_15_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_15_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_54_good();");
  CWE191_Integer_Underflow__short_min_postdec_54_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_15_good();");
  CWE191_Integer_Underflow__int_rand_postdec_15_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_02_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_02_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_02_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_02_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_15_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_15_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_51_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_51_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_02_good();");
  CWE191_Integer_Underflow__char_min_postdec_02_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_64_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_64_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_03_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_03_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_31_good();");
  CWE191_Integer_Underflow__short_rand_postdec_31_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_17_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_17_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_09_good();");
  CWE191_Integer_Underflow__char_rand_postdec_09_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_66_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_66_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_66_good();");
  CWE191_Integer_Underflow__short_rand_postdec_66_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_14_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_14_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_32_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_32_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_14_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_14_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_12_good();");
  CWE191_Integer_Underflow__char_rand_postdec_12_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_21_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_21_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_32_good();");
  CWE191_Integer_Underflow__short_min_postdec_32_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_61_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_61_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_31_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_31_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_64_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_64_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_65_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_65_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_16_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_16_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_03_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_03_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_52_good();");
  CWE191_Integer_Underflow__char_min_postdec_52_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_52_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_52_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_10_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_10_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_14_good();");
  CWE191_Integer_Underflow__short_rand_postdec_14_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_05_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_05_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_64_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_64_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_53_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_53_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_65_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_65_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_18_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_18_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_17_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_17_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_61_good();");
  CWE191_Integer_Underflow__int_min_postdec_61_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_07_good();");
  CWE191_Integer_Underflow__char_min_postdec_07_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_61_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_61_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_06_good();");
  CWE191_Integer_Underflow__char_min_postdec_06_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_12_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_12_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_63_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_63_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_06_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_06_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_14_good();");
  CWE191_Integer_Underflow__int_min_postdec_14_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_21_good();");
  CWE191_Integer_Underflow__int_min_postdec_21_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_18_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_18_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_21_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_21_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_51_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_51_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_08_good();");
  CWE191_Integer_Underflow__char_rand_postdec_08_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_61_good();");
  CWE191_Integer_Underflow__char_min_postdec_61_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_10_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_10_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_02_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_02_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_45_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_45_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_12_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_12_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_34_good();");
  CWE191_Integer_Underflow__char_rand_postdec_34_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_06_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_06_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_16_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_16_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_08_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_08_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_02_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_02_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_11_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_11_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_61_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_61_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_44_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_44_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_54_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_54_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_03_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_03_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_44_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_44_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_18_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_18_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_11_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_11_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_41_good();");
  CWE191_Integer_Underflow__int_rand_postdec_41_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_63_good();");
  CWE191_Integer_Underflow__int_min_postdec_63_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_34_good();");
  CWE191_Integer_Underflow__short_rand_postdec_34_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_21_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_21_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_01_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_01_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_45_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_45_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_52_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_52_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_13_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_13_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_12_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_12_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_17_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_17_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_08_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_08_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_16_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_16_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_34_good();");
  CWE191_Integer_Underflow__int_min_postdec_34_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_53_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_53_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_21_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_21_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_41_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_41_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_31_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_31_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_63_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_63_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_01_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_01_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_07_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_07_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_13_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_13_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_64_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_64_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_41_good();");
  CWE191_Integer_Underflow__int_min_postdec_41_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_10_good();");
  CWE191_Integer_Underflow__int_min_postdec_10_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_07_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_07_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_45_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_45_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_32_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_32_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_06_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_06_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_05_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_05_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_22_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_22_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_10_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_10_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_03_good();");
  CWE191_Integer_Underflow__short_min_postdec_03_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_65_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_65_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_34_good();");
  CWE191_Integer_Underflow__int_rand_postdec_34_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_52_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_52_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_17_good();");
  CWE191_Integer_Underflow__int_rand_postdec_17_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_04_good();");
  CWE191_Integer_Underflow__int_rand_postdec_04_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_18_good();");
  CWE191_Integer_Underflow__int_rand_postdec_18_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_04_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_04_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_02_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_02_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_04_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_04_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_44_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_44_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_51_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_51_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_65_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_65_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_18_good();");
  CWE191_Integer_Underflow__short_rand_postdec_18_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_65_good();");
  CWE191_Integer_Underflow__short_min_postdec_65_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_32_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_32_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_06_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_06_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_45_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_45_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_04_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_04_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_21_good();");
  CWE191_Integer_Underflow__short_rand_postdec_21_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_02_good();");
  CWE191_Integer_Underflow__int_min_postdec_02_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_61_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_61_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_44_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_44_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_16_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_16_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_31_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_31_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_67_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_67_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_17_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_17_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_22_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_22_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_21_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_21_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_05_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_05_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_13_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_13_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_09_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_09_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_18_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_18_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_41_good();");
  CWE191_Integer_Underflow__char_min_postdec_41_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_42_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_42_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_64_good();");
  CWE191_Integer_Underflow__char_rand_postdec_64_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_17_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_17_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_10_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_10_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_17_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_17_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_15_good();");
  CWE191_Integer_Underflow__char_min_postdec_15_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_16_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_16_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_01_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_01_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_54_good();");
  CWE191_Integer_Underflow__short_rand_postdec_54_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_07_good();");
  CWE191_Integer_Underflow__int_rand_postdec_07_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_45_good();");
  CWE191_Integer_Underflow__char_min_postdec_45_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_68_good();");
  CWE191_Integer_Underflow__char_min_postdec_68_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_09_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_09_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_09_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_09_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_32_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_32_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_15_good();");
  CWE191_Integer_Underflow__char_rand_postdec_15_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_05_good();");
  CWE191_Integer_Underflow__short_rand_postdec_05_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_61_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_61_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_13_good();");
  CWE191_Integer_Underflow__char_min_postdec_13_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_68_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_68_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_03_good();");
  CWE191_Integer_Underflow__char_min_postdec_03_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_53_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_53_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_07_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_07_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_09_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_09_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_65_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_65_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_67_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_67_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_51_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_51_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_21_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_21_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_18_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_18_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_17_good();");
  CWE191_Integer_Underflow__char_min_postdec_17_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_66_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_66_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_21_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_21_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_41_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_41_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_09_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_09_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_54_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_54_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_01_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_01_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_14_good();");
  CWE191_Integer_Underflow__int_rand_postdec_14_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_44_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_44_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_01_good();");
  CWE191_Integer_Underflow__short_rand_postdec_01_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_41_good();");
  CWE191_Integer_Underflow__short_min_postdec_41_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_53_good();");
  CWE191_Integer_Underflow__char_rand_postdec_53_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_44_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_44_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_44_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_44_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_68_good();");
  CWE191_Integer_Underflow__short_rand_postdec_68_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_18_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_18_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_14_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_14_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_63_good();");
  CWE191_Integer_Underflow__int_rand_postdec_63_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_04_good();");
  CWE191_Integer_Underflow__char_rand_postdec_04_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_08_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_08_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_17_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_17_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_53_good();");
  CWE191_Integer_Underflow__int_rand_postdec_53_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_42_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_42_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_10_good();");
  CWE191_Integer_Underflow__char_min_postdec_10_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_04_good();");
  CWE191_Integer_Underflow__int_min_postdec_04_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_42_good();");
  CWE191_Integer_Underflow__int_rand_postdec_42_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_12_good();");
  CWE191_Integer_Underflow__short_min_postdec_12_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_44_good();");
  CWE191_Integer_Underflow__char_rand_postdec_44_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_51_good();");
  CWE191_Integer_Underflow__char_min_postdec_51_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_07_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_07_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_03_good();");
  CWE191_Integer_Underflow__int_min_postdec_03_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_05_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_05_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_05_good();");
  CWE191_Integer_Underflow__int_rand_postdec_05_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_01_good();");
  CWE191_Integer_Underflow__char_rand_postdec_01_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_06_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_06_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_08_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_08_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_08_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_08_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_63_good();");
  CWE191_Integer_Underflow__short_min_postdec_63_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_31_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_31_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_34_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_34_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_07_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_07_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_10_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_10_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_64_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_64_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_12_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_12_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_11_good();");
  CWE191_Integer_Underflow__int_rand_postdec_11_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_65_good();");
  CWE191_Integer_Underflow__char_min_postdec_65_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_10_good();");
  CWE191_Integer_Underflow__short_min_postdec_10_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_31_good();");
  CWE191_Integer_Underflow__int_rand_postdec_31_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_45_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_45_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_14_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_14_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_12_good();");
  CWE191_Integer_Underflow__char_min_postdec_12_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_07_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_07_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_08_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_08_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_15_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_15_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_65_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_65_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_42_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_42_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_31_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_31_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_02_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_02_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_45_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_45_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_41_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_41_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_64_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_64_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_64_good();");
  CWE191_Integer_Underflow__short_rand_postdec_64_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_09_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_09_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_44_good();");
  CWE191_Integer_Underflow__int_min_postdec_44_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_42_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_42_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_01_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_01_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_06_good();");
  CWE191_Integer_Underflow__char_rand_postdec_06_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_53_good();");
  CWE191_Integer_Underflow__short_min_postdec_53_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_17_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_17_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_32_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_32_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_10_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_10_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_13_good();");
  CWE191_Integer_Underflow__char_rand_postdec_13_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_17_good();");
  CWE191_Integer_Underflow__char_rand_postdec_17_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_02_good();");
  CWE191_Integer_Underflow__char_rand_postdec_02_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_64_good();");
  CWE191_Integer_Underflow__int_min_postdec_64_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_52_good();");
  CWE191_Integer_Underflow__short_min_postdec_52_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_67_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_67_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_09_good();");
  CWE191_Integer_Underflow__int_min_postdec_09_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_32_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_32_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_42_good();");
  CWE191_Integer_Underflow__int_min_postdec_42_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_16_good();");
  CWE191_Integer_Underflow__int_rand_postdec_16_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_54_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_54_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_64_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_64_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_64_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_64_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_34_good();");
  CWE191_Integer_Underflow__char_min_postdec_34_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_12_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_12_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_13_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_13_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_01_good();");
  CWE191_Integer_Underflow__int_rand_postdec_01_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_02_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_02_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_06_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_06_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_14_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_14_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_67_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_67_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_10_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_10_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_54_good();");
  CWE191_Integer_Underflow__int_rand_postdec_54_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_66_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_66_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_63_good();");
  CWE191_Integer_Underflow__char_rand_postdec_63_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_64_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_64_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_34_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_34_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_42_good();");
  CWE191_Integer_Underflow__short_min_postdec_42_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_63_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_63_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_31_good();");
  CWE191_Integer_Underflow__short_min_postdec_31_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_32_good();");
  CWE191_Integer_Underflow__char_rand_postdec_32_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_68_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_68_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_22_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_22_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_14_good();");
  CWE191_Integer_Underflow__short_min_postdec_14_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_67_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_67_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_07_good();");
  CWE191_Integer_Underflow__char_rand_postdec_07_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_34_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_34_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_51_good();");
  CWE191_Integer_Underflow__int_min_postdec_51_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_06_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_06_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_01_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_01_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_04_good();");
  CWE191_Integer_Underflow__short_min_postdec_04_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_10_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_10_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_65_good();");
  CWE191_Integer_Underflow__int_min_postdec_65_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_01_good();");
  CWE191_Integer_Underflow__short_min_postdec_01_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_11_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_11_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_65_good();");
  CWE191_Integer_Underflow__char_rand_postdec_65_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_52_good();");
  CWE191_Integer_Underflow__int_rand_postdec_52_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_13_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_13_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_31_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_31_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_01_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_01_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_45_good();");
  CWE191_Integer_Underflow__short_rand_postdec_45_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_51_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_51_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_17_good();");
  CWE191_Integer_Underflow__short_min_postdec_17_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_52_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_52_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_07_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_07_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_54_good();");
  CWE191_Integer_Underflow__int_min_postdec_54_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_15_good();");
  CWE191_Integer_Underflow__short_rand_postdec_15_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_08_good();");
  CWE191_Integer_Underflow__int_rand_postdec_08_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_53_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_53_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_42_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_42_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_32_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_32_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_68_good();");
  CWE191_Integer_Underflow__char_rand_postdec_68_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_14_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_14_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_32_good();");
  CWE191_Integer_Underflow__int_min_postdec_32_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_13_good();");
  CWE191_Integer_Underflow__int_min_postdec_13_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_42_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_42_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_06_good();");
  CWE191_Integer_Underflow__short_rand_postdec_06_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_12_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_12_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_08_good();");
  CWE191_Integer_Underflow__char_min_postdec_08_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_11_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_11_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_15_good();");
  CWE191_Integer_Underflow__int_min_postdec_15_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_09_good();");
  CWE191_Integer_Underflow__short_min_postdec_09_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_03_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_03_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_21_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_21_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_09_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_09_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_03_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_03_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_32_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_32_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_09_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_09_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_11_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_11_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_31_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_31_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_34_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_34_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_06_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_06_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_18_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_18_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_65_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_65_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_13_good();");
  CWE191_Integer_Underflow__short_min_postdec_13_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_66_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_66_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_41_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_41_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_12_good();");
  CWE191_Integer_Underflow__int_min_postdec_12_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_07_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_07_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_01_good();");
  CWE191_Integer_Underflow__int_min_postdec_01_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_21_good();");
  CWE191_Integer_Underflow__char_rand_postdec_21_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_10_good();");
  CWE191_Integer_Underflow__short_rand_postdec_10_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_44_good();");
  CWE191_Integer_Underflow__short_rand_postdec_44_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_31_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_31_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_01_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_01_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_10_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_10_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_54_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_54_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_05_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_05_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_16_good();");
  CWE191_Integer_Underflow__short_min_postdec_16_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_14_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_14_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_15_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_15_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_53_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_53_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_41_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_41_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_32_good();");
  CWE191_Integer_Underflow__short_rand_postdec_32_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_03_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_03_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_66_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_66_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_41_good();");
  CWE191_Integer_Underflow__short_rand_postdec_41_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_51_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_51_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_08_good();");
  CWE191_Integer_Underflow__short_min_postdec_08_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_64_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_64_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_06_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_06_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_54_good();");
  CWE191_Integer_Underflow__char_rand_postdec_54_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_07_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_07_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_02_good();");
  CWE191_Integer_Underflow__int_rand_postdec_02_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_15_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_15_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_05_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_05_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_54_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_54_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_11_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_11_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_05_good();");
  CWE191_Integer_Underflow__char_min_postdec_05_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_05_good();");
  CWE191_Integer_Underflow__int_min_postdec_05_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_67_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_67_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_07_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_07_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_45_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_45_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_04_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_04_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_21_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_21_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_34_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_34_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_18_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_18_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_53_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_53_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_53_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_53_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_51_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_51_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_31_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_31_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_16_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_16_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_68_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_68_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_52_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_52_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_18_good();");
  CWE191_Integer_Underflow__char_rand_postdec_18_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_18_good();");
  CWE191_Integer_Underflow__short_min_postdec_18_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_61_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_61_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_54_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_54_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_15_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_15_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_11_good();");
  CWE191_Integer_Underflow__int_min_postdec_11_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_67_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_67_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_15_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_15_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_52_good();");
  CWE191_Integer_Underflow__short_rand_postdec_52_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_01_good();");
  CWE191_Integer_Underflow__char_min_postdec_01_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_13_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_13_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_08_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_08_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_16_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_16_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_63_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_63_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_22_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_22_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_41_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_41_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_32_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_32_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_34_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_34_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_68_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_68_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_51_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_51_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_05_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_05_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_31_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_31_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_02_good();");
  CWE191_Integer_Underflow__short_rand_postdec_02_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_06_good();");
  CWE191_Integer_Underflow__short_min_postdec_06_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_68_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_68_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_45_good();");
  CWE191_Integer_Underflow__int_rand_postdec_45_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_66_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_66_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_67_good();");
  CWE191_Integer_Underflow__char_rand_postdec_67_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_68_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_68_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_52_good();");
  CWE191_Integer_Underflow__int_min_postdec_52_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_64_good();");
  CWE191_Integer_Underflow__int_rand_postdec_64_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_44_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_44_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_45_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_45_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_10_good();");
  CWE191_Integer_Underflow__int_rand_postdec_10_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_66_good();");
  CWE191_Integer_Underflow__int_min_postdec_66_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_21_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_21_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_05_good();");
  CWE191_Integer_Underflow__char_rand_postdec_05_good();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_12_good();");
  CWE191_Integer_Underflow__int_fscanf_postdec_12_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_10_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_10_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_14_good();");
  CWE191_Integer_Underflow__char_min_postdec_14_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_54_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_54_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_61_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_61_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_52_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_52_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_51_good();");
  CWE191_Integer_Underflow__char_rand_postdec_51_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_03_good();");
  CWE191_Integer_Underflow__short_rand_postdec_03_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_16_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_16_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_17_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_17_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_22_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_22_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_02_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_02_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_21_good();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_21_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_21_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_21_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_04_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_04_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_68_good();");
  CWE191_Integer_Underflow__short_min_postdec_68_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_32_good();");
  CWE191_Integer_Underflow__char_min_postdec_32_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_67_good();");
  CWE191_Integer_Underflow__int_min_postdec_67_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_32_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_32_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_22_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_22_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_42_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_42_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_17_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_17_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_01_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_01_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_31_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_31_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_63_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_63_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_08_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_08_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_18_good();");
  CWE191_Integer_Underflow__char_min_postdec_18_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_13_good();");
  CWE191_Integer_Underflow__int_rand_postdec_13_good();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_45_good();");
  CWE191_Integer_Underflow__int_min_postdec_45_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_03_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_03_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_10_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_10_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_22_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_22_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_11_good();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_11_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_44_good();");
  CWE191_Integer_Underflow__short_min_postdec_44_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_17_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_17_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_08_good();");
  CWE191_Integer_Underflow__short_rand_postdec_08_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_61_good();");
  CWE191_Integer_Underflow__int_rand_postdec_61_good();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_02_good();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_02_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_02_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_02_good();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_22_good();");
  CWE191_Integer_Underflow__char_min_postdec_22_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_54_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_54_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_13_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_13_good();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_12_good();");
  CWE191_Integer_Underflow__int_rand_postdec_12_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_13_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_13_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_16_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_16_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_03_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_03_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_06_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_06_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_15_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_15_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_04_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_04_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_03_good();");
  CWE191_Integer_Underflow__char_rand_postdec_03_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_13_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_13_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_34_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_34_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_45_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_45_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_11_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_11_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_44_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_44_good();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_15_good();");
  CWE191_Integer_Underflow__int64_t_min_postdec_15_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_08_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_08_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_10_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_10_good();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_31_good();");
  CWE191_Integer_Underflow__char_rand_postdec_31_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_61_good();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_61_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_64_good();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_64_good();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_68_good();");
  CWE191_Integer_Underflow__int_fgets_postdec_68_good();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_09_good();");
  CWE191_Integer_Underflow__short_fscanf_postdec_09_good();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_12_good();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_12_good();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_04_good();");
  CWE191_Integer_Underflow__short_rand_postdec_04_good();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_42_good();");
  CWE191_Integer_Underflow__char_fscanf_postdec_42_good();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_53_good();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_53_good();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_22_bad();");
  CWE191_Integer_Underflow__short_min_postdec_22_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_61_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_61_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_66_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_66_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_32_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_32_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_04_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_04_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_67_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_67_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_05_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_05_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_41_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_41_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_66_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_66_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_11_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_11_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_51_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_51_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_52_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_52_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_21_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_21_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_08_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_08_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_05_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_05_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_68_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_68_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_16_bad();");
  CWE191_Integer_Underflow__int_min_postdec_16_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_61_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_61_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_03_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_03_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_14_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_14_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_14_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_14_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_51_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_51_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_17_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_17_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_03_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_03_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_54_bad();");
  CWE191_Integer_Underflow__char_min_postdec_54_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_14_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_14_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_64_bad();");
  CWE191_Integer_Underflow__char_min_postdec_64_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_16_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_16_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_12_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_12_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_04_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_04_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_09_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_09_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_11_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_11_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_16_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_16_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_11_bad();");
  CWE191_Integer_Underflow__short_min_postdec_11_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_03_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_03_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_15_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_15_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_53_bad();");
  CWE191_Integer_Underflow__char_min_postdec_53_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_67_bad();");
  CWE191_Integer_Underflow__short_min_postdec_67_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_22_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_22_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_61_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_61_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_09_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_09_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_67_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_67_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_63_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_63_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_01_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_01_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_09_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_09_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_21_bad();");
  CWE191_Integer_Underflow__char_min_postdec_21_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_18_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_18_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_51_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_51_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_61_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_61_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_07_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_07_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_12_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_12_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_12_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_12_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_01_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_01_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_63_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_63_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_53_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_53_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_02_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_02_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_64_bad();");
  CWE191_Integer_Underflow__short_min_postdec_64_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_32_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_32_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_12_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_12_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_65_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_65_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_13_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_13_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_08_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_08_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_44_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_44_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_63_bad();");
  CWE191_Integer_Underflow__char_min_postdec_63_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_11_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_11_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_68_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_68_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_63_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_63_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_67_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_67_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_54_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_54_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_34_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_34_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_52_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_52_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_11_bad();");
  CWE191_Integer_Underflow__char_min_postdec_11_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_53_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_53_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_22_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_22_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_17_bad();");
  CWE191_Integer_Underflow__int_min_postdec_17_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_64_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_64_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_13_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_13_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_11_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_11_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_01_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_01_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_42_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_42_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_09_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_09_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_68_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_68_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_02_bad();");
  CWE191_Integer_Underflow__short_min_postdec_02_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_51_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_51_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_04_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_04_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_44_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_44_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_34_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_34_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_63_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_63_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_66_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_66_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_03_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_03_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_54_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_54_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_53_bad();");
  CWE191_Integer_Underflow__int_min_postdec_53_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_67_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_67_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_42_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_42_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_61_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_61_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_18_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_18_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_07_bad();");
  CWE191_Integer_Underflow__short_min_postdec_07_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_52_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_52_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_22_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_22_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_15_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_15_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_04_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_04_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_18_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_18_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_22_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_22_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_63_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_63_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_52_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_52_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_15_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_15_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_66_bad();");
  CWE191_Integer_Underflow__char_min_postdec_66_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_34_bad();");
  CWE191_Integer_Underflow__short_min_postdec_34_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_67_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_67_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_11_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_11_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_16_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_16_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_66_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_66_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_41_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_41_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_34_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_34_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_05_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_05_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_66_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_66_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_42_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_42_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_52_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_52_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_16_bad();");
  CWE191_Integer_Underflow__char_min_postdec_16_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_54_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_54_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_06_bad();");
  CWE191_Integer_Underflow__int_min_postdec_06_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_44_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_44_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_05_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_05_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_65_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_65_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_02_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_02_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_61_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_61_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_17_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_17_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_14_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_14_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_63_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_63_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_61_bad();");
  CWE191_Integer_Underflow__short_min_postdec_61_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_41_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_41_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_09_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_09_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_65_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_65_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_53_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_53_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_41_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_41_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_13_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_13_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_53_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_53_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_08_bad();");
  CWE191_Integer_Underflow__int_min_postdec_08_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_66_bad();");
  CWE191_Integer_Underflow__short_min_postdec_66_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_22_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_22_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_34_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_34_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_41_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_41_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_05_bad();");
  CWE191_Integer_Underflow__short_min_postdec_05_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_22_bad();");
  CWE191_Integer_Underflow__int_min_postdec_22_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_18_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_18_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_42_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_42_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_18_bad();");
  CWE191_Integer_Underflow__int_min_postdec_18_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_45_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_45_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_52_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_52_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_07_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_07_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_65_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_65_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_67_bad();");
  CWE191_Integer_Underflow__char_min_postdec_67_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_65_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_65_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_11_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_11_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_16_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_16_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_63_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_63_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_04_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_04_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_31_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_31_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_42_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_42_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_65_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_65_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_13_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_13_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_06_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_06_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_04_bad();");
  CWE191_Integer_Underflow__char_min_postdec_04_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_66_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_66_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_68_bad();");
  CWE191_Integer_Underflow__int_min_postdec_68_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_21_bad();");
  CWE191_Integer_Underflow__short_min_postdec_21_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_41_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_41_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_66_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_66_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_51_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_51_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_06_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_06_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_07_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_07_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_31_bad();");
  CWE191_Integer_Underflow__char_min_postdec_31_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_42_bad();");
  CWE191_Integer_Underflow__char_min_postdec_42_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_63_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_63_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_51_bad();");
  CWE191_Integer_Underflow__short_min_postdec_51_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_15_bad();");
  CWE191_Integer_Underflow__short_min_postdec_15_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_16_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_16_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_32_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_32_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_51_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_51_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_14_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_14_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_10_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_10_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_42_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_42_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_44_bad();");
  CWE191_Integer_Underflow__char_min_postdec_44_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_31_bad();");
  CWE191_Integer_Underflow__int_min_postdec_31_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_05_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_05_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_44_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_44_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_65_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_65_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_67_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_67_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_67_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_67_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_08_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_08_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_06_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_06_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_04_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_04_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_45_bad();");
  CWE191_Integer_Underflow__short_min_postdec_45_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_03_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_03_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_34_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_34_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_66_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_66_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_07_bad();");
  CWE191_Integer_Underflow__int_min_postdec_07_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_09_bad();");
  CWE191_Integer_Underflow__char_min_postdec_09_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_41_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_41_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_14_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_14_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_15_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_15_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_54_bad();");
  CWE191_Integer_Underflow__short_min_postdec_54_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_15_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_15_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_02_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_02_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_02_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_02_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_15_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_15_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_51_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_51_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_02_bad();");
  CWE191_Integer_Underflow__char_min_postdec_02_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_64_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_64_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_03_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_03_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_31_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_31_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_17_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_17_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_09_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_09_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_66_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_66_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_66_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_66_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_14_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_14_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_32_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_32_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_14_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_14_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_12_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_12_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_21_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_21_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_32_bad();");
  CWE191_Integer_Underflow__short_min_postdec_32_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_61_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_61_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_31_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_31_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_64_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_64_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_65_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_65_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_16_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_16_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_03_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_03_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_52_bad();");
  CWE191_Integer_Underflow__char_min_postdec_52_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_52_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_52_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_10_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_10_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_14_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_14_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_05_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_05_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_64_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_64_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_53_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_53_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_65_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_65_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_18_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_18_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_17_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_17_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_61_bad();");
  CWE191_Integer_Underflow__int_min_postdec_61_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_07_bad();");
  CWE191_Integer_Underflow__char_min_postdec_07_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_61_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_61_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_06_bad();");
  CWE191_Integer_Underflow__char_min_postdec_06_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_12_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_12_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_63_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_63_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_06_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_06_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_14_bad();");
  CWE191_Integer_Underflow__int_min_postdec_14_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_21_bad();");
  CWE191_Integer_Underflow__int_min_postdec_21_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_18_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_18_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_21_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_21_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_51_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_51_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_08_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_08_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_61_bad();");
  CWE191_Integer_Underflow__char_min_postdec_61_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_10_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_10_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_02_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_02_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_45_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_45_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_12_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_12_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_34_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_34_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_06_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_06_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_16_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_16_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_08_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_08_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_02_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_02_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_11_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_11_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_61_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_61_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_44_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_44_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_54_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_54_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_03_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_03_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_44_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_44_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_18_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_18_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_11_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_11_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_41_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_41_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_63_bad();");
  CWE191_Integer_Underflow__int_min_postdec_63_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_34_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_34_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_21_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_21_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_01_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_01_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_45_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_45_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_52_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_52_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_13_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_13_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_12_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_12_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_17_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_17_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_08_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_08_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_16_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_16_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_34_bad();");
  CWE191_Integer_Underflow__int_min_postdec_34_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_53_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_53_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_21_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_21_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_41_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_41_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_31_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_31_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_63_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_63_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_01_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_01_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_07_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_07_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_13_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_13_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_64_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_64_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_41_bad();");
  CWE191_Integer_Underflow__int_min_postdec_41_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_10_bad();");
  CWE191_Integer_Underflow__int_min_postdec_10_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_07_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_07_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_45_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_45_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_32_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_32_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_06_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_06_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_05_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_05_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_22_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_22_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_10_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_10_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_03_bad();");
  CWE191_Integer_Underflow__short_min_postdec_03_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_65_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_65_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_34_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_34_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_52_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_52_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_17_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_17_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_04_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_04_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_18_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_18_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_04_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_04_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_02_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_02_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_04_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_04_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_44_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_44_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_51_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_51_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_65_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_65_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_18_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_18_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_65_bad();");
  CWE191_Integer_Underflow__short_min_postdec_65_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_32_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_32_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_06_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_06_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_45_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_45_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_04_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_04_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_21_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_21_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_02_bad();");
  CWE191_Integer_Underflow__int_min_postdec_02_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_61_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_61_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_44_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_44_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_16_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_16_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_31_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_31_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_67_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_67_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_17_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_17_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_22_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_22_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_21_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_21_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_05_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_05_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_13_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_13_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_09_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_09_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_18_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_18_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_41_bad();");
  CWE191_Integer_Underflow__char_min_postdec_41_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_42_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_42_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_64_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_64_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_17_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_17_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_10_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_10_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_17_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_17_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_15_bad();");
  CWE191_Integer_Underflow__char_min_postdec_15_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_16_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_16_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_01_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_01_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_54_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_54_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_07_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_07_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_45_bad();");
  CWE191_Integer_Underflow__char_min_postdec_45_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_68_bad();");
  CWE191_Integer_Underflow__char_min_postdec_68_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_09_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_09_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_09_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_09_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_32_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_32_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_15_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_15_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_05_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_05_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_61_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_61_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_13_bad();");
  CWE191_Integer_Underflow__char_min_postdec_13_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_68_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_68_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_03_bad();");
  CWE191_Integer_Underflow__char_min_postdec_03_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_53_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_53_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_07_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_07_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_09_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_09_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_65_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_65_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_67_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_67_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_51_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_51_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_21_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_21_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_18_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_18_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_17_bad();");
  CWE191_Integer_Underflow__char_min_postdec_17_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_66_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_66_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_21_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_21_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_41_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_41_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_09_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_09_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_54_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_54_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_01_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_01_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_14_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_14_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_44_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_44_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_01_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_01_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_41_bad();");
  CWE191_Integer_Underflow__short_min_postdec_41_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_53_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_53_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_44_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_44_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_44_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_44_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_68_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_68_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_18_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_18_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_14_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_14_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_63_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_63_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_04_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_04_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_08_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_08_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_17_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_17_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_53_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_53_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_42_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_42_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_10_bad();");
  CWE191_Integer_Underflow__char_min_postdec_10_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_04_bad();");
  CWE191_Integer_Underflow__int_min_postdec_04_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_42_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_42_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_12_bad();");
  CWE191_Integer_Underflow__short_min_postdec_12_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_44_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_44_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_51_bad();");
  CWE191_Integer_Underflow__char_min_postdec_51_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_07_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_07_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_03_bad();");
  CWE191_Integer_Underflow__int_min_postdec_03_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_05_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_05_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_05_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_05_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_01_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_01_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_06_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_06_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_08_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_08_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_08_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_08_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_63_bad();");
  CWE191_Integer_Underflow__short_min_postdec_63_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_31_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_31_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_34_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_34_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_07_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_07_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_10_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_10_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_64_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_64_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_12_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_12_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_11_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_11_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_65_bad();");
  CWE191_Integer_Underflow__char_min_postdec_65_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_10_bad();");
  CWE191_Integer_Underflow__short_min_postdec_10_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_31_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_31_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_45_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_45_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_14_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_14_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_12_bad();");
  CWE191_Integer_Underflow__char_min_postdec_12_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_07_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_07_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_08_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_08_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_15_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_15_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_65_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_65_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_42_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_42_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_31_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_31_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_02_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_02_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_45_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_45_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_41_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_41_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_64_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_64_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_64_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_64_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_09_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_09_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_44_bad();");
  CWE191_Integer_Underflow__int_min_postdec_44_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_42_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_42_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_01_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_01_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_06_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_06_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_53_bad();");
  CWE191_Integer_Underflow__short_min_postdec_53_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_17_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_17_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_32_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_32_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_10_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_10_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_13_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_13_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_17_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_17_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_02_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_02_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_64_bad();");
  CWE191_Integer_Underflow__int_min_postdec_64_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_52_bad();");
  CWE191_Integer_Underflow__short_min_postdec_52_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_67_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_67_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_09_bad();");
  CWE191_Integer_Underflow__int_min_postdec_09_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_32_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_32_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_42_bad();");
  CWE191_Integer_Underflow__int_min_postdec_42_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_16_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_16_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_54_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_54_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_64_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_64_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_64_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_64_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_34_bad();");
  CWE191_Integer_Underflow__char_min_postdec_34_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_12_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_12_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_13_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_13_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_01_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_01_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_02_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_02_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_06_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_06_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_14_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_14_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_67_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_67_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_10_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_10_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_54_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_54_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_66_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_66_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_63_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_63_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_64_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_64_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_34_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_34_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_42_bad();");
  CWE191_Integer_Underflow__short_min_postdec_42_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_63_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_63_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_31_bad();");
  CWE191_Integer_Underflow__short_min_postdec_31_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_32_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_32_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_68_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_68_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_22_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_22_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_14_bad();");
  CWE191_Integer_Underflow__short_min_postdec_14_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_67_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_67_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_07_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_07_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_34_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_34_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_51_bad();");
  CWE191_Integer_Underflow__int_min_postdec_51_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_06_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_06_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_01_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_01_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_04_bad();");
  CWE191_Integer_Underflow__short_min_postdec_04_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_10_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_10_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_65_bad();");
  CWE191_Integer_Underflow__int_min_postdec_65_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_01_bad();");
  CWE191_Integer_Underflow__short_min_postdec_01_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_11_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_11_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_65_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_65_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_52_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_52_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_13_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_13_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_31_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_31_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_01_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_01_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_45_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_45_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_51_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_51_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_17_bad();");
  CWE191_Integer_Underflow__short_min_postdec_17_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_52_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_52_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_07_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_07_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_54_bad();");
  CWE191_Integer_Underflow__int_min_postdec_54_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_15_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_15_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_08_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_08_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_53_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_53_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_42_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_42_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_32_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_32_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_68_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_68_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_14_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_14_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_32_bad();");
  CWE191_Integer_Underflow__int_min_postdec_32_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_13_bad();");
  CWE191_Integer_Underflow__int_min_postdec_13_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_42_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_42_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_06_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_06_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_12_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_12_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_08_bad();");
  CWE191_Integer_Underflow__char_min_postdec_08_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_11_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_11_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_15_bad();");
  CWE191_Integer_Underflow__int_min_postdec_15_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_09_bad();");
  CWE191_Integer_Underflow__short_min_postdec_09_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_03_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_03_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_21_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_21_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_09_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_09_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_03_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_03_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_32_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_32_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_09_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_09_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_11_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_11_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_31_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_31_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_34_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_34_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_06_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_06_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_18_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_18_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_65_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_65_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_13_bad();");
  CWE191_Integer_Underflow__short_min_postdec_13_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_66_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_66_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_41_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_41_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_12_bad();");
  CWE191_Integer_Underflow__int_min_postdec_12_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_07_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_07_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_01_bad();");
  CWE191_Integer_Underflow__int_min_postdec_01_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_21_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_21_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_10_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_10_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_44_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_44_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_31_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_31_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_01_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_01_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_10_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_10_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_54_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_54_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_05_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_05_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_16_bad();");
  CWE191_Integer_Underflow__short_min_postdec_16_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_14_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_14_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_15_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_15_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_53_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_53_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_41_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_41_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_32_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_32_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_03_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_03_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_66_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_66_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_41_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_41_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_51_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_51_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_08_bad();");
  CWE191_Integer_Underflow__short_min_postdec_08_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_64_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_64_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_06_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_06_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_54_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_54_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_07_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_07_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_02_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_02_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_15_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_15_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_05_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_05_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_54_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_54_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_11_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_11_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_05_bad();");
  CWE191_Integer_Underflow__char_min_postdec_05_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_05_bad();");
  CWE191_Integer_Underflow__int_min_postdec_05_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_67_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_67_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_07_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_07_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_45_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_45_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_04_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_04_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_21_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_21_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_34_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_34_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_18_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_18_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_53_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_53_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_53_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_53_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_51_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_51_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_31_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_31_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_16_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_16_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_68_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_68_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_52_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_52_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_18_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_18_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_18_bad();");
  CWE191_Integer_Underflow__short_min_postdec_18_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_61_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_61_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_54_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_54_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_15_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_15_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_11_bad();");
  CWE191_Integer_Underflow__int_min_postdec_11_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_67_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_67_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_15_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_15_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_52_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_52_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_01_bad();");
  CWE191_Integer_Underflow__char_min_postdec_01_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_13_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_13_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_08_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_08_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_16_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_16_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_63_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_63_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_22_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_22_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_41_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_41_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_32_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_32_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_34_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_34_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_68_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_68_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_51_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_51_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_05_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_05_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_31_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_31_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_02_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_02_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_06_bad();");
  CWE191_Integer_Underflow__short_min_postdec_06_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_68_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_68_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_45_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_45_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_66_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_66_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_67_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_67_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_68_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_68_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_52_bad();");
  CWE191_Integer_Underflow__int_min_postdec_52_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_64_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_64_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_44_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_44_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_45_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_45_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_10_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_10_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_66_bad();");
  CWE191_Integer_Underflow__int_min_postdec_66_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_21_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_21_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_05_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_05_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fscanf_postdec_12_bad();");
  CWE191_Integer_Underflow__int_fscanf_postdec_12_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_10_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_10_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_14_bad();");
  CWE191_Integer_Underflow__char_min_postdec_14_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_54_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_54_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_61_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_61_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_52_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_52_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_51_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_51_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_03_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_03_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_16_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_16_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_17_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_17_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_22_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_22_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_02_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_02_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_fscanf_postdec_21_bad();");
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_21_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_21_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_21_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_04_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_04_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_68_bad();");
  CWE191_Integer_Underflow__short_min_postdec_68_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_32_bad();");
  CWE191_Integer_Underflow__char_min_postdec_32_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_67_bad();");
  CWE191_Integer_Underflow__int_min_postdec_67_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_32_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_32_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_22_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_22_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_42_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_42_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_17_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_17_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_01_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_01_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_31_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_31_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_63_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_63_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_08_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_08_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_18_bad();");
  CWE191_Integer_Underflow__char_min_postdec_18_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_13_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_13_bad();
  printLine("Calling CWE191_Integer_Underflow__int_min_postdec_45_bad();");
  CWE191_Integer_Underflow__int_min_postdec_45_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_03_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_03_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_10_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_10_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_22_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_22_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_rand_postdec_11_bad();");
  CWE191_Integer_Underflow__int64_t_rand_postdec_11_bad();
  printLine("Calling CWE191_Integer_Underflow__short_min_postdec_44_bad();");
  CWE191_Integer_Underflow__short_min_postdec_44_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_17_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_17_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_08_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_08_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_61_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_61_bad();
  printLine("Calling CWE191_Integer_Underflow__int_listen_socket_postdec_02_bad();");
  CWE191_Integer_Underflow__int_listen_socket_postdec_02_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_02_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_02_bad();
  printLine("Calling CWE191_Integer_Underflow__char_min_postdec_22_bad();");
  CWE191_Integer_Underflow__char_min_postdec_22_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_54_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_54_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_13_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_13_bad();
  printLine("Calling CWE191_Integer_Underflow__int_rand_postdec_12_bad();");
  CWE191_Integer_Underflow__int_rand_postdec_12_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_13_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_13_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_16_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_16_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_03_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_03_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_06_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_06_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_15_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_15_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_04_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_04_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_03_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_03_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_13_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_13_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_34_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_34_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_45_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_45_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_11_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_11_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_44_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_44_bad();
  printLine("Calling CWE191_Integer_Underflow__int64_t_min_postdec_15_bad();");
  CWE191_Integer_Underflow__int64_t_min_postdec_15_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_08_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_08_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_10_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_10_bad();
  printLine("Calling CWE191_Integer_Underflow__char_rand_postdec_31_bad();");
  CWE191_Integer_Underflow__char_rand_postdec_31_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_rand_postdec_61_bad();");
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_61_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_64_bad();");
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_64_bad();
  printLine("Calling CWE191_Integer_Underflow__int_fgets_postdec_68_bad();");
  CWE191_Integer_Underflow__int_fgets_postdec_68_bad();
  printLine("Calling CWE191_Integer_Underflow__short_fscanf_postdec_09_bad();");
  CWE191_Integer_Underflow__short_fscanf_postdec_09_bad();
  printLine("Calling CWE191_Integer_Underflow__unsigned_int_min_postdec_12_bad();");
  CWE191_Integer_Underflow__unsigned_int_min_postdec_12_bad();
  printLine("Calling CWE191_Integer_Underflow__short_rand_postdec_04_bad();");
  CWE191_Integer_Underflow__short_rand_postdec_04_bad();
  printLine("Calling CWE191_Integer_Underflow__char_fscanf_postdec_42_bad();");
  CWE191_Integer_Underflow__char_fscanf_postdec_42_bad();
  printLine("Calling CWE191_Integer_Underflow__int_connect_socket_postdec_53_bad();");
  CWE191_Integer_Underflow__int_connect_socket_postdec_53_bad();
  return 0;
}
// 6AB534: using guessed type int globalArgc;
// 6AB538: using guessed type __int64 globalArgv;

//----- (0000000000407A28) ----------------------------------------------------
__int64 badSource()
{
  return 0x80000000LL;
}

//----- (0000000000407A3B) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_42_bad()
{
  int v0; // eax

  v0 = badSource();
  return printIntLine(v0 - 1);
}

//----- (0000000000407A6D) ----------------------------------------------------
__int64 goodG2BSource()
{
  return 4294967294LL;
}

//----- (0000000000407A80) ----------------------------------------------------
int goodG2B()
{
  int v0; // eax

  v0 = goodG2BSource();
  return printIntLine(v0 - 1);
}

//----- (0000000000407AB2) ----------------------------------------------------
__int64 goodB2GSource()
{
  return 0x80000000LL;
}

//----- (0000000000407AC5) ----------------------------------------------------
int goodB2G()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource();
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}

//----- (0000000000407B0C) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_42_good()
{
  goodB2G();
  return goodG2B();
}

//----- (0000000000407B26) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_65_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  int (__fastcall *v2)(__int64); // [rsp+8h] [rbp-8h]

  v2 = CWE191_Integer_Underflow__int64_t_fscanf_postdec_65b_badSink;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return ((__int64 (__fastcall *)(__int64))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000407B6A) ----------------------------------------------------
int goodG2B_0()
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_65b_goodG2BSink(-2LL);
}

//----- (0000000000407B99) ----------------------------------------------------
__int64 goodB2G_0()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  int (__fastcall *v2)(__int64); // [rsp+8h] [rbp-8h]

  v2 = CWE191_Integer_Underflow__int64_t_fscanf_postdec_65b_goodB2GSink;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return ((__int64 (__fastcall *)(__int64))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000407BDD) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_65_good()
{
  goodG2B_0();
  return goodB2G_0();
}

//----- (0000000000407BF7) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_09_bad()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x8000000000000000LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000407C44) ----------------------------------------------------
int goodB2G1()
{
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x8000000000000000LL;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 - 1);
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000407CB9) ----------------------------------------------------
int goodB2G2()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = 0x8000000000000000LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 - 1);
  }
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000407D22) ----------------------------------------------------
int goodG2B1()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = -2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000407D75) ----------------------------------------------------
int goodG2B2()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = -2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000407DBC) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_09_good()
{
  goodB2G1();
  goodB2G2();
  goodG2B1();
  return goodG2B2();
}

//----- (0000000000407DEA) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_51_bad()
{
  return CWE191_Integer_Underflow__short_min_postdec_51b_badSink(-32768);
}

//----- (0000000000407E0B) ----------------------------------------------------
int goodG2B_1()
{
  return CWE191_Integer_Underflow__short_min_postdec_51b_goodG2BSink(-2);
}

//----- (0000000000407E2C) ----------------------------------------------------
int goodB2G_1()
{
  return CWE191_Integer_Underflow__short_min_postdec_51b_goodB2GSink(-32768);
}

//----- (0000000000407E4D) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_51_good()
{
  goodG2B_1();
  return goodB2G_1();
}

//----- (0000000000407E67) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_52b_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_52c_badSink(a1);
}

//----- (0000000000407E7E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_52b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_52c_goodG2BSink(a1);
}

//----- (0000000000407E95) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_52b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_52c_goodB2GSink(a1);
}

//----- (0000000000407EAC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_53d_badSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (0000000000407ED7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_53d_goodG2BSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (0000000000407F02) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_53d_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (0000000000407F3F) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_13_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000407F9C) ----------------------------------------------------
int goodB2G1_0()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000408019) ----------------------------------------------------
int goodB2G2_0()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040808A) ----------------------------------------------------
int goodG2B1_0()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004080DA) ----------------------------------------------------
int goodG2B2_0()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040811E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_13_good()
{
  goodB2G1_0();
  goodB2G2_0();
  goodG2B1_0();
  return goodG2B2_0();
}

//----- (000000000040814C) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_fgets_postdec_65_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE191_Integer_Underflow__int_fgets_postdec_65b_badSink;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (00000000004081BD) ----------------------------------------------------
int goodG2B_2()
{
  return CWE191_Integer_Underflow__int_fgets_postdec_65b_goodG2BSink(-2);
}

//----- (00000000004081E8) ----------------------------------------------------
__int64 goodB2G_2()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE191_Integer_Underflow__int_fgets_postdec_65b_goodB2GSink;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (0000000000408259) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_fgets_postdec_65_good()
{
  goodG2B_2();
  return goodB2G_2();
}

//----- (0000000000408273) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_22_badSink(char a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__char_min_postdec_22_badGlobal;
  if ( CWE191_Integer_Underflow__char_min_postdec_22_badGlobal )
    result = printHexCharLine(a1 - 1);
  return result;
}
// 6AB1E4: using guessed type int CWE191_Integer_Underflow__char_min_postdec_22_badGlobal;

//----- (00000000004082A8) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_22_goodB2G1Sink(char a1)
{
  if ( CWE191_Integer_Underflow__char_min_postdec_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(a1 - 1);
}
// 6AB1E8: using guessed type int CWE191_Integer_Underflow__char_min_postdec_22_goodB2G1Global;

//----- (00000000004082FB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_22_goodB2G2Sink(char a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__char_min_postdec_22_goodB2G2Global;
  if ( CWE191_Integer_Underflow__char_min_postdec_22_goodB2G2Global )
  {
    if ( a1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(a1 - 1);
  }
  return result;
}
// 6AB1EC: using guessed type int CWE191_Integer_Underflow__char_min_postdec_22_goodB2G2Global;

//----- (0000000000408342) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_22_goodG2BSink(char a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__char_min_postdec_22_goodG2BGlobal;
  if ( CWE191_Integer_Underflow__char_min_postdec_22_goodG2BGlobal )
    result = printHexCharLine(a1 - 1);
  return result;
}
// 6AB1F0: using guessed type int CWE191_Integer_Underflow__char_min_postdec_22_goodG2BGlobal;

//----- (0000000000408377) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_63b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 - 1));
}

//----- (00000000004083AE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_63b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 - 1));
}

//----- (00000000004083E5) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_63b_goodB2GSink(_WORD *a1)
{
  int result; // eax

  if ( *a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(*a1 - 1));
  return result;
}

//----- (0000000000408430) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_65b_badSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (0000000000408457) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_65b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000040847E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_65b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (00000000004084C1) ----------------------------------------------------
int badSink()
{
  return printIntLine((__int16)(CWE191_Integer_Underflow__short_min_postdec_45_badData - 1));
}
// 6AB1CA: using guessed type __int16 CWE191_Integer_Underflow__short_min_postdec_45_badData;

//----- (00000000004084F4) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_45_bad()
{
  CWE191_Integer_Underflow__short_min_postdec_45_badData = -32768;
  return badSink();
}
// 6AB1CA: using guessed type __int16 CWE191_Integer_Underflow__short_min_postdec_45_badData;

//----- (000000000040851F) ----------------------------------------------------
int goodG2BSink()
{
  return printIntLine((__int16)(CWE191_Integer_Underflow__short_min_postdec_45_goodG2BData - 1));
}
// 6AB1CC: using guessed type __int16 CWE191_Integer_Underflow__short_min_postdec_45_goodG2BData;

//----- (0000000000408552) ----------------------------------------------------
int goodG2B_3()
{
  CWE191_Integer_Underflow__short_min_postdec_45_goodG2BData = -2;
  return goodG2BSink();
}
// 6AB1CC: using guessed type __int16 CWE191_Integer_Underflow__short_min_postdec_45_goodG2BData;

//----- (000000000040857D) ----------------------------------------------------
int goodB2GSink()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__short_min_postdec_45_goodB2GData == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(CWE191_Integer_Underflow__short_min_postdec_45_goodB2GData - 1));
  return result;
}
// 6AB1CE: using guessed type __int16 CWE191_Integer_Underflow__short_min_postdec_45_goodB2GData;

//----- (00000000004085C4) ----------------------------------------------------
int goodB2G_3()
{
  CWE191_Integer_Underflow__short_min_postdec_45_goodB2GData = -32768;
  return goodB2GSink();
}
// 6AB1CE: using guessed type __int16 CWE191_Integer_Underflow__short_min_postdec_45_goodB2GData;

//----- (00000000004085EF) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_45_good()
{
  goodG2B_3();
  return goodB2G_3();
}

//----- (0000000000408609) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54c_badSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_54d_badSink(a1);
}

//----- (0000000000408623) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54c_goodG2BSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_54d_goodG2BSink(a1);
}

//----- (000000000040863D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54c_goodB2GSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_54d_goodB2GSink(a1);
}

//----- (0000000000408657) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_05_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue )
    v1 = 2147483648;
  result = staticTrue;
  if ( staticTrue )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB124: using guessed type int staticTrue;

//----- (0000000000408697) ----------------------------------------------------
int goodB2G1_1()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue )
    v1 = 2147483648;
  if ( staticFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 - 1);
}
// 6AB124: using guessed type int staticTrue;
// 6AB1D0: using guessed type int staticFalse;

//----- (00000000004086F8) ----------------------------------------------------
int goodB2G2_1()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue )
    v1 = 2147483648;
  result = staticTrue;
  if ( staticTrue )
  {
    if ( v1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 - 1);
  }
  return result;
}
// 6AB124: using guessed type int staticTrue;

//----- (000000000040874D) ----------------------------------------------------
int goodG2B1_1()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticTrue;
  if ( staticTrue )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB124: using guessed type int staticTrue;
// 6AB1D0: using guessed type int staticFalse;

//----- (0000000000408799) ----------------------------------------------------
int goodG2B2_1()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue )
    v1 = -2;
  result = staticTrue;
  if ( staticTrue )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB124: using guessed type int staticTrue;

//----- (00000000004087D9) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_05_good()
{
  goodB2G1_1();
  goodB2G2_1();
  goodG2B1_1();
  return goodG2B2_1();
}

//----- (0000000000408807) ----------------------------------------------------
void CWE191_Integer_Underflow__unsigned_int_rand_postdec_17_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // [rsp+4h] [rbp-1Ch]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v5 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v5 = v2;
  }
  for ( j = 0; j <= 0; ++j )
    printUnsignedLine(--v5);
}

//----- (00000000004088A1) ----------------------------------------------------
void goodB2G_4()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // [rsp+4h] [rbp-1Ch]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v5 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v5 = v2;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v5 )
      printUnsignedLine(--v5);
    else
      printLine("data value is too large to perform arithmetic safely.");
  }
}

//----- (000000000040894D) ----------------------------------------------------
int goodG2B_4()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -2;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(--v1);
  return result;
}

//----- (000000000040899F) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_17_good()
{
  goodB2G_4();
  return goodG2B_4();
}

//----- (00000000004089B9) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_67_bad()
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_67b_badSink(0x8000000000000000LL);
}

//----- (00000000004089ED) ----------------------------------------------------
int goodG2B_5()
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_67b_goodG2BSink(-2LL);
}

//----- (0000000000408A1B) ----------------------------------------------------
int goodB2G_5()
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_67b_goodB2GSink(0x8000000000000000LL);
}

//----- (0000000000408A4F) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_67_good()
{
  goodG2B_5();
  return goodB2G_5();
}

//----- (0000000000408A69) ----------------------------------------------------
int __fastcall badSink_0(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000408A8A) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_41_bad()
{
  return badSink_0(2147483648);
}

//----- (0000000000408AAC) ----------------------------------------------------
int __fastcall goodG2BSink_0(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000408ACD) ----------------------------------------------------
int goodG2B_6()
{
  return goodG2BSink_0(-2);
}

//----- (0000000000408AEF) ----------------------------------------------------
int __fastcall goodB2GSink_0(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (0000000000408B25) ----------------------------------------------------
int goodB2G_6()
{
  return goodB2GSink_0(2147483648);
}

//----- (0000000000408B47) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_41_good()
{
  goodB2G_6();
  return goodG2B_6();
}

//----- (0000000000408B61) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_06_bad()
{
  return printIntLine(0x7FFFu);
}

//----- (0000000000408BA9) ----------------------------------------------------
int goodB2G1_2()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000408C11) ----------------------------------------------------
int goodB2G2_2()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000408C6D) ----------------------------------------------------
int goodG2B1_2()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000408CC1) ----------------------------------------------------
int goodG2B2_2()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000408D09) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_06_good()
{
  goodB2G1_2();
  goodB2G2_2();
  goodG2B1_2();
  return goodG2B2_2();
}

//----- (0000000000408D37) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_53d_badSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (0000000000408D5E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_53d_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (0000000000408D85) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_53d_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (0000000000408DC8) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_18_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 - 1);
}

//----- (0000000000408E3E) ----------------------------------------------------
int goodB2G_7()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000408EC6) ----------------------------------------------------
int goodG2B_7()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000408EF4) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_18_good()
{
  goodB2G_7();
  return goodG2B_7();
}

//----- (0000000000408F0E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_52_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE191_Integer_Underflow__int_listen_socket_postdec_52b_badSink(v8);
}
// 408F0E: using guessed type char buf[16];

//----- (000000000040903C) ----------------------------------------------------
int goodG2B_8()
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_52b_goodG2BSink(-2);
}

//----- (000000000040905E) ----------------------------------------------------
int goodB2G_8()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE191_Integer_Underflow__int_listen_socket_postdec_52b_goodB2GSink(v8);
}
// 40905E: using guessed type char buf[16];

//----- (000000000040918C) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_52_good()
{
  goodG2B_8();
  return goodB2G_8();
}

//----- (00000000004091A6) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_34_bad()
{
  return printUnsignedLine(0xFFFFFFFF);
}

//----- (00000000004091DE) ----------------------------------------------------
int goodG2B_9()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000409216) ----------------------------------------------------
int goodB2G_9()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000409260) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_34_good()
{
  goodG2B_9();
  return goodB2G_9();
}

//----- (000000000040927A) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_34_bad()
{
  return printIntLine(0x7FFFFFFFu);
}

//----- (00000000004092B2) ----------------------------------------------------
int goodG2B_10()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (00000000004092EA) ----------------------------------------------------
int goodB2G_10()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000409337) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_34_good()
{
  goodG2B_10();
  return goodB2G_10();
}

//----- (0000000000409351) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_51b_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000409372) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000409393) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (00000000004093C9) ----------------------------------------------------
int __fastcall badSink_1(char a1)
{
  int result; // eax

  result = badStatic;
  if ( badStatic )
    result = printHexCharLine(a1 - 1);
  return result;
}
// 6AB1D4: using guessed type int badStatic;

//----- (00000000004093FE) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_21_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  badStatic = 1;
  return badSink_1(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1D4: using guessed type int badStatic;

//----- (0000000000409441) ----------------------------------------------------
int __fastcall goodB2G1Sink(char a1)
{
  if ( goodB2G1Static )
    return printLine("Benign, fixed string");
  if ( a1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(a1 - 1);
}
// 6AB1D8: using guessed type int goodB2G1Static;

//----- (0000000000409494) ----------------------------------------------------
int goodB2G1_3()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  goodB2G1Static = 0;
  return goodB2G1Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1D8: using guessed type int goodB2G1Static;

//----- (00000000004094D7) ----------------------------------------------------
int __fastcall goodB2G2Sink(char a1)
{
  int result; // eax

  result = goodB2G2Static;
  if ( goodB2G2Static )
  {
    if ( a1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(a1 - 1);
  }
  return result;
}
// 6AB1DC: using guessed type int goodB2G2Static;

//----- (000000000040951E) ----------------------------------------------------
int goodB2G2_3()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  goodB2G2Static = 1;
  return goodB2G2Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1DC: using guessed type int goodB2G2Static;

//----- (0000000000409561) ----------------------------------------------------
int __fastcall goodG2BSink_1(char a1)
{
  int result; // eax

  result = goodG2BStatic;
  if ( goodG2BStatic )
    result = printHexCharLine(a1 - 1);
  return result;
}
// 6AB1E0: using guessed type int goodG2BStatic;

//----- (0000000000409596) ----------------------------------------------------
int goodG2B_11()
{
  goodG2BStatic = 1;
  return goodG2BSink_1(-2);
}
// 6AB1E0: using guessed type int goodG2BStatic;

//----- (00000000004095BD) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_21_good()
{
  goodB2G1_3();
  goodB2G2_3();
  return goodG2B_11();
}

//----- (00000000004095E1) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_03_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return printHexCharLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000409628) ----------------------------------------------------
int goodB2G1_4()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000409683) ----------------------------------------------------
int goodB2G2_4()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004096DE) ----------------------------------------------------
int goodG2B1_3()
{
  return printHexCharLine(-3);
}

//----- (000000000040970C) ----------------------------------------------------
int goodG2B2_3()
{
  return printHexCharLine(-3);
}

//----- (000000000040973A) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_03_good()
{
  goodB2G1_4();
  goodB2G2_4();
  goodG2B1_3();
  return goodG2B2_3();
}

//----- (0000000000409768) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) - 1);
}

//----- (0000000000409794) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) - 1);
}

//----- (00000000004097C0) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (0000000000409801) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_16_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 - 1);
}
// 409801: using guessed type char buf[16];

//----- (000000000040993B) ----------------------------------------------------
int goodB2G_11()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 - 1);
  return result;
}
// 40993B: using guessed type char buf[16];

//----- (0000000000409A8A) ----------------------------------------------------
int goodG2B_12()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000409AB8) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_16_good()
{
  goodB2G_11();
  return goodG2B_12();
}

//----- (0000000000409AD2) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_22_bad()
{
  CWE191_Integer_Underflow__char_min_postdec_22_badGlobal = 1;
  return CWE191_Integer_Underflow__char_min_postdec_22_badSink(-128);
}
// 6AB1E4: using guessed type int CWE191_Integer_Underflow__char_min_postdec_22_badGlobal;

//----- (0000000000409AF9) ----------------------------------------------------
int goodB2G1_5()
{
  CWE191_Integer_Underflow__char_min_postdec_22_goodB2G1Global = 0;
  return CWE191_Integer_Underflow__char_min_postdec_22_goodB2G1Sink(-128);
}
// 6AB1E8: using guessed type int CWE191_Integer_Underflow__char_min_postdec_22_goodB2G1Global;

//----- (0000000000409B20) ----------------------------------------------------
int goodB2G2_5()
{
  CWE191_Integer_Underflow__char_min_postdec_22_goodB2G2Global = 1;
  return CWE191_Integer_Underflow__char_min_postdec_22_goodB2G2Sink(-128);
}
// 6AB1EC: using guessed type int CWE191_Integer_Underflow__char_min_postdec_22_goodB2G2Global;

//----- (0000000000409B47) ----------------------------------------------------
int goodG2B_13()
{
  CWE191_Integer_Underflow__char_min_postdec_22_goodG2BGlobal = 1;
  return CWE191_Integer_Underflow__char_min_postdec_22_goodG2BSink(-2);
}
// 6AB1F0: using guessed type int CWE191_Integer_Underflow__char_min_postdec_22_goodG2BGlobal;

//----- (0000000000409B6E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_22_good()
{
  goodB2G1_5();
  goodB2G2_5();
  return goodG2B_13();
}

//----- (0000000000409B92) ----------------------------------------------------
__int64 staticReturnsTrue()
{
  return 1LL;
}

//----- (0000000000409B9D) ----------------------------------------------------
__int64 staticReturnsFalse()
{
  return 0LL;
}

//----- (0000000000409BA8) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_08_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)staticReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticReturnsTrue();
  if ( result )
    result = printLongLongLine(v10 - 1);
  return result;
}

//----- (0000000000409C92) ----------------------------------------------------
int goodB2G1_6()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)staticReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( (unsigned int)staticReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v10 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 - 1);
}

//----- (0000000000409DA4) ----------------------------------------------------
int goodB2G2_6()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)staticReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticReturnsTrue();
  if ( result )
  {
    if ( v10 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 - 1);
  }
  return result;
}

//----- (0000000000409EAA) ----------------------------------------------------
int goodG2B1_4()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = -2LL;
  result = staticReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (0000000000409F05) ----------------------------------------------------
int goodG2B2_4()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue() )
    v1 = -2LL;
  result = staticReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (0000000000409F54) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_08_good()
{
  goodB2G1_6();
  goodB2G2_6();
  goodG2B1_4();
  return goodG2B2_4();
}

//----- (0000000000409F82) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_67_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE191_Integer_Underflow__char_rand_postdec_67b_badSink(v0);
}

//----- (0000000000409FD3) ----------------------------------------------------
int goodG2B_14()
{
  return CWE191_Integer_Underflow__char_rand_postdec_67b_goodG2BSink(254);
}

//----- (0000000000409FF7) ----------------------------------------------------
int goodB2G_12()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE191_Integer_Underflow__char_rand_postdec_67b_goodB2GSink(v0);
}

//----- (000000000040A048) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_67_good()
{
  goodG2B_14();
  return goodB2G_12();
}

//----- (000000000040A062) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_67b_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000040A089) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000040A0B0) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000040A0EC) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_51_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE191_Integer_Underflow__int_listen_socket_postdec_51b_badSink(v8);
}
// 40A0EC: using guessed type char buf[16];

//----- (000000000040A21A) ----------------------------------------------------
int goodG2B_15()
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_51b_goodG2BSink(-2);
}

//----- (000000000040A23C) ----------------------------------------------------
int goodB2G_13()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE191_Integer_Underflow__int_listen_socket_postdec_51b_goodB2GSink(v8);
}
// 40A23C: using guessed type char buf[16];

//----- (000000000040A36A) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_51_good()
{
  goodG2B_15();
  return goodB2G_13();
}

//----- (000000000040A384) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_12_bad()
{
  char v1; // [rsp+Dh] [rbp-3h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%c", &v1);
  else
    v1 = -2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printHexCharLine(v1 - 1);
  if ( v1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040A41F) ----------------------------------------------------
int goodB2G_14()
{
  int result; // eax
  char v1; // [rsp+Dh] [rbp-3h]

  v1 = 32;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 - 1);
  }
  else if ( v1 == -128 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printHexCharLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040A4E7) ----------------------------------------------------
int goodG2B_16()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printHexCharLine(253);
}

//----- (000000000040A555) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_12_good()
{
  goodB2G_14();
  return goodG2B_16();
}

//----- (000000000040A56F) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_13_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -128;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040A5B3) ----------------------------------------------------
int goodB2G1_7()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -128;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 - 1);
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040A615) ----------------------------------------------------
int goodB2G2_7()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -128;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 - 1);
  }
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040A66B) ----------------------------------------------------
int goodG2B1_5()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040A6BB) ----------------------------------------------------
int goodG2B2_5()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040A6FF) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_13_good()
{
  goodB2G1_7();
  goodB2G2_7();
  goodG2B1_5();
  return goodG2B2_5();
}

//----- (000000000040A72D) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_61_bad()
{
  int v0; // eax

  v0 = CWE191_Integer_Underflow__unsigned_int_rand_postdec_61b_badSource();
  return printUnsignedLine(v0 - 1);
}

//----- (000000000040A75F) ----------------------------------------------------
int goodG2B_17()
{
  int v0; // eax

  v0 = CWE191_Integer_Underflow__unsigned_int_rand_postdec_61b_goodG2BSource();
  return printUnsignedLine(v0 - 1);
}

//----- (000000000040A791) ----------------------------------------------------
int goodB2G_15()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE191_Integer_Underflow__unsigned_int_rand_postdec_61b_goodB2GSource();
  if ( v1 )
    result = printUnsignedLine(v1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000040A7D5) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_61_good()
{
  goodG2B_17();
  return goodB2G_15();
}

//----- (000000000040A7EF) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2147483648;
  v2 = 2147483648;
  return CWE191_Integer_Underflow__int_min_postdec_66b_badSink((__int64)&v1);
}

//----- (000000000040A819) ----------------------------------------------------
int goodG2B_18()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -2;
  v2 = -2;
  return CWE191_Integer_Underflow__int_min_postdec_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000040A843) ----------------------------------------------------
int goodB2G_16()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 2147483648;
  v2 = 2147483648;
  return CWE191_Integer_Underflow__int_min_postdec_66b_goodB2GSink((__int64)&v1);
}

//----- (000000000040A86D) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_66_good()
{
  goodG2B_18();
  return goodB2G_16();
}

//----- (000000000040A887) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54b_badSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_54c_badSink(a1);
}

//----- (000000000040A8A1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54b_goodG2BSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_54c_goodG2BSink(a1);
}

//----- (000000000040A8BB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54b_goodB2GSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_54c_goodB2GSink(a1);
}

//----- (000000000040A8D5) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_15_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return printUnsignedLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040A91E) ----------------------------------------------------
int goodB2G1_8()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 )
    result = printUnsignedLine(v1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040A97A) ----------------------------------------------------
int goodB2G2_8()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 )
    result = printUnsignedLine(v1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040A9D6) ----------------------------------------------------
int goodG2B1_6()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000040AA04) ----------------------------------------------------
int goodG2B2_6()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000040AA32) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_15_good()
{
  goodB2G1_8();
  goodB2G2_8();
  goodG2B1_6();
  return goodG2B2_6();
}

//----- (000000000040AA60) ----------------------------------------------------
int badSink_2()
{
  return printIntLine(CWE191_Integer_Underflow__int_listen_socket_postdec_45_badData - 1);
}
// 6AB1F4: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_45_badData;

//----- (000000000040AA87) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_45_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE191_Integer_Underflow__int_listen_socket_postdec_45_badData = v8;
  return badSink_2();
}
// 6AB1F4: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_45_badData;
// 40AA87: using guessed type char buf[16];

//----- (000000000040ABBE) ----------------------------------------------------
int goodG2BSink_2()
{
  return printIntLine(CWE191_Integer_Underflow__int_listen_socket_postdec_45_goodG2BData - 1);
}
// 6AB1F8: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_45_goodG2BData;

//----- (000000000040ABE5) ----------------------------------------------------
int goodG2B_19()
{
  CWE191_Integer_Underflow__int_listen_socket_postdec_45_goodG2BData = -2;
  return goodG2BSink_2();
}
// 6AB1F8: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_45_goodG2BData;

//----- (000000000040AC10) ----------------------------------------------------
int goodB2GSink_1()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__int_listen_socket_postdec_45_goodB2GData == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE191_Integer_Underflow__int_listen_socket_postdec_45_goodB2GData - 1);
  return result;
}
// 6AB1FC: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_45_goodB2GData;

//----- (000000000040AC4C) ----------------------------------------------------
int goodB2G_17()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE191_Integer_Underflow__int_listen_socket_postdec_45_goodB2GData = v8;
  return goodB2GSink_1();
}
// 6AB1FC: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_45_goodB2GData;
// 40AC4C: using guessed type char buf[16];

//----- (000000000040AD83) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_45_good()
{
  goodG2B_19();
  return goodB2G_17();
}

//----- (000000000040AD9D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_52c_badSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000040ADC8) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_52c_goodG2BSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000040ADF3) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_52c_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (000000000040AE30) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_68b_badSink()
{
  return printUnsignedLine(CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_badData - 1);
}
// 6AB5BC: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_badData;

//----- (000000000040AE57) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_68b_goodG2BSink()
{
  return printUnsignedLine(CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_goodG2BData - 1);
}
// 6AB5B4: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_goodG2BData;

//----- (000000000040AE7E) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_goodB2GData )
    result = printUnsignedLine(CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_goodB2GData - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 6AB5B8: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_goodB2GData;

//----- (000000000040AEB7) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_07_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFive;
  if ( staticFive == 5 )
    result = printUnsignedLine(v6 - 1);
  return result;
}
// 6AB128: using guessed type int staticFive;

//----- (000000000040AF41) ----------------------------------------------------
int goodB2G1_9()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( staticFive != 5 )
    return printLine("Benign, fixed string");
  if ( v6 )
    return printUnsignedLine(v6 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 6AB128: using guessed type int staticFive;

//----- (000000000040AFE9) ----------------------------------------------------
int goodB2G2_9()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFive;
  if ( staticFive == 5 )
  {
    if ( v6 )
      result = printUnsignedLine(v6 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 6AB128: using guessed type int staticFive;

//----- (000000000040B085) ----------------------------------------------------
int goodG2B1_7()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = staticFive;
  if ( staticFive == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB128: using guessed type int staticFive;

//----- (000000000040B0D3) ----------------------------------------------------
int goodG2B2_7()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive == 5 )
    v1 = -2;
  result = staticFive;
  if ( staticFive == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB128: using guessed type int staticFive;

//----- (000000000040B115) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_07_good()
{
  goodB2G1_9();
  goodB2G2_9();
  goodG2B1_7();
  return goodG2B2_7();
}

//----- (000000000040B143) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_06_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 - 1);
}
// 40B143: using guessed type char buf[16];

//----- (000000000040B293) ----------------------------------------------------
int goodB2G1_10()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 - 1);
  return result;
}
// 40B293: using guessed type char buf[16];

//----- (000000000040B404) ----------------------------------------------------
int goodB2G2_10()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 - 1);
  return result;
}
// 40B404: using guessed type char buf[16];

//----- (000000000040B569) ----------------------------------------------------
int goodG2B1_8()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000040B5B5) ----------------------------------------------------
int goodG2B2_8()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000040B5F5) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_06_good()
{
  goodB2G1_10();
  goodB2G2_10();
  goodG2B1_8();
  return goodG2B2_8();
}

//----- (000000000040B623) ----------------------------------------------------
__int64 __fastcall badSource_0(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040B650) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_42_bad()
{
  int v0; // eax

  v0 = badSource_0(0);
  return printUnsignedLine(v0 - 1);
}

//----- (000000000040B682) ----------------------------------------------------
__int64 goodG2BSource_0()
{
  return 4294967294LL;
}

//----- (000000000040B695) ----------------------------------------------------
int goodG2B_20()
{
  int v0; // eax

  v0 = goodG2BSource_0();
  return printUnsignedLine(v0 - 1);
}

//----- (000000000040B6C7) ----------------------------------------------------
__int64 __fastcall goodB2GSource_0(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040B6F4) ----------------------------------------------------
int goodB2G_18()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_0(0);
  if ( v1 )
    result = printUnsignedLine(v1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000040B738) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_42_good()
{
  goodB2G_18();
  return goodG2B_20();
}

//----- (000000000040B752) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_63_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = -32768;
  return CWE191_Integer_Underflow__short_min_postdec_63b_badSink(&v1);
}

//----- (000000000040B774) ----------------------------------------------------
int goodG2B_21()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = -2;
  return CWE191_Integer_Underflow__short_min_postdec_63b_goodG2BSink(&v1);
}

//----- (000000000040B796) ----------------------------------------------------
int goodB2G_19()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = -32768;
  return CWE191_Integer_Underflow__short_min_postdec_63b_goodB2GSink(&v1);
}

//----- (000000000040B7B8) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_63_good()
{
  goodG2B_21();
  return goodB2G_19();
}

//----- (000000000040B7D2) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54e_badSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (000000000040B7F3) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54e_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (000000000040B814) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000040B847) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_67_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE191_Integer_Underflow__int_connect_socket_postdec_67b_badSink(v8);
}
// 40B847: using guessed type char buf[16];

//----- (000000000040B935) ----------------------------------------------------
int goodG2B_22()
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_67b_goodG2BSink(-2);
}

//----- (000000000040B95D) ----------------------------------------------------
int goodB2G_20()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE191_Integer_Underflow__int_connect_socket_postdec_67b_goodB2GSink(v8);
}
// 40B95D: using guessed type char buf[16];

//----- (000000000040BA4B) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_67_good()
{
  goodG2B_22();
  return goodB2G_20();
}

//----- (000000000040BA65) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_11_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040BAC8) ----------------------------------------------------
int goodB2G1_11()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040BB4B) ----------------------------------------------------
int goodB2G2_11()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040BBC2) ----------------------------------------------------
int goodG2B1_9()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (000000000040BC18) ----------------------------------------------------
int goodG2B2_9()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (000000000040BC62) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_11_good()
{
  goodB2G1_11();
  goodB2G2_11();
  goodG2B1_9();
  return goodG2B2_9();
}

//----- (000000000040BC90) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_02_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return printHexCharLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040BCD7) ----------------------------------------------------
int goodB2G1_12()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040BD32) ----------------------------------------------------
int goodB2G2_12()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040BD8D) ----------------------------------------------------
int goodG2B1_10()
{
  return printHexCharLine(-3);
}

//----- (000000000040BDBB) ----------------------------------------------------
int goodG2B2_10()
{
  return printHexCharLine(-3);
}

//----- (000000000040BDE9) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_02_good()
{
  goodB2G1_12();
  goodB2G2_12();
  goodG2B1_10();
  return goodG2B2_10();
}

//----- (000000000040BE17) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_22_bad()
{
  CWE191_Integer_Underflow__int64_t_min_postdec_22_badGlobal = 1;
  return CWE191_Integer_Underflow__int64_t_min_postdec_22_badSink(0x8000000000000000LL);
}
// 6AB200: using guessed type int CWE191_Integer_Underflow__int64_t_min_postdec_22_badGlobal;

//----- (000000000040BE4D) ----------------------------------------------------
int goodB2G1_13()
{
  CWE191_Integer_Underflow__int64_t_min_postdec_22_goodB2G1Global = 0;
  return CWE191_Integer_Underflow__int64_t_min_postdec_22_goodB2G1Sink(0x8000000000000000LL);
}
// 6AB204: using guessed type int CWE191_Integer_Underflow__int64_t_min_postdec_22_goodB2G1Global;

//----- (000000000040BE83) ----------------------------------------------------
int goodB2G2_13()
{
  CWE191_Integer_Underflow__int64_t_min_postdec_22_goodB2G2Global = 1;
  return CWE191_Integer_Underflow__int64_t_min_postdec_22_goodB2G2Sink(0x8000000000000000LL);
}
// 6AB208: using guessed type int CWE191_Integer_Underflow__int64_t_min_postdec_22_goodB2G2Global;

//----- (000000000040BEB9) ----------------------------------------------------
int goodG2B_23()
{
  CWE191_Integer_Underflow__int64_t_min_postdec_22_goodG2BGlobal = 1;
  return CWE191_Integer_Underflow__int64_t_min_postdec_22_goodG2BSink(-2LL);
}
// 6AB20C: using guessed type int CWE191_Integer_Underflow__int64_t_min_postdec_22_goodG2BGlobal;

//----- (000000000040BEE9) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_22_good()
{
  goodB2G1_13();
  goodB2G2_13();
  return goodG2B_23();
}

//----- (000000000040BF0D) ----------------------------------------------------
int __fastcall badSink_3(char a1)
{
  int result; // eax

  result = badStatic_0;
  if ( badStatic_0 )
    result = printHexCharLine(a1 - 1);
  return result;
}
// 6AB210: using guessed type int badStatic_0;

//----- (000000000040BF42) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_21_bad()
{
  badStatic_0 = 1;
  return badSink_3(-128);
}
// 6AB210: using guessed type int badStatic_0;

//----- (000000000040BF69) ----------------------------------------------------
int __fastcall goodB2G1Sink_0(char a1)
{
  if ( goodB2G1Static_0 )
    return printLine("Benign, fixed string");
  if ( a1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(a1 - 1);
}
// 6AB214: using guessed type int goodB2G1Static_0;

//----- (000000000040BFBC) ----------------------------------------------------
int goodB2G1_14()
{
  goodB2G1Static_0 = 0;
  return goodB2G1Sink_0(-128);
}
// 6AB214: using guessed type int goodB2G1Static_0;

//----- (000000000040BFE3) ----------------------------------------------------
int __fastcall goodB2G2Sink_0(char a1)
{
  int result; // eax

  result = goodB2G2Static_0;
  if ( goodB2G2Static_0 )
  {
    if ( a1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(a1 - 1);
  }
  return result;
}
// 6AB218: using guessed type int goodB2G2Static_0;

//----- (000000000040C02A) ----------------------------------------------------
int goodB2G2_14()
{
  goodB2G2Static_0 = 1;
  return goodB2G2Sink_0(-128);
}
// 6AB218: using guessed type int goodB2G2Static_0;

//----- (000000000040C051) ----------------------------------------------------
int __fastcall goodG2BSink_3(char a1)
{
  int result; // eax

  result = goodG2BStatic_0;
  if ( goodG2BStatic_0 )
    result = printHexCharLine(a1 - 1);
  return result;
}
// 6AB21C: using guessed type int goodG2BStatic_0;

//----- (000000000040C086) ----------------------------------------------------
int goodG2B_24()
{
  goodG2BStatic_0 = 1;
  return goodG2BSink_3(-2);
}
// 6AB21C: using guessed type int goodG2BStatic_0;

//----- (000000000040C0AD) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_21_good()
{
  goodB2G1_14();
  goodB2G2_14();
  return goodG2B_24();
}

//----- (000000000040C0D1) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_03_bad()
{
  return printHexCharLine(127);
}

//----- (000000000040C0FF) ----------------------------------------------------
int goodB2G1_15()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040C13F) ----------------------------------------------------
int goodB2G2_15()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040C17F) ----------------------------------------------------
int goodG2B1_11()
{
  return printHexCharLine(-3);
}

//----- (000000000040C1AD) ----------------------------------------------------
int goodG2B2_11()
{
  return printHexCharLine(-3);
}

//----- (000000000040C1DB) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_03_good()
{
  goodB2G1_15();
  goodB2G2_15();
  goodG2B1_11();
  return goodG2B2_11();
}

//----- (000000000040C209) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_67b_badSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (000000000040C230) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_67b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (000000000040C257) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000040C290) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_65_bad()
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_65b_badSink(0x8000000000000000LL);
}

//----- (000000000040C2C5) ----------------------------------------------------
int goodG2B_25()
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_65b_goodG2BSink(-2LL);
}

//----- (000000000040C2F4) ----------------------------------------------------
int goodB2G_21()
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_65b_goodB2GSink(0x8000000000000000LL);
}

//----- (000000000040C329) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_65_good()
{
  goodG2B_25();
  return goodB2G_21();
}

//----- (000000000040C343) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_10_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000040C39E) ----------------------------------------------------
int goodB2G1_16()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000040C419) ----------------------------------------------------
int goodB2G2_16()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000040C488) ----------------------------------------------------
int goodG2B1_12()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000040C4D6) ----------------------------------------------------
int goodG2B2_12()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalTrue )
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000040C518) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_10_good()
{
  goodB2G1_16();
  goodB2G2_16();
  goodG2B1_12();
  return goodG2B2_12();
}

//----- (000000000040C546) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_54_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE191_Integer_Underflow__int64_t_rand_postdec_54b_badSink(v4);
}

//----- (000000000040C603) ----------------------------------------------------
int goodG2B_26()
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_54b_goodG2BSink(-2LL);
}

//----- (000000000040C629) ----------------------------------------------------
int goodB2G_22()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE191_Integer_Underflow__int64_t_rand_postdec_54b_goodB2GSink(v4);
}

//----- (000000000040C6E6) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_54_good()
{
  goodG2B_26();
  return goodB2G_22();
}

//----- (000000000040C700) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_64b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 - 1));
}

//----- (000000000040C73F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_64b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 - 1));
}

//----- (000000000040C77E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_64b_goodB2GSink(_WORD *a1)
{
  int result; // eax

  if ( *a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(*a1 - 1));
  return result;
}

//----- (000000000040C7D1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54d_badSink(char a1)
{
  return CWE191_Integer_Underflow__char_rand_postdec_54e_badSink(a1);
}

//----- (000000000040C7EB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54d_goodG2BSink(char a1)
{
  return CWE191_Integer_Underflow__char_rand_postdec_54e_goodG2BSink(a1);
}

//----- (000000000040C805) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54d_goodB2GSink(char a1)
{
  return CWE191_Integer_Underflow__char_rand_postdec_54e_goodB2GSink(a1);
}

//----- (000000000040C81F) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_05_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticTrue_0 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticTrue_0;
  if ( staticTrue_0 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB12C: using guessed type int staticTrue_0;

//----- (000000000040C87A) ----------------------------------------------------
int goodB2G1_17()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticTrue_0 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( staticFalse_0 )
    return printLine("Benign, fixed string");
  if ( v1 )
    return printUnsignedLine(v1 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB12C: using guessed type int staticTrue_0;
// 6AB220: using guessed type int staticFalse_0;

//----- (000000000040C8F4) ----------------------------------------------------
int goodB2G2_17()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticTrue_0 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    if ( v1 )
      result = printUnsignedLine(v1 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB12C: using guessed type int staticTrue_0;

//----- (000000000040C962) ----------------------------------------------------
int goodG2B1_13()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_0 )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticTrue_0;
  if ( staticTrue_0 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB12C: using guessed type int staticTrue_0;
// 6AB220: using guessed type int staticFalse_0;

//----- (000000000040C9AE) ----------------------------------------------------
int goodG2B2_13()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_0 )
    v1 = -2;
  result = staticTrue_0;
  if ( staticTrue_0 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB12C: using guessed type int staticTrue_0;

//----- (000000000040C9EE) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_05_good()
{
  goodB2G1_17();
  goodB2G2_17();
  goodG2B1_13();
  return goodG2B2_13();
}

//----- (000000000040CA1C) ----------------------------------------------------
int __fastcall badSink_4(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (000000000040CA3D) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_41_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return badSink_4(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040CA75) ----------------------------------------------------
int __fastcall goodG2BSink_4(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (000000000040CA96) ----------------------------------------------------
int goodG2B_27()
{
  return goodG2BSink_4(-2);
}

//----- (000000000040CAB8) ----------------------------------------------------
int __fastcall goodB2GSink_2(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000040CAEB) ----------------------------------------------------
int goodB2G_23()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return goodB2GSink_2(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040CB23) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_41_good()
{
  goodB2G_23();
  return goodG2B_27();
}

//----- (000000000040CB3D) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_01_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return printHexCharLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040CB84) ----------------------------------------------------
int goodG2B_28()
{
  return printHexCharLine(-3);
}

//----- (000000000040CBB2) ----------------------------------------------------
int goodB2G_24()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040CC0D) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_01_good()
{
  goodG2B_28();
  return goodB2G_24();
}

//----- (000000000040CC27) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54e_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000040CC48) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000040CC69) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000040CC9F) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_12_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = -128;
  else
    v1 = -2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printHexCharLine(v1 - 1);
  if ( v1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 - 1);
}

//----- (000000000040CD1F) ----------------------------------------------------
int goodB2G_25()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040CDB1) ----------------------------------------------------
int goodG2B_29()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printHexCharLine(253);
}

//----- (000000000040CE1F) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_12_good()
{
  goodB2G_25();
  return goodG2B_29();
}

//----- (000000000040CE39) ----------------------------------------------------
int __fastcall badSink_5(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000040CE64) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_41_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return badSink_5(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040CE9D) ----------------------------------------------------
int __fastcall goodG2BSink_5(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000040CEC8) ----------------------------------------------------
int goodG2B_30()
{
  return goodG2BSink_5(-2);
}

//----- (000000000040CEE5) ----------------------------------------------------
int __fastcall goodB2GSink_3(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (000000000040CF22) ----------------------------------------------------
int goodB2G_26()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return goodB2GSink_3(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040CF5B) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_41_good()
{
  goodB2G_26();
  return goodG2B_30();
}

//----- (000000000040CF75) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_07_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( staticFive_0 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive_0;
  if ( staticFive_0 == 5 )
    result = printIntLine(v7 - 1);
  return result;
}
// 6AB130: using guessed type int staticFive_0;
// 40CF75: using guessed type char buf[16];

//----- (000000000040D081) ----------------------------------------------------
int goodB2G1_18()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( staticFive_0 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( staticFive_0 != 5 )
    return printLine("Benign, fixed string");
  if ( v7 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 - 1);
}
// 6AB130: using guessed type int staticFive_0;
// 40D081: using guessed type char buf[16];

//----- (000000000040D1AE) ----------------------------------------------------
int goodB2G2_18()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( staticFive_0 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive_0;
  if ( staticFive_0 == 5 )
  {
    if ( v7 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 - 1);
  }
  return result;
}
// 6AB130: using guessed type int staticFive_0;
// 40D1AE: using guessed type char buf[16];

//----- (000000000040D2CF) ----------------------------------------------------
int goodG2B1_14()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_0 == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = staticFive_0;
  if ( staticFive_0 == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB130: using guessed type int staticFive_0;

//----- (000000000040D31D) ----------------------------------------------------
int goodG2B2_14()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_0 == 5 )
    v1 = -2;
  result = staticFive_0;
  if ( staticFive_0 == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB130: using guessed type int staticFive_0;

//----- (000000000040D35F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_07_good()
{
  goodB2G1_18();
  goodB2G2_18();
  goodG2B1_14();
  return goodG2B2_14();
}

//----- (000000000040D38D) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_51_bad()
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_51b_badSink(0);
}

//----- (000000000040D3AF) ----------------------------------------------------
int goodG2B_31()
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_51b_goodG2BSink(-2);
}

//----- (000000000040D3D1) ----------------------------------------------------
int goodB2G_27()
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_51b_goodB2GSink(0);
}

//----- (000000000040D3F3) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_51_good()
{
  goodG2B_31();
  return goodB2G_27();
}

//----- (000000000040D40D) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_04_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_472298, &v1);
  return printLongLongLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040D46E) ----------------------------------------------------
int goodB2G1_19()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_472298, &v1);
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040D4FA) ----------------------------------------------------
int goodB2G2_19()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_472298, &v1);
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040D57A) ----------------------------------------------------
int goodG2B1_15()
{
  return printLongLongLine(-3LL);
}

//----- (000000000040D5CB) ----------------------------------------------------
int goodG2B2_15()
{
  return printLongLongLine(-3LL);
}

//----- (000000000040D610) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_04_good()
{
  goodB2G1_19();
  goodB2G2_19();
  goodG2B1_15();
  return goodG2B2_15();
}

//----- (000000000040D63E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_34_bad()
{
  char v1; // [rsp+Dh] [rbp-3h]
  char v2; // [rsp+Eh] [rbp-2h]
  char v3; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  v3 = v1 - 1;
  v2 = v1 - 1;
  return printHexCharLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040D693) ----------------------------------------------------
int goodG2B_32()
{
  return printHexCharLine(-3);
}

//----- (000000000040D6CF) ----------------------------------------------------
int goodB2G_28()
{
  int result; // eax
  char v1; // [rsp+Dh] [rbp-3h]
  char v2; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  v2 = v1;
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v2 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040D736) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_34_good()
{
  goodG2B_32();
  return goodB2G_28();
}

//----- (000000000040D750) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_54_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE191_Integer_Underflow__short_fscanf_postdec_54b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040D789) ----------------------------------------------------
int goodG2B_33()
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_54b_goodG2BSink(-2);
}

//----- (000000000040D7AA) ----------------------------------------------------
int goodB2G_29()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE191_Integer_Underflow__short_fscanf_postdec_54b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040D7E3) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_54_good()
{
  goodG2B_33();
  return goodB2G_29();
}

//----- (000000000040D7FD) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_11_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v4 - 1));
  return result;
}

//----- (000000000040D88D) ----------------------------------------------------
int goodB2G1_20()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v4 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 - 1));
}

//----- (000000000040D93D) ----------------------------------------------------
int goodB2G2_20()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v4 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 - 1));
  }
  return result;
}

//----- (000000000040D9E1) ----------------------------------------------------
int goodG2B1_16()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (000000000040DA3D) ----------------------------------------------------
int goodG2B2_16()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (000000000040DA8D) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_11_good()
{
  goodB2G1_20();
  goodB2G2_20();
  goodG2B1_16();
  return goodG2B2_16();
}

//----- (000000000040DABB) ----------------------------------------------------
__int64 staticReturnsTrue_0()
{
  return 1LL;
}

//----- (000000000040DAC6) ----------------------------------------------------
__int64 staticReturnsFalse_0()
{
  return 0LL;
}

//----- (000000000040DAD1) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_08_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
    v1 = -32768;
  result = staticReturnsTrue_0();
  if ( result )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (000000000040DB21) ----------------------------------------------------
int goodB2G1_21()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
    v1 = -32768;
  if ( (unsigned int)staticReturnsFalse_0() )
    return printLine("Benign, fixed string");
  if ( v1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 - 1));
}

//----- (000000000040DB91) ----------------------------------------------------
int goodB2G2_21()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
    v1 = -32768;
  result = staticReturnsTrue_0();
  if ( result )
  {
    if ( v1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 - 1));
  }
  return result;
}

//----- (000000000040DBF5) ----------------------------------------------------
int goodG2B1_17()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_0() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticReturnsTrue_0();
  if ( result )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (000000000040DC51) ----------------------------------------------------
int goodG2B2_17()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_0() )
    v1 = -2;
  result = staticReturnsTrue_0();
  if ( result )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (000000000040DCA1) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_08_good()
{
  goodB2G1_21();
  goodB2G2_21();
  goodG2B1_17();
  return goodG2B2_17();
}

//----- (000000000040DCCF) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_66b_badSink(__int64 a1)
{
  return printHexCharLine(*(_BYTE *)(a1 + 2) - 1);
}

//----- (000000000040DD04) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_66b_goodG2BSink(__int64 a1)
{
  return printHexCharLine(*(_BYTE *)(a1 + 2) - 1);
}

//----- (000000000040DD39) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  char v2; // [rsp+1Fh] [rbp-1h]

  v2 = *(_BYTE *)(a1 + 2);
  if ( v2 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v2 - 1);
  return result;
}

//----- (000000000040DD80) ----------------------------------------------------
int badSink_6()
{
  return printUnsignedLine(CWE191_Integer_Underflow__unsigned_int_min_postdec_45_badData - 1);
}
// 6AB224: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_45_badData;

//----- (000000000040DDA7) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_45_bad()
{
  CWE191_Integer_Underflow__unsigned_int_min_postdec_45_badData = 0;
  return badSink_6();
}
// 6AB224: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_45_badData;

//----- (000000000040DDD2) ----------------------------------------------------
int goodG2BSink_6()
{
  return printUnsignedLine(CWE191_Integer_Underflow__unsigned_int_min_postdec_45_goodG2BData - 1);
}
// 6AB228: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_45_goodG2BData;

//----- (000000000040DDF9) ----------------------------------------------------
int goodG2B_34()
{
  CWE191_Integer_Underflow__unsigned_int_min_postdec_45_goodG2BData = -2;
  return goodG2BSink_6();
}
// 6AB228: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_45_goodG2BData;

//----- (000000000040DE24) ----------------------------------------------------
int goodB2GSink_4()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__unsigned_int_min_postdec_45_goodB2GData )
    result = printUnsignedLine(CWE191_Integer_Underflow__unsigned_int_min_postdec_45_goodB2GData - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 6AB22C: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_45_goodB2GData;

//----- (000000000040DE5D) ----------------------------------------------------
int goodB2G_30()
{
  CWE191_Integer_Underflow__unsigned_int_min_postdec_45_goodB2GData = 0;
  return goodB2GSink_4();
}
// 6AB22C: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_45_goodB2GData;

//----- (000000000040DE88) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_45_good()
{
  goodG2B_34();
  return goodB2G_30();
}

//----- (000000000040DEA2) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_06_bad()
{
  return printUnsignedLine(0xFFFFFFFF);
}

//----- (000000000040DEE2) ----------------------------------------------------
int goodB2G1_22()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040DF40) ----------------------------------------------------
int goodB2G2_22()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040DF92) ----------------------------------------------------
int goodG2B1_18()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000040DFDE) ----------------------------------------------------
int goodG2B2_18()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000040E01E) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_06_good()
{
  goodB2G1_22();
  goodB2G2_22();
  goodG2B1_18();
  return goodG2B2_18();
}

//----- (000000000040E04C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_66b_badSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) - 1);
}

//----- (000000000040E078) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_66b_goodG2BSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) - 1);
}

//----- (000000000040E0A4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000040E0E2) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_22_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE191_Integer_Underflow__int_fgets_postdec_22_badGlobal = 1;
  return CWE191_Integer_Underflow__int_fgets_postdec_22_badSink(v4);
}
// 6AB230: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_22_badGlobal;

//----- (000000000040E154) ----------------------------------------------------
int goodB2G1_23()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE191_Integer_Underflow__int_fgets_postdec_22_goodB2G1Global = 0;
  return CWE191_Integer_Underflow__int_fgets_postdec_22_goodB2G1Sink(v4);
}
// 6AB234: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_22_goodB2G1Global;

//----- (000000000040E1C6) ----------------------------------------------------
int goodB2G2_23()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE191_Integer_Underflow__int_fgets_postdec_22_goodB2G2Global = 1;
  return CWE191_Integer_Underflow__int_fgets_postdec_22_goodB2G2Sink(v4);
}
// 6AB238: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_22_goodB2G2Global;

//----- (000000000040E238) ----------------------------------------------------
int goodG2B_35()
{
  CWE191_Integer_Underflow__int_fgets_postdec_22_goodG2BGlobal = 1;
  return CWE191_Integer_Underflow__int_fgets_postdec_22_goodG2BSink(-2);
}
// 6AB23C: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_22_goodG2BGlobal;

//----- (000000000040E264) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_22_good()
{
  goodB2G1_23();
  goodB2G2_23();
  return goodG2B_35();
}

//----- (000000000040E288) ----------------------------------------------------
__int64 badSource_1()
{
  return 128LL;
}

//----- (000000000040E29B) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_42_bad()
{
  char v0; // al

  v0 = (unsigned __int64)badSource_1() - 1;
  return printHexCharLine(v0);
}

//----- (000000000040E2D3) ----------------------------------------------------
__int64 goodG2BSource_1()
{
  return 254LL;
}

//----- (000000000040E2E6) ----------------------------------------------------
int goodG2B_36()
{
  char v0; // al

  v0 = (unsigned __int64)goodG2BSource_1() - 1;
  return printHexCharLine(v0);
}

//----- (000000000040E31E) ----------------------------------------------------
__int64 goodB2GSource_1()
{
  return 128LL;
}

//----- (000000000040E331) ----------------------------------------------------
int goodB2G_31()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = goodB2GSource_1();
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (000000000040E37B) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_42_good()
{
  goodB2G_31();
  return goodG2B_36();
}

//----- (000000000040E395) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_badSink(__int64 a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_badGlobal;
  if ( CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_badGlobal )
    result = printLongLongLine(a1 - 1);
  return result;
}
// 6AB244: using guessed type int CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_badGlobal;

//----- (000000000040E3C6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodB2G1Sink(__int64 a1)
{
  if ( CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 - 1);
}
// 6AB248: using guessed type int CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodB2G1Global;

//----- (000000000040E41F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodB2G2Sink(__int64 a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodB2G2Global;
  if ( CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodB2G2Global )
  {
    if ( a1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 - 1);
  }
  return result;
}
// 6AB24C: using guessed type int CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodB2G2Global;

//----- (000000000040E46C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodG2BSink(__int64 a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodG2BGlobal;
  if ( CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodG2BGlobal )
    result = printLongLongLine(a1 - 1);
  return result;
}
// 6AB250: using guessed type int CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodG2BGlobal;

//----- (000000000040E49D) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_10_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v4 - 1));
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000040E525) ----------------------------------------------------
int goodB2G1_24()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v4 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 - 1));
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000040E5CD) ----------------------------------------------------
int goodB2G2_24()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v4 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 - 1));
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000040E669) ----------------------------------------------------
int goodG2B1_19()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000040E6BD) ----------------------------------------------------
int goodG2B2_19()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalTrue )
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000040E705) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_10_good()
{
  goodB2G1_24();
  goodB2G2_24();
  goodG2B1_19();
  return goodG2B2_19();
}

//----- (000000000040E733) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_32_bad()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 *v5; // [rsp+20h] [rbp-10h]
  __int64 *v6; // [rsp+28h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 0x8000000000000000LL;
  v1 = 0x8000000000000000LL;
  v3 = 0x7FFFFFFFFFFFFFFFLL;
  v2 = 0x7FFFFFFFFFFFFFFFLL;
  return printLongLongLine(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000040E79D) ----------------------------------------------------
int goodG2B_37()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 *v5; // [rsp+20h] [rbp-10h]
  __int64 *v6; // [rsp+28h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -2LL;
  v1 = -2LL;
  v3 = -3LL;
  v2 = -3LL;
  return printLongLongLine(-3LL);
}

//----- (000000000040E801) ----------------------------------------------------
int goodB2G_32()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 *v4; // [rsp+20h] [rbp-10h]
  __int64 *v5; // [rsp+28h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 0x8000000000000000LL;
  v1 = 0x8000000000000000LL;
  v2 = 0x8000000000000000LL;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040E887) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_32_good()
{
  goodG2B_37();
  return goodB2G_32();
}

//----- (000000000040E8A1) ----------------------------------------------------
int __fastcall badSink_7(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000040E8C2) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_fscanf_postdec_44_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = badSink_7;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040E903) ----------------------------------------------------
int __fastcall goodG2BSink_7(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000040E924) ----------------------------------------------------
int goodG2B_38()
{
  return goodG2BSink_7(-2);
}

//----- (000000000040E94F) ----------------------------------------------------
int __fastcall goodB2GSink_5(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000040E985) ----------------------------------------------------
__int64 goodB2G_33()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_5;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040E9C6) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_fscanf_postdec_44_good()
{
  goodG2B_38();
  return goodB2G_33();
}

//----- (000000000040E9E0) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54b_badSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_min_postdec_54c_badSink(a1);
}

//----- (000000000040E9FB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54b_goodG2BSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_min_postdec_54c_goodG2BSink(a1);
}

//----- (000000000040EA16) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54b_goodB2GSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_min_postdec_54c_goodB2GSink(a1);
}

//----- (000000000040EA31) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_01_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 - 1));
}

//----- (000000000040EAA5) ----------------------------------------------------
int goodG2B_39()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000040EAD9) ----------------------------------------------------
int goodB2G_34()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (000000000040EB61) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_01_good()
{
  goodG2B_39();
  return goodB2G_34();
}

//----- (000000000040EB7B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54c_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_54d_badSink(a1);
}

//----- (000000000040EB92) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54c_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_54d_goodG2BSink(a1);
}

//----- (000000000040EBA9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54c_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_54d_goodB2GSink(a1);
}

//----- (000000000040EBC0) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_66_bad()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = 32;
  __isoc99_fscanf(stdin, "%c", &v3);
  v2 = v3;
  return CWE191_Integer_Underflow__char_fscanf_postdec_66b_badSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040EBFE) ----------------------------------------------------
int goodG2B_40()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = -2;
  v2 = -2;
  return CWE191_Integer_Underflow__char_fscanf_postdec_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000040EC23) ----------------------------------------------------
int goodB2G_35()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = 32;
  __isoc99_fscanf(stdin, "%c", &v3);
  v2 = v3;
  return CWE191_Integer_Underflow__char_fscanf_postdec_66b_goodB2GSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040EC61) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_66_good()
{
  goodG2B_40();
  return goodB2G_35();
}

//----- (000000000040EC7B) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_17_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+0h] [rbp-10h]
  unsigned int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%u", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = --v1;
    result = printUnsignedLine(v1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040ECE8) ----------------------------------------------------
int goodB2G_36()
{
  int result; // eax
  unsigned int v1; // [rsp+0h] [rbp-10h]
  unsigned int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%u", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 )
    {
      v2 = --v1;
      result = printUnsignedLine(v1);
    }
    else
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040ED68) ----------------------------------------------------
int goodG2B_41()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -2;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(--v1);
  return result;
}

//----- (000000000040EDBA) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_17_good()
{
  goodB2G_36();
  return goodG2B_41();
}

//----- (000000000040EDD4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_64b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 - 1));
}

//----- (000000000040EE13) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_64b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 - 1));
}

//----- (000000000040EE52) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_64b_goodB2GSink(_WORD *a1)
{
  int result; // eax

  if ( *a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(*a1 - 1));
  return result;
}

//----- (000000000040EEA5) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_13_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v4 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040EF2D) ----------------------------------------------------
int goodB2G1_25()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 - 1);
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040EFD6) ----------------------------------------------------
int goodB2G2_25()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v4 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 - 1);
  }
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040F073) ----------------------------------------------------
int goodG2B1_20()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040F0C1) ----------------------------------------------------
int goodG2B2_20()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040F103) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_13_good()
{
  goodB2G1_25();
  goodB2G2_25();
  goodG2B1_20();
  return goodG2B2_20();
}

//----- (000000000040F131) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_53d_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000040F152) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000040F173) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000040F1A9) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_05_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticTrue_1 )
    v1 = -128;
  result = staticTrue_1;
  if ( staticTrue_1 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB134: using guessed type int staticTrue_1;

//----- (000000000040F1EB) ----------------------------------------------------
int goodB2G1_26()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticTrue_1 )
    v1 = -128;
  if ( staticFalse_1 )
    return printLine("Benign, fixed string");
  if ( v1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 - 1);
}
// 6AB134: using guessed type int staticTrue_1;
// 6AB240: using guessed type int staticFalse_1;

//----- (000000000040F24B) ----------------------------------------------------
int goodB2G2_26()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticTrue_1 )
    v1 = -128;
  result = staticTrue_1;
  if ( staticTrue_1 )
  {
    if ( v1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 - 1);
  }
  return result;
}
// 6AB134: using guessed type int staticTrue_1;

//----- (000000000040F29F) ----------------------------------------------------
int goodG2B1_21()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFalse_1 )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticTrue_1;
  if ( staticTrue_1 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB134: using guessed type int staticTrue_1;
// 6AB240: using guessed type int staticFalse_1;

//----- (000000000040F2ED) ----------------------------------------------------
int goodG2B2_21()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticTrue_1 )
    v1 = -2;
  result = staticTrue_1;
  if ( staticTrue_1 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB134: using guessed type int staticTrue_1;

//----- (000000000040F32F) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_05_good()
{
  goodB2G1_26();
  goodB2G2_26();
  goodG2B1_21();
  return goodG2B2_21();
}

//----- (000000000040F35D) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_badGlobal = 1;
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB244: using guessed type int CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_badGlobal;

//----- (000000000040F3A2) ----------------------------------------------------
int goodB2G1_27()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodB2G1Global = 0;
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodB2G1Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB248: using guessed type int CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodB2G1Global;

//----- (000000000040F3E7) ----------------------------------------------------
int goodB2G2_27()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodB2G2Global = 1;
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodB2G2Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB24C: using guessed type int CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodB2G2Global;

//----- (000000000040F42C) ----------------------------------------------------
int goodG2B_42()
{
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodG2BGlobal = 1;
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodG2BSink(-2LL);
}
// 6AB250: using guessed type int CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_goodG2BGlobal;

//----- (000000000040F45C) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_22_good()
{
  goodB2G1_27();
  goodB2G2_27();
  return goodG2B_42();
}

//----- (000000000040F480) ----------------------------------------------------
int __fastcall badSink_8(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000040F4AB) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_41_bad()
{
  return badSink_8(-128);
}

//----- (000000000040F4C8) ----------------------------------------------------
int __fastcall goodG2BSink_8(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000040F4F3) ----------------------------------------------------
int goodG2B_43()
{
  return goodG2BSink_8(-2);
}

//----- (000000000040F510) ----------------------------------------------------
int __fastcall goodB2GSink_6(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (000000000040F54D) ----------------------------------------------------
int goodB2G_37()
{
  return goodB2GSink_6(-128);
}

//----- (000000000040F56A) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_41_good()
{
  goodB2G_37();
  return goodG2B_43();
}

//----- (000000000040F584) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_04_bad()
{
  return printLongLongLine(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000040F5CF) ----------------------------------------------------
int goodB2G1_28()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040F642) ----------------------------------------------------
int goodB2G2_28()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040F6A9) ----------------------------------------------------
int goodG2B1_22()
{
  return printLongLongLine(-3LL);
}

//----- (000000000040F6FA) ----------------------------------------------------
int goodG2B2_22()
{
  return printLongLongLine(-3LL);
}

//----- (000000000040F73F) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_04_good()
{
  goodB2G1_28();
  goodB2G2_28();
  goodG2B1_22();
  return goodG2B2_22();
}

//----- (000000000040F76D) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_31_bad()
{
  return printLongLongLine(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000040F7B6) ----------------------------------------------------
int goodG2B_44()
{
  return printLongLongLine(-3LL);
}

//----- (000000000040F7F9) ----------------------------------------------------
int goodB2G_38()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040F85E) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_31_good()
{
  goodG2B_44();
  return goodB2G_38();
}

//----- (000000000040F878) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_34_bad()
{
  return printHexCharLine(127);
}

//----- (000000000040F8B4) ----------------------------------------------------
int goodG2B_45()
{
  return printHexCharLine(-3);
}

//----- (000000000040F8F0) ----------------------------------------------------
int goodB2G_39()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000040F93E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_34_good()
{
  goodG2B_45();
  return goodB2G_39();
}

//----- (000000000040F958) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_54_bad()
{
  return CWE191_Integer_Underflow__short_min_postdec_54b_badSink(-32768);
}

//----- (000000000040F979) ----------------------------------------------------
int goodG2B_46()
{
  return CWE191_Integer_Underflow__short_min_postdec_54b_goodG2BSink(-2);
}

//----- (000000000040F99A) ----------------------------------------------------
int goodB2G_40()
{
  return CWE191_Integer_Underflow__short_min_postdec_54b_goodB2GSink(-32768);
}

//----- (000000000040F9BB) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_54_good()
{
  goodG2B_46();
  return goodB2G_40();
}

//----- (000000000040F9D5) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_66b_badSink(__int64 a1)
{
  return printHexCharLine(*(_BYTE *)(a1 + 2) - 1);
}

//----- (000000000040FA0A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_66b_goodG2BSink(__int64 a1)
{
  return printHexCharLine(*(_BYTE *)(a1 + 2) - 1);
}

//----- (000000000040FA3F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  char v2; // [rsp+1Fh] [rbp-1h]

  v2 = *(_BYTE *)(a1 + 2);
  if ( v2 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v2 - 1);
  return result;
}

//----- (000000000040FA86) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_13_bad()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x8000000000000000LL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040FAD5) ----------------------------------------------------
int goodB2G1_29()
{
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x8000000000000000LL;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 - 1);
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040FB4C) ----------------------------------------------------
int goodB2G2_29()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 0x8000000000000000LL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 - 1);
  }
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040FBB7) ----------------------------------------------------
int goodG2B1_23()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2LL;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040FC0C) ----------------------------------------------------
int goodG2B2_23()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2LL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040FC55) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_13_good()
{
  goodB2G1_29();
  goodB2G2_29();
  goodG2B1_23();
  return goodG2B2_23();
}

//----- (000000000040FC83) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__char_fscanf_postdec_65_bad()
{
  char v1; // [rsp+7h] [rbp-9h]
  int (__fastcall *v2)(char); // [rsp+8h] [rbp-8h]

  v2 = CWE191_Integer_Underflow__char_fscanf_postdec_65b_badSink;
  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040FCC5) ----------------------------------------------------
int goodG2B_47()
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_65b_goodG2BSink(-2);
}

//----- (000000000040FCEB) ----------------------------------------------------
__int64 goodB2G_41()
{
  char v1; // [rsp+7h] [rbp-9h]
  int (__fastcall *v2)(char); // [rsp+8h] [rbp-8h]

  v2 = CWE191_Integer_Underflow__char_fscanf_postdec_65b_goodB2GSink;
  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040FD2D) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__char_fscanf_postdec_65_good()
{
  goodG2B_47();
  return goodB2G_41();
}

//----- (000000000040FD47) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (000000000040FD72) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (000000000040FD9D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 - 1);
  return result;
}

//----- (000000000040FDDD) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_13_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040FE42) ----------------------------------------------------
int goodB2G1_30()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040FED2) ----------------------------------------------------
int goodB2G2_30()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040FF56) ----------------------------------------------------
int goodG2B1_24()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2LL;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040FFAB) ----------------------------------------------------
int goodG2B2_24()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2LL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040FFF4) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_13_good()
{
  goodB2G1_30();
  goodB2G2_30();
  goodG2B1_24();
  return goodG2B2_24();
}

//----- (0000000000410022) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_22_badSink(__int64 a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int64_t_min_postdec_22_badGlobal;
  if ( CWE191_Integer_Underflow__int64_t_min_postdec_22_badGlobal )
    result = printLongLongLine(a1 - 1);
  return result;
}
// 6AB200: using guessed type int CWE191_Integer_Underflow__int64_t_min_postdec_22_badGlobal;

//----- (0000000000410053) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_22_goodB2G1Sink(__int64 a1)
{
  if ( CWE191_Integer_Underflow__int64_t_min_postdec_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 - 1);
}
// 6AB204: using guessed type int CWE191_Integer_Underflow__int64_t_min_postdec_22_goodB2G1Global;

//----- (00000000004100AC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_22_goodB2G2Sink(__int64 a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int64_t_min_postdec_22_goodB2G2Global;
  if ( CWE191_Integer_Underflow__int64_t_min_postdec_22_goodB2G2Global )
  {
    if ( a1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 - 1);
  }
  return result;
}
// 6AB208: using guessed type int CWE191_Integer_Underflow__int64_t_min_postdec_22_goodB2G2Global;

//----- (00000000004100F9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_22_goodG2BSink(__int64 a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int64_t_min_postdec_22_goodG2BGlobal;
  if ( CWE191_Integer_Underflow__int64_t_min_postdec_22_goodG2BGlobal )
    result = printLongLongLine(a1 - 1);
  return result;
}
// 6AB20C: using guessed type int CWE191_Integer_Underflow__int64_t_min_postdec_22_goodG2BGlobal;

//----- (000000000041012A) ----------------------------------------------------
int __fastcall badSink_9(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000041014B) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_44_bad()
{
  return badSink_9(2147483648);
}

//----- (0000000000410176) ----------------------------------------------------
int __fastcall goodG2BSink_9(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000410197) ----------------------------------------------------
int goodG2B_48()
{
  return goodG2BSink_9(-2);
}

//----- (00000000004101C2) ----------------------------------------------------
int __fastcall goodB2GSink_7(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (00000000004101F8) ----------------------------------------------------
int goodB2G_42()
{
  return goodB2GSink_7(2147483648);
}

//----- (0000000000410223) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_44_good()
{
  goodG2B_48();
  return goodB2G_42();
}

//----- (000000000041023D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_67b_badSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000041026C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_67b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000041029B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_67b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (00000000004102E6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54b_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_54c_badSink(a1);
}

//----- (00000000004102FD) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_54c_goodG2BSink(a1);
}

//----- (0000000000410314) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_54c_goodB2GSink(a1);
}

//----- (000000000041032B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_53b_badSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_53c_badSink(a1);
}

//----- (0000000000410346) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_53b_goodG2BSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_53c_goodG2BSink(a1);
}

//----- (0000000000410361) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_53b_goodB2GSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_53c_goodB2GSink(a1);
}

//----- (000000000041037C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_53c_badSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_min_postdec_53d_badSink(a1);
}

//----- (0000000000410397) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_53c_goodG2BSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_min_postdec_53d_goodG2BSink(a1);
}

//----- (00000000004103B2) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_53c_goodB2GSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_min_postdec_53d_goodB2GSink(a1);
}

//----- (00000000004103CD) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_12_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    v4 = -2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v4 - 1);
  if ( v4 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 - 1);
}

//----- (000000000041048F) ----------------------------------------------------
int goodB2G_43()
{
  int result; // eax
  char nptr[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char s[8]; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  __int16 v6; // [rsp+1Ch] [rbp-14h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v5 = 0;
    v6 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    *(_QWORD *)nptr = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(nptr, 14, stdin) )
      v7 = atoi(nptr);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v7 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 - 1);
  }
  else if ( v7 == 0x80000000 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(v7 - 1);
  }
  return result;
}

//----- (00000000004105AC) ----------------------------------------------------
int goodG2B_49()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000410613) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_12_good()
{
  goodB2G_43();
  return goodG2B_49();
}

//----- (000000000041062D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_64b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 - 1);
}

//----- (0000000000410660) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_64b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 - 1);
}

//----- (0000000000410693) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 )
    result = printUnsignedLine(*a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (00000000004106D8) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_52c_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (0000000000410706) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_52c_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (0000000000410734) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_52c_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (0000000000410776) ----------------------------------------------------
int __fastcall badSink_10(__int64 a1)
{
  int result; // eax

  result = badStatic_1;
  if ( badStatic_1 )
    result = printLongLongLine(a1 - 1);
  return result;
}
// 6AB254: using guessed type int badStatic_1;

//----- (00000000004107A7) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_21_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  badStatic_1 = 1;
  return badSink_10(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB254: using guessed type int badStatic_1;

//----- (00000000004107EC) ----------------------------------------------------
int __fastcall goodB2G1Sink_1(__int64 a1)
{
  if ( goodB2G1Static_1 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 - 1);
}
// 6AB258: using guessed type int goodB2G1Static_1;

//----- (0000000000410845) ----------------------------------------------------
int goodB2G1_31()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  goodB2G1Static_1 = 0;
  return goodB2G1Sink_1(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB258: using guessed type int goodB2G1Static_1;

//----- (000000000041088A) ----------------------------------------------------
int __fastcall goodB2G2Sink_1(__int64 a1)
{
  int result; // eax

  result = goodB2G2Static_1;
  if ( goodB2G2Static_1 )
  {
    if ( a1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 - 1);
  }
  return result;
}
// 6AB25C: using guessed type int goodB2G2Static_1;

//----- (00000000004108D7) ----------------------------------------------------
int goodB2G2_31()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  goodB2G2Static_1 = 1;
  return goodB2G2Sink_1(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB25C: using guessed type int goodB2G2Static_1;

//----- (000000000041091C) ----------------------------------------------------
int __fastcall goodG2BSink_10(__int64 a1)
{
  int result; // eax

  result = goodG2BStatic_1;
  if ( goodG2BStatic_1 )
    result = printLongLongLine(a1 - 1);
  return result;
}
// 6AB260: using guessed type int goodG2BStatic_1;

//----- (000000000041094D) ----------------------------------------------------
int goodG2B_50()
{
  goodG2BStatic_1 = 1;
  return goodG2BSink_10(-2LL);
}
// 6AB260: using guessed type int goodG2BStatic_1;

//----- (000000000041097D) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_21_good()
{
  goodB2G1_31();
  goodB2G2_31();
  return goodG2B_50();
}

//----- (00000000004109A1) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_03_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return printLongLongLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004109F0) ----------------------------------------------------
int goodB2G1_32()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410A5E) ----------------------------------------------------
int goodB2G2_32()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410ACC) ----------------------------------------------------
int goodG2B1_25()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000410AFF) ----------------------------------------------------
int goodG2B2_25()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000410B32) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_03_good()
{
  goodB2G1_32();
  goodB2G2_32();
  goodG2B1_25();
  return goodG2B2_25();
}

//----- (0000000000410B60) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_68_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE191_Integer_Underflow__short_fscanf_postdec_68_badData = v1;
  return CWE191_Integer_Underflow__short_fscanf_postdec_68b_badSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB542: using guessed type __int16 CWE191_Integer_Underflow__short_fscanf_postdec_68_badData;

//----- (0000000000410BA2) ----------------------------------------------------
int goodG2B_51()
{
  CWE191_Integer_Underflow__short_fscanf_postdec_68_goodG2BData = -2;
  return CWE191_Integer_Underflow__short_fscanf_postdec_68b_goodG2BSink();
}
// 6AB544: using guessed type __int16 CWE191_Integer_Underflow__short_fscanf_postdec_68_goodG2BData;

//----- (0000000000410BCD) ----------------------------------------------------
int goodB2G_44()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE191_Integer_Underflow__short_fscanf_postdec_68_goodB2GData = v1;
  return CWE191_Integer_Underflow__short_fscanf_postdec_68b_goodB2GSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB540: using guessed type __int16 CWE191_Integer_Underflow__short_fscanf_postdec_68_goodB2GData;

//----- (0000000000410C0F) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_68_good()
{
  goodG2B_51();
  return goodB2G_44();
}

//----- (0000000000410C29) ----------------------------------------------------
__int64 staticReturnsTrue_1()
{
  return 1LL;
}

//----- (0000000000410C34) ----------------------------------------------------
__int64 staticReturnsFalse_1()
{
  return 0LL;
}

//----- (0000000000410C3F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_08_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticReturnsTrue_1();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410CA2) ----------------------------------------------------
int goodB2G1_33()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)staticReturnsFalse_1() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410D27) ----------------------------------------------------
int goodB2G2_33()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticReturnsTrue_1();
  if ( result )
  {
    if ( v1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410DA0) ----------------------------------------------------
int goodG2B1_26()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_1() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticReturnsTrue_1();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (0000000000410DF4) ----------------------------------------------------
int goodG2B2_26()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
    v1 = -2;
  result = staticReturnsTrue_1();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (0000000000410E3C) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_08_good()
{
  goodB2G1_33();
  goodB2G2_33();
  goodG2B1_26();
  return goodG2B2_26();
}

//----- (0000000000410E6A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_66b_badSink(__int64 a1)
{
  return printHexCharLine(*(_BYTE *)(a1 + 2) - 1);
}

//----- (0000000000410E9F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_66b_goodG2BSink(__int64 a1)
{
  return printHexCharLine(*(_BYTE *)(a1 + 2) - 1);
}

//----- (0000000000410ED4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  char v2; // [rsp+1Fh] [rbp-1h]

  v2 = *(_BYTE *)(a1 + 2);
  if ( v2 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v2 - 1);
  return result;
}

//----- (0000000000410F1B) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_64_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = -32768;
  return CWE191_Integer_Underflow__short_min_postdec_64b_badSink(&v1);
}

//----- (0000000000410F3D) ----------------------------------------------------
int goodG2B_52()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = -2;
  return CWE191_Integer_Underflow__short_min_postdec_64b_goodG2BSink(&v1);
}

//----- (0000000000410F5F) ----------------------------------------------------
int goodB2G_45()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = -32768;
  return CWE191_Integer_Underflow__short_min_postdec_64b_goodB2GSink(&v1);
}

//----- (0000000000410F81) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_64_good()
{
  goodG2B_52();
  return goodB2G_45();
}

//----- (0000000000410F9B) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_67_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE191_Integer_Underflow__int64_t_rand_postdec_67b_badSink(v4);
}

//----- (0000000000411060) ----------------------------------------------------
int goodG2B_53()
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_67b_goodG2BSink(-2LL);
}

//----- (000000000041108E) ----------------------------------------------------
int goodB2G_46()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE191_Integer_Underflow__int64_t_rand_postdec_67b_goodB2GSink(v4);
}

//----- (0000000000411153) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_67_good()
{
  goodG2B_53();
  return goodB2G_46();
}

//----- (000000000041116D) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_11_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v4 - 1);
  return result;
}

//----- (00000000004111FB) ----------------------------------------------------
int goodB2G1_34()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v4 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 - 1);
}

//----- (00000000004112AA) ----------------------------------------------------
int goodB2G2_34()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v4 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 - 1);
  }
  return result;
}

//----- (000000000041134D) ----------------------------------------------------
int goodG2B1_27()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (00000000004113A1) ----------------------------------------------------
int goodG2B2_27()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (00000000004113E9) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_11_good()
{
  goodB2G1_34();
  goodB2G2_34();
  goodG2B1_27();
  return goodG2B2_27();
}

//----- (0000000000411417) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_02_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 - 1);
}

//----- (0000000000411489) ----------------------------------------------------
int goodB2G1_35()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 - 1);
  return result;
}

//----- (0000000000411510) ----------------------------------------------------
int goodB2G2_35()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 - 1);
  return result;
}

//----- (0000000000411597) ----------------------------------------------------
int goodG2B1_28()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (00000000004115C3) ----------------------------------------------------
int goodG2B2_28()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (00000000004115EF) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_02_good()
{
  goodB2G1_35();
  goodB2G2_35();
  goodG2B1_28();
  return goodG2B2_28();
}

//----- (000000000041161D) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_64_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_64b_badSink(&v6);
}

//----- (0000000000411689) ----------------------------------------------------
int goodG2B_54()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -2;
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_64b_goodG2BSink(&v1);
}

//----- (00000000004116AD) ----------------------------------------------------
int goodB2G_47()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_64b_goodB2GSink(&v6);
}

//----- (0000000000411719) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_64_good()
{
  goodG2B_54();
  return goodB2G_47();
}

//----- (0000000000411733) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_12_bad()
{
  __int64 v1; // [rsp+8h] [rbp-18h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  else
    v1 = -2LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printLongLongLine(v1 - 1);
  if ( v1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004117E9) ----------------------------------------------------
int goodB2G_48()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-18h]

  v1 = 0LL;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 - 1);
  }
  else if ( v1 == 0x8000000000000000LL )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printLongLongLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004118D3) ----------------------------------------------------
int goodG2B_55()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLongLongLine(-3LL);
}

//----- (0000000000411947) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_12_good()
{
  goodB2G_48();
  return goodG2B_55();
}

//----- (0000000000411961) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_65b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000041198F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_65b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (00000000004119BD) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_65b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (00000000004119FF) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_10_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v4 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000411A85) ----------------------------------------------------
int goodB2G1_36()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v4 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 - 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000411B2C) ----------------------------------------------------
int goodB2G2_36()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v4 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 - 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000411BC7) ----------------------------------------------------
int goodG2B1_29()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000411C13) ----------------------------------------------------
int goodG2B2_29()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000411C53) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_10_good()
{
  goodB2G1_36();
  goodB2G2_36();
  goodG2B1_29();
  return goodG2B2_29();
}

//----- (0000000000411C81) ----------------------------------------------------
void CWE191_Integer_Underflow__int_rand_postdec_17_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // [rsp+4h] [rbp-1Ch]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v5 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v5 = v2;
  }
  for ( j = 0; j <= 0; ++j )
    printIntLine(--v5);
}

//----- (0000000000411D1B) ----------------------------------------------------
void goodB2G_49()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // [rsp+4h] [rbp-1Ch]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v5 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v5 = v2;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v5 == 0x80000000 )
      printLine("data value is too large to perform arithmetic safely.");
    else
      printIntLine(--v5);
  }
}

//----- (0000000000411DCA) ----------------------------------------------------
int goodG2B_56()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(--v1);
  return result;
}

//----- (0000000000411E1C) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_17_good()
{
  goodB2G_49();
  return goodG2B_56();
}

//----- (0000000000411E36) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_64b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 - 1);
}

//----- (0000000000411E69) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_64b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 - 1);
}

//----- (0000000000411E9C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 )
    result = printUnsignedLine(*a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000411EE1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_53c_badSink(char a1)
{
  return CWE191_Integer_Underflow__char_rand_postdec_53d_badSink(a1);
}

//----- (0000000000411EFB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_53c_goodG2BSink(char a1)
{
  return CWE191_Integer_Underflow__char_rand_postdec_53d_goodG2BSink(a1);
}

//----- (0000000000411F15) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_53c_goodB2GSink(char a1)
{
  return CWE191_Integer_Underflow__char_rand_postdec_53d_goodB2GSink(a1);
}

//----- (0000000000411F2F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54e_badSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (0000000000411F5A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54e_goodG2BSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (0000000000411F85) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54e_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (0000000000411FC2) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_01_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 - 1);
}

//----- (0000000000412034) ----------------------------------------------------
int goodG2B_57()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000412060) ----------------------------------------------------
int goodB2G_50()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 - 1);
  return result;
}

//----- (00000000004120E7) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_01_good()
{
  goodG2B_57();
  return goodB2G_50();
}

//----- (0000000000412101) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_53b_badSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_min_postdec_53c_badSink(a1);
}

//----- (000000000041211C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_53b_goodG2BSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_min_postdec_53c_goodG2BSink(a1);
}

//----- (0000000000412137) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_53b_goodB2GSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_min_postdec_53c_goodB2GSink(a1);
}

//----- (0000000000412152) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_52b_badSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_52c_badSink(a1);
}

//----- (000000000041216D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_52b_goodG2BSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_52c_goodG2BSink(a1);
}

//----- (0000000000412188) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_52b_goodB2GSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_52c_goodB2GSink(a1);
}

//----- (00000000004121A3) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_02_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return printLongLongLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004121F2) ----------------------------------------------------
int goodB2G1_37()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412260) ----------------------------------------------------
int goodB2G2_37()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004122CE) ----------------------------------------------------
int goodG2B1_30()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000412301) ----------------------------------------------------
int goodG2B2_30()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000412334) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_02_good()
{
  goodB2G1_37();
  goodB2G2_37();
  goodG2B1_30();
  return goodG2B2_30();
}

//----- (0000000000412362) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_52c_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (0000000000412390) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_52c_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (00000000004123BE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_52c_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (0000000000412400) ----------------------------------------------------
int __fastcall badSink_11(__int64 a1)
{
  int result; // eax

  result = badStatic_2;
  if ( badStatic_2 )
    result = printLongLongLine(a1 - 1);
  return result;
}
// 6AB264: using guessed type int badStatic_2;

//----- (0000000000412431) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_21_bad()
{
  badStatic_2 = 1;
  return badSink_11(0x8000000000000000LL);
}
// 6AB264: using guessed type int badStatic_2;

//----- (0000000000412467) ----------------------------------------------------
int __fastcall goodB2G1Sink_2(__int64 a1)
{
  if ( goodB2G1Static_2 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 - 1);
}
// 6AB268: using guessed type int goodB2G1Static_2;

//----- (00000000004124C0) ----------------------------------------------------
int goodB2G1_38()
{
  goodB2G1Static_2 = 0;
  return goodB2G1Sink_2(0x8000000000000000LL);
}
// 6AB268: using guessed type int goodB2G1Static_2;

//----- (00000000004124F6) ----------------------------------------------------
int __fastcall goodB2G2Sink_2(__int64 a1)
{
  int result; // eax

  result = goodB2G2Static_2;
  if ( goodB2G2Static_2 )
  {
    if ( a1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 - 1);
  }
  return result;
}
// 6AB26C: using guessed type int goodB2G2Static_2;

//----- (0000000000412543) ----------------------------------------------------
int goodB2G2_38()
{
  goodB2G2Static_2 = 1;
  return goodB2G2Sink_2(0x8000000000000000LL);
}
// 6AB26C: using guessed type int goodB2G2Static_2;

//----- (0000000000412579) ----------------------------------------------------
int __fastcall goodG2BSink_11(__int64 a1)
{
  int result; // eax

  result = goodG2BStatic_2;
  if ( goodG2BStatic_2 )
    result = printLongLongLine(a1 - 1);
  return result;
}
// 6AB270: using guessed type int goodG2BStatic_2;

//----- (00000000004125AA) ----------------------------------------------------
int goodG2B_58()
{
  goodG2BStatic_2 = 1;
  return goodG2BSink_11(-2LL);
}
// 6AB270: using guessed type int goodG2BStatic_2;

//----- (00000000004125DA) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_21_good()
{
  goodB2G1_38();
  goodB2G2_38();
  return goodG2B_58();
}

//----- (00000000004125FE) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_03_bad()
{
  return printLongLongLine(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000412637) ----------------------------------------------------
int goodB2G1_39()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041268C) ----------------------------------------------------
int goodB2G2_39()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004126E1) ----------------------------------------------------
int goodG2B1_31()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000412714) ----------------------------------------------------
int goodG2B2_31()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000412747) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_03_good()
{
  goodB2G1_39();
  goodB2G2_39();
  goodG2B1_31();
  return goodG2B2_31();
}

//----- (0000000000412775) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_68_bad()
{
  CWE191_Integer_Underflow__short_min_postdec_68_badData = -32768;
  return CWE191_Integer_Underflow__short_min_postdec_68b_badSink();
}
// 6AB546: using guessed type __int16 CWE191_Integer_Underflow__short_min_postdec_68_badData;

//----- (00000000004127A0) ----------------------------------------------------
int goodG2B_59()
{
  CWE191_Integer_Underflow__short_min_postdec_68_goodG2BData = -2;
  return CWE191_Integer_Underflow__short_min_postdec_68b_goodG2BSink();
}
// 6AB548: using guessed type __int16 CWE191_Integer_Underflow__short_min_postdec_68_goodG2BData;

//----- (00000000004127CB) ----------------------------------------------------
int goodB2G_51()
{
  CWE191_Integer_Underflow__short_min_postdec_68_goodB2GData = -32768;
  return CWE191_Integer_Underflow__short_min_postdec_68b_goodB2GSink();
}
// 6AB54A: using guessed type __int16 CWE191_Integer_Underflow__short_min_postdec_68_goodB2GData;

//----- (00000000004127F6) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_68_good()
{
  goodG2B_59();
  return goodB2G_51();
}

//----- (0000000000412810) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_10_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000412873) ----------------------------------------------------
int goodB2G1_40()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000412901) ----------------------------------------------------
int goodB2G2_40()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000412983) ----------------------------------------------------
int goodG2B1_32()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = -2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (00000000004129D6) ----------------------------------------------------
int goodG2B2_32()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = -2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000412A1D) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_10_good()
{
  goodB2G1_40();
  goodB2G2_40();
  goodG2B1_32();
  return goodG2B2_32();
}

//----- (0000000000412A4B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54d_badSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_54e_badSink(a1);
}

//----- (0000000000412A65) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54d_goodG2BSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_54e_goodG2BSink(a1);
}

//----- (0000000000412A7F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54d_goodB2GSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_54e_goodB2GSink(a1);
}

//----- (0000000000412A99) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_32_bad()
{
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Dh] [rbp-13h]
  char *v3; // [rsp+10h] [rbp-10h]
  char *v4; // [rsp+18h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 32;
  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  *v4 = v1;
  return printHexCharLine(*v3 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412B0E) ----------------------------------------------------
int goodG2B_60()
{
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Dh] [rbp-13h]
  char v3; // [rsp+Eh] [rbp-12h]
  char v4; // [rsp+Fh] [rbp-11h]
  char *v5; // [rsp+10h] [rbp-10h]
  char *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -2;
  v1 = -2;
  v3 = -3;
  v2 = -3;
  return printHexCharLine(-3);
}

//----- (0000000000412B6A) ----------------------------------------------------
int goodB2G_52()
{
  int result; // eax
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Dh] [rbp-13h]
  char v3; // [rsp+Fh] [rbp-11h]
  char *v4; // [rsp+10h] [rbp-10h]
  char *v5; // [rsp+18h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = 32;
  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  *v5 = v1;
  v3 = *v4;
  if ( v3 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v3 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412BF1) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_32_good()
{
  goodG2B_60();
  return goodB2G_52();
}

//----- (0000000000412C0B) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 0;
  v1 = 0;
  v3 = -1;
  v2 = -1;
  return printUnsignedLine(0xFFFFFFFF);
}

//----- (0000000000412C62) ----------------------------------------------------
int goodG2B_61()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -2;
  v1 = -2;
  v3 = -3;
  v2 = -3;
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000412CB9) ----------------------------------------------------
int goodB2G_53()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+Ch] [rbp-14h]
  int *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 0;
  v1 = 0;
  v2 = 0;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000412D22) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_32_good()
{
  goodG2B_61();
  return goodB2G_53();
}

//----- (0000000000412D3C) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_09_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v4 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000412DC2) ----------------------------------------------------
int goodB2G1_41()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v4 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 - 1);
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000412E69) ----------------------------------------------------
int goodB2G2_41()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v4 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 - 1);
  }
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000412F04) ----------------------------------------------------
int goodG2B1_33()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000412F50) ----------------------------------------------------
int goodG2B2_33()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000412F90) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_09_good()
{
  goodB2G1_41();
  goodB2G2_41();
  goodG2B1_33();
  return goodG2B2_33();
}

//----- (0000000000412FBE) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_53_bad()
{
  return CWE191_Integer_Underflow__short_min_postdec_53b_badSink(-32768);
}

//----- (0000000000412FDF) ----------------------------------------------------
int goodG2B_62()
{
  return CWE191_Integer_Underflow__short_min_postdec_53b_goodG2BSink(-2);
}

//----- (0000000000413000) ----------------------------------------------------
int goodB2G_54()
{
  return CWE191_Integer_Underflow__short_min_postdec_53b_goodB2GSink(-32768);
}

//----- (0000000000413021) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_53_good()
{
  goodG2B_62();
  return goodB2G_54();
}

//----- (000000000041303B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54e_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000041305C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000041307D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (00000000004130B3) ----------------------------------------------------
int __fastcall badSink_12(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (00000000004130D4) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_44_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = badSink_12;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413115) ----------------------------------------------------
int __fastcall goodG2BSink_12(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000413136) ----------------------------------------------------
int goodG2B_63()
{
  return goodG2BSink_12(-2);
}

//----- (0000000000413161) ----------------------------------------------------
int __fastcall goodB2GSink_8(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000413194) ----------------------------------------------------
__int64 goodB2G_55()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_8;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004131D5) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_44_good()
{
  goodG2B_63();
  return goodB2G_55();
}

//----- (00000000004131EF) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_01_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return printLongLongLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041323E) ----------------------------------------------------
int goodG2B_64()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000413271) ----------------------------------------------------
int goodB2G_56()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004132DF) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_01_good()
{
  goodG2B_64();
  return goodB2G_56();
}

//----- (00000000004132F9) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_52_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE191_Integer_Underflow__short_fscanf_postdec_52b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413332) ----------------------------------------------------
int goodG2B_65()
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_52b_goodG2BSink(-2);
}

//----- (0000000000413353) ----------------------------------------------------
int goodB2G_57()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE191_Integer_Underflow__short_fscanf_postdec_52b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041338C) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_52_good()
{
  goodG2B_65();
  return goodB2G_57();
}

//----- (00000000004133A6) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_12_bad()
{
  unsigned __int64 v1; // [rsp+18h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = 0x8000000000000000LL;
  else
    v1 = -2LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printLongLongLine(v1 - 1);
  if ( v1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 - 1);
}

//----- (000000000041343C) ----------------------------------------------------
int goodB2G_58()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004134F4) ----------------------------------------------------
int goodG2B_66()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLongLongLine(-3LL);
}

//----- (0000000000413568) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_12_good()
{
  goodB2G_58();
  return goodG2B_66();
}

//----- (0000000000413582) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_51b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (00000000004135B0) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_51b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (00000000004135DE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_51b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (0000000000413620) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_61_bad()
{
  int v0; // eax

  v0 = CWE191_Integer_Underflow__int_rand_postdec_61b_badSource();
  return printIntLine(v0 - 1);
}

//----- (0000000000413652) ----------------------------------------------------
int goodG2B_67()
{
  int v0; // eax

  v0 = CWE191_Integer_Underflow__int_rand_postdec_61b_goodG2BSource();
  return printIntLine(v0 - 1);
}

//----- (0000000000413684) ----------------------------------------------------
int goodB2G_59()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE191_Integer_Underflow__int_rand_postdec_61b_goodB2GSource();
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}

//----- (00000000004136CB) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_61_good()
{
  goodG2B_67();
  return goodB2G_59();
}

//----- (00000000004136E5) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_04_bad()
{
  return printUnsignedLine(0xFFFFFFFF);
}

//----- (0000000000413723) ----------------------------------------------------
int goodB2G1_42()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041377F) ----------------------------------------------------
int goodB2G2_42()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004137CF) ----------------------------------------------------
int goodG2B1_34()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000413819) ----------------------------------------------------
int goodG2B2_34()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000413857) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_04_good()
{
  goodB2G1_42();
  goodB2G2_42();
  goodG2B1_34();
  return goodG2B2_34();
}

//----- (0000000000413885) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_16_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return printIntLine((__int16)(v1 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004138D2) ----------------------------------------------------
int goodB2G_60()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413935) ----------------------------------------------------
int goodG2B_68()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000041396B) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_16_good()
{
  goodB2G_60();
  return goodG2B_68();
}

//----- (0000000000413985) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_68b_badSink()
{
  return printIntLine(CWE191_Integer_Underflow__int_listen_socket_postdec_68_badData - 1);
}
// 6AB550: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_68_badData;

//----- (00000000004139AC) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_68b_goodG2BSink()
{
  return printIntLine(CWE191_Integer_Underflow__int_listen_socket_postdec_68_goodG2BData - 1);
}
// 6AB554: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_68_goodG2BData;

//----- (00000000004139D3) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__int_listen_socket_postdec_68_goodB2GData == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE191_Integer_Underflow__int_listen_socket_postdec_68_goodB2GData - 1);
  return result;
}
// 6AB54C: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_68_goodB2GData;

//----- (0000000000413A0F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_15_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return printIntLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413A58) ----------------------------------------------------
int goodB2G1_43()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413AB7) ----------------------------------------------------
int goodB2G2_43()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413B16) ----------------------------------------------------
int goodG2B1_35()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000413B44) ----------------------------------------------------
int goodG2B2_35()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000413B72) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_15_good()
{
  goodB2G1_43();
  goodB2G2_43();
  goodG2B1_35();
  return goodG2B2_35();
}

//----- (0000000000413BA0) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_07_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_1 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFive_1;
  if ( staticFive_1 == 5 )
    result = printIntLine(v6 - 1);
  return result;
}
// 6AB138: using guessed type int staticFive_1;

//----- (0000000000413C2A) ----------------------------------------------------
int goodB2G1_44()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_1 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( staticFive_1 != 5 )
    return printLine("Benign, fixed string");
  if ( v6 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 - 1);
}
// 6AB138: using guessed type int staticFive_1;

//----- (0000000000413CD5) ----------------------------------------------------
int goodB2G2_44()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticFive_1 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticFive_1;
  if ( staticFive_1 == 5 )
  {
    if ( v6 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 - 1);
  }
  return result;
}
// 6AB138: using guessed type int staticFive_1;

//----- (0000000000413D74) ----------------------------------------------------
int goodG2B1_36()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_1 == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = staticFive_1;
  if ( staticFive_1 == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB138: using guessed type int staticFive_1;

//----- (0000000000413DC2) ----------------------------------------------------
int goodG2B2_36()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_1 == 5 )
    v1 = -2;
  result = staticFive_1;
  if ( staticFive_1 == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB138: using guessed type int staticFive_1;

//----- (0000000000413E04) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_07_good()
{
  goodB2G1_44();
  goodB2G2_44();
  goodG2B1_36();
  return goodG2B2_36();
}

//----- (0000000000413E32) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_61_bad()
{
  __int16 v0; // ax

  v0 = (unsigned __int64)CWE191_Integer_Underflow__short_rand_postdec_61b_badSource() - 1;
  return printIntLine(v0);
}

//----- (0000000000413E6F) ----------------------------------------------------
int goodG2B_69()
{
  __int16 v0; // ax

  v0 = (unsigned __int64)CWE191_Integer_Underflow__short_rand_postdec_61b_goodG2BSource() - 1;
  return printIntLine(v0);
}

//----- (0000000000413EAC) ----------------------------------------------------
int goodB2G_61()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = CWE191_Integer_Underflow__short_rand_postdec_61b_goodB2GSource();
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (0000000000413EFD) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_61_good()
{
  goodG2B_69();
  return goodB2G_61();
}

//----- (0000000000413F17) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_04_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, &unk_473448, &v1);
  return printHexCharLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413F70) ----------------------------------------------------
int goodB2G1_45()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, &unk_473448, &v1);
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413FE9) ----------------------------------------------------
int goodB2G2_45()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, &unk_473448, &v1);
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000414056) ----------------------------------------------------
int goodG2B1_37()
{
  return printHexCharLine(253);
}

//----- (00000000004140A2) ----------------------------------------------------
int goodG2B2_37()
{
  return printHexCharLine(253);
}

//----- (00000000004140E2) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_04_good()
{
  goodB2G1_45();
  goodB2G2_45();
  goodG2B1_37();
  return goodG2B2_37();
}

//----- (0000000000414110) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_31_bad()
{
  char v1; // [rsp+Ch] [rbp-4h]
  char v2; // [rsp+Dh] [rbp-3h]
  char v3; // [rsp+Eh] [rbp-2h]
  char v4; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  v4 = v1;
  v3 = v1 - 1;
  v2 = v1 - 1;
  return printHexCharLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000414165) ----------------------------------------------------
int goodG2B_70()
{
  return printHexCharLine(-3);
}

//----- (00000000004141A1) ----------------------------------------------------
int goodB2G_62()
{
  int result; // eax
  char v1; // [rsp+Ch] [rbp-4h]
  char v2; // [rsp+Eh] [rbp-2h]
  char v3; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  v3 = v1;
  v2 = v1;
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v2 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000414208) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_31_good()
{
  goodG2B_70();
  return goodB2G_62();
}

//----- (0000000000414222) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_15_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 - 1);
}

//----- (00000000004142EE) ----------------------------------------------------
int goodB2G1_46()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 - 1);
  return result;
}

//----- (00000000004143D6) ----------------------------------------------------
int goodB2G2_46()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 - 1);
  return result;
}

//----- (00000000004144BE) ----------------------------------------------------
int goodG2B1_38()
{
  return printLongLongLine(-3LL);
}

//----- (00000000004144F3) ----------------------------------------------------
int goodG2B2_38()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000414528) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_15_good()
{
  goodB2G1_46();
  goodB2G2_46();
  goodG2B1_38();
  return goodG2B2_38();
}

//----- (0000000000414556) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_09_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004145B9) ----------------------------------------------------
int goodB2G1_47()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000414647) ----------------------------------------------------
int goodB2G2_47()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004146C9) ----------------------------------------------------
int goodG2B1_39()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = -2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041471C) ----------------------------------------------------
int goodG2B2_39()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = -2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000414763) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_09_good()
{
  goodB2G1_47();
  goodB2G2_47();
  goodG2B1_39();
  return goodG2B2_39();
}

//----- (0000000000414791) ----------------------------------------------------
__int64 badSource_2()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (00000000004147F0) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_42_bad()
{
  int v0; // eax

  v0 = badSource_2();
  return printIntLine(v0 - 1);
}

//----- (0000000000414822) ----------------------------------------------------
__int64 goodG2BSource_2()
{
  return 4294967294LL;
}

//----- (0000000000414835) ----------------------------------------------------
int goodG2B_71()
{
  int v0; // eax

  v0 = goodG2BSource_2();
  return printIntLine(v0 - 1);
}

//----- (0000000000414867) ----------------------------------------------------
__int64 goodB2GSource_2()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (00000000004148C6) ----------------------------------------------------
int goodB2G_63()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_2();
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}

//----- (000000000041490D) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_42_good()
{
  goodB2G_63();
  return goodG2B_71();
}

//----- (0000000000414927) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_11_bad()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x8000000000000000LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (000000000041497C) ----------------------------------------------------
int goodB2G1_48()
{
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x8000000000000000LL;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 - 1);
}

//----- (00000000004149F9) ----------------------------------------------------
int goodB2G2_48()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 0x8000000000000000LL;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 - 1);
  }
  return result;
}

//----- (0000000000414A6A) ----------------------------------------------------
int goodG2B1_40()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = -2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (0000000000414AC5) ----------------------------------------------------
int goodG2B2_40()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (0000000000414B14) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_11_good()
{
  goodB2G1_48();
  goodB2G2_48();
  goodG2B1_40();
  return goodG2B2_40();
}

//----- (0000000000414B42) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_02_bad()
{
  return printLongLongLine(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000414B7B) ----------------------------------------------------
int goodB2G1_49()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000414BD0) ----------------------------------------------------
int goodB2G2_49()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000414C25) ----------------------------------------------------
int goodG2B1_41()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000414C58) ----------------------------------------------------
int goodG2B2_41()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000414C8B) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_02_good()
{
  goodB2G1_49();
  goodB2G2_49();
  goodG2B1_41();
  return goodG2B2_41();
}

//----- (0000000000414CB9) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_51_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE191_Integer_Underflow__short_fscanf_postdec_51b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000414CF2) ----------------------------------------------------
int goodG2B_72()
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_51b_goodG2BSink(-2);
}

//----- (0000000000414D13) ----------------------------------------------------
int goodB2G_64()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE191_Integer_Underflow__short_fscanf_postdec_51b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000414D4C) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_51_good()
{
  goodG2B_72();
  return goodB2G_64();
}

//----- (0000000000414D66) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_53b_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_53c_badSink(a1);
}

//----- (0000000000414D7D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_53b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_53c_goodG2BSink(a1);
}

//----- (0000000000414D94) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_53b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_53c_goodB2GSink(a1);
}

//----- (0000000000414DAB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_63b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 - 1);
}

//----- (0000000000414DD6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_63b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 - 1);
}

//----- (0000000000414E01) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 )
    result = printUnsignedLine(*a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000414E3E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_01_bad()
{
  return printIntLine(0x7FFFFFFFu);
}

//----- (0000000000414E6A) ----------------------------------------------------
int goodG2B_73()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000414E96) ----------------------------------------------------
int goodB2G_65()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000414ED7) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_01_good()
{
  goodG2B_73();
  return goodB2G_65();
}

//----- (0000000000414EF1) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_18_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 - 1);
}

//----- (0000000000414FBD) ----------------------------------------------------
int goodB2G_66()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 - 1);
  return result;
}

//----- (00000000004150A5) ----------------------------------------------------
int goodG2B_74()
{
  return printLongLongLine(-3LL);
}

//----- (00000000004150DA) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_18_good()
{
  goodB2G_66();
  return goodG2B_74();
}

//----- (00000000004150F4) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_68_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE191_Integer_Underflow__int_listen_socket_postdec_68_badData = v8;
  return CWE191_Integer_Underflow__int_listen_socket_postdec_68b_badSink();
}
// 6AB550: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_68_badData;
// 4150F4: using guessed type char buf[16];

//----- (000000000041522B) ----------------------------------------------------
int goodG2B_75()
{
  CWE191_Integer_Underflow__int_listen_socket_postdec_68_goodG2BData = -2;
  return CWE191_Integer_Underflow__int_listen_socket_postdec_68b_goodG2BSink();
}
// 6AB554: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_68_goodG2BData;

//----- (0000000000415256) ----------------------------------------------------
int goodB2G_67()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE191_Integer_Underflow__int_listen_socket_postdec_68_goodB2GData = v8;
  return CWE191_Integer_Underflow__int_listen_socket_postdec_68b_goodB2GSink();
}
// 6AB54C: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_68_goodB2GData;
// 415256: using guessed type char buf[16];

//----- (000000000041538D) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_68_good()
{
  goodG2B_75();
  return goodB2G_67();
}

//----- (00000000004153A7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_22_badSink(char a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__char_fscanf_postdec_22_badGlobal;
  if ( CWE191_Integer_Underflow__char_fscanf_postdec_22_badGlobal )
    result = printHexCharLine(a1 - 1);
  return result;
}
// 6AB290: using guessed type int CWE191_Integer_Underflow__char_fscanf_postdec_22_badGlobal;

//----- (00000000004153DC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_22_goodB2G1Sink(char a1)
{
  if ( CWE191_Integer_Underflow__char_fscanf_postdec_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(a1 - 1);
}
// 6AB294: using guessed type int CWE191_Integer_Underflow__char_fscanf_postdec_22_goodB2G1Global;

//----- (000000000041542F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_22_goodB2G2Sink(char a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__char_fscanf_postdec_22_goodB2G2Global;
  if ( CWE191_Integer_Underflow__char_fscanf_postdec_22_goodB2G2Global )
  {
    if ( a1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(a1 - 1);
  }
  return result;
}
// 6AB298: using guessed type int CWE191_Integer_Underflow__char_fscanf_postdec_22_goodB2G2Global;

//----- (0000000000415476) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_22_goodG2BSink(char a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__char_fscanf_postdec_22_goodG2BGlobal;
  if ( CWE191_Integer_Underflow__char_fscanf_postdec_22_goodG2BGlobal )
    result = printHexCharLine(a1 - 1);
  return result;
}
// 6AB29C: using guessed type int CWE191_Integer_Underflow__char_fscanf_postdec_22_goodG2BGlobal;

//----- (00000000004154AB) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_10_bad()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 0x8000000000000000LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (00000000004154F8) ----------------------------------------------------
int goodB2G1_50()
{
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 0x8000000000000000LL;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 - 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000041556D) ----------------------------------------------------
int goodB2G2_50()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = 0x8000000000000000LL;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 - 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (00000000004155D6) ----------------------------------------------------
int goodG2B1_42()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = -2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000415629) ----------------------------------------------------
int goodG2B2_42()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = -2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000415670) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_10_good()
{
  goodB2G1_50();
  goodB2G2_50();
  goodG2B1_42();
  return goodG2B2_42();
}

//----- (000000000041569E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_14_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = -128;
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004156E2) ----------------------------------------------------
int goodB2G1_51()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = -128;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 - 1);
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000415744) ----------------------------------------------------
int goodB2G2_51()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = -128;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 - 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000041579A) ----------------------------------------------------
int goodG2B1_43()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004157EA) ----------------------------------------------------
int goodG2B2_43()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = -2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000041582E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_14_good()
{
  goodB2G1_51();
  goodB2G2_51();
  goodG2B1_43();
  return goodG2B2_43();
}

//----- (000000000041585C) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_badGlobal = 1;
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB274: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_badGlobal;

//----- (000000000041589E) ----------------------------------------------------
int goodB2G1_52()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodB2G1Global = 0;
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodB2G1Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB278: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodB2G1Global;

//----- (00000000004158E0) ----------------------------------------------------
int goodB2G2_52()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodB2G2Global = 1;
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodB2G2Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB27C: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodB2G2Global;

//----- (0000000000415922) ----------------------------------------------------
int goodG2B_76()
{
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodG2BGlobal = 1;
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodG2BSink(-2);
}
// 6AB280: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodG2BGlobal;

//----- (000000000041594E) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_good()
{
  goodB2G1_52();
  goodB2G2_52();
  return goodG2B_76();
}

//----- (0000000000415972) ----------------------------------------------------
int badSink_13()
{
  return printIntLine((__int16)(CWE191_Integer_Underflow__short_fscanf_postdec_45_badData - 1));
}
// 6AB284: using guessed type __int16 CWE191_Integer_Underflow__short_fscanf_postdec_45_badData;

//----- (00000000004159A5) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_45_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE191_Integer_Underflow__short_fscanf_postdec_45_badData = v1;
  return badSink_13();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB284: using guessed type __int16 CWE191_Integer_Underflow__short_fscanf_postdec_45_badData;

//----- (00000000004159E7) ----------------------------------------------------
int goodG2BSink_13()
{
  return printIntLine((__int16)(CWE191_Integer_Underflow__short_fscanf_postdec_45_goodG2BData - 1));
}
// 6AB286: using guessed type __int16 CWE191_Integer_Underflow__short_fscanf_postdec_45_goodG2BData;

//----- (0000000000415A1A) ----------------------------------------------------
int goodG2B_77()
{
  CWE191_Integer_Underflow__short_fscanf_postdec_45_goodG2BData = -2;
  return goodG2BSink_13();
}
// 6AB286: using guessed type __int16 CWE191_Integer_Underflow__short_fscanf_postdec_45_goodG2BData;

//----- (0000000000415A45) ----------------------------------------------------
int goodB2GSink_9()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__short_fscanf_postdec_45_goodB2GData == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(CWE191_Integer_Underflow__short_fscanf_postdec_45_goodB2GData - 1));
  return result;
}
// 6AB288: using guessed type __int16 CWE191_Integer_Underflow__short_fscanf_postdec_45_goodB2GData;

//----- (0000000000415A8C) ----------------------------------------------------
int goodB2G_68()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE191_Integer_Underflow__short_fscanf_postdec_45_goodB2GData = v1;
  return goodB2GSink_9();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB288: using guessed type __int16 CWE191_Integer_Underflow__short_fscanf_postdec_45_goodB2GData;

//----- (0000000000415ACE) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_45_good()
{
  goodG2B_77();
  return goodB2G_68();
}

//----- (0000000000415AE8) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_32_bad()
{
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Dh] [rbp-13h]
  char v3; // [rsp+Eh] [rbp-12h]
  char v4; // [rsp+Fh] [rbp-11h]
  char *v5; // [rsp+10h] [rbp-10h]
  char *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -128;
  v1 = -128;
  v3 = 127;
  v2 = 127;
  return printHexCharLine(127);
}

//----- (0000000000415B44) ----------------------------------------------------
int goodG2B_78()
{
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Dh] [rbp-13h]
  char v3; // [rsp+Eh] [rbp-12h]
  char v4; // [rsp+Fh] [rbp-11h]
  char *v5; // [rsp+10h] [rbp-10h]
  char *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -2;
  v1 = -2;
  v3 = -3;
  v2 = -3;
  return printHexCharLine(-3);
}

//----- (0000000000415BA0) ----------------------------------------------------
int goodB2G_69()
{
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Eh] [rbp-12h]
  char v3; // [rsp+Fh] [rbp-11h]
  char *v4; // [rsp+10h] [rbp-10h]
  char *v5; // [rsp+18h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = -128;
  v1 = -128;
  v2 = -128;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000415C0E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_32_good()
{
  goodG2B_78();
  return goodB2G_69();
}

//----- (0000000000415C28) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_05_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticTrue_2 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticTrue_2;
  if ( staticTrue_2 )
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB13C: using guessed type int staticTrue_2;

//----- (0000000000415C83) ----------------------------------------------------
int goodB2G1_53()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticTrue_2 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( staticFalse_2 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB13C: using guessed type int staticTrue_2;
// 6AB28C: using guessed type int staticFalse_2;

//----- (0000000000415D00) ----------------------------------------------------
int goodB2G2_53()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticTrue_2 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticTrue_2;
  if ( staticTrue_2 )
  {
    if ( v1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB13C: using guessed type int staticTrue_2;

//----- (0000000000415D71) ----------------------------------------------------
int goodG2B1_44()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_2 )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticTrue_2;
  if ( staticTrue_2 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB13C: using guessed type int staticTrue_2;
// 6AB28C: using guessed type int staticFalse_2;

//----- (0000000000415DBD) ----------------------------------------------------
int goodG2B2_44()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_2 )
    v1 = -2;
  result = staticTrue_2;
  if ( staticTrue_2 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB13C: using guessed type int staticTrue_2;

//----- (0000000000415DFD) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_05_good()
{
  goodB2G1_53();
  goodB2G2_53();
  goodG2B1_44();
  return goodG2B2_44();
}

//----- (0000000000415E2B) ----------------------------------------------------
int __fastcall badSink_14(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000415E4C) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_41_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return badSink_14(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000415E84) ----------------------------------------------------
int __fastcall goodG2BSink_14(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000415EA5) ----------------------------------------------------
int goodG2B_79()
{
  return goodG2BSink_14(-2);
}

//----- (0000000000415EC7) ----------------------------------------------------
int __fastcall goodB2GSink_10(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (0000000000415EFD) ----------------------------------------------------
int goodB2G_70()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return goodB2GSink_10(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000415F35) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_41_good()
{
  goodB2G_70();
  return goodG2B_79();
}

//----- (0000000000415F4F) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_06_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_4738DC, &v1);
  return printIntLine((__int16)(v1 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000415FAE) ----------------------------------------------------
int goodB2G1_54()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_4738DC, &v1);
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041602F) ----------------------------------------------------
int goodB2G2_54()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_4738DC, &v1);
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004160A4) ----------------------------------------------------
int goodG2B1_45()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (00000000004160F8) ----------------------------------------------------
int goodG2B2_45()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000416140) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_06_good()
{
  goodB2G1_54();
  goodB2G2_54();
  goodG2B1_45();
  return goodG2B2_45();
}

//----- (000000000041616E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_15_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 - 1);
}

//----- (00000000004161CB) ----------------------------------------------------
int goodB2G1_55()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 - 1);
  return result;
}

//----- (000000000041623A) ----------------------------------------------------
int goodB2G2_55()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 - 1);
  return result;
}

//----- (00000000004162A9) ----------------------------------------------------
int goodG2B1_46()
{
  return printHexCharLine(-3);
}

//----- (00000000004162D9) ----------------------------------------------------
int goodG2B2_46()
{
  return printHexCharLine(-3);
}

//----- (0000000000416309) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_15_good()
{
  goodB2G1_55();
  goodB2G2_55();
  goodG2B1_46();
  return goodG2B2_46();
}

//----- (0000000000416337) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_67b_badSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (0000000000416368) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_67b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (0000000000416399) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_67b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (00000000004163DC) ----------------------------------------------------
int __fastcall badSink_15(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (00000000004163FD) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_44_bad()
{
  return badSink_15(0);
}

//----- (0000000000416428) ----------------------------------------------------
int __fastcall goodG2BSink_15(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000416449) ----------------------------------------------------
int goodG2B_80()
{
  return goodG2BSink_15(-2);
}

//----- (0000000000416474) ----------------------------------------------------
int __fastcall goodB2GSink_11(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (00000000004164A7) ----------------------------------------------------
int goodB2G_71()
{
  return goodB2GSink_11(0);
}

//----- (00000000004164D2) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_44_good()
{
  goodG2B_80();
  return goodB2G_71();
}

//----- (00000000004164EC) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_01_bad()
{
  return printLongLongLine(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000416525) ----------------------------------------------------
int goodG2B_81()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000416558) ----------------------------------------------------
int goodB2G_72()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004165AD) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_01_good()
{
  goodG2B_81();
  return goodB2G_72();
}

//----- (00000000004165C7) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_52_bad()
{
  return CWE191_Integer_Underflow__short_min_postdec_52b_badSink(-32768);
}

//----- (00000000004165E8) ----------------------------------------------------
int goodG2B_82()
{
  return CWE191_Integer_Underflow__short_min_postdec_52b_goodG2BSink(-2);
}

//----- (0000000000416609) ----------------------------------------------------
int goodB2G_73()
{
  return CWE191_Integer_Underflow__short_min_postdec_52b_goodB2GSink(-32768);
}

//----- (000000000041662A) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_52_good()
{
  goodG2B_82();
  return goodB2G_73();
}

//----- (0000000000416644) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_53_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE191_Integer_Underflow__int_listen_socket_postdec_53b_badSink(v8);
}
// 416644: using guessed type char buf[16];

//----- (0000000000416772) ----------------------------------------------------
int goodG2B_83()
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_53b_goodG2BSink(-2);
}

//----- (0000000000416794) ----------------------------------------------------
int goodB2G_74()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE191_Integer_Underflow__int_listen_socket_postdec_53b_goodB2GSink(v8);
}
// 416794: using guessed type char buf[16];

//----- (00000000004168C2) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_53_good()
{
  goodG2B_83();
  return goodB2G_74();
}

//----- (00000000004168DC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_51b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000041690A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_51b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (0000000000416938) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_51b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (000000000041697A) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_63_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_63b_badSink(&v6);
}

//----- (00000000004169E6) ----------------------------------------------------
int goodG2B_84()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -2;
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_63b_goodG2BSink(&v1);
}

//----- (0000000000416A0A) ----------------------------------------------------
int goodB2G_75()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_63b_goodB2GSink(&v6);
}

//----- (0000000000416A76) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_63_good()
{
  goodG2B_84();
  return goodB2G_75();
}

//----- (0000000000416A90) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_16_bad()
{
  return printIntLine(0x7FFFu);
}

//----- (0000000000416AC6) ----------------------------------------------------
int goodB2G_76()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000416B10) ----------------------------------------------------
int goodG2B_85()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000416B46) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_16_good()
{
  goodB2G_76();
  return goodG2B_85();
}

//----- (0000000000416B60) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) - 1);
}

//----- (0000000000416B8C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) - 1);
}

//----- (0000000000416BB8) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (0000000000416BF9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_65b_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000416C1A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000416C3B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (0000000000416C71) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_22_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE191_Integer_Underflow__char_fscanf_postdec_22_badGlobal = 1;
  return CWE191_Integer_Underflow__char_fscanf_postdec_22_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB290: using guessed type int CWE191_Integer_Underflow__char_fscanf_postdec_22_badGlobal;

//----- (0000000000416CB4) ----------------------------------------------------
int goodB2G1_56()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE191_Integer_Underflow__char_fscanf_postdec_22_goodB2G1Global = 0;
  return CWE191_Integer_Underflow__char_fscanf_postdec_22_goodB2G1Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB294: using guessed type int CWE191_Integer_Underflow__char_fscanf_postdec_22_goodB2G1Global;

//----- (0000000000416CF7) ----------------------------------------------------
int goodB2G2_56()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE191_Integer_Underflow__char_fscanf_postdec_22_goodB2G2Global = 1;
  return CWE191_Integer_Underflow__char_fscanf_postdec_22_goodB2G2Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB298: using guessed type int CWE191_Integer_Underflow__char_fscanf_postdec_22_goodB2G2Global;

//----- (0000000000416D3A) ----------------------------------------------------
int goodG2B_86()
{
  CWE191_Integer_Underflow__char_fscanf_postdec_22_goodG2BGlobal = 1;
  return CWE191_Integer_Underflow__char_fscanf_postdec_22_goodG2BSink(-2);
}
// 6AB29C: using guessed type int CWE191_Integer_Underflow__char_fscanf_postdec_22_goodG2BGlobal;

//----- (0000000000416D61) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_22_good()
{
  goodB2G1_56();
  goodB2G2_56();
  return goodG2B_86();
}

//----- (0000000000416D85) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_15_bad()
{
  return printIntLine(0x7FFFFFFFu);
}

//----- (0000000000416DB3) ----------------------------------------------------
int goodB2G1_57()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000416DF6) ----------------------------------------------------
int goodB2G2_57()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000416E39) ----------------------------------------------------
int goodG2B1_47()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000416E67) ----------------------------------------------------
int goodG2B2_47()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000416E95) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_15_good()
{
  goodB2G1_57();
  goodB2G2_57();
  goodG2B1_47();
  return goodG2B2_47();
}

//----- (0000000000416EC3) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_04_bad()
{
  return printHexCharLine(127);
}

//----- (0000000000416F03) ----------------------------------------------------
int goodB2G1_58()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000416F61) ----------------------------------------------------
int goodB2G2_58()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000416FB3) ----------------------------------------------------
int goodG2B1_48()
{
  return printHexCharLine(253);
}

//----- (0000000000416FFF) ----------------------------------------------------
int goodG2B2_48()
{
  return printHexCharLine(253);
}

//----- (000000000041703F) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_04_good()
{
  goodB2G1_58();
  goodB2G2_58();
  goodG2B1_48();
  return goodG2B2_48();
}

//----- (000000000041706D) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_31_bad()
{
  return printHexCharLine(127);
}

//----- (00000000004170A9) ----------------------------------------------------
int goodG2B_87()
{
  return printHexCharLine(-3);
}

//----- (00000000004170E5) ----------------------------------------------------
int goodB2G_77()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000417133) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_31_good()
{
  goodG2B_87();
  return goodB2G_77();
}

//----- (000000000041714D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (0000000000417178) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (00000000004171A3) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 - 1);
  return result;
}

//----- (00000000004171E3) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_61_bad()
{
  __int16 v0; // ax

  v0 = (unsigned __int64)CWE191_Integer_Underflow__short_fscanf_postdec_61b_badSource(0) - 1;
  return printIntLine(v0);
}

//----- (0000000000417220) ----------------------------------------------------
int goodG2B_88()
{
  __int16 v0; // ax

  v0 = (unsigned __int64)CWE191_Integer_Underflow__short_fscanf_postdec_61b_goodG2BSource() - 1;
  return printIntLine(v0);
}

//----- (000000000041725D) ----------------------------------------------------
int goodB2G_78()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = CWE191_Integer_Underflow__short_fscanf_postdec_61b_goodB2GSource(0);
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (00000000004172AE) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_61_good()
{
  goodG2B_88();
  return goodB2G_78();
}

//----- (00000000004172C8) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_16_bad()
{
  return printLongLongLine(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000417303) ----------------------------------------------------
int goodB2G_79()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041735A) ----------------------------------------------------
int goodG2B_89()
{
  return printLongLongLine(-3LL);
}

//----- (000000000041738F) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_16_good()
{
  goodB2G_79();
  return goodG2B_89();
}

//----- (00000000004173A9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54d_badSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_54e_badSink(a1);
}

//----- (00000000004173C4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54d_goodG2BSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_54e_goodG2BSink(a1);
}

//----- (00000000004173DF) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54d_goodB2GSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_54e_goodB2GSink(a1);
}

//----- (00000000004173FA) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54d_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_54e_badSink(a1);
}

//----- (0000000000417411) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54d_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_54e_goodG2BSink(a1);
}

//----- (0000000000417428) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54d_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_54e_goodB2GSink(a1);
}

//----- (000000000041743F) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_17_bad()
{
  int result; // eax
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -32768;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(--v1);
  return result;
}

//----- (0000000000417499) ----------------------------------------------------
int goodB2G_80()
{
  int result; // eax
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -32768;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(--v1);
  }
  return result;
}

//----- (0000000000417507) ----------------------------------------------------
int goodG2B_90()
{
  int result; // eax
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(--v1);
  return result;
}

//----- (0000000000417561) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_17_good()
{
  goodB2G_80();
  return goodG2B_90();
}

//----- (000000000041757B) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_07_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_2 == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = staticFive_2;
  if ( staticFive_2 == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB140: using guessed type int staticFive_2;

//----- (00000000004175DC) ----------------------------------------------------
int goodB2G1_59()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_2 == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( staticFive_2 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB140: using guessed type int staticFive_2;

//----- (000000000041765F) ----------------------------------------------------
int goodB2G2_59()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_2 == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = staticFive_2;
  if ( staticFive_2 == 5 )
  {
    if ( v1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 - 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB140: using guessed type int staticFive_2;

//----- (00000000004176D6) ----------------------------------------------------
int goodG2B1_49()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_2 == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = staticFive_2;
  if ( staticFive_2 == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB140: using guessed type int staticFive_2;

//----- (000000000041772C) ----------------------------------------------------
int goodG2B2_49()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_2 == 5 )
    v1 = -2;
  result = staticFive_2;
  if ( staticFive_2 == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB140: using guessed type int staticFive_2;

//----- (0000000000417776) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_07_good()
{
  goodB2G1_59();
  goodB2G2_59();
  goodG2B1_49();
  return goodG2B2_49();
}

//----- (00000000004177A4) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_10_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v7 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 4177A4: using guessed type char buf[16];

//----- (00000000004178AE) ----------------------------------------------------
int goodB2G1_60()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v7 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 - 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;
// 4178AE: using guessed type char buf[16];

//----- (00000000004179D9) ----------------------------------------------------
int goodB2G2_60()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v7 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 - 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 4179D9: using guessed type char buf[16];

//----- (0000000000417AF8) ----------------------------------------------------
int goodG2B1_50()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000417B44) ----------------------------------------------------
int goodG2B2_50()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000417B84) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_10_good()
{
  goodB2G1_60();
  goodB2G2_60();
  goodG2B1_50();
  return goodG2B2_50();
}

//----- (0000000000417BB2) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_14_bad()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 0x8000000000000000LL;
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000417C01) ----------------------------------------------------
int goodB2G1_61()
{
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 0x8000000000000000LL;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 - 1);
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000417C78) ----------------------------------------------------
int goodB2G2_61()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = 0x8000000000000000LL;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 - 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000417CE3) ----------------------------------------------------
int goodG2B1_51()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = -2LL;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000417D38) ----------------------------------------------------
int goodG2B2_51()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = -2LL;
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000417D81) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_14_good()
{
  goodB2G1_61();
  goodB2G2_61();
  goodG2B1_51();
  return goodG2B2_51();
}

//----- (0000000000417DAF) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_51_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__int_rand_postdec_51b_badSink(v2);
}

//----- (0000000000417E19) ----------------------------------------------------
int goodG2B_91()
{
  return CWE191_Integer_Underflow__int_rand_postdec_51b_goodG2BSink(-2);
}

//----- (0000000000417E3B) ----------------------------------------------------
int goodB2G_81()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__int_rand_postdec_51b_goodB2GSink(v2);
}

//----- (0000000000417EA5) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_51_good()
{
  goodG2B_91();
  return goodB2G_81();
}

//----- (0000000000417EBF) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_09_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v2 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000417F2E) ----------------------------------------------------
int goodB2G1_62()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v2 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 - 1);
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000417FBB) ----------------------------------------------------
int goodB2G2_62()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v2 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 - 1);
  }
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041803C) ----------------------------------------------------
int goodG2B1_52()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041808A) ----------------------------------------------------
int goodG2B2_52()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004180CC) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_09_good()
{
  goodB2G1_62();
  goodB2G2_62();
  goodG2B1_52();
  return goodG2B2_52();
}

//----- (00000000004180FA) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_54_bad()
{
  return CWE191_Integer_Underflow__char_min_postdec_54b_badSink(-128);
}

//----- (0000000000418117) ----------------------------------------------------
int goodG2B_92()
{
  return CWE191_Integer_Underflow__char_min_postdec_54b_goodG2BSink(-2);
}

//----- (0000000000418134) ----------------------------------------------------
int goodB2G_82()
{
  return CWE191_Integer_Underflow__char_min_postdec_54b_goodB2GSink(-128);
}

//----- (0000000000418151) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_54_good()
{
  goodG2B_92();
  return goodB2G_82();
}

//----- (000000000041816B) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_51_bad()
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_51b_badSink(0x8000000000000000LL);
}

//----- (0000000000418197) ----------------------------------------------------
int goodG2B_93()
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_51b_goodG2BSink(-2LL);
}

//----- (00000000004181BD) ----------------------------------------------------
int goodB2G_83()
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_51b_goodB2GSink(0x8000000000000000LL);
}

//----- (00000000004181E9) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_51_good()
{
  goodG2B_93();
  return goodB2G_83();
}

//----- (0000000000418203) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_09_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041825E) ----------------------------------------------------
int goodB2G1_63()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 )
    return printUnsignedLine(v1 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004182D8) ----------------------------------------------------
int goodB2G2_63()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 )
      result = printUnsignedLine(v1 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000418346) ----------------------------------------------------
int goodG2B1_53()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000418392) ----------------------------------------------------
int goodG2B2_53()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004183D2) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_09_good()
{
  goodB2G1_63();
  goodB2G2_63();
  goodG2B1_53();
  return goodG2B2_53();
}

//----- (0000000000418400) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_01_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 - 1);
}
// 418400: using guessed type char buf[16];

//----- (00000000004184F2) ----------------------------------------------------
int goodG2B_94()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000041851E) ----------------------------------------------------
int goodB2G_84()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 - 1);
  return result;
}
// 41851E: using guessed type char buf[16];

//----- (0000000000418625) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_01_good()
{
  goodG2B_94();
  return goodB2G_84();
}

//----- (000000000041863F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_63_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE191_Integer_Underflow__int_listen_socket_postdec_63b_badSink(&v5);
}
// 41863F: using guessed type char buf[16];

//----- (000000000041876F) ----------------------------------------------------
int goodG2B_95()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -2;
  return CWE191_Integer_Underflow__int_listen_socket_postdec_63b_goodG2BSink(&v1);
}

//----- (0000000000418793) ----------------------------------------------------
int goodB2G_85()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE191_Integer_Underflow__int_listen_socket_postdec_63b_goodB2GSink(&v5);
}
// 418793: using guessed type char buf[16];

//----- (00000000004188C3) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_63_good()
{
  goodG2B_95();
  return goodB2G_85();
}

//----- (00000000004188DD) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_68b_badSink()
{
  return printHexCharLine(CWE191_Integer_Underflow__char_fscanf_postdec_68_badData - 1);
}
// 6AB558: using guessed type char CWE191_Integer_Underflow__char_fscanf_postdec_68_badData;

//----- (000000000041890D) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_68b_goodG2BSink()
{
  return printHexCharLine(CWE191_Integer_Underflow__char_fscanf_postdec_68_goodG2BData - 1);
}
// 6AB55A: using guessed type char CWE191_Integer_Underflow__char_fscanf_postdec_68_goodG2BData;

//----- (000000000041893D) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__char_fscanf_postdec_68_goodB2GData == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(CWE191_Integer_Underflow__char_fscanf_postdec_68_goodB2GData - 1);
  return result;
}
// 6AB559: using guessed type char CWE191_Integer_Underflow__char_fscanf_postdec_68_goodB2GData;

//----- (000000000041897F) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_66_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_66b_badSink((__int64)&v6);
}

//----- (00000000004189F1) ----------------------------------------------------
int goodG2B_96()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -2;
  v2 = -2;
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000418A1B) ----------------------------------------------------
int goodB2G_86()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_66b_goodB2GSink((__int64)&v6);
}

//----- (0000000000418A8D) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_66_good()
{
  goodG2B_96();
  return goodB2G_86();
}

//----- (0000000000418AA7) ----------------------------------------------------
int badSink_16()
{
  return printLongLongLine(CWE191_Integer_Underflow__int64_t_min_postdec_45_badData - 1);
}
// 6AB2A0: using guessed type __int64 CWE191_Integer_Underflow__int64_t_min_postdec_45_badData;

//----- (0000000000418AD5) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_45_bad()
{
  CWE191_Integer_Underflow__int64_t_min_postdec_45_badData = 0x8000000000000000LL;
  return badSink_16();
}
// 6AB2A0: using guessed type __int64 CWE191_Integer_Underflow__int64_t_min_postdec_45_badData;

//----- (0000000000418B0A) ----------------------------------------------------
int goodG2BSink_16()
{
  return printLongLongLine(CWE191_Integer_Underflow__int64_t_min_postdec_45_goodG2BData - 1);
}
// 6AB2A8: using guessed type __int64 CWE191_Integer_Underflow__int64_t_min_postdec_45_goodG2BData;

//----- (0000000000418B38) ----------------------------------------------------
int goodG2B_97()
{
  CWE191_Integer_Underflow__int64_t_min_postdec_45_goodG2BData = -2LL;
  return goodG2BSink_16();
}
// 6AB2A8: using guessed type __int64 CWE191_Integer_Underflow__int64_t_min_postdec_45_goodG2BData;

//----- (0000000000418B67) ----------------------------------------------------
int goodB2GSink_12()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__int64_t_min_postdec_45_goodB2GData == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE191_Integer_Underflow__int64_t_min_postdec_45_goodB2GData - 1);
  return result;
}
// 6AB2B0: using guessed type __int64 CWE191_Integer_Underflow__int64_t_min_postdec_45_goodB2GData;

//----- (0000000000418BB1) ----------------------------------------------------
int goodB2G_87()
{
  CWE191_Integer_Underflow__int64_t_min_postdec_45_goodB2GData = 0x8000000000000000LL;
  return goodB2GSink_12();
}
// 6AB2B0: using guessed type __int64 CWE191_Integer_Underflow__int64_t_min_postdec_45_goodB2GData;

//----- (0000000000418BE6) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_45_good()
{
  goodG2B_97();
  return goodB2G_87();
}

//----- (0000000000418C00) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_06_bad()
{
  return printLongLongLine(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000418C4D) ----------------------------------------------------
int goodB2G1_64()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000418CC2) ----------------------------------------------------
int goodB2G2_64()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000418D2B) ----------------------------------------------------
int goodG2B1_54()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000418D7E) ----------------------------------------------------
int goodG2B2_54()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000418DC5) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_06_good()
{
  goodB2G1_64();
  goodB2G2_64();
  goodG2B1_54();
  return goodG2B2_54();
}

//----- (0000000000418DF3) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_04_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 - 1);
}

//----- (0000000000418E79) ----------------------------------------------------
int goodB2G1_65()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (0000000000418F20) ----------------------------------------------------
int goodB2G2_65()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (0000000000418FBB) ----------------------------------------------------
int goodG2B1_55()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000419005) ----------------------------------------------------
int goodG2B2_55()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000419043) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_04_good()
{
  goodB2G1_65();
  goodB2G2_65();
  goodG2B1_55();
  return goodG2B2_55();
}

//----- (0000000000419071) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_31_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 - 1);
}

//----- (00000000004190F1) ----------------------------------------------------
int goodG2B_98()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000419129) ----------------------------------------------------
int goodB2G_88()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (00000000004191BE) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_31_good()
{
  goodG2B_98();
  return goodB2G_88();
}

//----- (00000000004191D8) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_09_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v7 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 4191D8: using guessed type char buf[16];

//----- (00000000004192E2) ----------------------------------------------------
int goodB2G1_66()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v7 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 - 1);
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;
// 4192E2: using guessed type char buf[16];

//----- (000000000041940D) ----------------------------------------------------
int goodB2G2_66()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v7 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 - 1);
  }
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 41940D: using guessed type char buf[16];

//----- (000000000041952C) ----------------------------------------------------
int goodG2B1_56()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000419578) ----------------------------------------------------
int goodG2B2_56()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004195B8) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_09_good()
{
  goodB2G1_66();
  goodB2G2_66();
  goodG2B1_56();
  return goodG2B2_56();
}

//----- (00000000004195E6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_53b_badSink(char a1)
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_53c_badSink(a1);
}

//----- (0000000000419600) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_53b_goodG2BSink(char a1)
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_53c_goodG2BSink(a1);
}

//----- (000000000041961A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_53b_goodB2GSink(char a1)
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_53c_goodB2GSink(a1);
}

//----- (0000000000419634) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_18_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return printIntLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041967D) ----------------------------------------------------
int goodB2G_89()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004196DC) ----------------------------------------------------
int goodG2B_99()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000041970A) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_18_good()
{
  goodB2G_89();
  return goodG2B_99();
}

//----- (0000000000419724) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_17_bad()
{
  int result; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    v1 = -128;
  for ( j = 0; j <= 0; ++j )
    result = printHexCharLine(--v1);
  return result;
}

//----- (0000000000419778) ----------------------------------------------------
int goodB2G_90()
{
  int result; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    v1 = -128;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(--v1);
  }
  return result;
}

//----- (00000000004197DE) ----------------------------------------------------
int goodG2B_100()
{
  int result; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    v1 = -2;
  for ( j = 0; j <= 0; ++j )
    result = printHexCharLine(--v1);
  return result;
}

//----- (0000000000419832) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_17_good()
{
  goodB2G_90();
  return goodG2B_100();
}

//----- (000000000041984C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54d_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_min_postdec_54e_badSink(a1);
}

//----- (0000000000419863) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54d_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_min_postdec_54e_goodG2BSink(a1);
}

//----- (000000000041987A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54d_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_min_postdec_54e_goodB2GSink(a1);
}

//----- (0000000000419891) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_68_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE191_Integer_Underflow__char_fscanf_postdec_68_badData = v1;
  return CWE191_Integer_Underflow__char_fscanf_postdec_68b_badSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB558: using guessed type char CWE191_Integer_Underflow__char_fscanf_postdec_68_badData;

//----- (00000000004198D0) ----------------------------------------------------
int goodG2B_101()
{
  CWE191_Integer_Underflow__char_fscanf_postdec_68_goodG2BData = -2;
  return CWE191_Integer_Underflow__char_fscanf_postdec_68b_goodG2BSink();
}
// 6AB55A: using guessed type char CWE191_Integer_Underflow__char_fscanf_postdec_68_goodG2BData;

//----- (00000000004198F6) ----------------------------------------------------
int goodB2G_91()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE191_Integer_Underflow__char_fscanf_postdec_68_goodB2GData = v1;
  return CWE191_Integer_Underflow__char_fscanf_postdec_68b_goodB2GSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB559: using guessed type char CWE191_Integer_Underflow__char_fscanf_postdec_68_goodB2GData;

//----- (0000000000419935) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_68_good()
{
  goodG2B_101();
  return goodB2G_91();
}

//----- (000000000041994F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_12_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    v7 = -2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v7 - 1);
  if ( v7 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 - 1);
}
// 41994F: using guessed type char buf[16];

//----- (0000000000419A97) ----------------------------------------------------
int goodB2G_92()
{
  int result; // eax
  char nptr[16]; // [rsp+0h] [rbp-60h]
  struct sockaddr addr; // [rsp+10h] [rbp-50h]
  char buf[16]; // [rsp+20h] [rbp-40h]
  __int16 s; // [rsp+30h] [rbp-30h]
  uint16_t v5; // [rsp+32h] [rbp-2Eh]
  in_addr_t v6; // [rsp+34h] [rbp-2Ch]
  int v7; // [rsp+4Ch] [rbp-14h]
  int v8; // [rsp+50h] [rbp-10h]
  int v9; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v11; // [rsp+5Ch] [rbp-4h]

  v11 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v6 = inet_addr("127.0.0.1");
      v5 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v9 = recv(fd, buf, 0xDuLL, 0);
        if ( v9 != -1 )
        {
          if ( v9 )
          {
            buf[v9] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    v8 = socket(2, 1, 6);
    if ( v8 != -1 )
    {
      memset(&addr, 0, 0x10uLL);
      addr.sa_family = 2;
      *(_DWORD *)&addr.sa_data[2] = inet_addr("127.0.0.1");
      *(_WORD *)addr.sa_data = htons(0x6987u);
      if ( connect(v8, &addr, 0x10u) != -1 )
      {
        v7 = recv(v8, nptr, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            nptr[v7] = 0;
            v11 = atoi(nptr);
          }
        }
      }
    }
    if ( v8 != -1 )
      close(v8);
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v11 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v11 - 1);
  }
  else if ( v11 == 0x80000000 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(v11 - 1);
  }
  return result;
}
// 419A97: using guessed type char buf[16];
// 419A97: using guessed type char nptr[16];

//----- (0000000000419CC0) ----------------------------------------------------
int goodG2B_102()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000419D27) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_12_good()
{
  goodB2G_92();
  return goodG2B_102();
}

//----- (0000000000419D41) ----------------------------------------------------
void CWE191_Integer_Underflow__int_listen_socket_postdec_17_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  int v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+24h] [rbp-1Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = 0;
      v2 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  for ( j = 0; j <= 0; ++j )
  {
    v4 = --v8;
    printIntLine(v8);
  }
}
// 419D41: using guessed type char buf[16];

//----- (0000000000419EA6) ----------------------------------------------------
void goodB2G_93()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  int v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+24h] [rbp-1Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = 0;
      v2 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v8 == 0x80000000 )
    {
      printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = --v8;
      printIntLine(v8);
    }
  }
}
// 419EA6: using guessed type char buf[16];

//----- (000000000041A020) ----------------------------------------------------
int goodG2B_103()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(--v1);
  return result;
}

//----- (000000000041A072) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_17_good()
{
  goodB2G_93();
  return goodG2B_103();
}

//----- (000000000041A08C) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_07_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    v1 = -32768;
  result = staticFive_3;
  if ( staticFive_3 == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB144: using guessed type int staticFive_3;

//----- (000000000041A0D6) ----------------------------------------------------
int goodB2G1_67()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    v1 = -32768;
  if ( staticFive_3 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 - 1));
}
// 6AB144: using guessed type int staticFive_3;

//----- (000000000041A140) ----------------------------------------------------
int goodB2G2_67()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    v1 = -32768;
  result = staticFive_3;
  if ( staticFive_3 == 5 )
  {
    if ( v1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 - 1));
  }
  return result;
}
// 6AB144: using guessed type int staticFive_3;

//----- (000000000041A19E) ----------------------------------------------------
int goodG2B1_57()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = staticFive_3;
  if ( staticFive_3 == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB144: using guessed type int staticFive_3;

//----- (000000000041A1F4) ----------------------------------------------------
int goodG2B2_57()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_3 == 5 )
    v1 = -2;
  result = staticFive_3;
  if ( staticFive_3 == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB144: using guessed type int staticFive_3;

//----- (000000000041A23E) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_07_good()
{
  goodB2G1_67();
  goodB2G2_67();
  goodG2B1_57();
  return goodG2B2_57();
}

//----- (000000000041A26C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_22_badSink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int_rand_postdec_22_badGlobal;
  if ( CWE191_Integer_Underflow__int_rand_postdec_22_badGlobal )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB518: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_22_badGlobal;

//----- (000000000041A297) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_22_goodB2G1Sink(int a1)
{
  if ( CWE191_Integer_Underflow__int_rand_postdec_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 - 1);
}
// 6AB51C: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_22_goodB2G1Global;

//----- (000000000041A2E3) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int_rand_postdec_22_goodB2G2Global;
  if ( CWE191_Integer_Underflow__int_rand_postdec_22_goodB2G2Global )
  {
    if ( a1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 - 1);
  }
  return result;
}
// 6AB520: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_22_goodB2G2Global;

//----- (000000000041A323) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int_rand_postdec_22_goodG2BGlobal;
  if ( CWE191_Integer_Underflow__int_rand_postdec_22_goodG2BGlobal )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB524: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_22_goodG2BGlobal;

//----- (000000000041A34E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_67b_badSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (000000000041A375) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_67b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (000000000041A39C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000041A3D5) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_64_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE191_Integer_Underflow__int_connect_socket_postdec_64b_badSink(&v5);
}
// 41A3D5: using guessed type char buf[16];

//----- (000000000041A4BF) ----------------------------------------------------
int goodG2B_104()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -2;
  return CWE191_Integer_Underflow__int_connect_socket_postdec_64b_goodG2BSink(&v1);
}

//----- (000000000041A4E3) ----------------------------------------------------
int goodB2G_94()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE191_Integer_Underflow__int_connect_socket_postdec_64b_goodB2GSink(&v5);
}
// 41A4E3: using guessed type char buf[16];

//----- (000000000041A5CD) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_64_good()
{
  goodG2B_104();
  return goodB2G_94();
}

//----- (000000000041A5E7) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_53_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE191_Integer_Underflow__char_fscanf_postdec_53b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041A620) ----------------------------------------------------
int goodG2B_105()
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_53b_goodG2BSink(-2);
}

//----- (000000000041A63D) ----------------------------------------------------
int goodB2G_95()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE191_Integer_Underflow__char_fscanf_postdec_53b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041A676) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_53_good()
{
  goodG2B_105();
  return goodB2G_95();
}

//----- (000000000041A690) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_68b_badSink()
{
  return printHexCharLine(CWE191_Integer_Underflow__char_min_postdec_68_badData - 1);
}
// 6AB55B: using guessed type char CWE191_Integer_Underflow__char_min_postdec_68_badData;

//----- (000000000041A6C0) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_68b_goodG2BSink()
{
  return printHexCharLine(CWE191_Integer_Underflow__char_min_postdec_68_goodG2BData - 1);
}
// 6AB55D: using guessed type char CWE191_Integer_Underflow__char_min_postdec_68_goodG2BData;

//----- (000000000041A6F0) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__char_min_postdec_68_goodB2GData == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(CWE191_Integer_Underflow__char_min_postdec_68_goodB2GData - 1);
  return result;
}
// 6AB55C: using guessed type char CWE191_Integer_Underflow__char_min_postdec_68_goodB2GData;

//----- (000000000041A732) ----------------------------------------------------
__int64 __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 41A732: using guessed type char buf[16];

//----- (000000000041A855) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_listen_socket_postdec_61b_goodG2BSource()
{
  return 4294967294LL;
}

//----- (000000000041A868) ----------------------------------------------------
__int64 __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 41A868: using guessed type char buf[16];

//----- (000000000041A98B) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_12_bad()
{
  __int16 v1; // [rsp+Ah] [rbp-6h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  else
    v1 = -2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine((__int16)(v1 - 1));
  if ( v1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041AA30) ----------------------------------------------------
int goodB2G_96()
{
  int result; // eax
  __int16 v1; // [rsp+Ah] [rbp-6h]

  v1 = 0;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 - 1));
  }
  else if ( v1 == -32768 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine((__int16)(v1 - 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041AB02) ----------------------------------------------------
int goodG2B_106()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000041AB7A) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_12_good()
{
  goodB2G_96();
  return goodG2B_106();
}

//----- (000000000041AB94) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_67_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_67b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041ABD2) ----------------------------------------------------
int goodG2B_107()
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_67b_goodG2BSink(-2);
}

//----- (000000000041ABFA) ----------------------------------------------------
int goodB2G_97()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_67b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041AC38) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_67_good()
{
  goodG2B_107();
  return goodB2G_97();
}

//----- (000000000041AC52) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_53b_badSink(char a1)
{
  return CWE191_Integer_Underflow__char_min_postdec_53c_badSink(a1);
}

//----- (000000000041AC6C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_53b_goodG2BSink(char a1)
{
  return CWE191_Integer_Underflow__char_min_postdec_53c_goodG2BSink(a1);
}

//----- (000000000041AC86) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_53b_goodB2GSink(char a1)
{
  return CWE191_Integer_Underflow__char_min_postdec_53c_goodB2GSink(a1);
}

//----- (000000000041ACA0) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_18_bad()
{
  return printIntLine(0x7FFFFFFFu);
}

//----- (000000000041ACCE) ----------------------------------------------------
int goodB2G_98()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041AD11) ----------------------------------------------------
int goodG2B_108()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000041AD3F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_18_good()
{
  goodB2G_98();
  return goodG2B_108();
}

//----- (000000000041AD59) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_52b_badSink(char a1)
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_52c_badSink(a1);
}

//----- (000000000041AD73) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_52b_goodG2BSink(char a1)
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_52c_goodG2BSink(a1);
}

//----- (000000000041AD8D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_52b_goodB2GSink(char a1)
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_52c_goodB2GSink(a1);
}

//----- (000000000041ADA7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_52c_badSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000041ADD2) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_52c_goodG2BSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000041ADFD) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_52c_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (000000000041AE3A) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_64_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE191_Integer_Underflow__short_fscanf_postdec_64b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041AE73) ----------------------------------------------------
int goodG2B_109()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = -2;
  return CWE191_Integer_Underflow__short_fscanf_postdec_64b_goodG2BSink(&v1);
}

//----- (000000000041AE95) ----------------------------------------------------
int goodB2G_99()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE191_Integer_Underflow__short_fscanf_postdec_64b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041AECE) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_64_good()
{
  goodG2B_109();
  return goodB2G_99();
}

//----- (000000000041AEE8) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_61_bad()
{
  int v0; // eax

  v0 = CWE191_Integer_Underflow__int_listen_socket_postdec_61b_badSource(0);
  return printIntLine(v0 - 1);
}

//----- (000000000041AF1A) ----------------------------------------------------
int goodG2B_110()
{
  int v0; // eax

  v0 = CWE191_Integer_Underflow__int_listen_socket_postdec_61b_goodG2BSource();
  return printIntLine(v0 - 1);
}

//----- (000000000041AF4C) ----------------------------------------------------
int goodB2G_100()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE191_Integer_Underflow__int_listen_socket_postdec_61b_goodB2GSource(0);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}

//----- (000000000041AF93) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_61_good()
{
  goodG2B_110();
  return goodB2G_100();
}

//----- (000000000041AFAD) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_68_bad()
{
  CWE191_Integer_Underflow__char_min_postdec_68_badData = -128;
  return CWE191_Integer_Underflow__char_min_postdec_68b_badSink();
}
// 6AB55B: using guessed type char CWE191_Integer_Underflow__char_min_postdec_68_badData;

//----- (000000000041AFD3) ----------------------------------------------------
int goodG2B_111()
{
  CWE191_Integer_Underflow__char_min_postdec_68_goodG2BData = -2;
  return CWE191_Integer_Underflow__char_min_postdec_68b_goodG2BSink();
}
// 6AB55D: using guessed type char CWE191_Integer_Underflow__char_min_postdec_68_goodG2BData;

//----- (000000000041AFF9) ----------------------------------------------------
int goodB2G_101()
{
  CWE191_Integer_Underflow__char_min_postdec_68_goodB2GData = -128;
  return CWE191_Integer_Underflow__char_min_postdec_68b_goodB2GSink();
}
// 6AB55C: using guessed type char CWE191_Integer_Underflow__char_min_postdec_68_goodB2GData;

//----- (000000000041B01F) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_68_good()
{
  goodG2B_111();
  return goodB2G_101();
}

//----- (000000000041B039) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_02_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 - 1);
}
// 41B039: using guessed type char buf[16];

//----- (000000000041B12B) ----------------------------------------------------
int goodB2G1_68()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 - 1);
  return result;
}
// 41B12B: using guessed type char buf[16];

//----- (000000000041B232) ----------------------------------------------------
int goodB2G2_68()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 - 1);
  return result;
}
// 41B232: using guessed type char buf[16];

//----- (000000000041B339) ----------------------------------------------------
int goodG2B1_58()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000041B365) ----------------------------------------------------
int goodG2B2_58()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000041B391) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_02_good()
{
  goodB2G1_68();
  goodB2G2_68();
  goodG2B1_58();
  return goodG2B2_58();
}

//----- (000000000041B3BF) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__char_rand_postdec_65_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE191_Integer_Underflow__char_rand_postdec_65b_badSink)((unsigned int)(char)v0);
}

//----- (000000000041B412) ----------------------------------------------------
int goodG2B_112()
{
  return CWE191_Integer_Underflow__char_rand_postdec_65b_goodG2BSink(-2);
}

//----- (000000000041B438) ----------------------------------------------------
__int64 goodB2G_102()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE191_Integer_Underflow__char_rand_postdec_65b_goodB2GSink)((unsigned int)(char)v0);
}

//----- (000000000041B48B) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__char_rand_postdec_65_good()
{
  goodG2B_112();
  return goodB2G_102();
}

//----- (000000000041B4A5) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_14_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( globalFive == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v8 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;
// 41B4A5: using guessed type char buf[16];

//----- (000000000041B5F7) ----------------------------------------------------
int goodB2G1_69()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( globalFive == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 - 1);
}
// 6AB1B8: using guessed type int globalFive;
// 41B5F7: using guessed type char buf[16];

//----- (000000000041B76A) ----------------------------------------------------
int goodB2G2_69()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( globalFive == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v8 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 - 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;
// 41B76A: using guessed type char buf[16];

//----- (000000000041B8D1) ----------------------------------------------------
int goodG2B1_59()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000041B91F) ----------------------------------------------------
int goodG2B2_59()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000041B961) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_14_good()
{
  goodB2G1_69();
  goodB2G2_69();
  goodG2B1_59();
  return goodG2B2_59();
}

//----- (000000000041B98F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_65b_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000041B9B0) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000041B9D1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000041BA07) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_67b_badSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (000000000041BA2E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_67b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (000000000041BA55) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000041BA8E) ----------------------------------------------------
int __fastcall badSink_17(__int16 a1)
{
  int result; // eax

  result = badStatic_3;
  if ( badStatic_3 )
    result = printIntLine((__int16)(a1 - 1));
  return result;
}
// 6AB2B8: using guessed type int badStatic_3;

//----- (000000000041BAC6) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_21_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  badStatic_3 = 1;
  return badSink_17(v1);
}
// 6AB2B8: using guessed type int badStatic_3;

//----- (000000000041BB31) ----------------------------------------------------
int __fastcall goodB2G1Sink_3(__int16 a1)
{
  if ( goodB2G1Static_3 )
    return printLine("Benign, fixed string");
  if ( a1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 - 1));
}
// 6AB2BC: using guessed type int goodB2G1Static_3;

//----- (000000000041BB89) ----------------------------------------------------
int goodB2G1_70()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  goodB2G1Static_3 = 0;
  return goodB2G1Sink_3(v1);
}
// 6AB2BC: using guessed type int goodB2G1Static_3;

//----- (000000000041BBF4) ----------------------------------------------------
int __fastcall goodB2G2Sink_3(__int16 a1)
{
  int result; // eax

  result = goodB2G2Static_3;
  if ( goodB2G2Static_3 )
  {
    if ( a1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 - 1));
  }
  return result;
}
// 6AB2C0: using guessed type int goodB2G2Static_3;

//----- (000000000041BC40) ----------------------------------------------------
int goodB2G2_70()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  goodB2G2Static_3 = 1;
  return goodB2G2Sink_3(v1);
}
// 6AB2C0: using guessed type int goodB2G2Static_3;

//----- (000000000041BCAB) ----------------------------------------------------
int __fastcall goodG2BSink_17(__int16 a1)
{
  int result; // eax

  result = goodG2BStatic_3;
  if ( goodG2BStatic_3 )
    result = printIntLine((__int16)(a1 - 1));
  return result;
}
// 6AB2C4: using guessed type int goodG2BStatic_3;

//----- (000000000041BCE3) ----------------------------------------------------
int goodG2B_113()
{
  goodG2BStatic_3 = 1;
  return goodG2BSink_17(-2);
}
// 6AB2C4: using guessed type int goodG2BStatic_3;

//----- (000000000041BD0E) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_21_good()
{
  goodB2G1_70();
  goodB2G2_70();
  return goodG2B_113();
}

//----- (000000000041BD32) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_65b_badSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000041BD59) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_65b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000041BD80) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_65b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (000000000041BDC3) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_11_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v7 - 1);
  return result;
}
// 41BDC3: using guessed type char buf[16];

//----- (000000000041BED5) ----------------------------------------------------
int goodB2G1_71()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v7 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 - 1);
}
// 41BED5: using guessed type char buf[16];

//----- (000000000041C008) ----------------------------------------------------
int goodB2G2_71()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v7 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 - 1);
  }
  return result;
}
// 41C008: using guessed type char buf[16];

//----- (000000000041C12F) ----------------------------------------------------
int goodG2B1_60()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (000000000041C183) ----------------------------------------------------
int goodG2B2_60()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (000000000041C1CB) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_11_good()
{
  goodB2G1_71();
  goodB2G2_71();
  goodG2B1_60();
  return goodG2B2_60();
}

//----- (000000000041C1F9) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_53_bad()
{
  return CWE191_Integer_Underflow__char_min_postdec_53b_badSink(-128);
}

//----- (000000000041C216) ----------------------------------------------------
int goodG2B_114()
{
  return CWE191_Integer_Underflow__char_min_postdec_53b_goodG2BSink(-2);
}

//----- (000000000041C233) ----------------------------------------------------
int goodB2G_103()
{
  return CWE191_Integer_Underflow__char_min_postdec_53b_goodB2GSink(-128);
}

//----- (000000000041C250) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_53_good()
{
  goodG2B_114();
  return goodB2G_103();
}

//----- (000000000041C26A) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_52_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE191_Integer_Underflow__char_fscanf_postdec_52b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041C2A3) ----------------------------------------------------
int goodG2B_115()
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_52b_goodG2BSink(-2);
}

//----- (000000000041C2C0) ----------------------------------------------------
int goodB2G_104()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE191_Integer_Underflow__char_fscanf_postdec_52b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041C2F9) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_52_good()
{
  goodG2B_115();
  return goodB2G_104();
}

//----- (000000000041C313) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_16_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return printHexCharLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041C35C) ----------------------------------------------------
int goodB2G_105()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041C3B9) ----------------------------------------------------
int goodG2B_116()
{
  return printHexCharLine(-3);
}

//----- (000000000041C3E9) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_16_good()
{
  goodB2G_105();
  return goodG2B_116();
}

//----- (000000000041C403) ----------------------------------------------------
int __fastcall badSink_18(int a1)
{
  int result; // eax

  result = badStatic_4;
  if ( badStatic_4 )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB2C8: using guessed type int badStatic_4;

//----- (000000000041C42E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_21_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  badStatic_4 = 1;
  return badSink_18(v2);
}
// 6AB2C8: using guessed type int badStatic_4;

//----- (000000000041C4A2) ----------------------------------------------------
int __fastcall goodB2G1Sink_4(int a1)
{
  if ( goodB2G1Static_4 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 - 1);
}
// 6AB2CC: using guessed type int goodB2G1Static_4;

//----- (000000000041C4EE) ----------------------------------------------------
int goodB2G1_72()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G1Static_4 = 0;
  return goodB2G1Sink_4(v2);
}
// 6AB2CC: using guessed type int goodB2G1Static_4;

//----- (000000000041C562) ----------------------------------------------------
int __fastcall goodB2G2Sink_4(int a1)
{
  int result; // eax

  result = goodB2G2Static_4;
  if ( goodB2G2Static_4 )
  {
    if ( a1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 - 1);
  }
  return result;
}
// 6AB2D0: using guessed type int goodB2G2Static_4;

//----- (000000000041C5A2) ----------------------------------------------------
int goodB2G2_72()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G2Static_4 = 1;
  return goodB2G2Sink_4(v2);
}
// 6AB2D0: using guessed type int goodB2G2Static_4;

//----- (000000000041C616) ----------------------------------------------------
int __fastcall goodG2BSink_18(int a1)
{
  int result; // eax

  result = goodG2BStatic_4;
  if ( goodG2BStatic_4 )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB2D4: using guessed type int goodG2BStatic_4;

//----- (000000000041C641) ----------------------------------------------------
int goodG2B_117()
{
  goodG2BStatic_4 = 1;
  return goodG2BSink_18(-2);
}
// 6AB2D4: using guessed type int goodG2BStatic_4;

//----- (000000000041C66D) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_21_good()
{
  goodB2G1_72();
  goodB2G2_72();
  return goodG2B_117();
}

//----- (000000000041C691) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_03_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 - 1);
}

//----- (000000000041C705) ----------------------------------------------------
int goodB2G1_73()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (000000000041C78E) ----------------------------------------------------
int goodB2G2_73()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (000000000041C817) ----------------------------------------------------
int goodG2B1_61()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000041C843) ----------------------------------------------------
int goodG2B2_61()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000041C86F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_03_good()
{
  goodB2G1_73();
  goodB2G2_73();
  goodG2B1_61();
  return goodG2B2_61();
}

//----- (000000000041C89D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54d_badSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54e_badSink(a1);
}

//----- (000000000041C8B4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54d_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54e_goodG2BSink(a1);
}

//----- (000000000041C8CB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54d_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54e_goodB2GSink(a1);
}

//----- (000000000041C8E2) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_connect_socket_postdec_65_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE191_Integer_Underflow__int_connect_socket_postdec_65b_badSink;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 41C8E2: using guessed type char buf[16];

//----- (000000000041C9D3) ----------------------------------------------------
int goodG2B_118()
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_65b_goodG2BSink(-2);
}

//----- (000000000041C9FE) ----------------------------------------------------
__int64 goodB2G_106()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE191_Integer_Underflow__int_connect_socket_postdec_65b_goodB2GSink;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 41C9FE: using guessed type char buf[16];

//----- (000000000041CAEF) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_connect_socket_postdec_65_good()
{
  goodG2B_118();
  return goodB2G_106();
}

//----- (000000000041CB09) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_67_bad()
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_67b_badSink(0);
}

//----- (000000000041CB31) ----------------------------------------------------
int goodG2B_119()
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_67b_goodG2BSink(-2);
}

//----- (000000000041CB59) ----------------------------------------------------
int goodB2G_107()
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_67b_goodB2GSink(0);
}

//----- (000000000041CB81) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_67_good()
{
  goodG2B_119();
  return goodB2G_107();
}

//----- (000000000041CB9B) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_14_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v6 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000041CC25) ----------------------------------------------------
int goodB2G1_74()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v6 )
    return printUnsignedLine(v6 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000041CCCD) ----------------------------------------------------
int goodB2G2_74()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v6 )
      result = printUnsignedLine(v6 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000041CD69) ----------------------------------------------------
int goodG2B1_62()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000041CDB7) ----------------------------------------------------
int goodG2B2_62()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000041CDF9) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_14_good()
{
  goodB2G1_74();
  goodB2G2_74();
  goodG2B1_62();
  return goodG2B2_62();
}

//----- (000000000041CE27) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_51_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE191_Integer_Underflow__char_fscanf_postdec_51b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041CE60) ----------------------------------------------------
int goodG2B_120()
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_51b_goodG2BSink(-2);
}

//----- (000000000041CE7D) ----------------------------------------------------
int goodB2G_108()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE191_Integer_Underflow__char_fscanf_postdec_51b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041CEB6) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_51_good()
{
  goodG2B_120();
  return goodB2G_108();
}

//----- (000000000041CED0) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_32_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+Ch] [rbp-24h]
  int *v8; // [rsp+10h] [rbp-20h]
  int *v9; // [rsp+18h] [rbp-18h]

  v9 = &v6;
  v8 = &v6;
  v6 = 0;
  v7 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v7 = v2;
  *v9 = v2;
  return printUnsignedLine(*v8 - 1);
}

//----- (000000000041CF6F) ----------------------------------------------------
int goodG2B_121()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -2;
  v1 = -2;
  v3 = -3;
  v2 = -3;
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000041CFC6) ----------------------------------------------------
int goodB2G_109()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+Ch] [rbp-24h]
  int *v9; // [rsp+10h] [rbp-20h]
  int *v10; // [rsp+18h] [rbp-18h]

  v10 = &v6;
  v9 = &v6;
  v6 = 0;
  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  *v10 = v2;
  v7 = *v9;
  if ( v7 )
    result = printUnsignedLine(v7 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000041D077) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_32_good()
{
  goodG2B_121();
  return goodB2G_109();
}

//----- (000000000041D091) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54c_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_min_postdec_54d_badSink(a1);
}

//----- (000000000041D0A8) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54c_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_min_postdec_54d_goodG2BSink(a1);
}

//----- (000000000041D0BF) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54c_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_min_postdec_54d_goodB2GSink(a1);
}

//----- (000000000041D0D6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54b_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_54c_badSink(a1);
}

//----- (000000000041D0ED) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_54c_goodG2BSink(a1);
}

//----- (000000000041D104) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_54c_goodB2GSink(a1);
}

//----- (000000000041D11B) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_12_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  else
  {
    v6 = -2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v6 - 1);
  if ( v6 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 - 1);
}

//----- (000000000041D1DF) ----------------------------------------------------
int goodB2G_110()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // ebx
  int v6; // ebx
  int v7; // eax
  int v8; // ebx
  int v9; // ebx
  int result; // eax
  int v11; // [rsp+Ch] [rbp-14h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v11 = v2;
  }
  else
  {
    if ( rand() & 1 )
    {
      v5 = rand() << 30;
      v6 = (rand() << 15) ^ v5;
      v7 = v6 ^ rand();
    }
    else
    {
      v8 = rand() << 30;
      v9 = (rand() << 15) ^ v8;
      v7 = ~(v9 ^ rand());
    }
    v11 = v7;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v11 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v11 - 1);
  }
  else if ( v11 == 0x80000000 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(v11 - 1);
  }
  return result;
}

//----- (000000000041D2FA) ----------------------------------------------------
int goodG2B_122()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000041D361) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_12_good()
{
  goodB2G_110();
  return goodG2B_122();
}

//----- (000000000041D37B) ----------------------------------------------------
int __fastcall badSink_19(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000041D39C) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_fgets_postdec_44_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = badSink_19;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000041D40D) ----------------------------------------------------
int __fastcall goodG2BSink_19(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000041D42E) ----------------------------------------------------
int goodG2B_123()
{
  return goodG2BSink_19(-2);
}

//----- (000000000041D459) ----------------------------------------------------
int __fastcall goodB2GSink_13(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000041D48F) ----------------------------------------------------
__int64 goodB2G_111()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = goodB2GSink_13;
  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000041D500) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_fgets_postdec_44_good()
{
  goodG2B_123();
  return goodB2G_111();
}

//----- (000000000041D51A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_53d_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000041D53B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000041D55C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000041D592) ----------------------------------------------------
int badSink_20()
{
  return printHexCharLine(CWE191_Integer_Underflow__char_fscanf_postdec_45_badData - 1);
}
// 6AB2D8: using guessed type char CWE191_Integer_Underflow__char_fscanf_postdec_45_badData;

//----- (000000000041D5C2) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_45_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE191_Integer_Underflow__char_fscanf_postdec_45_badData = v1;
  return badSink_20();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB2D8: using guessed type char CWE191_Integer_Underflow__char_fscanf_postdec_45_badData;

//----- (000000000041D601) ----------------------------------------------------
int goodG2BSink_20()
{
  return printHexCharLine(CWE191_Integer_Underflow__char_fscanf_postdec_45_goodG2BData - 1);
}
// 6AB2D9: using guessed type char CWE191_Integer_Underflow__char_fscanf_postdec_45_goodG2BData;

//----- (000000000041D631) ----------------------------------------------------
int goodG2B_124()
{
  CWE191_Integer_Underflow__char_fscanf_postdec_45_goodG2BData = -2;
  return goodG2BSink_20();
}
// 6AB2D9: using guessed type char CWE191_Integer_Underflow__char_fscanf_postdec_45_goodG2BData;

//----- (000000000041D657) ----------------------------------------------------
int goodB2GSink_14()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__char_fscanf_postdec_45_goodB2GData == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(CWE191_Integer_Underflow__char_fscanf_postdec_45_goodB2GData - 1);
  return result;
}
// 6AB2DA: using guessed type char CWE191_Integer_Underflow__char_fscanf_postdec_45_goodB2GData;

//----- (000000000041D699) ----------------------------------------------------
int goodB2G_112()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  CWE191_Integer_Underflow__char_fscanf_postdec_45_goodB2GData = v1;
  return goodB2GSink_14();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB2DA: using guessed type char CWE191_Integer_Underflow__char_fscanf_postdec_45_goodB2GData;

//----- (000000000041D6D8) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_45_good()
{
  goodG2B_124();
  return goodB2G_112();
}

//----- (000000000041D6F2) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_12_bad()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = 2147483648;
  else
    v1 = -2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v1 - 1);
  if ( v1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 - 1);
}

//----- (000000000041D76E) ----------------------------------------------------
int goodB2G_113()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041D7FF) ----------------------------------------------------
int goodG2B_125()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000041D866) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_12_good()
{
  goodB2G_113();
  return goodG2B_125();
}

//----- (000000000041D880) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_52_bad()
{
  return CWE191_Integer_Underflow__char_min_postdec_52b_badSink(-128);
}

//----- (000000000041D89D) ----------------------------------------------------
int goodG2B_126()
{
  return CWE191_Integer_Underflow__char_min_postdec_52b_goodG2BSink(-2);
}

//----- (000000000041D8BA) ----------------------------------------------------
int goodB2G_114()
{
  return CWE191_Integer_Underflow__char_min_postdec_52b_goodB2GSink(-128);
}

//----- (000000000041D8D7) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_52_good()
{
  goodG2B_126();
  return goodB2G_114();
}

//----- (000000000041D8F1) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_04_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 - 1);
}

//----- (000000000041D977) ----------------------------------------------------
int goodB2G1_75()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000041DA1B) ----------------------------------------------------
int goodB2G2_75()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000041DAB3) ----------------------------------------------------
int goodG2B1_63()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000041DAFD) ----------------------------------------------------
int goodG2B2_63()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000041DB3B) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_04_good()
{
  goodB2G1_75();
  goodB2G2_75();
  goodG2B1_63();
  return goodG2B2_63();
}

//----- (000000000041DB69) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_31_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 - 1);
}

//----- (000000000041DBE9) ----------------------------------------------------
int goodG2B_127()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000041DC21) ----------------------------------------------------
int goodB2G_115()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000041DCB3) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_31_good()
{
  goodG2B_127();
  return goodB2G_115();
}

//----- (000000000041DCCD) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_51b_badSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000041DCF8) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_51b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000041DD23) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_51b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (000000000041DD60) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54e_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000041DD8E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54e_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000041DDBC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54e_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (000000000041DDFE) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_18_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return printUnsignedLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041DE47) ----------------------------------------------------
int goodB2G_116()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 )
    result = printUnsignedLine(v1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041DEA3) ----------------------------------------------------
int goodG2B_128()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000041DED1) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_18_good()
{
  goodB2G_116();
  return goodG2B_128();
}

//----- (000000000041DEEB) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_16_bad()
{
  return printHexCharLine(127);
}

//----- (000000000041DF1B) ----------------------------------------------------
int goodB2G_117()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041DF5D) ----------------------------------------------------
int goodG2B_129()
{
  return printHexCharLine(-3);
}

//----- (000000000041DF8D) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_16_good()
{
  goodB2G_117();
  return goodG2B_129();
}

//----- (000000000041DFA7) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_11_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v6 - 1);
  return result;
}

//----- (000000000041E037) ----------------------------------------------------
int goodB2G1_76()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v6 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 - 1);
}

//----- (000000000041E0E8) ----------------------------------------------------
int goodB2G2_76()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v6 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 - 1);
  }
  return result;
}

//----- (000000000041E18D) ----------------------------------------------------
int goodG2B1_64()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (000000000041E1E1) ----------------------------------------------------
int goodG2B2_64()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (000000000041E229) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_11_good()
{
  goodB2G1_76();
  goodB2G2_76();
  goodG2B1_64();
  return goodG2B2_64();
}

//----- (000000000041E257) ----------------------------------------------------
__int64 staticReturnsTrue_2()
{
  return 1LL;
}

//----- (000000000041E262) ----------------------------------------------------
__int64 staticReturnsFalse_2()
{
  return 0LL;
}

//----- (000000000041E26D) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_08_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
    v1 = 2147483648;
  result = staticReturnsTrue_2();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (000000000041E2B5) ----------------------------------------------------
int goodB2G1_77()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
    v1 = 2147483648;
  if ( (unsigned int)staticReturnsFalse_2() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 - 1);
}

//----- (000000000041E31E) ----------------------------------------------------
int goodB2G2_77()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
    v1 = 2147483648;
  result = staticReturnsTrue_2();
  if ( result )
  {
    if ( v1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 - 1);
  }
  return result;
}

//----- (000000000041E37B) ----------------------------------------------------
int goodG2B1_65()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_2() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticReturnsTrue_2();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (000000000041E3CF) ----------------------------------------------------
int goodG2B2_65()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_2() )
    v1 = -2;
  result = staticReturnsTrue_2();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (000000000041E417) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_08_good()
{
  goodB2G1_77();
  goodB2G2_77();
  goodG2B1_65();
  return goodG2B2_65();
}

//----- (000000000041E445) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54d_badSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_54e_badSink(a1);
}

//----- (000000000041E45C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54d_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_54e_goodG2BSink(a1);
}

//----- (000000000041E473) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54d_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_54e_goodB2GSink(a1);
}

//----- (000000000041E48A) ----------------------------------------------------
int __fastcall badSink_21(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000041E4B1) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_44_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  int (__fastcall *v2)(__int64); // [rsp+8h] [rbp-8h]

  v2 = badSink_21;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return ((__int64 (__fastcall *)(__int64))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041E4F5) ----------------------------------------------------
int __fastcall goodG2BSink_21(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000041E51C) ----------------------------------------------------
int goodG2B_130()
{
  return goodG2BSink_21(-2LL);
}

//----- (000000000041E54B) ----------------------------------------------------
int __fastcall goodB2GSink_15(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (000000000041E58E) ----------------------------------------------------
__int64 goodB2G_118()
{
  __int64 v1; // [rsp+0h] [rbp-10h]
  int (__fastcall *v2)(__int64); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_15;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return ((__int64 (__fastcall *)(__int64))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041E5D2) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_44_good()
{
  goodG2B_130();
  return goodB2G_118();
}

//----- (000000000041E5EC) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_rand_postdec_61b_badSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000041E64B) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_rand_postdec_61b_goodG2BSource()
{
  return 4294967294LL;
}

//----- (000000000041E65E) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_rand_postdec_61b_goodB2GSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000041E6BD) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_10_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v6 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000041E745) ----------------------------------------------------
int goodB2G1_78()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v6 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 - 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000041E7EE) ----------------------------------------------------
int goodB2G2_78()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v6 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 - 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000041E88B) ----------------------------------------------------
int goodG2B1_66()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000041E8D7) ----------------------------------------------------
int goodG2B2_66()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000041E917) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_10_good()
{
  goodB2G1_78();
  goodB2G2_78();
  goodG2B1_66();
  return goodG2B2_66();
}

//----- (000000000041E945) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_badSink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_badGlobal;
  if ( CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_badGlobal )
    result = printUnsignedLine(a1 - 1);
  return result;
}
// 6AB2DC: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_badGlobal;

//----- (000000000041E970) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodB2G1Sink(int a1)
{
  if ( CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 )
    return printUnsignedLine(a1 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 6AB2E0: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodB2G1Global;

//----- (000000000041E9B9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodB2G2Global;
  if ( CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodB2G2Global )
  {
    if ( a1 )
      result = printUnsignedLine(a1 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 6AB2E4: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodB2G2Global;

//----- (000000000041E9F6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodG2BGlobal;
  if ( CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodG2BGlobal )
    result = printUnsignedLine(a1 - 1);
  return result;
}
// 6AB2E8: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodG2BGlobal;

//----- (000000000041EA21) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_51_bad()
{
  return CWE191_Integer_Underflow__char_min_postdec_51b_badSink(-128);
}

//----- (000000000041EA3E) ----------------------------------------------------
int goodG2B_131()
{
  return CWE191_Integer_Underflow__char_min_postdec_51b_goodG2BSink(-2);
}

//----- (000000000041EA5B) ----------------------------------------------------
int goodB2G_119()
{
  return CWE191_Integer_Underflow__char_min_postdec_51b_goodB2GSink(-128);
}

//----- (000000000041EA78) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_51_good()
{
  goodG2B_131();
  return goodB2G_119();
}

//----- (000000000041EA92) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_15_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 - 1));
}

//----- (000000000041EB08) ----------------------------------------------------
int goodB2G1_79()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (000000000041EB92) ----------------------------------------------------
int goodB2G2_79()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (000000000041EC1C) ----------------------------------------------------
int goodG2B1_67()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000041EC52) ----------------------------------------------------
int goodG2B2_67()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000041EC88) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_15_good()
{
  goodB2G1_79();
  goodB2G2_79();
  goodG2B1_67();
  return goodG2B2_67();
}

//----- (000000000041ECB6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54b_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_min_postdec_54c_badSink(a1);
}

//----- (000000000041ECCD) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_min_postdec_54c_goodG2BSink(a1);
}

//----- (000000000041ECE4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_min_postdec_54c_goodB2GSink(a1);
}

//----- (000000000041ECFB) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_01_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 - 1);
}

//----- (000000000041ED6F) ----------------------------------------------------
int goodG2B_132()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000041ED9B) ----------------------------------------------------
int goodB2G_120()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (000000000041EE24) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_01_good()
{
  goodG2B_132();
  return goodB2G_120();
}

//----- (000000000041EE3E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_67b_badSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000041EE6F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_67b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000041EEA0) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_67b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (000000000041EEE3) ----------------------------------------------------
__int64 badSource_3()
{
  int v0; // ebx
  __int64 result; // rax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(result) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    LODWORD(result) = ~(v2 ^ rand());
  }
  return (unsigned __int16)result;
}

//----- (000000000041EF3D) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_42_bad()
{
  __int16 v0; // ax

  v0 = (unsigned __int64)badSource_3() - 1;
  return printIntLine(v0);
}

//----- (000000000041EF7A) ----------------------------------------------------
__int64 goodG2BSource_3()
{
  return 65534LL;
}

//----- (000000000041EF90) ----------------------------------------------------
int goodG2B_133()
{
  __int16 v0; // ax

  v0 = (unsigned __int64)goodG2BSource_3() - 1;
  return printIntLine(v0);
}

//----- (000000000041EFCD) ----------------------------------------------------
__int64 goodB2GSource_3()
{
  int v0; // ebx
  __int64 result; // rax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(result) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    LODWORD(result) = ~(v2 ^ rand());
  }
  return (unsigned __int16)result;
}

//----- (000000000041F027) ----------------------------------------------------
int goodB2G_121()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = goodB2GSource_3();
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (000000000041F078) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_42_good()
{
  goodB2G_121();
  return goodG2B_133();
}

//----- (000000000041F092) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_53c_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_53d_badSink(a1);
}

//----- (000000000041F0A9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_53c_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_53d_goodG2BSink(a1);
}

//----- (000000000041F0C0) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_53c_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_53d_goodB2GSink(a1);
}

//----- (000000000041F0D7) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_11_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041F13E) ----------------------------------------------------
int goodB2G1_80()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041F1C7) ----------------------------------------------------
int goodB2G2_80()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 - 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041F244) ----------------------------------------------------
int goodG2B1_68()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (000000000041F2A0) ----------------------------------------------------
int goodG2B2_68()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (000000000041F2F0) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_11_good()
{
  goodB2G1_80();
  goodB2G2_80();
  goodG2B1_68();
  return goodG2B2_68();
}

//----- (000000000041F31E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_06_bad()
{
  return printHexCharLine(127);
}

//----- (000000000041F360) ----------------------------------------------------
int goodB2G1_81()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041F3C0) ----------------------------------------------------
int goodB2G2_81()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041F414) ----------------------------------------------------
int goodG2B1_69()
{
  return printHexCharLine(253);
}

//----- (000000000041F462) ----------------------------------------------------
int goodG2B2_69()
{
  return printHexCharLine(253);
}

//----- (000000000041F4A4) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_06_good()
{
  goodB2G1_81();
  goodB2G2_81();
  goodG2B1_69();
  return goodG2B2_69();
}

//----- (000000000041F4D2) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_badGlobal = 1;
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_badSink(v2);
}
// 6AB2DC: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_badGlobal;

//----- (000000000041F546) ----------------------------------------------------
int goodB2G1_82()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodB2G1Global = 0;
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodB2G1Sink(v2);
}
// 6AB2E0: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodB2G1Global;

//----- (000000000041F5BA) ----------------------------------------------------
int goodB2G2_82()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodB2G2Global = 1;
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodB2G2Sink(v2);
}
// 6AB2E4: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodB2G2Global;

//----- (000000000041F62E) ----------------------------------------------------
int goodG2B_134()
{
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodG2BGlobal = 1;
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodG2BSink(-2);
}
// 6AB2E8: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_goodG2BGlobal;

//----- (000000000041F65A) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_22_good()
{
  goodB2G1_82();
  goodB2G2_82();
  return goodG2B_134();
}

//----- (000000000041F67E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_09_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v6 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041F706) ----------------------------------------------------
int goodB2G1_83()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v6 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 - 1);
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041F7AF) ----------------------------------------------------
int goodB2G2_83()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v6 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 - 1);
  }
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041F84C) ----------------------------------------------------
int goodG2B1_70()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041F898) ----------------------------------------------------
int goodG2B2_70()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041F8D8) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_09_good()
{
  goodB2G1_83();
  goodB2G2_83();
  goodG2B1_70();
  return goodG2B2_70();
}

//----- (000000000041F906) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_18_bad()
{
  return printUnsignedLine(0xFFFFFFFF);
}

//----- (000000000041F934) ----------------------------------------------------
int goodB2G_122()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000041F974) ----------------------------------------------------
int goodG2B_135()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000041F9A2) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_18_good()
{
  goodB2G_122();
  return goodG2B_135();
}

//----- (000000000041F9BC) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_05_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticTrue_3 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticTrue_3;
  if ( staticTrue_3 )
    result = printIntLine((__int16)(v4 - 1));
  return result;
}
// 6AB148: using guessed type int staticTrue_3;

//----- (000000000041FA44) ----------------------------------------------------
int goodB2G1_84()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticTrue_3 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( staticFalse_3 )
    return printLine("Benign, fixed string");
  if ( v4 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 - 1));
}
// 6AB148: using guessed type int staticTrue_3;
// 6AB2EC: using guessed type int staticFalse_3;

//----- (000000000041FAEC) ----------------------------------------------------
int goodB2G2_84()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticTrue_3 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticTrue_3;
  if ( staticTrue_3 )
  {
    if ( v4 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 - 1));
  }
  return result;
}
// 6AB148: using guessed type int staticTrue_3;

//----- (000000000041FB88) ----------------------------------------------------
int goodG2B1_71()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFalse_3 )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticTrue_3;
  if ( staticTrue_3 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB148: using guessed type int staticTrue_3;
// 6AB2EC: using guessed type int staticFalse_3;

//----- (000000000041FBDC) ----------------------------------------------------
int goodG2B2_71()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticTrue_3 )
    v1 = -2;
  result = staticTrue_3;
  if ( staticTrue_3 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB148: using guessed type int staticTrue_3;

//----- (000000000041FC24) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_05_good()
{
  goodB2G1_84();
  goodB2G2_84();
  goodG2B1_71();
  return goodG2B2_71();
}

//----- (000000000041FC52) ----------------------------------------------------
int __fastcall badSink_22(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000041FC80) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_41_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return badSink_22(v1);
}

//----- (000000000041FCE1) ----------------------------------------------------
int __fastcall goodG2BSink_22(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000041FD0F) ----------------------------------------------------
int goodG2B_136()
{
  return goodG2BSink_22(-2);
}

//----- (000000000041FD30) ----------------------------------------------------
int __fastcall goodB2GSink_16(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (000000000041FD72) ----------------------------------------------------
int goodB2G_123()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return goodB2GSink_16(v1);
}

//----- (000000000041FDD3) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_41_good()
{
  goodB2G_123();
  return goodG2B_136();
}

//----- (000000000041FDED) ----------------------------------------------------
int __fastcall badSink_23(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000041FE14) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_44_bad()
{
  return badSink_23(0x8000000000000000LL);
}

//----- (000000000041FE49) ----------------------------------------------------
int __fastcall goodG2BSink_23(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000041FE70) ----------------------------------------------------
int goodG2B_137()
{
  return goodG2BSink_23(-2LL);
}

//----- (000000000041FE9F) ----------------------------------------------------
int __fastcall goodB2GSink_17(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (000000000041FEE2) ----------------------------------------------------
int goodB2G_124()
{
  return goodB2GSink_17(0x8000000000000000LL);
}

//----- (000000000041FF17) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_44_good()
{
  goodG2B_137();
  return goodB2G_124();
}

//----- (000000000041FF31) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_53d_badSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000041FF5C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_53d_goodG2BSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000041FF87) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_53d_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (000000000041FFC4) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_68b_badSink()
{
  return printIntLine(CWE191_Integer_Underflow__int_fscanf_postdec_68_badData - 1);
}
// 6AB568: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_68_badData;

//----- (000000000041FFEB) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_68b_goodG2BSink()
{
  return printIntLine(CWE191_Integer_Underflow__int_fscanf_postdec_68_goodG2BData - 1);
}
// 6AB564: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_68_goodG2BData;

//----- (0000000000420012) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__int_fscanf_postdec_68_goodB2GData == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE191_Integer_Underflow__int_fscanf_postdec_68_goodB2GData - 1);
  return result;
}
// 6AB560: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_68_goodB2GData;

//----- (000000000042004E) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_63_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE191_Integer_Underflow__int64_t_rand_postdec_63b_badSink(&v10);
}

//----- (000000000042010B) ----------------------------------------------------
int goodG2B_138()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = -2LL;
  return CWE191_Integer_Underflow__int64_t_rand_postdec_63b_goodG2BSink(&v1);
}

//----- (0000000000420131) ----------------------------------------------------
int goodB2G_125()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE191_Integer_Underflow__int64_t_rand_postdec_63b_goodB2GSink(&v10);
}

//----- (00000000004201EE) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_63_good()
{
  goodG2B_138();
  return goodB2G_125();
}

//----- (0000000000420208) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_34_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 - 1));
}

//----- (000000000042028C) ----------------------------------------------------
int goodG2B_139()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (00000000004202D0) ----------------------------------------------------
int goodB2G_126()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (0000000000420368) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_34_good()
{
  goodG2B_139();
  return goodB2G_126();
}

//----- (0000000000420382) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_66b_badSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) - 1));
}

//----- (00000000004203BA) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_66b_goodG2BSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) - 1));
}

//----- (00000000004203F2) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int16 v2; // [rsp+1Eh] [rbp-2h]

  v2 = *(_WORD *)(a1 + 4);
  if ( v2 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v2 - 1));
  return result;
}

//----- (000000000042043E) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_11_bad()
{
  int result; // eax

  globalReturnsTrue();
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(0xFFFFFFFF);
  return result;
}

//----- (0000000000420486) ----------------------------------------------------
int goodB2G1_85()
{
  int result; // eax

  globalReturnsTrue();
  if ( (unsigned int)globalReturnsFalse() )
    result = printLine("Benign, fixed string");
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (00000000004204EC) ----------------------------------------------------
int goodB2G2_85()
{
  int result; // eax

  globalReturnsTrue();
  result = globalReturnsTrue();
  if ( result )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000420546) ----------------------------------------------------
int goodG2B1_72()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 - 1);
  return result;
}

//----- (000000000042059A) ----------------------------------------------------
int goodG2B2_72()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 - 1);
  return result;
}

//----- (00000000004205E2) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_11_good()
{
  goodB2G1_85();
  goodB2G2_85();
  goodG2B1_72();
  return goodG2B2_72();
}

//----- (0000000000420610) ----------------------------------------------------
__int64 staticReturnsTrue_3()
{
  return 1LL;
}

//----- (000000000042061B) ----------------------------------------------------
__int64 staticReturnsFalse_3()
{
  return 0LL;
}

//----- (0000000000420626) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_08_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_3() )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = staticReturnsTrue_3();
  if ( result )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000420689) ----------------------------------------------------
int goodB2G1_86()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_3() )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( (unsigned int)staticReturnsFalse_3() )
    return printLine("Benign, fixed string");
  if ( v1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042070C) ----------------------------------------------------
int goodB2G2_86()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_3() )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = staticReturnsTrue_3();
  if ( result )
  {
    if ( v1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000420783) ----------------------------------------------------
int goodG2B1_73()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsFalse_3() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticReturnsTrue_3();
  if ( result )
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (00000000004207D9) ----------------------------------------------------
int goodG2B2_73()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_3() )
    v1 = -2;
  result = staticReturnsTrue_3();
  if ( result )
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (0000000000420823) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_08_good()
{
  goodB2G1_86();
  goodB2G2_86();
  goodG2B1_73();
  return goodG2B2_73();
}

//----- (0000000000420851) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_53b_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_53c_badSink(a1);
}

//----- (0000000000420868) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_53b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_53c_goodG2BSink(a1);
}

//----- (000000000042087F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_53b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_53c_goodB2GSink(a1);
}

//----- (0000000000420896) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_61_bad()
{
  int v0; // eax

  v0 = CWE191_Integer_Underflow__int_fgets_postdec_61b_badSource(0);
  return printIntLine(v0 - 1);
}

//----- (00000000004208C8) ----------------------------------------------------
int goodG2B_140()
{
  int v0; // eax

  v0 = CWE191_Integer_Underflow__int_fgets_postdec_61b_goodG2BSource();
  return printIntLine(v0 - 1);
}

//----- (00000000004208FA) ----------------------------------------------------
int goodB2G_127()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE191_Integer_Underflow__int_fgets_postdec_61b_goodB2GSource(0);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}

//----- (0000000000420941) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_61_good()
{
  goodG2B_140();
  return goodB2G_127();
}

//----- (000000000042095B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_53c_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_min_postdec_53d_badSink(a1);
}

//----- (0000000000420972) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_53c_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_min_postdec_53d_goodG2BSink(a1);
}

//----- (0000000000420989) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_53c_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_min_postdec_53d_goodB2GSink(a1);
}

//----- (00000000004209A0) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_07_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( staticFive_4 == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticFive_4;
  if ( staticFive_4 == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB14C: using guessed type int staticFive_4;

//----- (0000000000420A05) ----------------------------------------------------
int goodB2G1_87()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( staticFive_4 == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( staticFive_4 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB14C: using guessed type int staticFive_4;

//----- (0000000000420A95) ----------------------------------------------------
int goodB2G2_87()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( staticFive_4 == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticFive_4;
  if ( staticFive_4 == 5 )
  {
    if ( v1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB14C: using guessed type int staticFive_4;

//----- (0000000000420B19) ----------------------------------------------------
int goodG2B1_74()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_4 == 5 )
    v1 = -2LL;
  else
    printLine("Benign, fixed string");
  result = staticFive_4;
  if ( staticFive_4 == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB14C: using guessed type int staticFive_4;

//----- (0000000000420B6E) ----------------------------------------------------
int goodG2B2_74()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_4 == 5 )
    v1 = -2LL;
  result = staticFive_4;
  if ( staticFive_4 == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB14C: using guessed type int staticFive_4;

//----- (0000000000420BB7) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_07_good()
{
  goodB2G1_87();
  goodB2G2_87();
  goodG2B1_74();
  return goodG2B2_74();
}

//----- (0000000000420BE5) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_52c_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000420C06) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000420C27) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (0000000000420C5D) ----------------------------------------------------
__int64 staticReturnsTrue_4()
{
  return 1LL;
}

//----- (0000000000420C68) ----------------------------------------------------
__int64 staticReturnsFalse_4()
{
  return 0LL;
}

//----- (0000000000420C73) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_08_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_4() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticReturnsTrue_4();
  if ( result )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000420CD6) ----------------------------------------------------
int goodB2G1_88()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_4() )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( (unsigned int)staticReturnsFalse_4() )
    return printLine("Benign, fixed string");
  if ( v1 )
    return printUnsignedLine(v1 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000420D58) ----------------------------------------------------
int goodB2G2_88()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_4() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticReturnsTrue_4();
  if ( result )
  {
    if ( v1 )
      result = printUnsignedLine(v1 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000420DCE) ----------------------------------------------------
int goodG2B1_75()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_4() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticReturnsTrue_4();
  if ( result )
    result = printUnsignedLine(v1 - 1);
  return result;
}

//----- (0000000000420E22) ----------------------------------------------------
int goodG2B2_75()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_4() )
    v1 = -2;
  result = staticReturnsTrue_4();
  if ( result )
    result = printUnsignedLine(v1 - 1);
  return result;
}

//----- (0000000000420E6A) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_08_good()
{
  goodB2G1_88();
  goodB2G2_88();
  goodG2B1_75();
  return goodG2B2_75();
}

//----- (0000000000420E98) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_03_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 - 1);
}

//----- (0000000000420F0C) ----------------------------------------------------
int goodB2G1_89()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000420F92) ----------------------------------------------------
int goodB2G2_89()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000421018) ----------------------------------------------------
int goodG2B1_76()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000421044) ----------------------------------------------------
int goodG2B2_76()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000421070) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_03_good()
{
  goodB2G1_89();
  goodB2G2_89();
  goodG2B1_76();
  return goodG2B2_76();
}

//----- (000000000042109E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_68_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE191_Integer_Underflow__int_fscanf_postdec_68_badData = v1;
  return CWE191_Integer_Underflow__int_fscanf_postdec_68b_badSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB568: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_68_badData;

//----- (00000000004210DF) ----------------------------------------------------
int goodG2B_141()
{
  CWE191_Integer_Underflow__int_fscanf_postdec_68_goodG2BData = -2;
  return CWE191_Integer_Underflow__int_fscanf_postdec_68b_goodG2BSink();
}
// 6AB564: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_68_goodG2BData;

//----- (000000000042110A) ----------------------------------------------------
int goodB2G_128()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE191_Integer_Underflow__int_fscanf_postdec_68_goodB2GData = v1;
  return CWE191_Integer_Underflow__int_fscanf_postdec_68b_goodB2GSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB560: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_68_goodB2GData;

//----- (000000000042114B) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_68_good()
{
  goodG2B_141();
  return goodB2G_128();
}

//----- (0000000000421165) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_10_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2147483648;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (00000000004211A5) ----------------------------------------------------
int goodB2G1_90()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2147483648;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 - 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000421206) ----------------------------------------------------
int goodB2G2_90()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = 2147483648;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 - 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000042125B) ----------------------------------------------------
int goodG2B1_77()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (00000000004212A7) ----------------------------------------------------
int goodG2B2_77()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (00000000004212E7) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_10_good()
{
  goodB2G1_90();
  goodB2G2_90();
  goodG2B1_77();
  return goodG2B2_77();
}

//----- (0000000000421315) ----------------------------------------------------
void CWE191_Integer_Underflow__int64_t_rand_postdec_17_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // [rsp+10h] [rbp-20h]
  int j; // [rsp+18h] [rbp-18h]
  int i; // [rsp+1Ch] [rbp-14h]

  v9 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v9 = v4;
  }
  for ( j = 0; j <= 0; ++j )
    printLongLongLine(--v9);
}

//----- (000000000042140C) ----------------------------------------------------
void goodB2G_129()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // [rsp+10h] [rbp-20h]
  int j; // [rsp+18h] [rbp-18h]
  int i; // [rsp+1Ch] [rbp-14h]

  v9 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v9 = v4;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v9 == 0x8000000000000000LL )
      printLine("data value is too large to perform arithmetic safely.");
    else
      printLongLongLine(--v9);
  }
}

//----- (000000000042151F) ----------------------------------------------------
int goodG2B_142()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    v1 = -2LL;
  for ( j = 0; j <= 0; ++j )
    result = printLongLongLine(--v1);
  return result;
}

//----- (0000000000421578) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_17_good()
{
  goodB2G_129();
  return goodG2B_142();
}

//----- (0000000000421592) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54e_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (00000000004215B3) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (00000000004215D4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000042160A) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_53_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE191_Integer_Underflow__int_fscanf_postdec_53b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000421642) ----------------------------------------------------
int goodG2B_143()
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_53b_goodG2BSink(-2);
}

//----- (0000000000421664) ----------------------------------------------------
int goodB2G_130()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE191_Integer_Underflow__int_fscanf_postdec_53b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042169C) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_53_good()
{
  goodG2B_143();
  return goodB2G_130();
}

//----- (00000000004216B6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54c_badSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_54d_badSink(a1);
}

//----- (00000000004216CD) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54c_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_54d_goodG2BSink(a1);
}

//----- (00000000004216E4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54c_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_54d_goodB2GSink(a1);
}

//----- (00000000004216FB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54b_badSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54c_badSink(a1);
}

//----- (0000000000421712) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54c_goodG2BSink(a1);
}

//----- (0000000000421729) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54c_goodB2GSink(a1);
}

//----- (0000000000421740) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_12_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  else
  {
    v6 = -2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printUnsignedLine(v6 - 1);
  if ( v6 )
    return printUnsignedLine(v6 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000421801) ----------------------------------------------------
int goodB2G_131()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v5; // ebx
  int v6; // ebx
  int v7; // eax
  int v8; // ebx
  int v9; // ebx
  int result; // eax
  int v11; // [rsp+Ch] [rbp-14h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v11 = v2;
  }
  else
  {
    if ( rand() & 1 )
    {
      v5 = rand() << 30;
      v6 = (rand() << 15) ^ v5;
      v7 = v6 ^ rand();
    }
    else
    {
      v8 = rand() << 30;
      v9 = (rand() << 15) ^ v8;
      v7 = ~(v9 ^ rand());
    }
    v11 = v7;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v11 )
      result = printUnsignedLine(v11 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  else if ( v11 )
  {
    result = printUnsignedLine(v11 - 1);
  }
  else
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}

//----- (0000000000421916) ----------------------------------------------------
int goodG2B_144()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000042197D) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_12_good()
{
  goodB2G_131();
  return goodG2B_144();
}

//----- (0000000000421997) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54e_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (00000000004219B8) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (00000000004219D9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (0000000000421A0F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_68b_badSink()
{
  return printIntLine(CWE191_Integer_Underflow__int_min_postdec_68_badData - 1);
}
// 6AB570: using guessed type int CWE191_Integer_Underflow__int_min_postdec_68_badData;

//----- (0000000000421A36) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_68b_goodG2BSink()
{
  return printIntLine(CWE191_Integer_Underflow__int_min_postdec_68_goodG2BData - 1);
}
// 6AB56C: using guessed type int CWE191_Integer_Underflow__int_min_postdec_68_goodG2BData;

//----- (0000000000421A5D) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__int_min_postdec_68_goodB2GData == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE191_Integer_Underflow__int_min_postdec_68_goodB2GData - 1);
  return result;
}
// 6AB574: using guessed type int CWE191_Integer_Underflow__int_min_postdec_68_goodB2GData;

//----- (0000000000421A99) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_64b_badSink(_BYTE *a1)
{
  return printHexCharLine(*a1 - 1);
}

//----- (0000000000421AD5) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_64b_goodG2BSink(_BYTE *a1)
{
  return printHexCharLine(*a1 - 1);
}

//----- (0000000000421B11) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_64b_goodB2GSink(_BYTE *a1)
{
  int result; // eax

  if ( *a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(*a1 - 1);
  return result;
}

//----- (0000000000421B5F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_53d_badSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000421B80) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_53d_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000421BA1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000421BD4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_65b_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000421BF5) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000421C16) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (0000000000421C4C) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_15_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 - 1);
}

//----- (0000000000421CC0) ----------------------------------------------------
int goodB2G1_91()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 - 1);
  return result;
}

//----- (0000000000421D49) ----------------------------------------------------
int goodB2G2_91()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 - 1);
  return result;
}

//----- (0000000000421DD2) ----------------------------------------------------
int goodG2B1_78()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000421E00) ----------------------------------------------------
int goodG2B2_78()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000421E2E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_15_good()
{
  goodB2G1_91();
  goodB2G2_91();
  goodG2B1_78();
  return goodG2B2_78();
}

//----- (0000000000421E5C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_67b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (0000000000421E90) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_67b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (0000000000421EC4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_67b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (0000000000421F0C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_66b_badSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) - 1);
}

//----- (0000000000421F38) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_66b_goodG2BSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) - 1);
}

//----- (0000000000421F64) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000421FA2) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_53b_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_min_postdec_53c_badSink(a1);
}

//----- (0000000000421FB9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_53b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_min_postdec_53c_goodG2BSink(a1);
}

//----- (0000000000421FD0) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_53b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_min_postdec_53c_goodB2GSink(a1);
}

//----- (0000000000421FE7) ----------------------------------------------------
__int64 __fastcall badSource_4(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (0000000000422044) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_42_bad()
{
  int v0; // eax

  v0 = badSource_4(0);
  return printIntLine(v0 - 1);
}

//----- (0000000000422076) ----------------------------------------------------
__int64 goodG2BSource_4()
{
  return 4294967294LL;
}

//----- (0000000000422089) ----------------------------------------------------
int goodG2B_145()
{
  int v0; // eax

  v0 = goodG2BSource_4();
  return printIntLine(v0 - 1);
}

//----- (00000000004220BB) ----------------------------------------------------
__int64 __fastcall goodB2GSource_4(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (0000000000422118) ----------------------------------------------------
int goodB2G_132()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_4(0);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}

//----- (000000000042215F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_42_good()
{
  goodB2G_132();
  return goodG2B_145();
}

//----- (0000000000422179) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_63_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE191_Integer_Underflow__short_fscanf_postdec_63b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004221B2) ----------------------------------------------------
int goodG2B_146()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = -2;
  return CWE191_Integer_Underflow__short_fscanf_postdec_63b_goodG2BSink(&v1);
}

//----- (00000000004221D4) ----------------------------------------------------
int goodB2G_133()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE191_Integer_Underflow__short_fscanf_postdec_63b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042220D) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_63_good()
{
  goodG2B_146();
  return goodB2G_133();
}

//----- (0000000000422227) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042225F) ----------------------------------------------------
int goodG2B_147()
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54b_goodG2BSink(-2);
}

//----- (0000000000422281) ----------------------------------------------------
int goodB2G_134()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004222B9) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54_good()
{
  goodG2B_147();
  return goodB2G_134();
}

//----- (00000000004222D3) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_52c_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (00000000004222F4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000422315) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000042234B) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_11_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v6 - 1);
  return result;
}

//----- (00000000004223DB) ----------------------------------------------------
int goodB2G1_92()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v6 )
    return printUnsignedLine(v6 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000422489) ----------------------------------------------------
int goodB2G2_92()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v6 )
      result = printUnsignedLine(v6 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}

//----- (000000000042252B) ----------------------------------------------------
int goodG2B1_79()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 - 1);
  return result;
}

//----- (000000000042257F) ----------------------------------------------------
int goodG2B2_79()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 - 1);
  return result;
}

//----- (00000000004225C7) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_11_good()
{
  goodB2G1_92();
  goodB2G2_92();
  goodG2B1_79();
  return goodG2B2_79();
}

//----- (00000000004225F5) ----------------------------------------------------
__int64 staticReturnsTrue_5()
{
  return 1LL;
}

//----- (0000000000422600) ----------------------------------------------------
__int64 staticReturnsFalse_5()
{
  return 0LL;
}

//----- (000000000042260B) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_08_bad()
{
  int result; // eax

  staticReturnsTrue_5();
  result = staticReturnsTrue_5();
  if ( result )
    result = printUnsignedLine(0xFFFFFFFF);
  return result;
}

//----- (0000000000422653) ----------------------------------------------------
int goodB2G1_93()
{
  int result; // eax

  staticReturnsTrue_5();
  if ( (unsigned int)staticReturnsFalse_5() )
    result = printLine("Benign, fixed string");
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (00000000004226B9) ----------------------------------------------------
int goodB2G2_93()
{
  int result; // eax

  staticReturnsTrue_5();
  result = staticReturnsTrue_5();
  if ( result )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000422713) ----------------------------------------------------
int goodG2B1_80()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_5() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticReturnsTrue_5();
  if ( result )
    result = printUnsignedLine(v1 - 1);
  return result;
}

//----- (0000000000422767) ----------------------------------------------------
int goodG2B2_80()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_5() )
    v1 = -2;
  result = staticReturnsTrue_5();
  if ( result )
    result = printUnsignedLine(v1 - 1);
  return result;
}

//----- (00000000004227AF) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_08_good()
{
  goodB2G1_93();
  goodB2G2_93();
  goodG2B1_80();
  return goodG2B2_80();
}

//----- (00000000004227DD) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_64_bad()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v2 = v0;
  return CWE191_Integer_Underflow__char_rand_postdec_64b_badSink(&v2);
}

//----- (0000000000422828) ----------------------------------------------------
int goodG2B_148()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = -2;
  return CWE191_Integer_Underflow__char_rand_postdec_64b_goodG2BSink(&v1);
}

//----- (0000000000422846) ----------------------------------------------------
int goodB2G_135()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v2 = v0;
  return CWE191_Integer_Underflow__char_rand_postdec_64b_goodB2GSink(&v2);
}

//----- (0000000000422891) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_64_good()
{
  goodG2B_148();
  return goodB2G_135();
}

//----- (00000000004228AB) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_68_bad()
{
  CWE191_Integer_Underflow__int_min_postdec_68_badData = 2147483648;
  return CWE191_Integer_Underflow__int_min_postdec_68b_badSink();
}
// 6AB570: using guessed type int CWE191_Integer_Underflow__int_min_postdec_68_badData;

//----- (00000000004228D6) ----------------------------------------------------
int goodG2B_149()
{
  CWE191_Integer_Underflow__int_min_postdec_68_goodG2BData = -2;
  return CWE191_Integer_Underflow__int_min_postdec_68b_goodG2BSink();
}
// 6AB56C: using guessed type int CWE191_Integer_Underflow__int_min_postdec_68_goodG2BData;

//----- (0000000000422901) ----------------------------------------------------
int goodB2G_136()
{
  CWE191_Integer_Underflow__int_min_postdec_68_goodB2GData = 2147483648;
  return CWE191_Integer_Underflow__int_min_postdec_68b_goodB2GSink();
}
// 6AB574: using guessed type int CWE191_Integer_Underflow__int_min_postdec_68_goodB2GData;

//----- (000000000042292C) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_68_good()
{
  goodG2B_149();
  return goodB2G_136();
}

//----- (0000000000422946) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_rand_postdec_65_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE191_Integer_Underflow__int_rand_postdec_65b_badSink)(v2);
}

//----- (00000000004229B9) ----------------------------------------------------
int goodG2B_150()
{
  return CWE191_Integer_Underflow__int_rand_postdec_65b_goodG2BSink(-2);
}

//----- (00000000004229E4) ----------------------------------------------------
__int64 goodB2G_137()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE191_Integer_Underflow__int_rand_postdec_65b_goodB2GSink)(v2);
}

//----- (0000000000422A57) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_rand_postdec_65_good()
{
  goodG2B_150();
  return goodB2G_137();
}

//----- (0000000000422A71) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (0000000000422AA4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (0000000000422AD7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 - 1);
  return result;
}

//----- (0000000000422B1F) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_61_bad()
{
  __int64 v0; // rax

  v0 = CWE191_Integer_Underflow__int64_t_rand_postdec_61b_badSource();
  return printLongLongLine(v0 - 1);
}

//----- (0000000000422B5A) ----------------------------------------------------
int goodG2B_151()
{
  __int64 v0; // rax

  v0 = CWE191_Integer_Underflow__int64_t_rand_postdec_61b_goodG2BSource();
  return printLongLongLine(v0 - 1);
}

//----- (0000000000422B95) ----------------------------------------------------
int goodB2G_138()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = CWE191_Integer_Underflow__int64_t_rand_postdec_61b_goodB2GSource();
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (0000000000422BEC) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_61_good()
{
  goodG2B_151();
  return goodB2G_138();
}

//----- (0000000000422C06) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_10_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v6 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000422C8E) ----------------------------------------------------
int goodB2G1_94()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v6 )
    return printUnsignedLine(v6 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000422D34) ----------------------------------------------------
int goodB2G2_94()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v6 )
      result = printUnsignedLine(v6 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000422DCE) ----------------------------------------------------
int goodG2B1_81()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000422E1A) ----------------------------------------------------
int goodG2B2_81()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000422E5A) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_10_good()
{
  goodB2G1_94();
  goodB2G2_94();
  goodG2B1_81();
  return goodG2B2_81();
}

//----- (0000000000422E88) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_67_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE191_Integer_Underflow__short_fscanf_postdec_67b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000422EC8) ----------------------------------------------------
int goodG2B_152()
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_67b_goodG2BSink(65534);
}

//----- (0000000000422EF1) ----------------------------------------------------
int goodB2G_139()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE191_Integer_Underflow__short_fscanf_postdec_67b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000422F31) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_67_good()
{
  goodG2B_152();
  return goodB2G_139();
}

//----- (0000000000422F4B) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_07_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticFive_5 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticFive_5;
  if ( staticFive_5 == 5 )
    result = printLongLongLine(v10 - 1);
  return result;
}
// 6AB150: using guessed type int staticFive_5;

//----- (000000000042302F) ----------------------------------------------------
int goodB2G1_95()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticFive_5 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( staticFive_5 != 5 )
    return printLine("Benign, fixed string");
  if ( v10 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 - 1);
}
// 6AB150: using guessed type int staticFive_5;

//----- (000000000042313B) ----------------------------------------------------
int goodB2G2_95()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticFive_5 == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticFive_5;
  if ( staticFive_5 == 5 )
  {
    if ( v10 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 - 1);
  }
  return result;
}
// 6AB150: using guessed type int staticFive_5;

//----- (000000000042323B) ----------------------------------------------------
int goodG2B1_82()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_5 == 5 )
    v1 = -2LL;
  else
    printLine("Benign, fixed string");
  result = staticFive_5;
  if ( staticFive_5 == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB150: using guessed type int staticFive_5;

//----- (0000000000423290) ----------------------------------------------------
int goodG2B2_82()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_5 == 5 )
    v1 = -2LL;
  result = staticFive_5;
  if ( staticFive_5 == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB150: using guessed type int staticFive_5;

//----- (00000000004232D9) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_07_good()
{
  goodB2G1_95();
  goodB2G2_95();
  goodG2B1_82();
  return goodG2B2_82();
}

//----- (0000000000423307) ----------------------------------------------------
int __fastcall badSink_24(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000423328) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_41_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return badSink_24(v4);
}

//----- (0000000000423390) ----------------------------------------------------
int __fastcall goodG2BSink_24(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (00000000004233B1) ----------------------------------------------------
int goodG2B_153()
{
  return goodG2BSink_24(-2);
}

//----- (00000000004233D3) ----------------------------------------------------
int __fastcall goodB2GSink_18(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (0000000000423409) ----------------------------------------------------
int goodB2G_140()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return goodB2GSink_18(v4);
}

//----- (0000000000423471) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_41_good()
{
  goodB2G_140();
  return goodG2B_153();
}

//----- (000000000042348B) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_52_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE191_Integer_Underflow__int_fscanf_postdec_52b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004234C3) ----------------------------------------------------
int goodG2B_154()
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_52b_goodG2BSink(-2);
}

//----- (00000000004234E5) ----------------------------------------------------
int goodB2G_141()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE191_Integer_Underflow__int_fscanf_postdec_52b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042351D) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_52_good()
{
  goodG2B_154();
  return goodB2G_141();
}

//----- (0000000000423537) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54b_badSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_54c_badSink(a1);
}

//----- (000000000042354E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_54c_goodG2BSink(a1);
}

//----- (0000000000423565) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_54b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_54c_goodB2GSink(a1);
}

//----- (000000000042357C) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_01_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 - 1);
}

//----- (00000000004235F0) ----------------------------------------------------
int goodG2B_155()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000042361C) ----------------------------------------------------
int goodB2G_142()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (00000000004236A2) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_01_good()
{
  goodG2B_155();
  return goodB2G_142();
}

//----- (00000000004236BC) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_13_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v6 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000423746) ----------------------------------------------------
int goodB2G1_96()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v6 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 - 1);
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004237F1) ----------------------------------------------------
int goodB2G2_96()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v6 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 - 1);
  }
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000423890) ----------------------------------------------------
int goodG2B1_83()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004238DE) ----------------------------------------------------
int goodG2B2_83()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000423920) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_13_good()
{
  goodB2G1_96();
  goodB2G2_96();
  goodG2B1_83();
  return goodG2B2_83();
}

//----- (000000000042394E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_51b_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000042396F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000423990) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (00000000004239C6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53c_badSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53d_badSink(a1);
}

//----- (00000000004239DD) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53c_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53d_goodG2BSink(a1);
}

//----- (00000000004239F4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53c_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53d_goodB2GSink(a1);
}

//----- (0000000000423A0B) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_16_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return printIntLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000423A54) ----------------------------------------------------
int goodB2G_143()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000423AB3) ----------------------------------------------------
int goodG2B_156()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000423AE1) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_16_good()
{
  goodB2G_143();
  return goodG2B_156();
}

//----- (0000000000423AFB) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_34_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+14h] [rbp-Ch]
  int v6; // [rsp+18h] [rbp-8h]
  int v7; // [rsp+1Ch] [rbp-4h]

  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v7;
  v6 = v7 - 1;
  v5 = v7 - 1;
  return printIntLine(v7 - 1);
}

//----- (0000000000423B79) ----------------------------------------------------
int goodG2B_157()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000423BB1) ----------------------------------------------------
int goodB2G_144()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+18h] [rbp-8h]
  int v6; // [rsp+1Ch] [rbp-4h]

  v6 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v6;
  v5 = v6;
  if ( v6 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v5 - 1);
  return result;
}

//----- (0000000000423C44) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_34_good()
{
  goodG2B_157();
  return goodB2G_144();
}

//----- (0000000000423C5E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) - 1);
}

//----- (0000000000423C8A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) - 1);
}

//----- (0000000000423CB6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (0000000000423CF7) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_09_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v4 - 1));
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000423D7F) ----------------------------------------------------
int goodB2G1_97()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v4 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 - 1));
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000423E27) ----------------------------------------------------
int goodB2G2_97()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v4 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 - 1));
  }
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000423EC3) ----------------------------------------------------
int goodG2B1_84()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000423F17) ----------------------------------------------------
int goodG2B2_84()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000423F5F) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_09_good()
{
  goodB2G1_97();
  goodB2G2_97();
  goodG2B1_84();
  return goodG2B2_84();
}

//----- (0000000000423F8D) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE191_Integer_Underflow__int_fscanf_postdec_66b_badSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000423FCD) ----------------------------------------------------
int goodG2B_158()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -2;
  v2 = -2;
  return CWE191_Integer_Underflow__int_fscanf_postdec_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000423FF7) ----------------------------------------------------
int goodB2G_145()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE191_Integer_Underflow__int_fscanf_postdec_66b_goodB2GSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000424037) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_66_good()
{
  goodG2B_158();
  return goodB2G_145();
}

//----- (0000000000424051) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_67b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (0000000000424085) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_67b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (00000000004240B9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_67b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (0000000000424101) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_09_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v6 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000424189) ----------------------------------------------------
int goodB2G1_98()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v6 )
    return printUnsignedLine(v6 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000042422F) ----------------------------------------------------
int goodB2G2_98()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v6 )
      result = printUnsignedLine(v6 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004242C9) ----------------------------------------------------
int goodG2B1_85()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000424315) ----------------------------------------------------
int goodG2B2_85()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000424355) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_09_good()
{
  goodB2G1_98();
  goodB2G2_98();
  goodG2B1_85();
  return goodG2B2_85();
}

//----- (0000000000424383) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_52b_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_min_postdec_52c_badSink(a1);
}

//----- (000000000042439A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_52b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_min_postdec_52c_goodG2BSink(a1);
}

//----- (00000000004243B1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_52b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_min_postdec_52c_goodB2GSink(a1);
}

//----- (00000000004243C8) ----------------------------------------------------
int badSink_25()
{
  return printHexCharLine(CWE191_Integer_Underflow__char_min_postdec_45_badData - 1);
}
// 6AB2F0: using guessed type char CWE191_Integer_Underflow__char_min_postdec_45_badData;

//----- (00000000004243F8) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_45_bad()
{
  CWE191_Integer_Underflow__char_min_postdec_45_badData = -128;
  return badSink_25();
}
// 6AB2F0: using guessed type char CWE191_Integer_Underflow__char_min_postdec_45_badData;

//----- (000000000042441E) ----------------------------------------------------
int goodG2BSink_25()
{
  return printHexCharLine(CWE191_Integer_Underflow__char_min_postdec_45_goodG2BData - 1);
}
// 6AB2F1: using guessed type char CWE191_Integer_Underflow__char_min_postdec_45_goodG2BData;

//----- (000000000042444E) ----------------------------------------------------
int goodG2B_159()
{
  CWE191_Integer_Underflow__char_min_postdec_45_goodG2BData = -2;
  return goodG2BSink_25();
}
// 6AB2F1: using guessed type char CWE191_Integer_Underflow__char_min_postdec_45_goodG2BData;

//----- (0000000000424474) ----------------------------------------------------
int goodB2GSink_19()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__char_min_postdec_45_goodB2GData == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(CWE191_Integer_Underflow__char_min_postdec_45_goodB2GData - 1);
  return result;
}
// 6AB2F2: using guessed type char CWE191_Integer_Underflow__char_min_postdec_45_goodB2GData;

//----- (00000000004244B6) ----------------------------------------------------
int goodB2G_146()
{
  CWE191_Integer_Underflow__char_min_postdec_45_goodB2GData = -128;
  return goodB2GSink_19();
}
// 6AB2F2: using guessed type char CWE191_Integer_Underflow__char_min_postdec_45_goodB2GData;

//----- (00000000004244DC) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_45_good()
{
  goodG2B_159();
  return goodB2G_146();
}

//----- (00000000004244F6) ----------------------------------------------------
int __fastcall badSink_26(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000042451D) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_41_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return badSink_26(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000424558) ----------------------------------------------------
int __fastcall goodG2BSink_26(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000042457F) ----------------------------------------------------
int goodG2B_160()
{
  return goodG2BSink_26(-2LL);
}

//----- (00000000004245A5) ----------------------------------------------------
int __fastcall goodB2GSink_20(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (00000000004245E8) ----------------------------------------------------
int goodB2G_147()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return goodB2GSink_20(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000424623) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_41_good()
{
  goodB2G_147();
  return goodG2B_160();
}

//----- (000000000042463D) ----------------------------------------------------
int __fastcall badSink_27(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (0000000000424668) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__char_fscanf_postdec_44_bad()
{
  char v1; // [rsp+7h] [rbp-9h]
  int (__fastcall *v2)(char); // [rsp+8h] [rbp-8h]

  v2 = badSink_27;
  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004246AA) ----------------------------------------------------
int __fastcall goodG2BSink_27(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (00000000004246D5) ----------------------------------------------------
int goodG2B_161()
{
  return goodG2BSink_27(-2);
}

//----- (00000000004246FB) ----------------------------------------------------
int __fastcall goodB2GSink_21(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (0000000000424738) ----------------------------------------------------
__int64 goodB2G_148()
{
  char v1; // [rsp+7h] [rbp-9h]
  int (__fastcall *v2)(char); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_21;
  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042477A) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__char_fscanf_postdec_44_good()
{
  goodG2B_161();
  return goodB2G_148();
}

//----- (0000000000424794) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68b_badSink()
{
  return printUnsignedLine(CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_badData - 1);
}
// 6AB580: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_badData;

//----- (00000000004247BB) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68b_goodG2BSink()
{
  return printUnsignedLine(CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_goodG2BData - 1);
}
// 6AB57C: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_goodG2BData;

//----- (00000000004247E2) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_goodB2GData )
    result = printUnsignedLine(CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_goodB2GData - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 6AB578: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_goodB2GData;

//----- (000000000042481B) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_34_bad()
{
  __int64 v1; // [rsp+8h] [rbp-18h]
  __int64 v2; // [rsp+10h] [rbp-10h]
  __int64 v3; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  v3 = v1 - 1;
  v2 = v1 - 1;
  return printLongLongLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000424873) ----------------------------------------------------
int goodG2B_162()
{
  return printLongLongLine(-3LL);
}

//----- (00000000004248B6) ----------------------------------------------------
int goodB2G_149()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-18h]
  __int64 v2; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  v2 = v1;
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042492A) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_34_good()
{
  goodG2B_162();
  return goodB2G_149();
}

//----- (0000000000424944) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_16_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 - 1);
}

//----- (00000000004249B8) ----------------------------------------------------
int goodB2G_150()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 - 1);
  return result;
}

//----- (0000000000424A41) ----------------------------------------------------
int goodG2B_163()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000424A6F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_16_good()
{
  goodB2G_150();
  return goodG2B_163();
}

//----- (0000000000424A89) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%u", &v3);
  v2 = v3;
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_66b_badSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000424AC9) ----------------------------------------------------
int goodG2B_164()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -2;
  v2 = -2;
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000424AF3) ----------------------------------------------------
int goodB2G_151()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%u", &v3);
  v2 = v3;
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_66b_goodB2GSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000424B33) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_66_good()
{
  goodG2B_164();
  return goodB2G_151();
}

//----- (0000000000424B4D) ----------------------------------------------------
int badSink_28()
{
  return printIntLine(CWE191_Integer_Underflow__int_fscanf_postdec_45_badData - 1);
}
// 6AB2F4: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_45_badData;

//----- (0000000000424B74) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_45_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE191_Integer_Underflow__int_fscanf_postdec_45_badData = v1;
  return badSink_28();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB2F4: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_45_badData;

//----- (0000000000424BB5) ----------------------------------------------------
int goodG2BSink_28()
{
  return printIntLine(CWE191_Integer_Underflow__int_fscanf_postdec_45_goodG2BData - 1);
}
// 6AB2F8: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_45_goodG2BData;

//----- (0000000000424BDC) ----------------------------------------------------
int goodG2B_165()
{
  CWE191_Integer_Underflow__int_fscanf_postdec_45_goodG2BData = -2;
  return goodG2BSink_28();
}
// 6AB2F8: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_45_goodG2BData;

//----- (0000000000424C07) ----------------------------------------------------
int goodB2GSink_22()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__int_fscanf_postdec_45_goodB2GData == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE191_Integer_Underflow__int_fscanf_postdec_45_goodB2GData - 1);
  return result;
}
// 6AB2FC: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_45_goodB2GData;

//----- (0000000000424C43) ----------------------------------------------------
int goodB2G_152()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE191_Integer_Underflow__int_fscanf_postdec_45_goodB2GData = v1;
  return goodB2GSink_22();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB2FC: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_45_goodB2GData;

//----- (0000000000424C84) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_45_good()
{
  goodG2B_165();
  return goodB2G_152();
}

//----- (0000000000424C9E) ----------------------------------------------------
__int64 __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 424C9E: using guessed type char buf[16];

//----- (0000000000424D7B) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_connect_socket_postdec_61b_goodG2BSource()
{
  return 4294967294LL;
}

//----- (0000000000424D8E) ----------------------------------------------------
__int64 __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 424D8E: using guessed type char buf[16];

//----- (0000000000424E6B) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_66_bad()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE191_Integer_Underflow__int_fgets_postdec_66b_badSink((__int64)&v4);
}

//----- (0000000000424EDB) ----------------------------------------------------
int goodG2B_166()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -2;
  v2 = -2;
  return CWE191_Integer_Underflow__int_fgets_postdec_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000424F05) ----------------------------------------------------
int goodB2G_153()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE191_Integer_Underflow__int_fgets_postdec_66b_goodB2GSink((__int64)&v4);
}

//----- (0000000000424F75) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_66_good()
{
  goodG2B_166();
  return goodB2G_153();
}

//----- (0000000000424F8F) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_04_bad()
{
  return printIntLine(0x7FFFu);
}

//----- (0000000000424FD5) ----------------------------------------------------
int goodB2G1_99()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042503B) ----------------------------------------------------
int goodB2G2_99()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000425095) ----------------------------------------------------
int goodG2B1_86()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (00000000004250E7) ----------------------------------------------------
int goodG2B2_86()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000042512D) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_04_good()
{
  goodB2G1_99();
  goodB2G2_99();
  goodG2B1_86();
  return goodG2B2_86();
}

//----- (000000000042515B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_66b_badSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) - 1LL);
}

//----- (000000000042518E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_66b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) - 1LL);
}

//----- (00000000004251C1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+18h] [rbp-8h]

  v2 = *(_QWORD *)(a1 + 16);
  if ( v2 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 - 1);
  return result;
}

//----- (0000000000425210) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_15_bad()
{
  return printLongLongLine(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000042524B) ----------------------------------------------------
int goodB2G1_100()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004252A2) ----------------------------------------------------
int goodB2G2_100()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004252F9) ----------------------------------------------------
int goodG2B1_87()
{
  return printLongLongLine(-3LL);
}

//----- (000000000042532E) ----------------------------------------------------
int goodG2B2_87()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000425363) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_15_good()
{
  goodB2G1_100();
  goodB2G2_100();
  goodG2B1_87();
  return goodG2B2_87();
}

//----- (0000000000425391) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_67_bad()
{
  return CWE191_Integer_Underflow__short_min_postdec_67b_badSink(0x8000);
}

//----- (00000000004253BA) ----------------------------------------------------
int goodG2B_167()
{
  return CWE191_Integer_Underflow__short_min_postdec_67b_goodG2BSink(65534);
}

//----- (00000000004253E3) ----------------------------------------------------
int goodB2G_154()
{
  return CWE191_Integer_Underflow__short_min_postdec_67b_goodB2GSink(0x8000);
}

//----- (000000000042540C) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_67_good()
{
  goodG2B_167();
  return goodB2G_154();
}

//----- (0000000000425426) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_52_bad()
{
  return CWE191_Integer_Underflow__int_min_postdec_52b_badSink(2147483648);
}

//----- (0000000000425448) ----------------------------------------------------
int goodG2B_168()
{
  return CWE191_Integer_Underflow__int_min_postdec_52b_goodG2BSink(-2);
}

//----- (000000000042546A) ----------------------------------------------------
int goodB2G_155()
{
  return CWE191_Integer_Underflow__int_min_postdec_52b_goodB2GSink(2147483648);
}

//----- (000000000042548C) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_52_good()
{
  goodG2B_168();
  return goodB2G_155();
}

//----- (00000000004254A6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_51b_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (00000000004254C7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (00000000004254E8) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000042551E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2147483648;
  return CWE191_Integer_Underflow__int_min_postdec_63b_badSink(&v1);
}

//----- (0000000000425542) ----------------------------------------------------
int goodG2B_169()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -2;
  return CWE191_Integer_Underflow__int_min_postdec_63b_goodG2BSink(&v1);
}

//----- (0000000000425566) ----------------------------------------------------
int goodB2G_156()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2147483648;
  return CWE191_Integer_Underflow__int_min_postdec_63b_goodB2GSink(&v1);
}

//----- (000000000042558A) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_63_good()
{
  goodG2B_169();
  return goodB2G_156();
}

//----- (00000000004255A4) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_14_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v4 - 1));
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042562E) ----------------------------------------------------
int goodB2G1_101()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v4 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 - 1));
}
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004256D8) ----------------------------------------------------
int goodB2G2_101()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v4 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 - 1));
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000425776) ----------------------------------------------------
int goodG2B1_88()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004257CC) ----------------------------------------------------
int goodG2B2_88()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000425816) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_14_good()
{
  goodB2G1_101();
  goodB2G2_101();
  goodG2B1_88();
  return goodG2B2_88();
}

//----- (0000000000425844) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_02_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 - 1));
}

//----- (00000000004258B8) ----------------------------------------------------
int goodB2G1_102()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (0000000000425940) ----------------------------------------------------
int goodB2G2_102()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (00000000004259C8) ----------------------------------------------------
int goodG2B1_89()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (00000000004259FC) ----------------------------------------------------
int goodG2B2_89()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000425A30) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_02_good()
{
  goodB2G1_102();
  goodB2G2_102();
  goodG2B1_89();
  return goodG2B2_89();
}

//----- (0000000000425A5E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_16_bad()
{
  return printIntLine(0x7FFFFFFFu);
}

//----- (0000000000425A8C) ----------------------------------------------------
int goodB2G_157()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000425ACF) ----------------------------------------------------
int goodG2B_170()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000425AFD) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_16_good()
{
  goodB2G_157();
  return goodG2B_170();
}

//----- (0000000000425B17) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_32_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+8h] [rbp-28h]
  __int16 v5; // [rsp+Eh] [rbp-22h]
  __int16 *v6; // [rsp+10h] [rbp-20h]
  __int16 *v7; // [rsp+18h] [rbp-18h]

  v7 = &v4;
  v6 = &v4;
  v4 = 0;
  v5 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v5 = v1;
  *v7 = v1;
  return printIntLine((__int16)(*v6 - 1));
}

//----- (0000000000425BBC) ----------------------------------------------------
int goodG2B_171()
{
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ah] [rbp-16h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __int16 v4; // [rsp+Eh] [rbp-12h]
  __int16 *v5; // [rsp+10h] [rbp-10h]
  __int16 *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -2;
  v1 = -2;
  v3 = -3;
  v2 = -3;
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000425C21) ----------------------------------------------------
int goodB2G_158()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+8h] [rbp-28h]
  __int16 v5; // [rsp+Ch] [rbp-24h]
  __int16 v6; // [rsp+Eh] [rbp-22h]
  __int16 *v7; // [rsp+10h] [rbp-20h]
  __int16 *v8; // [rsp+18h] [rbp-18h]

  v8 = &v4;
  v7 = &v4;
  v4 = 0;
  v6 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v6 = v1;
  *v8 = v1;
  v5 = *v7;
  if ( v5 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v5 - 1));
  return result;
}

//----- (0000000000425CDA) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_32_good()
{
  goodG2B_171();
  return goodB2G_158();
}

//----- (0000000000425CF4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_52b_badSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_min_postdec_52c_badSink(a1);
}

//----- (0000000000425D0F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_52b_goodG2BSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_min_postdec_52c_goodG2BSink(a1);
}

//----- (0000000000425D2A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_52b_goodB2GSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_min_postdec_52c_goodB2GSink(a1);
}

//----- (0000000000425D45) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_65b_badSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000425D66) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_65b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000425D87) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000425DBA) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_63b_badSink(_BYTE *a1)
{
  return printHexCharLine(*a1 - 1);
}

//----- (0000000000425DEE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_63b_goodG2BSink(_BYTE *a1)
{
  return printHexCharLine(*a1 - 1);
}

//----- (0000000000425E22) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_63b_goodB2GSink(_BYTE *a1)
{
  int result; // eax

  if ( *a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(*a1 - 1);
  return result;
}

//----- (0000000000425E68) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_badData = v1;
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68b_badSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB580: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_badData;

//----- (0000000000425EA9) ----------------------------------------------------
int goodG2B_172()
{
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_goodG2BData = -2;
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68b_goodG2BSink();
}
// 6AB57C: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_goodG2BData;

//----- (0000000000425ED4) ----------------------------------------------------
int goodB2G_159()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_goodB2GData = v1;
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68b_goodB2GSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB578: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_goodB2GData;

//----- (0000000000425F15) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_68_good()
{
  goodG2B_172();
  return goodB2G_159();
}

//----- (0000000000425F2F) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_18_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 - 1);
}

//----- (0000000000425F8C) ----------------------------------------------------
int goodB2G_160()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 - 1);
  return result;
}

//----- (0000000000425FFB) ----------------------------------------------------
int goodG2B_173()
{
  return printHexCharLine(-3);
}

//----- (000000000042602B) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_18_good()
{
  goodB2G_160();
  return goodG2B_173();
}

//----- (0000000000426045) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_66_bad()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v3);
  v2 = v3;
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_66b_badSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000426088) ----------------------------------------------------
int goodG2B_174()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = -2LL;
  v2 = -2LL;
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_66b_goodG2BSink((__int64)&v1);
}

//----- (00000000004260B6) ----------------------------------------------------
int goodB2G_161()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v3);
  v2 = v3;
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_66b_goodB2GSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004260F9) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_66_good()
{
  goodG2B_174();
  return goodB2G_161();
}

//----- (0000000000426113) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_67b_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000042613A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000426161) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000042619D) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_05_bad()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_4 )
    v1 = 0x8000000000000000LL;
  result = staticTrue_4;
  if ( staticTrue_4 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB154: using guessed type int staticTrue_4;

//----- (00000000004261EA) ----------------------------------------------------
int goodB2G1_103()
{
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_4 )
    v1 = 0x8000000000000000LL;
  if ( staticFalse_4 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 - 1);
}
// 6AB154: using guessed type int staticTrue_4;
// 6AB300: using guessed type int staticFalse_4;

//----- (000000000042625F) ----------------------------------------------------
int goodB2G2_103()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_4 )
    v1 = 0x8000000000000000LL;
  result = staticTrue_4;
  if ( staticTrue_4 )
  {
    if ( v1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 - 1);
  }
  return result;
}
// 6AB154: using guessed type int staticTrue_4;

//----- (00000000004262C8) ----------------------------------------------------
int goodG2B1_90()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFalse_4 )
    printLine("Benign, fixed string");
  else
    v1 = -2LL;
  result = staticTrue_4;
  if ( staticTrue_4 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB154: using guessed type int staticTrue_4;
// 6AB300: using guessed type int staticFalse_4;

//----- (000000000042631B) ----------------------------------------------------
int goodG2B2_90()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_4 )
    v1 = -2LL;
  result = staticTrue_4;
  if ( staticTrue_4 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB154: using guessed type int staticTrue_4;

//----- (0000000000426362) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_05_good()
{
  goodB2G1_103();
  goodB2G2_103();
  goodG2B1_90();
  return goodG2B2_90();
}

//----- (0000000000426390) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_51_bad()
{
  return CWE191_Integer_Underflow__int_min_postdec_51b_badSink(2147483648);
}

//----- (00000000004263B2) ----------------------------------------------------
int goodG2B_175()
{
  return CWE191_Integer_Underflow__int_min_postdec_51b_goodG2BSink(-2);
}

//----- (00000000004263D4) ----------------------------------------------------
int goodB2G_162()
{
  return CWE191_Integer_Underflow__int_min_postdec_51b_goodB2GSink(2147483648);
}

//----- (00000000004263F6) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_51_good()
{
  goodG2B_175();
  return goodB2G_162();
}

//----- (0000000000426410) ----------------------------------------------------
int __fastcall badSink_29(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000042643B) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_44_bad()
{
  return badSink_29(-128);
}

//----- (0000000000426461) ----------------------------------------------------
int __fastcall goodG2BSink_29(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000042648C) ----------------------------------------------------
int goodG2B_176()
{
  return goodG2BSink_29(-2);
}

//----- (00000000004264B2) ----------------------------------------------------
int __fastcall goodB2GSink_23(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (00000000004264EF) ----------------------------------------------------
int goodB2G_163()
{
  return goodB2GSink_23(-128);
}

//----- (0000000000426515) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_44_good()
{
  goodG2B_176();
  return goodB2G_163();
}

//----- (000000000042652F) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_04_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 - 1));
}

//----- (00000000004265B5) ----------------------------------------------------
int goodB2G1_104()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (000000000042665B) ----------------------------------------------------
int goodB2G2_104()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (00000000004266F5) ----------------------------------------------------
int goodG2B1_91()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000426747) ----------------------------------------------------
int goodG2B2_91()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000042678D) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_04_good()
{
  goodB2G1_104();
  goodB2G2_104();
  goodG2B1_91();
  return goodG2B2_91();
}

//----- (00000000004267BB) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_31_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 - 1));
}

//----- (000000000042683F) ----------------------------------------------------
int goodG2B_177()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000426883) ----------------------------------------------------
int goodB2G_164()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (000000000042691B) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_31_good()
{
  goodG2B_177();
  return goodB2G_164();
}

//----- (0000000000426935) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_63_bad()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v2 = v0;
  return CWE191_Integer_Underflow__char_rand_postdec_63b_badSink(&v2);
}

//----- (0000000000426980) ----------------------------------------------------
int goodG2B_178()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = -2;
  return CWE191_Integer_Underflow__char_rand_postdec_63b_goodG2BSink(&v1);
}

//----- (000000000042699E) ----------------------------------------------------
int goodB2G_165()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v2 = v0;
  return CWE191_Integer_Underflow__char_rand_postdec_63b_goodB2GSink(&v2);
}

//----- (00000000004269E9) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_63_good()
{
  goodG2B_178();
  return goodB2G_165();
}

//----- (0000000000426A03) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_18_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return printIntLine((__int16)(v1 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000426A50) ----------------------------------------------------
int goodB2G_166()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000426AB3) ----------------------------------------------------
int goodG2B_179()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000426AE9) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_18_good()
{
  goodB2G_166();
  return goodG2B_179();
}

//----- (0000000000426B03) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_34_bad()
{
  return printLongLongLine(0x7FFFFFFFFFFFFFFFLL);
}

//----- (0000000000426B4C) ----------------------------------------------------
int goodG2B_180()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000426B8F) ----------------------------------------------------
int goodB2G_167()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000426BF4) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_34_good()
{
  goodG2B_180();
  return goodB2G_167();
}

//----- (0000000000426C0E) ----------------------------------------------------
int badSink_30()
{
  return printIntLine(CWE191_Integer_Underflow__int_min_postdec_45_badData - 1);
}
// 6AB304: using guessed type int CWE191_Integer_Underflow__int_min_postdec_45_badData;

//----- (0000000000426C35) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_45_bad()
{
  CWE191_Integer_Underflow__int_min_postdec_45_badData = 2147483648;
  return badSink_30();
}
// 6AB304: using guessed type int CWE191_Integer_Underflow__int_min_postdec_45_badData;

//----- (0000000000426C60) ----------------------------------------------------
int goodG2BSink_30()
{
  return printIntLine(CWE191_Integer_Underflow__int_min_postdec_45_goodG2BData - 1);
}
// 6AB308: using guessed type int CWE191_Integer_Underflow__int_min_postdec_45_goodG2BData;

//----- (0000000000426C87) ----------------------------------------------------
int goodG2B_181()
{
  CWE191_Integer_Underflow__int_min_postdec_45_goodG2BData = -2;
  return goodG2BSink_30();
}
// 6AB308: using guessed type int CWE191_Integer_Underflow__int_min_postdec_45_goodG2BData;

//----- (0000000000426CB2) ----------------------------------------------------
int goodB2GSink_24()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__int_min_postdec_45_goodB2GData == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE191_Integer_Underflow__int_min_postdec_45_goodB2GData - 1);
  return result;
}
// 6AB30C: using guessed type int CWE191_Integer_Underflow__int_min_postdec_45_goodB2GData;

//----- (0000000000426CEE) ----------------------------------------------------
int goodB2G_168()
{
  CWE191_Integer_Underflow__int_min_postdec_45_goodB2GData = 2147483648;
  return goodB2GSink_24();
}
// 6AB30C: using guessed type int CWE191_Integer_Underflow__int_min_postdec_45_goodB2GData;

//----- (0000000000426D19) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_45_good()
{
  goodG2B_181();
  return goodB2G_168();
}

//----- (0000000000426D33) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (0000000000426D5E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (0000000000426D89) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 - 1);
  return result;
}

//----- (0000000000426DC9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_66b_badSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) - 1LL);
}

//----- (0000000000426DFC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_66b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) - 1LL);
}

//----- (0000000000426E2F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+18h] [rbp-8h]

  v2 = *(_QWORD *)(a1 + 16);
  if ( v2 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 - 1);
  return result;
}

//----- (0000000000426E7E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_06_bad()
{
  return printIntLine(0x7FFFFFFFu);
}

//----- (0000000000426EBE) ----------------------------------------------------
int goodB2G1_105()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000426F1F) ----------------------------------------------------
int goodB2G2_105()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000426F74) ----------------------------------------------------
int goodG2B1_92()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000426FC0) ----------------------------------------------------
int goodG2B2_92()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000427000) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_06_good()
{
  goodB2G1_105();
  goodB2G2_105();
  goodG2B1_92();
  return goodG2B2_92();
}

//----- (000000000042702E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_67_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9;
  return CWE191_Integer_Underflow__int_listen_socket_postdec_67b_badSink(v9);
}
// 42702E: using guessed type char buf[16];

//----- (0000000000427162) ----------------------------------------------------
int goodG2B_182()
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_67b_goodG2BSink(-2);
}

//----- (000000000042718A) ----------------------------------------------------
int goodB2G_169()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9;
  return CWE191_Integer_Underflow__int_listen_socket_postdec_67b_goodB2GSink(v9);
}
// 42718A: using guessed type char buf[16];

//----- (00000000004272BE) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_67_good()
{
  goodG2B_182();
  return goodB2G_169();
}

//----- (00000000004272D8) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_22_badSink(__int16 a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__short_rand_postdec_22_badGlobal;
  if ( CWE191_Integer_Underflow__short_rand_postdec_22_badGlobal )
    result = printIntLine((__int16)(a1 - 1));
  return result;
}
// 6AB310: using guessed type int CWE191_Integer_Underflow__short_rand_postdec_22_badGlobal;

//----- (0000000000427310) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G1Sink(__int16 a1)
{
  if ( CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 - 1));
}
// 6AB314: using guessed type int CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G1Global;

//----- (0000000000427368) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G2Sink(__int16 a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G2Global;
  if ( CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G2Global )
  {
    if ( a1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 - 1));
  }
  return result;
}
// 6AB318: using guessed type int CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G2Global;

//----- (00000000004273B4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_22_goodG2BSink(__int16 a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__short_rand_postdec_22_goodG2BGlobal;
  if ( CWE191_Integer_Underflow__short_rand_postdec_22_goodG2BGlobal )
    result = printIntLine((__int16)(a1 - 1));
  return result;
}
// 6AB31C: using guessed type int CWE191_Integer_Underflow__short_rand_postdec_22_goodG2BGlobal;

//----- (00000000004273EC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_53b_badSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_53c_badSink(a1);
}

//----- (0000000000427403) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_53b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_53c_goodG2BSink(a1);
}

//----- (000000000042741A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_53b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_53c_goodB2GSink(a1);
}

//----- (0000000000427431) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52b_badSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52c_badSink(a1);
}

//----- (0000000000427448) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52c_goodG2BSink(a1);
}

//----- (000000000042745F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52c_goodB2GSink(a1);
}

//----- (0000000000427476) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_52c_badSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000427497) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_52c_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (00000000004274B8) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (00000000004274EB) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_68_bad()
{
  CWE191_Integer_Underflow__unsigned_int_min_postdec_68_badData = 0;
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_68b_badSink();
}
// 6AB58C: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_68_badData;

//----- (0000000000427516) ----------------------------------------------------
int goodG2B_183()
{
  CWE191_Integer_Underflow__unsigned_int_min_postdec_68_goodG2BData = -2;
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_68b_goodG2BSink();
}
// 6AB588: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_68_goodG2BData;

//----- (0000000000427541) ----------------------------------------------------
int goodB2G_170()
{
  CWE191_Integer_Underflow__unsigned_int_min_postdec_68_goodB2GData = 0;
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_68b_goodB2GSink();
}
// 6AB584: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_68_goodB2GData;

//----- (000000000042756C) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_68_good()
{
  goodG2B_183();
  return goodB2G_170();
}

//----- (0000000000427586) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__unsigned_int_rand_postdec_65_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE191_Integer_Underflow__unsigned_int_rand_postdec_65b_badSink)(v2);
}

//----- (00000000004275F9) ----------------------------------------------------
int goodG2B_184()
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_65b_goodG2BSink(-2);
}

//----- (0000000000427624) ----------------------------------------------------
__int64 goodB2G_171()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE191_Integer_Underflow__unsigned_int_rand_postdec_65b_goodB2GSink)(v2);
}

//----- (0000000000427697) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__unsigned_int_rand_postdec_65_good()
{
  goodG2B_184();
  return goodB2G_171();
}

//----- (00000000004276B1) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_63_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE191_Integer_Underflow__int_connect_socket_postdec_63b_badSink(&v5);
}
// 4276B1: using guessed type char buf[16];

//----- (000000000042779B) ----------------------------------------------------
int goodG2B_185()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -2;
  return CWE191_Integer_Underflow__int_connect_socket_postdec_63b_goodG2BSink(&v1);
}

//----- (00000000004277BF) ----------------------------------------------------
int goodB2G_172()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE191_Integer_Underflow__int_connect_socket_postdec_63b_goodB2GSink(&v5);
}
// 4277BF: using guessed type char buf[16];

//----- (00000000004278A9) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_63_good()
{
  goodG2B_185();
  return goodB2G_172();
}

//----- (00000000004278C3) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_66_bad()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0x8000000000000000LL;
  v2 = 0x8000000000000000LL;
  return CWE191_Integer_Underflow__int64_t_min_postdec_66b_badSink((__int64)&v1);
}

//----- (00000000004278F7) ----------------------------------------------------
int goodG2B_186()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = -2LL;
  v2 = -2LL;
  return CWE191_Integer_Underflow__int64_t_min_postdec_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000427925) ----------------------------------------------------
int goodB2G_173()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = 0x8000000000000000LL;
  v2 = 0x8000000000000000LL;
  return CWE191_Integer_Underflow__int64_t_min_postdec_66b_goodB2GSink((__int64)&v1);
}

//----- (0000000000427959) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_66_good()
{
  goodG2B_186();
  return goodB2G_173();
}

//----- (0000000000427973) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54e_badSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000042799E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54e_goodG2BSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (00000000004279C9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54e_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (0000000000427A06) ----------------------------------------------------
void CWE191_Integer_Underflow__char_rand_postdec_17_bad()
{
  int v0; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v1 = v0;
  }
  for ( j = 0; j <= 0; ++j )
    printHexCharLine(--v1);
}

//----- (0000000000427A87) ----------------------------------------------------
void goodB2G_174()
{
  int v0; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v1 = v0;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == -128 )
      printLine("data value is too large to perform arithmetic safely.");
    else
      printHexCharLine(--v1);
  }
}

//----- (0000000000427B1A) ----------------------------------------------------
int goodG2B_187()
{
  int result; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    v1 = -2;
  for ( j = 0; j <= 0; ++j )
    result = printHexCharLine(--v1);
  return result;
}

//----- (0000000000427B6E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_17_good()
{
  goodB2G_174();
  return goodG2B_187();
}

//----- (0000000000427B88) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_22_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE191_Integer_Underflow__short_rand_postdec_22_badGlobal = 1;
  return CWE191_Integer_Underflow__short_rand_postdec_22_badSink(v1);
}
// 6AB310: using guessed type int CWE191_Integer_Underflow__short_rand_postdec_22_badGlobal;

//----- (0000000000427BF3) ----------------------------------------------------
int goodB2G1_106()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G1Global = 0;
  return CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G1Sink(v1);
}
// 6AB314: using guessed type int CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G1Global;

//----- (0000000000427C5E) ----------------------------------------------------
int goodB2G2_106()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G2Global = 1;
  return CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G2Sink(v1);
}
// 6AB318: using guessed type int CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G2Global;

//----- (0000000000427CC9) ----------------------------------------------------
int goodG2B_188()
{
  CWE191_Integer_Underflow__short_rand_postdec_22_goodG2BGlobal = 1;
  return CWE191_Integer_Underflow__short_rand_postdec_22_goodG2BSink(-2);
}
// 6AB31C: using guessed type int CWE191_Integer_Underflow__short_rand_postdec_22_goodG2BGlobal;

//----- (0000000000427CF4) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_22_good()
{
  goodB2G1_106();
  goodB2G2_106();
  return goodG2B_188();
}

//----- (0000000000427D18) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_67b_badSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (0000000000427D49) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_67b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (0000000000427D7A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_67b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (0000000000427DBD) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_53_bad()
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_53b_badSink(0);
}

//----- (0000000000427DDF) ----------------------------------------------------
int goodG2B_189()
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_53b_goodG2BSink(-2);
}

//----- (0000000000427E01) ----------------------------------------------------
int goodB2G_175()
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_53b_goodB2GSink(0);
}

//----- (0000000000427E23) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_53_good()
{
  goodG2B_189();
  return goodB2G_175();
}

//----- (0000000000427E3D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_51b_badSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000427E5E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_51b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000427E7F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000427EB2) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_18_bad()
{
  return printIntLine(0x7FFFu);
}

//----- (0000000000427EE8) ----------------------------------------------------
int goodB2G_176()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000427F32) ----------------------------------------------------
int goodG2B_190()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000427F68) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_18_good()
{
  goodB2G_176();
  return goodG2B_190();
}

//----- (0000000000427F82) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_16_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return printUnsignedLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000427FCB) ----------------------------------------------------
int goodB2G_177()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 )
    result = printUnsignedLine(v1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000428027) ----------------------------------------------------
int goodG2B_191()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000428055) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_16_good()
{
  goodB2G_177();
  return goodG2B_191();
}

//----- (000000000042806F) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_15_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return printLongLongLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004280C0) ----------------------------------------------------
int goodB2G1_107()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000428130) ----------------------------------------------------
int goodB2G2_107()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004281A0) ----------------------------------------------------
int goodG2B1_93()
{
  return printLongLongLine(-3LL);
}

//----- (00000000004281D5) ----------------------------------------------------
int goodG2B2_93()
{
  return printLongLongLine(-3LL);
}

//----- (000000000042820A) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_15_good()
{
  goodB2G1_107();
  goodB2G2_107();
  goodG2B1_93();
  return goodG2B2_93();
}

//----- (0000000000428238) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__char_rand_postdec_61b_badSource()
{
  __int64 result; // rax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(result) = rand();
  }
  else
  {
    rand();
    rand();
    LODWORD(result) = ~rand();
  }
  return (unsigned __int8)result;
}

//----- (000000000042827C) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__char_rand_postdec_61b_goodG2BSource()
{
  return 254LL;
}

//----- (000000000042828F) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__char_rand_postdec_61b_goodB2GSource()
{
  __int64 result; // rax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(result) = rand();
  }
  else
  {
    rand();
    rand();
    LODWORD(result) = ~rand();
  }
  return (unsigned __int8)result;
}

//----- (00000000004282D3) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54c_badSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_54d_badSink(a1);
}

//----- (00000000004282EE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54c_goodG2BSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_54d_goodG2BSink(a1);
}

//----- (0000000000428309) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54c_goodB2GSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_54d_goodB2GSink(a1);
}

//----- (0000000000428324) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_14_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2147483648;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000428366) ----------------------------------------------------
int goodB2G1_108()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2147483648;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 - 1);
}
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004283C9) ----------------------------------------------------
int goodB2G2_108()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = 2147483648;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 - 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000428420) ----------------------------------------------------
int goodG2B1_94()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042846E) ----------------------------------------------------
int goodG2B2_94()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004284B0) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_14_good()
{
  goodB2G1_108();
  goodB2G2_108();
  goodG2B1_94();
  return goodG2B2_94();
}

//----- (00000000004284DE) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_min_postdec_61b_badSource()
{
  return 0x80000000LL;
}

//----- (00000000004284F1) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_min_postdec_61b_goodG2BSource()
{
  return 4294967294LL;
}

//----- (0000000000428504) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_min_postdec_61b_goodB2GSource()
{
  return 0x80000000LL;
}

//----- (0000000000428517) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_13_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v4 - 1));
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004285A1) ----------------------------------------------------
int goodB2G1_109()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v4 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 - 1));
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042864B) ----------------------------------------------------
int goodB2G2_109()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v4 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 - 1));
  }
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004286E9) ----------------------------------------------------
int goodG2B1_95()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042873F) ----------------------------------------------------
int goodG2B2_95()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000428789) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_13_good()
{
  goodB2G1_109();
  goodB2G2_109();
  goodG2B1_95();
  return goodG2B2_95();
}

//----- (00000000004287B7) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_11_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v8 - 1);
  return result;
}
// 4287B7: using guessed type char buf[16];

//----- (000000000042890F) ----------------------------------------------------
int goodB2G1_110()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v8 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 - 1);
}
// 42890F: using guessed type char buf[16];

//----- (0000000000428A88) ----------------------------------------------------
int goodB2G2_110()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v8 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 - 1);
  }
  return result;
}
// 428A88: using guessed type char buf[16];

//----- (0000000000428BF5) ----------------------------------------------------
int goodG2B1_96()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (0000000000428C49) ----------------------------------------------------
int goodG2B2_96()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (0000000000428C91) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_11_good()
{
  goodB2G1_110();
  goodB2G2_110();
  goodG2B1_96();
  return goodG2B2_96();
}

//----- (0000000000428CBF) ----------------------------------------------------
void CWE191_Integer_Underflow__int_connect_socket_postdec_17_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  in_addr_t v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+28h] [rbp-18h]
  int v5; // [rsp+2Ch] [rbp-14h]
  int fd; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = inet_addr("127.0.0.1");
      v2 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    v4 = --v7;
    printIntLine(v7);
  }
}
// 428CBF: using guessed type char buf[16];

//----- (0000000000428DDE) ----------------------------------------------------
void goodB2G_178()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  in_addr_t v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+28h] [rbp-18h]
  int v5; // [rsp+2Ch] [rbp-14h]
  int fd; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = inet_addr("127.0.0.1");
      v2 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v7 == 0x80000000 )
    {
      printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v4 = --v7;
      printIntLine(v7);
    }
  }
}
// 428DDE: using guessed type char buf[16];

//----- (0000000000428F12) ----------------------------------------------------
int goodG2B_192()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(--v1);
  return result;
}

//----- (0000000000428F64) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_17_good()
{
  goodB2G_178();
  return goodG2B_192();
}

//----- (0000000000428F7E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_14_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v4 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000429006) ----------------------------------------------------
int goodB2G1_111()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 - 1);
}
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004290AF) ----------------------------------------------------
int goodB2G2_111()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v4 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 - 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042914C) ----------------------------------------------------
int goodG2B1_97()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042919A) ----------------------------------------------------
int goodG2B2_97()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004291DC) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_14_good()
{
  goodB2G1_111();
  goodB2G2_111();
  goodG2B1_97();
  return goodG2B2_97();
}

//----- (000000000042920A) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_51_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_51b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000429242) ----------------------------------------------------
int goodG2B_193()
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_51b_goodG2BSink(-2);
}

//----- (0000000000429264) ----------------------------------------------------
int goodB2G_179()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_51b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042929C) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_51_good()
{
  goodG2B_193();
  return goodB2G_179();
}

//----- (00000000004292B6) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_32_bad()
{
  char s[8]; // [rsp+0h] [rbp-40h]
  int v2; // [rsp+8h] [rbp-38h]
  __int16 v3; // [rsp+Ch] [rbp-34h]
  int v4; // [rsp+1Ch] [rbp-24h]
  int *v5; // [rsp+28h] [rbp-18h]
  int *v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v6 = &v4;
  v5 = &v4;
  v4 = 0;
  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  *v6 = v7;
  return printIntLine(*v5 - 1);
}

//----- (0000000000429353) ----------------------------------------------------
int goodG2B_194()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -2;
  v1 = -2;
  v3 = -3;
  v2 = -3;
  return printIntLine(0xFFFFFFFD);
}

//----- (00000000004293AA) ----------------------------------------------------
int goodB2G_180()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-40h]
  int v2; // [rsp+8h] [rbp-38h]
  __int16 v3; // [rsp+Ch] [rbp-34h]
  int v4; // [rsp+1Ch] [rbp-24h]
  int v5; // [rsp+24h] [rbp-1Ch]
  int *v6; // [rsp+28h] [rbp-18h]
  int *v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v7 = &v4;
  v6 = &v4;
  v4 = 0;
  v8 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v8 = atoi(s);
  else
    printLine("fgets() failed.");
  *v7 = v8;
  v5 = *v6;
  if ( v5 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v5 - 1);
  return result;
}

//----- (000000000042945C) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_32_good()
{
  goodG2B_194();
  return goodB2G_180();
}

//----- (0000000000429476) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54e_badSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000042949D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54e_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (00000000004294C4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_54e_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (0000000000429507) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_61_bad()
{
  char v0; // al

  v0 = (unsigned __int64)CWE191_Integer_Underflow__char_rand_postdec_61b_badSource() - 1;
  return printHexCharLine(v0);
}

//----- (000000000042953F) ----------------------------------------------------
int goodG2B_195()
{
  char v0; // al

  v0 = (unsigned __int64)CWE191_Integer_Underflow__char_rand_postdec_61b_goodG2BSource() - 1;
  return printHexCharLine(v0);
}

//----- (0000000000429577) ----------------------------------------------------
int goodB2G_181()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = CWE191_Integer_Underflow__char_rand_postdec_61b_goodB2GSource();
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (00000000004295C1) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_61_good()
{
  goodG2B_195();
  return goodB2G_181();
}

//----- (00000000004295DB) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_15_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return printHexCharLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000429624) ----------------------------------------------------
int goodB2G1_112()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000429681) ----------------------------------------------------
int goodB2G2_112()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004296DE) ----------------------------------------------------
int goodG2B1_98()
{
  return printHexCharLine(-3);
}

//----- (000000000042970E) ----------------------------------------------------
int goodG2B2_98()
{
  return printHexCharLine(-3);
}

//----- (000000000042973E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_15_good()
{
  goodB2G1_112();
  goodB2G2_112();
  goodG2B1_98();
  return goodG2B2_98();
}

//----- (000000000042976C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (000000000042979F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (00000000004297D2) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 - 1);
  return result;
}

//----- (000000000042981A) ----------------------------------------------------
__int64 staticReturnsTrue_6()
{
  return 1LL;
}

//----- (0000000000429825) ----------------------------------------------------
__int64 staticReturnsFalse_6()
{
  return 0LL;
}

//----- (0000000000429830) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_08_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_6() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = staticReturnsTrue_6();
  if ( result )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000429897) ----------------------------------------------------
int goodB2G1_113()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_6() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( (unsigned int)staticReturnsFalse_6() )
    return printLine("Benign, fixed string");
  if ( v1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000429920) ----------------------------------------------------
int goodB2G2_113()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_6() )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = staticReturnsTrue_6();
  if ( result )
  {
    if ( v1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 - 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042999D) ----------------------------------------------------
int goodG2B1_99()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_6() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticReturnsTrue_6();
  if ( result )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (00000000004299F9) ----------------------------------------------------
int goodG2B2_99()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_6() )
    v1 = -2;
  result = staticReturnsTrue_6();
  if ( result )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (0000000000429A49) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_08_good()
{
  goodB2G1_113();
  goodB2G2_113();
  goodG2B1_99();
  return goodG2B2_99();
}

//----- (0000000000429A77) ----------------------------------------------------
int badSink_31()
{
  return printUnsignedLine(CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_badData - 1);
}
// 6AB320: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_badData;

//----- (0000000000429A9E) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_badData = v1;
  return badSink_31();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB320: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_badData;

//----- (0000000000429ADF) ----------------------------------------------------
int goodG2BSink_31()
{
  return printUnsignedLine(CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_goodG2BData - 1);
}
// 6AB324: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_goodG2BData;

//----- (0000000000429B06) ----------------------------------------------------
int goodG2B_196()
{
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_goodG2BData = -2;
  return goodG2BSink_31();
}
// 6AB324: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_goodG2BData;

//----- (0000000000429B31) ----------------------------------------------------
int goodB2GSink_25()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_goodB2GData )
    result = printUnsignedLine(CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_goodB2GData - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 6AB328: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_goodB2GData;

//----- (0000000000429B6A) ----------------------------------------------------
int goodB2G_182()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_goodB2GData = v1;
  return goodB2GSink_25();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB328: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_goodB2GData;

//----- (0000000000429BAB) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_45_good()
{
  goodG2B_196();
  return goodB2G_182();
}

//----- (0000000000429BC5) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_03_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 - 1));
}

//----- (0000000000429C39) ----------------------------------------------------
int goodB2G1_114()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (0000000000429CC1) ----------------------------------------------------
int goodB2G2_114()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (0000000000429D49) ----------------------------------------------------
int goodG2B1_100()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000429D7D) ----------------------------------------------------
int goodG2B2_100()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000429DB1) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_03_good()
{
  goodB2G1_114();
  goodB2G2_114();
  goodG2B1_100();
  return goodG2B2_100();
}

//----- (0000000000429DDF) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_53d_badSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (0000000000429E06) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_53d_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (0000000000429E2D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_53d_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (0000000000429E70) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_06_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_47658C, &v1);
  return printUnsignedLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000429ECB) ----------------------------------------------------
int goodB2G1_115()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_47658C, &v1);
  if ( v1 )
    result = printUnsignedLine(v1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000429F45) ----------------------------------------------------
int goodB2G2_115()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_47658C, &v1);
  if ( v1 )
    result = printUnsignedLine(v1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000429FB3) ----------------------------------------------------
int goodG2B1_101()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000429FFF) ----------------------------------------------------
int goodG2B2_101()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000042A03F) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_06_good()
{
  goodB2G1_115();
  goodB2G2_115();
  goodG2B1_101();
  return goodG2B2_101();
}

//----- (000000000042A06D) ----------------------------------------------------
__int64 __fastcall badSource_5(unsigned __int8 a1)
{
  unsigned __int8 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%c", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042A09D) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_42_bad()
{
  char v0; // al

  v0 = (unsigned __int64)badSource_5(0x20u) - 1;
  return printHexCharLine(v0);
}

//----- (000000000042A0D5) ----------------------------------------------------
__int64 goodG2BSource_5()
{
  return 254LL;
}

//----- (000000000042A0E8) ----------------------------------------------------
int goodG2B_197()
{
  char v0; // al

  v0 = (unsigned __int64)goodG2BSource_5() - 1;
  return printHexCharLine(v0);
}

//----- (000000000042A120) ----------------------------------------------------
__int64 __fastcall goodB2GSource_5(unsigned __int8 a1)
{
  unsigned __int8 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%c", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042A150) ----------------------------------------------------
int goodB2G_183()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = goodB2GSource_5(0x20u);
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (000000000042A19A) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_42_good()
{
  goodB2G_183();
  return goodG2B_197();
}

//----- (000000000042A1B4) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_66_bad()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = -128;
  v2 = -128;
  return CWE191_Integer_Underflow__char_min_postdec_66b_badSink((__int64)&v1);
}

//----- (000000000042A1D9) ----------------------------------------------------
int goodG2B_198()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = -2;
  v2 = -2;
  return CWE191_Integer_Underflow__char_min_postdec_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000042A1FE) ----------------------------------------------------
int goodB2G_184()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = -128;
  v2 = -128;
  return CWE191_Integer_Underflow__char_min_postdec_66b_goodB2GSink((__int64)&v1);
}

//----- (000000000042A223) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_66_good()
{
  goodG2B_198();
  return goodB2G_184();
}

//----- (000000000042A23D) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_04_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 - 1);
}

//----- (000000000042A2C1) ----------------------------------------------------
int goodB2G1_116()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 - 1);
  return result;
}

//----- (000000000042A366) ----------------------------------------------------
int goodB2G2_116()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 - 1);
  return result;
}

//----- (000000000042A3FF) ----------------------------------------------------
int goodG2B1_102()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000042A449) ----------------------------------------------------
int goodG2B2_102()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000042A487) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_04_good()
{
  goodB2G1_116();
  goodB2G2_116();
  goodG2B1_102();
  return goodG2B2_102();
}

//----- (000000000042A4B5) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_51b_badSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (000000000042A4D6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_51b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (000000000042A4F7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000042A52A) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_14_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042A58F) ----------------------------------------------------
int goodB2G1_117()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042A61F) ----------------------------------------------------
int goodB2G2_117()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042A6A3) ----------------------------------------------------
int goodG2B1_103()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = -2LL;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042A6F8) ----------------------------------------------------
int goodG2B2_103()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = -2LL;
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042A741) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_14_good()
{
  goodB2G1_117();
  goodB2G2_117();
  goodG2B1_103();
  return goodG2B2_103();
}

//----- (000000000042A76F) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_32_bad()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 *v3; // [rsp+20h] [rbp-10h]
  __int64 *v4; // [rsp+28h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 0LL;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  *v4 = v1;
  return printLongLongLine(*v3 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042A7E8) ----------------------------------------------------
int goodG2B_199()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 *v5; // [rsp+20h] [rbp-10h]
  __int64 *v6; // [rsp+28h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -2LL;
  v1 = -2LL;
  v3 = -3LL;
  v2 = -3LL;
  return printLongLongLine(-3LL);
}

//----- (000000000042A84C) ----------------------------------------------------
int goodB2G_185()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+18h] [rbp-18h]
  __int64 *v4; // [rsp+20h] [rbp-10h]
  __int64 *v5; // [rsp+28h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = 0LL;
  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  *v5 = v1;
  v3 = *v4;
  if ( v3 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v3 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042A8E1) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_32_good()
{
  goodG2B_199();
  return goodB2G_185();
}

//----- (000000000042A8FB) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_16_bad()
{
  return printUnsignedLine(0xFFFFFFFF);
}

//----- (000000000042A929) ----------------------------------------------------
int goodB2G_186()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042A969) ----------------------------------------------------
int goodG2B_200()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000042A997) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_16_good()
{
  goodB2G_186();
  return goodG2B_200();
}

//----- (000000000042A9B1) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_18_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 - 1);
}
// 42A9B1: using guessed type char buf[16];

//----- (000000000042AAEB) ----------------------------------------------------
int goodB2G_187()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 - 1);
  return result;
}
// 42AAEB: using guessed type char buf[16];

//----- (000000000042AC3A) ----------------------------------------------------
int goodG2B_201()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000042AC68) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_18_good()
{
  goodB2G_187();
  return goodG2B_201();
}

//----- (000000000042AC82) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_64_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE191_Integer_Underflow__int_rand_postdec_64b_badSink(&v6);
}

//----- (000000000042ACEE) ----------------------------------------------------
int goodG2B_202()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -2;
  return CWE191_Integer_Underflow__int_rand_postdec_64b_goodG2BSink(&v1);
}

//----- (000000000042AD12) ----------------------------------------------------
int goodB2G_188()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE191_Integer_Underflow__int_rand_postdec_64b_goodB2GSink(&v6);
}

//----- (000000000042AD7E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_64_good()
{
  goodG2B_202();
  return goodB2G_188();
}

//----- (000000000042AD98) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54c_badSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_min_postdec_54d_badSink(a1);
}

//----- (000000000042ADB3) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54c_goodG2BSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_min_postdec_54d_goodG2BSink(a1);
}

//----- (000000000042ADCE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54c_goodB2GSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_min_postdec_54d_goodB2GSink(a1);
}

//----- (000000000042ADE9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54b_badSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_54c_badSink(a1);
}

//----- (000000000042AE04) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54b_goodG2BSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_54c_goodG2BSink(a1);
}

//----- (000000000042AE1F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_54b_goodB2GSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_54c_goodB2GSink(a1);
}

//----- (000000000042AE3A) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_61_bad()
{
  int v0; // eax

  v0 = CWE191_Integer_Underflow__int_connect_socket_postdec_61b_badSource(0);
  return printIntLine(v0 - 1);
}

//----- (000000000042AE6C) ----------------------------------------------------
int goodG2B_203()
{
  int v0; // eax

  v0 = CWE191_Integer_Underflow__int_connect_socket_postdec_61b_goodG2BSource();
  return printIntLine(v0 - 1);
}

//----- (000000000042AE9E) ----------------------------------------------------
int goodB2G_189()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE191_Integer_Underflow__int_connect_socket_postdec_61b_goodB2GSource(0);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}

//----- (000000000042AEE5) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_61_good()
{
  goodG2B_203();
  return goodB2G_189();
}

//----- (000000000042AEFF) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_12_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  else
  {
    v4 = -2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine((__int16)(v4 - 1));
  if ( v4 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 - 1));
}

//----- (000000000042AFCB) ----------------------------------------------------
int goodB2G_190()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int v3; // ebx
  int v4; // eax
  int v5; // ebx
  int result; // eax
  __int16 v7; // [rsp+Eh] [rbp-12h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v7 = v1;
  }
  else
  {
    if ( rand() & 1 )
    {
      rand();
      v3 = rand() << 15;
      LOWORD(v4) = v3 ^ rand();
    }
    else
    {
      rand();
      v5 = rand() << 15;
      v4 = ~(v5 ^ rand());
    }
    v7 = v4;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v7 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v7 - 1));
  }
  else if ( v7 == -32768 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine((__int16)(v7 - 1));
  }
  return result;
}

//----- (000000000042B0E5) ----------------------------------------------------
int goodG2B_204()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000042B15D) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_12_good()
{
  goodB2G_190();
  return goodG2B_204();
}

//----- (000000000042B177) ----------------------------------------------------
__int64 __fastcall badSource_6(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%ld", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042B1A6) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_42_bad()
{
  __int64 v0; // rax

  v0 = badSource_6(0LL);
  return printLongLongLine(v0 - 1);
}

//----- (000000000042B1E1) ----------------------------------------------------
__int64 goodG2BSource_6()
{
  return -2LL;
}

//----- (000000000042B1F7) ----------------------------------------------------
int goodG2B_205()
{
  __int64 v0; // rax

  v0 = goodG2BSource_6();
  return printLongLongLine(v0 - 1);
}

//----- (000000000042B232) ----------------------------------------------------
__int64 __fastcall goodB2GSource_6(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%ld", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042B261) ----------------------------------------------------
int goodB2G_191()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = goodB2GSource_6(0LL);
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (000000000042B2B8) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_42_good()
{
  goodB2G_191();
  return goodG2B_205();
}

//----- (000000000042B2D2) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_07_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( staticFive_6 == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = staticFive_6;
  if ( staticFive_6 == 5 )
    result = printHexCharLine(v2 - 1);
  return result;
}
// 6AB158: using guessed type int staticFive_6;

//----- (000000000042B343) ----------------------------------------------------
int goodB2G1_118()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( staticFive_6 == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( staticFive_6 != 5 )
    return printLine("Benign, fixed string");
  if ( v2 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 - 1);
}
// 6AB158: using guessed type int staticFive_6;

//----- (000000000042B3D2) ----------------------------------------------------
int goodB2G2_118()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( staticFive_6 == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = staticFive_6;
  if ( staticFive_6 == 5 )
  {
    if ( v2 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 - 1);
  }
  return result;
}
// 6AB158: using guessed type int staticFive_6;

//----- (000000000042B455) ----------------------------------------------------
int goodG2B1_104()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_6 == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = staticFive_6;
  if ( staticFive_6 == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB158: using guessed type int staticFive_6;

//----- (000000000042B4A5) ----------------------------------------------------
int goodG2B2_104()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_6 == 5 )
    v1 = -2;
  result = staticFive_6;
  if ( staticFive_6 == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB158: using guessed type int staticFive_6;

//----- (000000000042B4E9) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_07_good()
{
  goodB2G1_118();
  goodB2G2_118();
  goodG2B1_104();
  return goodG2B2_104();
}

//----- (000000000042B517) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_05_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( staticTrue_5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticTrue_5;
  if ( staticTrue_5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB15C: using guessed type int staticTrue_5;

//----- (000000000042B57A) ----------------------------------------------------
int goodB2G1_119()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( staticTrue_5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( staticFalse_5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB15C: using guessed type int staticTrue_5;
// 6AB32C: using guessed type int staticFalse_5;

//----- (000000000042B608) ----------------------------------------------------
int goodB2G2_119()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( staticTrue_5 )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticTrue_5;
  if ( staticTrue_5 )
  {
    if ( v1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB15C: using guessed type int staticTrue_5;

//----- (000000000042B68A) ----------------------------------------------------
int goodG2B1_105()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFalse_5 )
    printLine("Benign, fixed string");
  else
    v1 = -2LL;
  result = staticTrue_5;
  if ( staticTrue_5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB15C: using guessed type int staticTrue_5;
// 6AB32C: using guessed type int staticFalse_5;

//----- (000000000042B6DD) ----------------------------------------------------
int goodG2B2_105()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_5 )
    v1 = -2LL;
  result = staticTrue_5;
  if ( staticTrue_5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB15C: using guessed type int staticTrue_5;

//----- (000000000042B724) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_05_good()
{
  goodB2G1_119();
  goodB2G2_119();
  goodG2B1_105();
  return goodG2B2_105();
}

//----- (000000000042B752) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_22_badSink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int_fgets_postdec_22_badGlobal;
  if ( CWE191_Integer_Underflow__int_fgets_postdec_22_badGlobal )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB230: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_22_badGlobal;

//----- (000000000042B77D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_22_goodB2G1Sink(int a1)
{
  if ( CWE191_Integer_Underflow__int_fgets_postdec_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 - 1);
}
// 6AB234: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_22_goodB2G1Global;

//----- (000000000042B7C9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int_fgets_postdec_22_goodB2G2Global;
  if ( CWE191_Integer_Underflow__int_fgets_postdec_22_goodB2G2Global )
  {
    if ( a1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 - 1);
  }
  return result;
}
// 6AB238: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_22_goodB2G2Global;

//----- (000000000042B809) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int_fgets_postdec_22_goodG2BGlobal;
  if ( CWE191_Integer_Underflow__int_fgets_postdec_22_goodG2BGlobal )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB23C: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_22_goodG2BGlobal;

//----- (000000000042B834) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_05_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( staticTrue_6 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = staticTrue_6;
  if ( staticTrue_6 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB160: using guessed type int staticTrue_6;

//----- (000000000042B88F) ----------------------------------------------------
int goodB2G1_120()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( staticTrue_6 )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( staticFalse_6 )
    return printLine("Benign, fixed string");
  if ( v1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB160: using guessed type int staticTrue_6;
// 6AB330: using guessed type int staticFalse_6;

//----- (000000000042B90A) ----------------------------------------------------
int goodB2G2_120()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( staticTrue_6 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = staticTrue_6;
  if ( staticTrue_6 )
  {
    if ( v1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB160: using guessed type int staticTrue_6;

//----- (000000000042B979) ----------------------------------------------------
int goodG2B1_106()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFalse_6 )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticTrue_6;
  if ( staticTrue_6 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB160: using guessed type int staticTrue_6;
// 6AB330: using guessed type int staticFalse_6;

//----- (000000000042B9C7) ----------------------------------------------------
int goodG2B2_106()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticTrue_6 )
    v1 = -2;
  result = staticTrue_6;
  if ( staticTrue_6 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB160: using guessed type int staticTrue_6;

//----- (000000000042BA09) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_05_good()
{
  goodB2G1_120();
  goodB2G2_120();
  goodG2B1_106();
  return goodG2B2_106();
}

//----- (000000000042BA37) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_54_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE191_Integer_Underflow__int_fgets_postdec_54b_badSink(v4);
}

//----- (000000000042BA9F) ----------------------------------------------------
int goodG2B_206()
{
  return CWE191_Integer_Underflow__int_fgets_postdec_54b_goodG2BSink(-2);
}

//----- (000000000042BAC1) ----------------------------------------------------
int goodB2G_192()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE191_Integer_Underflow__int_fgets_postdec_54b_goodB2GSink(v4);
}

//----- (000000000042BB29) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_54_good()
{
  goodG2B_206();
  return goodB2G_192();
}

//----- (000000000042BB43) ----------------------------------------------------
int __fastcall badSink_32(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000042BB71) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_44_bad()
{
  return badSink_32(-32768);
}

//----- (000000000042BB9B) ----------------------------------------------------
int __fastcall goodG2BSink_32(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000042BBC9) ----------------------------------------------------
int goodG2B_207()
{
  return goodG2BSink_32(-2);
}

//----- (000000000042BBF3) ----------------------------------------------------
int __fastcall goodB2GSink_26(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (000000000042BC35) ----------------------------------------------------
int goodB2G_193()
{
  return goodB2GSink_26(-32768);
}

//----- (000000000042BC5F) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_44_good()
{
  goodG2B_207();
  return goodB2G_193();
}

//----- (000000000042BC79) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_64_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE191_Integer_Underflow__int_fgets_postdec_64b_badSink(&v4);
}

//----- (000000000042BCE3) ----------------------------------------------------
int goodG2B_208()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -2;
  return CWE191_Integer_Underflow__int_fgets_postdec_64b_goodG2BSink(&v1);
}

//----- (000000000042BD07) ----------------------------------------------------
int goodB2G_194()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE191_Integer_Underflow__int_fgets_postdec_64b_goodB2GSink(&v4);
}

//----- (000000000042BD71) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_64_good()
{
  goodG2B_208();
  return goodB2G_194();
}

//----- (000000000042BD8B) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_03_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 - 1);
}

//----- (000000000042BDFD) ----------------------------------------------------
int goodB2G1_121()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 - 1);
  return result;
}

//----- (000000000042BE84) ----------------------------------------------------
int goodB2G2_121()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 - 1);
  return result;
}

//----- (000000000042BF0B) ----------------------------------------------------
int goodG2B1_107()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000042BF37) ----------------------------------------------------
int goodG2B2_107()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000042BF63) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_03_good()
{
  goodB2G1_121();
  goodB2G2_121();
  goodG2B1_107();
  return goodG2B2_107();
}

//----- (000000000042BF91) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_13_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042BFEE) ----------------------------------------------------
int goodB2G1_122()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042C06D) ----------------------------------------------------
int goodB2G2_122()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042C0E0) ----------------------------------------------------
int goodG2B1_108()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042C12E) ----------------------------------------------------
int goodG2B2_108()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042C170) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_13_good()
{
  goodB2G1_122();
  goodB2G2_122();
  goodG2B1_108();
  return goodG2B2_108();
}

//----- (000000000042C19E) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_52_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_52b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C1D9) ----------------------------------------------------
int goodG2B_209()
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_52b_goodG2BSink(-2LL);
}

//----- (000000000042C1FF) ----------------------------------------------------
int goodB2G_195()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_52b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C23A) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_52_good()
{
  goodG2B_209();
  return goodB2G_195();
}

//----- (000000000042C254) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_52b_badSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_52c_badSink(a1);
}

//----- (000000000042C26E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_52b_goodG2BSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_52c_goodG2BSink(a1);
}

//----- (000000000042C288) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_52b_goodB2GSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_52c_goodB2GSink(a1);
}

//----- (000000000042C2A2) ----------------------------------------------------
__int64 staticReturnsTrue_7()
{
  return 1LL;
}

//----- (000000000042C2AD) ----------------------------------------------------
__int64 staticReturnsFalse_7()
{
  return 0LL;
}

//----- (000000000042C2B8) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_08_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( (unsigned int)staticReturnsTrue_7() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = staticReturnsTrue_7();
  if ( result )
    result = printHexCharLine(v2 - 1);
  return result;
}

//----- (000000000042C32F) ----------------------------------------------------
int goodB2G1_123()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( (unsigned int)staticReturnsTrue_7() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( (unsigned int)staticReturnsFalse_7() )
    return printLine("Benign, fixed string");
  if ( v2 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 - 1);
}

//----- (000000000042C3C4) ----------------------------------------------------
int goodB2G2_123()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( (unsigned int)staticReturnsTrue_7() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = staticReturnsTrue_7();
  if ( result )
  {
    if ( v2 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 - 1);
  }
  return result;
}

//----- (000000000042C44D) ----------------------------------------------------
int goodG2B1_109()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsFalse_7() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticReturnsTrue_7();
  if ( result )
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (000000000042C4A3) ----------------------------------------------------
int goodG2B2_109()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_7() )
    v1 = -2;
  result = staticReturnsTrue_7();
  if ( result )
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (000000000042C4ED) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_08_good()
{
  goodB2G1_123();
  goodB2G2_123();
  goodG2B1_109();
  return goodG2B2_109();
}

//----- (000000000042C51B) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_63_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v4 = v1;
  return CWE191_Integer_Underflow__short_rand_postdec_63b_badSink(&v4);
}

//----- (000000000042C57D) ----------------------------------------------------
int goodG2B_210()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = -2;
  return CWE191_Integer_Underflow__short_rand_postdec_63b_goodG2BSink(&v1);
}

//----- (000000000042C59F) ----------------------------------------------------
int goodB2G_196()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v4 = v1;
  return CWE191_Integer_Underflow__short_rand_postdec_63b_goodB2GSink(&v4);
}

//----- (000000000042C601) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_63_good()
{
  goodG2B_210();
  return goodB2G_196();
}

//----- (000000000042C61B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54c_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_54d_badSink(a1);
}

//----- (000000000042C632) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54c_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_54d_goodG2BSink(a1);
}

//----- (000000000042C649) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54c_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_54d_goodB2GSink(a1);
}

//----- (000000000042C660) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_18_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 - 1));
}

//----- (000000000042C6D6) ----------------------------------------------------
int goodB2G_197()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (000000000042C760) ----------------------------------------------------
int goodG2B_211()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000042C796) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_18_good()
{
  goodB2G_197();
  return goodG2B_211();
}

//----- (000000000042C7B0) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_53d_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000042C7D1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000042C7F2) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000042C828) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_67b_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000042C84F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000042C876) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000042C8B2) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_53c_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_fgets_postdec_53d_badSink(a1);
}

//----- (000000000042C8C9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_53c_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_fgets_postdec_53d_goodG2BSink(a1);
}

//----- (000000000042C8E0) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_53c_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_fgets_postdec_53d_goodB2GSink(a1);
}

//----- (000000000042C8F7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_51b_badSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000042C922) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_51b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000042C94D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_51b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (000000000042C98A) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_61_bad()
{
  __int16 v0; // ax

  v0 = (unsigned __int64)CWE191_Integer_Underflow__short_min_postdec_61b_badSource() - 1;
  return printIntLine(v0);
}

//----- (000000000042C9C7) ----------------------------------------------------
int goodG2B_212()
{
  __int16 v0; // ax

  v0 = (unsigned __int64)CWE191_Integer_Underflow__short_min_postdec_61b_goodG2BSource() - 1;
  return printIntLine(v0);
}

//----- (000000000042CA04) ----------------------------------------------------
int goodB2G_198()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = CWE191_Integer_Underflow__short_min_postdec_61b_goodB2GSource();
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (000000000042CA55) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_61_good()
{
  goodG2B_212();
  return goodB2G_198();
}

//----- (000000000042CA6F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54e_badSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (000000000042CA90) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54e_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (000000000042CAB1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000042CAE4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_65b_badSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000042CB0F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_65b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000042CB3A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_65b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (000000000042CB77) ----------------------------------------------------
int __fastcall badSink_33(int a1)
{
  int result; // eax

  result = badStatic_5;
  if ( badStatic_5 )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB334: using guessed type int badStatic_5;

//----- (000000000042CBA2) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_21_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  badStatic_5 = 1;
  return badSink_33(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB334: using guessed type int badStatic_5;

//----- (000000000042CBE4) ----------------------------------------------------
int __fastcall goodB2G1Sink_5(int a1)
{
  if ( goodB2G1Static_5 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 - 1);
}
// 6AB338: using guessed type int goodB2G1Static_5;

//----- (000000000042CC30) ----------------------------------------------------
int goodB2G1_124()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G1Static_5 = 0;
  return goodB2G1Sink_5(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB338: using guessed type int goodB2G1Static_5;

//----- (000000000042CC72) ----------------------------------------------------
int __fastcall goodB2G2Sink_5(int a1)
{
  int result; // eax

  result = goodB2G2Static_5;
  if ( goodB2G2Static_5 )
  {
    if ( a1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 - 1);
  }
  return result;
}
// 6AB33C: using guessed type int goodB2G2Static_5;

//----- (000000000042CCB2) ----------------------------------------------------
int goodB2G2_124()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G2Static_5 = 1;
  return goodB2G2Sink_5(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB33C: using guessed type int goodB2G2Static_5;

//----- (000000000042CCF4) ----------------------------------------------------
int __fastcall goodG2BSink_33(int a1)
{
  int result; // eax

  result = goodG2BStatic_5;
  if ( goodG2BStatic_5 )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB340: using guessed type int goodG2BStatic_5;

//----- (000000000042CD1F) ----------------------------------------------------
int goodG2B_213()
{
  goodG2BStatic_5 = 1;
  return goodG2BSink_33(-2);
}
// 6AB340: using guessed type int goodG2BStatic_5;

//----- (000000000042CD4B) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_21_good()
{
  goodB2G1_124();
  goodB2G2_124();
  return goodG2B_213();
}

//----- (000000000042CD6F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_03_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return printIntLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042CDB6) ----------------------------------------------------
int goodB2G1_125()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042CE13) ----------------------------------------------------
int goodB2G2_125()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042CE70) ----------------------------------------------------
int goodG2B1_110()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000042CE9C) ----------------------------------------------------
int goodG2B2_110()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000042CEC8) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_03_good()
{
  goodB2G1_125();
  goodB2G2_125();
  goodG2B1_110();
  return goodG2B2_110();
}

//----- (000000000042CEF6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54b_badSink(char a1)
{
  return CWE191_Integer_Underflow__char_rand_postdec_54c_badSink(a1);
}

//----- (000000000042CF10) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54b_goodG2BSink(char a1)
{
  return CWE191_Integer_Underflow__char_rand_postdec_54c_goodG2BSink(a1);
}

//----- (000000000042CF2A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54b_goodB2GSink(char a1)
{
  return CWE191_Integer_Underflow__char_rand_postdec_54c_goodB2GSink(a1);
}

//----- (000000000042CF44) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_22_bad()
{
  CWE191_Integer_Underflow__int_min_postdec_22_badGlobal = 1;
  return CWE191_Integer_Underflow__int_min_postdec_22_badSink(2147483648);
}
// 6AB344: using guessed type int CWE191_Integer_Underflow__int_min_postdec_22_badGlobal;

//----- (000000000042CF70) ----------------------------------------------------
int goodB2G1_126()
{
  CWE191_Integer_Underflow__int_min_postdec_22_goodB2G1Global = 0;
  return CWE191_Integer_Underflow__int_min_postdec_22_goodB2G1Sink(2147483648);
}
// 6AB348: using guessed type int CWE191_Integer_Underflow__int_min_postdec_22_goodB2G1Global;

//----- (000000000042CF9C) ----------------------------------------------------
int goodB2G2_126()
{
  CWE191_Integer_Underflow__int_min_postdec_22_goodB2G2Global = 1;
  return CWE191_Integer_Underflow__int_min_postdec_22_goodB2G2Sink(2147483648);
}
// 6AB34C: using guessed type int CWE191_Integer_Underflow__int_min_postdec_22_goodB2G2Global;

//----- (000000000042CFC8) ----------------------------------------------------
int goodG2B_214()
{
  CWE191_Integer_Underflow__int_min_postdec_22_goodG2BGlobal = 1;
  return CWE191_Integer_Underflow__int_min_postdec_22_goodG2BSink(-2);
}
// 6AB350: using guessed type int CWE191_Integer_Underflow__int_min_postdec_22_goodG2BGlobal;

//----- (000000000042CFF4) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_22_good()
{
  goodB2G1_126();
  goodB2G2_126();
  return goodG2B_214();
}

//----- (000000000042D018) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_51b_badSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000042D03F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_51b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000042D066) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_51b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (000000000042D0A9) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_17_bad()
{
  int result; // eax
  __int16 v1; // [rsp+4h] [rbp-Ch]
  __int16 v2; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%hd", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = --v1;
    result = printIntLine(v1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042D11A) ----------------------------------------------------
int goodB2G_199()
{
  int result; // eax
  __int16 v1; // [rsp+4h] [rbp-Ch]
  __int16 v2; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%hd", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == -32768 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = --v1;
      result = printIntLine(v1);
    }
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042D1A1) ----------------------------------------------------
int goodG2B_215()
{
  int result; // eax
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(--v1);
  return result;
}

//----- (000000000042D1FB) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_17_good()
{
  goodB2G_199();
  return goodG2B_215();
}

//----- (000000000042D215) ----------------------------------------------------
__int64 staticReturnsTrue_8()
{
  return 1LL;
}

//----- (000000000042D220) ----------------------------------------------------
__int64 staticReturnsFalse_8()
{
  return 0LL;
}

//----- (000000000042D22B) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_08_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue_8();
  if ( result )
    result = printIntLine(v7 - 1);
  return result;
}
// 42D22B: using guessed type char buf[16];

//----- (000000000042D33D) ----------------------------------------------------
int goodB2G1_127()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( (unsigned int)staticReturnsFalse_8() )
    return printLine("Benign, fixed string");
  if ( v7 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 - 1);
}
// 42D33D: using guessed type char buf[16];

//----- (000000000042D470) ----------------------------------------------------
int goodB2G2_127()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue_8();
  if ( result )
  {
    if ( v7 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 - 1);
  }
  return result;
}
// 42D470: using guessed type char buf[16];

//----- (000000000042D597) ----------------------------------------------------
int goodG2B1_111()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_8() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticReturnsTrue_8();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (000000000042D5EB) ----------------------------------------------------
int goodG2B2_111()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_8() )
    v1 = -2;
  result = staticReturnsTrue_8();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (000000000042D633) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_08_good()
{
  goodB2G1_127();
  goodB2G2_127();
  goodG2B1_111();
  return goodG2B2_111();
}

//----- (000000000042D661) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_16_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 - 1);
}

//----- (000000000042D72D) ----------------------------------------------------
int goodB2G_200()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 - 1);
  return result;
}

//----- (000000000042D815) ----------------------------------------------------
int goodG2B_216()
{
  return printLongLongLine(-3LL);
}

//----- (000000000042D84A) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_16_good()
{
  goodB2G_200();
  return goodG2B_216();
}

//----- (000000000042D864) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_14_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042D8C1) ----------------------------------------------------
int goodB2G1_128()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 )
    return printUnsignedLine(v1 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042D93D) ----------------------------------------------------
int goodB2G2_128()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(v1 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042D9AD) ----------------------------------------------------
int goodG2B1_112()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042D9FB) ----------------------------------------------------
int goodG2B2_112()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000042DA3D) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_14_good()
{
  goodB2G1_128();
  goodB2G2_128();
  goodG2B1_112();
  return goodG2B2_112();
}

//----- (000000000042DA6B) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  *v4 = v1;
  return printUnsignedLine(*v3 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042DAD8) ----------------------------------------------------
int goodG2B_217()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -2;
  v1 = -2;
  v3 = -3;
  v2 = -3;
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000042DB2F) ----------------------------------------------------
int goodB2G_201()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+Ch] [rbp-14h]
  int *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  *v5 = v1;
  v3 = *v4;
  if ( v3 )
    result = printUnsignedLine(v3 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042DBAE) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_32_good()
{
  goodG2B_217();
  return goodB2G_201();
}

//----- (000000000042DBC8) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53b_badSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53c_badSink(a1);
}

//----- (000000000042DBDF) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53c_goodG2BSink(a1);
}

//----- (000000000042DBF6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53c_goodB2GSink(a1);
}

//----- (000000000042DC0D) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_18_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 - 1);
}
// 42DC0D: using guessed type char buf[16];

//----- (000000000042DD01) ----------------------------------------------------
int goodB2G_202()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 - 1);
  return result;
}
// 42DD01: using guessed type char buf[16];

//----- (000000000042DE0A) ----------------------------------------------------
int goodG2B_218()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000042DE38) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_18_good()
{
  goodB2G_202();
  return goodG2B_218();
}

//----- (000000000042DE52) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_15_bad()
{
  return printHexCharLine(127);
}

//----- (000000000042DE82) ----------------------------------------------------
int goodB2G1_129()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042DEC4) ----------------------------------------------------
int goodB2G2_129()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042DF06) ----------------------------------------------------
int goodG2B1_113()
{
  return printHexCharLine(-3);
}

//----- (000000000042DF36) ----------------------------------------------------
int goodG2B2_113()
{
  return printHexCharLine(-3);
}

//----- (000000000042DF66) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_15_good()
{
  goodB2G1_129();
  goodB2G2_129();
  goodG2B1_113();
  return goodG2B2_113();
}

//----- (000000000042DF94) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_65_bad()
{
  return CWE191_Integer_Underflow__char_min_postdec_65b_badSink(-128);
}

//----- (000000000042DFBA) ----------------------------------------------------
int goodG2B_219()
{
  return CWE191_Integer_Underflow__char_min_postdec_65b_goodG2BSink(-2);
}

//----- (000000000042DFE0) ----------------------------------------------------
int goodB2G_203()
{
  return CWE191_Integer_Underflow__char_min_postdec_65b_goodB2GSink(-128);
}

//----- (000000000042E006) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_65_good()
{
  goodG2B_219();
  return goodB2G_203();
}

//----- (000000000042E020) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_68b_badSink()
{
  return printIntLine((__int16)(CWE191_Integer_Underflow__short_fscanf_postdec_68_badData - 1));
}
// 6AB542: using guessed type __int16 CWE191_Integer_Underflow__short_fscanf_postdec_68_badData;

//----- (000000000042E053) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_68b_goodG2BSink()
{
  return printIntLine((__int16)(CWE191_Integer_Underflow__short_fscanf_postdec_68_goodG2BData - 1));
}
// 6AB544: using guessed type __int16 CWE191_Integer_Underflow__short_fscanf_postdec_68_goodG2BData;

//----- (000000000042E086) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__short_fscanf_postdec_68_goodB2GData == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(CWE191_Integer_Underflow__short_fscanf_postdec_68_goodB2GData - 1));
  return result;
}
// 6AB540: using guessed type __int16 CWE191_Integer_Underflow__short_fscanf_postdec_68_goodB2GData;

//----- (000000000042E0CD) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_12_bad()
{
  int v1; // [rsp+4h] [rbp-Ch]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%d", &v1);
  else
    v1 = -2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v1 - 1);
  if ( v1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042E16A) ----------------------------------------------------
int goodB2G_204()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]

  v1 = 0;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 - 1);
  }
  else if ( v1 == 0x80000000 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042E233) ----------------------------------------------------
int goodG2B_220()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000042E29A) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_12_good()
{
  goodB2G_204();
  return goodG2B_220();
}

//----- (000000000042E2B4) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_13_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2147483648;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042E2F6) ----------------------------------------------------
int goodB2G1_130()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2147483648;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 - 1);
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042E359) ----------------------------------------------------
int goodB2G2_130()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = 2147483648;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 - 1);
  }
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042E3B0) ----------------------------------------------------
int goodG2B1_114()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042E3FE) ----------------------------------------------------
int goodG2B2_114()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042E440) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_13_good()
{
  goodB2G1_130();
  goodB2G2_130();
  goodG2B1_114();
  return goodG2B2_114();
}

//----- (000000000042E46E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_54_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE191_Integer_Underflow__char_rand_postdec_54b_badSink(v0);
}

//----- (000000000042E4B8) ----------------------------------------------------
int goodG2B_221()
{
  return CWE191_Integer_Underflow__char_rand_postdec_54b_goodG2BSink(-2);
}

//----- (000000000042E4D5) ----------------------------------------------------
int goodB2G_205()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE191_Integer_Underflow__char_rand_postdec_54b_goodB2GSink(v0);
}

//----- (000000000042E51F) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_54_good()
{
  goodG2B_221();
  return goodB2G_205();
}

//----- (000000000042E539) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_51_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE191_Integer_Underflow__int64_t_rand_postdec_51b_badSink(v4);
}

//----- (000000000042E5F6) ----------------------------------------------------
int goodG2B_222()
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_51b_goodG2BSink(-2LL);
}

//----- (000000000042E61C) ----------------------------------------------------
int goodB2G_206()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE191_Integer_Underflow__int64_t_rand_postdec_51b_goodB2GSink(v4);
}

//----- (000000000042E6D9) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_51_good()
{
  goodG2B_222();
  return goodB2G_206();
}

//----- (000000000042E6F3) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_53d_badSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000042E71A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_53d_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000042E741) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_53d_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (000000000042E784) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__short_rand_postdec_61b_badSource()
{
  int v0; // ebx
  __int64 result; // rax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(result) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    LODWORD(result) = ~(v2 ^ rand());
  }
  return (unsigned __int16)result;
}

//----- (000000000042E7DE) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__short_rand_postdec_61b_goodG2BSource()
{
  return 65534LL;
}

//----- (000000000042E7F4) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__short_rand_postdec_61b_goodB2GSource()
{
  int v0; // ebx
  __int64 result; // rax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(result) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    LODWORD(result) = ~(v2 ^ rand());
  }
  return (unsigned __int16)result;
}

//----- (000000000042E84E) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_04_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_477040, &v1);
  return printUnsignedLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042E8A7) ----------------------------------------------------
int goodB2G1_131()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_477040, &v1);
  if ( v1 )
    result = printUnsignedLine(v1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042E91F) ----------------------------------------------------
int goodB2G2_131()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_477040, &v1);
  if ( v1 )
    result = printUnsignedLine(v1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042E98B) ----------------------------------------------------
int goodG2B1_115()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000042E9D5) ----------------------------------------------------
int goodG2B2_115()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000042EA13) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_04_good()
{
  goodB2G1_131();
  goodB2G2_131();
  goodG2B1_115();
  return goodG2B2_115();
}

//----- (000000000042EA41) ----------------------------------------------------
int badSink_34()
{
  return printLongLongLine(CWE191_Integer_Underflow__int64_t_rand_postdec_45_badData - 1);
}
// 6AB358: using guessed type __int64 CWE191_Integer_Underflow__int64_t_rand_postdec_45_badData;

//----- (000000000042EA6F) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_45_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE191_Integer_Underflow__int64_t_rand_postdec_45_badData = v4;
  return badSink_34();
}
// 6AB358: using guessed type __int64 CWE191_Integer_Underflow__int64_t_rand_postdec_45_badData;

//----- (000000000042EB35) ----------------------------------------------------
int goodG2BSink_34()
{
  return printLongLongLine(CWE191_Integer_Underflow__int64_t_rand_postdec_45_goodG2BData - 1);
}
// 6AB360: using guessed type __int64 CWE191_Integer_Underflow__int64_t_rand_postdec_45_goodG2BData;

//----- (000000000042EB63) ----------------------------------------------------
int goodG2B_223()
{
  CWE191_Integer_Underflow__int64_t_rand_postdec_45_goodG2BData = -2LL;
  return goodG2BSink_34();
}
// 6AB360: using guessed type __int64 CWE191_Integer_Underflow__int64_t_rand_postdec_45_goodG2BData;

//----- (000000000042EB92) ----------------------------------------------------
int goodB2GSink_27()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__int64_t_rand_postdec_45_goodB2GData == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE191_Integer_Underflow__int64_t_rand_postdec_45_goodB2GData - 1);
  return result;
}
// 6AB368: using guessed type __int64 CWE191_Integer_Underflow__int64_t_rand_postdec_45_goodB2GData;

//----- (000000000042EBDC) ----------------------------------------------------
int goodB2G_207()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE191_Integer_Underflow__int64_t_rand_postdec_45_goodB2GData = v4;
  return goodB2GSink_27();
}
// 6AB368: using guessed type __int64 CWE191_Integer_Underflow__int64_t_rand_postdec_45_goodB2GData;

//----- (000000000042ECA2) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_45_good()
{
  goodG2B_223();
  return goodB2G_207();
}

//----- (000000000042ECBC) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_06_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 - 1);
}

//----- (000000000042ED9E) ----------------------------------------------------
int goodB2G1_132()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 - 1);
  return result;
}

//----- (000000000042EEA8) ----------------------------------------------------
int goodB2G2_132()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 - 1);
  return result;
}

//----- (000000000042EFA6) ----------------------------------------------------
int goodG2B1_116()
{
  return printLongLongLine(-3LL);
}

//----- (000000000042EFF9) ----------------------------------------------------
int goodG2B2_116()
{
  return printLongLongLine(-3LL);
}

//----- (000000000042F040) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_06_good()
{
  goodB2G1_132();
  goodB2G2_132();
  goodG2B1_116();
  return goodG2B2_116();
}

//----- (000000000042F06E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_11_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042F0D1) ----------------------------------------------------
int goodB2G1_133()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042F156) ----------------------------------------------------
int goodB2G2_133()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042F1CF) ----------------------------------------------------
int goodG2B1_117()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (000000000042F223) ----------------------------------------------------
int goodG2B2_117()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (000000000042F26B) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_11_good()
{
  goodB2G1_133();
  goodB2G2_133();
  goodG2B1_117();
  return goodG2B2_117();
}

//----- (000000000042F299) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_02_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return printIntLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042F2E0) ----------------------------------------------------
int goodB2G1_134()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042F33D) ----------------------------------------------------
int goodB2G2_134()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042F39A) ----------------------------------------------------
int goodG2B1_118()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000042F3C6) ----------------------------------------------------
int goodG2B2_118()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000042F3F2) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_02_good()
{
  goodB2G1_134();
  goodB2G2_134();
  goodG2B1_118();
  return goodG2B2_118();
}

//----- (000000000042F420) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_03_bad()
{
  return printIntLine(0x7FFFFFFFu);
}

//----- (000000000042F44C) ----------------------------------------------------
int goodB2G1_135()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042F48D) ----------------------------------------------------
int goodB2G2_135()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000042F4CE) ----------------------------------------------------
int goodG2B1_119()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000042F4FA) ----------------------------------------------------
int goodG2B2_119()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000042F526) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_03_good()
{
  goodB2G1_135();
  goodB2G2_135();
  goodG2B1_119();
  return goodG2B2_119();
}

//----- (000000000042F554) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_65_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_65b_badSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042F595) ----------------------------------------------------
int goodG2B_224()
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_65b_goodG2BSink(-2);
}

//----- (000000000042F5C0) ----------------------------------------------------
__int64 goodB2G_208()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_65b_goodB2GSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042F601) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_65_good()
{
  goodG2B_224();
  return goodB2G_208();
}

//----- (000000000042F61B) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_66_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  char v4; // [rsp+0h] [rbp-20h]
  __int16 v5; // [rsp+4h] [rbp-1Ch]
  __int16 v6; // [rsp+Eh] [rbp-12h]

  v6 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v6 = v1;
  v5 = v1;
  return CWE191_Integer_Underflow__short_rand_postdec_66b_badSink((__int64)&v4);
}

//----- (000000000042F685) ----------------------------------------------------
int goodG2B_225()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = -2;
  v2 = -2;
  return CWE191_Integer_Underflow__short_rand_postdec_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000042F6AF) ----------------------------------------------------
int goodB2G_209()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  char v4; // [rsp+0h] [rbp-20h]
  __int16 v5; // [rsp+4h] [rbp-1Ch]
  __int16 v6; // [rsp+Eh] [rbp-12h]

  v6 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v6 = v1;
  v5 = v1;
  return CWE191_Integer_Underflow__short_rand_postdec_66b_goodB2GSink((__int64)&v4);
}

//----- (000000000042F719) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_66_good()
{
  goodG2B_225();
  return goodB2G_209();
}

//----- (000000000042F733) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_52c_badSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000042F75A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_52c_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000042F781) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_52c_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (000000000042F7C4) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_54_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE191_Integer_Underflow__int_connect_socket_postdec_54b_badSink(v7);
}
// 42F7C4: using guessed type char buf[16];

//----- (000000000042F8AC) ----------------------------------------------------
int goodG2B_226()
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_54b_goodG2BSink(-2);
}

//----- (000000000042F8CE) ----------------------------------------------------
int goodB2G_210()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE191_Integer_Underflow__int_connect_socket_postdec_54b_goodB2GSink(v7);
}
// 42F8CE: using guessed type char buf[16];

//----- (000000000042F9B6) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_54_good()
{
  goodG2B_226();
  return goodB2G_210();
}

//----- (000000000042F9D0) ----------------------------------------------------
unsigned __int64 badSource_7()
{
  return 0x8000000000000000LL;
}

//----- (000000000042F9EC) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_42_bad()
{
  unsigned __int64 v0; // rax

  v0 = badSource_7();
  return printLongLongLine(v0 - 1);
}

//----- (000000000042FA27) ----------------------------------------------------
__int64 goodG2BSource_7()
{
  return -2LL;
}

//----- (000000000042FA3D) ----------------------------------------------------
int goodG2B_227()
{
  __int64 v0; // rax

  v0 = goodG2BSource_7();
  return printLongLongLine(v0 - 1);
}

//----- (000000000042FA78) ----------------------------------------------------
unsigned __int64 goodB2GSource_7()
{
  return 0x8000000000000000LL;
}

//----- (000000000042FA94) ----------------------------------------------------
int goodB2G_211()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = goodB2GSource_7();
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (000000000042FAEB) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_42_good()
{
  goodB2G_211();
  return goodG2B_227();
}

//----- (000000000042FB05) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_badSink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_badGlobal;
  if ( CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_badGlobal )
    result = printUnsignedLine(a1 - 1);
  return result;
}
// 6AB274: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_badGlobal;

//----- (000000000042FB30) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodB2G1Sink(int a1)
{
  if ( CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 )
    return printUnsignedLine(a1 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 6AB278: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodB2G1Global;

//----- (000000000042FB79) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodB2G2Global;
  if ( CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodB2G2Global )
  {
    if ( a1 )
      result = printUnsignedLine(a1 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 6AB27C: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodB2G2Global;

//----- (000000000042FBB6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodG2BGlobal;
  if ( CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodG2BGlobal )
    result = printUnsignedLine(a1 - 1);
  return result;
}
// 6AB280: using guessed type int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_22_goodG2BGlobal;

//----- (000000000042FBE1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54d_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_rand_postdec_54e_badSink(a1);
}

//----- (000000000042FBF8) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54d_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_rand_postdec_54e_goodG2BSink(a1);
}

//----- (000000000042FC0F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54d_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_rand_postdec_54e_goodB2GSink(a1);
}

//----- (000000000042FC26) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_53b_badSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_53c_badSink(a1);
}

//----- (000000000042FC40) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_53b_goodG2BSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_53c_goodG2BSink(a1);
}

//----- (000000000042FC5A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_53b_goodB2GSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_53c_goodB2GSink(a1);
}

//----- (000000000042FC74) ----------------------------------------------------
int __fastcall badSink_35(__int64 a1)
{
  int result; // eax

  result = badStatic_6;
  if ( badStatic_6 )
    result = printLongLongLine(a1 - 1);
  return result;
}
// 6AB370: using guessed type int badStatic_6;

//----- (000000000042FCA5) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_21_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  badStatic_6 = 1;
  return badSink_35(v4);
}
// 6AB370: using guessed type int badStatic_6;

//----- (000000000042FD6C) ----------------------------------------------------
int __fastcall goodB2G1Sink_6(__int64 a1)
{
  if ( goodB2G1Static_6 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 - 1);
}
// 6AB374: using guessed type int goodB2G1Static_6;

//----- (000000000042FDC5) ----------------------------------------------------
int goodB2G1_136()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  goodB2G1Static_6 = 0;
  return goodB2G1Sink_6(v4);
}
// 6AB374: using guessed type int goodB2G1Static_6;

//----- (000000000042FE8C) ----------------------------------------------------
int __fastcall goodB2G2Sink_6(__int64 a1)
{
  int result; // eax

  result = goodB2G2Static_6;
  if ( goodB2G2Static_6 )
  {
    if ( a1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 - 1);
  }
  return result;
}
// 6AB378: using guessed type int goodB2G2Static_6;

//----- (000000000042FED9) ----------------------------------------------------
int goodB2G2_136()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  goodB2G2Static_6 = 1;
  return goodB2G2Sink_6(v4);
}
// 6AB378: using guessed type int goodB2G2Static_6;

//----- (000000000042FFA0) ----------------------------------------------------
int __fastcall goodG2BSink_35(__int64 a1)
{
  int result; // eax

  result = goodG2BStatic_6;
  if ( goodG2BStatic_6 )
    result = printLongLongLine(a1 - 1);
  return result;
}
// 6AB37C: using guessed type int goodG2BStatic_6;

//----- (000000000042FFD1) ----------------------------------------------------
int goodG2B_228()
{
  goodG2BStatic_6 = 1;
  return goodG2BSink_35(-2LL);
}
// 6AB37C: using guessed type int goodG2BStatic_6;

//----- (0000000000430001) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_21_good()
{
  goodB2G1_136();
  goodB2G2_136();
  return goodG2B_228();
}

//----- (0000000000430025) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_07_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticFive_7 == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticFive_7;
  if ( staticFive_7 == 5 )
    result = printIntLine((__int16)(v4 - 1));
  return result;
}
// 6AB164: using guessed type int staticFive_7;

//----- (00000000004300AF) ----------------------------------------------------
int goodB2G1_137()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticFive_7 == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( staticFive_7 != 5 )
    return printLine("Benign, fixed string");
  if ( v4 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 - 1));
}
// 6AB164: using guessed type int staticFive_7;

//----- (0000000000430159) ----------------------------------------------------
int goodB2G2_137()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( staticFive_7 == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticFive_7;
  if ( staticFive_7 == 5 )
  {
    if ( v4 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 - 1));
  }
  return result;
}
// 6AB164: using guessed type int staticFive_7;

//----- (00000000004301F7) ----------------------------------------------------
int goodG2B1_120()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_7 == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = staticFive_7;
  if ( staticFive_7 == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB164: using guessed type int staticFive_7;

//----- (000000000043024D) ----------------------------------------------------
int goodG2B2_120()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFive_7 == 5 )
    v1 = -2;
  result = staticFive_7;
  if ( staticFive_7 == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB164: using guessed type int staticFive_7;

//----- (0000000000430297) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_07_good()
{
  goodB2G1_137();
  goodB2G2_137();
  goodG2B1_120();
  return goodG2B2_120();
}

//----- (00000000004302C5) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_01_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return printIntLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043030C) ----------------------------------------------------
int goodG2B_229()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000430338) ----------------------------------------------------
int goodB2G_212()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000430395) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_01_good()
{
  goodG2B_229();
  return goodB2G_212();
}

//----- (00000000004303AF) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_54_bad()
{
  return CWE191_Integer_Underflow__int_min_postdec_54b_badSink(2147483648);
}

//----- (00000000004303D1) ----------------------------------------------------
int goodG2B_230()
{
  return CWE191_Integer_Underflow__int_min_postdec_54b_goodG2BSink(-2);
}

//----- (00000000004303F3) ----------------------------------------------------
int goodB2G_213()
{
  return CWE191_Integer_Underflow__int_min_postdec_54b_goodB2GSink(2147483648);
}

//----- (0000000000430415) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_54_good()
{
  goodG2B_230();
  return goodB2G_213();
}

//----- (000000000043042F) ----------------------------------------------------
__int64 __fastcall badSource_8(unsigned __int16 a1)
{
  unsigned __int16 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%hd", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000430460) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_42_bad()
{
  __int16 v0; // ax

  v0 = (unsigned __int64)badSource_8(0) - 1;
  return printIntLine(v0);
}

//----- (000000000043049D) ----------------------------------------------------
__int64 goodG2BSource_8()
{
  return 65534LL;
}

//----- (00000000004304B3) ----------------------------------------------------
int goodG2B_231()
{
  __int16 v0; // ax

  v0 = (unsigned __int64)goodG2BSource_8() - 1;
  return printIntLine(v0);
}

//----- (00000000004304F0) ----------------------------------------------------
__int64 __fastcall goodB2GSource_8(unsigned __int16 a1)
{
  unsigned __int16 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%hd", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000430521) ----------------------------------------------------
int goodB2G_214()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = goodB2GSource_8(0);
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (0000000000430572) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_42_good()
{
  goodB2G_214();
  return goodG2B_231();
}

//----- (000000000043058C) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_54_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE191_Integer_Underflow__int_fscanf_postdec_54b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004305C4) ----------------------------------------------------
int goodG2B_232()
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_54b_goodG2BSink(-2);
}

//----- (00000000004305E6) ----------------------------------------------------
int goodB2G_215()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE191_Integer_Underflow__int_fscanf_postdec_54b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043061E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_54_good()
{
  goodG2B_232();
  return goodB2G_215();
}

//----- (0000000000430638) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_63_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE191_Integer_Underflow__int_fgets_postdec_63b_badSink(&v4);
}

//----- (00000000004306A2) ----------------------------------------------------
int goodG2B_233()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -2;
  return CWE191_Integer_Underflow__int_fgets_postdec_63b_goodG2BSink(&v1);
}

//----- (00000000004306C6) ----------------------------------------------------
int goodB2G_216()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE191_Integer_Underflow__int_fgets_postdec_63b_goodB2GSink(&v4);
}

//----- (0000000000430730) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_63_good()
{
  goodG2B_233();
  return goodB2G_216();
}

//----- (000000000043074A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_63b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 - 1LL);
}

//----- (000000000043077C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_63b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 - 1LL);
}

//----- (00000000004307AE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_63b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 - 1LL);
  return result;
}

//----- (00000000004307FC) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_68b_badSink()
{
  return printHexCharLine(CWE191_Integer_Underflow__char_rand_postdec_68_badData - 1);
}
// 6AB591: using guessed type char CWE191_Integer_Underflow__char_rand_postdec_68_badData;

//----- (000000000043082C) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_68b_goodG2BSink()
{
  return printHexCharLine(CWE191_Integer_Underflow__char_rand_postdec_68_goodG2BData - 1);
}
// 6AB592: using guessed type char CWE191_Integer_Underflow__char_rand_postdec_68_goodG2BData;

//----- (000000000043085C) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__char_rand_postdec_68_goodB2GData == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(CWE191_Integer_Underflow__char_rand_postdec_68_goodB2GData - 1);
  return result;
}
// 6AB590: using guessed type char CWE191_Integer_Underflow__char_rand_postdec_68_goodB2GData;

//----- (000000000043089E) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_31_bad()
{
  return printUnsignedLine(0xFFFFFFFF);
}

//----- (00000000004308D6) ----------------------------------------------------
int goodG2B_234()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000043090E) ----------------------------------------------------
int goodB2G_217()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000430958) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_31_good()
{
  goodG2B_234();
  return goodB2G_217();
}

//----- (0000000000430972) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_12_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = 0;
  else
    v1 = -2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printUnsignedLine(v1 - 1);
  if ( v1 )
    return printUnsignedLine(v1 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004309EB) ----------------------------------------------------
int goodB2G_218()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000430A76) ----------------------------------------------------
int goodG2B_235()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000430ADD) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_12_good()
{
  goodB2G_218();
  return goodG2B_235();
}

//----- (0000000000430AF7) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_09_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000430B52) ----------------------------------------------------
int goodB2G1_138()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000430BCF) ----------------------------------------------------
int goodB2G2_138()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000430C40) ----------------------------------------------------
int goodG2B1_121()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000430C8C) ----------------------------------------------------
int goodG2B2_121()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000430CCC) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_09_good()
{
  goodB2G1_138();
  goodB2G2_138();
  goodG2B1_121();
  return goodG2B2_121();
}

//----- (0000000000430CFA) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_05_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_7 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = staticTrue_7;
  if ( staticTrue_7 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB168: using guessed type int staticTrue_7;

//----- (0000000000430D59) ----------------------------------------------------
int goodB2G1_139()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_7 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( staticFalse_7 )
    return printLine("Benign, fixed string");
  if ( v1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB168: using guessed type int staticTrue_7;
// 6AB380: using guessed type int staticFalse_7;

//----- (0000000000430DDA) ----------------------------------------------------
int goodB2G2_139()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_7 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = staticTrue_7;
  if ( staticTrue_7 )
  {
    if ( v1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 - 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB168: using guessed type int staticTrue_7;

//----- (0000000000430E4F) ----------------------------------------------------
int goodG2B1_122()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFalse_7 )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticTrue_7;
  if ( staticTrue_7 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB168: using guessed type int staticTrue_7;
// 6AB380: using guessed type int staticFalse_7;

//----- (0000000000430EA3) ----------------------------------------------------
int goodG2B2_122()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticTrue_7 )
    v1 = -2;
  result = staticTrue_7;
  if ( staticTrue_7 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB168: using guessed type int staticTrue_7;

//----- (0000000000430EEB) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_05_good()
{
  goodB2G1_139();
  goodB2G2_139();
  goodG2B1_122();
  return goodG2B2_122();
}

//----- (0000000000430F19) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_02_bad()
{
  return printIntLine(0x7FFFFFFFu);
}

//----- (0000000000430F45) ----------------------------------------------------
int goodB2G1_140()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000430F86) ----------------------------------------------------
int goodB2G2_140()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000430FC7) ----------------------------------------------------
int goodG2B1_123()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000430FF3) ----------------------------------------------------
int goodG2B2_123()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000043101F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_02_good()
{
  goodB2G1_140();
  goodB2G2_140();
  goodG2B1_123();
  return goodG2B2_123();
}

//----- (000000000043104D) ----------------------------------------------------
int __fastcall badSink_36(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000043107B) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_41_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return badSink_36(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004310B4) ----------------------------------------------------
int __fastcall goodG2BSink_36(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (00000000004310E2) ----------------------------------------------------
int goodG2B_236()
{
  return goodG2BSink_36(-2);
}

//----- (0000000000431103) ----------------------------------------------------
int __fastcall goodB2GSink_28(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (0000000000431145) ----------------------------------------------------
int goodB2G_219()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return goodB2GSink_28(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043117E) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_41_good()
{
  goodB2G_219();
  return goodG2B_236();
}

//----- (0000000000431198) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_17_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 0;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(--v1);
  return result;
}

//----- (00000000004311EA) ----------------------------------------------------
int goodB2G_220()
{
  int result; // eax
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; i <= 0; ++i )
    ;
  for ( j = 0; j <= 0; ++j )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000043124E) ----------------------------------------------------
int goodG2B_237()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -2;
  for ( j = 0; j <= 0; ++j )
    result = printUnsignedLine(--v1);
  return result;
}

//----- (00000000004312A0) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_17_good()
{
  goodB2G_220();
  return goodG2B_237();
}

//----- (00000000004312BA) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_53b_badSink(char a1)
{
  return CWE191_Integer_Underflow__char_rand_postdec_53c_badSink(a1);
}

//----- (00000000004312D4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_53b_goodG2BSink(char a1)
{
  return CWE191_Integer_Underflow__char_rand_postdec_53c_goodG2BSink(a1);
}

//----- (00000000004312EE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_53b_goodB2GSink(char a1)
{
  return CWE191_Integer_Underflow__char_rand_postdec_53c_goodB2GSink(a1);
}

//----- (0000000000431308) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_18_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 - 1);
}

//----- (000000000043137E) ----------------------------------------------------
int goodB2G_221()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (0000000000431409) ----------------------------------------------------
int goodG2B_238()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000431437) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_18_good()
{
  goodB2G_221();
  return goodG2B_238();
}

//----- (0000000000431451) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_63_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_63b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043148C) ----------------------------------------------------
int goodG2B_239()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = -2LL;
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_63b_goodG2BSink(&v1);
}

//----- (00000000004314B2) ----------------------------------------------------
int goodB2G_222()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_63b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004314ED) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_63_good()
{
  goodG2B_239();
  return goodB2G_222();
}

//----- (0000000000431507) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_52c_badSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (0000000000431532) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_52c_goodG2BSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000043155D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_52c_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (000000000043159A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_22_badSink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__unsigned_int_min_postdec_22_badGlobal;
  if ( CWE191_Integer_Underflow__unsigned_int_min_postdec_22_badGlobal )
    result = printUnsignedLine(a1 - 1);
  return result;
}
// 6AB3E4: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_22_badGlobal;

//----- (00000000004315C5) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodB2G1Sink(int a1)
{
  if ( CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 )
    return printUnsignedLine(a1 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 6AB3E8: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodB2G1Global;

//----- (000000000043160E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodB2G2Global;
  if ( CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodB2G2Global )
  {
    if ( a1 )
      result = printUnsignedLine(a1 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 6AB3EC: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodB2G2Global;

//----- (000000000043164B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodG2BGlobal;
  if ( CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodG2BGlobal )
    result = printUnsignedLine(a1 - 1);
  return result;
}
// 6AB3F0: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodG2BGlobal;

//----- (0000000000431676) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_34_bad()
{
  __int16 v1; // [rsp+Ah] [rbp-6h]
  __int16 v2; // [rsp+Ch] [rbp-4h]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  v3 = v1 - 1;
  v2 = v1 - 1;
  return printIntLine((__int16)(v1 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004316D1) ----------------------------------------------------
int goodG2B_240()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000431715) ----------------------------------------------------
int goodB2G_223()
{
  int result; // eax
  __int16 v1; // [rsp+Ah] [rbp-6h]
  __int16 v2; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  v2 = v1;
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v2 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000431784) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_34_good()
{
  goodG2B_240();
  return goodB2G_223();
}

//----- (000000000043179E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_68_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE191_Integer_Underflow__char_rand_postdec_68_badData = v0;
  return CWE191_Integer_Underflow__char_rand_postdec_68b_badSink();
}
// 6AB591: using guessed type char CWE191_Integer_Underflow__char_rand_postdec_68_badData;

//----- (00000000004317F1) ----------------------------------------------------
int goodG2B_241()
{
  CWE191_Integer_Underflow__char_rand_postdec_68_goodG2BData = -2;
  return CWE191_Integer_Underflow__char_rand_postdec_68b_goodG2BSink();
}
// 6AB592: using guessed type char CWE191_Integer_Underflow__char_rand_postdec_68_goodG2BData;

//----- (0000000000431817) ----------------------------------------------------
int goodB2G_224()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE191_Integer_Underflow__char_rand_postdec_68_goodB2GData = v0;
  return CWE191_Integer_Underflow__char_rand_postdec_68b_goodB2GSink();
}
// 6AB590: using guessed type char CWE191_Integer_Underflow__char_rand_postdec_68_goodB2GData;

//----- (000000000043186A) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_68_good()
{
  goodG2B_241();
  return goodB2G_224();
}

//----- (0000000000431884) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_66b_badSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) - 1));
}

//----- (00000000004318BC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_66b_goodG2BSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) - 1));
}

//----- (00000000004318F4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int16 v2; // [rsp+1Eh] [rbp-2h]

  v2 = *(_WORD *)(a1 + 4);
  if ( v2 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v2 - 1));
  return result;
}

//----- (0000000000431940) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_15_bad()
{
  return printIntLine(0x7FFFu);
}

//----- (0000000000431976) ----------------------------------------------------
int goodB2G1_141()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004319C0) ----------------------------------------------------
int goodB2G2_141()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000431A0A) ----------------------------------------------------
int goodG2B1_124()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000431A40) ----------------------------------------------------
int goodG2B2_124()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000431A76) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_15_good()
{
  goodB2G1_141();
  goodB2G2_141();
  goodG2B1_124();
  return goodG2B2_124();
}

//----- (0000000000431AA4) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_68b_badSink()
{
  return printIntLine(CWE191_Integer_Underflow__int_connect_socket_postdec_68_badData - 1);
}
// 6AB594: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_68_badData;

//----- (0000000000431ACB) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_68b_goodG2BSink()
{
  return printIntLine(CWE191_Integer_Underflow__int_connect_socket_postdec_68_goodG2BData - 1);
}
// 6AB598: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_68_goodG2BData;

//----- (0000000000431AF2) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__int_connect_socket_postdec_68_goodB2GData == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE191_Integer_Underflow__int_connect_socket_postdec_68_goodB2GData - 1);
  return result;
}
// 6AB59C: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_68_goodB2GData;

//----- (0000000000431B2E) ----------------------------------------------------
void CWE191_Integer_Underflow__int_fgets_postdec_17_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  int v3; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+14h] [rbp-Ch]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v1 = 0;
    v2 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    v3 = --v4;
    printIntLine(v4);
  }
}

//----- (0000000000431BC6) ----------------------------------------------------
void goodB2G_225()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  int v3; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+14h] [rbp-Ch]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v1 = 0;
    v2 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v4 == 0x80000000 )
    {
      printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v3 = --v4;
      printIntLine(v4);
    }
  }
}

//----- (0000000000431C73) ----------------------------------------------------
int goodG2B_242()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(--v1);
  return result;
}

//----- (0000000000431CC5) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_17_good()
{
  goodB2G_225();
  return goodG2B_242();
}

//----- (0000000000431CDF) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_68b_badSink()
{
  return printUnsignedLine(CWE191_Integer_Underflow__unsigned_int_min_postdec_68_badData - 1);
}
// 6AB58C: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_68_badData;

//----- (0000000000431D06) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_68b_goodG2BSink()
{
  return printUnsignedLine(CWE191_Integer_Underflow__unsigned_int_min_postdec_68_goodG2BData - 1);
}
// 6AB588: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_68_goodG2BData;

//----- (0000000000431D2D) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__unsigned_int_min_postdec_68_goodB2GData )
    result = printUnsignedLine(CWE191_Integer_Underflow__unsigned_int_min_postdec_68_goodB2GData - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 6AB584: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_68_goodB2GData;

//----- (0000000000431D66) ----------------------------------------------------
__int64 badSource_9()
{
  return 0x8000LL;
}

//----- (0000000000431D7C) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_42_bad()
{
  __int16 v0; // ax

  v0 = (unsigned __int64)badSource_9() - 1;
  return printIntLine(v0);
}

//----- (0000000000431DB9) ----------------------------------------------------
__int64 goodG2BSource_9()
{
  return 65534LL;
}

//----- (0000000000431DCF) ----------------------------------------------------
int goodG2B_243()
{
  __int16 v0; // ax

  v0 = (unsigned __int64)goodG2BSource_9() - 1;
  return printIntLine(v0);
}

//----- (0000000000431E0C) ----------------------------------------------------
__int64 goodB2GSource_9()
{
  return 0x8000LL;
}

//----- (0000000000431E22) ----------------------------------------------------
int goodB2G_226()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = goodB2GSource_9();
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (0000000000431E73) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_42_good()
{
  goodB2G_226();
  return goodG2B_243();
}

//----- (0000000000431E8D) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_53_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE191_Integer_Underflow__int64_t_rand_postdec_53b_badSink(v4);
}

//----- (0000000000431F4A) ----------------------------------------------------
int goodG2B_244()
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_53b_goodG2BSink(-2LL);
}

//----- (0000000000431F70) ----------------------------------------------------
int goodB2G_227()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE191_Integer_Underflow__int64_t_rand_postdec_53b_goodB2GSink(v4);
}

//----- (000000000043202D) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_53_good()
{
  goodG2B_244();
  return goodB2G_227();
}

//----- (0000000000432047) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_53_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE191_Integer_Underflow__char_rand_postdec_53b_badSink(v0);
}

//----- (0000000000432091) ----------------------------------------------------
int goodG2B_245()
{
  return CWE191_Integer_Underflow__char_rand_postdec_53b_goodG2BSink(-2);
}

//----- (00000000004320AE) ----------------------------------------------------
int goodB2G_228()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE191_Integer_Underflow__char_rand_postdec_53b_goodB2GSink(v0);
}

//----- (00000000004320F8) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_53_good()
{
  goodG2B_245();
  return goodB2G_228();
}

//----- (0000000000432112) ----------------------------------------------------
int __fastcall badSink_37(int a1)
{
  int result; // eax

  result = badStatic_7;
  if ( badStatic_7 )
    result = printUnsignedLine(a1 - 1);
  return result;
}
// 6AB384: using guessed type int badStatic_7;

//----- (000000000043213D) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_21_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  badStatic_7 = 1;
  return badSink_37(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB384: using guessed type int badStatic_7;

//----- (000000000043217F) ----------------------------------------------------
int __fastcall goodB2G1Sink_7(int a1)
{
  if ( goodB2G1Static_7 )
    return printLine("Benign, fixed string");
  if ( a1 )
    return printUnsignedLine(a1 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 6AB388: using guessed type int goodB2G1Static_7;

//----- (00000000004321C8) ----------------------------------------------------
int goodB2G1_142()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  goodB2G1Static_7 = 0;
  return goodB2G1Sink_7(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB388: using guessed type int goodB2G1Static_7;

//----- (000000000043220A) ----------------------------------------------------
int __fastcall goodB2G2Sink_7(int a1)
{
  int result; // eax

  result = goodB2G2Static_7;
  if ( goodB2G2Static_7 )
  {
    if ( a1 )
      result = printUnsignedLine(a1 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 6AB38C: using guessed type int goodB2G2Static_7;

//----- (0000000000432247) ----------------------------------------------------
int goodB2G2_142()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  goodB2G2Static_7 = 1;
  return goodB2G2Sink_7(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB38C: using guessed type int goodB2G2Static_7;

//----- (0000000000432289) ----------------------------------------------------
int __fastcall goodG2BSink_37(int a1)
{
  int result; // eax

  result = goodG2BStatic_7;
  if ( goodG2BStatic_7 )
    result = printUnsignedLine(a1 - 1);
  return result;
}
// 6AB390: using guessed type int goodG2BStatic_7;

//----- (00000000004322B4) ----------------------------------------------------
int goodG2B_246()
{
  goodG2BStatic_7 = 1;
  return goodG2BSink_37(-2);
}
// 6AB390: using guessed type int goodG2BStatic_7;

//----- (00000000004322E0) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_21_good()
{
  goodB2G1_142();
  goodB2G2_142();
  return goodG2B_246();
}

//----- (0000000000432304) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_03_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return printUnsignedLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043234B) ----------------------------------------------------
int goodB2G1_143()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 )
    result = printUnsignedLine(v1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004323A5) ----------------------------------------------------
int goodB2G2_143()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 )
    result = printUnsignedLine(v1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004323FF) ----------------------------------------------------
int goodG2B1_125()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000043242B) ----------------------------------------------------
int goodG2B2_125()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000432457) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_03_good()
{
  goodB2G1_143();
  goodB2G2_143();
  goodG2B1_125();
  return goodG2B2_125();
}

//----- (0000000000432485) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_63b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 - 1LL);
}

//----- (00000000004324B7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_63b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 - 1LL);
}

//----- (00000000004324E9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_63b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 - 1LL);
  return result;
}

//----- (0000000000432537) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_53b_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_53c_badSink(a1);
}

//----- (000000000043254E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_53b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_53c_goodG2BSink(a1);
}

//----- (0000000000432565) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_53b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_53c_goodB2GSink(a1);
}

//----- (000000000043257C) ----------------------------------------------------
__int64 __fastcall CWE191_Integer_Underflow__int_fgets_postdec_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (00000000004325D9) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_fgets_postdec_61b_goodG2BSource()
{
  return 4294967294LL;
}

//----- (00000000004325EC) ----------------------------------------------------
__int64 __fastcall CWE191_Integer_Underflow__int_fgets_postdec_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (0000000000432649) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_52c_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000043266A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000043268B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (00000000004326C1) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_66_bad()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%hd", &v3);
  v2 = v3;
  return CWE191_Integer_Underflow__short_fscanf_postdec_66b_badSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000432702) ----------------------------------------------------
int goodG2B_247()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = -2;
  v2 = -2;
  return CWE191_Integer_Underflow__short_fscanf_postdec_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000043272C) ----------------------------------------------------
int goodB2G_229()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = 0;
  __isoc99_fscanf(stdin, "%hd", &v3);
  v2 = v3;
  return CWE191_Integer_Underflow__short_fscanf_postdec_66b_goodB2GSink((__int64)&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043276D) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_66_good()
{
  goodG2B_247();
  return goodB2G_229();
}

//----- (0000000000432787) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_22_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE191_Integer_Underflow__int_connect_socket_postdec_22_badGlobal = 1;
  return CWE191_Integer_Underflow__int_connect_socket_postdec_22_badSink(v7);
}
// 6AB394: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_22_badGlobal;
// 432787: using guessed type char buf[16];

//----- (0000000000432879) ----------------------------------------------------
int goodB2G1_144()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodB2G1Global = 0;
  return CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodB2G1Sink(v7);
}
// 6AB398: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodB2G1Global;
// 432879: using guessed type char buf[16];

//----- (000000000043296B) ----------------------------------------------------
int goodB2G2_144()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodB2G2Global = 1;
  return CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodB2G2Sink(v7);
}
// 6AB39C: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodB2G2Global;
// 43296B: using guessed type char buf[16];

//----- (0000000000432A5D) ----------------------------------------------------
int goodG2B_248()
{
  CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodG2BGlobal = 1;
  return CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodG2BSink(-2);
}
// 6AB3A0: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodG2BGlobal;

//----- (0000000000432A89) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_22_good()
{
  goodB2G1_144();
  goodB2G2_144();
  return goodG2B_248();
}

//----- (0000000000432AAD) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_68_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE191_Integer_Underflow__int_connect_socket_postdec_68_badData = v7;
  return CWE191_Integer_Underflow__int_connect_socket_postdec_68b_badSink();
}
// 6AB594: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_68_badData;
// 432AAD: using guessed type char buf[16];

//----- (0000000000432B9E) ----------------------------------------------------
int goodG2B_249()
{
  CWE191_Integer_Underflow__int_connect_socket_postdec_68_goodG2BData = -2;
  return CWE191_Integer_Underflow__int_connect_socket_postdec_68b_goodG2BSink();
}
// 6AB598: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_68_goodG2BData;

//----- (0000000000432BC9) ----------------------------------------------------
int goodB2G_230()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE191_Integer_Underflow__int_connect_socket_postdec_68_goodB2GData = v7;
  return CWE191_Integer_Underflow__int_connect_socket_postdec_68b_goodB2GSink();
}
// 6AB59C: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_68_goodB2GData;
// 432BC9: using guessed type char buf[16];

//----- (0000000000432CBA) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_68_good()
{
  goodG2B_249();
  return goodB2G_230();
}

//----- (0000000000432CD4) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_09_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2147483648;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000432D14) ----------------------------------------------------
int goodB2G1_145()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2147483648;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 - 1);
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000432D75) ----------------------------------------------------
int goodB2G2_145()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = 2147483648;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 - 1);
  }
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000432DCA) ----------------------------------------------------
int goodG2B1_126()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000432E16) ----------------------------------------------------
int goodG2B2_126()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000432E56) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_09_good()
{
  goodB2G1_145();
  goodB2G2_145();
  goodG2B1_126();
  return goodG2B2_126();
}

//----- (0000000000432E84) ----------------------------------------------------
int __fastcall badSink_38(int a1)
{
  int result; // eax

  result = badStatic_8;
  if ( badStatic_8 )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB3A4: using guessed type int badStatic_8;

//----- (0000000000432EAF) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_21_bad()
{
  badStatic_8 = 1;
  return badSink_38(2147483648);
}
// 6AB3A4: using guessed type int badStatic_8;

//----- (0000000000432EDB) ----------------------------------------------------
int __fastcall goodB2G1Sink_8(int a1)
{
  if ( goodB2G1Static_8 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 - 1);
}
// 6AB3A8: using guessed type int goodB2G1Static_8;

//----- (0000000000432F27) ----------------------------------------------------
int goodB2G1_146()
{
  goodB2G1Static_8 = 0;
  return goodB2G1Sink_8(2147483648);
}
// 6AB3A8: using guessed type int goodB2G1Static_8;

//----- (0000000000432F53) ----------------------------------------------------
int __fastcall goodB2G2Sink_8(int a1)
{
  int result; // eax

  result = goodB2G2Static_8;
  if ( goodB2G2Static_8 )
  {
    if ( a1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 - 1);
  }
  return result;
}
// 6AB3AC: using guessed type int goodB2G2Static_8;

//----- (0000000000432F93) ----------------------------------------------------
int goodB2G2_146()
{
  goodB2G2Static_8 = 1;
  return goodB2G2Sink_8(2147483648);
}
// 6AB3AC: using guessed type int goodB2G2Static_8;

//----- (0000000000432FBF) ----------------------------------------------------
int __fastcall goodG2BSink_38(int a1)
{
  int result; // eax

  result = goodG2BStatic_8;
  if ( goodG2BStatic_8 )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB3B0: using guessed type int goodG2BStatic_8;

//----- (0000000000432FEA) ----------------------------------------------------
int goodG2B_250()
{
  goodG2BStatic_8 = 1;
  return goodG2BSink_38(-2);
}
// 6AB3B0: using guessed type int goodG2BStatic_8;

//----- (0000000000433016) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_21_good()
{
  goodB2G1_146();
  goodB2G2_146();
  return goodG2B_250();
}

//----- (000000000043303A) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_17_bad()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-18h]
  __int64 v2; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%ld", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = --v1;
    result = printLongLongLine(v1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004330AF) ----------------------------------------------------
int goodB2G_231()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-18h]
  __int64 v2; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%ld", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x8000000000000000LL )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = --v1;
      result = printLongLongLine(v1);
    }
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000433143) ----------------------------------------------------
int goodG2B_251()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    v1 = -2LL;
  for ( j = 0; j <= 0; ++j )
    result = printLongLongLine(--v1);
  return result;
}

//----- (000000000043319C) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_17_good()
{
  goodB2G_231();
  return goodG2B_251();
}

//----- (00000000004331B6) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_67_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_67b_badSink(v2);
}

//----- (0000000000433226) ----------------------------------------------------
int goodG2B_252()
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_67b_goodG2BSink(-2);
}

//----- (000000000043324E) ----------------------------------------------------
int goodB2G_232()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_67b_goodB2GSink(v2);
}

//----- (00000000004332BE) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_67_good()
{
  goodG2B_252();
  return goodB2G_232();
}

//----- (00000000004332D8) ----------------------------------------------------
int __fastcall badSink_39(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (0000000000433306) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_41_bad()
{
  return badSink_39(-32768);
}

//----- (0000000000433327) ----------------------------------------------------
int __fastcall goodG2BSink_39(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (0000000000433355) ----------------------------------------------------
int goodG2B_253()
{
  return goodG2BSink_39(-2);
}

//----- (0000000000433376) ----------------------------------------------------
int __fastcall goodB2GSink_29(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (00000000004333B8) ----------------------------------------------------
int goodB2G_233()
{
  return goodB2GSink_29(-32768);
}

//----- (00000000004333D9) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_41_good()
{
  goodB2G_233();
  return goodG2B_253();
}

//----- (00000000004333F3) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54b_badSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_54c_badSink(a1);
}

//----- (000000000043340D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54b_goodG2BSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_54c_goodG2BSink(a1);
}

//----- (0000000000433427) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54b_goodB2GSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_54c_goodB2GSink(a1);
}

//----- (0000000000433441) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_53d_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000433462) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000433483) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (00000000004334B9) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12_bad()
{
  int v1; // [rsp+4h] [rbp-Ch]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%u", &v1);
  else
    v1 = -2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printUnsignedLine(v1 - 1);
  if ( v1 )
    return printUnsignedLine(v1 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000433553) ----------------------------------------------------
int goodB2G_234()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]

  v1 = 0;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v1 )
      result = printUnsignedLine(v1 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  else if ( v1 )
  {
    result = printUnsignedLine(v1 - 1);
  }
  else
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000433616) ----------------------------------------------------
int goodG2B_254()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000043367D) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12_good()
{
  goodB2G_234();
  return goodG2B_254();
}

//----- (0000000000433697) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_64b_badSink(_BYTE *a1)
{
  return printHexCharLine(*a1 - 1);
}

//----- (00000000004336D3) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_64b_goodG2BSink(_BYTE *a1)
{
  return printHexCharLine(*a1 - 1);
}

//----- (000000000043370F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_64b_goodB2GSink(_BYTE *a1)
{
  int result; // eax

  if ( *a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(*a1 - 1);
  return result;
}

//----- (000000000043375D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_52b_badSink(char a1)
{
  return CWE191_Integer_Underflow__char_rand_postdec_52c_badSink(a1);
}

//----- (0000000000433777) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_52b_goodG2BSink(char a1)
{
  return CWE191_Integer_Underflow__char_rand_postdec_52c_goodG2BSink(a1);
}

//----- (0000000000433791) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_52b_goodB2GSink(char a1)
{
  return CWE191_Integer_Underflow__char_rand_postdec_52c_goodB2GSink(a1);
}

//----- (00000000004337AB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_65b_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (00000000004337CC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (00000000004337ED) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (0000000000433823) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_53_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE191_Integer_Underflow__int_connect_socket_postdec_53b_badSink(v7);
}
// 433823: using guessed type char buf[16];

//----- (000000000043390B) ----------------------------------------------------
int goodG2B_255()
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_53b_goodG2BSink(-2);
}

//----- (000000000043392D) ----------------------------------------------------
int goodB2G_235()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE191_Integer_Underflow__int_connect_socket_postdec_53b_goodB2GSink(v7);
}
// 43392D: using guessed type char buf[16];

//----- (0000000000433A15) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_53_good()
{
  goodG2B_255();
  return goodB2G_235();
}

//----- (0000000000433A2F) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_34_bad()
{
  return printIntLine(0x7FFFu);
}

//----- (0000000000433A73) ----------------------------------------------------
int goodG2B_256()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000433AB7) ----------------------------------------------------
int goodB2G_236()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000433B0F) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_34_good()
{
  goodG2B_256();
  return goodB2G_236();
}

//----- (0000000000433B29) ----------------------------------------------------
int __fastcall badSink_40(__int16 a1)
{
  int result; // eax

  result = badStatic_9;
  if ( badStatic_9 )
    result = printIntLine((__int16)(a1 - 1));
  return result;
}
// 6AB3B4: using guessed type int badStatic_9;

//----- (0000000000433B61) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_21_bad()
{
  badStatic_9 = 1;
  return badSink_40(-32768);
}
// 6AB3B4: using guessed type int badStatic_9;

//----- (0000000000433B8C) ----------------------------------------------------
int __fastcall goodB2G1Sink_9(__int16 a1)
{
  if ( goodB2G1Static_9 )
    return printLine("Benign, fixed string");
  if ( a1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 - 1));
}
// 6AB3B8: using guessed type int goodB2G1Static_9;

//----- (0000000000433BE4) ----------------------------------------------------
int goodB2G1_147()
{
  goodB2G1Static_9 = 0;
  return goodB2G1Sink_9(-32768);
}
// 6AB3B8: using guessed type int goodB2G1Static_9;

//----- (0000000000433C0F) ----------------------------------------------------
int __fastcall goodB2G2Sink_9(__int16 a1)
{
  int result; // eax

  result = goodB2G2Static_9;
  if ( goodB2G2Static_9 )
  {
    if ( a1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 - 1));
  }
  return result;
}
// 6AB3BC: using guessed type int goodB2G2Static_9;

//----- (0000000000433C5B) ----------------------------------------------------
int goodB2G2_147()
{
  goodB2G2Static_9 = 1;
  return goodB2G2Sink_9(-32768);
}
// 6AB3BC: using guessed type int goodB2G2Static_9;

//----- (0000000000433C86) ----------------------------------------------------
int __fastcall goodG2BSink_40(__int16 a1)
{
  int result; // eax

  result = goodG2BStatic_9;
  if ( goodG2BStatic_9 )
    result = printIntLine((__int16)(a1 - 1));
  return result;
}
// 6AB3C0: using guessed type int goodG2BStatic_9;

//----- (0000000000433CBE) ----------------------------------------------------
int goodG2B_257()
{
  goodG2BStatic_9 = 1;
  return goodG2BSink_40(-2);
}
// 6AB3C0: using guessed type int goodG2BStatic_9;

//----- (0000000000433CE9) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_21_good()
{
  goodB2G1_147();
  goodB2G2_147();
  return goodG2B_257();
}

//----- (0000000000433D0D) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_fscanf_postdec_65_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE191_Integer_Underflow__int_fscanf_postdec_65b_badSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000433D4E) ----------------------------------------------------
int goodG2B_258()
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_65b_goodG2BSink(-2);
}

//----- (0000000000433D79) ----------------------------------------------------
__int64 goodB2G_237()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE191_Integer_Underflow__int_fscanf_postdec_65b_goodB2GSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000433DBA) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_fscanf_postdec_65_good()
{
  goodG2B_258();
  return goodB2G_237();
}

//----- (0000000000433DD4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54c_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_rand_postdec_54d_badSink(a1);
}

//----- (0000000000433DEB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54c_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_rand_postdec_54d_goodG2BSink(a1);
}

//----- (0000000000433E02) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54c_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_rand_postdec_54d_goodB2GSink(a1);
}

//----- (0000000000433E19) ----------------------------------------------------
__int64 __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_61b_badSource(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%ld", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000433E48) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_61b_goodG2BSource()
{
  return -2LL;
}

//----- (0000000000433E5E) ----------------------------------------------------
__int64 __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_61b_goodB2GSource(__int64 a1)
{
  __int64 v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%ld", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000433E8D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_66b_badSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) - 1));
}

//----- (0000000000433EC5) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_66b_goodG2BSink(__int64 a1)
{
  return printIntLine((__int16)(*(_WORD *)(a1 + 4) - 1));
}

//----- (0000000000433EFD) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int16 v2; // [rsp+1Eh] [rbp-2h]

  v2 = *(_WORD *)(a1 + 4);
  if ( v2 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v2 - 1));
  return result;
}

//----- (0000000000433F49) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_34_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v10;
  v7 = v10 - 1;
  v6 = v10 - 1;
  return printIntLine(v10 - 1);
}
// 433F49: using guessed type char buf[16];

//----- (0000000000434047) ----------------------------------------------------
int goodG2B_259()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000043407F) ----------------------------------------------------
int goodB2G_238()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v9;
  v6 = v9;
  if ( v9 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v6 - 1);
  return result;
}
// 43407F: using guessed type char buf[16];

//----- (0000000000434192) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_34_good()
{
  goodG2B_259();
  return goodB2G_238();
}

//----- (00000000004341AC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_53d_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (00000000004341CD) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (00000000004341EE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (0000000000434224) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_15_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 - 1);
}
// 434224: using guessed type char buf[16];

//----- (000000000043435E) ----------------------------------------------------
int goodB2G1_148()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 - 1);
  return result;
}
// 43435E: using guessed type char buf[16];

//----- (00000000004344AD) ----------------------------------------------------
int goodB2G2_148()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 - 1);
  return result;
}
// 4344AD: using guessed type char buf[16];

//----- (00000000004345FC) ----------------------------------------------------
int goodG2B1_127()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000043462A) ----------------------------------------------------
int goodG2B2_127()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000434658) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_15_good()
{
  goodB2G1_148();
  goodB2G2_148();
  goodG2B1_127();
  return goodG2B2_127();
}

//----- (0000000000434686) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_64_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_64b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004346C1) ----------------------------------------------------
int goodG2B_260()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = -2LL;
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_64b_goodG2BSink(&v1);
}

//----- (00000000004346E7) ----------------------------------------------------
int goodB2G_239()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_64b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000434722) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_64_good()
{
  goodG2B_260();
  return goodB2G_239();
}

//----- (000000000043473C) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_07_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( staticFive_8 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_8;
  if ( staticFive_8 == 5 )
    result = printIntLine(v4 - 1);
  return result;
}
// 6AB16C: using guessed type int staticFive_8;

//----- (00000000004347C4) ----------------------------------------------------
int goodB2G1_149()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( staticFive_8 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( staticFive_8 != 5 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 - 1);
}
// 6AB16C: using guessed type int staticFive_8;

//----- (000000000043486D) ----------------------------------------------------
int goodB2G2_149()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( staticFive_8 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_8;
  if ( staticFive_8 == 5 )
  {
    if ( v4 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 - 1);
  }
  return result;
}
// 6AB16C: using guessed type int staticFive_8;

//----- (000000000043490A) ----------------------------------------------------
int goodG2B1_128()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_8 == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = staticFive_8;
  if ( staticFive_8 == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB16C: using guessed type int staticFive_8;

//----- (0000000000434958) ----------------------------------------------------
int goodG2B2_128()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_8 == 5 )
    v1 = -2;
  result = staticFive_8;
  if ( staticFive_8 == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB16C: using guessed type int staticFive_8;

//----- (000000000043499A) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_07_good()
{
  goodB2G1_149();
  goodB2G2_149();
  goodG2B1_128();
  return goodG2B2_128();
}

//----- (00000000004349C8) ----------------------------------------------------
__int64 __fastcall badSource_10(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 4349C8: using guessed type char buf[16];

//----- (0000000000434AEB) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_42_bad()
{
  int v0; // eax

  v0 = badSource_10(0);
  return printIntLine(v0 - 1);
}

//----- (0000000000434B1D) ----------------------------------------------------
__int64 goodG2BSource_10()
{
  return 4294967294LL;
}

//----- (0000000000434B30) ----------------------------------------------------
int goodG2B_261()
{
  int v0; // eax

  v0 = goodG2BSource_10();
  return printIntLine(v0 - 1);
}

//----- (0000000000434B62) ----------------------------------------------------
__int64 __fastcall goodB2GSource_10(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 434B62: using guessed type char buf[16];

//----- (0000000000434C85) ----------------------------------------------------
int goodB2G_240()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_10(0);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}

//----- (0000000000434CCC) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_42_good()
{
  goodB2G_240();
  return goodG2B_261();
}

//----- (0000000000434CE6) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_02_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return printUnsignedLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000434D2D) ----------------------------------------------------
int goodB2G1_150()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 )
    result = printUnsignedLine(v1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000434D87) ----------------------------------------------------
int goodB2G2_150()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 )
    result = printUnsignedLine(v1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000434DE1) ----------------------------------------------------
int goodG2B1_129()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000434E0D) ----------------------------------------------------
int goodG2B2_129()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000434E39) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_02_good()
{
  goodB2G1_150();
  goodB2G2_150();
  goodG2B1_129();
  return goodG2B2_129();
}

//----- (0000000000434E67) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_52_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE191_Integer_Underflow__char_rand_postdec_52b_badSink(v0);
}

//----- (0000000000434EB1) ----------------------------------------------------
int goodG2B_262()
{
  return CWE191_Integer_Underflow__char_rand_postdec_52b_goodG2BSink(-2);
}

//----- (0000000000434ECE) ----------------------------------------------------
int goodB2G_241()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE191_Integer_Underflow__char_rand_postdec_52b_goodB2GSink(v0);
}

//----- (0000000000434F18) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_52_good()
{
  goodG2B_262();
  return goodB2G_241();
}

//----- (0000000000434F32) ----------------------------------------------------
int __fastcall badSink_41(int a1)
{
  int result; // eax

  result = badStatic_10;
  if ( badStatic_10 )
    result = printUnsignedLine(a1 - 1);
  return result;
}
// 6AB3C4: using guessed type int badStatic_10;

//----- (0000000000434F5D) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_21_bad()
{
  badStatic_10 = 1;
  return badSink_41(0);
}
// 6AB3C4: using guessed type int badStatic_10;

//----- (0000000000434F89) ----------------------------------------------------
int __fastcall goodB2G1Sink_10(int a1)
{
  if ( goodB2G1Static_10 )
    return printLine("Benign, fixed string");
  if ( a1 )
    return printUnsignedLine(a1 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 6AB3C8: using guessed type int goodB2G1Static_10;

//----- (0000000000434FD2) ----------------------------------------------------
int goodB2G1_151()
{
  goodB2G1Static_10 = 0;
  return goodB2G1Sink_10(0);
}
// 6AB3C8: using guessed type int goodB2G1Static_10;

//----- (0000000000434FFE) ----------------------------------------------------
int __fastcall goodB2G2Sink_10(int a1)
{
  int result; // eax

  result = goodB2G2Static_10;
  if ( goodB2G2Static_10 )
  {
    if ( a1 )
      result = printUnsignedLine(a1 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 6AB3CC: using guessed type int goodB2G2Static_10;

//----- (000000000043503B) ----------------------------------------------------
int goodB2G2_151()
{
  goodB2G2Static_10 = 1;
  return goodB2G2Sink_10(0);
}
// 6AB3CC: using guessed type int goodB2G2Static_10;

//----- (0000000000435067) ----------------------------------------------------
int __fastcall goodG2BSink_41(int a1)
{
  int result; // eax

  result = goodG2BStatic_10;
  if ( goodG2BStatic_10 )
    result = printUnsignedLine(a1 - 1);
  return result;
}
// 6AB3D0: using guessed type int goodG2BStatic_10;

//----- (0000000000435092) ----------------------------------------------------
int goodG2B_263()
{
  goodG2BStatic_10 = 1;
  return goodG2BSink_41(-2);
}
// 6AB3D0: using guessed type int goodG2BStatic_10;

//----- (00000000004350BE) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_21_good()
{
  goodB2G1_151();
  goodB2G2_151();
  return goodG2B_263();
}

//----- (00000000004350E2) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_03_bad()
{
  return printUnsignedLine(0xFFFFFFFF);
}

//----- (000000000043510E) ----------------------------------------------------
int goodB2G1_152()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043514C) ----------------------------------------------------
int goodB2G2_152()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043518A) ----------------------------------------------------
int goodG2B1_130()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (00000000004351B6) ----------------------------------------------------
int goodG2B2_130()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (00000000004351E2) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_03_good()
{
  goodB2G1_152();
  goodB2G2_152();
  goodG2B1_130();
  return goodG2B2_130();
}

//----- (0000000000435210) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_67_bad()
{
  return CWE191_Integer_Underflow__int_min_postdec_67b_badSink(2147483648);
}

//----- (0000000000435238) ----------------------------------------------------
int goodG2B_264()
{
  return CWE191_Integer_Underflow__int_min_postdec_67b_goodG2BSink(-2);
}

//----- (0000000000435260) ----------------------------------------------------
int goodB2G_242()
{
  return CWE191_Integer_Underflow__int_min_postdec_67b_goodB2GSink(2147483648);
}

//----- (0000000000435288) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_67_good()
{
  goodG2B_264();
  return goodB2G_242();
}

//----- (00000000004352A2) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_22_badSink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int_min_postdec_22_badGlobal;
  if ( CWE191_Integer_Underflow__int_min_postdec_22_badGlobal )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB344: using guessed type int CWE191_Integer_Underflow__int_min_postdec_22_badGlobal;

//----- (00000000004352CD) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_22_goodB2G1Sink(int a1)
{
  if ( CWE191_Integer_Underflow__int_min_postdec_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 - 1);
}
// 6AB348: using guessed type int CWE191_Integer_Underflow__int_min_postdec_22_goodB2G1Global;

//----- (0000000000435319) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int_min_postdec_22_goodB2G2Global;
  if ( CWE191_Integer_Underflow__int_min_postdec_22_goodB2G2Global )
  {
    if ( a1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 - 1);
  }
  return result;
}
// 6AB34C: using guessed type int CWE191_Integer_Underflow__int_min_postdec_22_goodB2G2Global;

//----- (0000000000435359) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int_min_postdec_22_goodG2BGlobal;
  if ( CWE191_Integer_Underflow__int_min_postdec_22_goodG2BGlobal )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB350: using guessed type int CWE191_Integer_Underflow__int_min_postdec_22_goodG2BGlobal;

//----- (0000000000435384) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_61_bad()
{
  __int64 v0; // rax

  v0 = CWE191_Integer_Underflow__int64_t_fscanf_postdec_61b_badSource(0LL);
  return printLongLongLine(v0 - 1);
}

//----- (00000000004353BF) ----------------------------------------------------
int goodG2B_265()
{
  __int64 v0; // rax

  v0 = CWE191_Integer_Underflow__int64_t_fscanf_postdec_61b_goodG2BSource();
  return printLongLongLine(v0 - 1);
}

//----- (00000000004353FA) ----------------------------------------------------
int goodB2G_243()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = CWE191_Integer_Underflow__int64_t_fscanf_postdec_61b_goodB2GSource(0LL);
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (0000000000435451) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_61_good()
{
  goodG2B_265();
  return goodB2G_243();
}

//----- (000000000043546B) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_16_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 - 1);
}

//----- (00000000004354C8) ----------------------------------------------------
int goodB2G_244()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 - 1);
  return result;
}

//----- (0000000000435537) ----------------------------------------------------
int goodG2B_266()
{
  return printHexCharLine(-3);
}

//----- (0000000000435567) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_16_good()
{
  goodB2G_244();
  return goodG2B_266();
}

//----- (0000000000435581) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_66_bad()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = -32768;
  v2 = -32768;
  return CWE191_Integer_Underflow__short_min_postdec_66b_badSink((__int64)&v1);
}

//----- (00000000004355AB) ----------------------------------------------------
int goodG2B_267()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = -2;
  v2 = -2;
  return CWE191_Integer_Underflow__short_min_postdec_66b_goodG2BSink((__int64)&v1);
}

//----- (00000000004355D5) ----------------------------------------------------
int goodB2G_245()
{
  char v1; // [rsp+0h] [rbp-10h]
  __int16 v2; // [rsp+4h] [rbp-Ch]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v3 = -32768;
  v2 = -32768;
  return CWE191_Integer_Underflow__short_min_postdec_66b_goodB2GSink((__int64)&v1);
}

//----- (00000000004355FF) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_66_good()
{
  goodG2B_267();
  return goodB2G_245();
}

//----- (0000000000435619) ----------------------------------------------------
__int64 staticReturnsTrue_9()
{
  return 1LL;
}

//----- (0000000000435624) ----------------------------------------------------
__int64 staticReturnsFalse_9()
{
  return 0LL;
}

//----- (000000000043562F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_08_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_9() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticReturnsTrue_9();
  if ( result )
    result = printIntLine(v6 - 1);
  return result;
}

//----- (00000000004356BF) ----------------------------------------------------
int goodB2G1_153()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_9() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( (unsigned int)staticReturnsFalse_9() )
    return printLine("Benign, fixed string");
  if ( v6 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 - 1);
}

//----- (0000000000435770) ----------------------------------------------------
int goodB2G2_153()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_9() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticReturnsTrue_9();
  if ( result )
  {
    if ( v6 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 - 1);
  }
  return result;
}

//----- (0000000000435815) ----------------------------------------------------
int goodG2B1_131()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_9() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticReturnsTrue_9();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (0000000000435869) ----------------------------------------------------
int goodG2B2_131()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_9() )
    v1 = -2;
  result = staticReturnsTrue_9();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (00000000004358B1) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_08_good()
{
  goodB2G1_153();
  goodB2G2_153();
  goodG2B1_131();
  return goodG2B2_131();
}

//----- (00000000004358DF) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_10_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000043593A) ----------------------------------------------------
int goodB2G1_154()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 )
    return printUnsignedLine(v1 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (00000000004359B4) ----------------------------------------------------
int goodB2G2_154()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 )
      result = printUnsignedLine(v1 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000435A22) ----------------------------------------------------
int goodG2B1_132()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000435A6E) ----------------------------------------------------
int goodG2B2_132()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000435AAE) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_10_good()
{
  goodB2G1_154();
  goodB2G2_154();
  goodG2B1_132();
  return goodG2B2_132();
}

//----- (0000000000435ADC) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_09_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000435B37) ----------------------------------------------------
int goodB2G1_155()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000435BB2) ----------------------------------------------------
int goodB2G2_155()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000435C21) ----------------------------------------------------
int goodG2B1_133()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000435C6F) ----------------------------------------------------
int goodG2B2_133()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000435CB1) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_09_good()
{
  goodB2G1_155();
  goodB2G2_155();
  goodG2B1_133();
  return goodG2B2_133();
}

//----- (0000000000435CDF) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54d_badSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_54e_badSink(a1);
}

//----- (0000000000435CF6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54d_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_54e_goodG2BSink(a1);
}

//----- (0000000000435D0D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54d_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_54e_goodB2GSink(a1);
}

//----- (0000000000435D24) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_17_bad()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    result = 0;
    v1 = 0x8000000000000000LL;
  }
  for ( j = 0; j <= 0; ++j )
    result = printLongLongLine(--v1);
  return result;
}

//----- (0000000000435D83) ----------------------------------------------------
int goodB2G_246()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    result = 0;
    v1 = 0x8000000000000000LL;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(--v1);
  }
  return result;
}

//----- (0000000000435DFE) ----------------------------------------------------
int goodG2B_268()
{
  int result; // eax
  __int64 v1; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = 0LL;
  for ( i = 0; i <= 0; ++i )
    v1 = -2LL;
  for ( j = 0; j <= 0; ++j )
    result = printLongLongLine(--v1);
  return result;
}

//----- (0000000000435E57) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_17_good()
{
  goodB2G_246();
  return goodG2B_268();
}

//----- (0000000000435E71) ----------------------------------------------------
int __fastcall badSink_42(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000435E92) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_41_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return badSink_42(v8);
}
// 435E92: using guessed type char buf[16];

//----- (0000000000435FC0) ----------------------------------------------------
int __fastcall goodG2BSink_42(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000435FE1) ----------------------------------------------------
int goodG2B_269()
{
  return goodG2BSink_42(-2);
}

//----- (0000000000436003) ----------------------------------------------------
int __fastcall goodB2GSink_30(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (0000000000436039) ----------------------------------------------------
int goodB2G_247()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return goodB2GSink_30(v8);
}
// 436039: using guessed type char buf[16];

//----- (0000000000436167) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_41_good()
{
  goodB2G_247();
  return goodG2B_269();
}

//----- (0000000000436181) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_01_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return printUnsignedLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004361C8) ----------------------------------------------------
int goodG2B_270()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (00000000004361F4) ----------------------------------------------------
int goodB2G_248()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  if ( v1 )
    result = printUnsignedLine(v1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043624E) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_01_good()
{
  goodG2B_270();
  return goodB2G_248();
}

//----- (0000000000436268) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_64b_badSink(_BYTE *a1)
{
  return printHexCharLine(*a1 - 1);
}

//----- (00000000004362A4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_64b_goodG2BSink(_BYTE *a1)
{
  return printHexCharLine(*a1 - 1);
}

//----- (00000000004362E0) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_64b_goodB2GSink(_BYTE *a1)
{
  int result; // eax

  if ( *a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(*a1 - 1);
  return result;
}

//----- (000000000043632E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_51_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE191_Integer_Underflow__char_rand_postdec_51b_badSink(v0);
}

//----- (0000000000436378) ----------------------------------------------------
int goodG2B_271()
{
  return CWE191_Integer_Underflow__char_rand_postdec_51b_goodG2BSink(-2);
}

//----- (0000000000436395) ----------------------------------------------------
int goodB2G_249()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return CWE191_Integer_Underflow__char_rand_postdec_51b_goodB2GSink(v0);
}

//----- (00000000004363DF) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_51_good()
{
  goodG2B_271();
  return goodB2G_249();
}

//----- (00000000004363F9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_65b_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000043641A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000043643B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (0000000000436471) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_52_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE191_Integer_Underflow__int_connect_socket_postdec_52b_badSink(v7);
}
// 436471: using guessed type char buf[16];

//----- (0000000000436559) ----------------------------------------------------
int goodG2B_272()
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_52b_goodG2BSink(-2);
}

//----- (000000000043657B) ----------------------------------------------------
int goodB2G_250()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE191_Integer_Underflow__int_connect_socket_postdec_52b_goodB2GSink(v7);
}
// 43657B: using guessed type char buf[16];

//----- (0000000000436663) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_52_good()
{
  goodG2B_272();
  return goodB2G_250();
}

//----- (000000000043667D) ----------------------------------------------------
unsigned __int64 CWE191_Integer_Underflow__int64_t_min_postdec_61b_badSource()
{
  return 0x8000000000000000LL;
}

//----- (0000000000436699) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int64_t_min_postdec_61b_goodG2BSource()
{
  return -2LL;
}

//----- (00000000004366AF) ----------------------------------------------------
unsigned __int64 CWE191_Integer_Underflow__int64_t_min_postdec_61b_goodB2GSource()
{
  return 0x8000000000000000LL;
}

//----- (00000000004366CB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_51b_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (00000000004366EC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000043670D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (0000000000436743) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_16_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 - 1);
}
// 436743: using guessed type char buf[16];

//----- (0000000000436837) ----------------------------------------------------
int goodB2G_251()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 - 1);
  return result;
}
// 436837: using guessed type char buf[16];

//----- (0000000000436940) ----------------------------------------------------
int goodG2B_273()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000043696E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_16_good()
{
  goodB2G_251();
  return goodG2B_273();
}

//----- (0000000000436988) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_64_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE191_Integer_Underflow__char_fscanf_postdec_64b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004369BF) ----------------------------------------------------
int goodG2B_274()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = -2;
  return CWE191_Integer_Underflow__char_fscanf_postdec_64b_goodG2BSink(&v1);
}

//----- (00000000004369DD) ----------------------------------------------------
int goodB2G_252()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE191_Integer_Underflow__char_fscanf_postdec_64b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000436A14) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_64_good()
{
  goodG2B_274();
  return goodB2G_252();
}

//----- (0000000000436A2E) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_11_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000436A99) ----------------------------------------------------
int goodB2G1_156()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000436B2F) ----------------------------------------------------
int goodB2G2_156()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000436BB9) ----------------------------------------------------
int goodG2B1_134()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = -2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (0000000000436C14) ----------------------------------------------------
int goodG2B2_134()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (0000000000436C63) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_11_good()
{
  goodB2G1_156();
  goodB2G2_156();
  goodG2B1_134();
  return goodG2B2_134();
}

//----- (0000000000436C91) ----------------------------------------------------
int badSink_43()
{
  return printHexCharLine(CWE191_Integer_Underflow__char_rand_postdec_45_badData - 1);
}
// 6AB3D4: using guessed type char CWE191_Integer_Underflow__char_rand_postdec_45_badData;

//----- (0000000000436CC1) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_45_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE191_Integer_Underflow__char_rand_postdec_45_badData = v0;
  return badSink_43();
}
// 6AB3D4: using guessed type char CWE191_Integer_Underflow__char_rand_postdec_45_badData;

//----- (0000000000436D14) ----------------------------------------------------
int goodG2BSink_43()
{
  return printHexCharLine(CWE191_Integer_Underflow__char_rand_postdec_45_goodG2BData - 1);
}
// 6AB3D5: using guessed type char CWE191_Integer_Underflow__char_rand_postdec_45_goodG2BData;

//----- (0000000000436D44) ----------------------------------------------------
int goodG2B_275()
{
  CWE191_Integer_Underflow__char_rand_postdec_45_goodG2BData = -2;
  return goodG2BSink_43();
}
// 6AB3D5: using guessed type char CWE191_Integer_Underflow__char_rand_postdec_45_goodG2BData;

//----- (0000000000436D6A) ----------------------------------------------------
int goodB2GSink_31()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__char_rand_postdec_45_goodB2GData == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(CWE191_Integer_Underflow__char_rand_postdec_45_goodB2GData - 1);
  return result;
}
// 6AB3D6: using guessed type char CWE191_Integer_Underflow__char_rand_postdec_45_goodB2GData;

//----- (0000000000436DAC) ----------------------------------------------------
int goodB2G_253()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE191_Integer_Underflow__char_rand_postdec_45_goodB2GData = v0;
  return goodB2GSink_31();
}
// 6AB3D6: using guessed type char CWE191_Integer_Underflow__char_rand_postdec_45_goodB2GData;

//----- (0000000000436DFF) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_45_good()
{
  goodG2B_275();
  return goodB2G_253();
}

//----- (0000000000436E19) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_06_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 - 1);
}

//----- (0000000000436E88) ----------------------------------------------------
int goodB2G1_157()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 - 1);
  return result;
}

//----- (0000000000436F15) ----------------------------------------------------
int goodB2G2_157()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 - 1);
  return result;
}

//----- (0000000000436F96) ----------------------------------------------------
int goodG2B1_135()
{
  return printHexCharLine(253);
}

//----- (0000000000436FE4) ----------------------------------------------------
int goodG2B2_135()
{
  return printHexCharLine(253);
}

//----- (0000000000437026) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_06_good()
{
  goodB2G1_157();
  goodB2G2_157();
  goodG2B1_135();
  return goodG2B2_135();
}

//----- (0000000000437054) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_02_bad()
{
  return printUnsignedLine(0xFFFFFFFF);
}

//----- (0000000000437080) ----------------------------------------------------
int goodB2G1_158()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004370BE) ----------------------------------------------------
int goodB2G2_158()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004370FC) ----------------------------------------------------
int goodG2B1_136()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000437128) ----------------------------------------------------
int goodG2B2_136()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000437154) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_02_good()
{
  goodB2G1_158();
  goodB2G2_158();
  goodG2B1_136();
  return goodG2B2_136();
}

//----- (0000000000437182) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_52_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE191_Integer_Underflow__int64_t_rand_postdec_52b_badSink(v4);
}

//----- (000000000043723F) ----------------------------------------------------
int goodG2B_276()
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_52b_goodG2BSink(-2LL);
}

//----- (0000000000437265) ----------------------------------------------------
int goodB2G_254()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return CWE191_Integer_Underflow__int64_t_rand_postdec_52b_goodB2GSink(v4);
}

//----- (0000000000437322) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_52_good()
{
  goodG2B_276();
  return goodB2G_254();
}

//----- (000000000043733C) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_64_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = -128;
  return CWE191_Integer_Underflow__char_min_postdec_64b_badSink(&v1);
}

//----- (000000000043735A) ----------------------------------------------------
int goodG2B_277()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = -2;
  return CWE191_Integer_Underflow__char_min_postdec_64b_goodG2BSink(&v1);
}

//----- (0000000000437378) ----------------------------------------------------
int goodB2G_255()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = -128;
  return CWE191_Integer_Underflow__char_min_postdec_64b_goodB2GSink(&v1);
}

//----- (0000000000437396) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_64_good()
{
  goodG2B_277();
  return goodB2G_255();
}

//----- (00000000004373B0) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52c_badSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (00000000004373D1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52c_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (00000000004373F2) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000437425) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_65_bad()
{
  return CWE191_Integer_Underflow__int_min_postdec_65b_badSink(2147483648);
}

//----- (0000000000437450) ----------------------------------------------------
int goodG2B_278()
{
  return CWE191_Integer_Underflow__int_min_postdec_65b_goodG2BSink(-2);
}

//----- (000000000043747B) ----------------------------------------------------
int goodB2G_256()
{
  return CWE191_Integer_Underflow__int_min_postdec_65b_goodB2GSink(2147483648);
}

//----- (00000000004374A6) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_65_good()
{
  goodG2B_278();
  return goodB2G_256();
}

//----- (00000000004374C0) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54e_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (00000000004374EE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54e_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000043751C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54e_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (000000000043755E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_67b_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000437585) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (00000000004375AC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (00000000004375E8) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_51_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE191_Integer_Underflow__int_connect_socket_postdec_51b_badSink(v7);
}
// 4375E8: using guessed type char buf[16];

//----- (00000000004376D0) ----------------------------------------------------
int goodG2B_279()
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_51b_goodG2BSink(-2);
}

//----- (00000000004376F2) ----------------------------------------------------
int goodB2G_257()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE191_Integer_Underflow__int_connect_socket_postdec_51b_goodB2GSink(v7);
}
// 4376F2: using guessed type char buf[16];

//----- (00000000004377DA) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_51_good()
{
  goodG2B_279();
  return goodB2G_257();
}

//----- (00000000004377F4) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_34_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 - 1);
}

//----- (0000000000437874) ----------------------------------------------------
int goodG2B_280()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (00000000004378AC) ----------------------------------------------------
int goodB2G_258()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000043793E) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_34_good()
{
  goodG2B_280();
  return goodB2G_258();
}

//----- (0000000000437958) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_54_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__int_rand_postdec_54b_badSink(v2);
}

//----- (00000000004379C2) ----------------------------------------------------
int goodG2B_281()
{
  return CWE191_Integer_Underflow__int_rand_postdec_54b_goodG2BSink(-2);
}

//----- (00000000004379E4) ----------------------------------------------------
int goodB2G_259()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__int_rand_postdec_54b_goodB2GSink(v2);
}

//----- (0000000000437A4E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_54_good()
{
  goodG2B_281();
  return goodB2G_259();
}

//----- (0000000000437A68) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_10_bad()
{
  int result; // eax

  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(0xFFFFFFFF);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000437AA8) ----------------------------------------------------
int goodB2G1_159()
{
  int result; // eax

  if ( globalFalse )
    result = printLine("Benign, fixed string");
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000437B06) ----------------------------------------------------
int goodB2G2_159()
{
  int result; // eax

  result = globalTrue;
  if ( globalTrue )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000437B58) ----------------------------------------------------
int goodG2B1_137()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000437BA4) ----------------------------------------------------
int goodG2B2_137()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000437BE4) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_10_good()
{
  goodB2G1_159();
  goodB2G2_159();
  goodG2B1_137();
  return goodG2B2_137();
}

//----- (0000000000437C12) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_66_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+40h] [rbp-10h]
  int fd; // [rsp+44h] [rbp-Ch]
  int v9; // [rsp+48h] [rbp-8h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = 0;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  return CWE191_Integer_Underflow__int_listen_socket_postdec_66b_badSink((__int64)&v5);
}
// 437C12: using guessed type char buf[16];

//----- (0000000000437D48) ----------------------------------------------------
int goodG2B_282()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -2;
  v2 = -2;
  return CWE191_Integer_Underflow__int_listen_socket_postdec_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000437D72) ----------------------------------------------------
int goodB2G_260()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+40h] [rbp-10h]
  int fd; // [rsp+44h] [rbp-Ch]
  int v9; // [rsp+48h] [rbp-8h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = 0;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  return CWE191_Integer_Underflow__int_listen_socket_postdec_66b_goodB2GSink((__int64)&v5);
}
// 437D72: using guessed type char buf[16];

//----- (0000000000437EA8) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_66_good()
{
  goodG2B_282();
  return goodB2G_260();
}

//----- (0000000000437EC2) ----------------------------------------------------
int __fastcall badSink_44(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (0000000000437EE9) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_44_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))badSink_44)(v4);
}

//----- (0000000000437FAF) ----------------------------------------------------
int __fastcall goodG2BSink_44(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (0000000000437FD6) ----------------------------------------------------
int goodG2B_283()
{
  return goodG2BSink_44(-2LL);
}

//----- (0000000000438005) ----------------------------------------------------
int __fastcall goodB2GSink_32(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (0000000000438048) ----------------------------------------------------
__int64 goodB2G_261()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))goodB2GSink_32)(v4);
}

//----- (000000000043810E) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_44_good()
{
  goodG2B_283();
  return goodB2G_261();
}

//----- (0000000000438128) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_51b_badSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (0000000000438153) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_51b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000043817E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_51b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (00000000004381BB) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_07_bad()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_9 == 5 )
    v1 = 0x8000000000000000LL;
  result = staticFive_9;
  if ( staticFive_9 == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB170: using guessed type int staticFive_9;

//----- (000000000043820A) ----------------------------------------------------
int goodB2G1_160()
{
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_9 == 5 )
    v1 = 0x8000000000000000LL;
  if ( staticFive_9 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 - 1);
}
// 6AB170: using guessed type int staticFive_9;

//----- (0000000000438281) ----------------------------------------------------
int goodB2G2_160()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_9 == 5 )
    v1 = 0x8000000000000000LL;
  result = staticFive_9;
  if ( staticFive_9 == 5 )
  {
    if ( v1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 - 1);
  }
  return result;
}
// 6AB170: using guessed type int staticFive_9;

//----- (00000000004382EC) ----------------------------------------------------
int goodG2B1_138()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_9 == 5 )
    v1 = -2LL;
  else
    printLine("Benign, fixed string");
  result = staticFive_9;
  if ( staticFive_9 == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB170: using guessed type int staticFive_9;

//----- (0000000000438341) ----------------------------------------------------
int goodG2B2_138()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFive_9 == 5 )
    v1 = -2LL;
  result = staticFive_9;
  if ( staticFive_9 == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB170: using guessed type int staticFive_9;

//----- (000000000043838A) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_07_good()
{
  goodB2G1_160();
  goodB2G2_160();
  goodG2B1_138();
  return goodG2B2_138();
}

//----- (00000000004383B8) ----------------------------------------------------
int badSink_45()
{
  return printIntLine(CWE191_Integer_Underflow__int_connect_socket_postdec_45_badData - 1);
}
// 6AB3D8: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_45_badData;

//----- (00000000004383DF) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_45_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE191_Integer_Underflow__int_connect_socket_postdec_45_badData = v7;
  return badSink_45();
}
// 6AB3D8: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_45_badData;
// 4383DF: using guessed type char buf[16];

//----- (00000000004384D0) ----------------------------------------------------
int goodG2BSink_45()
{
  return printIntLine(CWE191_Integer_Underflow__int_connect_socket_postdec_45_goodG2BData - 1);
}
// 6AB3DC: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_45_goodG2BData;

//----- (00000000004384F7) ----------------------------------------------------
int goodG2B_284()
{
  CWE191_Integer_Underflow__int_connect_socket_postdec_45_goodG2BData = -2;
  return goodG2BSink_45();
}
// 6AB3DC: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_45_goodG2BData;

//----- (0000000000438522) ----------------------------------------------------
int goodB2GSink_33()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__int_connect_socket_postdec_45_goodB2GData == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE191_Integer_Underflow__int_connect_socket_postdec_45_goodB2GData - 1);
  return result;
}
// 6AB3E0: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_45_goodB2GData;

//----- (000000000043855E) ----------------------------------------------------
int goodB2G_262()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE191_Integer_Underflow__int_connect_socket_postdec_45_goodB2GData = v7;
  return goodB2GSink_33();
}
// 6AB3E0: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_45_goodB2GData;
// 43855E: using guessed type char buf[16];

//----- (000000000043864F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_45_good()
{
  goodG2B_284();
  return goodB2G_262();
}

//----- (0000000000438669) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_01_bad()
{
  return printUnsignedLine(0xFFFFFFFF);
}

//----- (0000000000438695) ----------------------------------------------------
int goodG2B_285()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (00000000004386C1) ----------------------------------------------------
int goodB2G_263()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004386FF) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_01_good()
{
  goodG2B_285();
  return goodB2G_263();
}

//----- (0000000000438719) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_14_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (000000000043877A) ----------------------------------------------------
int goodB2G1_161()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004387FD) ----------------------------------------------------
int goodB2G2_161()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 - 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000438874) ----------------------------------------------------
int goodG2B1_139()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004388CA) ----------------------------------------------------
int goodG2B2_139()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000438914) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_14_good()
{
  goodB2G1_161();
  goodB2G2_161();
  goodG2B1_139();
  return goodG2B2_139();
}

//----- (0000000000438942) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_06_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 - 1);
}
// 438942: using guessed type char buf[16];

//----- (0000000000438A4C) ----------------------------------------------------
int goodB2G1_162()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 - 1);
  return result;
}
// 438A4C: using guessed type char buf[16];

//----- (0000000000438B77) ----------------------------------------------------
int goodB2G2_162()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 - 1);
  return result;
}
// 438B77: using guessed type char buf[16];

//----- (0000000000438C96) ----------------------------------------------------
int goodG2B1_140()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000438CE2) ----------------------------------------------------
int goodG2B2_140()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000438D22) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_06_good()
{
  goodB2G1_162();
  goodB2G2_162();
  goodG2B1_140();
  return goodG2B2_140();
}

//----- (0000000000438D50) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_32_bad()
{
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ah] [rbp-16h]
  __int16 *v3; // [rsp+10h] [rbp-10h]
  __int16 *v4; // [rsp+18h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  *v4 = v1;
  return printIntLine((__int16)(*v3 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000438DCC) ----------------------------------------------------
int goodG2B_286()
{
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ah] [rbp-16h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __int16 v4; // [rsp+Eh] [rbp-12h]
  __int16 *v5; // [rsp+10h] [rbp-10h]
  __int16 *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -2;
  v1 = -2;
  v3 = -3;
  v2 = -3;
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000438E31) ----------------------------------------------------
int goodB2G_264()
{
  int result; // eax
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ah] [rbp-16h]
  __int16 v3; // [rsp+Eh] [rbp-12h]
  __int16 *v4; // [rsp+10h] [rbp-10h]
  __int16 *v5; // [rsp+18h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  *v5 = v1;
  v3 = *v4;
  if ( v3 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v3 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000438EC1) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_32_good()
{
  goodG2B_286();
  return goodB2G_264();
}

//----- (0000000000438EDB) ----------------------------------------------------
void CWE191_Integer_Underflow__short_rand_postdec_17_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v3; // [rsp+6h] [rbp-1Ah]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v3 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      v1 = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v3 = v1;
  }
  for ( j = 0; j <= 0; ++j )
    printIntLine(--v3);
}

//----- (0000000000438F75) ----------------------------------------------------
void goodB2G_265()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v3; // [rsp+6h] [rbp-1Ah]
  int j; // [rsp+8h] [rbp-18h]
  int i; // [rsp+Ch] [rbp-14h]

  v3 = 0;
  for ( i = 0; i <= 0; ++i )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      v1 = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v3 = v1;
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( v3 == -32768 )
      printLine("data value is too large to perform arithmetic safely.");
    else
      printIntLine(--v3);
  }
}

//----- (0000000000439023) ----------------------------------------------------
int goodG2B_287()
{
  int result; // eax
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(--v1);
  return result;
}

//----- (000000000043907D) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_17_good()
{
  goodB2G_265();
  return goodG2B_287();
}

//----- (0000000000439097) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_63b_badSink(_BYTE *a1)
{
  return printHexCharLine(*a1 - 1);
}

//----- (00000000004390CB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_63b_goodG2BSink(_BYTE *a1)
{
  return printHexCharLine(*a1 - 1);
}

//----- (00000000004390FF) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_63b_goodB2GSink(_BYTE *a1)
{
  int result; // eax

  if ( *a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(*a1 - 1);
  return result;
}

//----- (0000000000439145) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54b_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_rand_postdec_54c_badSink(a1);
}

//----- (000000000043915C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_rand_postdec_54c_goodG2BSink(a1);
}

//----- (0000000000439173) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_54b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_rand_postdec_54c_goodB2GSink(a1);
}

//----- (000000000043918A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_53c_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_rand_postdec_53d_badSink(a1);
}

//----- (00000000004391A1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_53c_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_rand_postdec_53d_goodG2BSink(a1);
}

//----- (00000000004391B8) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_53c_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_rand_postdec_53d_goodB2GSink(a1);
}

//----- (00000000004391CF) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_22_bad()
{
  CWE191_Integer_Underflow__unsigned_int_min_postdec_22_badGlobal = 1;
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_22_badSink(0);
}
// 6AB3E4: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_22_badGlobal;

//----- (00000000004391FB) ----------------------------------------------------
int goodB2G1_163()
{
  CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodB2G1Global = 0;
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodB2G1Sink(0);
}
// 6AB3E8: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodB2G1Global;

//----- (0000000000439227) ----------------------------------------------------
int goodB2G2_163()
{
  CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodB2G2Global = 1;
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodB2G2Sink(0);
}
// 6AB3EC: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodB2G2Global;

//----- (0000000000439253) ----------------------------------------------------
int goodG2B_288()
{
  CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodG2BGlobal = 1;
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodG2BSink(-2);
}
// 6AB3F0: using guessed type int CWE191_Integer_Underflow__unsigned_int_min_postdec_22_goodG2BGlobal;

//----- (000000000043927F) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_22_good()
{
  goodB2G1_163();
  goodB2G2_163();
  return goodG2B_288();
}

//----- (00000000004392A3) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_09_bad()
{
  int result; // eax

  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(0xFFFFFFFF);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004392E3) ----------------------------------------------------
int goodB2G1_164()
{
  int result; // eax

  if ( GLOBAL_CONST_FALSE )
    result = printLine("Benign, fixed string");
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000439341) ----------------------------------------------------
int goodB2G2_164()
{
  int result; // eax

  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000439393) ----------------------------------------------------
int goodG2B1_141()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004393DF) ----------------------------------------------------
int goodG2B2_141()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000043941F) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_09_good()
{
  goodB2G1_164();
  goodB2G2_164();
  goodG2B1_141();
  return goodG2B2_141();
}

//----- (000000000043944D) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_04_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_478760, &v1);
  return printIntLine((__int16)(v1 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004394AA) ----------------------------------------------------
int goodB2G1_165()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_478760, &v1);
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000439529) ----------------------------------------------------
int goodB2G2_165()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_478760, &v1);
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043959C) ----------------------------------------------------
int goodG2B1_142()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (00000000004395EE) ----------------------------------------------------
int goodG2B2_142()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000439634) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_04_good()
{
  goodB2G1_165();
  goodB2G2_165();
  goodG2B1_142();
  return goodG2B2_142();
}

//----- (0000000000439662) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_31_bad()
{
  __int16 v1; // [rsp+8h] [rbp-8h]
  __int16 v2; // [rsp+Ah] [rbp-6h]
  __int16 v3; // [rsp+Ch] [rbp-4h]
  __int16 v4; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  v4 = v1;
  v3 = v1 - 1;
  v2 = v1 - 1;
  return printIntLine((__int16)(v1 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004396BD) ----------------------------------------------------
int goodG2B_289()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000439701) ----------------------------------------------------
int goodB2G_266()
{
  int result; // eax
  __int16 v1; // [rsp+8h] [rbp-8h]
  __int16 v2; // [rsp+Ch] [rbp-4h]
  __int16 v3; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  v3 = v1;
  v2 = v1;
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v2 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000439770) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_31_good()
{
  goodG2B_289();
  return goodB2G_266();
}

//----- (000000000043978A) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_11_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2147483648;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (00000000004397D2) ----------------------------------------------------
int goodB2G1_166()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2147483648;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 - 1);
}

//----- (000000000043983B) ----------------------------------------------------
int goodB2G2_166()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = 2147483648;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 - 1);
  }
  return result;
}

//----- (0000000000439898) ----------------------------------------------------
int goodG2B1_143()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (00000000004398EC) ----------------------------------------------------
int goodG2B2_143()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (0000000000439934) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_11_good()
{
  goodB2G1_166();
  goodB2G2_166();
  goodG2B1_143();
  return goodG2B2_143();
}

//----- (0000000000439962) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54e_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (0000000000439990) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54e_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (00000000004399BE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54e_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (0000000000439A00) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_65b_badSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000439A21) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_65b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000439A42) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000439A75) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54c_badSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_54d_badSink(a1);
}

//----- (0000000000439A8C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54c_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_54d_goodG2BSink(a1);
}

//----- (0000000000439AA3) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54c_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_54d_goodB2GSink(a1);
}

//----- (0000000000439ABA) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_68b_badSink()
{
  return printIntLine(CWE191_Integer_Underflow__int_rand_postdec_68_badData - 1);
}
// 6AB5A0: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_68_badData;

//----- (0000000000439AE1) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_68b_goodG2BSink()
{
  return printIntLine(CWE191_Integer_Underflow__int_rand_postdec_68_goodG2BData - 1);
}
// 6AB5A4: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_68_goodG2BData;

//----- (0000000000439B08) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__int_rand_postdec_68_goodB2GData == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE191_Integer_Underflow__int_rand_postdec_68_goodB2GData - 1);
  return result;
}
// 6AB5A8: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_68_goodB2GData;

//----- (0000000000439B44) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_53d_badSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000439B65) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_53d_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000439B86) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000439BB9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_22_badSink(__int16 a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__short_fscanf_postdec_22_badGlobal;
  if ( CWE191_Integer_Underflow__short_fscanf_postdec_22_badGlobal )
    result = printIntLine((__int16)(a1 - 1));
  return result;
}
// 6AB3F4: using guessed type int CWE191_Integer_Underflow__short_fscanf_postdec_22_badGlobal;

//----- (0000000000439BF1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_22_goodB2G1Sink(__int16 a1)
{
  if ( CWE191_Integer_Underflow__short_fscanf_postdec_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 - 1));
}
// 6AB3F8: using guessed type int CWE191_Integer_Underflow__short_fscanf_postdec_22_goodB2G1Global;

//----- (0000000000439C49) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_22_goodB2G2Sink(__int16 a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__short_fscanf_postdec_22_goodB2G2Global;
  if ( CWE191_Integer_Underflow__short_fscanf_postdec_22_goodB2G2Global )
  {
    if ( a1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 - 1));
  }
  return result;
}
// 6AB3FC: using guessed type int CWE191_Integer_Underflow__short_fscanf_postdec_22_goodB2G2Global;

//----- (0000000000439C95) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_22_goodG2BSink(__int16 a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__short_fscanf_postdec_22_goodG2BGlobal;
  if ( CWE191_Integer_Underflow__short_fscanf_postdec_22_goodG2BGlobal )
    result = printIntLine((__int16)(a1 - 1));
  return result;
}
// 6AB400: using guessed type int CWE191_Integer_Underflow__short_fscanf_postdec_22_goodG2BGlobal;

//----- (0000000000439CCD) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000439D05) ----------------------------------------------------
int goodG2B_290()
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53b_goodG2BSink(-2);
}

//----- (0000000000439D27) ----------------------------------------------------
int goodB2G_267()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000439D5F) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53_good()
{
  goodG2B_290();
  return goodB2G_267();
}

//----- (0000000000439D79) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_14_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -32768;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000439DC3) ----------------------------------------------------
int goodB2G1_167()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -32768;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 - 1));
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000439E2D) ----------------------------------------------------
int goodB2G2_167()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -32768;
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 - 1));
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000439E8B) ----------------------------------------------------
int goodG2B1_144()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000439EE1) ----------------------------------------------------
int goodG2B2_144()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000439F2B) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_14_good()
{
  goodB2G1_167();
  goodB2G2_167();
  goodG2B1_144();
  return goodG2B2_144();
}

//----- (0000000000439F59) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_32_bad()
{
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ah] [rbp-16h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __int16 v4; // [rsp+Eh] [rbp-12h]
  __int16 *v5; // [rsp+10h] [rbp-10h]
  __int16 *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -32768;
  v1 = -32768;
  v3 = 0x7FFF;
  v2 = 0x7FFF;
  return printIntLine(0x7FFFu);
}

//----- (0000000000439FBE) ----------------------------------------------------
int goodG2B_291()
{
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ah] [rbp-16h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __int16 v4; // [rsp+Eh] [rbp-12h]
  __int16 *v5; // [rsp+10h] [rbp-10h]
  __int16 *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -2;
  v1 = -2;
  v3 = -3;
  v2 = -3;
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000043A023) ----------------------------------------------------
int goodB2G_268()
{
  __int16 v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  __int16 v3; // [rsp+Eh] [rbp-12h]
  __int16 *v4; // [rsp+10h] [rbp-10h]
  __int16 *v5; // [rsp+18h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = -32768;
  v1 = -32768;
  v2 = -32768;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043A09C) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_32_good()
{
  goodG2B_291();
  return goodB2G_268();
}

//----- (000000000043A0B6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_63b_badSink(_BYTE *a1)
{
  return printHexCharLine(*a1 - 1);
}

//----- (000000000043A0EA) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_63b_goodG2BSink(_BYTE *a1)
{
  return printHexCharLine(*a1 - 1);
}

//----- (000000000043A11E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_63b_goodB2GSink(_BYTE *a1)
{
  int result; // eax

  if ( *a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(*a1 - 1);
  return result;
}

//----- (000000000043A164) ----------------------------------------------------
int __fastcall badSink_46(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000043A192) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__short_rand_postdec_44_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))badSink_46)((unsigned int)(__int16)v1);
}

//----- (000000000043A1FC) ----------------------------------------------------
int __fastcall goodG2BSink_46(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000043A22A) ----------------------------------------------------
int goodG2B_292()
{
  return goodG2BSink_46(-2);
}

//----- (000000000043A254) ----------------------------------------------------
int __fastcall goodB2GSink_34(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (000000000043A296) ----------------------------------------------------
__int64 goodB2G_269()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))goodB2GSink_34)((unsigned int)(__int16)v1);
}

//----- (000000000043A300) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__short_rand_postdec_44_good()
{
  goodG2B_292();
  return goodB2G_269();
}

//----- (000000000043A31A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_53b_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_rand_postdec_53c_badSink(a1);
}

//----- (000000000043A331) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_53b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_rand_postdec_53c_goodG2BSink(a1);
}

//----- (000000000043A348) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_53b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_rand_postdec_53c_goodB2GSink(a1);
}

//----- (000000000043A35F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_52c_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000043A380) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000043A3A1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000043A3D7) ----------------------------------------------------
__int64 staticReturnsTrue_10()
{
  return 1LL;
}

//----- (000000000043A3E2) ----------------------------------------------------
__int64 staticReturnsFalse_10()
{
  return 0LL;
}

//----- (000000000043A3ED) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_08_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_10() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticReturnsTrue_10();
  if ( result )
    result = printUnsignedLine(v6 - 1);
  return result;
}

//----- (000000000043A47D) ----------------------------------------------------
int goodB2G1_168()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_10() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( (unsigned int)staticReturnsFalse_10() )
    return printLine("Benign, fixed string");
  if ( v6 )
    return printUnsignedLine(v6 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043A52B) ----------------------------------------------------
int goodB2G2_168()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( (unsigned int)staticReturnsTrue_10() )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticReturnsTrue_10();
  if ( result )
  {
    if ( v6 )
      result = printUnsignedLine(v6 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}

//----- (000000000043A5CD) ----------------------------------------------------
int goodG2B1_145()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_10() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticReturnsTrue_10();
  if ( result )
    result = printUnsignedLine(v1 - 1);
  return result;
}

//----- (000000000043A621) ----------------------------------------------------
int goodG2B2_145()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_10() )
    v1 = -2;
  result = staticReturnsTrue_10();
  if ( result )
    result = printUnsignedLine(v1 - 1);
  return result;
}

//----- (000000000043A669) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_08_good()
{
  goodB2G1_168();
  goodB2G2_168();
  goodG2B1_145();
  return goodG2B2_145();
}

//----- (000000000043A697) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_52b_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_52c_badSink(a1);
}

//----- (000000000043A6AE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_52b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_52c_goodG2BSink(a1);
}

//----- (000000000043A6C5) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_52b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_52c_goodB2GSink(a1);
}

//----- (000000000043A6DC) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_17_bad()
{
  int result; // eax
  char v1; // [rsp+6h] [rbp-Ah]
  char v2; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%c", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = --v1;
    result = printHexCharLine(v1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043A749) ----------------------------------------------------
int goodB2G_270()
{
  int result; // eax
  char v1; // [rsp+6h] [rbp-Ah]
  char v2; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%c", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == -128 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = --v1;
      result = printHexCharLine(v1);
    }
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043A7CA) ----------------------------------------------------
int goodG2B_293()
{
  int result; // eax
  char v1; // [rsp+7h] [rbp-9h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 32;
  for ( i = 0; i <= 0; ++i )
    v1 = -2;
  for ( j = 0; j <= 0; ++j )
    result = printHexCharLine(--v1);
  return result;
}

//----- (000000000043A81E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_17_good()
{
  goodB2G_270();
  return goodG2B_293();
}

//----- (000000000043A838) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_68_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE191_Integer_Underflow__int_rand_postdec_68_badData = v2;
  return CWE191_Integer_Underflow__int_rand_postdec_68b_badSink();
}
// 6AB5A0: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_68_badData;

//----- (000000000043A8AB) ----------------------------------------------------
int goodG2B_294()
{
  CWE191_Integer_Underflow__int_rand_postdec_68_goodG2BData = -2;
  return CWE191_Integer_Underflow__int_rand_postdec_68b_goodG2BSink();
}
// 6AB5A4: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_68_goodG2BData;

//----- (000000000043A8D6) ----------------------------------------------------
int goodB2G_271()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE191_Integer_Underflow__int_rand_postdec_68_goodB2GData = v2;
  return CWE191_Integer_Underflow__int_rand_postdec_68b_goodB2GSink();
}
// 6AB5A8: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_68_goodB2GData;

//----- (000000000043A949) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_68_good()
{
  goodG2B_294();
  return goodB2G_271();
}

//----- (000000000043A963) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_13_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v2 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043A9D4) ----------------------------------------------------
int goodB2G1_169()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v2 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 - 1);
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043AA63) ----------------------------------------------------
int goodB2G2_169()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v2 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 - 1);
  }
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043AAE6) ----------------------------------------------------
int goodG2B1_146()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043AB36) ----------------------------------------------------
int goodG2B2_146()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043AB7A) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_13_good()
{
  goodB2G1_169();
  goodB2G2_169();
  goodG2B1_146();
  return goodG2B2_146();
}

//----- (000000000043ABA8) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_22_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE191_Integer_Underflow__short_fscanf_postdec_22_badGlobal = 1;
  return CWE191_Integer_Underflow__short_fscanf_postdec_22_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB3F4: using guessed type int CWE191_Integer_Underflow__short_fscanf_postdec_22_badGlobal;

//----- (000000000043ABEB) ----------------------------------------------------
int goodB2G1_170()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE191_Integer_Underflow__short_fscanf_postdec_22_goodB2G1Global = 0;
  return CWE191_Integer_Underflow__short_fscanf_postdec_22_goodB2G1Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB3F8: using guessed type int CWE191_Integer_Underflow__short_fscanf_postdec_22_goodB2G1Global;

//----- (000000000043AC2E) ----------------------------------------------------
int goodB2G2_170()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  CWE191_Integer_Underflow__short_fscanf_postdec_22_goodB2G2Global = 1;
  return CWE191_Integer_Underflow__short_fscanf_postdec_22_goodB2G2Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB3FC: using guessed type int CWE191_Integer_Underflow__short_fscanf_postdec_22_goodB2G2Global;

//----- (000000000043AC71) ----------------------------------------------------
int goodG2B_295()
{
  CWE191_Integer_Underflow__short_fscanf_postdec_22_goodG2BGlobal = 1;
  return CWE191_Integer_Underflow__short_fscanf_postdec_22_goodG2BSink(-2);
}
// 6AB400: using guessed type int CWE191_Integer_Underflow__short_fscanf_postdec_22_goodG2BGlobal;

//----- (000000000043AC9C) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_22_good()
{
  goodB2G1_170();
  goodB2G2_170();
  return goodG2B_295();
}

//----- (000000000043ACC0) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_31_bad()
{
  return printIntLine(0x7FFFu);
}

//----- (000000000043AD04) ----------------------------------------------------
int goodG2B_296()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000043AD48) ----------------------------------------------------
int goodB2G_272()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043ADA0) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_31_good()
{
  goodG2B_296();
  return goodB2G_272();
}

//----- (000000000043ADBA) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_63_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = -128;
  return CWE191_Integer_Underflow__char_min_postdec_63b_badSink(&v1);
}

//----- (000000000043ADD8) ----------------------------------------------------
int goodG2B_297()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = -2;
  return CWE191_Integer_Underflow__char_min_postdec_63b_goodG2BSink(&v1);
}

//----- (000000000043ADF6) ----------------------------------------------------
int goodB2G_273()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = -128;
  return CWE191_Integer_Underflow__char_min_postdec_63b_goodB2GSink(&v1);
}

//----- (000000000043AE14) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_63_good()
{
  goodG2B_297();
  return goodB2G_273();
}

//----- (000000000043AE2E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54e_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000043AE4F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000043AE70) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000043AEA6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_65b_badSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (000000000043AEC7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_65b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (000000000043AEE8) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000043AF1B) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_53_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__int_rand_postdec_53b_badSink(v2);
}

//----- (000000000043AF85) ----------------------------------------------------
int goodG2B_298()
{
  return CWE191_Integer_Underflow__int_rand_postdec_53b_goodG2BSink(-2);
}

//----- (000000000043AFA7) ----------------------------------------------------
int goodB2G_274()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__int_rand_postdec_53b_goodB2GSink(v2);
}

//----- (000000000043B011) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_53_good()
{
  goodG2B_298();
  return goodB2G_274();
}

//----- (000000000043B02B) ----------------------------------------------------
__int64 __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_61b_badSource(unsigned __int8 a1)
{
  unsigned __int8 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%c", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043B05B) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__char_fscanf_postdec_61b_goodG2BSource()
{
  return 254LL;
}

//----- (000000000043B06E) ----------------------------------------------------
__int64 __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_61b_goodB2GSource(unsigned __int8 a1)
{
  unsigned __int8 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%c", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043B09E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54b_badSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_54c_badSink(a1);
}

//----- (000000000043B0B5) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_54c_goodG2BSink(a1);
}

//----- (000000000043B0CC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_54b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_54c_goodB2GSink(a1);
}

//----- (000000000043B0E3) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_52c_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000043B104) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000043B125) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000043B15B) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_68_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE191_Integer_Underflow__short_rand_postdec_68_badData = v1;
  return CWE191_Integer_Underflow__short_rand_postdec_68b_badSink();
}
// 6AB5AE: using guessed type __int16 CWE191_Integer_Underflow__short_rand_postdec_68_badData;

//----- (000000000043B1C6) ----------------------------------------------------
int goodG2B_299()
{
  CWE191_Integer_Underflow__short_rand_postdec_68_goodG2BData = -2;
  return CWE191_Integer_Underflow__short_rand_postdec_68b_goodG2BSink();
}
// 6AB5B0: using guessed type __int16 CWE191_Integer_Underflow__short_rand_postdec_68_goodG2BData;

//----- (000000000043B1F1) ----------------------------------------------------
int goodB2G_275()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE191_Integer_Underflow__short_rand_postdec_68_goodB2GData = v1;
  return CWE191_Integer_Underflow__short_rand_postdec_68b_goodB2GSink();
}
// 6AB5AC: using guessed type __int16 CWE191_Integer_Underflow__short_rand_postdec_68_goodB2GData;

//----- (000000000043B25C) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_68_good()
{
  goodG2B_299();
  return goodB2G_275();
}

//----- (000000000043B276) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_13_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043B2D7) ----------------------------------------------------
int goodB2G1_171()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043B35A) ----------------------------------------------------
int goodB2G2_171()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 - 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043B3D1) ----------------------------------------------------
int goodG2B1_147()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043B427) ----------------------------------------------------
int goodG2B2_147()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043B471) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_13_good()
{
  goodB2G1_171();
  goodB2G2_171();
  goodG2B1_147();
  return goodG2B2_147();
}

//----- (000000000043B49F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_22_badSink(__int16 a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__short_min_postdec_22_badGlobal;
  if ( CWE191_Integer_Underflow__short_min_postdec_22_badGlobal )
    result = printIntLine((__int16)(a1 - 1));
  return result;
}
// 6AB414: using guessed type int CWE191_Integer_Underflow__short_min_postdec_22_badGlobal;

//----- (000000000043B4D7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_22_goodB2G1Sink(__int16 a1)
{
  if ( CWE191_Integer_Underflow__short_min_postdec_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 - 1));
}
// 6AB418: using guessed type int CWE191_Integer_Underflow__short_min_postdec_22_goodB2G1Global;

//----- (000000000043B52F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_22_goodB2G2Sink(__int16 a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__short_min_postdec_22_goodB2G2Global;
  if ( CWE191_Integer_Underflow__short_min_postdec_22_goodB2G2Global )
  {
    if ( a1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 - 1));
  }
  return result;
}
// 6AB41C: using guessed type int CWE191_Integer_Underflow__short_min_postdec_22_goodB2G2Global;

//----- (000000000043B57B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_22_goodG2BSink(__int16 a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__short_min_postdec_22_goodG2BGlobal;
  if ( CWE191_Integer_Underflow__short_min_postdec_22_goodG2BGlobal )
    result = printIntLine((__int16)(a1 - 1));
  return result;
}
// 6AB420: using guessed type int CWE191_Integer_Underflow__short_min_postdec_22_goodG2BGlobal;

//----- (000000000043B5B3) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_53b_badSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_53c_badSink(a1);
}

//----- (000000000043B5CD) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_53b_goodG2BSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_53c_goodG2BSink(a1);
}

//----- (000000000043B5E7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_53b_goodB2GSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_53c_goodB2GSink(a1);
}

//----- (000000000043B601) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_64b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 - 1LL);
}

//----- (000000000043B63B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_64b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 - 1LL);
}

//----- (000000000043B675) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_64b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 - 1LL);
  return result;
}

//----- (000000000043B6CB) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_32_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v8; // [rsp+38h] [rbp-18h]
  int *v9; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v9 = &v5;
  v8 = &v5;
  v5 = 0;
  v11 = 0;
  fd = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v6 = recv(v10, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  *v9 = v11;
  return printIntLine(*v8 - 1);
}
// 43B6CB: using guessed type char buf[16];

//----- (000000000043B82E) ----------------------------------------------------
int goodG2B_300()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -2;
  v1 = -2;
  v3 = -3;
  v2 = -3;
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000043B885) ----------------------------------------------------
int goodB2G_276()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+2Ch] [rbp-24h]
  int v7; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v9; // [rsp+38h] [rbp-18h]
  int *v10; // [rsp+40h] [rbp-10h]
  int v11; // [rsp+48h] [rbp-8h]
  int v12; // [rsp+4Ch] [rbp-4h]

  v10 = &v5;
  v9 = &v5;
  v5 = 0;
  v12 = 0;
  fd = -1;
  v11 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v11 = accept(fd, 0LL, 0LL);
      if ( v11 != -1 )
      {
        v7 = recv(v11, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v11 != -1 )
    close(v11);
  *v10 = v12;
  v6 = *v9;
  if ( v6 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v6 - 1);
  return result;
}
// 43B885: using guessed type char buf[16];

//----- (000000000043B9FD) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_32_good()
{
  goodG2B_300();
  return goodB2G_276();
}

//----- (000000000043BA17) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_67b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000043BA4B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_67b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000043BA7F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_67b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (000000000043BAC7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54e_badSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000043BAEE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54e_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000043BB15) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54e_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (000000000043BB58) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_53d_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000043BB86) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_53d_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000043BBB4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_53d_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (000000000043BBF6) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_65_bad()
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_65b_badSink(0);
}

//----- (000000000043BC21) ----------------------------------------------------
int goodG2B_301()
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_65b_goodG2BSink(-2);
}

//----- (000000000043BC4C) ----------------------------------------------------
int goodB2G_277()
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_65b_goodB2GSink(0);
}

//----- (000000000043BC77) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_65_good()
{
  goodG2B_301();
  return goodB2G_277();
}

//----- (000000000043BC91) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_61_bad()
{
  char v0; // al

  v0 = (unsigned __int64)CWE191_Integer_Underflow__char_fscanf_postdec_61b_badSource(0x20u) - 1;
  return printHexCharLine(v0);
}

//----- (000000000043BCC9) ----------------------------------------------------
int goodG2B_302()
{
  char v0; // al

  v0 = (unsigned __int64)CWE191_Integer_Underflow__char_fscanf_postdec_61b_goodG2BSource() - 1;
  return printHexCharLine(v0);
}

//----- (000000000043BD01) ----------------------------------------------------
int goodB2G_278()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = CWE191_Integer_Underflow__char_fscanf_postdec_61b_goodB2GSource(0x20u);
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (000000000043BD4B) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_61_good()
{
  goodG2B_302();
  return goodB2G_278();
}

//----- (000000000043BD65) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (000000000043BD98) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (000000000043BDCB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 - 1);
  return result;
}

//----- (000000000043BE13) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_52b_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_rand_postdec_52c_badSink(a1);
}

//----- (000000000043BE2A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_52b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_rand_postdec_52c_goodG2BSink(a1);
}

//----- (000000000043BE41) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_52b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_rand_postdec_52c_goodB2GSink(a1);
}

//----- (000000000043BE58) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_54_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_54b_badSink(v2);
}

//----- (000000000043BEC2) ----------------------------------------------------
int goodG2B_303()
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_54b_goodG2BSink(-2);
}

//----- (000000000043BEE4) ----------------------------------------------------
int goodB2G_279()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_54b_goodB2GSink(v2);
}

//----- (000000000043BF4E) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_54_good()
{
  goodG2B_303();
  return goodB2G_279();
}

//----- (000000000043BF68) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_31_bad()
{
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int v3; // [rsp+8h] [rbp-8h]
  int v4; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v4 = v1;
  v3 = v1 - 1;
  v2 = v1 - 1;
  return printUnsignedLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043BFB6) ----------------------------------------------------
int goodG2B_304()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000043BFEE) ----------------------------------------------------
int goodB2G_280()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v3 = v1;
  v2 = v1;
  if ( v1 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043C04E) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_31_good()
{
  goodG2B_304();
  return goodB2G_280();
}

//----- (000000000043C068) ----------------------------------------------------
int __fastcall badSink_47(__int16 a1)
{
  int result; // eax

  result = badStatic_11;
  if ( badStatic_11 )
    result = printIntLine((__int16)(a1 - 1));
  return result;
}
// 6AB404: using guessed type int badStatic_11;

//----- (000000000043C0A0) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_21_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  badStatic_11 = 1;
  return badSink_47(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB404: using guessed type int badStatic_11;

//----- (000000000043C0E3) ----------------------------------------------------
int __fastcall goodB2G1Sink_11(__int16 a1)
{
  if ( goodB2G1Static_11 )
    return printLine("Benign, fixed string");
  if ( a1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(a1 - 1));
}
// 6AB408: using guessed type int goodB2G1Static_11;

//----- (000000000043C13B) ----------------------------------------------------
int goodB2G1_172()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  goodB2G1Static_11 = 0;
  return goodB2G1Sink_11(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB408: using guessed type int goodB2G1Static_11;

//----- (000000000043C17E) ----------------------------------------------------
int __fastcall goodB2G2Sink_11(__int16 a1)
{
  int result; // eax

  result = goodB2G2Static_11;
  if ( goodB2G2Static_11 )
  {
    if ( a1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(a1 - 1));
  }
  return result;
}
// 6AB40C: using guessed type int goodB2G2Static_11;

//----- (000000000043C1CA) ----------------------------------------------------
int goodB2G2_172()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  goodB2G2Static_11 = 1;
  return goodB2G2Sink_11(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB40C: using guessed type int goodB2G2Static_11;

//----- (000000000043C20D) ----------------------------------------------------
int __fastcall goodG2BSink_47(__int16 a1)
{
  int result; // eax

  result = goodG2BStatic_11;
  if ( goodG2BStatic_11 )
    result = printIntLine((__int16)(a1 - 1));
  return result;
}
// 6AB410: using guessed type int goodG2BStatic_11;

//----- (000000000043C245) ----------------------------------------------------
int goodG2B_305()
{
  goodG2BStatic_11 = 1;
  return goodG2BSink_47(-2);
}
// 6AB410: using guessed type int goodG2BStatic_11;

//----- (000000000043C270) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_21_good()
{
  goodB2G1_172();
  goodB2G2_172();
  return goodG2B_305();
}

//----- (000000000043C294) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_03_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return printIntLine((__int16)(v1 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043C2DF) ----------------------------------------------------
int goodB2G1_173()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043C340) ----------------------------------------------------
int goodB2G2_173()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043C3A1) ----------------------------------------------------
int goodG2B1_148()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000043C3D5) ----------------------------------------------------
int goodG2B2_148()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000043C409) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_03_good()
{
  goodB2G1_173();
  goodB2G2_173();
  goodG2B1_148();
  return goodG2B2_148();
}

//----- (000000000043C437) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_22_bad()
{
  CWE191_Integer_Underflow__short_min_postdec_22_badGlobal = 1;
  return CWE191_Integer_Underflow__short_min_postdec_22_badSink(-32768);
}
// 6AB414: using guessed type int CWE191_Integer_Underflow__short_min_postdec_22_badGlobal;

//----- (000000000043C462) ----------------------------------------------------
int goodB2G1_174()
{
  CWE191_Integer_Underflow__short_min_postdec_22_goodB2G1Global = 0;
  return CWE191_Integer_Underflow__short_min_postdec_22_goodB2G1Sink(-32768);
}
// 6AB418: using guessed type int CWE191_Integer_Underflow__short_min_postdec_22_goodB2G1Global;

//----- (000000000043C48D) ----------------------------------------------------
int goodB2G2_174()
{
  CWE191_Integer_Underflow__short_min_postdec_22_goodB2G2Global = 1;
  return CWE191_Integer_Underflow__short_min_postdec_22_goodB2G2Sink(-32768);
}
// 6AB41C: using guessed type int CWE191_Integer_Underflow__short_min_postdec_22_goodB2G2Global;

//----- (000000000043C4B8) ----------------------------------------------------
int goodG2B_306()
{
  CWE191_Integer_Underflow__short_min_postdec_22_goodG2BGlobal = 1;
  return CWE191_Integer_Underflow__short_min_postdec_22_goodG2BSink(-2);
}
// 6AB420: using guessed type int CWE191_Integer_Underflow__short_min_postdec_22_goodG2BGlobal;

//----- (000000000043C4E3) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_22_good()
{
  goodB2G1_174();
  goodB2G2_174();
  return goodG2B_306();
}

//----- (000000000043C507) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_07_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( staticFive_10 == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = staticFive_10;
  if ( staticFive_10 == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB174: using guessed type int staticFive_10;

//----- (000000000043C564) ----------------------------------------------------
int goodB2G1_175()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( staticFive_10 == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( staticFive_10 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB174: using guessed type int staticFive_10;

//----- (000000000043C5E1) ----------------------------------------------------
int goodB2G2_175()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( staticFive_10 == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = staticFive_10;
  if ( staticFive_10 == 5 )
  {
    if ( v1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB174: using guessed type int staticFive_10;

//----- (000000000043C652) ----------------------------------------------------
int goodG2B1_149()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_10 == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = staticFive_10;
  if ( staticFive_10 == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB174: using guessed type int staticFive_10;

//----- (000000000043C6A2) ----------------------------------------------------
int goodG2B2_149()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_10 == 5 )
    v1 = -2;
  result = staticFive_10;
  if ( staticFive_10 == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB174: using guessed type int staticFive_10;

//----- (000000000043C6E6) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_07_good()
{
  goodB2G1_175();
  goodB2G2_175();
  goodG2B1_149();
  return goodG2B2_149();
}

//----- (000000000043C714) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_04_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 - 1);
}
// 43C714: using guessed type char buf[16];

//----- (000000000043C862) ----------------------------------------------------
int goodB2G1_176()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 - 1);
  return result;
}
// 43C862: using guessed type char buf[16];

//----- (000000000043C9D1) ----------------------------------------------------
int goodB2G2_176()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 - 1);
  return result;
}
// 43C9D1: using guessed type char buf[16];

//----- (000000000043CB34) ----------------------------------------------------
int goodG2B1_150()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000043CB7E) ----------------------------------------------------
int goodG2B2_150()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000043CBBC) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_04_good()
{
  goodB2G1_176();
  goodB2G2_176();
  goodG2B1_150();
  return goodG2B2_150();
}

//----- (000000000043CBEA) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_31_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+24h] [rbp-1Ch]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  int v8; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = 0;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v8 = recv(v10, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v7 = v11;
  v6 = v11 - 1;
  v5 = v11 - 1;
  return printIntLine(v11 - 1);
}
// 43CBEA: using guessed type char buf[16];

//----- (000000000043CD2E) ----------------------------------------------------
int goodG2B_307()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000043CD66) ----------------------------------------------------
int goodB2G_281()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v9; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  v5 = v10;
  if ( v10 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v5 - 1);
  return result;
}
// 43CD66: using guessed type char buf[16];

//----- (000000000043CEBF) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_31_good()
{
  goodG2B_307();
  return goodB2G_281();
}

//----- (000000000043CED9) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_67_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE191_Integer_Underflow__short_rand_postdec_67b_badSink(v1);
}

//----- (000000000043CF42) ----------------------------------------------------
int goodG2B_308()
{
  return CWE191_Integer_Underflow__short_rand_postdec_67b_goodG2BSink(65534);
}

//----- (000000000043CF6B) ----------------------------------------------------
int goodB2G_282()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE191_Integer_Underflow__short_rand_postdec_67b_goodB2GSink(v1);
}

//----- (000000000043CFD4) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_67_good()
{
  goodG2B_308();
  return goodB2G_282();
}

//----- (000000000043CFEE) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__char_min_postdec_61b_badSource()
{
  return 128LL;
}

//----- (000000000043D001) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__char_min_postdec_61b_goodG2BSource()
{
  return 254LL;
}

//----- (000000000043D014) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__char_min_postdec_61b_goodB2GSource()
{
  return 128LL;
}

//----- (000000000043D027) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_52_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__int_rand_postdec_52b_badSink(v2);
}

//----- (000000000043D091) ----------------------------------------------------
int goodG2B_309()
{
  return CWE191_Integer_Underflow__int_rand_postdec_52b_goodG2BSink(-2);
}

//----- (000000000043D0B3) ----------------------------------------------------
int goodB2G_283()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__int_rand_postdec_52b_goodB2GSink(v2);
}

//----- (000000000043D11D) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_52_good()
{
  goodG2B_309();
  return goodB2G_283();
}

//----- (000000000043D137) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE191_Integer_Underflow__int_fscanf_postdec_64b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043D171) ----------------------------------------------------
int goodG2B_310()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -2;
  return CWE191_Integer_Underflow__int_fscanf_postdec_64b_goodG2BSink(&v1);
}

//----- (000000000043D195) ----------------------------------------------------
int goodB2G_284()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE191_Integer_Underflow__int_fscanf_postdec_64b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043D1CF) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_64_good()
{
  goodG2B_310();
  return goodB2G_284();
}

//----- (000000000043D1E9) ----------------------------------------------------
int __fastcall badSink_48(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000043D20A) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_listen_socket_postdec_44_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = badSink_48;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 43D20A: using guessed type char buf[16];

//----- (000000000043D341) ----------------------------------------------------
int __fastcall goodG2BSink_48(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000043D362) ----------------------------------------------------
int goodG2B_311()
{
  return goodG2BSink_48(-2);
}

//----- (000000000043D38D) ----------------------------------------------------
int __fastcall goodB2GSink_35(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000043D3C3) ----------------------------------------------------
__int64 goodB2G_285()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = goodB2GSink_35;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 43D3C3: using guessed type char buf[16];

//----- (000000000043D4FA) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_listen_socket_postdec_44_good()
{
  goodG2B_311();
  return goodB2G_285();
}

//----- (000000000043D514) ----------------------------------------------------
__int64 badSource_11()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (000000000043D5C5) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_42_bad()
{
  __int64 v0; // rax

  v0 = badSource_11();
  return printLongLongLine(v0 - 1);
}

//----- (000000000043D600) ----------------------------------------------------
__int64 goodG2BSource_11()
{
  return -2LL;
}

//----- (000000000043D616) ----------------------------------------------------
int goodG2B_312()
{
  __int64 v0; // rax

  v0 = goodG2BSource_11();
  return printLongLongLine(v0 - 1);
}

//----- (000000000043D651) ----------------------------------------------------
__int64 goodB2GSource_11()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (000000000043D702) ----------------------------------------------------
int goodB2G_286()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = goodB2GSource_11();
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (000000000043D759) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_42_good()
{
  goodB2G_286();
  return goodG2B_312();
}

//----- (000000000043D773) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_51b_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000043D794) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000043D7B5) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000043D7EB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_53c_badSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_53d_badSink(a1);
}

//----- (000000000043D802) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_53c_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_53d_goodG2BSink(a1);
}

//----- (000000000043D819) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_53c_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_53d_goodB2GSink(a1);
}

//----- (000000000043D830) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_16_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 - 1);
}

//----- (000000000043D8A6) ----------------------------------------------------
int goodB2G_287()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (000000000043D931) ----------------------------------------------------
int goodG2B_313()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000043D95F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_16_good()
{
  goodB2G_287();
  return goodG2B_313();
}

//----- (000000000043D979) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_13_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -32768;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043D9C3) ----------------------------------------------------
int goodB2G1_177()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -32768;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 - 1));
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043DA2D) ----------------------------------------------------
int goodB2G2_177()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -32768;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 - 1));
  }
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043DA8B) ----------------------------------------------------
int goodG2B1_151()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043DAE1) ----------------------------------------------------
int goodG2B2_151()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043DB2B) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_13_good()
{
  goodB2G1_177();
  goodB2G2_177();
  goodG2B1_151();
  return goodG2B2_151();
}

//----- (000000000043DB59) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_63_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE191_Integer_Underflow__char_fscanf_postdec_63b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043DB90) ----------------------------------------------------
int goodG2B_314()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = -2;
  return CWE191_Integer_Underflow__char_fscanf_postdec_63b_goodG2BSink(&v1);
}

//----- (000000000043DBAE) ----------------------------------------------------
int goodB2G_288()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE191_Integer_Underflow__char_fscanf_postdec_63b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043DBE5) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_63_good()
{
  goodG2B_314();
  return goodB2G_288();
}

//----- (000000000043DBFF) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_22_badSink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int_listen_socket_postdec_22_badGlobal;
  if ( CWE191_Integer_Underflow__int_listen_socket_postdec_22_badGlobal )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB454: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_22_badGlobal;

//----- (000000000043DC2A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodB2G1Sink(int a1)
{
  if ( CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 - 1);
}
// 6AB458: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodB2G1Global;

//----- (000000000043DC76) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodB2G2Global;
  if ( CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodB2G2Global )
  {
    if ( a1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 - 1);
  }
  return result;
}
// 6AB45C: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodB2G2Global;

//----- (000000000043DCB6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodG2BGlobal;
  if ( CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodG2BGlobal )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB460: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodG2BGlobal;

//----- (000000000043DCE1) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043DD19) ----------------------------------------------------
int goodG2B_315()
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52b_goodG2BSink(-2);
}

//----- (000000000043DD3B) ----------------------------------------------------
int goodB2G_289()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043DD73) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_52_good()
{
  goodG2B_315();
  return goodB2G_289();
}

//----- (000000000043DD8D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54e_badSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000043DDB4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54e_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000043DDDB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54e_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (000000000043DE1E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_61_bad()
{
  char v0; // al

  v0 = (unsigned __int64)CWE191_Integer_Underflow__char_min_postdec_61b_badSource() - 1;
  return printHexCharLine(v0);
}

//----- (000000000043DE56) ----------------------------------------------------
int goodG2B_316()
{
  char v0; // al

  v0 = (unsigned __int64)CWE191_Integer_Underflow__char_min_postdec_61b_goodG2BSource() - 1;
  return printHexCharLine(v0);
}

//----- (000000000043DE8E) ----------------------------------------------------
int goodB2G_290()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = CWE191_Integer_Underflow__char_min_postdec_61b_goodB2GSource();
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (000000000043DED8) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_61_good()
{
  goodG2B_316();
  return goodB2G_290();
}

//----- (000000000043DEF2) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (000000000043DF25) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (000000000043DF58) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 - 1);
  return result;
}

//----- (000000000043DFA0) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_05_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticTrue_8 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticTrue_8;
  if ( staticTrue_8 )
    result = printLongLongLine(v10 - 1);
  return result;
}
// 6AB178: using guessed type int staticTrue_8;

//----- (000000000043E082) ----------------------------------------------------
int goodB2G1_178()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticTrue_8 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( staticFalse_8 )
    return printLine("Benign, fixed string");
  if ( v10 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 - 1);
}
// 6AB178: using guessed type int staticTrue_8;
// 6AB424: using guessed type int staticFalse_8;

//----- (000000000043E18C) ----------------------------------------------------
int goodB2G2_178()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( staticTrue_8 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = staticTrue_8;
  if ( staticTrue_8 )
  {
    if ( v10 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 - 1);
  }
  return result;
}
// 6AB178: using guessed type int staticTrue_8;

//----- (000000000043E28A) ----------------------------------------------------
int goodG2B1_152()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticFalse_8 )
    printLine("Benign, fixed string");
  else
    v1 = -2LL;
  result = staticTrue_8;
  if ( staticTrue_8 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB178: using guessed type int staticTrue_8;
// 6AB424: using guessed type int staticFalse_8;

//----- (000000000043E2DD) ----------------------------------------------------
int goodG2B2_152()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( staticTrue_8 )
    v1 = -2LL;
  result = staticTrue_8;
  if ( staticTrue_8 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB178: using guessed type int staticTrue_8;

//----- (000000000043E324) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_05_good()
{
  goodB2G1_178();
  goodB2G2_178();
  goodG2B1_152();
  return goodG2B2_152();
}

//----- (000000000043E352) ----------------------------------------------------
int __fastcall badSink_49(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000043E379) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_41_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return badSink_49(v4);
}

//----- (000000000043E436) ----------------------------------------------------
int __fastcall goodG2BSink_49(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000043E45D) ----------------------------------------------------
int goodG2B_317()
{
  return goodG2BSink_49(-2LL);
}

//----- (000000000043E483) ----------------------------------------------------
int __fastcall goodB2GSink_36(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (000000000043E4C6) ----------------------------------------------------
int goodB2G_291()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return goodB2GSink_36(v4);
}

//----- (000000000043E583) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_41_good()
{
  goodB2G_291();
  return goodG2B_317();
}

//----- (000000000043E59D) ----------------------------------------------------
__int64 staticReturnsTrue_11()
{
  return 1LL;
}

//----- (000000000043E5A8) ----------------------------------------------------
__int64 staticReturnsFalse_11()
{
  return 0LL;
}

//----- (000000000043E5B3) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_08_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)staticReturnsTrue_11() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = staticReturnsTrue_11();
  if ( result )
    result = printIntLine(v8 - 1);
  return result;
}
// 43E5B3: using guessed type char buf[16];

//----- (000000000043E70B) ----------------------------------------------------
int goodB2G1_179()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)staticReturnsTrue_11() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( (unsigned int)staticReturnsFalse_11() )
    return printLine("Benign, fixed string");
  if ( v8 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 - 1);
}
// 43E70B: using guessed type char buf[16];

//----- (000000000043E884) ----------------------------------------------------
int goodB2G2_179()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)staticReturnsTrue_11() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = staticReturnsTrue_11();
  if ( result )
  {
    if ( v8 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 - 1);
  }
  return result;
}
// 43E884: using guessed type char buf[16];

//----- (000000000043E9F1) ----------------------------------------------------
int goodG2B1_153()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_11() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticReturnsTrue_11();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (000000000043EA45) ----------------------------------------------------
int goodG2B2_153()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_11() )
    v1 = -2;
  result = staticReturnsTrue_11();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (000000000043EA8D) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_08_good()
{
  goodB2G1_179();
  goodB2G2_179();
  goodG2B1_153();
  return goodG2B2_153();
}

//----- (000000000043EABB) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_02_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return printIntLine((__int16)(v1 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043EB06) ----------------------------------------------------
int goodB2G1_180()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043EB67) ----------------------------------------------------
int goodB2G2_180()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043EBC8) ----------------------------------------------------
int goodG2B1_154()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000043EBFC) ----------------------------------------------------
int goodG2B2_154()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000043EC30) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_02_good()
{
  goodB2G1_180();
  goodB2G2_180();
  goodG2B1_154();
  return goodG2B2_154();
}

//----- (000000000043EC5E) ----------------------------------------------------
int __fastcall badSink_50(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000043EC89) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__char_rand_postdec_44_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return ((__int64 (__fastcall *)(_QWORD))badSink_50)((unsigned int)(char)v0);
}

//----- (000000000043ECDC) ----------------------------------------------------
int __fastcall goodG2BSink_50(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000043ED07) ----------------------------------------------------
int goodG2B_318()
{
  return goodG2BSink_50(-2);
}

//----- (000000000043ED2D) ----------------------------------------------------
int __fastcall goodB2GSink_37(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (000000000043ED6A) ----------------------------------------------------
__int64 goodB2G_292()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return ((__int64 (__fastcall *)(_QWORD))goodB2GSink_37)((unsigned int)(char)v0);
}

//----- (000000000043EDBD) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__char_rand_postdec_44_good()
{
  goodG2B_318();
  return goodB2G_292();
}

//----- (000000000043EDD7) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_64_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE191_Integer_Underflow__int64_t_rand_postdec_64b_badSink(&v10);
}

//----- (000000000043EE94) ----------------------------------------------------
int goodG2B_319()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = -2LL;
  return CWE191_Integer_Underflow__int64_t_rand_postdec_64b_goodG2BSink(&v1);
}

//----- (000000000043EEBA) ----------------------------------------------------
int goodB2G_293()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v10 = v4;
  return CWE191_Integer_Underflow__int64_t_rand_postdec_64b_goodB2GSink(&v10);
}

//----- (000000000043EF77) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_64_good()
{
  goodG2B_319();
  return goodB2G_293();
}

//----- (000000000043EF91) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_03_bad()
{
  return printIntLine(0x7FFFu);
}

//----- (000000000043EFC5) ----------------------------------------------------
int goodB2G1_181()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043F00D) ----------------------------------------------------
int goodB2G2_181()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043F055) ----------------------------------------------------
int goodG2B1_155()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000043F089) ----------------------------------------------------
int goodG2B2_155()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000043F0BD) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_03_good()
{
  goodB2G1_181();
  goodB2G2_181();
  goodG2B1_155();
  return goodG2B2_155();
}

//----- (000000000043F0EB) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_07_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_11 == 5 )
    v1 = -128;
  result = staticFive_11;
  if ( staticFive_11 == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB17C: using guessed type int staticFive_11;

//----- (000000000043F12F) ----------------------------------------------------
int goodB2G1_182()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_11 == 5 )
    v1 = -128;
  if ( staticFive_11 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 - 1);
}
// 6AB17C: using guessed type int staticFive_11;

//----- (000000000043F191) ----------------------------------------------------
int goodB2G2_182()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_11 == 5 )
    v1 = -128;
  result = staticFive_11;
  if ( staticFive_11 == 5 )
  {
    if ( v1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 - 1);
  }
  return result;
}
// 6AB17C: using guessed type int staticFive_11;

//----- (000000000043F1E7) ----------------------------------------------------
int goodG2B1_156()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_11 == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = staticFive_11;
  if ( staticFive_11 == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB17C: using guessed type int staticFive_11;

//----- (000000000043F237) ----------------------------------------------------
int goodG2B2_156()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFive_11 == 5 )
    v1 = -2;
  result = staticFive_11;
  if ( staticFive_11 == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB17C: using guessed type int staticFive_11;

//----- (000000000043F27B) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_07_good()
{
  goodB2G1_182();
  goodB2G2_182();
  goodG2B1_156();
  return goodG2B2_156();
}

//----- (000000000043F2A9) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_15_bad()
{
  return printUnsignedLine(0xFFFFFFFF);
}

//----- (000000000043F2D7) ----------------------------------------------------
int goodB2G1_183()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043F317) ----------------------------------------------------
int goodB2G2_183()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000043F357) ----------------------------------------------------
int goodG2B1_157()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000043F385) ----------------------------------------------------
int goodG2B2_157()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000043F3B3) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_15_good()
{
  goodB2G1_183();
  goodB2G2_183();
  goodG2B1_157();
  return goodG2B2_157();
}

//----- (000000000043F3E1) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_34_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 - 1);
}

//----- (000000000043F4BB) ----------------------------------------------------
int goodG2B_320()
{
  return printLongLongLine(-3LL);
}

//----- (000000000043F4FE) ----------------------------------------------------
int goodB2G_294()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 - 1);
  return result;
}

//----- (000000000043F5F4) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_34_good()
{
  goodG2B_320();
  return goodB2G_294();
}

//----- (000000000043F60E) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_10_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000043F66D) ----------------------------------------------------
int goodB2G1_184()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000043F6EE) ----------------------------------------------------
int goodB2G2_184()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 - 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000043F763) ----------------------------------------------------
int goodG2B1_158()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000043F7B7) ----------------------------------------------------
int goodG2B2_158()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalTrue )
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000043F7FF) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_10_good()
{
  goodB2G1_184();
  goodB2G2_184();
  goodG2B1_158();
  return goodG2B2_158();
}

//----- (000000000043F82D) ----------------------------------------------------
int badSink_51()
{
  return printIntLine(CWE191_Integer_Underflow__int_rand_postdec_45_badData - 1);
}
// 6AB428: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_45_badData;

//----- (000000000043F854) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_45_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE191_Integer_Underflow__int_rand_postdec_45_badData = v2;
  return badSink_51();
}
// 6AB428: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_45_badData;

//----- (000000000043F8C7) ----------------------------------------------------
int goodG2BSink_51()
{
  return printIntLine(CWE191_Integer_Underflow__int_rand_postdec_45_goodG2BData - 1);
}
// 6AB42C: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_45_goodG2BData;

//----- (000000000043F8EE) ----------------------------------------------------
int goodG2B_321()
{
  CWE191_Integer_Underflow__int_rand_postdec_45_goodG2BData = -2;
  return goodG2BSink_51();
}
// 6AB42C: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_45_goodG2BData;

//----- (000000000043F919) ----------------------------------------------------
int goodB2GSink_38()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__int_rand_postdec_45_goodB2GData == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE191_Integer_Underflow__int_rand_postdec_45_goodB2GData - 1);
  return result;
}
// 6AB430: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_45_goodB2GData;

//----- (000000000043F955) ----------------------------------------------------
int goodB2G_295()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE191_Integer_Underflow__int_rand_postdec_45_goodB2GData = v2;
  return goodB2GSink_38();
}
// 6AB430: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_45_goodB2GData;

//----- (000000000043F9C8) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_45_good()
{
  goodG2B_321();
  return goodB2G_295();
}

//----- (000000000043F9E2) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_66b_badSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) - 1LL);
}

//----- (000000000043FA15) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_66b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(*(_QWORD *)(a1 + 16) - 1LL);
}

//----- (000000000043FA48) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+18h] [rbp-8h]

  v2 = *(_QWORD *)(a1 + 16);
  if ( v2 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 - 1);
  return result;
}

//----- (000000000043FA97) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54d_badSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_rand_postdec_54e_badSink(a1);
}

//----- (000000000043FAB2) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54d_goodG2BSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_rand_postdec_54e_goodG2BSink(a1);
}

//----- (000000000043FACD) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54d_goodB2GSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_rand_postdec_54e_goodB2GSink(a1);
}

//----- (000000000043FAE8) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_06_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 - 1);
}

//----- (000000000043FB70) ----------------------------------------------------
int goodB2G1_185()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (000000000043FC19) ----------------------------------------------------
int goodB2G2_185()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (000000000043FCB6) ----------------------------------------------------
int goodG2B1_159()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000043FD02) ----------------------------------------------------
int goodG2B2_159()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000043FD42) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_06_good()
{
  goodB2G1_185();
  goodB2G2_185();
  goodG2B1_159();
  return goodG2B2_159();
}

//----- (000000000043FD70) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_10_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( globalTrue )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v8 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 43FD70: using guessed type char buf[16];

//----- (000000000043FEC0) ----------------------------------------------------
int goodB2G1_186()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( globalTrue )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v8 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 - 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;
// 43FEC0: using guessed type char buf[16];

//----- (0000000000440031) ----------------------------------------------------
int goodB2G2_186()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( globalTrue )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v8 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 - 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 440031: using guessed type char buf[16];

//----- (0000000000440196) ----------------------------------------------------
int goodG2B1_160()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (00000000004401E2) ----------------------------------------------------
int goodG2B2_160()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000440222) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_10_good()
{
  goodB2G1_186();
  goodB2G2_186();
  goodG2B1_160();
  return goodG2B2_160();
}

//----- (0000000000440250) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2147483648;
  return CWE191_Integer_Underflow__int_min_postdec_64b_badSink(&v1);
}

//----- (0000000000440274) ----------------------------------------------------
int goodG2B_322()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -2;
  return CWE191_Integer_Underflow__int_min_postdec_64b_goodG2BSink(&v1);
}

//----- (0000000000440298) ----------------------------------------------------
int goodB2G_296()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 2147483648;
  return CWE191_Integer_Underflow__int_min_postdec_64b_goodB2GSink(&v1);
}

//----- (00000000004402BC) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_64_good()
{
  goodG2B_322();
  return goodB2G_296();
}

//----- (00000000004402D6) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_01_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return printIntLine((__int16)(v1 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000440321) ----------------------------------------------------
int goodG2B_323()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000440355) ----------------------------------------------------
int goodB2G_297()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004403B6) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_01_good()
{
  goodG2B_323();
  return goodB2G_297();
}

//----- (00000000004403D0) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_12_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v1 = -32768;
  else
    v1 = -2;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine((__int16)(v1 - 1));
  if ( v1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 - 1));
}

//----- (000000000044045C) ----------------------------------------------------
int goodB2G_298()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004404FC) ----------------------------------------------------
int goodG2B_324()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000440574) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_12_good()
{
  goodB2G_298();
  return goodG2B_324();
}

//----- (000000000044058E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_53b_badSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_53c_badSink(a1);
}

//----- (00000000004405A5) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_53b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_53c_goodG2BSink(a1);
}

//----- (00000000004405BC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_53b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_53c_goodB2GSink(a1);
}

//----- (00000000004405D3) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_07_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( staticFive_12 == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = staticFive_12;
  if ( staticFive_12 == 5 )
    result = printIntLine(v8 - 1);
  return result;
}
// 6AB180: using guessed type int staticFive_12;
// 4405D3: using guessed type char buf[16];

//----- (0000000000440725) ----------------------------------------------------
int goodB2G1_187()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( staticFive_12 == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( staticFive_12 != 5 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 - 1);
}
// 6AB180: using guessed type int staticFive_12;
// 440725: using guessed type char buf[16];

//----- (0000000000440898) ----------------------------------------------------
int goodB2G2_187()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( staticFive_12 == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = staticFive_12;
  if ( staticFive_12 == 5 )
  {
    if ( v8 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 - 1);
  }
  return result;
}
// 6AB180: using guessed type int staticFive_12;
// 440898: using guessed type char buf[16];

//----- (00000000004409FF) ----------------------------------------------------
int goodG2B1_161()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_12 == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = staticFive_12;
  if ( staticFive_12 == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB180: using guessed type int staticFive_12;

//----- (0000000000440A4D) ----------------------------------------------------
int goodG2B2_161()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_12 == 5 )
    v1 = -2;
  result = staticFive_12;
  if ( staticFive_12 == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB180: using guessed type int staticFive_12;

//----- (0000000000440A8F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_07_good()
{
  goodB2G1_187();
  goodB2G2_187();
  goodG2B1_161();
  return goodG2B2_161();
}

//----- (0000000000440ABD) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_52c_badSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000440ADE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_52c_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000440AFF) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000440B32) ----------------------------------------------------
int __fastcall badSink_52(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000440B53) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_connect_socket_postdec_44_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = badSink_52;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 440B53: using guessed type char buf[16];

//----- (0000000000440C44) ----------------------------------------------------
int __fastcall goodG2BSink_52(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000440C65) ----------------------------------------------------
int goodG2B_325()
{
  return goodG2BSink_52(-2);
}

//----- (0000000000440C90) ----------------------------------------------------
int __fastcall goodB2GSink_39(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (0000000000440CC6) ----------------------------------------------------
__int64 goodB2G_299()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = goodB2GSink_39;
  v8 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 440CC6: using guessed type char buf[16];

//----- (0000000000440DB7) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_connect_socket_postdec_44_good()
{
  goodG2B_325();
  return goodB2G_299();
}

//----- (0000000000440DD1) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_13_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v8 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;
// 440DD1: using guessed type char buf[16];

//----- (0000000000440F23) ----------------------------------------------------
int goodB2G1_188()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 - 1);
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;
// 440F23: using guessed type char buf[16];

//----- (0000000000441096) ----------------------------------------------------
int goodB2G2_188()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v8 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 - 1);
  }
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;
// 441096: using guessed type char buf[16];

//----- (00000000004411FD) ----------------------------------------------------
int goodG2B1_162()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044124B) ----------------------------------------------------
int goodG2B2_162()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044128D) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_13_good()
{
  goodB2G1_188();
  goodB2G2_188();
  goodG2B1_162();
  return goodG2B2_162();
}

//----- (00000000004412BB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54b_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_54c_badSink(a1);
}

//----- (00000000004412D2) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_54c_goodG2BSink(a1);
}

//----- (00000000004412E9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_54c_goodB2GSink(a1);
}

//----- (0000000000441300) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_badData = v2;
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_68b_badSink();
}
// 6AB5BC: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_badData;

//----- (0000000000441373) ----------------------------------------------------
int goodG2B_326()
{
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_goodG2BData = -2;
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_68b_goodG2BSink();
}
// 6AB5B4: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_goodG2BData;

//----- (000000000044139E) ----------------------------------------------------
int goodB2G_300()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_goodB2GData = v2;
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_68b_goodB2GSink();
}
// 6AB5B8: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_goodB2GData;

//----- (0000000000441411) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_68_good()
{
  goodG2B_326();
  return goodB2G_300();
}

//----- (000000000044142B) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_02_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 - 1);
}

//----- (00000000004414F5) ----------------------------------------------------
int goodB2G1_189()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 - 1);
  return result;
}

//----- (00000000004415DB) ----------------------------------------------------
int goodB2G2_189()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 - 1);
  return result;
}

//----- (00000000004416C1) ----------------------------------------------------
int goodG2B1_163()
{
  return printLongLongLine(-3LL);
}

//----- (00000000004416F4) ----------------------------------------------------
int goodG2B2_163()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000441727) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_02_good()
{
  goodB2G1_189();
  goodB2G2_189();
  goodG2B1_163();
  return goodG2B2_163();
}

//----- (0000000000441755) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_66_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  char v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+10h] [rbp-30h]
  __int64 v12; // [rsp+28h] [rbp-18h]

  v12 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v12 = v4;
  v11 = v4;
  return CWE191_Integer_Underflow__int64_t_rand_postdec_66b_badSink((__int64)&v10);
}

//----- (000000000044181A) ----------------------------------------------------
int goodG2B_327()
{
  char v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+10h] [rbp-20h]
  __int64 v3; // [rsp+28h] [rbp-8h]

  v3 = -2LL;
  v2 = -2LL;
  return CWE191_Integer_Underflow__int64_t_rand_postdec_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000441848) ----------------------------------------------------
int goodB2G_301()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  char v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+10h] [rbp-30h]
  __int64 v12; // [rsp+28h] [rbp-18h]

  v12 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v12 = v4;
  v11 = v4;
  return CWE191_Integer_Underflow__int64_t_rand_postdec_66b_goodB2GSink((__int64)&v10);
}

//----- (000000000044190D) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_66_good()
{
  goodG2B_327();
  return goodB2G_301();
}

//----- (0000000000441927) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_52b_badSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_52c_badSink(a1);
}

//----- (0000000000441941) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_52b_goodG2BSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_52c_goodG2BSink(a1);
}

//----- (000000000044195B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_52b_goodB2GSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_52c_goodB2GSink(a1);
}

//----- (0000000000441975) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_67b_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000044199C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (00000000004419C3) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (00000000004419FF) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_09_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000441A5E) ----------------------------------------------------
int goodB2G1_190()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%hd", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000441ADF) ----------------------------------------------------
int goodB2G2_190()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%hd", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 - 1));
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000441B54) ----------------------------------------------------
int goodG2B1_164()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000441BA8) ----------------------------------------------------
int goodG2B2_164()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000441BF0) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_09_good()
{
  goodB2G1_190();
  goodB2G2_190();
  goodG2B1_164();
  return goodG2B2_164();
}

//----- (0000000000441C1E) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_11_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -32768;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (0000000000441C6E) ----------------------------------------------------
int goodB2G1_191()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -32768;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 - 1));
}

//----- (0000000000441CDE) ----------------------------------------------------
int goodB2G2_191()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -32768;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 - 1));
  }
  return result;
}

//----- (0000000000441D42) ----------------------------------------------------
int goodG2B1_165()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (0000000000441D9E) ----------------------------------------------------
int goodG2B2_165()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (0000000000441DEE) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_11_good()
{
  goodB2G1_191();
  goodB2G2_191();
  goodG2B1_165();
  return goodG2B2_165();
}

//----- (0000000000441E1C) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_02_bad()
{
  return printIntLine(0x7FFFu);
}

//----- (0000000000441E50) ----------------------------------------------------
int goodB2G1_192()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000441E98) ----------------------------------------------------
int goodB2G2_192()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000441EE0) ----------------------------------------------------
int goodG2B1_166()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000441F14) ----------------------------------------------------
int goodG2B2_166()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000441F48) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_02_good()
{
  goodB2G1_192();
  goodB2G2_192();
  goodG2B1_166();
  return goodG2B2_166();
}

//----- (0000000000441F76) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_53_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_53b_badSink(v2);
}

//----- (0000000000441FE0) ----------------------------------------------------
int goodG2B_328()
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_53b_goodG2BSink(-2);
}

//----- (0000000000442002) ----------------------------------------------------
int goodB2G_302()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_53b_goodB2GSink(v2);
}

//----- (000000000044206C) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_53_good()
{
  goodG2B_328();
  return goodB2G_302();
}

//----- (0000000000442086) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (00000000004420B1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (00000000004420DC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 - 1);
  return result;
}

//----- (000000000044211C) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_11_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v10 - 1);
  return result;
}

//----- (0000000000442206) ----------------------------------------------------
int goodB2G1_193()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v10 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 - 1);
}

//----- (0000000000442318) ----------------------------------------------------
int goodB2G2_193()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v10 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 - 1);
  }
  return result;
}

//----- (000000000044241E) ----------------------------------------------------
int goodG2B1_167()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = -2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (0000000000442479) ----------------------------------------------------
int goodG2B2_167()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -2LL;
  result = globalReturnsTrue();
  if ( result )
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (00000000004424C8) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_11_good()
{
  goodB2G1_193();
  goodB2G2_193();
  goodG2B1_167();
  return goodG2B2_167();
}

//----- (00000000004424F6) ----------------------------------------------------
int __fastcall badSink_53(int a1)
{
  int result; // eax

  result = badStatic_12;
  if ( badStatic_12 )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB434: using guessed type int badStatic_12;

//----- (0000000000442521) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_21_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  badStatic_12 = 1;
  return badSink_53(v8);
}
// 6AB434: using guessed type int badStatic_12;
// 442521: using guessed type char buf[16];

//----- (0000000000442659) ----------------------------------------------------
int __fastcall goodB2G1Sink_12(int a1)
{
  if ( goodB2G1Static_12 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 - 1);
}
// 6AB438: using guessed type int goodB2G1Static_12;

//----- (00000000004426A5) ----------------------------------------------------
int goodB2G1_194()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  goodB2G1Static_12 = 0;
  return goodB2G1Sink_12(v8);
}
// 6AB438: using guessed type int goodB2G1Static_12;
// 4426A5: using guessed type char buf[16];

//----- (00000000004427DD) ----------------------------------------------------
int __fastcall goodB2G2Sink_12(int a1)
{
  int result; // eax

  result = goodB2G2Static_12;
  if ( goodB2G2Static_12 )
  {
    if ( a1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 - 1);
  }
  return result;
}
// 6AB43C: using guessed type int goodB2G2Static_12;

//----- (000000000044281D) ----------------------------------------------------
int goodB2G2_194()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  goodB2G2Static_12 = 1;
  return goodB2G2Sink_12(v8);
}
// 6AB43C: using guessed type int goodB2G2Static_12;
// 44281D: using guessed type char buf[16];

//----- (0000000000442955) ----------------------------------------------------
int __fastcall goodG2BSink_53(int a1)
{
  int result; // eax

  result = goodG2BStatic_12;
  if ( goodG2BStatic_12 )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB440: using guessed type int goodG2BStatic_12;

//----- (0000000000442980) ----------------------------------------------------
int goodG2B_329()
{
  goodG2BStatic_12 = 1;
  return goodG2BSink_53(-2);
}
// 6AB440: using guessed type int goodG2BStatic_12;

//----- (00000000004429AC) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_21_good()
{
  goodB2G1_194();
  goodB2G2_194();
  return goodG2B_329();
}

//----- (00000000004429D0) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_03_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 - 1);
}
// 4429D0: using guessed type char buf[16];

//----- (0000000000442B08) ----------------------------------------------------
int goodB2G1_195()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 - 1);
  return result;
}
// 442B08: using guessed type char buf[16];

//----- (0000000000442C55) ----------------------------------------------------
int goodB2G2_195()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 - 1);
  return result;
}
// 442C55: using guessed type char buf[16];

//----- (0000000000442DA2) ----------------------------------------------------
int goodG2B1_168()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000442DCE) ----------------------------------------------------
int goodG2B2_168()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000442DFA) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_03_good()
{
  goodB2G1_195();
  goodB2G2_195();
  goodG2B1_168();
  return goodG2B2_168();
}

//----- (0000000000442E28) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_13_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000442E85) ----------------------------------------------------
int goodB2G1_196()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v1 )
    return printUnsignedLine(v1 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000442F01) ----------------------------------------------------
int goodB2G2_196()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(v1 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000442F71) ----------------------------------------------------
int goodG2B1_169()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000442FBF) ----------------------------------------------------
int goodG2B2_169()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000443001) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_13_good()
{
  goodB2G1_196();
  goodB2G2_196();
  goodG2B1_169();
  return goodG2B2_169();
}

//----- (000000000044302F) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_10_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalTrue )
    v1 = -32768;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000443077) ----------------------------------------------------
int goodB2G1_197()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalTrue )
    v1 = -32768;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 - 1));
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (00000000004430DF) ----------------------------------------------------
int goodB2G2_197()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalTrue )
    v1 = -32768;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 - 1));
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000044313B) ----------------------------------------------------
int goodG2B1_170()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000044318F) ----------------------------------------------------
int goodG2B2_170()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( globalTrue )
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (00000000004431D7) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_10_good()
{
  goodB2G1_197();
  goodB2G2_197();
  goodG2B1_170();
  return goodG2B2_170();
}

//----- (0000000000443205) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_02_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 - 1);
}

//----- (0000000000443260) ----------------------------------------------------
int goodB2G1_198()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 - 1);
  return result;
}

//----- (00000000004432CD) ----------------------------------------------------
int goodB2G2_198()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 - 1);
  return result;
}

//----- (000000000044333A) ----------------------------------------------------
int goodG2B1_171()
{
  return printHexCharLine(-3);
}

//----- (0000000000443368) ----------------------------------------------------
int goodG2B2_171()
{
  return printHexCharLine(-3);
}

//----- (0000000000443396) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_02_good()
{
  goodB2G1_198();
  goodB2G2_198();
  goodG2B1_171();
  return goodG2B2_171();
}

//----- (00000000004433C4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_64b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 - 1LL);
}

//----- (00000000004433FE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_64b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 - 1LL);
}

//----- (0000000000443438) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_64b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 - 1LL);
  return result;
}

//----- (000000000044348E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54d_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_54e_badSink(a1);
}

//----- (00000000004434A5) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54d_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_54e_goodG2BSink(a1);
}

//----- (00000000004434BC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_54d_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_54e_goodB2GSink(a1);
}

//----- (00000000004434D3) ----------------------------------------------------
__int64 badSource_12()
{
  return 0LL;
}

//----- (00000000004434E6) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_42_bad()
{
  int v0; // eax

  v0 = badSource_12();
  return printUnsignedLine(v0 - 1);
}

//----- (0000000000443518) ----------------------------------------------------
__int64 goodG2BSource_12()
{
  return 4294967294LL;
}

//----- (000000000044352B) ----------------------------------------------------
int goodG2B_330()
{
  int v0; // eax

  v0 = goodG2BSource_12();
  return printUnsignedLine(v0 - 1);
}

//----- (000000000044355D) ----------------------------------------------------
__int64 goodB2GSource_12()
{
  return 0LL;
}

//----- (0000000000443570) ----------------------------------------------------
int goodB2G_303()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_12();
  if ( v1 )
    result = printUnsignedLine(v1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (00000000004435B4) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_42_good()
{
  goodB2G_303();
  return goodG2B_330();
}

//----- (00000000004435CE) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_67_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE191_Integer_Underflow__int_fgets_postdec_67b_badSink(v5);
}

//----- (000000000044363C) ----------------------------------------------------
int goodG2B_331()
{
  return CWE191_Integer_Underflow__int_fgets_postdec_67b_goodG2BSink(-2);
}

//----- (0000000000443664) ----------------------------------------------------
int goodB2G_304()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE191_Integer_Underflow__int_fgets_postdec_67b_goodB2GSink(v5);
}

//----- (00000000004436D2) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_67_good()
{
  goodG2B_331();
  return goodB2G_304();
}

//----- (00000000004436EC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_67b_badSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000044371B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_67b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000044374A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_67b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (0000000000443795) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_01_bad()
{
  return printIntLine(0x7FFFu);
}

//----- (00000000004437C9) ----------------------------------------------------
int goodG2B_332()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (00000000004437FD) ----------------------------------------------------
int goodB2G_305()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000443845) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_01_good()
{
  goodG2B_332();
  return goodB2G_305();
}

//----- (000000000044385F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE191_Integer_Underflow__int_fscanf_postdec_63b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000443899) ----------------------------------------------------
int goodG2B_333()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -2;
  return CWE191_Integer_Underflow__int_fscanf_postdec_63b_goodG2BSink(&v1);
}

//----- (00000000004438BD) ----------------------------------------------------
int goodB2G_306()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE191_Integer_Underflow__int_fscanf_postdec_63b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004438F7) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_63_good()
{
  goodG2B_333();
  return goodB2G_306();
}

//----- (0000000000443911) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_52b_badSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_52c_badSink(a1);
}

//----- (0000000000443928) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_52b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_52c_goodG2BSink(a1);
}

//----- (000000000044393F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_52b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_52c_goodB2GSink(a1);
}

//----- (0000000000443956) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_12_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  else
  {
    v8 = -2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printIntLine(v8 - 1);
  if ( v8 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 - 1);
}
// 443956: using guessed type char buf[16];

//----- (0000000000443AE4) ----------------------------------------------------
int goodB2G_307()
{
  int result; // eax
  char nptr[16]; // [rsp+0h] [rbp-70h]
  struct sockaddr addr; // [rsp+10h] [rbp-60h]
  char buf[16]; // [rsp+20h] [rbp-50h]
  __int16 s; // [rsp+30h] [rbp-40h]
  uint16_t v5; // [rsp+32h] [rbp-3Eh]
  int v6; // [rsp+34h] [rbp-3Ch]
  int v7; // [rsp+54h] [rbp-1Ch]
  int v8; // [rsp+58h] [rbp-18h]
  int v9; // [rsp+5Ch] [rbp-14h]
  int fd; // [rsp+60h] [rbp-10h]
  int v11; // [rsp+64h] [rbp-Ch]
  int v12; // [rsp+68h] [rbp-8h]
  int v13; // [rsp+6Ch] [rbp-4h]

  v13 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v6 = 0;
      v5 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v9 = recv(v12, buf, 0xDuLL, 0);
          if ( v9 != -1 )
          {
            if ( v9 )
            {
              buf[v9] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  else
  {
    v11 = -1;
    v8 = socket(2, 1, 6);
    if ( v8 != -1 )
    {
      memset(&addr, 0, 0x10uLL);
      addr.sa_family = 2;
      *(_DWORD *)&addr.sa_data[2] = 0;
      *(_WORD *)addr.sa_data = htons(0x6987u);
      if ( bind(v8, &addr, 0x10u) != -1 && listen(v8, 5) != -1 )
      {
        v11 = accept(v8, 0LL, 0LL);
        if ( v11 != -1 )
        {
          v7 = recv(v11, nptr, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              nptr[v7] = 0;
              v13 = atoi(nptr);
            }
          }
        }
      }
    }
    if ( v8 != -1 )
      close(v8);
    if ( v11 != -1 )
      close(v11);
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v13 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v13 - 1);
  }
  else if ( v13 == 0x80000000 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printIntLine(v13 - 1);
  }
  return result;
}
// 443AE4: using guessed type char buf[16];
// 443AE4: using guessed type char nptr[16];

//----- (0000000000443D99) ----------------------------------------------------
int goodG2B_334()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000443E00) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_12_good()
{
  goodB2G_307();
  return goodG2B_334();
}

//----- (0000000000443E1A) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_63_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE191_Integer_Underflow__int_rand_postdec_63b_badSink(&v6);
}

//----- (0000000000443E86) ----------------------------------------------------
int goodG2B_335()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -2;
  return CWE191_Integer_Underflow__int_rand_postdec_63b_goodG2BSink(&v1);
}

//----- (0000000000443EAA) ----------------------------------------------------
int goodB2G_308()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v6 = v2;
  return CWE191_Integer_Underflow__int_rand_postdec_63b_goodB2GSink(&v6);
}

//----- (0000000000443F16) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_63_good()
{
  goodG2B_335();
  return goodB2G_308();
}

//----- (0000000000443F30) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_14_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v6 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000443FBA) ----------------------------------------------------
int goodB2G1_199()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v6 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 - 1);
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000444065) ----------------------------------------------------
int goodB2G2_199()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v6 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 - 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000444104) ----------------------------------------------------
int goodG2B1_172()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000444152) ----------------------------------------------------
int goodG2B2_172()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000444194) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_14_good()
{
  goodB2G1_199();
  goodB2G2_199();
  goodG2B1_172();
  return goodG2B2_172();
}

//----- (00000000004441C2) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_09_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -32768;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000044420A) ----------------------------------------------------
int goodB2G1_200()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -32768;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 - 1));
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000444272) ----------------------------------------------------
int goodB2G2_200()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -32768;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 - 1));
  }
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004442CE) ----------------------------------------------------
int goodG2B1_173()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000444322) ----------------------------------------------------
int goodG2B2_173()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000044436A) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_09_good()
{
  goodB2G1_200();
  goodB2G2_200();
  goodG2B1_173();
  return goodG2B2_173();
}

//----- (0000000000444398) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_67_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_67b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004443DB) ----------------------------------------------------
int goodG2B_336()
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_67b_goodG2BSink(-2LL);
}

//----- (0000000000444409) ----------------------------------------------------
int goodB2G_309()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_67b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044444C) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_67_good()
{
  goodG2B_336();
  return goodB2G_309();
}

//----- (0000000000444466) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (0000000000444491) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (00000000004444BC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 - 1);
  return result;
}

//----- (00000000004444FC) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_52_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_52b_badSink(v2);
}

//----- (0000000000444566) ----------------------------------------------------
int goodG2B_337()
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_52b_goodG2BSink(-2);
}

//----- (0000000000444588) ----------------------------------------------------
int goodB2G_310()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_52b_goodB2GSink(v2);
}

//----- (00000000004445F2) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_52_good()
{
  goodG2B_337();
  return goodB2G_310();
}

//----- (000000000044460C) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_02_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 - 1);
}
// 44460C: using guessed type char buf[16];

//----- (0000000000444744) ----------------------------------------------------
int goodB2G1_201()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 - 1);
  return result;
}
// 444744: using guessed type char buf[16];

//----- (0000000000444891) ----------------------------------------------------
int goodB2G2_201()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 - 1);
  return result;
}
// 444891: using guessed type char buf[16];

//----- (00000000004449DE) ----------------------------------------------------
int goodG2B1_174()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000444A0A) ----------------------------------------------------
int goodG2B2_174()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000444A36) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_02_good()
{
  goodB2G1_201();
  goodB2G2_201();
  goodG2B1_174();
  return goodG2B2_174();
}

//----- (0000000000444A64) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_64b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000444A9E) ----------------------------------------------------
int goodG2B_338()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -2;
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_64b_goodG2BSink(&v1);
}

//----- (0000000000444AC2) ----------------------------------------------------
int goodB2G_311()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_64b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000444AFC) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_64_good()
{
  goodG2B_338();
  return goodB2G_311();
}

//----- (0000000000444B16) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_51b_badSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000444B37) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_51b_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000444B58) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_rand_postdec_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000444B8B) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_16_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 - 1);
}

//----- (0000000000444C01) ----------------------------------------------------
int goodB2G_312()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000444C89) ----------------------------------------------------
int goodG2B_339()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000444CB7) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_16_good()
{
  goodB2G_312();
  return goodG2B_339();
}

//----- (0000000000444CD1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_65b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (0000000000444CFF) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_65b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (0000000000444D2D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_65b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (0000000000444D6F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_17_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+0h] [rbp-10h]
  unsigned int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%d", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    v2 = --v1;
    result = printIntLine(v1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000444DDC) ----------------------------------------------------
int goodB2G_313()
{
  int result; // eax
  unsigned int v1; // [rsp+0h] [rbp-10h]
  unsigned int v2; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%d", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x80000000 )
    {
      result = printLine("data value is too large to perform arithmetic safely.");
    }
    else
    {
      v2 = --v1;
      result = printIntLine(v1);
    }
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000444E5F) ----------------------------------------------------
int goodG2B_340()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(--v1);
  return result;
}

//----- (0000000000444EB1) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_17_good()
{
  goodB2G_313();
  return goodG2B_340();
}

//----- (0000000000444ECB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_64b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 - 1);
}

//----- (0000000000444EFE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_64b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 - 1);
}

//----- (0000000000444F31) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 )
    result = printUnsignedLine(*a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000444F76) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54c_badSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_rand_postdec_54d_badSink(a1);
}

//----- (0000000000444F91) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54c_goodG2BSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_rand_postdec_54d_goodG2BSink(a1);
}

//----- (0000000000444FAC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54c_goodB2GSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_rand_postdec_54d_goodB2GSink(a1);
}

//----- (0000000000444FC7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54d_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_fgets_postdec_54e_badSink(a1);
}

//----- (0000000000444FDE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54d_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_fgets_postdec_54e_goodG2BSink(a1);
}

//----- (0000000000444FF5) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54d_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_fgets_postdec_54e_goodB2GSink(a1);
}

//----- (000000000044500C) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_32_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+Ch] [rbp-24h]
  int *v8; // [rsp+10h] [rbp-20h]
  int *v9; // [rsp+18h] [rbp-18h]

  v9 = &v6;
  v8 = &v6;
  v6 = 0;
  v7 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v7 = v2;
  *v9 = v2;
  return printIntLine(*v8 - 1);
}

//----- (00000000004450AB) ----------------------------------------------------
int goodG2B_341()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -2;
  v1 = -2;
  v3 = -3;
  v2 = -3;
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000445102) ----------------------------------------------------
int goodB2G_314()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+Ch] [rbp-24h]
  int *v9; // [rsp+10h] [rbp-20h]
  int *v10; // [rsp+18h] [rbp-18h]

  v10 = &v6;
  v9 = &v6;
  v6 = 0;
  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  *v10 = v2;
  v7 = *v9;
  if ( v7 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 - 1);
  return result;
}

//----- (00000000004451B6) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_32_good()
{
  goodG2B_341();
  return goodB2G_314();
}

//----- (00000000004451D0) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_67b_badSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (00000000004451FF) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_67b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (000000000044522E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_67b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (0000000000445279) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54e_badSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (00000000004452A4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54e_goodG2BSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (00000000004452CF) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54e_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (000000000044530C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_53c_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_53d_badSink(a1);
}

//----- (0000000000445323) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_53c_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_53d_goodG2BSink(a1);
}

//----- (000000000044533A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_53c_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_53d_goodB2GSink(a1);
}

//----- (0000000000445351) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_01_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return printIntLine(v8 - 1);
}
// 445351: using guessed type char buf[16];

//----- (0000000000445489) ----------------------------------------------------
int goodG2B_342()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (00000000004454B5) ----------------------------------------------------
int goodB2G_315()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  if ( v8 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v8 - 1);
  return result;
}
// 4454B5: using guessed type char buf[16];

//----- (0000000000445602) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_01_good()
{
  goodG2B_342();
  return goodB2G_315();
}

//----- (000000000044561C) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_51_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_51b_badSink(v2);
}

//----- (0000000000445686) ----------------------------------------------------
int goodG2B_343()
{
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_51b_goodG2BSink(-2);
}

//----- (00000000004456A8) ----------------------------------------------------
int goodB2G_316()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__unsigned_int_rand_postdec_51b_goodB2GSink(v2);
}

//----- (0000000000445712) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_51_good()
{
  goodG2B_343();
  return goodB2G_316();
}

//----- (000000000044572C) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_05_bad()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticTrue_9 )
    v1 = -32768;
  result = staticTrue_9;
  if ( staticTrue_9 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB184: using guessed type int staticTrue_9;

//----- (0000000000445774) ----------------------------------------------------
int goodB2G1_202()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticTrue_9 )
    v1 = -32768;
  if ( staticFalse_9 )
    return printLine("Benign, fixed string");
  if ( v1 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v1 - 1));
}
// 6AB184: using guessed type int staticTrue_9;
// 6AB444: using guessed type int staticFalse_9;

//----- (00000000004457DC) ----------------------------------------------------
int goodB2G2_202()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticTrue_9 )
    v1 = -32768;
  result = staticTrue_9;
  if ( staticTrue_9 )
  {
    if ( v1 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v1 - 1));
  }
  return result;
}
// 6AB184: using guessed type int staticTrue_9;

//----- (0000000000445838) ----------------------------------------------------
int goodG2B1_175()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticFalse_9 )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticTrue_9;
  if ( staticTrue_9 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB184: using guessed type int staticTrue_9;
// 6AB444: using guessed type int staticFalse_9;

//----- (000000000044588C) ----------------------------------------------------
int goodG2B2_175()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( staticTrue_9 )
    v1 = -2;
  result = staticTrue_9;
  if ( staticTrue_9 )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 6AB184: using guessed type int staticTrue_9;

//----- (00000000004458D4) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_05_good()
{
  goodB2G1_202();
  goodB2G2_202();
  goodG2B1_175();
  return goodG2B2_175();
}

//----- (0000000000445902) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__unsigned_int_rand_postdec_61b_badSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (0000000000445961) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__unsigned_int_rand_postdec_61b_goodG2BSource()
{
  return 4294967294LL;
}

//----- (0000000000445974) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__unsigned_int_rand_postdec_61b_goodB2GSource()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (00000000004459D3) ----------------------------------------------------
__int64 __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000445A00) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_fscanf_postdec_61b_goodG2BSource()
{
  return 4294967294LL;
}

//----- (0000000000445A13) ----------------------------------------------------
__int64 __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000445A40) ----------------------------------------------------
int __fastcall badSink_54(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000445A61) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_41_bad()
{
  return badSink_54(0);
}

//----- (0000000000445A83) ----------------------------------------------------
int __fastcall goodG2BSink_54(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000445AA4) ----------------------------------------------------
int goodG2B_344()
{
  return goodG2BSink_54(-2);
}

//----- (0000000000445AC6) ----------------------------------------------------
int __fastcall goodB2GSink_40(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000445AF9) ----------------------------------------------------
int goodB2G_317()
{
  return goodB2GSink_40(0);
}

//----- (0000000000445B1B) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_41_good()
{
  goodB2G_317();
  return goodG2B_344();
}

//----- (0000000000445B35) ----------------------------------------------------
__int64 staticReturnsTrue_12()
{
  return 1LL;
}

//----- (0000000000445B40) ----------------------------------------------------
__int64 staticReturnsFalse_12()
{
  return 0LL;
}

//----- (0000000000445B4B) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_08_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_12() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticReturnsTrue_12();
  if ( result )
    result = printIntLine((__int16)(v4 - 1));
  return result;
}

//----- (0000000000445BDB) ----------------------------------------------------
int goodB2G1_203()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_12() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  if ( (unsigned int)staticReturnsFalse_12() )
    return printLine("Benign, fixed string");
  if ( v4 == -32768 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine((__int16)(v4 - 1));
}

//----- (0000000000445C8B) ----------------------------------------------------
int goodB2G2_203()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_12() )
  {
    if ( rand() & 1 )
    {
      rand();
      v0 = rand() << 15;
      LOWORD(v1) = v0 ^ rand();
    }
    else
    {
      rand();
      v2 = rand() << 15;
      v1 = ~(v2 ^ rand());
    }
    v4 = v1;
  }
  result = staticReturnsTrue_12();
  if ( result )
  {
    if ( v4 == -32768 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine((__int16)(v4 - 1));
  }
  return result;
}

//----- (0000000000445D2F) ----------------------------------------------------
int goodG2B1_176()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_12() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticReturnsTrue_12();
  if ( result )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (0000000000445D8B) ----------------------------------------------------
int goodG2B2_176()
{
  int result; // eax
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_12() )
    v1 = -2;
  result = staticReturnsTrue_12();
  if ( result )
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (0000000000445DDB) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_08_good()
{
  goodB2G1_203();
  goodB2G2_203();
  goodG2B1_176();
  return goodG2B2_176();
}

//----- (0000000000445E09) ----------------------------------------------------
int badSink_55()
{
  return printUnsignedLine(CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_badData - 1);
}
// 6AB448: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_badData;

//----- (0000000000445E30) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_badData = v2;
  return badSink_55();
}
// 6AB448: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_badData;

//----- (0000000000445EA3) ----------------------------------------------------
int goodG2BSink_55()
{
  return printUnsignedLine(CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_goodG2BData - 1);
}
// 6AB44C: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_goodG2BData;

//----- (0000000000445ECA) ----------------------------------------------------
int goodG2B_345()
{
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_goodG2BData = -2;
  return goodG2BSink_55();
}
// 6AB44C: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_goodG2BData;

//----- (0000000000445EF5) ----------------------------------------------------
int goodB2GSink_41()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_goodB2GData )
    result = printUnsignedLine(CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_goodB2GData - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 6AB450: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_goodB2GData;

//----- (0000000000445F2E) ----------------------------------------------------
int goodB2G_318()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_goodB2GData = v2;
  return goodB2GSink_41();
}
// 6AB450: using guessed type int CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_goodB2GData;

//----- (0000000000445FA1) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_45_good()
{
  goodG2B_345();
  return goodB2G_318();
}

//----- (0000000000445FBB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54d_badSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_54e_badSink(a1);
}

//----- (0000000000445FD5) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54d_goodG2BSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_54e_goodG2BSink(a1);
}

//----- (0000000000445FEF) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54d_goodB2GSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_54e_goodB2GSink(a1);
}

//----- (0000000000446009) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_06_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 - 1);
}

//----- (0000000000446091) ----------------------------------------------------
int goodB2G1_204()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000446137) ----------------------------------------------------
int goodB2G2_204()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (00000000004461D1) ----------------------------------------------------
int goodG2B1_177()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000044621D) ----------------------------------------------------
int goodG2B2_177()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (000000000044625D) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_06_good()
{
  goodB2G1_204();
  goodB2G2_204();
  goodG2B1_177();
  return goodG2B2_177();
}

//----- (000000000044628B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_63b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 - 1LL);
}

//----- (00000000004462BD) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_63b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 - 1LL);
}

//----- (00000000004462EF) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_63b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 - 1LL);
  return result;
}

//----- (000000000044633D) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_09_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v8 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 44633D: using guessed type char buf[16];

//----- (000000000044648D) ----------------------------------------------------
int goodB2G1_205()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v8 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 - 1);
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;
// 44648D: using guessed type char buf[16];

//----- (00000000004465FE) ----------------------------------------------------
int goodB2G2_205()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( GLOBAL_CONST_TRUE )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v8 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 - 1);
  }
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 4465FE: using guessed type char buf[16];

//----- (0000000000446763) ----------------------------------------------------
int goodG2B1_178()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004467AF) ----------------------------------------------------
int goodG2B2_178()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_TRUE )
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004467EF) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_09_good()
{
  goodB2G1_205();
  goodB2G2_205();
  goodG2B1_178();
  return goodG2B2_178();
}

//----- (000000000044681D) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_68b_badSink()
{
  return printIntLine((__int16)(CWE191_Integer_Underflow__short_min_postdec_68_badData - 1));
}
// 6AB546: using guessed type __int16 CWE191_Integer_Underflow__short_min_postdec_68_badData;

//----- (0000000000446850) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_68b_goodG2BSink()
{
  return printIntLine((__int16)(CWE191_Integer_Underflow__short_min_postdec_68_goodG2BData - 1));
}
// 6AB548: using guessed type __int16 CWE191_Integer_Underflow__short_min_postdec_68_goodG2BData;

//----- (0000000000446883) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__short_min_postdec_68_goodB2GData == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(CWE191_Integer_Underflow__short_min_postdec_68_goodB2GData - 1));
  return result;
}
// 6AB54A: using guessed type __int16 CWE191_Integer_Underflow__short_min_postdec_68_goodB2GData;

//----- (00000000004468CA) ----------------------------------------------------
__int64 badSource_13()
{
  __int64 result; // rax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(result) = rand();
  }
  else
  {
    rand();
    rand();
    LODWORD(result) = ~rand();
  }
  return (unsigned __int8)result;
}

//----- (000000000044690E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_42_bad()
{
  char v0; // al

  v0 = (unsigned __int64)badSource_13() - 1;
  return printHexCharLine(v0);
}

//----- (0000000000446946) ----------------------------------------------------
__int64 goodG2BSource_13()
{
  return 254LL;
}

//----- (0000000000446959) ----------------------------------------------------
int goodG2B_346()
{
  char v0; // al

  v0 = (unsigned __int64)goodG2BSource_13() - 1;
  return printHexCharLine(v0);
}

//----- (0000000000446991) ----------------------------------------------------
__int64 goodB2GSource_13()
{
  __int64 result; // rax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(result) = rand();
  }
  else
  {
    rand();
    rand();
    LODWORD(result) = ~rand();
  }
  return (unsigned __int8)result;
}

//----- (00000000004469D5) ----------------------------------------------------
int goodB2G_319()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = goodB2GSource_13();
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (0000000000446A1F) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_42_good()
{
  goodB2G_319();
  return goodG2B_346();
}

//----- (0000000000446A39) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_64b_badSink(&v1);
}

//----- (0000000000446A5D) ----------------------------------------------------
int goodG2B_347()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -2;
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_64b_goodG2BSink(&v1);
}

//----- (0000000000446A81) ----------------------------------------------------
int goodB2G_320()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_64b_goodB2GSink(&v1);
}

//----- (0000000000446AA5) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_64_good()
{
  goodG2B_347();
  return goodB2G_320();
}

//----- (0000000000446ABF) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_14_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v10 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000446BA3) ----------------------------------------------------
int goodB2G1_206()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v10 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 - 1);
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000446CAF) ----------------------------------------------------
int goodB2G2_206()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v10 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 - 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000446DAF) ----------------------------------------------------
int goodG2B1_179()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = -2LL;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000446E04) ----------------------------------------------------
int goodG2B2_179()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFive == 5 )
    v1 = -2LL;
  result = globalFive;
  if ( globalFive == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000446E4D) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_14_good()
{
  goodB2G1_206();
  goodB2G2_206();
  goodG2B1_179();
  return goodG2B2_179();
}

//----- (0000000000446E7B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_53c_badSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_53d_badSink(a1);
}

//----- (0000000000446E96) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_53c_goodG2BSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_53d_goodG2BSink(a1);
}

//----- (0000000000446EB1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_53c_goodB2GSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_53d_goodB2GSink(a1);
}

//----- (0000000000446ECC) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_61_bad()
{
  int v0; // eax

  v0 = CWE191_Integer_Underflow__int_fscanf_postdec_61b_badSource(0);
  return printIntLine(v0 - 1);
}

//----- (0000000000446EFE) ----------------------------------------------------
int goodG2B_348()
{
  int v0; // eax

  v0 = CWE191_Integer_Underflow__int_fscanf_postdec_61b_goodG2BSource();
  return printIntLine(v0 - 1);
}

//----- (0000000000446F30) ----------------------------------------------------
int goodB2G_321()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE191_Integer_Underflow__int_fscanf_postdec_61b_goodB2GSource(0);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}

//----- (0000000000446F77) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_61_good()
{
  goodG2B_348();
  return goodB2G_321();
}

//----- (0000000000446F91) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_32_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+18h] [rbp-28h]
  __int64 *v12; // [rsp+20h] [rbp-20h]
  __int64 *v13; // [rsp+28h] [rbp-18h]

  v13 = &v10;
  v12 = &v10;
  v10 = 0LL;
  v11 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v11 = v4;
  *v13 = v4;
  return printLongLongLine(*v12 - 1);
}

//----- (000000000044708C) ----------------------------------------------------
int goodG2B_349()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 *v5; // [rsp+20h] [rbp-10h]
  __int64 *v6; // [rsp+28h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -2LL;
  v1 = -2LL;
  v3 = -3LL;
  v2 = -3LL;
  return printLongLongLine(-3LL);
}

//----- (00000000004470F0) ----------------------------------------------------
int goodB2G_322()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+0h] [rbp-40h]
  __int64 v11; // [rsp+10h] [rbp-30h]
  __int64 v12; // [rsp+18h] [rbp-28h]
  __int64 *v13; // [rsp+20h] [rbp-20h]
  __int64 *v14; // [rsp+28h] [rbp-18h]

  v14 = &v10;
  v13 = &v10;
  v10 = 0LL;
  v12 = 0LL;
  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  v12 = v4;
  *v14 = v4;
  v11 = *v13;
  if ( v11 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v11 - 1);
  return result;
}

//----- (0000000000447207) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_32_good()
{
  goodG2B_349();
  return goodB2G_322();
}

//----- (0000000000447221) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_18_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 - 1);
}

//----- (0000000000447295) ----------------------------------------------------
int goodB2G_323()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 - 1);
  return result;
}

//----- (000000000044731E) ----------------------------------------------------
int goodG2B_350()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000044734C) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_18_good()
{
  goodB2G_323();
  return goodG2B_350();
}

//----- (0000000000447366) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_22_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE191_Integer_Underflow__int_listen_socket_postdec_22_badGlobal = 1;
  return CWE191_Integer_Underflow__int_listen_socket_postdec_22_badSink(v8);
}
// 6AB454: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_22_badGlobal;
// 447366: using guessed type char buf[16];

//----- (000000000044749E) ----------------------------------------------------
int goodB2G1_207()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodB2G1Global = 0;
  return CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodB2G1Sink(v8);
}
// 6AB458: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodB2G1Global;
// 44749E: using guessed type char buf[16];

//----- (00000000004475D6) ----------------------------------------------------
int goodB2G2_207()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodB2G2Global = 1;
  return CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodB2G2Sink(v8);
}
// 6AB45C: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodB2G2Global;
// 4475D6: using guessed type char buf[16];

//----- (000000000044770E) ----------------------------------------------------
int goodG2B_351()
{
  CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodG2BGlobal = 1;
  return CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodG2BSink(-2);
}
// 6AB460: using guessed type int CWE191_Integer_Underflow__int_listen_socket_postdec_22_goodG2BGlobal;

//----- (000000000044773A) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_22_good()
{
  goodB2G1_207();
  goodB2G2_207();
  return goodG2B_351();
}

//----- (000000000044775E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_65b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000044778C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_65b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (00000000004477BA) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_65b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (00000000004477FC) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_17_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2147483648;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(--v1);
  return result;
}

//----- (000000000044784E) ----------------------------------------------------
int goodB2G_324()
{
  int result; // eax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = 2147483648;
  for ( j = 0; j <= 0; ++j )
  {
    if ( v1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(--v1);
  }
  return result;
}

//----- (00000000004478B5) ----------------------------------------------------
int goodG2B_352()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  for ( i = 0; i <= 0; ++i )
    v1 = -2;
  for ( j = 0; j <= 0; ++j )
    result = printIntLine(--v1);
  return result;
}

//----- (0000000000447907) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_17_good()
{
  goodB2G_324();
  return goodG2B_352();
}

//----- (0000000000447921) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54b_badSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_rand_postdec_54c_badSink(a1);
}

//----- (000000000044793C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54b_goodG2BSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_rand_postdec_54c_goodG2BSink(a1);
}

//----- (0000000000447957) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_54b_goodB2GSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_rand_postdec_54c_goodB2GSink(a1);
}

//----- (0000000000447972) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_07_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticFive_13 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticFive_13;
  if ( staticFive_13 == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB188: using guessed type int staticFive_13;

//----- (00000000004479CF) ----------------------------------------------------
int goodB2G1_208()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticFive_13 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( staticFive_13 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB188: using guessed type int staticFive_13;

//----- (0000000000447A4E) ----------------------------------------------------
int goodB2G2_208()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticFive_13 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticFive_13;
  if ( staticFive_13 == 5 )
  {
    if ( v1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB188: using guessed type int staticFive_13;

//----- (0000000000447AC1) ----------------------------------------------------
int goodG2B1_180()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_13 == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = staticFive_13;
  if ( staticFive_13 == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB188: using guessed type int staticFive_13;

//----- (0000000000447B0F) ----------------------------------------------------
int goodG2B2_180()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_13 == 5 )
    v1 = -2;
  result = staticFive_13;
  if ( staticFive_13 == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB188: using guessed type int staticFive_13;

//----- (0000000000447B51) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_07_good()
{
  goodB2G1_208();
  goodB2G2_208();
  goodG2B1_180();
  return goodG2B2_180();
}

//----- (0000000000447B7F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_15_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 - 1);
}
// 447B7F: using guessed type char buf[16];

//----- (0000000000447C73) ----------------------------------------------------
int goodB2G1_209()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 - 1);
  return result;
}
// 447C73: using guessed type char buf[16];

//----- (0000000000447D7C) ----------------------------------------------------
int goodB2G2_209()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 - 1);
  return result;
}
// 447D7C: using guessed type char buf[16];

//----- (0000000000447E85) ----------------------------------------------------
int goodG2B1_181()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000447EB3) ----------------------------------------------------
int goodG2B2_181()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000447EE1) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_15_good()
{
  goodB2G1_209();
  goodB2G2_209();
  goodG2B1_181();
  return goodG2B2_181();
}

//----- (0000000000447F0F) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_05_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( staticTrue_10 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = staticTrue_10;
  if ( staticTrue_10 )
    result = printHexCharLine(v2 - 1);
  return result;
}
// 6AB18C: using guessed type int staticTrue_10;

//----- (0000000000447F7E) ----------------------------------------------------
int goodB2G1_210()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( staticTrue_10 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( staticFalse_10 )
    return printLine("Benign, fixed string");
  if ( v2 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 - 1);
}
// 6AB18C: using guessed type int staticTrue_10;
// 6AB464: using guessed type int staticFalse_10;

//----- (000000000044800B) ----------------------------------------------------
int goodB2G2_210()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( staticTrue_10 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = staticTrue_10;
  if ( staticTrue_10 )
  {
    if ( v2 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 - 1);
  }
  return result;
}
// 6AB18C: using guessed type int staticTrue_10;

//----- (000000000044808C) ----------------------------------------------------
int goodG2B1_182()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticFalse_10 )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticTrue_10;
  if ( staticTrue_10 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB18C: using guessed type int staticTrue_10;
// 6AB464: using guessed type int staticFalse_10;

//----- (00000000004480DA) ----------------------------------------------------
int goodG2B2_182()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( staticTrue_10 )
    v1 = -2;
  result = staticTrue_10;
  if ( staticTrue_10 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB18C: using guessed type int staticTrue_10;

//----- (000000000044811C) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_05_good()
{
  goodB2G1_210();
  goodB2G2_210();
  goodG2B1_182();
  return goodG2B2_182();
}

//----- (000000000044814A) ----------------------------------------------------
int __fastcall badSink_56(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (0000000000448175) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_41_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return badSink_56(v0);
}

//----- (00000000004481BF) ----------------------------------------------------
int __fastcall goodG2BSink_56(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (00000000004481EA) ----------------------------------------------------
int goodG2B_353()
{
  return goodG2BSink_56(-2);
}

//----- (0000000000448207) ----------------------------------------------------
int __fastcall goodB2GSink_42(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (0000000000448244) ----------------------------------------------------
int goodB2G_325()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return goodB2GSink_42(v0);
}

//----- (000000000044828E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_41_good()
{
  goodB2G_325();
  return goodG2B_353();
}

//----- (00000000004482A8) ----------------------------------------------------
__int64 __fastcall badSource_14(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 4482A8: using guessed type char buf[16];

//----- (0000000000448385) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_42_bad()
{
  int v0; // eax

  v0 = badSource_14(0);
  return printIntLine(v0 - 1);
}

//----- (00000000004483B7) ----------------------------------------------------
__int64 goodG2BSource_14()
{
  return 4294967294LL;
}

//----- (00000000004483CA) ----------------------------------------------------
int goodG2B_354()
{
  int v0; // eax

  v0 = goodG2BSource_14();
  return printIntLine(v0 - 1);
}

//----- (00000000004483FC) ----------------------------------------------------
__int64 __fastcall goodB2GSource_14(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 4483FC: using guessed type char buf[16];

//----- (00000000004484D9) ----------------------------------------------------
int goodB2G_326()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_14(0);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}

//----- (0000000000448520) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_42_good()
{
  goodB2G_326();
  return goodG2B_354();
}

//----- (000000000044853A) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_04_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 - 1);
}

//----- (000000000044861A) ----------------------------------------------------
int goodB2G1_211()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 - 1);
  return result;
}

//----- (0000000000448722) ----------------------------------------------------
int goodB2G2_211()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 - 1);
  return result;
}

//----- (000000000044881E) ----------------------------------------------------
int goodG2B1_183()
{
  return printLongLongLine(-3LL);
}

//----- (000000000044886F) ----------------------------------------------------
int goodG2B2_183()
{
  return printLongLongLine(-3LL);
}

//----- (00000000004488B4) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_04_good()
{
  goodB2G1_211();
  goodB2G2_211();
  goodG2B1_183();
  return goodG2B2_183();
}

//----- (00000000004488E2) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_31_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 - 1);
}

//----- (00000000004489BC) ----------------------------------------------------
int goodG2B_355()
{
  return printLongLongLine(-3LL);
}

//----- (00000000004489FF) ----------------------------------------------------
int goodB2G_327()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 - 1);
  return result;
}

//----- (0000000000448AF5) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_31_good()
{
  goodG2B_355();
  return goodB2G_327();
}

//----- (0000000000448B0F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_63b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 - 1);
}

//----- (0000000000448B3A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_63b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 - 1);
}

//----- (0000000000448B65) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 )
    result = printUnsignedLine(*a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000448BA2) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_65_bad()
{
  return CWE191_Integer_Underflow__short_min_postdec_65b_badSink(-32768);
}

//----- (0000000000448BCC) ----------------------------------------------------
int goodG2B_356()
{
  return CWE191_Integer_Underflow__short_min_postdec_65b_goodG2BSink(-2);
}

//----- (0000000000448BF6) ----------------------------------------------------
int goodB2G_328()
{
  return CWE191_Integer_Underflow__short_min_postdec_65b_goodB2GSink(-32768);
}

//----- (0000000000448C20) ----------------------------------------------------
int CWE191_Integer_Underflow__short_min_postdec_65_good()
{
  goodG2B_356();
  return goodB2G_328();
}

//----- (0000000000448C3A) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_18_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return printLongLongLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000448C8B) ----------------------------------------------------
int goodB2G_329()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000448CFB) ----------------------------------------------------
int goodG2B_357()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000448D30) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_18_good()
{
  goodB2G_329();
  return goodG2B_357();
}

//----- (0000000000448D4A) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_34_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 - 1);
}

//----- (0000000000448DB3) ----------------------------------------------------
int goodG2B_358()
{
  return printHexCharLine(-3);
}

//----- (0000000000448DEF) ----------------------------------------------------
int goodB2G_330()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 - 1);
  return result;
}

//----- (0000000000448E6A) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_34_good()
{
  goodG2B_358();
  return goodB2G_330();
}

//----- (0000000000448E84) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_54_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE191_Integer_Underflow__short_rand_postdec_54b_badSink(v1);
}

//----- (0000000000448EE5) ----------------------------------------------------
int goodG2B_359()
{
  return CWE191_Integer_Underflow__short_rand_postdec_54b_goodG2BSink(-2);
}

//----- (0000000000448F06) ----------------------------------------------------
int goodB2G_331()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE191_Integer_Underflow__short_rand_postdec_54b_goodB2GSink(v1);
}

//----- (0000000000448F67) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_54_good()
{
  goodG2B_359();
  return goodB2G_331();
}

//----- (0000000000448F81) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_31_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+14h] [rbp-Ch]
  int v6; // [rsp+18h] [rbp-8h]
  int v7; // [rsp+1Ch] [rbp-4h]

  v7 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v6 = v7;
  v5 = v7 - 1;
  v4 = v7 - 1;
  return printIntLine(v7 - 1);
}

//----- (0000000000448FFF) ----------------------------------------------------
int goodG2B_360()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000449037) ----------------------------------------------------
int goodB2G_332()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+14h] [rbp-Ch]
  int v5; // [rsp+18h] [rbp-8h]
  int v6; // [rsp+1Ch] [rbp-4h]

  v6 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  v4 = v6;
  if ( v6 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 - 1);
  return result;
}

//----- (00000000004490CA) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_31_good()
{
  goodG2B_360();
  return goodB2G_332();
}

//----- (00000000004490E4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54d_badSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_54e_badSink(a1);
}

//----- (00000000004490FE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54d_goodG2BSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_54e_goodG2BSink(a1);
}

//----- (0000000000449118) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54d_goodB2GSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_54e_goodB2GSink(a1);
}

//----- (0000000000449132) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_53d_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (0000000000449160) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_53d_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000044918E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_53d_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (00000000004491D0) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_22_badSink(__int64 a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int64_t_rand_postdec_22_badGlobal;
  if ( CWE191_Integer_Underflow__int64_t_rand_postdec_22_badGlobal )
    result = printLongLongLine(a1 - 1);
  return result;
}
// 6AB46C: using guessed type int CWE191_Integer_Underflow__int64_t_rand_postdec_22_badGlobal;

//----- (0000000000449201) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodB2G1Sink(__int64 a1)
{
  if ( CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(a1 - 1);
}
// 6AB470: using guessed type int CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodB2G1Global;

//----- (000000000044925A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodB2G2Sink(__int64 a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodB2G2Global;
  if ( CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodB2G2Global )
  {
    if ( a1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(a1 - 1);
  }
  return result;
}
// 6AB474: using guessed type int CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodB2G2Global;

//----- (00000000004492A7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodG2BSink(__int64 a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodG2BGlobal;
  if ( CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodG2BGlobal )
    result = printLongLongLine(a1 - 1);
  return result;
}
// 6AB478: using guessed type int CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodG2BGlobal;

//----- (00000000004492D8) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54c_badSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54d_badSink(a1);
}

//----- (00000000004492EF) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54c_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54d_goodG2BSink(a1);
}

//----- (0000000000449306) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54c_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54d_goodB2GSink(a1);
}

//----- (000000000044931D) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_05_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( staticTrue_11 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticTrue_11;
  if ( staticTrue_11 )
    result = printIntLine(v7 - 1);
  return result;
}
// 6AB190: using guessed type int staticTrue_11;
// 44931D: using guessed type char buf[16];

//----- (0000000000449427) ----------------------------------------------------
int goodB2G1_212()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( staticTrue_11 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( staticFalse_11 )
    return printLine("Benign, fixed string");
  if ( v7 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 - 1);
}
// 6AB190: using guessed type int staticTrue_11;
// 6AB468: using guessed type int staticFalse_11;
// 449427: using guessed type char buf[16];

//----- (0000000000449552) ----------------------------------------------------
int goodB2G2_212()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( staticTrue_11 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticTrue_11;
  if ( staticTrue_11 )
  {
    if ( v7 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 - 1);
  }
  return result;
}
// 6AB190: using guessed type int staticTrue_11;
// 449552: using guessed type char buf[16];

//----- (0000000000449671) ----------------------------------------------------
int goodG2B1_184()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_11 )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticTrue_11;
  if ( staticTrue_11 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB190: using guessed type int staticTrue_11;
// 6AB468: using guessed type int staticFalse_11;

//----- (00000000004496BD) ----------------------------------------------------
int goodG2B2_184()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_11 )
    v1 = -2;
  result = staticTrue_11;
  if ( staticTrue_11 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB190: using guessed type int staticTrue_11;

//----- (00000000004496FD) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_05_good()
{
  goodB2G1_212();
  goodB2G2_212();
  goodG2B1_184();
  return goodG2B2_184();
}

//----- (000000000044972B) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_61_bad()
{
  int v0; // eax

  v0 = CWE191_Integer_Underflow__int_min_postdec_61b_badSource();
  return printIntLine(v0 - 1);
}

//----- (000000000044975D) ----------------------------------------------------
int goodG2B_361()
{
  int v0; // eax

  v0 = CWE191_Integer_Underflow__int_min_postdec_61b_goodG2BSource();
  return printIntLine(v0 - 1);
}

//----- (000000000044978F) ----------------------------------------------------
int goodB2G_333()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE191_Integer_Underflow__int_min_postdec_61b_goodB2GSource();
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}

//----- (00000000004497D6) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_61_good()
{
  goodG2B_361();
  return goodB2G_333();
}

//----- (00000000004497F0) ----------------------------------------------------
int __fastcall badSink_57(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000449811) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_41_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return badSink_57(v7);
}
// 449811: using guessed type char buf[16];

//----- (00000000004498F9) ----------------------------------------------------
int __fastcall goodG2BSink_57(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000044991A) ----------------------------------------------------
int goodG2B_362()
{
  return goodG2BSink_57(-2);
}

//----- (000000000044993C) ----------------------------------------------------
int __fastcall goodB2GSink_43(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (0000000000449972) ----------------------------------------------------
int goodB2G_334()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return goodB2GSink_43(v7);
}
// 449972: using guessed type char buf[16];

//----- (0000000000449A5A) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_41_good()
{
  goodB2G_334();
  return goodG2B_362();
}

//----- (0000000000449A74) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_63b_badSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000449AAE) ----------------------------------------------------
int goodG2B_363()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -2;
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_63b_goodG2BSink(&v1);
}

//----- (0000000000449AD2) ----------------------------------------------------
int goodB2G_335()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  return CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_63b_goodB2GSink(&v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000449B0C) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_63_good()
{
  goodG2B_363();
  return goodB2G_335();
}

//----- (0000000000449B26) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__short_fscanf_postdec_65_bad()
{
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int (__fastcall *v2)(__int16); // [rsp+8h] [rbp-8h]

  v2 = CWE191_Integer_Underflow__short_fscanf_postdec_65b_badSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000449B6A) ----------------------------------------------------
int goodG2B_364()
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_65b_goodG2BSink(-2);
}

//----- (0000000000449B94) ----------------------------------------------------
__int64 goodB2G_336()
{
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int (__fastcall *v2)(__int16); // [rsp+8h] [rbp-8h]

  v2 = CWE191_Integer_Underflow__short_fscanf_postdec_65b_goodB2GSink;
  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000449BD8) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__short_fscanf_postdec_65_good()
{
  goodG2B_364();
  return goodB2G_336();
}

//----- (0000000000449BF2) ----------------------------------------------------
int __fastcall badSink_58(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000449C13) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_rand_postdec_44_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))badSink_58)(v2);
}

//----- (0000000000449C86) ----------------------------------------------------
int __fastcall goodG2BSink_58(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000449CA7) ----------------------------------------------------
int goodG2B_365()
{
  return goodG2BSink_58(-2);
}

//----- (0000000000449CD2) ----------------------------------------------------
int __fastcall goodB2GSink_44(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (0000000000449D08) ----------------------------------------------------
__int64 goodB2G_337()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))goodB2GSink_44)(v2);
}

//----- (0000000000449D7B) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_rand_postdec_44_good()
{
  goodG2B_365();
  return goodB2G_337();
}

//----- (0000000000449D95) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_65b_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000449DB6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_65b_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000449DD7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_65b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (0000000000449E0D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54c_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_fgets_postdec_54d_badSink(a1);
}

//----- (0000000000449E24) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54c_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_fgets_postdec_54d_goodG2BSink(a1);
}

//----- (0000000000449E3B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54c_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_fgets_postdec_54d_goodB2GSink(a1);
}

//----- (0000000000449E52) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_07_bad()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_14 == 5 )
    v1 = 2147483648;
  result = staticFive_14;
  if ( staticFive_14 == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB194: using guessed type int staticFive_14;

//----- (0000000000449E94) ----------------------------------------------------
int goodB2G1_213()
{
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_14 == 5 )
    v1 = 2147483648;
  if ( staticFive_14 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 - 1);
}
// 6AB194: using guessed type int staticFive_14;

//----- (0000000000449EF7) ----------------------------------------------------
int goodB2G2_213()
{
  int result; // eax
  unsigned int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_14 == 5 )
    v1 = 2147483648;
  result = staticFive_14;
  if ( staticFive_14 == 5 )
  {
    if ( v1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 - 1);
  }
  return result;
}
// 6AB194: using guessed type int staticFive_14;

//----- (0000000000449F4E) ----------------------------------------------------
int goodG2B1_185()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_14 == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = staticFive_14;
  if ( staticFive_14 == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB194: using guessed type int staticFive_14;

//----- (0000000000449F9C) ----------------------------------------------------
int goodG2B2_185()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_14 == 5 )
    v1 = -2;
  result = staticFive_14;
  if ( staticFive_14 == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB194: using guessed type int staticFive_14;

//----- (0000000000449FDE) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_07_good()
{
  goodB2G1_213();
  goodB2G2_213();
  goodG2B1_185();
  return goodG2B2_185();
}

//----- (000000000044A00C) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_66_bad()
{
  int v0; // eax
  char v2; // [rsp+0h] [rbp-10h]
  char v3; // [rsp+2h] [rbp-Eh]
  char v4; // [rsp+Fh] [rbp-1h]

  v4 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v4 = v0;
  v3 = v0;
  return CWE191_Integer_Underflow__char_rand_postdec_66b_badSink((__int64)&v2);
}

//----- (000000000044A05E) ----------------------------------------------------
int goodG2B_366()
{
  char v1; // [rsp+0h] [rbp-10h]
  char v2; // [rsp+2h] [rbp-Eh]
  char v3; // [rsp+Fh] [rbp-1h]

  v3 = -2;
  v2 = -2;
  return CWE191_Integer_Underflow__char_rand_postdec_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000044A083) ----------------------------------------------------
int goodB2G_338()
{
  int v0; // eax
  char v2; // [rsp+0h] [rbp-10h]
  char v3; // [rsp+2h] [rbp-Eh]
  char v4; // [rsp+Fh] [rbp-1h]

  v4 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v4 = v0;
  v3 = v0;
  return CWE191_Integer_Underflow__char_rand_postdec_66b_goodB2GSink((__int64)&v2);
}

//----- (000000000044A0D5) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_66_good()
{
  goodG2B_366();
  return goodB2G_338();
}

//----- (000000000044A0EF) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_53c_badSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_rand_postdec_53d_badSink(a1);
}

//----- (000000000044A10A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_53c_goodG2BSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_rand_postdec_53d_goodG2BSink(a1);
}

//----- (000000000044A125) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_53c_goodB2GSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_rand_postdec_53d_goodB2GSink(a1);
}

//----- (000000000044A140) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) - 1);
}

//----- (000000000044A16C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) - 1);
}

//----- (000000000044A198) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (000000000044A1D9) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_22_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE191_Integer_Underflow__int64_t_rand_postdec_22_badGlobal = 1;
  return CWE191_Integer_Underflow__int64_t_rand_postdec_22_badSink(v4);
}
// 6AB46C: using guessed type int CWE191_Integer_Underflow__int64_t_rand_postdec_22_badGlobal;

//----- (000000000044A2A0) ----------------------------------------------------
int goodB2G1_214()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodB2G1Global = 0;
  return CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodB2G1Sink(v4);
}
// 6AB470: using guessed type int CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodB2G1Global;

//----- (000000000044A367) ----------------------------------------------------
int goodB2G2_214()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodB2G2Global = 1;
  return CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodB2G2Sink(v4);
}
// 6AB474: using guessed type int CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodB2G2Global;

//----- (000000000044A42E) ----------------------------------------------------
int goodG2B_367()
{
  CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodG2BGlobal = 1;
  return CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodG2BSink(-2LL);
}
// 6AB478: using guessed type int CWE191_Integer_Underflow__int64_t_rand_postdec_22_goodG2BGlobal;

//----- (000000000044A45E) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_22_good()
{
  goodB2G1_214();
  goodB2G2_214();
  return goodG2B_367();
}

//----- (000000000044A482) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_54_bad()
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_54b_badSink(0);
}

//----- (000000000044A4A4) ----------------------------------------------------
int goodG2B_368()
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_54b_goodG2BSink(-2);
}

//----- (000000000044A4C6) ----------------------------------------------------
int goodB2G_339()
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_54b_goodB2GSink(0);
}

//----- (000000000044A4E8) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_54_good()
{
  goodG2B_368();
  return goodB2G_339();
}

//----- (000000000044A502) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_11_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A565) ----------------------------------------------------
int goodB2G1_215()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 )
    return printUnsignedLine(v1 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A5E7) ----------------------------------------------------
int goodB2G2_215()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 )
      result = printUnsignedLine(v1 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A65D) ----------------------------------------------------
int goodG2B1_186()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 - 1);
  return result;
}

//----- (000000000044A6B1) ----------------------------------------------------
int goodG2B2_186()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printUnsignedLine(v1 - 1);
  return result;
}

//----- (000000000044A6F9) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_11_good()
{
  goodB2G1_215();
  goodB2G2_215();
  goodG2B1_186();
  return goodG2B2_186();
}

//----- (000000000044A727) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_64b_badSink(_QWORD *a1)
{
  return printLongLongLine(*a1 - 1LL);
}

//----- (000000000044A761) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_64b_goodG2BSink(_QWORD *a1)
{
  return printLongLongLine(*a1 - 1LL);
}

//----- (000000000044A79B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_64b_goodB2GSink(_QWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(*a1 - 1LL);
  return result;
}

//----- (000000000044A7F1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_63b_badSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 - 1);
}

//----- (000000000044A81C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_63b_goodG2BSink(_DWORD *a1)
{
  return printUnsignedLine(*a1 - 1);
}

//----- (000000000044A847) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 )
    result = printUnsignedLine(*a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000044A884) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_18_bad()
{
  return printLongLongLine(0x7FFFFFFFFFFFFFFFLL);
}

//----- (000000000044A8BF) ----------------------------------------------------
int goodB2G_340()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000044A916) ----------------------------------------------------
int goodG2B_369()
{
  return printLongLongLine(-3LL);
}

//----- (000000000044A94B) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_18_good()
{
  goodB2G_340();
  return goodG2B_369();
}

//----- (000000000044A965) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_listen_socket_postdec_65_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = CWE191_Integer_Underflow__int_listen_socket_postdec_65b_badSink;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 44A965: using guessed type char buf[16];

//----- (000000000044AA9C) ----------------------------------------------------
int goodG2B_370()
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_65b_goodG2BSink(-2);
}

//----- (000000000044AAC7) ----------------------------------------------------
__int64 goodB2G_341()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = CWE191_Integer_Underflow__int_listen_socket_postdec_65b_goodB2GSink;
  v9 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 44AAC7: using guessed type char buf[16];

//----- (000000000044ABFE) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int_listen_socket_postdec_65_good()
{
  goodG2B_370();
  return goodB2G_341();
}

//----- (000000000044AC18) ----------------------------------------------------
__int64 staticReturnsTrue_13()
{
  return 1LL;
}

//----- (000000000044AC23) ----------------------------------------------------
__int64 staticReturnsFalse_13()
{
  return 0LL;
}

//----- (000000000044AC2E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_08_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_13() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_13();
  if ( result )
    result = printIntLine(v4 - 1);
  return result;
}

//----- (000000000044ACBC) ----------------------------------------------------
int goodB2G1_216()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_13() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)staticReturnsFalse_13() )
    return printLine("Benign, fixed string");
  if ( v4 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 - 1);
}

//----- (000000000044AD6B) ----------------------------------------------------
int goodB2G2_216()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_13() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_13();
  if ( result )
  {
    if ( v4 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 - 1);
  }
  return result;
}

//----- (000000000044AE0E) ----------------------------------------------------
int goodG2B1_187()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsFalse_13() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticReturnsTrue_13();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (000000000044AE62) ----------------------------------------------------
int goodG2B2_187()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( (unsigned int)staticReturnsTrue_13() )
    v1 = -2;
  result = staticReturnsTrue_13();
  if ( result )
    result = printIntLine(v1 - 1);
  return result;
}

//----- (000000000044AEAA) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_08_good()
{
  goodB2G1_216();
  goodB2G2_216();
  goodG2B1_187();
  return goodG2B2_187();
}

//----- (000000000044AED8) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54c_badSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_54d_badSink(a1);
}

//----- (000000000044AEF2) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54c_goodG2BSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_54d_goodG2BSink(a1);
}

//----- (000000000044AF0C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54c_goodB2GSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_54d_goodB2GSink(a1);
}

//----- (000000000044AF26) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_10_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000044AF81) ----------------------------------------------------
int goodB2G1_217()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000044AFFE) ----------------------------------------------------
int goodB2G2_217()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000044B06F) ----------------------------------------------------
int goodG2B1_188()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000044B0BB) ----------------------------------------------------
int goodG2B2_188()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalTrue )
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000044B0FB) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_10_good()
{
  goodB2G1_217();
  goodB2G2_217();
  goodG2B1_188();
  return goodG2B2_188();
}

//----- (000000000044B129) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_66_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE191_Integer_Underflow__int_connect_socket_postdec_66b_badSink((__int64)&v5);
}
// 44B129: using guessed type char buf[16];

//----- (000000000044B219) ----------------------------------------------------
int goodG2B_371()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -2;
  v2 = -2;
  return CWE191_Integer_Underflow__int_connect_socket_postdec_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000044B243) ----------------------------------------------------
int goodB2G_342()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE191_Integer_Underflow__int_connect_socket_postdec_66b_goodB2GSink((__int64)&v5);
}
// 44B243: using guessed type char buf[16];

//----- (000000000044B333) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_66_good()
{
  goodG2B_371();
  return goodB2G_342();
}

//----- (000000000044B34D) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_51_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE191_Integer_Underflow__int_fscanf_postdec_51b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044B385) ----------------------------------------------------
int goodG2B_372()
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_51b_goodG2BSink(-2);
}

//----- (000000000044B3A7) ----------------------------------------------------
int goodB2G_343()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE191_Integer_Underflow__int_fscanf_postdec_51b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044B3DF) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_51_good()
{
  goodG2B_372();
  return goodB2G_343();
}

//----- (000000000044B3F9) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_13_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v10 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044B4DD) ----------------------------------------------------
int goodB2G1_218()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v10 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 - 1);
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044B5E9) ----------------------------------------------------
int goodB2G2_218()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v10 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 - 1);
  }
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044B6E9) ----------------------------------------------------
int goodG2B1_189()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2LL;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044B73E) ----------------------------------------------------
int goodG2B2_189()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2LL;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044B787) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_13_good()
{
  goodB2G1_218();
  goodB2G2_218();
  goodG2B1_189();
  return goodG2B2_189();
}

//----- (000000000044B7B5) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_68b_badSink()
{
  return printIntLine((__int16)(CWE191_Integer_Underflow__short_rand_postdec_68_badData - 1));
}
// 6AB5AE: using guessed type __int16 CWE191_Integer_Underflow__short_rand_postdec_68_badData;

//----- (000000000044B7E8) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_68b_goodG2BSink()
{
  return printIntLine((__int16)(CWE191_Integer_Underflow__short_rand_postdec_68_goodG2BData - 1));
}
// 6AB5B0: using guessed type __int16 CWE191_Integer_Underflow__short_rand_postdec_68_goodG2BData;

//----- (000000000044B81B) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__short_rand_postdec_68_goodB2GData == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(CWE191_Integer_Underflow__short_rand_postdec_68_goodB2GData - 1));
  return result;
}
// 6AB5AC: using guessed type __int16 CWE191_Integer_Underflow__short_rand_postdec_68_goodB2GData;

//----- (000000000044B862) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_53c_badSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_53d_badSink(a1);
}

//----- (000000000044B879) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_53c_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_53d_goodG2BSink(a1);
}

//----- (000000000044B890) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_53c_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_53d_goodB2GSink(a1);
}

//----- (000000000044B8A7) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_63b_badSink(&v1);
}

//----- (000000000044B8CB) ----------------------------------------------------
int goodG2B_373()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -2;
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_63b_goodG2BSink(&v1);
}

//----- (000000000044B8EF) ----------------------------------------------------
int goodB2G_344()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_63b_goodB2GSink(&v1);
}

//----- (000000000044B913) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_63_good()
{
  goodG2B_373();
  return goodB2G_344();
}

//----- (000000000044B92D) ----------------------------------------------------
__int64 __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044B95A) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_61b_goodG2BSource()
{
  return 4294967294LL;
}

//----- (000000000044B96D) ----------------------------------------------------
__int64 __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%u", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044B99A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54b_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_fgets_postdec_54c_badSink(a1);
}

//----- (000000000044B9B1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_fgets_postdec_54c_goodG2BSink(a1);
}

//----- (000000000044B9C8) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_54b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_fgets_postdec_54c_goodB2GSink(a1);
}

//----- (000000000044B9DF) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_53b_badSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_rand_postdec_53c_badSink(a1);
}

//----- (000000000044B9FA) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_53b_goodG2BSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_rand_postdec_53c_goodG2BSink(a1);
}

//----- (000000000044BA15) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_53b_goodB2GSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_rand_postdec_53c_goodB2GSink(a1);
}

//----- (000000000044BA30) ----------------------------------------------------
__int64 staticReturnsTrue_14()
{
  return 1LL;
}

//----- (000000000044BA3B) ----------------------------------------------------
__int64 staticReturnsFalse_14()
{
  return 0LL;
}

//----- (000000000044BA46) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_08_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_14() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticReturnsTrue_14();
  if ( result )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044BAB1) ----------------------------------------------------
int goodB2G1_219()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_14() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  if ( (unsigned int)staticReturnsFalse_14() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044BB47) ----------------------------------------------------
int goodB2G2_219()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_14() )
    __isoc99_fscanf(stdin, "%ld", &v1);
  result = staticReturnsTrue_14();
  if ( result )
  {
    if ( v1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044BBD1) ----------------------------------------------------
int goodG2B1_190()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsFalse_14() )
    printLine("Benign, fixed string");
  else
    v1 = -2LL;
  result = staticReturnsTrue_14();
  if ( result )
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (000000000044BC2C) ----------------------------------------------------
int goodG2B2_190()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_14() )
    v1 = -2LL;
  result = staticReturnsTrue_14();
  if ( result )
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (000000000044BC7B) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_08_good()
{
  goodB2G1_219();
  goodB2G2_219();
  goodG2B1_190();
  return goodG2B2_190();
}

//----- (000000000044BCA9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_52c_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000044BCD7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_52c_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000044BD05) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_52c_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (000000000044BD47) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_03_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 - 1);
}

//----- (000000000044BE11) ----------------------------------------------------
int goodB2G1_220()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 - 1);
  return result;
}

//----- (000000000044BEF7) ----------------------------------------------------
int goodB2G2_220()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 - 1);
  return result;
}

//----- (000000000044BFDD) ----------------------------------------------------
int goodG2B1_191()
{
  return printLongLongLine(-3LL);
}

//----- (000000000044C010) ----------------------------------------------------
int goodG2B2_191()
{
  return printLongLongLine(-3LL);
}

//----- (000000000044C043) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_03_good()
{
  goodB2G1_220();
  goodB2G2_220();
  goodG2B1_191();
  return goodG2B2_191();
}

//----- (000000000044C071) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_67_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE191_Integer_Underflow__char_fscanf_postdec_67b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044C0AE) ----------------------------------------------------
int goodG2B_374()
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_67b_goodG2BSink(254);
}

//----- (000000000044C0D2) ----------------------------------------------------
int goodB2G_345()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE191_Integer_Underflow__char_fscanf_postdec_67b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044C10F) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_67_good()
{
  goodG2B_374();
  return goodB2G_345();
}

//----- (000000000044C129) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_53d_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000044C14A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_53d_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000044C16B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000044C1A1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54d_badSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_min_postdec_54e_badSink(a1);
}

//----- (000000000044C1BC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54d_goodG2BSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_min_postdec_54e_goodG2BSink(a1);
}

//----- (000000000044C1D7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_54d_goodB2GSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_min_postdec_54e_goodB2GSink(a1);
}

//----- (000000000044C1F2) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_61_bad()
{
  int v0; // eax

  v0 = CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_61b_badSource(0);
  return printUnsignedLine(v0 - 1);
}

//----- (000000000044C224) ----------------------------------------------------
int goodG2B_375()
{
  int v0; // eax

  v0 = CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_61b_goodG2BSource();
  return printUnsignedLine(v0 - 1);
}

//----- (000000000044C256) ----------------------------------------------------
int goodB2G_346()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_61b_goodB2GSource(0);
  if ( v1 )
    result = printUnsignedLine(v1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000044C29A) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_61_good()
{
  goodG2B_375();
  return goodB2G_346();
}

//----- (000000000044C2B4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54c_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_54d_badSink(a1);
}

//----- (000000000044C2CB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54c_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_54d_goodG2BSink(a1);
}

//----- (000000000044C2E2) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_54c_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_54d_goodB2GSink(a1);
}

//----- (000000000044C2F9) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_53_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE191_Integer_Underflow__short_rand_postdec_53b_badSink(v1);
}

//----- (000000000044C35A) ----------------------------------------------------
int goodG2B_376()
{
  return CWE191_Integer_Underflow__short_rand_postdec_53b_goodG2BSink(-2);
}

//----- (000000000044C37B) ----------------------------------------------------
int goodB2G_347()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE191_Integer_Underflow__short_rand_postdec_53b_goodB2GSink(v1);
}

//----- (000000000044C3DC) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_53_good()
{
  goodG2B_376();
  return goodB2G_347();
}

//----- (000000000044C3F6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54c_badSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_54d_badSink(a1);
}

//----- (000000000044C410) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54c_goodG2BSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_54d_goodG2BSink(a1);
}

//----- (000000000044C42A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_54c_goodB2GSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_54d_goodB2GSink(a1);
}

//----- (000000000044C444) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54b_badSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_54c_badSink(a1);
}

//----- (000000000044C45E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54b_goodG2BSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_54c_goodG2BSink(a1);
}

//----- (000000000044C478) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_54b_goodB2GSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_54c_goodB2GSink(a1);
}

//----- (000000000044C492) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_12_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+18h] [rbp-18h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  else
  {
    v10 = -2LL;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printLongLongLine(v10 - 1);
  if ( v10 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 - 1);
}

//----- (000000000044C5BD) ----------------------------------------------------
int goodB2G_348()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // rbx
  __int64 v10; // rbx
  __int64 v11; // rbx
  __int64 v12; // rbx
  __int64 v13; // rax
  __int64 v14; // rbx
  __int64 v15; // rbx
  __int64 v16; // rbx
  __int64 v17; // rbx
  int result; // eax
  __int64 v19; // [rsp+18h] [rbp-18h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v19 = v4;
  }
  else
  {
    if ( rand() & 1 )
    {
      v9 = (__int64)rand() << 60;
      v10 = ((__int64)rand() << 45) ^ v9;
      v11 = ((__int64)rand() << 30) ^ v10;
      v12 = ((__int64)rand() << 15) ^ v11;
      v13 = v12 ^ rand();
    }
    else
    {
      v14 = (__int64)rand() << 60;
      v15 = ((__int64)rand() << 45) ^ v14;
      v16 = ((__int64)rand() << 30) ^ v15;
      v17 = ((__int64)rand() << 15) ^ v16;
      v13 = ~(v17 ^ rand());
    }
    v19 = v13;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v19 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v19 - 1);
  }
  else if ( v19 == 0x8000000000000000LL )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printLongLongLine(v19 - 1);
  }
  return result;
}

//----- (000000000044C798) ----------------------------------------------------
int goodG2B_377()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printLongLongLine(-3LL);
}

//----- (000000000044C80C) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_12_good()
{
  goodB2G_348();
  return goodG2B_377();
}

//----- (000000000044C826) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_64_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x8000000000000000LL;
  return CWE191_Integer_Underflow__int64_t_min_postdec_64b_badSink(&v1);
}

//----- (000000000044C852) ----------------------------------------------------
int goodG2B_378()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = -2LL;
  return CWE191_Integer_Underflow__int64_t_min_postdec_64b_goodG2BSink(&v1);
}

//----- (000000000044C878) ----------------------------------------------------
int goodB2G_349()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x8000000000000000LL;
  return CWE191_Integer_Underflow__int64_t_min_postdec_64b_goodB2GSink(&v1);
}

//----- (000000000044C8A4) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_64_good()
{
  goodG2B_378();
  return goodB2G_349();
}

//----- (000000000044C8BE) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_07_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticFive_15 == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticFive_15;
  if ( staticFive_15 == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB198: using guessed type int staticFive_15;

//----- (000000000044C91B) ----------------------------------------------------
int goodB2G1_221()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticFive_15 == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  if ( staticFive_15 != 5 )
    return printLine("Benign, fixed string");
  if ( v1 )
    return printUnsignedLine(v1 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB198: using guessed type int staticFive_15;

//----- (000000000044C997) ----------------------------------------------------
int goodB2G2_221()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( staticFive_15 == 5 )
    __isoc99_fscanf(stdin, "%u", &v1);
  result = staticFive_15;
  if ( staticFive_15 == 5 )
  {
    if ( v1 )
      result = printUnsignedLine(v1 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB198: using guessed type int staticFive_15;

//----- (000000000044CA07) ----------------------------------------------------
int goodG2B1_192()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_15 == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = staticFive_15;
  if ( staticFive_15 == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB198: using guessed type int staticFive_15;

//----- (000000000044CA55) ----------------------------------------------------
int goodG2B2_192()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_15 == 5 )
    v1 = -2;
  result = staticFive_15;
  if ( staticFive_15 == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB198: using guessed type int staticFive_15;

//----- (000000000044CA97) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_07_good()
{
  goodB2G1_221();
  goodB2G2_221();
  goodG2B1_192();
  return goodG2B2_192();
}

//----- (000000000044CAC5) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_05_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( staticTrue_12 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = staticTrue_12;
  if ( staticTrue_12 )
    result = printIntLine(v8 - 1);
  return result;
}
// 6AB19C: using guessed type int staticTrue_12;
// 44CAC5: using guessed type char buf[16];

//----- (000000000044CC15) ----------------------------------------------------
int goodB2G1_222()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( staticTrue_12 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  if ( staticFalse_12 )
    return printLine("Benign, fixed string");
  if ( v8 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v8 - 1);
}
// 6AB19C: using guessed type int staticTrue_12;
// 6AB47C: using guessed type int staticFalse_12;
// 44CC15: using guessed type char buf[16];

//----- (000000000044CD86) ----------------------------------------------------
int goodB2G2_222()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = 0;
  if ( staticTrue_12 )
  {
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v5 = recv(v7, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  result = staticTrue_12;
  if ( staticTrue_12 )
  {
    if ( v8 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v8 - 1);
  }
  return result;
}
// 6AB19C: using guessed type int staticTrue_12;
// 44CD86: using guessed type char buf[16];

//----- (000000000044CEEB) ----------------------------------------------------
int goodG2B1_193()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_12 )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticTrue_12;
  if ( staticTrue_12 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB19C: using guessed type int staticTrue_12;
// 6AB47C: using guessed type int staticFalse_12;

//----- (000000000044CF37) ----------------------------------------------------
int goodG2B2_193()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_12 )
    v1 = -2;
  result = staticTrue_12;
  if ( staticTrue_12 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB19C: using guessed type int staticTrue_12;

//----- (000000000044CF77) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_05_good()
{
  goodB2G1_222();
  goodB2G2_222();
  goodG2B1_193();
  return goodG2B2_193();
}

//----- (000000000044CFA5) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_61b_badSource()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (000000000044D056) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_61b_goodG2BSource()
{
  return -2LL;
}

//----- (000000000044D06C) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_61b_goodB2GSource()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 result; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    result = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    result = ~(v8 ^ rand());
  }
  return result;
}

//----- (000000000044D11D) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_13_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v6 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044D1A7) ----------------------------------------------------
int goodB2G1_223()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v6 )
    return printUnsignedLine(v6 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044D24F) ----------------------------------------------------
int goodB2G2_223()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v6 )
      result = printUnsignedLine(v6 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044D2EB) ----------------------------------------------------
int goodG2B1_194()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044D339) ----------------------------------------------------
int goodG2B2_194()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044D37B) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_13_good()
{
  goodB2G1_223();
  goodB2G2_223();
  goodG2B1_194();
  return goodG2B2_194();
}

//----- (000000000044D3A9) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__unsigned_int_min_postdec_61b_badSource()
{
  return 0LL;
}

//----- (000000000044D3BC) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__unsigned_int_min_postdec_61b_goodG2BSource()
{
  return 4294967294LL;
}

//----- (000000000044D3CF) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__unsigned_int_min_postdec_61b_goodB2GSource()
{
  return 0LL;
}

//----- (000000000044D3E2) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_54_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_54b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044D41D) ----------------------------------------------------
int goodG2B_379()
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_54b_goodG2BSink(-2LL);
}

//----- (000000000044D443) ----------------------------------------------------
int goodB2G_350()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_54b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044D47E) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_54_good()
{
  goodG2B_379();
  return goodB2G_350();
}

//----- (000000000044D498) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_64b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 - 1));
}

//----- (000000000044D4D7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_64b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 - 1));
}

//----- (000000000044D516) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_64b_goodB2GSink(_WORD *a1)
{
  int result; // eax

  if ( *a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(*a1 - 1));
  return result;
}

//----- (000000000044D569) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_52b_badSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_rand_postdec_52c_badSink(a1);
}

//----- (000000000044D584) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_52b_goodG2BSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_rand_postdec_52c_goodG2BSink(a1);
}

//----- (000000000044D59F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_52b_goodB2GSink(__int16 a1)
{
  return CWE191_Integer_Underflow__short_rand_postdec_52c_goodB2GSink(a1);
}

//----- (000000000044D5BA) ----------------------------------------------------
__int64 staticReturnsTrue_15()
{
  return 1LL;
}

//----- (000000000044D5C5) ----------------------------------------------------
__int64 staticReturnsFalse_15()
{
  return 0LL;
}

//----- (000000000044D5D0) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_08_bad()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_15() )
    v1 = 0x8000000000000000LL;
  result = staticReturnsTrue_15();
  if ( result )
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (000000000044D625) ----------------------------------------------------
int goodB2G1_224()
{
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_15() )
    v1 = 0x8000000000000000LL;
  if ( (unsigned int)staticReturnsFalse_15() )
    return printLine("Benign, fixed string");
  if ( v1 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v1 - 1);
}

//----- (000000000044D6A2) ----------------------------------------------------
int goodB2G2_224()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_15() )
    v1 = 0x8000000000000000LL;
  result = staticReturnsTrue_15();
  if ( result )
  {
    if ( v1 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v1 - 1);
  }
  return result;
}

//----- (000000000044D713) ----------------------------------------------------
int goodG2B1_195()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsFalse_15() )
    printLine("Benign, fixed string");
  else
    v1 = -2LL;
  result = staticReturnsTrue_15();
  if ( result )
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (000000000044D76E) ----------------------------------------------------
int goodG2B2_195()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( (unsigned int)staticReturnsTrue_15() )
    v1 = -2LL;
  result = staticReturnsTrue_15();
  if ( result )
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (000000000044D7BD) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_08_good()
{
  goodB2G1_224();
  goodB2G2_224();
  goodG2B1_195();
  return goodG2B2_195();
}

//----- (000000000044D7EB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54d_badSink(char a1)
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_54e_badSink(a1);
}

//----- (000000000044D805) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54d_goodG2BSink(char a1)
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_54e_goodG2BSink(a1);
}

//----- (000000000044D81F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54d_goodB2GSink(char a1)
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_54e_goodB2GSink(a1);
}

//----- (000000000044D839) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_67_bad()
{
  return CWE191_Integer_Underflow__char_min_postdec_67b_badSink(128);
}

//----- (000000000044D85D) ----------------------------------------------------
int goodG2B_380()
{
  return CWE191_Integer_Underflow__char_min_postdec_67b_goodG2BSink(254);
}

//----- (000000000044D881) ----------------------------------------------------
int goodB2G_351()
{
  return CWE191_Integer_Underflow__char_min_postdec_67b_goodB2GSink(128);
}

//----- (000000000044D8A5) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_67_good()
{
  goodG2B_380();
  return goodB2G_351();
}

//----- (000000000044D8BF) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_10_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v10 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000044D9A1) ----------------------------------------------------
int goodB2G1_225()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v10 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 - 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000044DAAB) ----------------------------------------------------
int goodB2G2_225()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v10 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 - 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000044DBA9) ----------------------------------------------------
int goodG2B1_196()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = -2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (000000000044DBFC) ----------------------------------------------------
int goodG2B2_196()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( globalTrue )
    v1 = -2LL;
  result = globalTrue;
  if ( globalTrue )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (000000000044DC43) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_10_good()
{
  goodB2G1_225();
  goodB2G2_225();
  goodG2B1_196();
  return goodG2B2_196();
}

//----- (000000000044DC71) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_06_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, &unk_47AE44, &v1);
  return printHexCharLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044DCCC) ----------------------------------------------------
int goodB2G1_226()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, &unk_47AE44, &v1);
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044DD47) ----------------------------------------------------
int goodB2G2_226()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, &unk_47AE44, &v1);
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044DDB6) ----------------------------------------------------
int goodG2B1_197()
{
  return printHexCharLine(253);
}

//----- (000000000044DE04) ----------------------------------------------------
int goodG2B2_197()
{
  return printHexCharLine(253);
}

//----- (000000000044DE46) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_06_good()
{
  goodB2G1_226();
  goodB2G2_226();
  goodG2B1_197();
  return goodG2B2_197();
}

//----- (000000000044DE74) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_14_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v2 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000044DEE5) ----------------------------------------------------
int goodB2G1_227()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v2 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 - 1);
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000044DF74) ----------------------------------------------------
int goodB2G2_227()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( globalFive == 5 )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v2 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 - 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000044DFF7) ----------------------------------------------------
int goodG2B1_198()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000044E047) ----------------------------------------------------
int goodG2B2_198()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = -2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000044E08B) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_14_good()
{
  goodB2G1_227();
  goodB2G2_227();
  goodG2B1_198();
  return goodG2B2_198();
}

//----- (000000000044E0B9) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_32_bad()
{
  int v0; // eax
  char v2; // [rsp+Ch] [rbp-14h]
  char v3; // [rsp+Fh] [rbp-11h]
  char *v4; // [rsp+10h] [rbp-10h]
  char *v5; // [rsp+18h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = 32;
  v3 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v3 = v0;
  *v5 = v0;
  return printHexCharLine(*v4 - 1);
}

//----- (000000000044E142) ----------------------------------------------------
int goodG2B_381()
{
  char v1; // [rsp+Ch] [rbp-14h]
  char v2; // [rsp+Dh] [rbp-13h]
  char v3; // [rsp+Eh] [rbp-12h]
  char v4; // [rsp+Fh] [rbp-11h]
  char *v5; // [rsp+10h] [rbp-10h]
  char *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -2;
  v1 = -2;
  v3 = -3;
  v2 = -3;
  return printHexCharLine(-3);
}

//----- (000000000044E19E) ----------------------------------------------------
int goodB2G_352()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Ch] [rbp-14h]
  char v3; // [rsp+Eh] [rbp-12h]
  char v4; // [rsp+Fh] [rbp-11h]
  char *v5; // [rsp+10h] [rbp-10h]
  char *v6; // [rsp+18h] [rbp-8h]

  v6 = &v2;
  v5 = &v2;
  v2 = 32;
  v4 = 32;
  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  v4 = v0;
  *v6 = v0;
  v3 = *v5;
  if ( v3 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v3 - 1);
  return result;
}

//----- (000000000044E239) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_32_good()
{
  goodG2B_381();
  return goodB2G_352();
}

//----- (000000000044E253) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_61_bad()
{
  int v0; // eax

  v0 = CWE191_Integer_Underflow__unsigned_int_min_postdec_61b_badSource();
  return printUnsignedLine(v0 - 1);
}

//----- (000000000044E285) ----------------------------------------------------
int goodG2B_382()
{
  int v0; // eax

  v0 = CWE191_Integer_Underflow__unsigned_int_min_postdec_61b_goodG2BSource();
  return printUnsignedLine(v0 - 1);
}

//----- (000000000044E2B7) ----------------------------------------------------
int goodB2G_353()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = CWE191_Integer_Underflow__unsigned_int_min_postdec_61b_goodB2GSource();
  if ( v1 )
    result = printUnsignedLine(v1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000044E2FB) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_61_good()
{
  goodG2B_382();
  return goodB2G_353();
}

//----- (000000000044E315) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_06_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_47AF5C, &v1);
  return printIntLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044E370) ----------------------------------------------------
int goodB2G1_228()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_47AF5C, &v1);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044E3ED) ----------------------------------------------------
int goodB2G2_228()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_47AF5C, &v1);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044E45E) ----------------------------------------------------
int goodG2B1_199()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000044E4AA) ----------------------------------------------------
int goodG2B2_199()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000044E4EA) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_06_good()
{
  goodB2G1_228();
  goodB2G2_228();
  goodG2B1_199();
  return goodG2B2_199();
}

//----- (000000000044E518) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_52b_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_52c_badSink(a1);
}

//----- (000000000044E52F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_52b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_52c_goodG2BSink(a1);
}

//----- (000000000044E546) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_52b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_52c_goodB2GSink(a1);
}

//----- (000000000044E55D) ----------------------------------------------------
int __fastcall badSink_59(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (000000000044E57E) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__unsigned_int_rand_postdec_44_bad()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))badSink_59)(v2);
}

//----- (000000000044E5F1) ----------------------------------------------------
int __fastcall goodG2BSink_59(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (000000000044E612) ----------------------------------------------------
int goodG2B_383()
{
  return goodG2BSink_59(-2);
}

//----- (000000000044E63D) ----------------------------------------------------
int __fastcall goodB2GSink_45(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (000000000044E670) ----------------------------------------------------
__int64 goodB2G_354()
{
  int v0; // ebx
  int v1; // ebx
  unsigned int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))goodB2GSink_45)(v2);
}

//----- (000000000044E6E3) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__unsigned_int_rand_postdec_44_good()
{
  goodG2B_383();
  return goodB2G_354();
}

//----- (000000000044E6FD) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_01_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return printLongLongLine(v4 - 1);
}

//----- (000000000044E7C7) ----------------------------------------------------
int goodG2B_384()
{
  return printLongLongLine(-3LL);
}

//----- (000000000044E7FA) ----------------------------------------------------
int goodB2G_355()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  if ( v4 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v4 - 1);
  return result;
}

//----- (000000000044E8E0) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_01_good()
{
  goodG2B_384();
  return goodB2G_355();
}

//----- (000000000044E8FA) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_52_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE191_Integer_Underflow__short_rand_postdec_52b_badSink(v1);
}

//----- (000000000044E95B) ----------------------------------------------------
int goodG2B_385()
{
  return CWE191_Integer_Underflow__short_rand_postdec_52b_goodG2BSink(-2);
}

//----- (000000000044E97C) ----------------------------------------------------
int goodB2G_356()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE191_Integer_Underflow__short_rand_postdec_52b_goodB2GSink(v1);
}

//----- (000000000044E9DD) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_52_good()
{
  goodG2B_385();
  return goodB2G_356();
}

//----- (000000000044E9F7) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_34_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  int v8; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = 0;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v8 = recv(v10, buf, 0xDuLL, 0);
        if ( v8 != -1 )
        {
          if ( v8 )
          {
            buf[v8] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v5 = v11;
  v7 = v11 - 1;
  v6 = v11 - 1;
  return printIntLine(v11 - 1);
}
// 44E9F7: using guessed type char buf[16];

//----- (000000000044EB3B) ----------------------------------------------------
int goodG2B_386()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000044EB73) ----------------------------------------------------
int goodB2G_357()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v9; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v5 = v10;
  v6 = v10;
  if ( v10 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v6 - 1);
  return result;
}
// 44EB73: using guessed type char buf[16];

//----- (000000000044ECCC) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_34_good()
{
  goodG2B_386();
  return goodB2G_357();
}

//----- (000000000044ECE6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_51b_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000044ED14) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_51b_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (000000000044ED42) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_51b_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (000000000044ED84) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_07_bad()
{
  int result; // eax

  result = staticFive_16;
  if ( staticFive_16 == 5 )
    result = printUnsignedLine(0xFFFFFFFF);
  return result;
}
// 6AB1A0: using guessed type int staticFive_16;

//----- (000000000044EDC6) ----------------------------------------------------
int goodB2G1_229()
{
  int result; // eax

  if ( staticFive_16 == 5 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLine("Benign, fixed string");
  return result;
}
// 6AB1A0: using guessed type int staticFive_16;

//----- (000000000044EE26) ----------------------------------------------------
int goodB2G2_229()
{
  int result; // eax

  result = staticFive_16;
  if ( staticFive_16 == 5 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 6AB1A0: using guessed type int staticFive_16;

//----- (000000000044EE7A) ----------------------------------------------------
int goodG2B1_200()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_16 == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = staticFive_16;
  if ( staticFive_16 == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB1A0: using guessed type int staticFive_16;

//----- (000000000044EEC8) ----------------------------------------------------
int goodG2B2_200()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFive_16 == 5 )
    v1 = -2;
  result = staticFive_16;
  if ( staticFive_16 == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB1A0: using guessed type int staticFive_16;

//----- (000000000044EF0A) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_07_good()
{
  goodB2G1_229();
  goodB2G2_229();
  goodG2B1_200();
  return goodG2B2_200();
}

//----- (000000000044EF38) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_53c_badSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_53d_badSink(a1);
}

//----- (000000000044EF52) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_53c_goodG2BSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_53d_goodG2BSink(a1);
}

//----- (000000000044EF6C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_53c_goodB2GSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_53d_goodB2GSink(a1);
}

//----- (000000000044EF86) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_16_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 - 1));
}

//----- (000000000044EFFC) ----------------------------------------------------
int goodB2G_358()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (000000000044F086) ----------------------------------------------------
int goodG2B_387()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000044F0BC) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_16_good()
{
  goodB2G_358();
  return goodG2B_387();
}

//----- (000000000044F0D6) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_68b_badSink()
{
  return printIntLine(CWE191_Integer_Underflow__int_fgets_postdec_68_badData - 1);
}
// 6AB5C0: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_68_badData;

//----- (000000000044F0FD) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_68b_goodG2BSink()
{
  return printIntLine(CWE191_Integer_Underflow__int_fgets_postdec_68_goodG2BData - 1);
}
// 6AB5C8: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_68_goodG2BData;

//----- (000000000044F124) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__int_fgets_postdec_68_goodB2GData == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE191_Integer_Underflow__int_fgets_postdec_68_goodB2GData - 1);
  return result;
}
// 6AB5C4: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_68_goodB2GData;

//----- (000000000044F160) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_15_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 - 1);
}

//----- (000000000044F1D6) ----------------------------------------------------
int goodB2G1_230()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (000000000044F261) ----------------------------------------------------
int goodB2G2_230()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (000000000044F2EC) ----------------------------------------------------
int goodG2B1_201()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000044F31A) ----------------------------------------------------
int goodG2B2_201()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000044F348) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_15_good()
{
  goodB2G1_230();
  goodB2G2_230();
  goodG2B1_201();
  return goodG2B2_201();
}

//----- (000000000044F376) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_04_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 - 1);
}

//----- (000000000044F3E3) ----------------------------------------------------
int goodB2G1_231()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 - 1);
  return result;
}

//----- (000000000044F46E) ----------------------------------------------------
int goodB2G2_231()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 - 1);
  return result;
}

//----- (000000000044F4ED) ----------------------------------------------------
int goodG2B1_202()
{
  return printHexCharLine(253);
}

//----- (000000000044F539) ----------------------------------------------------
int goodG2B2_202()
{
  return printHexCharLine(253);
}

//----- (000000000044F579) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_04_good()
{
  goodB2G1_231();
  goodB2G2_231();
  goodG2B1_202();
  return goodG2B2_202();
}

//----- (000000000044F5A7) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_31_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 - 1);
}

//----- (000000000044F610) ----------------------------------------------------
int goodG2B_388()
{
  return printHexCharLine(-3);
}

//----- (000000000044F64C) ----------------------------------------------------
int goodB2G_359()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 - 1);
  return result;
}

//----- (000000000044F6C7) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_31_good()
{
  goodG2B_388();
  return goodB2G_359();
}

//----- (000000000044F6E1) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_14_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v7 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;
// 44F6E1: using guessed type char buf[16];

//----- (000000000044F7ED) ----------------------------------------------------
int goodB2G1_232()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v7 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 - 1);
}
// 6AB1B8: using guessed type int globalFive;
// 44F7ED: using guessed type char buf[16];

//----- (000000000044F91A) ----------------------------------------------------
int goodB2G2_232()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v7 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 - 1);
  }
  return result;
}
// 6AB1B8: using guessed type int globalFive;
// 44F91A: using guessed type char buf[16];

//----- (000000000044FA3B) ----------------------------------------------------
int goodG2B1_203()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000044FA89) ----------------------------------------------------
int goodG2B2_203()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (000000000044FACB) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_14_good()
{
  goodB2G1_232();
  goodB2G2_232();
  goodG2B1_203();
  return goodG2B2_203();
}

//----- (000000000044FAF9) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_53c_badSink(char a1)
{
  return CWE191_Integer_Underflow__char_min_postdec_53d_badSink(a1);
}

//----- (000000000044FB13) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_53c_goodG2BSink(char a1)
{
  return CWE191_Integer_Underflow__char_min_postdec_53d_goodG2BSink(a1);
}

//----- (000000000044FB2D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_53c_goodB2GSink(char a1)
{
  return CWE191_Integer_Underflow__char_min_postdec_53d_goodB2GSink(a1);
}

//----- (000000000044FB47) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_18_bad()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return printHexCharLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044FB90) ----------------------------------------------------
int goodB2G_360()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  if ( v1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044FBED) ----------------------------------------------------
int goodG2B_389()
{
  return printHexCharLine(-3);
}

//----- (000000000044FC1D) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_18_good()
{
  goodB2G_360();
  return goodG2B_389();
}

//----- (000000000044FC37) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_32_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v8; // [rsp+38h] [rbp-18h]
  int *v9; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v9 = &v5;
  v8 = &v5;
  v5 = 0;
  v10 = 0;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v9 = v10;
  return printIntLine(*v8 - 1);
}
// 44FC37: using guessed type char buf[16];

//----- (000000000044FD54) ----------------------------------------------------
int goodG2B_390()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -2;
  v1 = -2;
  v3 = -3;
  v2 = -3;
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000044FDAB) ----------------------------------------------------
int goodB2G_361()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+24h] [rbp-2Ch]
  int v6; // [rsp+2Ch] [rbp-24h]
  int v7; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  int *v9; // [rsp+38h] [rbp-18h]
  int *v10; // [rsp+40h] [rbp-10h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v10 = &v5;
  v9 = &v5;
  v5 = 0;
  v11 = 0;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v11 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v10 = v11;
  v6 = *v9;
  if ( v6 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v6 - 1);
  return result;
}
// 44FDAB: using guessed type char buf[16];

//----- (000000000044FEDD) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_32_good()
{
  goodG2B_390();
  return goodB2G_361();
}

//----- (000000000044FEF7) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_09_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v10 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000044FFD9) ----------------------------------------------------
int goodB2G1_233()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v10 == 0x8000000000000000LL )
    return printLine("data value is too large to perform arithmetic safely.");
  return printLongLongLine(v10 - 1);
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004500E3) ----------------------------------------------------
int goodB2G2_233()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  int result; // eax
  __int64 v10; // [rsp+8h] [rbp-18h]

  v10 = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( rand() & 1 )
    {
      v0 = (__int64)rand() << 60;
      v1 = ((__int64)rand() << 45) ^ v0;
      v2 = ((__int64)rand() << 30) ^ v1;
      v3 = ((__int64)rand() << 15) ^ v2;
      v4 = v3 ^ rand();
    }
    else
    {
      v5 = (__int64)rand() << 60;
      v6 = ((__int64)rand() << 45) ^ v5;
      v7 = ((__int64)rand() << 30) ^ v6;
      v8 = ((__int64)rand() << 15) ^ v7;
      v4 = ~(v8 ^ rand());
    }
    v10 = v4;
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v10 == 0x8000000000000000LL )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printLongLongLine(v10 - 1);
  }
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004501E1) ----------------------------------------------------
int goodG2B1_204()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = -2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000450234) ----------------------------------------------------
int goodG2B2_204()
{
  int result; // eax
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  if ( GLOBAL_CONST_TRUE )
    v1 = -2LL;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printLongLongLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000045027B) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_09_good()
{
  goodB2G1_233();
  goodB2G2_233();
  goodG2B1_204();
  return goodG2B2_204();
}

//----- (00000000004502A9) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_54_bad()
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_54b_badSink(0x8000000000000000LL);
}

//----- (00000000004502D5) ----------------------------------------------------
int goodG2B_391()
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_54b_goodG2BSink(-2LL);
}

//----- (00000000004502FB) ----------------------------------------------------
int goodB2G_362()
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_54b_goodB2GSink(0x8000000000000000LL);
}

//----- (0000000000450327) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_54_good()
{
  goodG2B_391();
  return goodB2G_362();
}

//----- (0000000000450341) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_53b_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_fgets_postdec_53c_badSink(a1);
}

//----- (0000000000450358) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_53b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_fgets_postdec_53c_goodG2BSink(a1);
}

//----- (000000000045036F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_53b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_fgets_postdec_53c_goodB2GSink(a1);
}

//----- (0000000000450386) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_51_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE191_Integer_Underflow__short_rand_postdec_51b_badSink(v1);
}

//----- (00000000004503E7) ----------------------------------------------------
int goodG2B_392()
{
  return CWE191_Integer_Underflow__short_rand_postdec_51b_goodG2BSink(-2);
}

//----- (0000000000450408) ----------------------------------------------------
int goodB2G_363()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return CWE191_Integer_Underflow__short_rand_postdec_51b_goodB2GSink(v1);
}

//----- (0000000000450469) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_51_good()
{
  goodG2B_392();
  return goodB2G_363();
}

//----- (0000000000450483) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54d_badSink(char a1)
{
  return CWE191_Integer_Underflow__char_min_postdec_54e_badSink(a1);
}

//----- (000000000045049D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54d_goodG2BSink(char a1)
{
  return CWE191_Integer_Underflow__char_min_postdec_54e_goodG2BSink(a1);
}

//----- (00000000004504B7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54d_goodB2GSink(char a1)
{
  return CWE191_Integer_Underflow__char_min_postdec_54e_goodB2GSink(a1);
}

//----- (00000000004504D1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_52c_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (00000000004504F2) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_52c_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000450513) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_52c_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (0000000000450549) ----------------------------------------------------
int __fastcall badSink_60(int a1)
{
  int result; // eax

  result = badStatic_13;
  if ( badStatic_13 )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB480: using guessed type int badStatic_13;

//----- (0000000000450574) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_21_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  badStatic_13 = 1;
  return badSink_60(v4);
}
// 6AB480: using guessed type int badStatic_13;

//----- (00000000004505E6) ----------------------------------------------------
int __fastcall goodB2G1Sink_13(int a1)
{
  if ( goodB2G1Static_13 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 - 1);
}
// 6AB484: using guessed type int goodB2G1Static_13;

//----- (0000000000450632) ----------------------------------------------------
int goodB2G1_234()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G1Static_13 = 0;
  return goodB2G1Sink_13(v4);
}
// 6AB484: using guessed type int goodB2G1Static_13;

//----- (00000000004506A4) ----------------------------------------------------
int __fastcall goodB2G2Sink_13(int a1)
{
  int result; // eax

  result = goodB2G2Static_13;
  if ( goodB2G2Static_13 )
  {
    if ( a1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 - 1);
  }
  return result;
}
// 6AB488: using guessed type int goodB2G2Static_13;

//----- (00000000004506E4) ----------------------------------------------------
int goodB2G2_234()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G2Static_13 = 1;
  return goodB2G2Sink_13(v4);
}
// 6AB488: using guessed type int goodB2G2Static_13;

//----- (0000000000450756) ----------------------------------------------------
int __fastcall goodG2BSink_60(int a1)
{
  int result; // eax

  result = goodG2BStatic_13;
  if ( goodG2BStatic_13 )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB48C: using guessed type int goodG2BStatic_13;

//----- (0000000000450781) ----------------------------------------------------
int goodG2B_393()
{
  goodG2BStatic_13 = 1;
  return goodG2BSink_60(-2);
}
// 6AB48C: using guessed type int goodG2BStatic_13;

//----- (00000000004507AD) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_21_good()
{
  goodB2G1_234();
  goodB2G2_234();
  return goodG2B_393();
}

//----- (00000000004507D1) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_68_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE191_Integer_Underflow__int_fgets_postdec_68_badData = v4;
  return CWE191_Integer_Underflow__int_fgets_postdec_68b_badSink();
}
// 6AB5C0: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_68_badData;

//----- (0000000000450842) ----------------------------------------------------
int goodG2B_394()
{
  CWE191_Integer_Underflow__int_fgets_postdec_68_goodG2BData = -2;
  return CWE191_Integer_Underflow__int_fgets_postdec_68b_goodG2BSink();
}
// 6AB5C8: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_68_goodG2BData;

//----- (000000000045086D) ----------------------------------------------------
int goodB2G_364()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE191_Integer_Underflow__int_fgets_postdec_68_goodB2GData = v4;
  return CWE191_Integer_Underflow__int_fgets_postdec_68b_goodB2GSink();
}
// 6AB5C4: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_68_goodB2GData;

//----- (00000000004508DE) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_68_good()
{
  goodG2B_394();
  return goodB2G_364();
}

//----- (00000000004508F8) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_68b_badSink()
{
  return printLongLongLine(CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_badData - 1);
}
// 6AB5E0: using guessed type __int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_badData;

//----- (0000000000450926) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_68b_goodG2BSink()
{
  return printLongLongLine(CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_goodG2BData - 1);
}
// 6AB5D0: using guessed type __int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_goodG2BData;

//----- (0000000000450954) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_goodB2GData == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_goodB2GData - 1);
  return result;
}
// 6AB5D8: using guessed type __int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_goodB2GData;

//----- (000000000045099E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_22_badSink(char a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__char_rand_postdec_22_badGlobal;
  if ( CWE191_Integer_Underflow__char_rand_postdec_22_badGlobal )
    result = printHexCharLine(a1 - 1);
  return result;
}
// 6AB4AC: using guessed type int CWE191_Integer_Underflow__char_rand_postdec_22_badGlobal;

//----- (00000000004509D3) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G1Sink(char a1)
{
  if ( CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(a1 - 1);
}
// 6AB4B0: using guessed type int CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G1Global;

//----- (0000000000450A26) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G2Sink(char a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G2Global;
  if ( CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G2Global )
  {
    if ( a1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(a1 - 1);
  }
  return result;
}
// 6AB4B4: using guessed type int CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G2Global;

//----- (0000000000450A6D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_22_goodG2BSink(char a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__char_rand_postdec_22_goodG2BGlobal;
  if ( CWE191_Integer_Underflow__char_rand_postdec_22_goodG2BGlobal )
    result = printHexCharLine(a1 - 1);
  return result;
}
// 6AB4B8: using guessed type int CWE191_Integer_Underflow__char_rand_postdec_22_goodG2BGlobal;

//----- (0000000000450AA2) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54e_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000450AC3) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54e_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000450AE4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (0000000000450B1A) ----------------------------------------------------
int badSink_61()
{
  return printIntLine((__int16)(CWE191_Integer_Underflow__short_rand_postdec_45_badData - 1));
}
// 6AB490: using guessed type __int16 CWE191_Integer_Underflow__short_rand_postdec_45_badData;

//----- (0000000000450B4D) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_45_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE191_Integer_Underflow__short_rand_postdec_45_badData = v1;
  return badSink_61();
}
// 6AB490: using guessed type __int16 CWE191_Integer_Underflow__short_rand_postdec_45_badData;

//----- (0000000000450BB8) ----------------------------------------------------
int goodG2BSink_61()
{
  return printIntLine((__int16)(CWE191_Integer_Underflow__short_rand_postdec_45_goodG2BData - 1));
}
// 6AB492: using guessed type __int16 CWE191_Integer_Underflow__short_rand_postdec_45_goodG2BData;

//----- (0000000000450BEB) ----------------------------------------------------
int goodG2B_395()
{
  CWE191_Integer_Underflow__short_rand_postdec_45_goodG2BData = -2;
  return goodG2BSink_61();
}
// 6AB492: using guessed type __int16 CWE191_Integer_Underflow__short_rand_postdec_45_goodG2BData;

//----- (0000000000450C16) ----------------------------------------------------
int goodB2GSink_46()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__short_rand_postdec_45_goodB2GData == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(CWE191_Integer_Underflow__short_rand_postdec_45_goodB2GData - 1));
  return result;
}
// 6AB494: using guessed type __int16 CWE191_Integer_Underflow__short_rand_postdec_45_goodB2GData;

//----- (0000000000450C5D) ----------------------------------------------------
int goodB2G_365()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  CWE191_Integer_Underflow__short_rand_postdec_45_goodB2GData = v1;
  return goodB2GSink_46();
}
// 6AB494: using guessed type __int16 CWE191_Integer_Underflow__short_rand_postdec_45_goodB2GData;

//----- (0000000000450CC8) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_45_good()
{
  goodG2B_395();
  return goodB2G_365();
}

//----- (0000000000450CE2) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_05_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_13 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticTrue_13;
  if ( staticTrue_13 )
    result = printIntLine(v6 - 1);
  return result;
}
// 6AB1A4: using guessed type int staticTrue_13;

//----- (0000000000450D6A) ----------------------------------------------------
int goodB2G1_235()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_13 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( staticFalse_13 )
    return printLine("Benign, fixed string");
  if ( v6 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v6 - 1);
}
// 6AB1A4: using guessed type int staticTrue_13;
// 6AB498: using guessed type int staticFalse_13;

//----- (0000000000450E13) ----------------------------------------------------
int goodB2G2_235()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_13 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticTrue_13;
  if ( staticTrue_13 )
  {
    if ( v6 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v6 - 1);
  }
  return result;
}
// 6AB1A4: using guessed type int staticTrue_13;

//----- (0000000000450EB0) ----------------------------------------------------
int goodG2B1_205()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_13 )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticTrue_13;
  if ( staticTrue_13 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1A4: using guessed type int staticTrue_13;
// 6AB498: using guessed type int staticFalse_13;

//----- (0000000000450EFC) ----------------------------------------------------
int goodG2B2_205()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_13 )
    v1 = -2;
  result = staticTrue_13;
  if ( staticTrue_13 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1A4: using guessed type int staticTrue_13;

//----- (0000000000450F3C) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_05_good()
{
  goodB2G1_235();
  goodB2G2_235();
  goodG2B1_205();
  return goodG2B2_205();
}

//----- (0000000000450F6A) ----------------------------------------------------
int __fastcall badSink_62(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000450F8B) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_41_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return badSink_62(v2);
}

//----- (0000000000450FF5) ----------------------------------------------------
int __fastcall goodG2BSink_62(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (0000000000451016) ----------------------------------------------------
int goodG2B_396()
{
  return goodG2BSink_62(-2);
}

//----- (0000000000451038) ----------------------------------------------------
int __fastcall goodB2GSink_47(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (000000000045106E) ----------------------------------------------------
int goodB2G_366()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return goodB2GSink_47(v2);
}

//----- (00000000004510D8) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_41_good()
{
  goodB2G_366();
  return goodG2B_396();
}

//----- (00000000004510F2) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_04_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 - 1);
}
// 4510F2: using guessed type char buf[16];

//----- (00000000004511FA) ----------------------------------------------------
int goodB2G1_236()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 - 1);
  return result;
}
// 4511FA: using guessed type char buf[16];

//----- (0000000000451323) ----------------------------------------------------
int goodB2G2_236()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 - 1);
  return result;
}
// 451323: using guessed type char buf[16];

//----- (0000000000451440) ----------------------------------------------------
int goodG2B1_206()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000045148A) ----------------------------------------------------
int goodG2B2_206()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (00000000004514C8) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_04_good()
{
  goodB2G1_236();
  goodB2G2_236();
  goodG2B1_206();
  return goodG2B2_206();
}

//----- (00000000004514F6) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_31_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-14h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v8 = recv(fd, buf, 0xDuLL, 0);
      if ( v8 != -1 )
      {
        if ( v8 )
        {
          buf[v8] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v7 = v10;
  v6 = v10 - 1;
  v5 = v10 - 1;
  return printIntLine(v10 - 1);
}
// 4514F6: using guessed type char buf[16];

//----- (00000000004515F4) ----------------------------------------------------
int goodG2B_397()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000045162C) ----------------------------------------------------
int goodB2G_367()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  v5 = v9;
  if ( v9 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v5 - 1);
  return result;
}
// 45162C: using guessed type char buf[16];

//----- (000000000045173F) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_31_good()
{
  goodG2B_397();
  return goodB2G_367();
}

//----- (0000000000451759) ----------------------------------------------------
int __fastcall badSink_63(int a1)
{
  int result; // eax

  result = badStatic_14;
  if ( badStatic_14 )
    result = printUnsignedLine(a1 - 1);
  return result;
}
// 6AB49C: using guessed type int badStatic_14;

//----- (0000000000451784) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_21_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  badStatic_14 = 1;
  return badSink_63(v2);
}
// 6AB49C: using guessed type int badStatic_14;

//----- (00000000004517F8) ----------------------------------------------------
int __fastcall goodB2G1Sink_14(int a1)
{
  if ( goodB2G1Static_14 )
    return printLine("Benign, fixed string");
  if ( a1 )
    return printUnsignedLine(a1 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 6AB4A0: using guessed type int goodB2G1Static_14;

//----- (0000000000451841) ----------------------------------------------------
int goodB2G1_237()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G1Static_14 = 0;
  return goodB2G1Sink_14(v2);
}
// 6AB4A0: using guessed type int goodB2G1Static_14;

//----- (00000000004518B5) ----------------------------------------------------
int __fastcall goodB2G2Sink_14(int a1)
{
  int result; // eax

  result = goodB2G2Static_14;
  if ( goodB2G2Static_14 )
  {
    if ( a1 )
      result = printUnsignedLine(a1 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 6AB4A4: using guessed type int goodB2G2Static_14;

//----- (00000000004518F2) ----------------------------------------------------
int goodB2G2_237()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  goodB2G2Static_14 = 1;
  return goodB2G2Sink_14(v2);
}
// 6AB4A4: using guessed type int goodB2G2Static_14;

//----- (0000000000451966) ----------------------------------------------------
int __fastcall goodG2BSink_63(int a1)
{
  int result; // eax

  result = goodG2BStatic_14;
  if ( goodG2BStatic_14 )
    result = printUnsignedLine(a1 - 1);
  return result;
}
// 6AB4A8: using guessed type int goodG2BStatic_14;

//----- (0000000000451991) ----------------------------------------------------
int goodG2B_398()
{
  goodG2BStatic_14 = 1;
  return goodG2BSink_63(-2);
}
// 6AB4A8: using guessed type int goodG2BStatic_14;

//----- (00000000004519BD) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_21_good()
{
  goodB2G1_237();
  goodB2G2_237();
  return goodG2B_398();
}

//----- (00000000004519E1) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_53_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE191_Integer_Underflow__int_fgets_postdec_53b_badSink(v4);
}

//----- (0000000000451A49) ----------------------------------------------------
int goodG2B_399()
{
  return CWE191_Integer_Underflow__int_fgets_postdec_53b_goodG2BSink(-2);
}

//----- (0000000000451A6B) ----------------------------------------------------
int goodB2G_368()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE191_Integer_Underflow__int_fgets_postdec_53b_goodB2GSink(v4);
}

//----- (0000000000451AD3) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_53_good()
{
  goodG2B_399();
  return goodB2G_368();
}

//----- (0000000000451AED) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_53b_badSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_53c_badSink(a1);
}

//----- (0000000000451B07) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_53b_goodG2BSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_53c_goodG2BSink(a1);
}

//----- (0000000000451B21) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_53b_goodB2GSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_53c_goodB2GSink(a1);
}

//----- (0000000000451B3B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_53c_badSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_53d_badSink(a1);
}

//----- (0000000000451B55) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_53c_goodG2BSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_53d_goodG2BSink(a1);
}

//----- (0000000000451B6F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_53c_goodB2GSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_53d_goodB2GSink(a1);
}

//----- (0000000000451B89) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_34_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 - 1);
}

//----- (0000000000451C09) ----------------------------------------------------
int goodG2B_400()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000451C41) ----------------------------------------------------
int goodB2G_369()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (0000000000451CD6) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_34_good()
{
  goodG2B_400();
  return goodB2G_369();
}

//----- (0000000000451CF0) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_52c_badSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (0000000000451D17) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_52c_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (0000000000451D3E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_52c_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (0000000000451D81) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_14_bad()
{
  int result; // eax

  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(0xFFFFFFFF);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000451DC3) ----------------------------------------------------
int goodB2G1_238()
{
  int result; // eax

  if ( globalFive == 5 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLine("Benign, fixed string");
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000451E23) ----------------------------------------------------
int goodB2G2_238()
{
  int result; // eax

  result = globalFive;
  if ( globalFive == 5 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000451E77) ----------------------------------------------------
int goodG2B1_207()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000451EC5) ----------------------------------------------------
int goodG2B2_207()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000451F07) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_14_good()
{
  goodB2G1_238();
  goodB2G2_238();
  goodG2B1_207();
  return goodG2B2_207();
}

//----- (0000000000451F35) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) - 1);
}

//----- (0000000000451F61) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) - 1);
}

//----- (0000000000451F8D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_rand_postdec_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (0000000000451FCE) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_22_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE191_Integer_Underflow__char_rand_postdec_22_badGlobal = 1;
  return CWE191_Integer_Underflow__char_rand_postdec_22_badSink(v0);
}
// 6AB4AC: using guessed type int CWE191_Integer_Underflow__char_rand_postdec_22_badGlobal;

//----- (0000000000452022) ----------------------------------------------------
int goodB2G1_239()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G1Global = 0;
  return CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G1Sink(v0);
}
// 6AB4B0: using guessed type int CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G1Global;

//----- (0000000000452076) ----------------------------------------------------
int goodB2G2_239()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G2Global = 1;
  return CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G2Sink(v0);
}
// 6AB4B4: using guessed type int CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G2Global;

//----- (00000000004520CA) ----------------------------------------------------
int goodG2B_401()
{
  CWE191_Integer_Underflow__char_rand_postdec_22_goodG2BGlobal = 1;
  return CWE191_Integer_Underflow__char_rand_postdec_22_goodG2BSink(-2);
}
// 6AB4B8: using guessed type int CWE191_Integer_Underflow__char_rand_postdec_22_goodG2BGlobal;

//----- (00000000004520F1) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_22_good()
{
  goodB2G1_239();
  goodB2G2_239();
  return goodG2B_401();
}

//----- (0000000000452115) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_badData = v1;
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_68b_badSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB5E0: using guessed type __int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_badData;

//----- (0000000000452159) ----------------------------------------------------
int goodG2B_402()
{
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_goodG2BData = -2LL;
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_68b_goodG2BSink();
}
// 6AB5D0: using guessed type __int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_goodG2BData;

//----- (0000000000452188) ----------------------------------------------------
int goodB2G_370()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_goodB2GData = v1;
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_68b_goodB2GSink();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB5D8: using guessed type __int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_goodB2GData;

//----- (00000000004521CC) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_68_good()
{
  goodG2B_402();
  return goodB2G_370();
}

//----- (00000000004521E6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_22_badSink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int_connect_socket_postdec_22_badGlobal;
  if ( CWE191_Integer_Underflow__int_connect_socket_postdec_22_badGlobal )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB394: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_22_badGlobal;

//----- (0000000000452211) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodB2G1Sink(int a1)
{
  if ( CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 - 1);
}
// 6AB398: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodB2G1Global;

//----- (000000000045225D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodB2G2Global;
  if ( CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodB2G2Global )
  {
    if ( a1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 - 1);
  }
  return result;
}
// 6AB39C: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodB2G2Global;

//----- (000000000045229D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodG2BGlobal;
  if ( CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodG2BGlobal )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB3A0: using guessed type int CWE191_Integer_Underflow__int_connect_socket_postdec_22_goodG2BGlobal;

//----- (00000000004522C8) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_53_bad()
{
  return CWE191_Integer_Underflow__int_min_postdec_53b_badSink(2147483648);
}

//----- (00000000004522EA) ----------------------------------------------------
int goodG2B_403()
{
  return CWE191_Integer_Underflow__int_min_postdec_53b_goodG2BSink(-2);
}

//----- (000000000045230C) ----------------------------------------------------
int goodB2G_371()
{
  return CWE191_Integer_Underflow__int_min_postdec_53b_goodB2GSink(2147483648);
}

//----- (000000000045232E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_53_good()
{
  goodG2B_403();
  return goodB2G_371();
}

//----- (0000000000452348) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_18_bad()
{
  return printHexCharLine(127);
}

//----- (0000000000452378) ----------------------------------------------------
int goodB2G_372()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004523BA) ----------------------------------------------------
int goodG2B_404()
{
  return printHexCharLine(-3);
}

//----- (00000000004523EA) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_18_good()
{
  goodB2G_372();
  return goodG2B_404();
}

//----- (0000000000452404) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_52b_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_fgets_postdec_52c_badSink(a1);
}

//----- (000000000045241B) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_52b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_fgets_postdec_52c_goodG2BSink(a1);
}

//----- (0000000000452432) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_52b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_fgets_postdec_52c_goodB2GSink(a1);
}

//----- (0000000000452449) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54c_badSink(char a1)
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_54d_badSink(a1);
}

//----- (0000000000452463) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54c_goodG2BSink(char a1)
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_54d_goodG2BSink(a1);
}

//----- (000000000045247D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54c_goodB2GSink(char a1)
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_54d_goodB2GSink(a1);
}

//----- (0000000000452497) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (00000000004524CA) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (00000000004524FD) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 - 1);
  return result;
}

//----- (0000000000452545) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_63b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 - 1));
}

//----- (000000000045257C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_63b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 - 1));
}

//----- (00000000004525B3) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_63b_goodB2GSink(_WORD *a1)
{
  int result; // eax

  if ( *a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(*a1 - 1));
  return result;
}

//----- (00000000004525FE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_53d_badSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (0000000000452629) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_53d_goodG2BSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (0000000000452654) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_53d_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (0000000000452691) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_68b_badSink()
{
  return printLongLongLine(CWE191_Integer_Underflow__int64_t_min_postdec_68_badData - 1);
}
// 6AB5E8: using guessed type __int64 CWE191_Integer_Underflow__int64_t_min_postdec_68_badData;

//----- (00000000004526BF) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_68b_goodG2BSink()
{
  return printLongLongLine(CWE191_Integer_Underflow__int64_t_min_postdec_68_goodG2BData - 1);
}
// 6AB5F8: using guessed type __int64 CWE191_Integer_Underflow__int64_t_min_postdec_68_goodG2BData;

//----- (00000000004526ED) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__int64_t_min_postdec_68_goodB2GData == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE191_Integer_Underflow__int64_t_min_postdec_68_goodB2GData - 1);
  return result;
}
// 6AB5F0: using guessed type __int64 CWE191_Integer_Underflow__int64_t_min_postdec_68_goodB2GData;

//----- (0000000000452737) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_66_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE191_Integer_Underflow__int_rand_postdec_66b_badSink((__int64)&v6);
}

//----- (00000000004527A9) ----------------------------------------------------
int goodG2B_405()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -2;
  v2 = -2;
  return CWE191_Integer_Underflow__int_rand_postdec_66b_goodG2BSink((__int64)&v1);
}

//----- (00000000004527D3) ----------------------------------------------------
int goodB2G_373()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  char v6; // [rsp+0h] [rbp-30h]
  int v7; // [rsp+8h] [rbp-28h]
  int v8; // [rsp+1Ch] [rbp-14h]

  v8 = 0;
  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  v8 = v2;
  v7 = v2;
  return CWE191_Integer_Underflow__int_rand_postdec_66b_goodB2GSink((__int64)&v6);
}

//----- (0000000000452845) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_66_good()
{
  goodG2B_405();
  return goodB2G_373();
}

//----- (000000000045285F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_65b_badSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (0000000000452886) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_65b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (00000000004528AD) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_65b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (00000000004528F0) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_15_bad()
{
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return printIntLine((__int16)(v1 - 1));
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045293D) ----------------------------------------------------
int goodB2G1_240()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004529A0) ----------------------------------------------------
int goodB2G2_240()
{
  int result; // eax
  __int16 v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  if ( v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000452A03) ----------------------------------------------------
int goodG2B1_208()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000452A39) ----------------------------------------------------
int goodG2B2_208()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000452A6F) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_15_good()
{
  goodB2G1_240();
  goodB2G2_240();
  goodG2B1_208();
  return goodG2B2_208();
}

//----- (0000000000452A9D) ----------------------------------------------------
int __fastcall badSink_64(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (0000000000452AC4) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_41_bad()
{
  return badSink_64(0x8000000000000000LL);
}

//----- (0000000000452AF0) ----------------------------------------------------
int __fastcall goodG2BSink_64(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (0000000000452B17) ----------------------------------------------------
int goodG2B_406()
{
  return goodG2BSink_64(-2LL);
}

//----- (0000000000452B3D) ----------------------------------------------------
int __fastcall goodB2GSink_48(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (0000000000452B80) ----------------------------------------------------
int goodB2G_374()
{
  return goodB2GSink_48(0x8000000000000000LL);
}

//----- (0000000000452BAC) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_41_good()
{
  goodB2G_374();
  return goodG2B_406();
}

//----- (0000000000452BC6) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_52_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE191_Integer_Underflow__int_fgets_postdec_52b_badSink(v4);
}

//----- (0000000000452C2E) ----------------------------------------------------
int goodG2B_407()
{
  return CWE191_Integer_Underflow__int_fgets_postdec_52b_goodG2BSink(-2);
}

//----- (0000000000452C50) ----------------------------------------------------
int goodB2G_375()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE191_Integer_Underflow__int_fgets_postdec_52b_goodB2GSink(v4);
}

//----- (0000000000452CB8) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_52_good()
{
  goodG2B_407();
  return goodB2G_375();
}

//----- (0000000000452CD2) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_02_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printIntLine(v2 - 1);
}

//----- (0000000000452D46) ----------------------------------------------------
int goodB2G1_241()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (0000000000452DCF) ----------------------------------------------------
int goodB2G2_241()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (0000000000452E58) ----------------------------------------------------
int goodG2B1_209()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000452E84) ----------------------------------------------------
int goodG2B2_209()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000452EB0) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_02_good()
{
  goodB2G1_241();
  goodB2G2_241();
  goodG2B1_209();
  return goodG2B2_209();
}

//----- (0000000000452EDE) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_64_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE191_Integer_Underflow__int_listen_socket_postdec_64b_badSink(&v5);
}
// 452EDE: using guessed type char buf[16];

//----- (000000000045300E) ----------------------------------------------------
int goodG2B_408()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -2;
  return CWE191_Integer_Underflow__int_listen_socket_postdec_64b_goodG2BSink(&v1);
}

//----- (0000000000453032) ----------------------------------------------------
int goodB2G_376()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = 0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE191_Integer_Underflow__int_listen_socket_postdec_64b_goodB2GSink(&v5);
}
// 453032: using guessed type char buf[16];

//----- (0000000000453162) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_64_good()
{
  goodG2B_408();
  return goodB2G_376();
}

//----- (000000000045317C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_51b_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (000000000045319D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_51b_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (00000000004531BE) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_51b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (00000000004531F4) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_52b_badSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_52c_badSink(a1);
}

//----- (000000000045320E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_52b_goodG2BSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_52c_goodG2BSink(a1);
}

//----- (0000000000453228) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_52b_goodB2GSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_52c_goodB2GSink(a1);
}

//----- (0000000000453242) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_52c_badSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (0000000000453269) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_52c_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (0000000000453290) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_52c_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (00000000004532D3) ----------------------------------------------------
int __fastcall badSink_65(char a1)
{
  int result; // eax

  result = badStatic_15;
  if ( badStatic_15 )
    result = printHexCharLine(a1 - 1);
  return result;
}
// 6AB4BC: using guessed type int badStatic_15;

//----- (0000000000453308) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_21_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  badStatic_15 = 1;
  return badSink_65(v0);
}
// 6AB4BC: using guessed type int badStatic_15;

//----- (000000000045335C) ----------------------------------------------------
int __fastcall goodB2G1Sink_15(char a1)
{
  if ( goodB2G1Static_15 )
    return printLine("Benign, fixed string");
  if ( a1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(a1 - 1);
}
// 6AB4C0: using guessed type int goodB2G1Static_15;

//----- (00000000004533AF) ----------------------------------------------------
int goodB2G1_242()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  goodB2G1Static_15 = 0;
  return goodB2G1Sink_15(v0);
}
// 6AB4C0: using guessed type int goodB2G1Static_15;

//----- (0000000000453403) ----------------------------------------------------
int __fastcall goodB2G2Sink_15(char a1)
{
  int result; // eax

  result = goodB2G2Static_15;
  if ( goodB2G2Static_15 )
  {
    if ( a1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(a1 - 1);
  }
  return result;
}
// 6AB4C4: using guessed type int goodB2G2Static_15;

//----- (000000000045344A) ----------------------------------------------------
int goodB2G2_242()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  goodB2G2Static_15 = 1;
  return goodB2G2Sink_15(v0);
}
// 6AB4C4: using guessed type int goodB2G2Static_15;

//----- (000000000045349E) ----------------------------------------------------
int __fastcall goodG2BSink_65(char a1)
{
  int result; // eax

  result = goodG2BStatic_15;
  if ( goodG2BStatic_15 )
    result = printHexCharLine(a1 - 1);
  return result;
}
// 6AB4C8: using guessed type int goodG2BStatic_15;

//----- (00000000004534D3) ----------------------------------------------------
int goodG2B_409()
{
  goodG2BStatic_15 = 1;
  return goodG2BSink_65(-2);
}
// 6AB4C8: using guessed type int goodG2BStatic_15;

//----- (00000000004534FA) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_21_good()
{
  goodB2G1_242();
  goodB2G2_242();
  return goodG2B_409();
}

//----- (000000000045351E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_03_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 - 1);
}

//----- (0000000000453579) ----------------------------------------------------
int goodB2G1_243()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 - 1);
  return result;
}

//----- (00000000004535E6) ----------------------------------------------------
int goodB2G2_243()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 - 1);
  return result;
}

//----- (0000000000453653) ----------------------------------------------------
int goodG2B1_210()
{
  return printHexCharLine(-3);
}

//----- (0000000000453681) ----------------------------------------------------
int goodG2B2_210()
{
  return printHexCharLine(-3);
}

//----- (00000000004536AF) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_03_good()
{
  goodB2G1_243();
  goodB2G2_243();
  goodG2B1_210();
  return goodG2B2_210();
}

//----- (00000000004536DD) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_68_bad()
{
  CWE191_Integer_Underflow__int64_t_min_postdec_68_badData = 0x8000000000000000LL;
  return CWE191_Integer_Underflow__int64_t_min_postdec_68b_badSink();
}
// 6AB5E8: using guessed type __int64 CWE191_Integer_Underflow__int64_t_min_postdec_68_badData;

//----- (0000000000453712) ----------------------------------------------------
int goodG2B_410()
{
  CWE191_Integer_Underflow__int64_t_min_postdec_68_goodG2BData = -2LL;
  return CWE191_Integer_Underflow__int64_t_min_postdec_68b_goodG2BSink();
}
// 6AB5F8: using guessed type __int64 CWE191_Integer_Underflow__int64_t_min_postdec_68_goodG2BData;

//----- (0000000000453741) ----------------------------------------------------
int goodB2G_377()
{
  CWE191_Integer_Underflow__int64_t_min_postdec_68_goodB2GData = 0x8000000000000000LL;
  return CWE191_Integer_Underflow__int64_t_min_postdec_68b_goodB2GSink();
}
// 6AB5F0: using guessed type __int64 CWE191_Integer_Underflow__int64_t_min_postdec_68_goodB2GData;

//----- (0000000000453776) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_68_good()
{
  goodG2B_410();
  return goodB2G_377();
}

//----- (0000000000453790) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_65_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))CWE191_Integer_Underflow__int64_t_rand_postdec_65b_badSink)(v4);
}

//----- (0000000000453856) ----------------------------------------------------
int goodG2B_411()
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_65b_goodG2BSink(-2LL);
}

//----- (0000000000453885) ----------------------------------------------------
__int64 goodB2G_378()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  return ((__int64 (__fastcall *)(__int64))CWE191_Integer_Underflow__int64_t_rand_postdec_65b_goodB2GSink)(v4);
}

//----- (000000000045394B) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__int64_t_rand_postdec_65_good()
{
  goodG2B_411();
  return goodB2G_378();
}

//----- (0000000000453965) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_54_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE191_Integer_Underflow__int_listen_socket_postdec_54b_badSink(v8);
}
// 453965: using guessed type char buf[16];

//----- (0000000000453A93) ----------------------------------------------------
int goodG2B_412()
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_54b_goodG2BSink(-2);
}

//----- (0000000000453AB5) ----------------------------------------------------
int goodB2G_379()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = 0;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE191_Integer_Underflow__int_listen_socket_postdec_54b_goodB2GSink(v8);
}
// 453AB5: using guessed type char buf[16];

//----- (0000000000453BE3) ----------------------------------------------------
int CWE191_Integer_Underflow__int_listen_socket_postdec_54_good()
{
  goodG2B_412();
  return goodB2G_379();
}

//----- (0000000000453BFD) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54e_badSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000453C1E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54e_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000453C3F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_54e_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000453C72) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__short_rand_postdec_65_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE191_Integer_Underflow__short_rand_postdec_65b_badSink)((unsigned int)(__int16)v1);
}

//----- (0000000000453CDC) ----------------------------------------------------
int goodG2B_413()
{
  return CWE191_Integer_Underflow__short_rand_postdec_65b_goodG2BSink(-2);
}

//----- (0000000000453D06) ----------------------------------------------------
__int64 goodB2G_380()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return ((__int64 (__fastcall *)(_QWORD))CWE191_Integer_Underflow__short_rand_postdec_65b_goodB2GSink)((unsigned int)(__int16)v1);
}

//----- (0000000000453D70) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__short_rand_postdec_65_good()
{
  goodG2B_413();
  return goodB2G_380();
}

//----- (0000000000453D8A) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_02_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 - 1);
}

//----- (0000000000453DFE) ----------------------------------------------------
int goodB2G1_244()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000453E84) ----------------------------------------------------
int goodB2G2_244()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000453F0A) ----------------------------------------------------
int goodG2B1_211()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000453F36) ----------------------------------------------------
int goodG2B2_211()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000453F62) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_02_good()
{
  goodB2G1_244();
  goodB2G2_244();
  goodG2B1_211();
  return goodG2B2_211();
}

//----- (0000000000453F90) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_53_bad()
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_53b_badSink(0x8000000000000000LL);
}

//----- (0000000000453FBC) ----------------------------------------------------
int goodG2B_414()
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_53b_goodG2BSink(-2LL);
}

//----- (0000000000453FE2) ----------------------------------------------------
int goodB2G_381()
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_53b_goodB2GSink(0x8000000000000000LL);
}

//----- (000000000045400E) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_53_good()
{
  goodG2B_414();
  return goodB2G_381();
}

//----- (0000000000454028) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_52b_badSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_52c_badSink(a1);
}

//----- (000000000045403F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_52b_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_52c_goodG2BSink(a1);
}

//----- (0000000000454056) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_52b_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_52c_goodB2GSink(a1);
}

//----- (000000000045406D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54c_badSink(char a1)
{
  return CWE191_Integer_Underflow__char_min_postdec_54d_badSink(a1);
}

//----- (0000000000454087) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54c_goodG2BSink(char a1)
{
  return CWE191_Integer_Underflow__char_min_postdec_54d_goodG2BSink(a1);
}

//----- (00000000004540A1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54c_goodB2GSink(char a1)
{
  return CWE191_Integer_Underflow__char_min_postdec_54d_goodB2GSink(a1);
}

//----- (00000000004540BB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54b_badSink(char a1)
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_54c_badSink(a1);
}

//----- (00000000004540D5) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54b_goodG2BSink(char a1)
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_54c_goodG2BSink(a1);
}

//----- (00000000004540EF) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_54b_goodB2GSink(char a1)
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_54c_goodB2GSink(a1);
}

//----- (0000000000454109) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_12_bad()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  else
  {
    v2 = -2;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    return printHexCharLine(v2 - 1);
  if ( v2 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 - 1);
}

//----- (00000000004541B6) ----------------------------------------------------
int goodB2G_382()
{
  int v0; // eax
  int v1; // eax
  int result; // eax
  char v3; // [rsp+Fh] [rbp-1h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v3 = v0;
  }
  else
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v1) = rand();
    }
    else
    {
      rand();
      rand();
      v1 = ~rand();
    }
    v3 = v1;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( v3 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v3 - 1);
  }
  else if ( v3 == -128 )
  {
    result = printLine("data value is too large to perform arithmetic safely.");
  }
  else
  {
    result = printHexCharLine(v3 - 1);
  }
  return result;
}

//----- (00000000004542A2) ----------------------------------------------------
int goodG2B_415()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  return printHexCharLine(253);
}

//----- (0000000000454310) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_12_good()
{
  goodB2G_382();
  return goodG2B_415();
}

//----- (000000000045432A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_51b_badSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (0000000000454351) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_51b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (0000000000454378) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_fscanf_postdec_51b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (00000000004543BB) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_13_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v7 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;
// 4543BB: using guessed type char buf[16];

//----- (00000000004544C7) ----------------------------------------------------
int goodB2G1_245()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( v7 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v7 - 1);
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;
// 4544C7: using guessed type char buf[16];

//----- (00000000004545F4) ----------------------------------------------------
int goodB2G2_245()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( v7 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v7 - 1);
  }
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;
// 4545F4: using guessed type char buf[16];

//----- (0000000000454715) ----------------------------------------------------
int goodG2B1_212()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000454763) ----------------------------------------------------
int goodG2B2_212()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004547A5) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_13_good()
{
  goodB2G1_245();
  goodB2G2_245();
  goodG2B1_212();
  return goodG2B2_212();
}

//----- (00000000004547D3) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_16_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return printLongLongLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000454824) ----------------------------------------------------
int goodB2G_383()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000454894) ----------------------------------------------------
int goodG2B_416()
{
  return printLongLongLine(-3LL);
}

//----- (00000000004548C9) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_16_good()
{
  goodB2G_383();
  return goodG2B_416();
}

//----- (00000000004548E3) ----------------------------------------------------
int __fastcall badSink_66(int a1)
{
  int result; // eax

  result = badStatic_16;
  if ( badStatic_16 )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB4CC: using guessed type int badStatic_16;

//----- (000000000045490E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_21_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  badStatic_16 = 1;
  return badSink_66(v7);
}
// 6AB4CC: using guessed type int badStatic_16;
// 45490E: using guessed type char buf[16];

//----- (0000000000454A00) ----------------------------------------------------
int __fastcall goodB2G1Sink_16(int a1)
{
  if ( goodB2G1Static_16 )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 - 1);
}
// 6AB4D0: using guessed type int goodB2G1Static_16;

//----- (0000000000454A4C) ----------------------------------------------------
int goodB2G1_246()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G1Static_16 = 0;
  return goodB2G1Sink_16(v7);
}
// 6AB4D0: using guessed type int goodB2G1Static_16;
// 454A4C: using guessed type char buf[16];

//----- (0000000000454B3E) ----------------------------------------------------
int __fastcall goodB2G2Sink_16(int a1)
{
  int result; // eax

  result = goodB2G2Static_16;
  if ( goodB2G2Static_16 )
  {
    if ( a1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 - 1);
  }
  return result;
}
// 6AB4D4: using guessed type int goodB2G2Static_16;

//----- (0000000000454B7E) ----------------------------------------------------
int goodB2G2_246()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G2Static_16 = 1;
  return goodB2G2Sink_16(v7);
}
// 6AB4D4: using guessed type int goodB2G2Static_16;
// 454B7E: using guessed type char buf[16];

//----- (0000000000454C70) ----------------------------------------------------
int __fastcall goodG2BSink_66(int a1)
{
  int result; // eax

  result = goodG2BStatic_16;
  if ( goodG2BStatic_16 )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB4D8: using guessed type int goodG2BStatic_16;

//----- (0000000000454C9B) ----------------------------------------------------
int goodG2B_417()
{
  goodG2BStatic_16 = 1;
  return goodG2BSink_66(-2);
}
// 6AB4D8: using guessed type int goodG2BStatic_16;

//----- (0000000000454CC7) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_21_good()
{
  goodB2G1_246();
  goodB2G2_246();
  return goodG2B_417();
}

//----- (0000000000454CEB) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_03_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return printIntLine(v7 - 1);
}
// 454CEB: using guessed type char buf[16];

//----- (0000000000454DDD) ----------------------------------------------------
int goodB2G1_247()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 - 1);
  return result;
}
// 454DDD: using guessed type char buf[16];

//----- (0000000000454EE4) ----------------------------------------------------
int goodB2G2_247()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = 0;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v7 - 1);
  return result;
}
// 454EE4: using guessed type char buf[16];

//----- (0000000000454FEB) ----------------------------------------------------
int goodG2B1_213()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000455017) ----------------------------------------------------
int goodG2B2_213()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000455043) ----------------------------------------------------
int CWE191_Integer_Underflow__int_connect_socket_postdec_03_good()
{
  goodB2G1_247();
  goodB2G2_247();
  goodG2B1_213();
  return goodG2B2_213();
}

//----- (0000000000455071) ----------------------------------------------------
int badSink_67()
{
  return printIntLine(CWE191_Integer_Underflow__int_fgets_postdec_45_badData - 1);
}
// 6AB4DC: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_45_badData;

//----- (0000000000455098) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_45_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE191_Integer_Underflow__int_fgets_postdec_45_badData = v4;
  return badSink_67();
}
// 6AB4DC: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_45_badData;

//----- (0000000000455109) ----------------------------------------------------
int goodG2BSink_67()
{
  return printIntLine(CWE191_Integer_Underflow__int_fgets_postdec_45_goodG2BData - 1);
}
// 6AB4E0: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_45_goodG2BData;

//----- (0000000000455130) ----------------------------------------------------
int goodG2B_418()
{
  CWE191_Integer_Underflow__int_fgets_postdec_45_goodG2BData = -2;
  return goodG2BSink_67();
}
// 6AB4E0: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_45_goodG2BData;

//----- (000000000045515B) ----------------------------------------------------
int goodB2GSink_49()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__int_fgets_postdec_45_goodB2GData == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(CWE191_Integer_Underflow__int_fgets_postdec_45_goodB2GData - 1);
  return result;
}
// 6AB4E4: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_45_goodB2GData;

//----- (0000000000455197) ----------------------------------------------------
int goodB2G_384()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE191_Integer_Underflow__int_fgets_postdec_45_goodB2GData = v4;
  return goodB2GSink_49();
}
// 6AB4E4: using guessed type int CWE191_Integer_Underflow__int_fgets_postdec_45_goodB2GData;

//----- (0000000000455208) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_45_good()
{
  goodG2B_418();
  return goodB2G_384();
}

//----- (0000000000455222) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_15_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return printUnsignedLine(v2 - 1);
}

//----- (0000000000455298) ----------------------------------------------------
int goodB2G1_248()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000455320) ----------------------------------------------------
int goodB2G2_248()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  if ( v2 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (00000000004553A8) ----------------------------------------------------
int goodG2B1_214()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (00000000004553D6) ----------------------------------------------------
int goodG2B2_214()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000455404) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_15_good()
{
  goodB2G1_248();
  goodB2G2_248();
  goodG2B1_214();
  return goodG2B2_214();
}

//----- (0000000000455432) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_67_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE191_Integer_Underflow__int_fscanf_postdec_67b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000455470) ----------------------------------------------------
int goodG2B_419()
{
  return CWE191_Integer_Underflow__int_fscanf_postdec_67b_goodG2BSink(-2);
}

//----- (0000000000455498) ----------------------------------------------------
int goodB2G_385()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE191_Integer_Underflow__int_fscanf_postdec_67b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004554D6) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_67_good()
{
  goodG2B_419();
  return goodB2G_385();
}

//----- (00000000004554F0) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_53c_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_53d_badSink(a1);
}

//----- (0000000000455507) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_53c_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_53d_goodG2BSink(a1);
}

//----- (000000000045551E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_53c_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_listen_socket_postdec_53d_goodB2GSink(a1);
}

//----- (0000000000455535) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_06_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return printIntLine(v4 - 1);
}

//----- (00000000004555BB) ----------------------------------------------------
int goodB2G1_249()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 - 1);
  return result;
}

//----- (0000000000455662) ----------------------------------------------------
int goodB2G2_249()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  if ( v4 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v4 - 1);
  return result;
}

//----- (00000000004556FD) ----------------------------------------------------
int goodG2B1_215()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000455749) ----------------------------------------------------
int goodG2B2_215()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000455789) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_06_good()
{
  goodB2G1_249();
  goodB2G2_249();
  goodG2B1_215();
  return goodG2B2_215();
}

//----- (00000000004557B7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_53d_badSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (00000000004557E5) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_53d_goodG2BSink(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (0000000000455813) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_min_postdec_53d_goodB2GSink(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (0000000000455855) ----------------------------------------------------
__int64 badSource_15()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (00000000004558B4) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_42_bad()
{
  int v0; // eax

  v0 = badSource_15();
  return printUnsignedLine(v0 - 1);
}

//----- (00000000004558E6) ----------------------------------------------------
__int64 goodG2BSource_15()
{
  return 4294967294LL;
}

//----- (00000000004558F9) ----------------------------------------------------
int goodG2B_420()
{
  int v0; // eax

  v0 = goodG2BSource_15();
  return printUnsignedLine(v0 - 1);
}

//----- (000000000045592B) ----------------------------------------------------
__int64 goodB2GSource_15()
{
  int v0; // ebx
  int v1; // ebx
  __int64 result; // rax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    LODWORD(result) = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    LODWORD(result) = ~(v4 ^ rand());
  }
  return (unsigned int)result;
}

//----- (000000000045598A) ----------------------------------------------------
int goodB2G_386()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_15();
  if ( v1 )
    result = printUnsignedLine(v1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (00000000004559CE) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_42_good()
{
  goodB2G_386();
  return goodG2B_420();
}

//----- (00000000004559E8) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_54_bad()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE191_Integer_Underflow__char_fscanf_postdec_54b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000455A21) ----------------------------------------------------
int goodG2B_421()
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_54b_goodG2BSink(-2);
}

//----- (0000000000455A3E) ----------------------------------------------------
int goodB2G_387()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  __isoc99_fscanf(stdin, "%c", &v1);
  return CWE191_Integer_Underflow__char_fscanf_postdec_54b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000455A77) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_54_good()
{
  goodG2B_421();
  return goodB2G_387();
}

//----- (0000000000455A91) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_11_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v2 - 1);
  return result;
}

//----- (0000000000455B08) ----------------------------------------------------
int goodB2G1_250()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v2 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 - 1);
}

//----- (0000000000455B9D) ----------------------------------------------------
int goodB2G2_250()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( (unsigned int)globalReturnsTrue() )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v2 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 - 1);
  }
  return result;
}

//----- (0000000000455C26) ----------------------------------------------------
int goodG2B1_216()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (0000000000455C7C) ----------------------------------------------------
int goodG2B2_216()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (0000000000455CC6) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_11_good()
{
  goodB2G1_250();
  goodB2G2_250();
  goodG2B1_216();
  return goodG2B2_216();
}

//----- (0000000000455CF4) ----------------------------------------------------
__int64 staticReturnsTrue_16()
{
  return 1LL;
}

//----- (0000000000455CFF) ----------------------------------------------------
__int64 staticReturnsFalse_16()
{
  return 0LL;
}

//----- (0000000000455D0A) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_08_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_16() )
    v1 = -128;
  result = staticReturnsTrue_16();
  if ( result )
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (0000000000455D54) ----------------------------------------------------
int goodB2G1_251()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_16() )
    v1 = -128;
  if ( (unsigned int)staticReturnsFalse_16() )
    return printLine("Benign, fixed string");
  if ( v1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 - 1);
}

//----- (0000000000455DBC) ----------------------------------------------------
int goodB2G2_251()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_16() )
    v1 = -128;
  result = staticReturnsTrue_16();
  if ( result )
  {
    if ( v1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 - 1);
  }
  return result;
}

//----- (0000000000455E18) ----------------------------------------------------
int goodG2B1_217()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsFalse_16() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticReturnsTrue_16();
  if ( result )
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (0000000000455E6E) ----------------------------------------------------
int goodG2B2_217()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)staticReturnsTrue_16() )
    v1 = -2;
  result = staticReturnsTrue_16();
  if ( result )
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (0000000000455EB8) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_08_good()
{
  goodB2G1_251();
  goodB2G2_251();
  goodG2B1_217();
  return goodG2B2_217();
}

//----- (0000000000455EE6) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_51_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_51b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000455F21) ----------------------------------------------------
int goodG2B_422()
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_51b_goodG2BSink(-2LL);
}

//----- (0000000000455F47) ----------------------------------------------------
int goodB2G_388()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_51b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000455F82) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_51_good()
{
  goodG2B_422();
  return goodB2G_388();
}

//----- (0000000000455F9C) ----------------------------------------------------
__int64 __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_61b_badSource(unsigned __int16 a1)
{
  unsigned __int16 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%hd", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000455FCD) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__short_fscanf_postdec_61b_goodG2BSource()
{
  return 65534LL;
}

//----- (0000000000455FE3) ----------------------------------------------------
__int64 __fastcall CWE191_Integer_Underflow__short_fscanf_postdec_61b_goodB2GSource(unsigned __int16 a1)
{
  unsigned __int16 v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%hd", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000456014) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_63_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x8000000000000000LL;
  return CWE191_Integer_Underflow__int64_t_min_postdec_63b_badSink(&v1);
}

//----- (0000000000456040) ----------------------------------------------------
int goodG2B_423()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = -2LL;
  return CWE191_Integer_Underflow__int64_t_min_postdec_63b_goodG2BSink(&v1);
}

//----- (0000000000456066) ----------------------------------------------------
int goodB2G_389()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0x8000000000000000LL;
  return CWE191_Integer_Underflow__int64_t_min_postdec_63b_goodB2GSink(&v1);
}

//----- (0000000000456092) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_63_good()
{
  goodG2B_423();
  return goodB2G_389();
}

//----- (00000000004560AC) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_67b_badSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (00000000004560D3) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_67b_goodG2BSink(int a1)
{
  return printIntLine(a1 - 1);
}

//----- (00000000004560FA) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_min_postdec_67b_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(a1 - 1);
  return result;
}

//----- (0000000000456136) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_10_bad()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v2 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (00000000004561A5) ----------------------------------------------------
int goodB2G1_252()
{
  int v0; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v2 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v2 - 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000456232) ----------------------------------------------------
int goodB2G2_252()
{
  int v0; // eax
  int result; // eax
  char v2; // [rsp+Fh] [rbp-1h]

  v2 = 32;
  if ( globalTrue )
  {
    if ( rand() & 1 )
    {
      rand();
      rand();
      LOBYTE(v0) = rand();
    }
    else
    {
      rand();
      rand();
      v0 = ~rand();
    }
    v2 = v0;
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v2 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v2 - 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (00000000004562B3) ----------------------------------------------------
int goodG2B1_218()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000456301) ----------------------------------------------------
int goodG2B2_218()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalTrue )
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000456343) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_10_good()
{
  goodB2G1_252();
  goodB2G2_252();
  goodG2B1_218();
  return goodG2B2_218();
}

//----- (0000000000456371) ----------------------------------------------------
int badSink_68()
{
  return printLongLongLine(CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_badData - 1);
}
// 6AB4E8: using guessed type __int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_badData;

//----- (000000000045639F) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_badData = v1;
  return badSink_68();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB4E8: using guessed type __int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_badData;

//----- (00000000004563E3) ----------------------------------------------------
int goodG2BSink_68()
{
  return printLongLongLine(CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_goodG2BData - 1);
}
// 6AB4F0: using guessed type __int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_goodG2BData;

//----- (0000000000456411) ----------------------------------------------------
int goodG2B_424()
{
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_goodG2BData = -2LL;
  return goodG2BSink_68();
}
// 6AB4F0: using guessed type __int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_goodG2BData;

//----- (0000000000456440) ----------------------------------------------------
int goodB2GSink_50()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_goodB2GData == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_goodB2GData - 1);
  return result;
}
// 6AB4F8: using guessed type __int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_goodB2GData;

//----- (000000000045648A) ----------------------------------------------------
int goodB2G_390()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_goodB2GData = v1;
  return goodB2GSink_50();
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB4F8: using guessed type __int64 CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_goodB2GData;

//----- (00000000004564CE) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_45_good()
{
  goodG2B_424();
  return goodB2G_390();
}

//----- (00000000004564E8) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_05_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_14 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticTrue_14;
  if ( staticTrue_14 )
    result = printUnsignedLine(v6 - 1);
  return result;
}
// 6AB1A8: using guessed type int staticTrue_14;

//----- (0000000000456570) ----------------------------------------------------
int goodB2G1_253()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_14 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  if ( staticFalse_14 )
    return printLine("Benign, fixed string");
  if ( v6 )
    return printUnsignedLine(v6 - 1);
  return printLine("data value is too large to perform arithmetic safely.");
}
// 6AB1A8: using guessed type int staticTrue_14;
// 6AB500: using guessed type int staticFalse_14;

//----- (0000000000456616) ----------------------------------------------------
int goodB2G2_253()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx
  int result; // eax
  int v6; // [rsp+Ch] [rbp-14h]

  v6 = 0;
  if ( staticTrue_14 )
  {
    if ( rand() & 1 )
    {
      v0 = rand() << 30;
      v1 = (rand() << 15) ^ v0;
      v2 = v1 ^ rand();
    }
    else
    {
      v3 = rand() << 30;
      v4 = (rand() << 15) ^ v3;
      v2 = ~(v4 ^ rand());
    }
    v6 = v2;
  }
  result = staticTrue_14;
  if ( staticTrue_14 )
  {
    if ( v6 )
      result = printUnsignedLine(v6 - 1);
    else
      result = printLine("data value is too large to perform arithmetic safely.");
  }
  return result;
}
// 6AB1A8: using guessed type int staticTrue_14;

//----- (00000000004566B0) ----------------------------------------------------
int goodG2B1_219()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_14 )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticTrue_14;
  if ( staticTrue_14 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB1A8: using guessed type int staticTrue_14;
// 6AB500: using guessed type int staticFalse_14;

//----- (00000000004566FC) ----------------------------------------------------
int goodG2B2_219()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_14 )
    v1 = -2;
  result = staticTrue_14;
  if ( staticTrue_14 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB1A8: using guessed type int staticTrue_14;

//----- (000000000045673C) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_05_good()
{
  goodB2G1_253();
  goodB2G2_253();
  goodG2B1_219();
  return goodG2B2_219();
}

//----- (000000000045676A) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_06_bad()
{
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_47C014, &v1);
  return printLongLongLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004567CD) ----------------------------------------------------
int goodB2G1_254()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_47C014, &v1);
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045685B) ----------------------------------------------------
int goodB2G2_254()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-10h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, &unk_47C014, &v1);
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004568DD) ----------------------------------------------------
int goodG2B1_220()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000456930) ----------------------------------------------------
int goodG2B2_220()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000456977) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_06_good()
{
  goodB2G1_254();
  goodB2G2_254();
  goodG2B1_220();
  return goodG2B2_220();
}

//----- (00000000004569A5) ----------------------------------------------------
int __fastcall badSink_69(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (00000000004569C6) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_41_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return badSink_69(v2);
}

//----- (0000000000456A30) ----------------------------------------------------
int __fastcall goodG2BSink_69(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000456A51) ----------------------------------------------------
int goodG2B_425()
{
  return goodG2BSink_69(-2);
}

//----- (0000000000456A73) ----------------------------------------------------
int __fastcall goodB2GSink_51(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000456AA6) ----------------------------------------------------
int goodB2G_391()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return goodB2GSink_51(v2);
}

//----- (0000000000456B10) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_rand_postdec_41_good()
{
  goodB2G_391();
  return goodG2B_425();
}

//----- (0000000000456B2A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54b_badSink(char a1)
{
  return CWE191_Integer_Underflow__char_min_postdec_54c_badSink(a1);
}

//----- (0000000000456B44) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54b_goodG2BSink(char a1)
{
  return CWE191_Integer_Underflow__char_min_postdec_54c_goodG2BSink(a1);
}

//----- (0000000000456B5E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_54b_goodB2GSink(char a1)
{
  return CWE191_Integer_Underflow__char_min_postdec_54c_goodB2GSink(a1);
}

//----- (0000000000456B78) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_01_bad()
{
  int v0; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  return printHexCharLine(v0 - 1);
}

//----- (0000000000456BD3) ----------------------------------------------------
int goodG2B_426()
{
  return printHexCharLine(-3);
}

//----- (0000000000456C01) ----------------------------------------------------
int goodB2G_392()
{
  int v0; // eax
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    rand();
    LOBYTE(v0) = rand();
  }
  else
  {
    rand();
    rand();
    v0 = ~rand();
  }
  if ( (_BYTE)v0 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(v0 - 1);
  return result;
}

//----- (0000000000456C6E) ----------------------------------------------------
int CWE191_Integer_Underflow__char_rand_postdec_01_good()
{
  goodG2B_426();
  return goodB2G_392();
}

//----- (0000000000456C88) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_52_bad()
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_52b_badSink(0x8000000000000000LL);
}

//----- (0000000000456CB4) ----------------------------------------------------
int goodG2B_427()
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_52b_goodG2BSink(-2LL);
}

//----- (0000000000456CDA) ----------------------------------------------------
int goodB2G_393()
{
  return CWE191_Integer_Underflow__int64_t_min_postdec_52b_goodB2GSink(0x8000000000000000LL);
}

//----- (0000000000456D06) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_52_good()
{
  goodG2B_427();
  return goodB2G_393();
}

//----- (0000000000456D20) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_51b_badSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (0000000000456D47) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_51b_goodG2BSink(__int64 a1)
{
  return printLongLongLine(a1 - 1);
}

//----- (0000000000456D6E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_min_postdec_51b_goodB2GSink(__int64 a1)
{
  int result; // eax

  if ( a1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(a1 - 1);
  return result;
}

//----- (0000000000456DB1) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_53c_badSink(char a1)
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_53d_badSink(a1);
}

//----- (0000000000456DCB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_53c_goodG2BSink(char a1)
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_53d_goodG2BSink(a1);
}

//----- (0000000000456DE5) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_53c_goodB2GSink(char a1)
{
  return CWE191_Integer_Underflow__char_fscanf_postdec_53d_goodB2GSink(a1);
}

//----- (0000000000456DFF) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_14_bad()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000456E5C) ----------------------------------------------------
int goodB2G1_255()
{
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000456ED9) ----------------------------------------------------
int goodB2G2_255()
{
  int result; // eax
  char v1; // [rsp+Eh] [rbp-2h]

  v1 = 32;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%c", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000456F4A) ----------------------------------------------------
int goodG2B1_221()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000456F9A) ----------------------------------------------------
int goodG2B2_221()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFive == 5 )
    v1 = -2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000456FDE) ----------------------------------------------------
int CWE191_Integer_Underflow__char_fscanf_postdec_14_good()
{
  goodB2G1_255();
  goodB2G2_255();
  goodG2B1_221();
  return goodG2B2_221();
}

//----- (000000000045700C) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_34_bad()
{
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v3 = v1 - 1;
  v2 = v1 - 1;
  return printUnsignedLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045705A) ----------------------------------------------------
int goodG2B_428()
{
  return printUnsignedLine(0xFFFFFFFD);
}

//----- (0000000000457092) ----------------------------------------------------
int goodB2G_394()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%u", &v1);
  v2 = v1;
  if ( v1 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004570F2) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_34_good()
{
  goodG2B_428();
  return goodB2G_394();
}

//----- (000000000045710C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_52b_badSink(char a1)
{
  return CWE191_Integer_Underflow__char_min_postdec_52c_badSink(a1);
}

//----- (0000000000457126) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_52b_goodG2BSink(char a1)
{
  return CWE191_Integer_Underflow__char_min_postdec_52c_goodG2BSink(a1);
}

//----- (0000000000457140) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_min_postdec_52b_goodB2GSink(char a1)
{
  return CWE191_Integer_Underflow__char_min_postdec_52c_goodB2GSink(a1);
}

//----- (000000000045715A) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_53_bad()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_53b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000457195) ----------------------------------------------------
int goodG2B_429()
{
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_53b_goodG2BSink(-2LL);
}

//----- (00000000004571BB) ----------------------------------------------------
int goodB2G_395()
{
  __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  return CWE191_Integer_Underflow__int64_t_fscanf_postdec_53b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004571F6) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_53_good()
{
  goodG2B_429();
  return goodB2G_395();
}

//----- (0000000000457210) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_64_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v4 = v1;
  return CWE191_Integer_Underflow__short_rand_postdec_64b_badSink(&v4);
}

//----- (0000000000457272) ----------------------------------------------------
int goodG2B_430()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = -2;
  return CWE191_Integer_Underflow__short_rand_postdec_64b_goodG2BSink(&v1);
}

//----- (0000000000457294) ----------------------------------------------------
int goodB2G_396()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  __int16 v4; // [rsp+Eh] [rbp-12h]

  v4 = 0;
  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  v4 = v1;
  return CWE191_Integer_Underflow__short_rand_postdec_64b_goodB2GSink(&v4);
}

//----- (00000000004572F6) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_64_good()
{
  goodG2B_430();
  return goodB2G_396();
}

//----- (0000000000457310) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_53c_badSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_53d_badSink(a1);
}

//----- (000000000045732A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_53c_goodG2BSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_53d_goodG2BSink(a1);
}

//----- (0000000000457344) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int64_t_rand_postdec_53c_goodB2GSink(__int64 a1)
{
  return CWE191_Integer_Underflow__int64_t_rand_postdec_53d_goodB2GSink(a1);
}

//----- (000000000045735E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54d_badSink(int a1)
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_54e_badSink(a1);
}

//----- (0000000000457375) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54d_goodG2BSink(int a1)
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_54e_goodG2BSink(a1);
}

//----- (000000000045738C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_connect_socket_postdec_54d_goodB2GSink(int a1)
{
  return CWE191_Integer_Underflow__int_connect_socket_postdec_54e_goodB2GSink(a1);
}

//----- (00000000004573A3) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_14_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000457400) ----------------------------------------------------
int goodB2G1_256()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( v1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (000000000045747F) ----------------------------------------------------
int goodB2G2_256()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( v1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v1 - 1);
  }
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB1B8: using guessed type int globalFive;

//----- (00000000004574F2) ----------------------------------------------------
int goodG2B1_222()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000457540) ----------------------------------------------------
int goodG2B2_222()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( globalFive == 5 )
    v1 = -2;
  result = globalFive;
  if ( globalFive == 5 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B8: using guessed type int globalFive;

//----- (0000000000457582) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_14_good()
{
  goodB2G1_256();
  goodB2G2_256();
  goodG2B1_222();
  return goodG2B2_222();
}

//----- (00000000004575B0) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int *v3; // [rsp+10h] [rbp-10h]
  int *v4; // [rsp+18h] [rbp-8h]

  v4 = &v2;
  v3 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  *v4 = v1;
  return printIntLine(*v3 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045761D) ----------------------------------------------------
int goodG2B_431()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -2;
  v1 = -2;
  v3 = -3;
  v2 = -3;
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000457674) ----------------------------------------------------
int goodB2G_397()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+Ch] [rbp-14h]
  int *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = 0;
  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  *v5 = v1;
  v3 = *v4;
  if ( v3 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v3 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004576F6) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_32_good()
{
  goodG2B_431();
  return goodB2G_397();
}

//----- (0000000000457710) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_11_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -128;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (000000000045775A) ----------------------------------------------------
int goodB2G1_257()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -128;
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( v1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 - 1);
}

//----- (00000000004577C2) ----------------------------------------------------
int goodB2G2_257()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -128;
  result = globalReturnsTrue();
  if ( result )
  {
    if ( v1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 - 1);
  }
  return result;
}

//----- (000000000045781E) ----------------------------------------------------
int goodG2B1_223()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (0000000000457874) ----------------------------------------------------
int goodG2B2_223()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( (unsigned int)globalReturnsTrue() )
    v1 = -2;
  result = globalReturnsTrue();
  if ( result )
    result = printHexCharLine(v1 - 1);
  return result;
}

//----- (00000000004578BE) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_11_good()
{
  goodB2G1_257();
  goodB2G2_257();
  goodG2B1_223();
  return goodG2B2_223();
}

//----- (00000000004578EC) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_02_bad()
{
  return printHexCharLine(127);
}

//----- (000000000045791A) ----------------------------------------------------
int goodB2G1_258()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000045795A) ----------------------------------------------------
int goodB2G2_258()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (000000000045799A) ----------------------------------------------------
int goodG2B1_224()
{
  return printHexCharLine(-3);
}

//----- (00000000004579C8) ----------------------------------------------------
int goodG2B2_224()
{
  return printHexCharLine(-3);
}

//----- (00000000004579F6) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_02_good()
{
  goodB2G1_258();
  goodB2G2_258();
  goodG2B1_224();
  return goodG2B2_224();
}

//----- (0000000000457A24) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_67_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__int_rand_postdec_67b_badSink(v2);
}

//----- (0000000000457A94) ----------------------------------------------------
int goodG2B_432()
{
  return CWE191_Integer_Underflow__int_rand_postdec_67b_goodG2BSink(-2);
}

//----- (0000000000457ABC) ----------------------------------------------------
int goodB2G_398()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  return CWE191_Integer_Underflow__int_rand_postdec_67b_goodB2GSink(v2);
}

//----- (0000000000457B2C) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_67_good()
{
  goodG2B_432();
  return goodB2G_398();
}

//----- (0000000000457B46) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_06_bad()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  return printIntLine((__int16)(v1 - 1));
}

//----- (0000000000457BCE) ----------------------------------------------------
int goodB2G1_259()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (0000000000457C76) ----------------------------------------------------
int goodB2G2_259()
{
  int v0; // ebx
  int v1; // eax
  int v2; // ebx
  int result; // eax

  if ( rand() & 1 )
  {
    rand();
    v0 = rand() << 15;
    LOWORD(v1) = v0 ^ rand();
  }
  else
  {
    rand();
    v2 = rand() << 15;
    v1 = ~(v2 ^ rand());
  }
  if ( (_WORD)v1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(v1 - 1));
  return result;
}

//----- (0000000000457D12) ----------------------------------------------------
int goodG2B1_225()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000457D66) ----------------------------------------------------
int goodG2B2_225()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000457DAE) ----------------------------------------------------
int CWE191_Integer_Underflow__short_rand_postdec_06_good()
{
  goodB2G1_259();
  goodB2G2_259();
  goodG2B1_225();
  return goodG2B2_225();
}

//----- (0000000000457DDC) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  v2 = 0;
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_66b_badSink((__int64)&v1);
}

//----- (0000000000457E06) ----------------------------------------------------
int goodG2B_433()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -2;
  v2 = -2;
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000457E30) ----------------------------------------------------
int goodB2G_399()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 0;
  v2 = 0;
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_66b_goodB2GSink((__int64)&v1);
}

//----- (0000000000457E5A) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_66_good()
{
  goodG2B_433();
  return goodB2G_399();
}

//----- (0000000000457E74) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_10_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalTrue )
    v1 = -128;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000457EB6) ----------------------------------------------------
int goodB2G1_260()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalTrue )
    v1 = -128;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( v1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 - 1);
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000457F16) ----------------------------------------------------
int goodB2G2_260()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalTrue )
    v1 = -128;
  result = globalTrue;
  if ( globalTrue )
  {
    if ( v1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 - 1);
  }
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000457F6A) ----------------------------------------------------
int goodG2B1_226()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;
// 6AB530: using guessed type int globalFalse;

//----- (0000000000457FB8) ----------------------------------------------------
int goodG2B2_226()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( globalTrue )
    v1 = -2;
  result = globalTrue;
  if ( globalTrue )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 6AB1B4: using guessed type int globalTrue;

//----- (0000000000457FFA) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_10_good()
{
  goodB2G1_260();
  goodB2G2_260();
  goodG2B1_226();
  return goodG2B2_226();
}

//----- (0000000000458028) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_53_bad()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE191_Integer_Underflow__short_fscanf_postdec_53b_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000458061) ----------------------------------------------------
int goodG2B_434()
{
  return CWE191_Integer_Underflow__short_fscanf_postdec_53b_goodG2BSink(-2);
}

//----- (0000000000458082) ----------------------------------------------------
int goodB2G_400()
{
  __int16 v1; // [rsp+Eh] [rbp-2h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return CWE191_Integer_Underflow__short_fscanf_postdec_53b_goodB2GSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004580BB) ----------------------------------------------------
int CWE191_Integer_Underflow__short_fscanf_postdec_53_good()
{
  goodG2B_434();
  return goodB2G_400();
}

//----- (00000000004580D5) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_05_bad()
{
  int result; // eax

  result = staticTrue_15;
  if ( staticTrue_15 )
    result = printUnsignedLine(0xFFFFFFFF);
  return result;
}
// 6AB1AC: using guessed type int staticTrue_15;

//----- (0000000000458115) ----------------------------------------------------
int goodB2G1_261()
{
  int result; // eax

  if ( staticFalse_15 )
    result = printLine("Benign, fixed string");
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 6AB1AC: using guessed type int staticTrue_15;
// 6AB504: using guessed type int staticFalse_15;

//----- (0000000000458173) ----------------------------------------------------
int goodB2G2_261()
{
  int result; // eax

  result = staticTrue_15;
  if ( staticTrue_15 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 6AB1AC: using guessed type int staticTrue_15;

//----- (00000000004581C5) ----------------------------------------------------
int goodG2B1_227()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_15 )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticTrue_15;
  if ( staticTrue_15 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB1AC: using guessed type int staticTrue_15;
// 6AB504: using guessed type int staticFalse_15;

//----- (0000000000458211) ----------------------------------------------------
int goodG2B2_227()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_15 )
    v1 = -2;
  result = staticTrue_15;
  if ( staticTrue_15 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 6AB1AC: using guessed type int staticTrue_15;

//----- (0000000000458251) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_05_good()
{
  goodB2G1_261();
  goodB2G2_261();
  goodG2B1_227();
  return goodG2B2_227();
}

//----- (000000000045827F) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_68b_badSink()
{
  return printLongLongLine(CWE191_Integer_Underflow__int64_t_rand_postdec_68_badData - 1);
}
// 6AB600: using guessed type __int64 CWE191_Integer_Underflow__int64_t_rand_postdec_68_badData;

//----- (00000000004582AD) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_68b_goodG2BSink()
{
  return printLongLongLine(CWE191_Integer_Underflow__int64_t_rand_postdec_68_goodG2BData - 1);
}
// 6AB610: using guessed type __int64 CWE191_Integer_Underflow__int64_t_rand_postdec_68_goodG2BData;

//----- (00000000004582DB) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_68b_goodB2GSink()
{
  int result; // eax

  if ( CWE191_Integer_Underflow__int64_t_rand_postdec_68_goodB2GData == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(CWE191_Integer_Underflow__int64_t_rand_postdec_68_goodB2GData - 1);
  return result;
}
// 6AB608: using guessed type __int64 CWE191_Integer_Underflow__int64_t_rand_postdec_68_goodB2GData;

//----- (0000000000458325) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_04_bad()
{
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_47C400, &v1);
  return printIntLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045837E) ----------------------------------------------------
int goodB2G1_262()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_47C400, &v1);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004583F9) ----------------------------------------------------
int goodB2G2_262()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-8h]

  v1 = 0;
  __isoc99_fscanf(stdin, &unk_47C400, &v1);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000458468) ----------------------------------------------------
int goodG2B1_228()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (00000000004584B2) ----------------------------------------------------
int goodG2B2_228()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (00000000004584F0) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_04_good()
{
  goodB2G1_262();
  goodB2G2_262();
  goodG2B1_228();
  return goodG2B2_228();
}

//----- (000000000045851E) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_31_bad()
{
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+4h] [rbp-Ch]
  int v3; // [rsp+8h] [rbp-8h]
  int v4; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v4 = v1;
  v3 = v1 - 1;
  v2 = v1 - 1;
  return printIntLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045856C) ----------------------------------------------------
int goodG2B_435()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (00000000004585A4) ----------------------------------------------------
int goodB2G_401()
{
  int result; // eax
  int v1; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v3 = v1;
  v2 = v1;
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000458607) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_31_good()
{
  goodG2B_435();
  return goodB2G_401();
}

//----- (0000000000458621) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_01_bad()
{
  return printHexCharLine(127);
}

//----- (000000000045864F) ----------------------------------------------------
int goodG2B_436()
{
  return printHexCharLine(-3);
}

//----- (000000000045867D) ----------------------------------------------------
int goodB2G_402()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004586BD) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_01_good()
{
  goodG2B_436();
  return goodB2G_402();
}

//----- (00000000004586D7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_66b_badSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) - 1);
}

//----- (0000000000458703) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_66b_goodG2BSink(__int64 a1)
{
  return printIntLine(*(_DWORD *)(a1 + 8) - 1);
}

//----- (000000000045872F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_listen_socket_postdec_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}

//----- (0000000000458770) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53d_badSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (0000000000458791) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53d_goodG2BSink(int a1)
{
  return printUnsignedLine(a1 - 1);
}

//----- (00000000004587B2) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_53d_goodB2GSink(int a1)
{
  int result; // eax

  if ( a1 )
    result = printUnsignedLine(a1 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (00000000004587E5) ----------------------------------------------------
__int64 __fastcall badSource_16(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000458812) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_42_bad()
{
  int v0; // eax

  v0 = badSource_16(0);
  return printIntLine(v0 - 1);
}

//----- (0000000000458844) ----------------------------------------------------
__int64 goodG2BSource_16()
{
  return 4294967294LL;
}

//----- (0000000000458857) ----------------------------------------------------
int goodG2B_437()
{
  int v0; // eax

  v0 = goodG2BSource_16();
  return printIntLine(v0 - 1);
}

//----- (0000000000458889) ----------------------------------------------------
__int64 __fastcall goodB2GSource_16(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004588B6) ----------------------------------------------------
int goodB2G_403()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = goodB2GSource_16(0);
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v1 - 1);
  return result;
}

//----- (00000000004588FD) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_42_good()
{
  goodB2G_403();
  return goodG2B_437();
}

//----- (0000000000458917) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_13_bad()
{
  int result; // eax

  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(0xFFFFFFFF);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000458959) ----------------------------------------------------
int goodB2G1_263()
{
  int result; // eax

  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLine("Benign, fixed string");
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004589B9) ----------------------------------------------------
int goodB2G2_263()
{
  int result; // eax

  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000458A0D) ----------------------------------------------------
int goodG2B1_229()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000458A5B) ----------------------------------------------------
int goodG2B2_229()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v1 = -2;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
    result = printUnsignedLine(v1 - 1);
  return result;
}
// 47CA5C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000458A9D) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_13_good()
{
  goodB2G1_263();
  goodB2G2_263();
  goodG2B1_229();
  return goodG2B2_229();
}

//----- (0000000000458ACB) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_66b_badSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) - 1);
}

//----- (0000000000458AF7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_66b_goodG2BSink(__int64 a1)
{
  return printUnsignedLine(*(_DWORD *)(a1 + 8) - 1);
}

//----- (0000000000458B23) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__unsigned_int_min_postdec_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  int v2; // [rsp+1Ch] [rbp-4h]

  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 )
    result = printUnsignedLine(v2 - 1);
  else
    result = printLine("data value is too large to perform arithmetic safely.");
  return result;
}

//----- (0000000000458B61) ----------------------------------------------------
int __fastcall badSink_70(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (0000000000458B8F) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__short_fscanf_postdec_44_bad()
{
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int (__fastcall *v2)(__int16); // [rsp+8h] [rbp-8h]

  v2 = badSink_70;
  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000458BD3) ----------------------------------------------------
int __fastcall goodG2BSink_70(__int16 a1)
{
  return printIntLine((__int16)(a1 - 1));
}

//----- (0000000000458C01) ----------------------------------------------------
int goodG2B_438()
{
  return goodG2BSink_70(-2);
}

//----- (0000000000458C2B) ----------------------------------------------------
int __fastcall goodB2GSink_52(__int16 a1)
{
  int result; // eax

  if ( a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(a1 - 1));
  return result;
}

//----- (0000000000458C6D) ----------------------------------------------------
__int64 goodB2G_404()
{
  __int16 v1; // [rsp+6h] [rbp-Ah]
  int (__fastcall *v2)(__int16); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_52;
  v1 = 0;
  __isoc99_fscanf(stdin, "%hd", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)((unsigned int)v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000458CB1) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__short_fscanf_postdec_44_good()
{
  goodG2B_438();
  return goodB2G_404();
}

//----- (0000000000458CCB) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_51_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE191_Integer_Underflow__int_fgets_postdec_51b_badSink(v4);
}

//----- (0000000000458D33) ----------------------------------------------------
int goodG2B_439()
{
  return CWE191_Integer_Underflow__int_fgets_postdec_51b_goodG2BSink(-2);
}

//----- (0000000000458D55) ----------------------------------------------------
int goodB2G_405()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE191_Integer_Underflow__int_fgets_postdec_51b_goodB2GSink(v4);
}

//----- (0000000000458DBD) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_51_good()
{
  goodG2B_439();
  return goodB2G_405();
}

//----- (0000000000458DD7) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__short_min_postdec_61b_badSource()
{
  return 0x8000LL;
}

//----- (0000000000458DED) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__short_min_postdec_61b_goodG2BSource()
{
  return 65534LL;
}

//----- (0000000000458E03) ----------------------------------------------------
__int64 CWE191_Integer_Underflow__short_min_postdec_61b_goodB2GSource()
{
  return 0x8000LL;
}

//----- (0000000000458E19) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_22_badSink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int_fscanf_postdec_22_badGlobal;
  if ( CWE191_Integer_Underflow__int_fscanf_postdec_22_badGlobal )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB508: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_22_badGlobal;

//----- (0000000000458E44) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_22_goodB2G1Sink(int a1)
{
  if ( CWE191_Integer_Underflow__int_fscanf_postdec_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(a1 - 1);
}
// 6AB50C: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_22_goodB2G1Global;

//----- (0000000000458E90) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_22_goodB2G2Sink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int_fscanf_postdec_22_goodB2G2Global;
  if ( CWE191_Integer_Underflow__int_fscanf_postdec_22_goodB2G2Global )
  {
    if ( a1 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(a1 - 1);
  }
  return result;
}
// 6AB510: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_22_goodB2G2Global;

//----- (0000000000458ED0) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fscanf_postdec_22_goodG2BSink(int a1)
{
  int result; // eax

  result = CWE191_Integer_Underflow__int_fscanf_postdec_22_goodG2BGlobal;
  if ( CWE191_Integer_Underflow__int_fscanf_postdec_22_goodG2BGlobal )
    result = printIntLine(a1 - 1);
  return result;
}
// 6AB514: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_22_goodG2BGlobal;

//----- (0000000000458EFB) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_09_bad()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    v1 = -128;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000458F3D) ----------------------------------------------------
int goodB2G1_264()
{
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    v1 = -128;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( v1 == -128 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printHexCharLine(v1 - 1);
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000458F9D) ----------------------------------------------------
int goodB2G2_264()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    v1 = -128;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( v1 == -128 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printHexCharLine(v1 - 1);
  }
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000458FF1) ----------------------------------------------------
int goodG2B1_230()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;
// 47CA58: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000045903F) ----------------------------------------------------
int goodG2B2_230()
{
  int result; // eax
  char v1; // [rsp+Fh] [rbp-1h]

  v1 = 32;
  if ( GLOBAL_CONST_TRUE )
    v1 = -2;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
    result = printHexCharLine(v1 - 1);
  return result;
}
// 47CA54: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000459081) ----------------------------------------------------
int CWE191_Integer_Underflow__char_min_postdec_09_good()
{
  goodB2G1_264();
  goodB2G2_264();
  goodG2B1_230();
  return goodG2B2_230();
}

//----- (00000000004590AF) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_32_bad()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = 2147483648;
  v1 = 2147483648;
  v3 = 0x7FFFFFFF;
  v2 = 0x7FFFFFFF;
  return printIntLine(0x7FFFFFFFu);
}

//----- (0000000000459106) ----------------------------------------------------
int goodG2B_440()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+4h] [rbp-1Ch]
  int v3; // [rsp+8h] [rbp-18h]
  int v4; // [rsp+Ch] [rbp-14h]
  int *v5; // [rsp+10h] [rbp-10h]
  int *v6; // [rsp+18h] [rbp-8h]

  v6 = &v1;
  v5 = &v1;
  v4 = -2;
  v1 = -2;
  v3 = -3;
  v2 = -3;
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000045915D) ----------------------------------------------------
int goodB2G_406()
{
  int v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+Ch] [rbp-14h]
  int *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 2147483648;
  v1 = 2147483648;
  v2 = 2147483648;
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (00000000004591C9) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_32_good()
{
  goodG2B_440();
  return goodB2G_406();
}

//----- (00000000004591E3) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_68_bad()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE191_Integer_Underflow__int64_t_rand_postdec_68_badData = v4;
  return CWE191_Integer_Underflow__int64_t_rand_postdec_68b_badSink();
}
// 6AB600: using guessed type __int64 CWE191_Integer_Underflow__int64_t_rand_postdec_68_badData;

//----- (00000000004592A9) ----------------------------------------------------
int goodG2B_441()
{
  CWE191_Integer_Underflow__int64_t_rand_postdec_68_goodG2BData = -2LL;
  return CWE191_Integer_Underflow__int64_t_rand_postdec_68b_goodG2BSink();
}
// 6AB610: using guessed type __int64 CWE191_Integer_Underflow__int64_t_rand_postdec_68_goodG2BData;

//----- (00000000004592D8) ----------------------------------------------------
int goodB2G_407()
{
  __int64 v0; // rbx
  __int64 v1; // rbx
  __int64 v2; // rbx
  __int64 v3; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx

  if ( rand() & 1 )
  {
    v0 = (__int64)rand() << 60;
    v1 = ((__int64)rand() << 45) ^ v0;
    v2 = ((__int64)rand() << 30) ^ v1;
    v3 = ((__int64)rand() << 15) ^ v2;
    v4 = v3 ^ rand();
  }
  else
  {
    v5 = (__int64)rand() << 60;
    v6 = ((__int64)rand() << 45) ^ v5;
    v7 = ((__int64)rand() << 30) ^ v6;
    v8 = ((__int64)rand() << 15) ^ v7;
    v4 = ~(v8 ^ rand());
  }
  CWE191_Integer_Underflow__int64_t_rand_postdec_68_goodB2GData = v4;
  return CWE191_Integer_Underflow__int64_t_rand_postdec_68b_goodB2GSink();
}
// 6AB608: using guessed type __int64 CWE191_Integer_Underflow__int64_t_rand_postdec_68_goodB2GData;

//----- (000000000045939E) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_rand_postdec_68_good()
{
  goodG2B_441();
  return goodB2G_407();
}

//----- (00000000004593B8) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_52_bad()
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_52b_badSink(0);
}

//----- (00000000004593DA) ----------------------------------------------------
int goodG2B_442()
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_52b_goodG2BSink(-2);
}

//----- (00000000004593FC) ----------------------------------------------------
int goodB2G_408()
{
  return CWE191_Integer_Underflow__unsigned_int_min_postdec_52b_goodB2GSink(0);
}

//----- (000000000045941E) ----------------------------------------------------
int CWE191_Integer_Underflow__unsigned_int_min_postdec_52_good()
{
  goodG2B_442();
  return goodB2G_408();
}

//----- (0000000000459438) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_63b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (0000000000459463) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_63b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (000000000045948E) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_63b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 - 1);
  return result;
}

//----- (00000000004594CE) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_31_bad()
{
  __int64 v1; // [rsp+0h] [rbp-20h]
  __int64 v2; // [rsp+8h] [rbp-18h]
  __int64 v3; // [rsp+10h] [rbp-10h]
  __int64 v4; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  v4 = v1;
  v3 = v1 - 1;
  v2 = v1 - 1;
  return printLongLongLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000459526) ----------------------------------------------------
int goodG2B_443()
{
  return printLongLongLine(-3LL);
}

//----- (0000000000459569) ----------------------------------------------------
int goodB2G_409()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-20h]
  __int64 v2; // [rsp+10h] [rbp-10h]
  __int64 v3; // [rsp+18h] [rbp-8h]

  v1 = 0LL;
  __isoc99_fscanf(stdin, "%ld", &v1);
  v3 = v1;
  v2 = v1;
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v2 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004595DD) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_fscanf_postdec_31_good()
{
  goodG2B_443();
  return goodB2G_409();
}

//----- (00000000004595F7) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_65b_badSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (0000000000459622) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_65b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000045964D) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_fscanf_postdec_65b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (000000000045968A) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_64b_badSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (00000000004596BD) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_64b_goodG2BSink(_DWORD *a1)
{
  return printIntLine(*a1 - 1);
}

//----- (00000000004596F0) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__int_fgets_postdec_64b_goodB2GSink(_DWORD *a1)
{
  int result; // eax

  if ( *a1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(*a1 - 1);
  return result;
}

//----- (0000000000459738) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54c_badSink(char a1)
{
  return CWE191_Integer_Underflow__char_rand_postdec_54d_badSink(a1);
}

//----- (0000000000459752) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54c_goodG2BSink(char a1)
{
  return CWE191_Integer_Underflow__char_rand_postdec_54d_goodG2BSink(a1);
}

//----- (000000000045976C) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_54c_goodB2GSink(char a1)
{
  return CWE191_Integer_Underflow__char_rand_postdec_54d_goodB2GSink(a1);
}

//----- (0000000000459786) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_22_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE191_Integer_Underflow__int_fscanf_postdec_22_badGlobal = 1;
  return CWE191_Integer_Underflow__int_fscanf_postdec_22_badSink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB508: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_22_badGlobal;

//----- (00000000004597C8) ----------------------------------------------------
int goodB2G1_265()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE191_Integer_Underflow__int_fscanf_postdec_22_goodB2G1Global = 0;
  return CWE191_Integer_Underflow__int_fscanf_postdec_22_goodB2G1Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB50C: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_22_goodB2G1Global;

//----- (000000000045980A) ----------------------------------------------------
int goodB2G2_265()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE191_Integer_Underflow__int_fscanf_postdec_22_goodB2G2Global = 1;
  return CWE191_Integer_Underflow__int_fscanf_postdec_22_goodB2G2Sink(v1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 6AB510: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_22_goodB2G2Global;

//----- (000000000045984C) ----------------------------------------------------
int goodG2B_444()
{
  CWE191_Integer_Underflow__int_fscanf_postdec_22_goodG2BGlobal = 1;
  return CWE191_Integer_Underflow__int_fscanf_postdec_22_goodG2BSink(-2);
}
// 6AB514: using guessed type int CWE191_Integer_Underflow__int_fscanf_postdec_22_goodG2BGlobal;

//----- (0000000000459878) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_22_good()
{
  goodB2G1_265();
  goodB2G2_265();
  return goodG2B_444();
}

//----- (000000000045989C) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_22_bad()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE191_Integer_Underflow__int_rand_postdec_22_badGlobal = 1;
  return CWE191_Integer_Underflow__int_rand_postdec_22_badSink(v2);
}
// 6AB518: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_22_badGlobal;

//----- (0000000000459910) ----------------------------------------------------
int goodB2G1_266()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE191_Integer_Underflow__int_rand_postdec_22_goodB2G1Global = 0;
  return CWE191_Integer_Underflow__int_rand_postdec_22_goodB2G1Sink(v2);
}
// 6AB51C: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_22_goodB2G1Global;

//----- (0000000000459984) ----------------------------------------------------
int goodB2G2_266()
{
  int v0; // ebx
  int v1; // ebx
  int v2; // eax
  int v3; // ebx
  int v4; // ebx

  if ( rand() & 1 )
  {
    v0 = rand() << 30;
    v1 = (rand() << 15) ^ v0;
    v2 = v1 ^ rand();
  }
  else
  {
    v3 = rand() << 30;
    v4 = (rand() << 15) ^ v3;
    v2 = ~(v4 ^ rand());
  }
  CWE191_Integer_Underflow__int_rand_postdec_22_goodB2G2Global = 1;
  return CWE191_Integer_Underflow__int_rand_postdec_22_goodB2G2Sink(v2);
}
// 6AB520: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_22_goodB2G2Global;

//----- (00000000004599F8) ----------------------------------------------------
int goodG2B_445()
{
  CWE191_Integer_Underflow__int_rand_postdec_22_goodG2BGlobal = 1;
  return CWE191_Integer_Underflow__int_rand_postdec_22_goodG2BSink(-2);
}
// 6AB524: using guessed type int CWE191_Integer_Underflow__int_rand_postdec_22_goodG2BGlobal;

//----- (0000000000459A24) ----------------------------------------------------
int CWE191_Integer_Underflow__int_rand_postdec_22_good()
{
  goodB2G1_266();
  goodB2G2_266();
  return goodG2B_445();
}

//----- (0000000000459A48) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_63b_badSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 - 1));
}

//----- (0000000000459A7F) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_63b_goodG2BSink(_WORD *a1)
{
  return printIntLine((__int16)(*a1 - 1));
}

//----- (0000000000459AB6) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__short_rand_postdec_63b_goodB2GSink(_WORD *a1)
{
  int result; // eax

  if ( *a1 == -32768 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine((__int16)(*a1 - 1));
  return result;
}

//----- (0000000000459B01) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_05_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( staticTrue_16 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticTrue_16;
  if ( staticTrue_16 )
    result = printIntLine(v4 - 1);
  return result;
}
// 6AB1B0: using guessed type int staticTrue_16;

//----- (0000000000459B87) ----------------------------------------------------
int goodB2G1_267()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( staticTrue_16 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( staticFalse_16 )
    return printLine("Benign, fixed string");
  if ( v4 == 0x80000000 )
    return printLine("data value is too large to perform arithmetic safely.");
  return printIntLine(v4 - 1);
}
// 6AB1B0: using guessed type int staticTrue_16;
// 6AB528: using guessed type int staticFalse_16;

//----- (0000000000459C2E) ----------------------------------------------------
int goodB2G2_267()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = 0;
  if ( staticTrue_16 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticTrue_16;
  if ( staticTrue_16 )
  {
    if ( v4 == 0x80000000 )
      result = printLine("data value is too large to perform arithmetic safely.");
    else
      result = printIntLine(v4 - 1);
  }
  return result;
}
// 6AB1B0: using guessed type int staticTrue_16;

//----- (0000000000459CC9) ----------------------------------------------------
int goodG2B1_231()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticFalse_16 )
    printLine("Benign, fixed string");
  else
    v1 = -2;
  result = staticTrue_16;
  if ( staticTrue_16 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B0: using guessed type int staticTrue_16;
// 6AB528: using guessed type int staticFalse_16;

//----- (0000000000459D15) ----------------------------------------------------
int goodG2B2_231()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  if ( staticTrue_16 )
    v1 = -2;
  result = staticTrue_16;
  if ( staticTrue_16 )
    result = printIntLine(v1 - 1);
  return result;
}
// 6AB1B0: using guessed type int staticTrue_16;

//----- (0000000000459D55) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fgets_postdec_05_good()
{
  goodB2G1_267();
  goodB2G2_267();
  goodG2B1_231();
  return goodG2B2_231();
}

//----- (0000000000459D83) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_04_bad()
{
  return printIntLine(0x7FFFFFFFu);
}

//----- (0000000000459DC1) ----------------------------------------------------
int goodB2G1_268()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000459E20) ----------------------------------------------------
int goodB2G2_268()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000459E73) ----------------------------------------------------
int goodG2B1_232()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000459EBD) ----------------------------------------------------
int goodG2B2_232()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000459EFB) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_04_good()
{
  goodB2G1_268();
  goodB2G2_268();
  goodG2B1_232();
  return goodG2B2_232();
}

//----- (0000000000459F29) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_31_bad()
{
  return printIntLine(0x7FFFFFFFu);
}

//----- (0000000000459F61) ----------------------------------------------------
int goodG2B_446()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (0000000000459F99) ----------------------------------------------------
int goodB2G_410()
{
  return printLine("data value is too large to perform arithmetic safely.");
}

//----- (0000000000459FE6) ----------------------------------------------------
int CWE191_Integer_Underflow__int_min_postdec_31_good()
{
  goodG2B_446();
  return goodB2G_410();
}

//----- (000000000045A000) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_61_bad()
{
  unsigned __int64 v0; // rax

  v0 = CWE191_Integer_Underflow__int64_t_min_postdec_61b_badSource();
  return printLongLongLine(v0 - 1);
}

//----- (000000000045A03B) ----------------------------------------------------
int goodG2B_447()
{
  __int64 v0; // rax

  v0 = CWE191_Integer_Underflow__int64_t_min_postdec_61b_goodG2BSource();
  return printLongLongLine(v0 - 1);
}

//----- (000000000045A076) ----------------------------------------------------
int goodB2G_411()
{
  int result; // eax
  unsigned __int64 v1; // [rsp+8h] [rbp-8h]

  v1 = CWE191_Integer_Underflow__int64_t_min_postdec_61b_goodB2GSource();
  if ( v1 == 0x8000000000000000LL )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printLongLongLine(v1 - 1);
  return result;
}

//----- (000000000045A0CD) ----------------------------------------------------
int CWE191_Integer_Underflow__int64_t_min_postdec_61_good()
{
  goodG2B_447();
  return goodB2G_411();
}

//----- (000000000045A0E7) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_34_bad()
{
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v3 = v1 - 1;
  v2 = v1 - 1;
  return printIntLine(v1 - 1);
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045A135) ----------------------------------------------------
int goodG2B_448()
{
  return printIntLine(0xFFFFFFFD);
}

//----- (000000000045A16D) ----------------------------------------------------
int goodB2G_412()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  int v2; // [rsp+Ch] [rbp-4h]

  v1 = 0;
  __isoc99_fscanf(stdin, "%d", &v1);
  v2 = v1;
  if ( v1 == 0x80000000 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printIntLine(v2 - 1);
  return result;
}
// 400C30: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045A1D0) ----------------------------------------------------
int CWE191_Integer_Underflow__int_fscanf_postdec_34_good()
{
  goodG2B_448();
  return goodB2G_412();
}

//----- (000000000045A1EA) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_65b_badSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000045A215) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_65b_goodG2BSink(char a1)
{
  return printHexCharLine(a1 - 1);
}

//----- (000000000045A240) ----------------------------------------------------
int __fastcall CWE191_Integer_Underflow__char_rand_postdec_65b_goodB2GSink(char a1)
{
  int result; // eax

  if ( a1 == -128 )
    result = printLine("data value is too large to perform arithmetic safely.");
  else
    result = printHexCharLine(a1 - 1);
  return result;
}

//----- (000000000045A27D) ----------------------------------------------------
int __fastcall printLine(const char *a1)
{
  int result; // eax

  if ( a1 )
    result = puts(a1);
  return result;
}

//----- (000000000045A29E) ----------------------------------------------------
int __fastcall printWLine(__int64 a1)
{
  int result; // eax

  if ( a1 )
    result = wprintf("%", a1);
  return result;
}

//----- (000000000045A2C9) ----------------------------------------------------
int __fastcall printIntLine(unsigned int a1)
{
  return printf("%d\n", a1);
}

//----- (000000000045A2EA) ----------------------------------------------------
int __fastcall printShortLine(__int16 a1)
{
  return printf("%hd\n", (unsigned int)a1);
}

//----- (000000000045A30F) ----------------------------------------------------
int __fastcall printFloatLine(float a1)
{
  return printf("%f\n", a1);
}

//----- (000000000045A335) ----------------------------------------------------
int __fastcall printLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (000000000045A359) ----------------------------------------------------
int __fastcall printLongLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (000000000045A37D) ----------------------------------------------------
int __fastcall printSizeTLine(__int64 a1)
{
  return printf("%zu\n", a1);
}

//----- (000000000045A3A1) ----------------------------------------------------
int __fastcall printHexCharLine(char a1)
{
  return printf("%02x\n", (unsigned int)a1);
}

//----- (000000000045A3C5) ----------------------------------------------------
int __fastcall printWcharLine(int a1)
{
  int v2; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+14h] [rbp-Ch]

  v2 = a1;
  v3 = 0;
  return printf("%ls\n", &v2);
}

//----- (000000000045A3F5) ----------------------------------------------------
int __fastcall printUnsignedLine(unsigned int a1)
{
  return printf("%u\n", a1);
}

//----- (000000000045A416) ----------------------------------------------------
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1)
{
  return printf("%02x\n", a1);
}

//----- (000000000045A43A) ----------------------------------------------------
int __fastcall printDoubleLine(double a1)
{
  return printf("%g\n", a1);
}

//----- (000000000045A465) ----------------------------------------------------
int __fastcall printStructLine(unsigned int *a1)
{
  return printf("%d -- %d\n", *a1, a1[1]);
}

//----- (000000000045A491) ----------------------------------------------------
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2)
{
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; i < a2; ++i )
    printf("%02x", *(unsigned __int8 *)(a1 + i));
  return puts(s);
}

//----- (000000000045A4E8) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL;
        i < a2
     && (*__ctype_b_loc())[*(char *)(2 * i + v4)] & 0x1000
     && (*__ctype_b_loc())[*(char *)(2 * i + 1 + v4)] & 0x1000;
        ++i )
  {
    __isoc99_sscanf(2 * i + v4, "%02x", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400C60: using guessed type __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045A5C1) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL; i < a2 && iswxdigit(*(_DWORD *)(8 * i + v4)) && iswxdigit(*(_DWORD *)(8 * i + 4 + v4)); ++i )
  {
    __isoc99_swscanf(8 * i + v4, "%", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400D70: using guessed type __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045A675) ----------------------------------------------------
__int64 globalReturnsTrue()
{
  return 1LL;
}

//----- (000000000045A680) ----------------------------------------------------
__int64 globalReturnsFalse()
{
  return 0LL;
}

//----- (000000000045A68B) ----------------------------------------------------
__int64 globalReturnsTrueOrFalse()
{
  return (unsigned int)(rand() % 2);
}

//----- (000000000045A6A1) ----------------------------------------------------
void good1()
{
  ;
}

//----- (000000000045A6A7) ----------------------------------------------------
void good2()
{
  ;
}

//----- (000000000045A6AD) ----------------------------------------------------
void good3()
{
  ;
}

//----- (000000000045A6B3) ----------------------------------------------------
void good4()
{
  ;
}

//----- (000000000045A6B9) ----------------------------------------------------
void good5()
{
  ;
}

//----- (000000000045A6BF) ----------------------------------------------------
void good6()
{
  ;
}

//----- (000000000045A6C5) ----------------------------------------------------
void good7()
{
  ;
}

//----- (000000000045A6CB) ----------------------------------------------------
void good8()
{
  ;
}

//----- (000000000045A6D1) ----------------------------------------------------
void good9()
{
  ;
}

//----- (000000000045A6D7) ----------------------------------------------------
void bad1()
{
  ;
}

//----- (000000000045A6DD) ----------------------------------------------------
void bad2()
{
  ;
}

//----- (000000000045A6E3) ----------------------------------------------------
void bad3()
{
  ;
}

//----- (000000000045A6E9) ----------------------------------------------------
void bad4()
{
  ;
}

//----- (000000000045A6EF) ----------------------------------------------------
void bad5()
{
  ;
}

//----- (000000000045A6F5) ----------------------------------------------------
void bad6()
{
  ;
}

//----- (000000000045A6FB) ----------------------------------------------------
void bad7()
{
  ;
}

//----- (000000000045A701) ----------------------------------------------------
void bad8()
{
  ;
}

//----- (000000000045A707) ----------------------------------------------------
void bad9()
{
  ;
}

//----- (000000000045A70D) ----------------------------------------------------
void __fastcall __noreturn internal_start(void *a1)
{
  (*((void (__fastcall **)(_QWORD))a1 + 1))(*((_QWORD *)a1 + 2));
  pthread_exit(0LL);
}

//----- (000000000045A740) ----------------------------------------------------
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3)
{
  __int64 result; // rax
  void **v4; // [rsp+8h] [rbp-28h]
  pthread_t newthread; // [rsp+20h] [rbp-10h]
  void *arg; // [rsp+28h] [rbp-8h]

  v4 = a3;
  *a3 = 0LL;
  arg = malloc(0x18uLL);
  if ( !arg )
    return 0LL;
  *((_QWORD *)arg + 1) = a1;
  *((_QWORD *)arg + 2) = a2;
  if ( pthread_create(&newthread, 0LL, (void *(*)(void *))internal_start, arg) )
  {
    free(arg);
    result = 0LL;
  }
  else
  {
    *(_QWORD *)arg = newthread;
    *v4 = arg;
    result = 1LL;
  }
  return result;
}

//----- (000000000045A7E4) ----------------------------------------------------
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1)
{
  void *thread_return; // [rsp+18h] [rbp-8h]

  return pthread_join(*a1, &thread_return) == 0;
}

//----- (000000000045A818) ----------------------------------------------------
__int64 __fastcall stdThreadDestroy(void *a1)
{
  free(a1);
  return 1LL;
}

//----- (000000000045A837) ----------------------------------------------------
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1)
{
  __int64 result; // rax
  pthread_mutex_t *mutex; // [rsp+18h] [rbp-8h]

  *a1 = 0LL;
  mutex = (pthread_mutex_t *)malloc(0x28uLL);
  if ( !mutex )
    return 0LL;
  if ( pthread_mutex_init(mutex, 0LL) )
  {
    free(a1);
    result = 0LL;
  }
  else
  {
    *a1 = mutex;
    result = 1LL;
  }
  return result;
}

//----- (000000000045A8AC) ----------------------------------------------------
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1)
{
  return pthread_mutex_lock(a1);
}

//----- (000000000045A8C6) ----------------------------------------------------
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1)
{
  return pthread_mutex_unlock(a1);
}

//----- (000000000045A8E0) ----------------------------------------------------
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1)
{
  pthread_mutex_destroy(a1);
  free(a1);
}

//----- (000000000045A910) ----------------------------------------------------
void _libc_csu_init(void)
{
  __int64 v0; // rbx
  signed __int64 v1; // rbp

  v0 = 0LL;
  v1 = &_do_global_dtors_aux_fini_array_entry - _frame_dummy_init_array_entry;
  init_proc();
  if ( v1 )
  {
    do
      _frame_dummy_init_array_entry[v0++]();
    while ( v0 != v1 );
  }
}
// 6AADD0: using guessed type __int64 (__fastcall *_frame_dummy_init_array_entry[2])();
// 6AADD8: using guessed type __int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)();

//----- (000000000045A984) ----------------------------------------------------
void term_proc()
{
  ;
}

// ALL OK, 4610 function(s) have been successfully decompiled
