/* This file was generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2018 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

void *init_proc();
__int64 sub_400900();
// int printf(const char *format, ...);
// int puts(const char *s);
// __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD); weak
// void *malloc(size_t size);
// int __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end);
// int unlink(const char *name);
// int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr);
// int iswxdigit(wint_t wc);
// void free(void *ptr);
// int pthread_create(pthread_t *newthread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);
// const unsigned __int16 **__ctype_b_loc(void);
// int pthread_join(pthread_t th, void **thread_return);
// void __noreturn pthread_exit(void *retval);
// int wprintf(const wchar_t *format, ...);
// __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD); weak
// void srand(unsigned int seed);
// int pthread_mutex_lock(pthread_mutex_t *mutex);
// int rand(void);
// int pthread_mutex_destroy(pthread_mutex_t *mutex);
// int pthread_mutex_unlock(pthread_mutex_t *mutex);
// time_t time(time_t *timer);
// __int64 _gmon_start__(void); weak
// void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>);
__int64 deregister_tm_clones();
__int64 register_tm_clones();
__int64 _do_global_dtors_aux();
__int64 frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
void __noreturn CWE511_Logic_Time_Bomb__counter_15_bad();
void __noreturn good1();
void __noreturn good2();
void __noreturn CWE511_Logic_Time_Bomb__counter_15_good();
int CWE511_Logic_Time_Bomb__rand_04_bad();
int good1_0();
int good2_0();
int CWE511_Logic_Time_Bomb__rand_04_good();
int CWE511_Logic_Time_Bomb__time_09_bad();
int good1_1();
int good2_1();
int CWE511_Logic_Time_Bomb__time_09_good();
int CWE511_Logic_Time_Bomb__time_16_bad();
int good1_2();
int CWE511_Logic_Time_Bomb__time_16_good();
int CWE511_Logic_Time_Bomb__rand_06_bad();
int good1_3();
int good2_2();
int CWE511_Logic_Time_Bomb__rand_06_good();
void __noreturn CWE511_Logic_Time_Bomb__counter_01_bad();
void __noreturn good1_4();
void __noreturn CWE511_Logic_Time_Bomb__counter_01_good();
int CWE511_Logic_Time_Bomb__time_10_bad();
int good1_5();
int good2_3();
int CWE511_Logic_Time_Bomb__time_10_good();
void CWE511_Logic_Time_Bomb__rand_17_bad();
void good1_6();
void CWE511_Logic_Time_Bomb__rand_17_good();
int CWE511_Logic_Time_Bomb__time_05_bad();
int good1_7();
int good2_4();
int CWE511_Logic_Time_Bomb__time_05_good();
int CWE511_Logic_Time_Bomb__time_15_bad();
int good1_8();
int good2_5();
int CWE511_Logic_Time_Bomb__time_15_good();
int CWE511_Logic_Time_Bomb__rand_11_bad();
int good1_9();
int good2_6();
int CWE511_Logic_Time_Bomb__rand_11_good();
int CWE511_Logic_Time_Bomb__rand_02_bad();
int good1_10();
int good2_7();
int CWE511_Logic_Time_Bomb__rand_02_good();
__int64 CWE511_Logic_Time_Bomb__counter_09_bad();
int good1_11();
__int64 good2_8();
__int64 CWE511_Logic_Time_Bomb__counter_09_good();
__int64 CWE511_Logic_Time_Bomb__counter_13_bad();
int good1_12();
__int64 good2_9();
__int64 CWE511_Logic_Time_Bomb__counter_13_good();
int CWE511_Logic_Time_Bomb__time_01_bad();
int good1_13();
int CWE511_Logic_Time_Bomb__time_01_good();
int CWE511_Logic_Time_Bomb__rand_05_bad();
int good1_14();
int good2_10();
int CWE511_Logic_Time_Bomb__rand_05_good();
int CWE511_Logic_Time_Bomb__rand_16_bad();
int good1_15();
int CWE511_Logic_Time_Bomb__rand_16_good();
int CWE511_Logic_Time_Bomb__rand_10_bad();
int good1_16();
int good2_11();
int CWE511_Logic_Time_Bomb__rand_10_good();
void CWE511_Logic_Time_Bomb__counter_06_bad();
void good1_17();
void good2_12();
void CWE511_Logic_Time_Bomb__counter_06_good();
__int64 staticReturnsTrue();
__int64 staticReturnsFalse();
int CWE511_Logic_Time_Bomb__time_08_bad();
int good1_18();
int good2_13();
int CWE511_Logic_Time_Bomb__time_08_good();
int CWE511_Logic_Time_Bomb__rand_15_bad();
int good1_19();
int good2_14();
int CWE511_Logic_Time_Bomb__rand_15_good();
int CWE511_Logic_Time_Bomb__rand_01_bad();
int good1_20();
int CWE511_Logic_Time_Bomb__rand_01_good();
int CWE511_Logic_Time_Bomb__rand_07_bad();
int good1_21();
int good2_15();
int CWE511_Logic_Time_Bomb__rand_07_good();
int CWE511_Logic_Time_Bomb__time_06_bad();
int good1_22();
int good2_16();
int CWE511_Logic_Time_Bomb__time_06_good();
int CWE511_Logic_Time_Bomb__time_13_bad();
int good1_23();
int good2_17();
int CWE511_Logic_Time_Bomb__time_13_good();
void __noreturn CWE511_Logic_Time_Bomb__counter_12_bad();
void __noreturn good1_24();
void __noreturn CWE511_Logic_Time_Bomb__counter_12_good();
int CWE511_Logic_Time_Bomb__rand_09_bad();
int good1_25();
int good2_18();
int CWE511_Logic_Time_Bomb__rand_09_good();
__int64 staticReturnsTrue_0();
__int64 staticReturnsFalse_0();
int CWE511_Logic_Time_Bomb__rand_08_bad();
int good1_26();
int good2_19();
int CWE511_Logic_Time_Bomb__rand_08_good();
__int64 CWE511_Logic_Time_Bomb__counter_05_bad();
int good1_27();
__int64 good2_20();
__int64 CWE511_Logic_Time_Bomb__counter_05_good();
__int64 CWE511_Logic_Time_Bomb__counter_14_bad();
int good1_28();
__int64 good2_21();
__int64 CWE511_Logic_Time_Bomb__counter_14_good();
void __noreturn CWE511_Logic_Time_Bomb__counter_18_bad();
void __noreturn good1_29();
void __noreturn CWE511_Logic_Time_Bomb__counter_18_good();
int CWE511_Logic_Time_Bomb__rand_13_bad();
int good1_30();
int good2_22();
int CWE511_Logic_Time_Bomb__rand_13_good();
__int64 staticReturnsTrue_1();
__int64 staticReturnsFalse_1();
__int64 CWE511_Logic_Time_Bomb__counter_08_bad();
int good1_31();
__int64 good2_23();
__int64 CWE511_Logic_Time_Bomb__counter_08_good();
int CWE511_Logic_Time_Bomb__time_03_bad();
int good1_32();
int good2_24();
int CWE511_Logic_Time_Bomb__time_03_good();
__int64 CWE511_Logic_Time_Bomb__counter_11_bad();
int good1_33();
__int64 good2_25();
__int64 CWE511_Logic_Time_Bomb__counter_11_good();
__int64 CWE511_Logic_Time_Bomb__counter_07_bad();
int good1_34();
__int64 good2_26();
__int64 CWE511_Logic_Time_Bomb__counter_07_good();
int CWE511_Logic_Time_Bomb__time_18_bad();
int good1_35();
int CWE511_Logic_Time_Bomb__time_18_good();
int CWE511_Logic_Time_Bomb__time_07_bad();
int good1_36();
int good2_27();
int CWE511_Logic_Time_Bomb__time_07_good();
void CWE511_Logic_Time_Bomb__counter_04_bad();
void good1_37();
void good2_28();
void CWE511_Logic_Time_Bomb__counter_04_good();
void CWE511_Logic_Time_Bomb__counter_17_bad();
void good1_38();
void CWE511_Logic_Time_Bomb__counter_17_good();
int CWE511_Logic_Time_Bomb__rand_03_bad();
int good1_39();
int good2_29();
int CWE511_Logic_Time_Bomb__rand_03_good();
void __noreturn CWE511_Logic_Time_Bomb__counter_03_bad();
void __noreturn good1_40();
void __noreturn good2_30();
void __noreturn CWE511_Logic_Time_Bomb__counter_03_good();
int CWE511_Logic_Time_Bomb__time_12_bad();
int good1_41();
int CWE511_Logic_Time_Bomb__time_12_good();
int CWE511_Logic_Time_Bomb__rand_14_bad();
int good1_42();
int good2_31();
int CWE511_Logic_Time_Bomb__rand_14_good();
int CWE511_Logic_Time_Bomb__rand_18_bad();
int good1_43();
int CWE511_Logic_Time_Bomb__rand_18_good();
int CWE511_Logic_Time_Bomb__time_04_bad();
int good1_44();
int good2_32();
int CWE511_Logic_Time_Bomb__time_04_good();
void __noreturn CWE511_Logic_Time_Bomb__counter_02_bad();
void __noreturn good1_45();
void __noreturn good2_33();
void __noreturn CWE511_Logic_Time_Bomb__counter_02_good();
int CWE511_Logic_Time_Bomb__time_17_bad();
int good1_46();
int CWE511_Logic_Time_Bomb__time_17_good();
void __noreturn CWE511_Logic_Time_Bomb__counter_16_bad();
void __noreturn good1_47();
void __noreturn CWE511_Logic_Time_Bomb__counter_16_good();
int CWE511_Logic_Time_Bomb__rand_12_bad();
int good1_48();
int CWE511_Logic_Time_Bomb__rand_12_good();
__int64 CWE511_Logic_Time_Bomb__counter_10_bad();
int good1_49();
__int64 good2_34();
__int64 CWE511_Logic_Time_Bomb__counter_10_good();
int CWE511_Logic_Time_Bomb__time_14_bad();
int good1_50();
int good2_35();
int CWE511_Logic_Time_Bomb__time_14_good();
int CWE511_Logic_Time_Bomb__time_11_bad();
int good1_51();
int good2_36();
int CWE511_Logic_Time_Bomb__time_11_good();
int CWE511_Logic_Time_Bomb__time_02_bad();
int good1_52();
int good2_37();
int CWE511_Logic_Time_Bomb__time_02_good();
int __fastcall printLine(const char *a1);
int __fastcall printWLine(__int64 a1);
int __fastcall printIntLine(unsigned int a1);
int __fastcall printShortLine(__int16 a1);
int __fastcall printFloatLine(float a1);
int __fastcall printLongLine(__int64 a1);
int __fastcall printLongLongLine(__int64 a1);
int __fastcall printSizeTLine(__int64 a1);
int __fastcall printHexCharLine(char a1);
int __fastcall printWcharLine(int a1);
int __fastcall printUnsignedLine(unsigned int a1);
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1);
int __fastcall printDoubleLine(double a1);
int __fastcall printStructLine(unsigned int *a1);
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2);
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3);
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3);
__int64 globalReturnsTrue();
__int64 globalReturnsFalse();
__int64 globalReturnsTrueOrFalse();
void good1_53();
void good2_38();
void good3();
void good4();
void good5();
void good6();
void good7();
void good8();
void good9();
void bad1();
void bad2();
void bad3();
void bad4();
void bad5();
void bad6();
void bad7();
void bad8();
void bad9();
void __fastcall __noreturn internal_start(void *a1);
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3);
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1);
__int64 __fastcall stdThreadDestroy(void *a1);
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1);
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1);
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1);
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1);
void _libc_csu_init(void); // idb
void _libc_csu_fini(void); // idb
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

char s[3] = { '\0', '\0', '\0' }; // idb
int GLOBAL_CONST_TRUE = 1; // weak
int GLOBAL_CONST_FALSE = 0; // weak
int GLOBAL_CONST_FIVE = 5; // weak
__int64 (__fastcall *_frame_dummy_init_array_entry[2])() = { &frame_dummy, &_do_global_dtors_aux }; // weak
__int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)() = &_do_global_dtors_aux; // weak
__int64 (*qword_609010)(void) = NULL; // weak
int staticTrue = 1; // weak
int staticTrue_0 = 1; // weak
int staticFive = 5; // weak
int staticTrue_1 = 1; // weak
int staticFive_0 = 5; // weak
int staticFive_1 = 5; // weak
int globalTrue = 1; // weak
int globalFive = 5; // weak
char completed_6355; // weak
int staticFalse; // weak
int staticFalse_0; // weak
int staticFalse_1; // weak
int globalFalse; // weak
int globalArgc; // weak
__int64 globalArgv; // weak
// extern _UNKNOWN __gmon_start__; weak


//----- (00000000004008E0) ----------------------------------------------------
void *init_proc()
{
  void *result; // rax

  result = &__gmon_start__;
  if ( &__gmon_start__ )
    result = (void *)_gmon_start__();
  return result;
}
// 400A60: using guessed type __int64 _gmon_start__(void);

//----- (0000000000400900) ----------------------------------------------------
__int64 sub_400900()
{
  return qword_609010();
}
// 609010: using guessed type __int64 (*qword_609010)(void);

//----- (0000000000400A70) ----------------------------------------------------
// positive sp value has been detected, the output may be wrong!
void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>)
{
  int v2; // esi
  int v3; // [rsp-8h] [rbp-8h]
  __int64 _0; // [rsp+0h] [rbp+0h]

  v2 = v3;
  *(_QWORD *)&v3 = a1;
  __libc_start_main(
    (int (__fastcall *)(int, char **, char **))main,
    v2,
    (char **)&_0,
    _libc_csu_init,
    _libc_csu_fini,
    a2,
    &v3);
  __halt();
}
// 400A76: positive sp value 8 has been found

//----- (0000000000400AA0) ----------------------------------------------------
__int64 deregister_tm_clones()
{
  __int64 result; // rax

  result = 6328559LL - (_QWORD)&completed_6355;
  if ( (unsigned __int64)(6328559LL - (_QWORD)&completed_6355) > 0xE )
    result = 0LL;
  return result;
}
// 6090E8: using guessed type char completed_6355;

//----- (0000000000400AD0) ----------------------------------------------------
__int64 register_tm_clones()
{
  return 0LL;
}

//----- (0000000000400B10) ----------------------------------------------------
__int64 _do_global_dtors_aux()
{
  __int64 result; // rax

  if ( !completed_6355 )
  {
    result = deregister_tm_clones();
    completed_6355 = 1;
  }
  return result;
}
// 6090E8: using guessed type char completed_6355;

//----- (0000000000400B30) ----------------------------------------------------
__int64 frame_dummy()
{
  return register_tm_clones();
}
// 400B30: could not find valid save-restore pair for rbp

//----- (0000000000400B5D) ----------------------------------------------------
int __cdecl __noreturn main(int argc, const char **argv, const char **envp)
{
  unsigned int v3; // eax

  v3 = time(0LL);
  srand(v3);
  globalArgc = argc;
  globalArgv = (__int64)argv;
  printLine("Calling CWE511_Logic_Time_Bomb__time_15_good();");
  CWE511_Logic_Time_Bomb__time_15_good();
  printLine("Calling CWE511_Logic_Time_Bomb__counter_09_good();");
  CWE511_Logic_Time_Bomb__counter_09_good();
  printLine("Calling CWE511_Logic_Time_Bomb__time_04_good();");
  CWE511_Logic_Time_Bomb__time_04_good();
  printLine("Calling CWE511_Logic_Time_Bomb__counter_06_good();");
  CWE511_Logic_Time_Bomb__counter_06_good();
  printLine("Calling CWE511_Logic_Time_Bomb__time_05_good();");
  CWE511_Logic_Time_Bomb__time_05_good();
  printLine("Calling CWE511_Logic_Time_Bomb__rand_11_good();");
  CWE511_Logic_Time_Bomb__rand_11_good();
  printLine("Calling CWE511_Logic_Time_Bomb__rand_17_good();");
  CWE511_Logic_Time_Bomb__rand_17_good();
  printLine("Calling CWE511_Logic_Time_Bomb__rand_08_good();");
  CWE511_Logic_Time_Bomb__rand_08_good();
  printLine("Calling CWE511_Logic_Time_Bomb__counter_16_good();");
  CWE511_Logic_Time_Bomb__counter_16_good();
}
// 6090FC: using guessed type int globalArgc;
// 609100: using guessed type __int64 globalArgv;

//----- (0000000000401408) ----------------------------------------------------
void __noreturn CWE511_Logic_Time_Bomb__counter_15_bad()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      unlink("important_file.txt");
  }
}

//----- (0000000000401430) ----------------------------------------------------
void __noreturn good1()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      printLine("Happy New Year!");
  }
}

//----- (0000000000401458) ----------------------------------------------------
void __noreturn good2()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      printLine("Happy New Year!");
  }
}

//----- (0000000000401480) ----------------------------------------------------
void __noreturn CWE511_Logic_Time_Bomb__counter_15_good()
{
  good1();
}

//----- (000000000040149A) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_04_bad()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = unlink("important_file.txt");
  return result;
}

//----- (00000000004014D0) ----------------------------------------------------
int good1_0()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000401512) ----------------------------------------------------
int good2_0()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000401548) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_04_good()
{
  good1_0();
  return good2_0();
}

//----- (0000000000401562) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_09_bad()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = unlink("important_file.txt");
  }
  return result;
}
// 405FF8: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000401598) ----------------------------------------------------
int good1_1()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}
// 405FFC: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004015DA) ----------------------------------------------------
int good2_1()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = printLine("Happy New Year!");
  }
  return result;
}
// 405FF8: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000401610) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_09_good()
{
  good1_1();
  return good2_1();
}

//----- (000000000040162A) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_16_bad()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = unlink("important_file.txt");
  return result;
}

//----- (0000000000401657) ----------------------------------------------------
int good1_2()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000401684) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_16_good()
{
  return good1_2();
}

//----- (0000000000401694) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_06_bad()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = unlink("important_file.txt");
  return result;
}

//----- (00000000004016CB) ----------------------------------------------------
int good1_3()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (000000000040170E) ----------------------------------------------------
int good2_2()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000401745) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_06_good()
{
  good1_3();
  return good2_2();
}

//----- (000000000040175F) ----------------------------------------------------
void __noreturn CWE511_Logic_Time_Bomb__counter_01_bad()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      unlink("important_file.txt");
  }
}

//----- (0000000000401787) ----------------------------------------------------
void __noreturn good1_4()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      printLine("Happy New Year!");
  }
}

//----- (00000000004017AF) ----------------------------------------------------
void __noreturn CWE511_Logic_Time_Bomb__counter_01_good()
{
  good1_4();
}

//----- (00000000004017BF) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_10_bad()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  result = globalTrue;
  if ( globalTrue )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = unlink("important_file.txt");
  }
  return result;
}
// 6090DC: using guessed type int globalTrue;

//----- (00000000004017F5) ----------------------------------------------------
int good1_5()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  if ( globalFalse )
    return printLine("Benign, fixed string");
  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}
// 6090F8: using guessed type int globalFalse;

//----- (0000000000401837) ----------------------------------------------------
int good2_3()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  result = globalTrue;
  if ( globalTrue )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = printLine("Happy New Year!");
  }
  return result;
}
// 6090DC: using guessed type int globalTrue;

//----- (000000000040186D) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_10_good()
{
  good1_5();
  return good2_3();
}

//----- (0000000000401887) ----------------------------------------------------
void CWE511_Logic_Time_Bomb__rand_17_bad()
{
  unsigned int v0; // eax
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; i <= 0; ++i )
  {
    v0 = time(0LL);
    srand(v0);
    if ( rand() == 20000 )
      unlink("important_file.txt");
  }
}

//----- (00000000004018CB) ----------------------------------------------------
void good1_6()
{
  unsigned int v0; // eax
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; i <= 0; ++i )
  {
    v0 = time(0LL);
    srand(v0);
    if ( rand() == 20000 )
      printLine("Happy New Year!");
  }
}

//----- (000000000040190F) ----------------------------------------------------
void CWE511_Logic_Time_Bomb__rand_17_good()
{
  good1_6();
}

//----- (000000000040191F) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_05_bad()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  result = staticTrue;
  if ( staticTrue )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = unlink("important_file.txt");
  }
  return result;
}
// 6090C4: using guessed type int staticTrue;

//----- (0000000000401955) ----------------------------------------------------
int good1_7()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  if ( staticFalse )
    return printLine("Benign, fixed string");
  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}
// 6090EC: using guessed type int staticFalse;

//----- (0000000000401997) ----------------------------------------------------
int good2_4()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  result = staticTrue;
  if ( staticTrue )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = printLine("Happy New Year!");
  }
  return result;
}
// 6090C4: using guessed type int staticTrue;

//----- (00000000004019CD) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_05_good()
{
  good1_7();
  return good2_4();
}

//----- (00000000004019E7) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_15_bad()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = unlink("important_file.txt");
  return result;
}

//----- (0000000000401A14) ----------------------------------------------------
int good1_8()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000401A41) ----------------------------------------------------
int good2_5()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000401A6E) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_15_good()
{
  good1_8();
  return good2_5();
}

//----- (0000000000401A88) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_11_bad()
{
  int result; // eax
  unsigned int v1; // eax

  result = globalReturnsTrue();
  if ( result )
  {
    v1 = time(0LL);
    srand(v1);
    result = rand();
    if ( result == 20000 )
      result = unlink("important_file.txt");
  }
  return result;
}

//----- (0000000000401AC3) ----------------------------------------------------
int good1_9()
{
  int result; // eax
  unsigned int v1; // eax

  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  v1 = time(0LL);
  srand(v1);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000401B0A) ----------------------------------------------------
int good2_6()
{
  int result; // eax
  unsigned int v1; // eax

  result = globalReturnsTrue();
  if ( result )
  {
    v1 = time(0LL);
    srand(v1);
    result = rand();
    if ( result == 20000 )
      result = printLine("Happy New Year!");
  }
  return result;
}

//----- (0000000000401B45) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_11_good()
{
  good1_9();
  return good2_6();
}

//----- (0000000000401B5F) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_02_bad()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = unlink("important_file.txt");
  return result;
}

//----- (0000000000401B8C) ----------------------------------------------------
int good1_10()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000401BB9) ----------------------------------------------------
int good2_7()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000401BE6) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_02_good()
{
  good1_10();
  return good2_7();
}

//----- (0000000000401C00) ----------------------------------------------------
__int64 CWE511_Logic_Time_Bomb__counter_09_bad()
{
  __int64 result; // rax
  int i; // [rsp+Ch] [rbp-4h]

  result = (unsigned int)GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        unlink("important_file.txt");
    }
  }
  return result;
}
// 405FF8: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000401C34) ----------------------------------------------------
int good1_11()
{
  int i; // [rsp+Ch] [rbp-4h]

  if ( !GLOBAL_CONST_FALSE )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        printLine("Happy New Year!");
    }
  }
  return printLine("Benign, fixed string");
}
// 405FFC: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000401C74) ----------------------------------------------------
__int64 good2_8()
{
  __int64 result; // rax
  int i; // [rsp+Ch] [rbp-4h]

  result = (unsigned int)GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        printLine("Happy New Year!");
    }
  }
  return result;
}
// 405FF8: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000401CA8) ----------------------------------------------------
__int64 CWE511_Logic_Time_Bomb__counter_09_good()
{
  good1_11();
  return good2_8();
}

//----- (0000000000401CC2) ----------------------------------------------------
__int64 CWE511_Logic_Time_Bomb__counter_13_bad()
{
  __int64 result; // rax
  int i; // [rsp+Ch] [rbp-4h]

  result = (unsigned int)GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        unlink("important_file.txt");
    }
  }
  return result;
}
// 406000: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000401CF7) ----------------------------------------------------
int good1_12()
{
  int i; // [rsp+Ch] [rbp-4h]

  if ( GLOBAL_CONST_FIVE == 5 )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        printLine("Happy New Year!");
    }
  }
  return printLine("Benign, fixed string");
}
// 406000: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000401D38) ----------------------------------------------------
__int64 good2_9()
{
  __int64 result; // rax
  int i; // [rsp+Ch] [rbp-4h]

  result = (unsigned int)GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        printLine("Happy New Year!");
    }
  }
  return result;
}
// 406000: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000401D6D) ----------------------------------------------------
__int64 CWE511_Logic_Time_Bomb__counter_13_good()
{
  good1_12();
  return good2_9();
}

//----- (0000000000401D87) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_01_bad()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = unlink("important_file.txt");
  return result;
}

//----- (0000000000401DB3) ----------------------------------------------------
int good1_13()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000401DDF) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_01_good()
{
  return good1_13();
}

//----- (0000000000401DEF) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_05_bad()
{
  int result; // eax
  unsigned int v1; // eax

  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    v1 = time(0LL);
    srand(v1);
    result = rand();
    if ( result == 20000 )
      result = unlink("important_file.txt");
  }
  return result;
}
// 6090C8: using guessed type int staticTrue_0;

//----- (0000000000401E26) ----------------------------------------------------
int good1_14()
{
  int result; // eax
  unsigned int v1; // eax

  if ( staticFalse_0 )
    return printLine("Benign, fixed string");
  v1 = time(0LL);
  srand(v1);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}
// 6090F0: using guessed type int staticFalse_0;

//----- (0000000000401E69) ----------------------------------------------------
int good2_10()
{
  int result; // eax
  unsigned int v1; // eax

  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    v1 = time(0LL);
    srand(v1);
    result = rand();
    if ( result == 20000 )
      result = printLine("Happy New Year!");
  }
  return result;
}
// 6090C8: using guessed type int staticTrue_0;

//----- (0000000000401EA0) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_05_good()
{
  good1_14();
  return good2_10();
}

//----- (0000000000401EBA) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_16_bad()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = unlink("important_file.txt");
  return result;
}

//----- (0000000000401EE8) ----------------------------------------------------
int good1_15()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000401F16) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_16_good()
{
  return good1_15();
}

//----- (0000000000401F26) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_10_bad()
{
  int result; // eax
  unsigned int v1; // eax

  result = globalTrue;
  if ( globalTrue )
  {
    v1 = time(0LL);
    srand(v1);
    result = rand();
    if ( result == 20000 )
      result = unlink("important_file.txt");
  }
  return result;
}
// 6090DC: using guessed type int globalTrue;

//----- (0000000000401F5D) ----------------------------------------------------
int good1_16()
{
  int result; // eax
  unsigned int v1; // eax

  if ( globalFalse )
    return printLine("Benign, fixed string");
  v1 = time(0LL);
  srand(v1);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}
// 6090F8: using guessed type int globalFalse;

//----- (0000000000401FA0) ----------------------------------------------------
int good2_11()
{
  int result; // eax
  unsigned int v1; // eax

  result = globalTrue;
  if ( globalTrue )
  {
    v1 = time(0LL);
    srand(v1);
    result = rand();
    if ( result == 20000 )
      result = printLine("Happy New Year!");
  }
  return result;
}
// 6090DC: using guessed type int globalTrue;

//----- (0000000000401FD7) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_10_good()
{
  good1_16();
  return good2_11();
}

//----- (0000000000401FF1) ----------------------------------------------------
void CWE511_Logic_Time_Bomb__counter_06_bad()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      unlink("important_file.txt");
  }
}

//----- (0000000000402025) ----------------------------------------------------
void good1_17()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      printLine("Happy New Year!");
  }
}

//----- (0000000000402065) ----------------------------------------------------
void good2_12()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      printLine("Happy New Year!");
  }
}

//----- (0000000000402099) ----------------------------------------------------
void CWE511_Logic_Time_Bomb__counter_06_good()
{
  good1_17();
  good2_12();
}

//----- (00000000004020B3) ----------------------------------------------------
__int64 staticReturnsTrue()
{
  return 1LL;
}

//----- (00000000004020BE) ----------------------------------------------------
__int64 staticReturnsFalse()
{
  return 0LL;
}

//----- (00000000004020C9) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_08_bad()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  result = staticReturnsTrue();
  if ( result )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = unlink("important_file.txt");
  }
  return result;
}

//----- (0000000000402103) ----------------------------------------------------
int good1_18()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)staticReturnsFalse() )
    return printLine("Benign, fixed string");
  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000402149) ----------------------------------------------------
int good2_13()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  result = staticReturnsTrue();
  if ( result )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = printLine("Happy New Year!");
  }
  return result;
}

//----- (0000000000402183) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_08_good()
{
  good1_18();
  return good2_13();
}

//----- (000000000040219D) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_15_bad()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = unlink("important_file.txt");
  return result;
}

//----- (00000000004021CB) ----------------------------------------------------
int good1_19()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (00000000004021F9) ----------------------------------------------------
int good2_14()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000402227) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_15_good()
{
  good1_19();
  return good2_14();
}

//----- (0000000000402241) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_01_bad()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = unlink("important_file.txt");
  return result;
}

//----- (000000000040226E) ----------------------------------------------------
int good1_20()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (000000000040229B) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_01_good()
{
  return good1_20();
}

//----- (00000000004022AB) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_07_bad()
{
  int result; // eax
  unsigned int v1; // eax

  result = staticFive;
  if ( staticFive == 5 )
  {
    v1 = time(0LL);
    srand(v1);
    result = rand();
    if ( result == 20000 )
      result = unlink("important_file.txt");
  }
  return result;
}
// 6090CC: using guessed type int staticFive;

//----- (00000000004022E3) ----------------------------------------------------
int good1_21()
{
  int result; // eax
  unsigned int v1; // eax

  if ( staticFive != 5 )
    return printLine("Benign, fixed string");
  v1 = time(0LL);
  srand(v1);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}
// 6090CC: using guessed type int staticFive;

//----- (0000000000402327) ----------------------------------------------------
int good2_15()
{
  int result; // eax
  unsigned int v1; // eax

  result = staticFive;
  if ( staticFive == 5 )
  {
    v1 = time(0LL);
    srand(v1);
    result = rand();
    if ( result == 20000 )
      result = printLine("Happy New Year!");
  }
  return result;
}
// 6090CC: using guessed type int staticFive;

//----- (000000000040235F) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_07_good()
{
  good1_21();
  return good2_15();
}

//----- (0000000000402379) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_06_bad()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = unlink("important_file.txt");
  return result;
}

//----- (00000000004023AF) ----------------------------------------------------
int good1_22()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (00000000004023F1) ----------------------------------------------------
int good2_16()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000402427) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_06_good()
{
  good1_22();
  return good2_16();
}

//----- (0000000000402441) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_13_bad()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = unlink("important_file.txt");
  }
  return result;
}
// 406000: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000402478) ----------------------------------------------------
int good1_23()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}
// 406000: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004024BB) ----------------------------------------------------
int good2_17()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = printLine("Happy New Year!");
  }
  return result;
}
// 406000: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004024F2) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_13_good()
{
  good1_23();
  return good2_17();
}

//----- (000000000040250C) ----------------------------------------------------
void __noreturn CWE511_Logic_Time_Bomb__counter_12_bad()
{
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        unlink("important_file.txt");
    }
  }
  for ( j = 0; ; ++j )
  {
    if ( j == 20000 )
      printLine("Happy New Year!");
  }
}

//----- (0000000000402562) ----------------------------------------------------
void __noreturn good1_24()
{
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        printLine("Happy New Year!");
    }
  }
  for ( j = 0; ; ++j )
  {
    if ( j == 20000 )
      printLine("Happy New Year!");
  }
}

//----- (00000000004025B8) ----------------------------------------------------
void __noreturn CWE511_Logic_Time_Bomb__counter_12_good()
{
  good1_24();
}

//----- (00000000004025C8) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_09_bad()
{
  int result; // eax
  unsigned int v1; // eax

  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = time(0LL);
    srand(v1);
    result = rand();
    if ( result == 20000 )
      result = unlink("important_file.txt");
  }
  return result;
}
// 405FF8: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004025FF) ----------------------------------------------------
int good1_25()
{
  int result; // eax
  unsigned int v1; // eax

  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  v1 = time(0LL);
  srand(v1);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}
// 405FFC: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000402642) ----------------------------------------------------
int good2_18()
{
  int result; // eax
  unsigned int v1; // eax

  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = time(0LL);
    srand(v1);
    result = rand();
    if ( result == 20000 )
      result = printLine("Happy New Year!");
  }
  return result;
}
// 405FF8: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000402679) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_09_good()
{
  good1_25();
  return good2_18();
}

//----- (0000000000402693) ----------------------------------------------------
__int64 staticReturnsTrue_0()
{
  return 1LL;
}

//----- (000000000040269E) ----------------------------------------------------
__int64 staticReturnsFalse_0()
{
  return 0LL;
}

//----- (00000000004026A9) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_08_bad()
{
  int result; // eax
  unsigned int v1; // eax

  result = staticReturnsTrue_0();
  if ( result )
  {
    v1 = time(0LL);
    srand(v1);
    result = rand();
    if ( result == 20000 )
      result = unlink("important_file.txt");
  }
  return result;
}

//----- (00000000004026E4) ----------------------------------------------------
int good1_26()
{
  int result; // eax
  unsigned int v1; // eax

  if ( (unsigned int)staticReturnsFalse_0() )
    return printLine("Benign, fixed string");
  v1 = time(0LL);
  srand(v1);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (000000000040272B) ----------------------------------------------------
int good2_19()
{
  int result; // eax
  unsigned int v1; // eax

  result = staticReturnsTrue_0();
  if ( result )
  {
    v1 = time(0LL);
    srand(v1);
    result = rand();
    if ( result == 20000 )
      result = printLine("Happy New Year!");
  }
  return result;
}

//----- (0000000000402766) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_08_good()
{
  good1_26();
  return good2_19();
}

//----- (0000000000402780) ----------------------------------------------------
__int64 CWE511_Logic_Time_Bomb__counter_05_bad()
{
  __int64 result; // rax
  int i; // [rsp+Ch] [rbp-4h]

  result = (unsigned int)staticTrue_1;
  if ( staticTrue_1 )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        unlink("important_file.txt");
    }
  }
  return result;
}
// 6090D0: using guessed type int staticTrue_1;

//----- (00000000004027B4) ----------------------------------------------------
int good1_27()
{
  int i; // [rsp+Ch] [rbp-4h]

  if ( !staticFalse_1 )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        printLine("Happy New Year!");
    }
  }
  return printLine("Benign, fixed string");
}
// 6090F4: using guessed type int staticFalse_1;

//----- (00000000004027F4) ----------------------------------------------------
__int64 good2_20()
{
  __int64 result; // rax
  int i; // [rsp+Ch] [rbp-4h]

  result = (unsigned int)staticTrue_1;
  if ( staticTrue_1 )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        printLine("Happy New Year!");
    }
  }
  return result;
}
// 6090D0: using guessed type int staticTrue_1;

//----- (0000000000402828) ----------------------------------------------------
__int64 CWE511_Logic_Time_Bomb__counter_05_good()
{
  good1_27();
  return good2_20();
}

//----- (0000000000402842) ----------------------------------------------------
__int64 CWE511_Logic_Time_Bomb__counter_14_bad()
{
  __int64 result; // rax
  int i; // [rsp+Ch] [rbp-4h]

  result = (unsigned int)globalFive;
  if ( globalFive == 5 )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        unlink("important_file.txt");
    }
  }
  return result;
}
// 6090E0: using guessed type int globalFive;

//----- (0000000000402877) ----------------------------------------------------
int good1_28()
{
  int i; // [rsp+Ch] [rbp-4h]

  if ( globalFive == 5 )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        printLine("Happy New Year!");
    }
  }
  return printLine("Benign, fixed string");
}
// 6090E0: using guessed type int globalFive;

//----- (00000000004028B8) ----------------------------------------------------
__int64 good2_21()
{
  __int64 result; // rax
  int i; // [rsp+Ch] [rbp-4h]

  result = (unsigned int)globalFive;
  if ( globalFive == 5 )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        printLine("Happy New Year!");
    }
  }
  return result;
}
// 6090E0: using guessed type int globalFive;

//----- (00000000004028ED) ----------------------------------------------------
__int64 CWE511_Logic_Time_Bomb__counter_14_good()
{
  good1_28();
  return good2_21();
}

//----- (0000000000402907) ----------------------------------------------------
void __noreturn CWE511_Logic_Time_Bomb__counter_18_bad()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      unlink("important_file.txt");
  }
}

//----- (0000000000402930) ----------------------------------------------------
void __noreturn good1_29()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      printLine("Happy New Year!");
  }
}

//----- (0000000000402959) ----------------------------------------------------
void __noreturn CWE511_Logic_Time_Bomb__counter_18_good()
{
  good1_29();
}

//----- (0000000000402969) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_13_bad()
{
  int result; // eax
  unsigned int v1; // eax

  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = time(0LL);
    srand(v1);
    result = rand();
    if ( result == 20000 )
      result = unlink("important_file.txt");
  }
  return result;
}
// 406000: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004029A1) ----------------------------------------------------
int good1_30()
{
  int result; // eax
  unsigned int v1; // eax

  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  v1 = time(0LL);
  srand(v1);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}
// 406000: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004029E5) ----------------------------------------------------
int good2_22()
{
  int result; // eax
  unsigned int v1; // eax

  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = time(0LL);
    srand(v1);
    result = rand();
    if ( result == 20000 )
      result = printLine("Happy New Year!");
  }
  return result;
}
// 406000: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000402A1D) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_13_good()
{
  good1_30();
  return good2_22();
}

//----- (0000000000402A37) ----------------------------------------------------
__int64 staticReturnsTrue_1()
{
  return 1LL;
}

//----- (0000000000402A42) ----------------------------------------------------
__int64 staticReturnsFalse_1()
{
  return 0LL;
}

//----- (0000000000402A4D) ----------------------------------------------------
__int64 CWE511_Logic_Time_Bomb__counter_08_bad()
{
  __int64 result; // rax
  int i; // [rsp+Ch] [rbp-4h]

  result = staticReturnsTrue_1();
  if ( (_DWORD)result )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        unlink("important_file.txt");
    }
  }
  return result;
}

//----- (0000000000402A85) ----------------------------------------------------
int good1_31()
{
  int i; // [rsp+Ch] [rbp-4h]

  if ( !(unsigned int)staticReturnsFalse_1() )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        printLine("Happy New Year!");
    }
  }
  return printLine("Benign, fixed string");
}

//----- (0000000000402AC9) ----------------------------------------------------
__int64 good2_23()
{
  __int64 result; // rax
  int i; // [rsp+Ch] [rbp-4h]

  result = staticReturnsTrue_1();
  if ( (_DWORD)result )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        printLine("Happy New Year!");
    }
  }
  return result;
}

//----- (0000000000402B01) ----------------------------------------------------
__int64 CWE511_Logic_Time_Bomb__counter_08_good()
{
  good1_31();
  return good2_23();
}

//----- (0000000000402B1B) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_03_bad()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = unlink("important_file.txt");
  return result;
}

//----- (0000000000402B47) ----------------------------------------------------
int good1_32()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000402B73) ----------------------------------------------------
int good2_24()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000402B9F) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_03_good()
{
  good1_32();
  return good2_24();
}

//----- (0000000000402BB9) ----------------------------------------------------
__int64 CWE511_Logic_Time_Bomb__counter_11_bad()
{
  __int64 result; // rax
  int i; // [rsp+Ch] [rbp-4h]

  result = globalReturnsTrue();
  if ( (_DWORD)result )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        unlink("important_file.txt");
    }
  }
  return result;
}

//----- (0000000000402BF1) ----------------------------------------------------
int good1_33()
{
  int i; // [rsp+Ch] [rbp-4h]

  if ( !(unsigned int)globalReturnsFalse() )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        printLine("Happy New Year!");
    }
  }
  return printLine("Benign, fixed string");
}

//----- (0000000000402C35) ----------------------------------------------------
__int64 good2_25()
{
  __int64 result; // rax
  int i; // [rsp+Ch] [rbp-4h]

  result = globalReturnsTrue();
  if ( (_DWORD)result )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        printLine("Happy New Year!");
    }
  }
  return result;
}

//----- (0000000000402C6D) ----------------------------------------------------
__int64 CWE511_Logic_Time_Bomb__counter_11_good()
{
  good1_33();
  return good2_25();
}

//----- (0000000000402C87) ----------------------------------------------------
__int64 CWE511_Logic_Time_Bomb__counter_07_bad()
{
  __int64 result; // rax
  int i; // [rsp+Ch] [rbp-4h]

  result = (unsigned int)staticFive_0;
  if ( staticFive_0 == 5 )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        unlink("important_file.txt");
    }
  }
  return result;
}
// 6090D4: using guessed type int staticFive_0;

//----- (0000000000402CBC) ----------------------------------------------------
int good1_34()
{
  int i; // [rsp+Ch] [rbp-4h]

  if ( staticFive_0 == 5 )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        printLine("Happy New Year!");
    }
  }
  return printLine("Benign, fixed string");
}
// 6090D4: using guessed type int staticFive_0;

//----- (0000000000402CFD) ----------------------------------------------------
__int64 good2_26()
{
  __int64 result; // rax
  int i; // [rsp+Ch] [rbp-4h]

  result = (unsigned int)staticFive_0;
  if ( staticFive_0 == 5 )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        printLine("Happy New Year!");
    }
  }
  return result;
}
// 6090D4: using guessed type int staticFive_0;

//----- (0000000000402D32) ----------------------------------------------------
__int64 CWE511_Logic_Time_Bomb__counter_07_good()
{
  good1_34();
  return good2_26();
}

//----- (0000000000402D4C) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_18_bad()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = unlink("important_file.txt");
  return result;
}

//----- (0000000000402D79) ----------------------------------------------------
int good1_35()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000402DA6) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_18_good()
{
  return good1_35();
}

//----- (0000000000402DB6) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_07_bad()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  result = staticFive_1;
  if ( staticFive_1 == 5 )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = unlink("important_file.txt");
  }
  return result;
}
// 6090D8: using guessed type int staticFive_1;

//----- (0000000000402DED) ----------------------------------------------------
int good1_36()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  if ( staticFive_1 != 5 )
    return printLine("Benign, fixed string");
  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}
// 6090D8: using guessed type int staticFive_1;

//----- (0000000000402E30) ----------------------------------------------------
int good2_27()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  result = staticFive_1;
  if ( staticFive_1 == 5 )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = printLine("Happy New Year!");
  }
  return result;
}
// 6090D8: using guessed type int staticFive_1;

//----- (0000000000402E67) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_07_good()
{
  good1_36();
  return good2_27();
}

//----- (0000000000402E81) ----------------------------------------------------
void CWE511_Logic_Time_Bomb__counter_04_bad()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      unlink("important_file.txt");
  }
}

//----- (0000000000402EB4) ----------------------------------------------------
void good1_37()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      printLine("Happy New Year!");
  }
}

//----- (0000000000402EF3) ----------------------------------------------------
void good2_28()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      printLine("Happy New Year!");
  }
}

//----- (0000000000402F26) ----------------------------------------------------
void CWE511_Logic_Time_Bomb__counter_04_good()
{
  good1_37();
  good2_28();
}

//----- (0000000000402F40) ----------------------------------------------------
void CWE511_Logic_Time_Bomb__counter_17_bad()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      unlink("important_file.txt");
  }
}

//----- (0000000000402F77) ----------------------------------------------------
void good1_38()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      printLine("Happy New Year!");
  }
}

//----- (0000000000402FAE) ----------------------------------------------------
void CWE511_Logic_Time_Bomb__counter_17_good()
{
  good1_38();
}

//----- (0000000000402FBE) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_03_bad()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = unlink("important_file.txt");
  return result;
}

//----- (0000000000402FEB) ----------------------------------------------------
int good1_39()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000403018) ----------------------------------------------------
int good2_29()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000403045) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_03_good()
{
  good1_39();
  return good2_29();
}

//----- (000000000040305F) ----------------------------------------------------
void __noreturn CWE511_Logic_Time_Bomb__counter_03_bad()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      unlink("important_file.txt");
  }
}

//----- (0000000000403087) ----------------------------------------------------
void __noreturn good1_40()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      printLine("Happy New Year!");
  }
}

//----- (00000000004030AF) ----------------------------------------------------
void __noreturn good2_30()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      printLine("Happy New Year!");
  }
}

//----- (00000000004030D7) ----------------------------------------------------
void __noreturn CWE511_Logic_Time_Bomb__counter_03_good()
{
  good1_40();
}

//----- (00000000004030F1) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_12_bad()
{
  int result; // eax
  time_t v1; // [rsp+0h] [rbp-10h]
  time_t timer; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = unlink("important_file.txt");
  }
  else
  {
    time(&v1);
    result = v1;
    if ( v1 > 1199163600 )
      result = printLine("Happy New Year!");
  }
  return result;
}

//----- (0000000000403151) ----------------------------------------------------
int good1_41()
{
  int result; // eax
  time_t v1; // [rsp+0h] [rbp-10h]
  time_t timer; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = printLine("Happy New Year!");
  }
  else
  {
    time(&v1);
    result = v1;
    if ( v1 > 1199163600 )
      result = printLine("Happy New Year!");
  }
  return result;
}

//----- (00000000004031B1) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_12_good()
{
  return good1_41();
}

//----- (00000000004031C1) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_14_bad()
{
  int result; // eax
  unsigned int v1; // eax

  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = time(0LL);
    srand(v1);
    result = rand();
    if ( result == 20000 )
      result = unlink("important_file.txt");
  }
  return result;
}
// 6090E0: using guessed type int globalFive;

//----- (00000000004031F9) ----------------------------------------------------
int good1_42()
{
  int result; // eax
  unsigned int v1; // eax

  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  v1 = time(0LL);
  srand(v1);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}
// 6090E0: using guessed type int globalFive;

//----- (000000000040323D) ----------------------------------------------------
int good2_31()
{
  int result; // eax
  unsigned int v1; // eax

  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = time(0LL);
    srand(v1);
    result = rand();
    if ( result == 20000 )
      result = printLine("Happy New Year!");
  }
  return result;
}
// 6090E0: using guessed type int globalFive;

//----- (0000000000403275) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_14_good()
{
  good1_42();
  return good2_31();
}

//----- (000000000040328F) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_18_bad()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = unlink("important_file.txt");
  return result;
}

//----- (00000000004032BD) ----------------------------------------------------
int good1_43()
{
  unsigned int v0; // eax
  int result; // eax

  v0 = time(0LL);
  srand(v0);
  result = rand();
  if ( result == 20000 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (00000000004032EB) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_18_good()
{
  return good1_43();
}

//----- (00000000004032FB) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_04_bad()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = unlink("important_file.txt");
  return result;
}

//----- (0000000000403330) ----------------------------------------------------
int good1_44()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000403371) ----------------------------------------------------
int good2_32()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (00000000004033A6) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_04_good()
{
  good1_44();
  return good2_32();
}

//----- (00000000004033C0) ----------------------------------------------------
void __noreturn CWE511_Logic_Time_Bomb__counter_02_bad()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      unlink("important_file.txt");
  }
}

//----- (00000000004033E8) ----------------------------------------------------
void __noreturn good1_45()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      printLine("Happy New Year!");
  }
}

//----- (0000000000403410) ----------------------------------------------------
void __noreturn good2_33()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      printLine("Happy New Year!");
  }
}

//----- (0000000000403438) ----------------------------------------------------
void __noreturn CWE511_Logic_Time_Bomb__counter_02_good()
{
  good1_45();
}

//----- (0000000000403452) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_17_bad()
{
  int result; // eax
  time_t timer; // [rsp+0h] [rbp-10h]
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; i <= 0; ++i )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = unlink("important_file.txt");
  }
  return result;
}

//----- (0000000000403491) ----------------------------------------------------
int good1_46()
{
  int result; // eax
  time_t timer; // [rsp+0h] [rbp-10h]
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; i <= 0; ++i )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = printLine("Happy New Year!");
  }
  return result;
}

//----- (00000000004034D0) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_17_good()
{
  return good1_46();
}

//----- (00000000004034E0) ----------------------------------------------------
void __noreturn CWE511_Logic_Time_Bomb__counter_16_bad()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      unlink("important_file.txt");
  }
}

//----- (0000000000403508) ----------------------------------------------------
void __noreturn good1_47()
{
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; ; ++i )
  {
    if ( i == 20000 )
      printLine("Happy New Year!");
  }
}

//----- (0000000000403530) ----------------------------------------------------
void __noreturn CWE511_Logic_Time_Bomb__counter_16_good()
{
  good1_47();
}

//----- (0000000000403540) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_12_bad()
{
  unsigned int v0; // eax
  int result; // eax
  unsigned int v2; // eax

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v0 = time(0LL);
    srand(v0);
    result = rand();
    if ( result == 20000 )
      result = unlink("important_file.txt");
  }
  else
  {
    v2 = time(0LL);
    srand(v2);
    result = rand();
    if ( result == 20000 )
      result = printLine("Happy New Year!");
  }
  return result;
}

//----- (00000000004035A4) ----------------------------------------------------
int good1_48()
{
  unsigned int v0; // eax
  int result; // eax
  unsigned int v2; // eax

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v0 = time(0LL);
    srand(v0);
    result = rand();
    if ( result == 20000 )
      result = printLine("Happy New Year!");
  }
  else
  {
    v2 = time(0LL);
    srand(v2);
    result = rand();
    if ( result == 20000 )
      result = printLine("Happy New Year!");
  }
  return result;
}

//----- (0000000000403608) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__rand_12_good()
{
  return good1_48();
}

//----- (0000000000403618) ----------------------------------------------------
__int64 CWE511_Logic_Time_Bomb__counter_10_bad()
{
  __int64 result; // rax
  int i; // [rsp+Ch] [rbp-4h]

  result = (unsigned int)globalTrue;
  if ( globalTrue )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        unlink("important_file.txt");
    }
  }
  return result;
}
// 6090DC: using guessed type int globalTrue;

//----- (000000000040364C) ----------------------------------------------------
int good1_49()
{
  int i; // [rsp+Ch] [rbp-4h]

  if ( !globalFalse )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        printLine("Happy New Year!");
    }
  }
  return printLine("Benign, fixed string");
}
// 6090F8: using guessed type int globalFalse;

//----- (000000000040368C) ----------------------------------------------------
__int64 good2_34()
{
  __int64 result; // rax
  int i; // [rsp+Ch] [rbp-4h]

  result = (unsigned int)globalTrue;
  if ( globalTrue )
  {
    for ( i = 0; ; ++i )
    {
      if ( i == 20000 )
        printLine("Happy New Year!");
    }
  }
  return result;
}
// 6090DC: using guessed type int globalTrue;

//----- (00000000004036C0) ----------------------------------------------------
__int64 CWE511_Logic_Time_Bomb__counter_10_good()
{
  good1_49();
  return good2_34();
}

//----- (00000000004036DA) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_14_bad()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  result = globalFive;
  if ( globalFive == 5 )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = unlink("important_file.txt");
  }
  return result;
}
// 6090E0: using guessed type int globalFive;

//----- (0000000000403711) ----------------------------------------------------
int good1_50()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}
// 6090E0: using guessed type int globalFive;

//----- (0000000000403754) ----------------------------------------------------
int good2_35()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  result = globalFive;
  if ( globalFive == 5 )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = printLine("Happy New Year!");
  }
  return result;
}
// 6090E0: using guessed type int globalFive;

//----- (000000000040378B) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_14_good()
{
  good1_50();
  return good2_35();
}

//----- (00000000004037A5) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_11_bad()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  result = globalReturnsTrue();
  if ( result )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = unlink("important_file.txt");
  }
  return result;
}

//----- (00000000004037DF) ----------------------------------------------------
int good1_51()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (0000000000403825) ----------------------------------------------------
int good2_36()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  result = globalReturnsTrue();
  if ( result )
  {
    time(&timer);
    result = timer;
    if ( timer > 1199163600 )
      result = printLine("Happy New Year!");
  }
  return result;
}

//----- (000000000040385F) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_11_good()
{
  good1_51();
  return good2_36();
}

//----- (0000000000403879) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_02_bad()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = unlink("important_file.txt");
  return result;
}

//----- (00000000004038A5) ----------------------------------------------------
int good1_52()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (00000000004038D1) ----------------------------------------------------
int good2_37()
{
  int result; // eax
  time_t timer; // [rsp+8h] [rbp-8h]

  time(&timer);
  result = timer;
  if ( timer > 1199163600 )
    result = printLine("Happy New Year!");
  return result;
}

//----- (00000000004038FD) ----------------------------------------------------
int CWE511_Logic_Time_Bomb__time_02_good()
{
  good1_52();
  return good2_37();
}

//----- (0000000000403917) ----------------------------------------------------
int __fastcall printLine(const char *a1)
{
  int result; // eax

  if ( a1 )
    result = puts(a1);
  return result;
}

//----- (0000000000403938) ----------------------------------------------------
int __fastcall printWLine(__int64 a1)
{
  int result; // eax

  if ( a1 )
    result = wprintf("%", a1);
  return result;
}

//----- (0000000000403963) ----------------------------------------------------
int __fastcall printIntLine(unsigned int a1)
{
  return printf("%d\n", a1);
}

//----- (0000000000403984) ----------------------------------------------------
int __fastcall printShortLine(__int16 a1)
{
  return printf("%hd\n", (unsigned int)a1);
}

//----- (00000000004039A9) ----------------------------------------------------
int __fastcall printFloatLine(float a1)
{
  return printf("%f\n", a1);
}

//----- (00000000004039CF) ----------------------------------------------------
int __fastcall printLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (00000000004039F3) ----------------------------------------------------
int __fastcall printLongLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (0000000000403A17) ----------------------------------------------------
int __fastcall printSizeTLine(__int64 a1)
{
  return printf("%zu\n", a1);
}

//----- (0000000000403A3B) ----------------------------------------------------
int __fastcall printHexCharLine(char a1)
{
  return printf("%02x\n", (unsigned int)a1);
}

//----- (0000000000403A5F) ----------------------------------------------------
int __fastcall printWcharLine(int a1)
{
  int v2; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+14h] [rbp-Ch]

  v2 = a1;
  v3 = 0;
  return printf("%ls\n", &v2);
}

//----- (0000000000403A8F) ----------------------------------------------------
int __fastcall printUnsignedLine(unsigned int a1)
{
  return printf("%u\n", a1);
}

//----- (0000000000403AB0) ----------------------------------------------------
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1)
{
  return printf("%02x\n", a1);
}

//----- (0000000000403AD4) ----------------------------------------------------
int __fastcall printDoubleLine(double a1)
{
  return printf("%g\n", a1);
}

//----- (0000000000403AFF) ----------------------------------------------------
int __fastcall printStructLine(unsigned int *a1)
{
  return printf("%d -- %d\n", *a1, a1[1]);
}

//----- (0000000000403B2B) ----------------------------------------------------
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2)
{
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; i < a2; ++i )
    printf("%02x", *(unsigned __int8 *)(a1 + i));
  return puts(s);
}

//----- (0000000000403B82) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL;
        i < a2
     && (*__ctype_b_loc())[*(char *)(2 * i + v4)] & 0x1000
     && (*__ctype_b_loc())[*(char *)(2 * i + 1 + v4)] & 0x1000;
        ++i )
  {
    __isoc99_sscanf(2 * i + v4, "%02x", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400930: using guessed type __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000403C5B) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL; i < a2 && iswxdigit(*(_DWORD *)(8 * i + v4)) && iswxdigit(*(_DWORD *)(8 * i + 4 + v4)); ++i )
  {
    __isoc99_swscanf(8 * i + v4, "%", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 4009F0: using guessed type __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000403D0F) ----------------------------------------------------
__int64 globalReturnsTrue()
{
  return 1LL;
}

//----- (0000000000403D1A) ----------------------------------------------------
__int64 globalReturnsFalse()
{
  return 0LL;
}

//----- (0000000000403D25) ----------------------------------------------------
__int64 globalReturnsTrueOrFalse()
{
  return (unsigned int)(rand() % 2);
}

//----- (0000000000403D3B) ----------------------------------------------------
void good1_53()
{
  ;
}

//----- (0000000000403D41) ----------------------------------------------------
void good2_38()
{
  ;
}

//----- (0000000000403D47) ----------------------------------------------------
void good3()
{
  ;
}

//----- (0000000000403D4D) ----------------------------------------------------
void good4()
{
  ;
}

//----- (0000000000403D53) ----------------------------------------------------
void good5()
{
  ;
}

//----- (0000000000403D59) ----------------------------------------------------
void good6()
{
  ;
}

//----- (0000000000403D5F) ----------------------------------------------------
void good7()
{
  ;
}

//----- (0000000000403D65) ----------------------------------------------------
void good8()
{
  ;
}

//----- (0000000000403D6B) ----------------------------------------------------
void good9()
{
  ;
}

//----- (0000000000403D71) ----------------------------------------------------
void bad1()
{
  ;
}

//----- (0000000000403D77) ----------------------------------------------------
void bad2()
{
  ;
}

//----- (0000000000403D7D) ----------------------------------------------------
void bad3()
{
  ;
}

//----- (0000000000403D83) ----------------------------------------------------
void bad4()
{
  ;
}

//----- (0000000000403D89) ----------------------------------------------------
void bad5()
{
  ;
}

//----- (0000000000403D8F) ----------------------------------------------------
void bad6()
{
  ;
}

//----- (0000000000403D95) ----------------------------------------------------
void bad7()
{
  ;
}

//----- (0000000000403D9B) ----------------------------------------------------
void bad8()
{
  ;
}

//----- (0000000000403DA1) ----------------------------------------------------
void bad9()
{
  ;
}

//----- (0000000000403DA7) ----------------------------------------------------
void __fastcall __noreturn internal_start(void *a1)
{
  (*((void (__fastcall **)(_QWORD))a1 + 1))(*((_QWORD *)a1 + 2));
  pthread_exit(0LL);
}

//----- (0000000000403DDA) ----------------------------------------------------
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3)
{
  __int64 result; // rax
  void **v4; // [rsp+8h] [rbp-28h]
  pthread_t newthread; // [rsp+20h] [rbp-10h]
  void *arg; // [rsp+28h] [rbp-8h]

  v4 = a3;
  *a3 = 0LL;
  arg = malloc(0x18uLL);
  if ( !arg )
    return 0LL;
  *((_QWORD *)arg + 1) = a1;
  *((_QWORD *)arg + 2) = a2;
  if ( pthread_create(&newthread, 0LL, (void *(*)(void *))internal_start, arg) )
  {
    free(arg);
    result = 0LL;
  }
  else
  {
    *(_QWORD *)arg = newthread;
    *v4 = arg;
    result = 1LL;
  }
  return result;
}

//----- (0000000000403E7E) ----------------------------------------------------
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1)
{
  void *thread_return; // [rsp+18h] [rbp-8h]

  return pthread_join(*a1, &thread_return) == 0;
}

//----- (0000000000403EB2) ----------------------------------------------------
__int64 __fastcall stdThreadDestroy(void *a1)
{
  free(a1);
  return 1LL;
}

//----- (0000000000403ED1) ----------------------------------------------------
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1)
{
  __int64 result; // rax
  pthread_mutex_t *mutex; // [rsp+18h] [rbp-8h]

  *a1 = 0LL;
  mutex = (pthread_mutex_t *)malloc(0x28uLL);
  if ( !mutex )
    return 0LL;
  if ( pthread_mutex_init(mutex, 0LL) )
  {
    free(a1);
    result = 0LL;
  }
  else
  {
    *a1 = mutex;
    result = 1LL;
  }
  return result;
}

//----- (0000000000403F46) ----------------------------------------------------
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1)
{
  return pthread_mutex_lock(a1);
}

//----- (0000000000403F60) ----------------------------------------------------
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1)
{
  return pthread_mutex_unlock(a1);
}

//----- (0000000000403F7A) ----------------------------------------------------
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1)
{
  pthread_mutex_destroy(a1);
  free(a1);
}

//----- (0000000000403FA0) ----------------------------------------------------
void _libc_csu_init(void)
{
  __int64 v0; // rbx
  signed __int64 v1; // rbp

  v0 = 0LL;
  v1 = &_do_global_dtors_aux_fini_array_entry - _frame_dummy_init_array_entry;
  init_proc();
  if ( v1 )
  {
    do
      _frame_dummy_init_array_entry[v0++]();
    while ( v0 != v1 );
  }
}
// 608DD0: using guessed type __int64 (__fastcall *_frame_dummy_init_array_entry[2])();
// 608DD8: using guessed type __int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)();

//----- (0000000000404014) ----------------------------------------------------
void term_proc()
{
  ;
}

// ALL OK, 263 function(s) have been successfully decompiled
