/* This file was generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2018 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

void *init_proc();
__int64 sub_400900();
// int printf(const char *format, ...);
// int puts(const char *s);
// __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD); weak
// void __noreturn exit(int status);
// void *malloc(size_t size);
// int __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end);
// int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr);
// int iswxdigit(wint_t wc);
// void free(void *ptr);
// int pthread_create(pthread_t *newthread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);
// const unsigned __int16 **__ctype_b_loc(void);
// int pthread_join(pthread_t th, void **thread_return);
// void __noreturn pthread_exit(void *retval);
// int wprintf(const wchar_t *format, ...);
// __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD); weak
// void srand(unsigned int seed);
// int pthread_mutex_lock(pthread_mutex_t *mutex);
// int rand(void);
// int pthread_mutex_destroy(pthread_mutex_t *mutex);
// int pthread_mutex_unlock(pthread_mutex_t *mutex);
// time_t time(time_t *timer);
// __int64 _gmon_start__(void); weak
// void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>);
__int64 deregister_tm_clones();
__int64 register_tm_clones();
__int64 _do_global_dtors_aux();
__int64 frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
void CWE415_Double_Free__malloc_free_int64_t_53_bad();
void goodG2B();
void goodB2G();
void CWE415_Double_Free__malloc_free_int64_t_53_good();
void __fastcall CWE415_Double_Free__malloc_free_char_54c_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_char_54c_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_char_54c_goodB2GSink();
void __fastcall CWE415_Double_Free__malloc_free_struct_66b_badSink(__int64 a1);
void __fastcall CWE415_Double_Free__malloc_free_struct_66b_goodG2BSink(__int64 a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_struct_66b_goodB2GSink(__int64 a1);
void CWE415_Double_Free__malloc_free_int64_t_54_bad();
void goodG2B_0();
void goodB2G_0();
void CWE415_Double_Free__malloc_free_int64_t_54_good();
void CWE415_Double_Free__malloc_free_struct_16_bad();
void goodB2G_1();
void goodG2B_1();
void CWE415_Double_Free__malloc_free_struct_16_good();
void CWE415_Double_Free__malloc_free_char_01_bad();
void goodG2B_2();
void goodB2G_2();
void CWE415_Double_Free__malloc_free_char_01_good();
void CWE415_Double_Free__malloc_free_long_22_bad();
int goodB2G1();
void goodB2G2();
void goodG2B_3();
void CWE415_Double_Free__malloc_free_long_22_good();
void __fastcall badSink(void *a1);
__int64 CWE415_Double_Free__malloc_free_int64_t_44_bad();
void __fastcall goodG2BSink(void *a1);
__int64 goodG2B_4();
void goodB2GSink();
__int64 goodB2G_3();
__int64 CWE415_Double_Free__malloc_free_int64_t_44_good();
void __fastcall CWE415_Double_Free__malloc_free_char_67b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_char_67b_goodG2BSink(void *a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_char_67b_goodB2GSink(__int64 a1);
void __fastcall CWE415_Double_Free__malloc_free_int64_t_54e_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int64_t_54e_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int64_t_54e_goodB2GSink();
void CWE415_Double_Free__malloc_free_long_03_bad();
void goodB2G1_0();
void goodB2G2_0();
void goodG2B1();
void goodG2B2();
void CWE415_Double_Free__malloc_free_long_03_good();
void CWE415_Double_Free__malloc_free_int64_t_66_bad();
void goodG2B_5();
__int64 goodB2G_4();
__int64 CWE415_Double_Free__malloc_free_int64_t_66_good();
void CWE415_Double_Free__malloc_free_char_61_bad();
void goodG2B_6();
void *goodB2G_5();
void *CWE415_Double_Free__malloc_free_char_61_good();
void CWE415_Double_Free__malloc_free_long_63_bad();
void goodG2B_7();
__int64 goodB2G_6();
__int64 CWE415_Double_Free__malloc_free_long_63_good();
void __fastcall CWE415_Double_Free__malloc_free_int_64b_badSink(void **a1);
void __fastcall CWE415_Double_Free__malloc_free_int_64b_goodG2BSink(void **a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_int_64b_goodB2GSink(__int64 a1);
void __fastcall CWE415_Double_Free__malloc_free_int64_t_65b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int64_t_65b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int64_t_65b_goodB2GSink();
void CWE415_Double_Free__malloc_free_long_18_bad();
void goodB2G_7();
void goodG2B_8();
void CWE415_Double_Free__malloc_free_long_18_good();
void __fastcall CWE415_Double_Free__malloc_free_int64_t_52b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int64_t_52b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int64_t_52b_goodB2GSink();
void CWE415_Double_Free__malloc_free_char_09_bad();
int goodB2G1_1();
void goodB2G2_1();
void goodG2B1_0();
void goodG2B2_0();
void CWE415_Double_Free__malloc_free_char_09_good();
void __fastcall CWE415_Double_Free__malloc_free_long_53b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_long_53b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_long_53b_goodB2GSink();
__int64 staticReturnsTrue();
__int64 staticReturnsFalse();
void CWE415_Double_Free__malloc_free_int64_t_08_bad();
int goodB2G1_2();
__int64 goodB2G2_2();
void goodG2B1_1();
void goodG2B2_1();
void CWE415_Double_Free__malloc_free_int64_t_08_good();
void __fastcall CWE415_Double_Free__malloc_free_int_67b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int_67b_goodG2BSink(void *a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_int_67b_goodB2GSink(__int64 a1);
void CWE415_Double_Free__malloc_free_struct_06_bad();
__int64 goodB2G1_3();
void goodB2G2_3();
void goodG2B1_2();
void goodG2B2_2();
void CWE415_Double_Free__malloc_free_struct_06_good();
void CWE415_Double_Free__malloc_free_int_64_bad();
void goodG2B_9();
__int64 goodB2G_8();
__int64 CWE415_Double_Free__malloc_free_int_64_good();
void __fastcall CWE415_Double_Free__malloc_free_char_65b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_char_65b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_char_65b_goodB2GSink();
void __fastcall CWE415_Double_Free__malloc_free_char_54b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_char_54b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_char_54b_goodB2GSink();
void CWE415_Double_Free__malloc_free_int64_t_52_bad();
void goodG2B_10();
void goodB2G_9();
void CWE415_Double_Free__malloc_free_int64_t_52_good();
void CWE415_Double_Free__malloc_free_int_04_bad();
__int64 goodB2G1_4();
void goodB2G2_4();
void goodG2B1_3();
void goodG2B2_3();
void CWE415_Double_Free__malloc_free_int_04_good();
void __fastcall CWE415_Double_Free__malloc_free_int64_t_51b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int64_t_51b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int64_t_51b_goodB2GSink();
void __fastcall CWE415_Double_Free__malloc_free_char_53c_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_char_53c_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_char_53c_goodB2GSink();
void __fastcall badSink_0(void *a1);
__int64 CWE415_Double_Free__malloc_free_long_44_bad();
void __fastcall goodG2BSink_0(void *a1);
__int64 goodG2B_11();
void goodB2GSink_0();
__int64 goodB2G_10();
__int64 CWE415_Double_Free__malloc_free_long_44_good();
void CWE415_Double_Free__malloc_free_int64_t_16_bad();
void goodB2G_11();
void goodG2B_12();
void CWE415_Double_Free__malloc_free_int64_t_16_good();
__int64 staticReturnsTrue_0();
__int64 staticReturnsFalse_0();
void CWE415_Double_Free__malloc_free_char_08_bad();
int goodB2G1_5();
__int64 goodB2G2_5();
void goodG2B1_4();
void goodG2B2_4();
void CWE415_Double_Free__malloc_free_char_08_good();
void CWE415_Double_Free__malloc_free_long_11_bad();
int goodB2G1_6();
__int64 goodB2G2_6();
void goodG2B1_5();
void goodG2B2_5();
void CWE415_Double_Free__malloc_free_long_11_good();
void CWE415_Double_Free__malloc_free_int64_t_07_bad();
int goodB2G1_7();
void goodB2G2_7();
void goodG2B1_6();
void goodG2B2_6();
void CWE415_Double_Free__malloc_free_int64_t_07_good();
void __fastcall CWE415_Double_Free__malloc_free_long_54e_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_long_54e_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_long_54e_goodB2GSink();
void CWE415_Double_Free__malloc_free_long_14_bad();
int goodB2G1_8();
void goodB2G2_8();
void goodG2B1_7();
void goodG2B2_7();
void CWE415_Double_Free__malloc_free_long_14_good();
void __fastcall CWE415_Double_Free__malloc_free_struct_64b_badSink(void **a1);
void __fastcall CWE415_Double_Free__malloc_free_struct_64b_goodG2BSink(void **a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_struct_64b_goodB2GSink(__int64 a1);
void __fastcall CWE415_Double_Free__malloc_free_int_63b_badSink(void **a1);
void __fastcall CWE415_Double_Free__malloc_free_int_63b_goodG2BSink(void **a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_int_63b_goodB2GSink(__int64 a1);
void *CWE415_Double_Free__malloc_free_long_61b_badSource();
void *CWE415_Double_Free__malloc_free_long_61b_goodG2BSource();
void *CWE415_Double_Free__malloc_free_long_61b_goodB2GSource();
void CWE415_Double_Free__malloc_free_long_10_bad();
int goodB2G1_9();
void goodB2G2_9();
void goodG2B1_8();
void goodG2B2_8();
void CWE415_Double_Free__malloc_free_long_10_good();
void __fastcall CWE415_Double_Free__malloc_free_int_22_badSink(void *a1);
int CWE415_Double_Free__malloc_free_int_22_goodB2G1Sink();
void CWE415_Double_Free__malloc_free_int_22_goodB2G2Sink();
void __fastcall CWE415_Double_Free__malloc_free_int_22_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_char_54_bad();
void goodG2B_13();
void goodB2G_12();
void CWE415_Double_Free__malloc_free_char_54_good();
void CWE415_Double_Free__malloc_free_struct_14_bad();
int goodB2G1_10();
void goodB2G2_10();
void goodG2B1_9();
void goodG2B2_9();
void CWE415_Double_Free__malloc_free_struct_14_good();
void CWE415_Double_Free__malloc_free_int64_t_51_bad();
void goodG2B_14();
void goodB2G_13();
void CWE415_Double_Free__malloc_free_int64_t_51_good();
void __fastcall CWE415_Double_Free__malloc_free_struct_52b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_struct_52b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_struct_52b_goodB2GSink();
void CWE415_Double_Free__malloc_free_struct_32_bad();
void goodG2B_15();
__int64 goodB2G_14();
__int64 CWE415_Double_Free__malloc_free_struct_32_good();
void __fastcall CWE415_Double_Free__malloc_free_long_54c_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_long_54c_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_long_54c_goodB2GSink();
void badSink_1();
void CWE415_Double_Free__malloc_free_int64_t_45_bad();
void goodG2BSink_1();
void goodG2B_16();
__int64 goodB2GSink_1();
__int64 goodB2G_15();
__int64 CWE415_Double_Free__malloc_free_int64_t_45_good();
void CWE415_Double_Free__malloc_free_struct_64_bad();
void goodG2B_17();
__int64 goodB2G_16();
__int64 CWE415_Double_Free__malloc_free_struct_64_good();
void CWE415_Double_Free__malloc_free_int64_t_06_bad();
__int64 goodB2G1_11();
void goodB2G2_11();
void goodG2B1_10();
void goodG2B2_10();
void CWE415_Double_Free__malloc_free_int64_t_06_good();
void CWE415_Double_Free__malloc_free_long_52_bad();
void goodG2B_18();
void goodB2G_17();
void CWE415_Double_Free__malloc_free_long_52_good();
void CWE415_Double_Free__malloc_free_char_32_bad();
void goodG2B_19();
__int64 goodB2G_18();
__int64 CWE415_Double_Free__malloc_free_char_32_good();
void __fastcall CWE415_Double_Free__malloc_free_long_51b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_long_51b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_long_51b_goodB2GSink();
void __fastcall CWE415_Double_Free__malloc_free_int64_t_54c_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int64_t_54c_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int64_t_54c_goodB2GSink();
void CWE415_Double_Free__malloc_free_long_16_bad();
void goodB2G_19();
void goodG2B_20();
void CWE415_Double_Free__malloc_free_long_16_good();
void __fastcall CWE415_Double_Free__malloc_free_long_54b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_long_54b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_long_54b_goodB2GSink();
void __fastcall badSink_2(void *a1);
void CWE415_Double_Free__malloc_free_int_41_bad();
void __fastcall goodG2BSink_2(void *a1);
void goodG2B_21();
void goodB2GSink_2();
void goodB2G_20();
void CWE415_Double_Free__malloc_free_int_41_good();
void CWE415_Double_Free__malloc_free_int64_t_11_bad();
int goodB2G1_12();
__int64 goodB2G2_12();
void goodG2B1_11();
void goodG2B2_11();
void CWE415_Double_Free__malloc_free_int64_t_11_good();
void __fastcall CWE415_Double_Free__malloc_free_int64_t_53d_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int64_t_53d_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int64_t_53d_goodB2GSink();
void __fastcall CWE415_Double_Free__malloc_free_char_51b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_char_51b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_char_51b_goodB2GSink();
void CWE415_Double_Free__malloc_free_char_64_bad();
void goodG2B_22();
__int64 goodB2G_21();
__int64 CWE415_Double_Free__malloc_free_char_64_good();
__int64 CWE415_Double_Free__malloc_free_int_65_bad();
__int64 goodG2B_23();
__int64 goodB2G_22();
__int64 CWE415_Double_Free__malloc_free_int_65_good();
void CWE415_Double_Free__malloc_free_int_15_bad();
void goodB2G1_13();
void goodB2G2_13();
void goodG2B1_12();
void goodG2B2_12();
void CWE415_Double_Free__malloc_free_int_15_good();
void CWE415_Double_Free__malloc_free_int_31_bad();
void goodG2B_24();
void *goodB2G_23();
void *CWE415_Double_Free__malloc_free_int_31_good();
void CWE415_Double_Free__malloc_free_long_17_bad();
void goodB2G_24();
void goodG2B_25();
void CWE415_Double_Free__malloc_free_long_17_good();
void CWE415_Double_Free__malloc_free_long_51_bad();
void goodG2B_26();
void goodB2G_25();
void CWE415_Double_Free__malloc_free_long_51_good();
void CWE415_Double_Free__malloc_free_char_04_bad();
__int64 goodB2G1_14();
void goodB2G2_14();
void goodG2B1_13();
void goodG2B2_13();
void CWE415_Double_Free__malloc_free_char_04_good();
void CWE415_Double_Free__malloc_free_char_31_bad();
void goodG2B_27();
void *goodB2G_26();
void *CWE415_Double_Free__malloc_free_char_31_good();
void CWE415_Double_Free__malloc_free_struct_54_bad();
void goodG2B_28();
void goodB2G_27();
void CWE415_Double_Free__malloc_free_struct_54_good();
void *badSource();
void CWE415_Double_Free__malloc_free_int_42_bad();
void *goodG2BSource();
void goodG2B_29();
void *goodB2GSource();
void *goodB2G_28();
void CWE415_Double_Free__malloc_free_int_42_good();
void *CWE415_Double_Free__malloc_free_char_61b_badSource();
void *CWE415_Double_Free__malloc_free_char_61b_goodG2BSource();
void *CWE415_Double_Free__malloc_free_char_61b_goodB2GSource();
void CWE415_Double_Free__malloc_free_int64_t_09_bad();
int goodB2G1_15();
void goodB2G2_15();
void goodG2B1_14();
void goodG2B2_14();
void CWE415_Double_Free__malloc_free_int64_t_09_good();
void __fastcall CWE415_Double_Free__malloc_free_struct_65b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_struct_65b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_struct_65b_goodB2GSink();
void CWE415_Double_Free__malloc_free_int_68b_badSink();
void CWE415_Double_Free__malloc_free_int_68b_goodG2BSink();
__int64 CWE415_Double_Free__malloc_free_int_68b_goodB2GSink();
void __fastcall CWE415_Double_Free__malloc_free_int_54b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int_54b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int_54b_goodB2GSink();
void CWE415_Double_Free__malloc_free_char_67_bad();
void goodG2B_30();
__int64 goodB2G_29();
__int64 CWE415_Double_Free__malloc_free_char_67_good();
void __fastcall badSink_3(void *a1);
void CWE415_Double_Free__malloc_free_long_21_bad();
int goodB2G1Sink();
int goodB2G1_16();
void goodB2G2Sink();
void goodB2G2_16();
void __fastcall goodG2BSink_3(void *a1);
void goodG2B_31();
void CWE415_Double_Free__malloc_free_long_21_good();
void badSink_4();
void CWE415_Double_Free__malloc_free_long_45_bad();
void goodG2BSink_4();
void goodG2B_32();
__int64 goodB2GSink_3();
__int64 goodB2G_30();
__int64 CWE415_Double_Free__malloc_free_long_45_good();
void CWE415_Double_Free__malloc_free_long_68b_badSink();
void CWE415_Double_Free__malloc_free_long_68b_goodG2BSink();
__int64 CWE415_Double_Free__malloc_free_long_68b_goodB2GSink();
void __fastcall CWE415_Double_Free__malloc_free_struct_53c_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_struct_53c_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_struct_53c_goodB2GSink();
void CWE415_Double_Free__malloc_free_long_06_bad();
__int64 goodB2G1_17();
void goodB2G2_17();
void goodG2B1_15();
void goodG2B2_15();
void CWE415_Double_Free__malloc_free_long_06_good();
void __fastcall CWE415_Double_Free__malloc_free_char_22_badSink(void *a1);
int CWE415_Double_Free__malloc_free_char_22_goodB2G1Sink();
void CWE415_Double_Free__malloc_free_char_22_goodB2G2Sink();
void __fastcall CWE415_Double_Free__malloc_free_char_22_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int_05_bad();
int goodB2G1_18();
void goodB2G2_18();
void goodG2B1_16();
void goodG2B2_16();
void CWE415_Double_Free__malloc_free_int_05_good();
void CWE415_Double_Free__malloc_free_int_17_bad();
void goodB2G_31();
void goodG2B_33();
void CWE415_Double_Free__malloc_free_int_17_good();
void __fastcall CWE415_Double_Free__malloc_free_int64_t_54b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int64_t_54b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int64_t_54b_goodB2GSink();
void __fastcall CWE415_Double_Free__malloc_free_long_67b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_long_67b_goodG2BSink(void *a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_long_67b_goodB2GSink(__int64 a1);
void CWE415_Double_Free__malloc_free_int64_t_64_bad();
void goodG2B_34();
__int64 goodB2G_32();
__int64 CWE415_Double_Free__malloc_free_int64_t_64_good();
void __fastcall CWE415_Double_Free__malloc_free_int_52c_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int_52c_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int_52c_goodB2GSink();
void CWE415_Double_Free__malloc_free_int_68_bad();
void goodG2B_35();
__int64 goodB2G_33();
__int64 CWE415_Double_Free__malloc_free_int_68_good();
void CWE415_Double_Free__malloc_free_int_34_bad();
void goodG2B_36();
void *goodB2G_34();
void *CWE415_Double_Free__malloc_free_int_34_good();
__int64 CWE415_Double_Free__malloc_free_struct_65_bad();
__int64 goodG2B_37();
__int64 goodB2G_35();
__int64 CWE415_Double_Free__malloc_free_struct_65_good();
void __fastcall CWE415_Double_Free__malloc_free_struct_22_badSink(void *a1);
int CWE415_Double_Free__malloc_free_struct_22_goodB2G1Sink();
void CWE415_Double_Free__malloc_free_struct_22_goodB2G2Sink();
void __fastcall CWE415_Double_Free__malloc_free_struct_22_goodG2BSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int_66b_badSink(__int64 a1);
void __fastcall CWE415_Double_Free__malloc_free_int_66b_goodG2BSink(__int64 a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_int_66b_goodB2GSink(__int64 a1);
void CWE415_Double_Free__malloc_free_long_12_bad();
__int64 goodB2G_36();
void goodG2B_38();
void CWE415_Double_Free__malloc_free_long_12_good();
void __fastcall CWE415_Double_Free__malloc_free_long_64b_badSink(void **a1);
void __fastcall CWE415_Double_Free__malloc_free_long_64b_goodG2BSink(void **a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_long_64b_goodB2GSink(__int64 a1);
void CWE415_Double_Free__malloc_free_struct_15_bad();
void goodB2G1_19();
void goodB2G2_19();
void goodG2B1_17();
void goodG2B2_17();
void CWE415_Double_Free__malloc_free_struct_15_good();
void CWE415_Double_Free__malloc_free_struct_07_bad();
int goodB2G1_20();
void goodB2G2_20();
void goodG2B1_18();
void goodG2B2_18();
void CWE415_Double_Free__malloc_free_struct_07_good();
void CWE415_Double_Free__malloc_free_char_51_bad();
void goodG2B_39();
void goodB2G_37();
void CWE415_Double_Free__malloc_free_char_51_good();
void *badSource_0();
void CWE415_Double_Free__malloc_free_struct_42_bad();
void *goodG2BSource_0();
void goodG2B_40();
void *goodB2GSource_0();
void *goodB2G_38();
void CWE415_Double_Free__malloc_free_struct_42_good();
void CWE415_Double_Free__malloc_free_int_53_bad();
void goodG2B_41();
void goodB2G_39();
void CWE415_Double_Free__malloc_free_int_53_good();
void CWE415_Double_Free__malloc_free_int64_t_01_bad();
void goodG2B_42();
void goodB2G_40();
void CWE415_Double_Free__malloc_free_int64_t_01_good();
void CWE415_Double_Free__malloc_free_long_32_bad();
void goodG2B_43();
__int64 goodB2G_41();
__int64 CWE415_Double_Free__malloc_free_long_32_good();
void CWE415_Double_Free__malloc_free_long_64_bad();
void goodG2B_44();
__int64 goodB2G_42();
__int64 CWE415_Double_Free__malloc_free_long_64_good();
void __fastcall CWE415_Double_Free__malloc_free_char_54d_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_char_54d_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_char_54d_goodB2GSink();
void CWE415_Double_Free__malloc_free_struct_68b_badSink();
void CWE415_Double_Free__malloc_free_struct_68b_goodG2BSink();
__int64 CWE415_Double_Free__malloc_free_struct_68b_goodB2GSink();
void __fastcall CWE415_Double_Free__malloc_free_int_54e_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int_54e_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int_54e_goodB2GSink();
void __fastcall badSink_5(void *a1);
void CWE415_Double_Free__malloc_free_int64_t_41_bad();
void __fastcall goodG2BSink_5(void *a1);
void goodG2B_45();
void goodB2GSink_4();
void goodB2G_43();
void CWE415_Double_Free__malloc_free_int64_t_41_good();
void CWE415_Double_Free__malloc_free_char_34_bad();
void goodG2B_46();
void *goodB2G_44();
void *CWE415_Double_Free__malloc_free_char_34_good();
void __fastcall CWE415_Double_Free__malloc_free_char_63b_badSink(void **a1);
void __fastcall CWE415_Double_Free__malloc_free_char_63b_goodG2BSink(void **a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_char_63b_goodB2GSink(__int64 a1);
void CWE415_Double_Free__malloc_free_char_13_bad();
int goodB2G1_21();
void goodB2G2_21();
void goodG2B1_19();
void goodG2B2_19();
void CWE415_Double_Free__malloc_free_char_13_good();
void CWE415_Double_Free__malloc_free_struct_05_bad();
int goodB2G1_22();
void goodB2G2_22();
void goodG2B1_20();
void goodG2B2_20();
void CWE415_Double_Free__malloc_free_struct_05_good();
void __fastcall badSink_6(void *a1);
void CWE415_Double_Free__malloc_free_struct_41_bad();
void __fastcall goodG2BSink_6(void *a1);
void goodG2B_47();
void goodB2GSink_5();
void goodB2G_45();
void CWE415_Double_Free__malloc_free_struct_41_good();
void __fastcall CWE415_Double_Free__malloc_free_struct_53b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_struct_53b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_struct_53b_goodB2GSink();
__int64 staticReturnsTrue_1();
__int64 staticReturnsFalse_1();
void CWE415_Double_Free__malloc_free_long_08_bad();
int goodB2G1_23();
__int64 goodB2G2_23();
void goodG2B1_21();
void goodG2B2_21();
void CWE415_Double_Free__malloc_free_long_08_good();
void CWE415_Double_Free__malloc_free_long_04_bad();
__int64 goodB2G1_24();
void goodB2G2_24();
void goodG2B1_22();
void goodG2B2_22();
void CWE415_Double_Free__malloc_free_long_04_good();
void CWE415_Double_Free__malloc_free_int_09_bad();
int goodB2G1_25();
void goodB2G2_25();
void goodG2B1_23();
void goodG2B2_23();
void CWE415_Double_Free__malloc_free_int_09_good();
void __fastcall CWE415_Double_Free__malloc_free_struct_52c_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_struct_52c_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_struct_52c_goodB2GSink();
void __fastcall CWE415_Double_Free__malloc_free_int64_t_53c_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int64_t_53c_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int64_t_53c_goodB2GSink();
void CWE415_Double_Free__malloc_free_int64_t_18_bad();
void goodB2G_46();
void goodG2B_48();
void CWE415_Double_Free__malloc_free_int64_t_18_good();
void __fastcall CWE415_Double_Free__malloc_free_struct_54d_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_struct_54d_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_struct_54d_goodB2GSink();
void CWE415_Double_Free__malloc_free_struct_68_bad();
void goodG2B_49();
__int64 goodB2G_47();
__int64 CWE415_Double_Free__malloc_free_struct_68_good();
void CWE415_Double_Free__malloc_free_struct_34_bad();
void goodG2B_50();
void *goodB2G_48();
void *CWE415_Double_Free__malloc_free_struct_34_good();
__int64 staticReturnsTrue_2();
__int64 staticReturnsFalse_2();
void CWE415_Double_Free__malloc_free_struct_08_bad();
int goodB2G1_26();
__int64 goodB2G2_26();
void goodG2B1_24();
void goodG2B2_24();
void CWE415_Double_Free__malloc_free_struct_08_good();
void CWE415_Double_Free__malloc_free_long_02_bad();
void goodB2G1_27();
void goodB2G2_27();
void goodG2B1_25();
void goodG2B2_25();
void CWE415_Double_Free__malloc_free_long_02_good();
void CWE415_Double_Free__malloc_free_long_67_bad();
void goodG2B_51();
__int64 goodB2G_49();
__int64 CWE415_Double_Free__malloc_free_long_67_good();
void __fastcall badSink_7(void *a1);
void CWE415_Double_Free__malloc_free_char_21_bad();
int goodB2G1Sink_0();
int goodB2G1_28();
void goodB2G2Sink_0();
void goodB2G2_28();
void __fastcall goodG2BSink_7(void *a1);
void goodG2B_52();
void CWE415_Double_Free__malloc_free_char_21_good();
void CWE415_Double_Free__malloc_free_char_03_bad();
void goodB2G1_29();
void goodB2G2_29();
void goodG2B1_26();
void goodG2B2_26();
void CWE415_Double_Free__malloc_free_char_03_good();
void __fastcall CWE415_Double_Free__malloc_free_int_65b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int_65b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int_65b_goodB2GSink();
__int64 CWE415_Double_Free__malloc_free_int64_t_65_bad();
__int64 goodG2B_53();
__int64 goodB2G_50();
__int64 CWE415_Double_Free__malloc_free_int64_t_65_good();
void CWE415_Double_Free__malloc_free_int64_t_15_bad();
void goodB2G1_30();
void goodB2G2_30();
void goodG2B1_27();
void goodG2B2_27();
void CWE415_Double_Free__malloc_free_int64_t_15_good();
void __fastcall CWE415_Double_Free__malloc_free_int_53b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int_53b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int_53b_goodB2GSink();
void __fastcall CWE415_Double_Free__malloc_free_long_22_badSink(void *a1);
int CWE415_Double_Free__malloc_free_long_22_goodB2G1Sink();
void CWE415_Double_Free__malloc_free_long_22_goodB2G2Sink();
void __fastcall CWE415_Double_Free__malloc_free_long_22_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_char_18_bad();
void goodB2G_51();
void goodG2B_54();
void CWE415_Double_Free__malloc_free_char_18_good();
void __fastcall CWE415_Double_Free__malloc_free_int_53c_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int_53c_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int_53c_goodB2GSink();
void CWE415_Double_Free__malloc_free_struct_53_bad();
void goodG2B_55();
void goodB2G_52();
void CWE415_Double_Free__malloc_free_struct_53_good();
void CWE415_Double_Free__malloc_free_int_52_bad();
void goodG2B_56();
void goodB2G_53();
void CWE415_Double_Free__malloc_free_int_52_good();
void *badSource_1();
void CWE415_Double_Free__malloc_free_int64_t_42_bad();
void *goodG2BSource_1();
void goodG2B_57();
void *goodB2GSource_1();
void *goodB2G_54();
void CWE415_Double_Free__malloc_free_int64_t_42_good();
void __fastcall CWE415_Double_Free__malloc_free_int_51b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int_51b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int_51b_goodB2GSink();
void CWE415_Double_Free__malloc_free_int_16_bad();
void goodB2G_55();
void goodG2B_58();
void CWE415_Double_Free__malloc_free_int_16_good();
void CWE415_Double_Free__malloc_free_int64_t_68b_badSink();
void CWE415_Double_Free__malloc_free_int64_t_68b_goodG2BSink();
__int64 CWE415_Double_Free__malloc_free_int64_t_68b_goodB2GSink();
void CWE415_Double_Free__malloc_free_char_12_bad();
__int64 goodB2G_56();
void goodG2B_59();
void CWE415_Double_Free__malloc_free_char_12_good();
void __fastcall CWE415_Double_Free__malloc_free_struct_54e_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_struct_54e_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_struct_54e_goodB2GSink();
void CWE415_Double_Free__malloc_free_struct_66_bad();
void goodG2B_60();
__int64 goodB2G_57();
__int64 CWE415_Double_Free__malloc_free_struct_66_good();
void CWE415_Double_Free__malloc_free_int_67_bad();
void goodG2B_61();
__int64 goodB2G_58();
__int64 CWE415_Double_Free__malloc_free_int_67_good();
void CWE415_Double_Free__malloc_free_int64_t_05_bad();
int goodB2G1_31();
void goodB2G2_31();
void goodG2B1_28();
void goodG2B2_28();
void CWE415_Double_Free__malloc_free_int64_t_05_good();
void CWE415_Double_Free__malloc_free_int_51_bad();
void goodG2B_62();
void goodB2G_59();
void CWE415_Double_Free__malloc_free_int_51_good();
void CWE415_Double_Free__malloc_free_char_17_bad();
void goodB2G_60();
void goodG2B_63();
void CWE415_Double_Free__malloc_free_char_17_good();
void __fastcall CWE415_Double_Free__malloc_free_int64_t_53b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int64_t_53b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int64_t_53b_goodB2GSink();
void __fastcall badSink_8(void *a1);
__int64 CWE415_Double_Free__malloc_free_char_44_bad();
void __fastcall goodG2BSink_8(void *a1);
__int64 goodG2B_64();
void goodB2GSink_6();
__int64 goodB2G_61();
__int64 CWE415_Double_Free__malloc_free_char_44_good();
void CWE415_Double_Free__malloc_free_int64_t_61_bad();
void goodG2B_65();
void *goodB2G_62();
void *CWE415_Double_Free__malloc_free_int64_t_61_good();
void __fastcall CWE415_Double_Free__malloc_free_int64_t_52c_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int64_t_52c_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int64_t_52c_goodB2GSink();
void CWE415_Double_Free__malloc_free_char_11_bad();
int goodB2G1_32();
__int64 goodB2G2_32();
void goodG2B1_29();
void goodG2B2_29();
void CWE415_Double_Free__malloc_free_char_11_good();
void CWE415_Double_Free__malloc_free_char_02_bad();
void goodB2G1_33();
void goodB2G2_33();
void goodG2B1_30();
void goodG2B2_30();
void CWE415_Double_Free__malloc_free_char_02_good();
void CWE415_Double_Free__malloc_free_int64_t_68_bad();
void goodG2B_66();
__int64 goodB2G_63();
__int64 CWE415_Double_Free__malloc_free_int64_t_68_good();
void __fastcall CWE415_Double_Free__malloc_free_struct_63b_badSink(void **a1);
void __fastcall CWE415_Double_Free__malloc_free_struct_63b_goodG2BSink(void **a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_struct_63b_goodB2GSink(__int64 a1);
void CWE415_Double_Free__malloc_free_int64_t_34_bad();
void goodG2B_67();
void *goodB2G_64();
void *CWE415_Double_Free__malloc_free_int64_t_34_good();
void __fastcall CWE415_Double_Free__malloc_free_long_54d_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_long_54d_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_long_54d_goodB2GSink();
void badSink_9();
void CWE415_Double_Free__malloc_free_int_45_bad();
void goodG2BSink_9();
void goodG2B_68();
__int64 goodB2GSink_7();
__int64 goodB2G_65();
__int64 CWE415_Double_Free__malloc_free_int_45_good();
void __fastcall CWE415_Double_Free__malloc_free_int64_t_66b_badSink(__int64 a1);
void __fastcall CWE415_Double_Free__malloc_free_int64_t_66b_goodG2BSink(__int64 a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_int64_t_66b_goodB2GSink(__int64 a1);
void CWE415_Double_Free__malloc_free_long_13_bad();
int goodB2G1_34();
void goodB2G2_34();
void goodG2B1_31();
void goodG2B2_31();
void CWE415_Double_Free__malloc_free_long_13_good();
void CWE415_Double_Free__malloc_free_int_06_bad();
__int64 goodB2G1_35();
void goodB2G2_35();
void goodG2B1_32();
void goodG2B2_32();
void CWE415_Double_Free__malloc_free_int_06_good();
void __fastcall CWE415_Double_Free__malloc_free_long_63b_badSink(void **a1);
void __fastcall CWE415_Double_Free__malloc_free_long_63b_goodG2BSink(void **a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_long_63b_goodB2GSink(__int64 a1);
void CWE415_Double_Free__malloc_free_char_10_bad();
int goodB2G1_36();
void goodB2G2_36();
void goodG2B1_33();
void goodG2B2_33();
void CWE415_Double_Free__malloc_free_char_10_good();
void CWE415_Double_Free__malloc_free_char_68b_badSink();
void CWE415_Double_Free__malloc_free_char_68b_goodG2BSink();
__int64 CWE415_Double_Free__malloc_free_char_68b_goodB2GSink();
void CWE415_Double_Free__malloc_free_long_01_bad();
void goodG2B_69();
void goodB2G_66();
void CWE415_Double_Free__malloc_free_long_01_good();
void CWE415_Double_Free__malloc_free_struct_52_bad();
void goodG2B_70();
void goodB2G_67();
void CWE415_Double_Free__malloc_free_struct_52_good();
void CWE415_Double_Free__malloc_free_long_61_bad();
void goodG2B_71();
void *goodB2G_68();
void *CWE415_Double_Free__malloc_free_long_61_good();
void CWE415_Double_Free__malloc_free_int_22_bad();
int goodB2G1_37();
void goodB2G2_37();
void goodG2B_72();
void CWE415_Double_Free__malloc_free_int_22_good();
void CWE415_Double_Free__malloc_free_struct_10_bad();
int goodB2G1_38();
void goodB2G2_38();
void goodG2B1_34();
void goodG2B2_34();
void CWE415_Double_Free__malloc_free_struct_10_good();
void __fastcall CWE415_Double_Free__malloc_free_int64_t_54d_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int64_t_54d_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int64_t_54d_goodB2GSink();
void CWE415_Double_Free__malloc_free_struct_04_bad();
__int64 goodB2G1_39();
void goodB2G2_39();
void goodG2B1_35();
void goodG2B2_35();
void CWE415_Double_Free__malloc_free_struct_04_good();
void CWE415_Double_Free__malloc_free_struct_31_bad();
void goodG2B_73();
void *goodB2G_69();
void *CWE415_Double_Free__malloc_free_struct_31_good();
void CWE415_Double_Free__malloc_free_long_09_bad();
int goodB2G1_40();
void goodB2G2_40();
void goodG2B1_36();
void goodG2B2_36();
void CWE415_Double_Free__malloc_free_long_09_good();
void badSink_10();
void CWE415_Double_Free__malloc_free_char_45_bad();
void goodG2BSink_10();
void goodG2B_74();
__int64 goodB2GSink_8();
__int64 goodB2G_70();
__int64 CWE415_Double_Free__malloc_free_char_45_good();
void __fastcall CWE415_Double_Free__malloc_free_int_54d_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int_54d_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int_54d_goodB2GSink();
void CWE415_Double_Free__malloc_free_struct_67_bad();
void goodG2B_75();
__int64 goodB2G_71();
__int64 CWE415_Double_Free__malloc_free_struct_67_good();
__int64 CWE415_Double_Free__malloc_free_char_65_bad();
__int64 goodG2B_76();
__int64 goodB2G_72();
__int64 CWE415_Double_Free__malloc_free_char_65_good();
void CWE415_Double_Free__malloc_free_int64_t_22_bad();
int goodB2G1_41();
void goodB2G2_41();
void goodG2B_77();
void CWE415_Double_Free__malloc_free_int64_t_22_good();
void CWE415_Double_Free__malloc_free_char_15_bad();
void goodB2G1_42();
void goodB2G2_42();
void goodG2B1_37();
void goodG2B2_37();
void CWE415_Double_Free__malloc_free_char_15_good();
void CWE415_Double_Free__malloc_free_int_13_bad();
int goodB2G1_43();
void goodB2G2_43();
void goodG2B1_38();
void goodG2B2_38();
void CWE415_Double_Free__malloc_free_int_13_good();
void __fastcall CWE415_Double_Free__malloc_free_int64_t_64b_badSink(void **a1);
void __fastcall CWE415_Double_Free__malloc_free_int64_t_64b_goodG2BSink(void **a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_int64_t_64b_goodB2GSink(__int64 a1);
void *badSource_2();
void CWE415_Double_Free__malloc_free_char_42_bad();
void *goodG2BSource_2();
void goodG2B_78();
void *goodB2GSource_2();
void *goodB2G_73();
void CWE415_Double_Free__malloc_free_char_42_good();
void CWE415_Double_Free__malloc_free_long_66_bad();
void goodG2B_79();
__int64 goodB2G_74();
__int64 CWE415_Double_Free__malloc_free_long_66_good();
void CWE415_Double_Free__malloc_free_int_32_bad();
void goodG2B_80();
__int64 goodB2G_75();
__int64 CWE415_Double_Free__malloc_free_int_32_good();
void CWE415_Double_Free__malloc_free_int64_t_14_bad();
int goodB2G1_44();
void goodB2G2_44();
void goodG2B1_39();
void goodG2B2_39();
void CWE415_Double_Free__malloc_free_int64_t_14_good();
void __fastcall CWE415_Double_Free__malloc_free_struct_51b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_struct_51b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_struct_51b_goodB2GSink();
void __fastcall CWE415_Double_Free__malloc_free_long_65b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_long_65b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_long_65b_goodB2GSink();
void CWE415_Double_Free__malloc_free_char_22_bad();
int goodB2G1_45();
void goodB2G2_45();
void goodG2B_81();
void CWE415_Double_Free__malloc_free_char_22_good();
void __fastcall CWE415_Double_Free__malloc_free_int64_t_67b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int64_t_67b_goodG2BSink(void *a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_int64_t_67b_goodB2GSink(__int64 a1);
void __fastcall badSink_11(void *a1);
void CWE415_Double_Free__malloc_free_int_21_bad();
int goodB2G1Sink_1();
int goodB2G1_46();
void goodB2G2Sink_1();
void goodB2G2_46();
void __fastcall goodG2BSink_11(void *a1);
void goodG2B_82();
void CWE415_Double_Free__malloc_free_int_21_good();
void CWE415_Double_Free__malloc_free_int_03_bad();
void goodB2G1_47();
void goodB2G2_47();
void goodG2B1_40();
void goodG2B2_40();
void CWE415_Double_Free__malloc_free_int_03_good();
void CWE415_Double_Free__malloc_free_struct_22_bad();
int goodB2G1_48();
void goodB2G2_48();
void goodG2B_83();
void CWE415_Double_Free__malloc_free_struct_22_good();
void CWE415_Double_Free__malloc_free_int_63_bad();
void goodG2B_84();
__int64 goodB2G_76();
__int64 CWE415_Double_Free__malloc_free_int_63_good();
void CWE415_Double_Free__malloc_free_char_05_bad();
int goodB2G1_49();
void goodB2G2_49();
void goodG2B1_41();
void goodG2B2_41();
void CWE415_Double_Free__malloc_free_char_05_good();
void __fastcall badSink_12(void *a1);
void CWE415_Double_Free__malloc_free_char_41_bad();
void __fastcall goodG2BSink_12(void *a1);
void goodG2B_85();
void goodB2GSink_9();
void goodB2G_77();
void CWE415_Double_Free__malloc_free_char_41_good();
void CWE415_Double_Free__malloc_free_int_18_bad();
void goodB2G_78();
void goodG2B_86();
void CWE415_Double_Free__malloc_free_int_18_good();
__int64 staticReturnsTrue_3();
__int64 staticReturnsFalse_3();
void CWE415_Double_Free__malloc_free_int_08_bad();
int goodB2G1_50();
__int64 goodB2G2_50();
void goodG2B1_42();
void goodG2B2_42();
void CWE415_Double_Free__malloc_free_int_08_good();
void CWE415_Double_Free__malloc_free_long_54_bad();
void goodG2B_87();
void goodB2G_79();
void CWE415_Double_Free__malloc_free_long_54_good();
void CWE415_Double_Free__malloc_free_int_66_bad();
void goodG2B_88();
__int64 goodB2G_80();
__int64 CWE415_Double_Free__malloc_free_int_66_good();
void __fastcall CWE415_Double_Free__malloc_free_char_52c_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_char_52c_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_char_52c_goodB2GSink();
void CWE415_Double_Free__malloc_free_int64_t_04_bad();
__int64 goodB2G1_51();
void goodB2G2_51();
void goodG2B1_43();
void goodG2B2_43();
void CWE415_Double_Free__malloc_free_int64_t_04_good();
void CWE415_Double_Free__malloc_free_int_14_bad();
int goodB2G1_52();
void goodB2G2_52();
void goodG2B1_44();
void goodG2B2_44();
void CWE415_Double_Free__malloc_free_int_14_good();
void badSink_13();
void CWE415_Double_Free__malloc_free_struct_45_bad();
void goodG2BSink_13();
void goodG2B_89();
__int64 goodB2GSink_10();
__int64 goodB2G_81();
__int64 CWE415_Double_Free__malloc_free_struct_45_good();
void CWE415_Double_Free__malloc_free_char_68_bad();
void goodG2B_90();
__int64 goodB2G_82();
__int64 CWE415_Double_Free__malloc_free_char_68_good();
void __fastcall CWE415_Double_Free__malloc_free_int_52b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int_52b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int_52b_goodB2GSink();
void CWE415_Double_Free__malloc_free_long_31_bad();
void goodG2B_91();
void *goodB2G_83();
void *CWE415_Double_Free__malloc_free_long_31_good();
void __fastcall CWE415_Double_Free__malloc_free_char_53b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_char_53b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_char_53b_goodB2GSink();
void __fastcall CWE415_Double_Free__malloc_free_char_66b_badSink(__int64 a1);
void __fastcall CWE415_Double_Free__malloc_free_char_66b_goodG2BSink(__int64 a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_char_66b_goodB2GSink(__int64 a1);
void CWE415_Double_Free__malloc_free_int_12_bad();
__int64 goodB2G_84();
void goodG2B_92();
void CWE415_Double_Free__malloc_free_int_12_good();
void CWE415_Double_Free__malloc_free_int64_t_67_bad();
void goodG2B_93();
__int64 goodB2G_85();
__int64 CWE415_Double_Free__malloc_free_int64_t_67_good();
void __fastcall CWE415_Double_Free__malloc_free_char_53d_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_char_53d_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_char_53d_goodB2GSink();
void __fastcall CWE415_Double_Free__malloc_free_int64_t_22_badSink(void *a1);
int CWE415_Double_Free__malloc_free_int64_t_22_goodB2G1Sink();
void CWE415_Double_Free__malloc_free_int64_t_22_goodB2G2Sink();
void __fastcall CWE415_Double_Free__malloc_free_int64_t_22_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_char_53_bad();
void goodG2B_94();
void goodB2G_86();
void CWE415_Double_Free__malloc_free_char_53_good();
void __fastcall CWE415_Double_Free__malloc_free_long_53c_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_long_53c_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_long_53c_goodB2GSink();
void __fastcall badSink_14(void *a1);
__int64 CWE415_Double_Free__malloc_free_int_44_bad();
void __fastcall goodG2BSink_14(void *a1);
__int64 goodG2B_95();
void goodB2GSink_11();
__int64 goodB2G_87();
__int64 CWE415_Double_Free__malloc_free_int_44_good();
void CWE415_Double_Free__malloc_free_int_11_bad();
int goodB2G1_53();
__int64 goodB2G2_53();
void goodG2B1_45();
void goodG2B2_45();
void CWE415_Double_Free__malloc_free_int_11_good();
void CWE415_Double_Free__malloc_free_int_02_bad();
void goodB2G1_54();
void goodB2G2_54();
void goodG2B1_46();
void goodG2B2_46();
void CWE415_Double_Free__malloc_free_int_02_good();
void __fastcall CWE415_Double_Free__malloc_free_char_54e_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_char_54e_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_char_54e_goodB2GSink();
void CWE415_Double_Free__malloc_free_struct_51_bad();
void goodG2B_96();
void goodB2G_88();
void CWE415_Double_Free__malloc_free_struct_51_good();
void CWE415_Double_Free__malloc_free_struct_03_bad();
void goodB2G1_55();
void goodB2G2_55();
void goodG2B1_47();
void goodG2B2_47();
void CWE415_Double_Free__malloc_free_struct_03_good();
__int64 CWE415_Double_Free__malloc_free_long_65_bad();
__int64 goodG2B_97();
__int64 goodB2G_89();
__int64 CWE415_Double_Free__malloc_free_long_65_good();
void CWE415_Double_Free__malloc_free_struct_63_bad();
void goodG2B_98();
__int64 goodB2G_90();
__int64 CWE415_Double_Free__malloc_free_struct_63_good();
void __fastcall CWE415_Double_Free__malloc_free_long_53d_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_long_53d_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_long_53d_goodB2GSink();
void CWE415_Double_Free__malloc_free_long_15_bad();
void goodB2G1_56();
void goodB2G2_56();
void goodG2B1_48();
void goodG2B2_48();
void CWE415_Double_Free__malloc_free_long_15_good();
void CWE415_Double_Free__malloc_free_char_07_bad();
int goodB2G1_57();
void goodB2G2_57();
void goodG2B1_49();
void goodG2B2_49();
void CWE415_Double_Free__malloc_free_char_07_good();
void CWE415_Double_Free__malloc_free_int_10_bad();
int goodB2G1_58();
void goodB2G2_58();
void goodG2B1_50();
void goodG2B2_50();
void CWE415_Double_Free__malloc_free_int_10_good();
void CWE415_Double_Free__malloc_free_struct_18_bad();
void goodB2G_91();
void goodG2B_99();
void CWE415_Double_Free__malloc_free_struct_18_good();
void *badSource_3();
void CWE415_Double_Free__malloc_free_long_42_bad();
void *goodG2BSource_3();
void goodG2B_100();
void *goodB2GSource_3();
void *goodB2G_92();
void CWE415_Double_Free__malloc_free_long_42_good();
void __fastcall CWE415_Double_Free__malloc_free_int_54c_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int_54c_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int_54c_goodB2GSink();
void CWE415_Double_Free__malloc_free_struct_13_bad();
int goodB2G1_59();
void goodB2G2_59();
void goodG2B1_51();
void goodG2B2_51();
void CWE415_Double_Free__malloc_free_struct_13_good();
void CWE415_Double_Free__malloc_free_int_01_bad();
void goodG2B_101();
void goodB2G_93();
void CWE415_Double_Free__malloc_free_int_01_good();
void __fastcall CWE415_Double_Free__malloc_free_int_53d_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_int_53d_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_int_53d_goodB2GSink();
void CWE415_Double_Free__malloc_free_struct_12_bad();
__int64 goodB2G_94();
void goodG2B_102();
void CWE415_Double_Free__malloc_free_struct_12_good();
void CWE415_Double_Free__malloc_free_int64_t_13_bad();
int goodB2G1_60();
void goodB2G2_60();
void goodG2B1_52();
void goodG2B2_52();
void CWE415_Double_Free__malloc_free_int64_t_13_good();
void CWE415_Double_Free__malloc_free_int_61_bad();
void goodG2B_103();
void *goodB2G_95();
void *CWE415_Double_Free__malloc_free_int_61_good();
void __fastcall CWE415_Double_Free__malloc_free_int64_t_63b_badSink(void **a1);
void __fastcall CWE415_Double_Free__malloc_free_int64_t_63b_goodG2BSink(void **a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_int64_t_63b_goodB2GSink(__int64 a1);
void CWE415_Double_Free__malloc_free_char_52_bad();
void goodG2B_104();
void goodB2G_96();
void CWE415_Double_Free__malloc_free_char_52_good();
void CWE415_Double_Free__malloc_free_long_05_bad();
int goodB2G1_61();
void goodB2G2_61();
void goodG2B1_53();
void goodG2B2_53();
void CWE415_Double_Free__malloc_free_long_05_good();
void __fastcall badSink_15(void *a1);
void CWE415_Double_Free__malloc_free_long_41_bad();
void __fastcall goodG2BSink_15(void *a1);
void goodG2B_105();
void goodB2GSink_12();
void goodB2G_97();
void CWE415_Double_Free__malloc_free_long_41_good();
void CWE415_Double_Free__malloc_free_struct_17_bad();
void goodB2G_98();
void goodG2B_106();
void CWE415_Double_Free__malloc_free_struct_17_good();
void CWE415_Double_Free__malloc_free_char_16_bad();
void goodB2G_99();
void goodG2B_107();
void CWE415_Double_Free__malloc_free_char_16_good();
void __fastcall CWE415_Double_Free__malloc_free_long_52c_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_long_52c_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_long_52c_goodB2GSink();
void __fastcall badSink_16(void *a1);
__int64 CWE415_Double_Free__malloc_free_struct_44_bad();
void __fastcall goodG2BSink_16(void *a1);
__int64 goodG2B_108();
void goodB2GSink_13();
__int64 goodB2G_100();
__int64 CWE415_Double_Free__malloc_free_struct_44_good();
void CWE415_Double_Free__malloc_free_int_07_bad();
int goodB2G1_62();
void goodB2G2_62();
void goodG2B1_54();
void goodG2B2_54();
void CWE415_Double_Free__malloc_free_int_07_good();
void CWE415_Double_Free__malloc_free_struct_11_bad();
int goodB2G1_63();
__int64 goodB2G2_63();
void goodG2B1_55();
void goodG2B2_55();
void CWE415_Double_Free__malloc_free_struct_11_good();
void CWE415_Double_Free__malloc_free_struct_02_bad();
void goodB2G1_64();
void goodB2G2_64();
void goodG2B1_56();
void goodG2B2_56();
void CWE415_Double_Free__malloc_free_struct_02_good();
void CWE415_Double_Free__malloc_free_char_63_bad();
void goodG2B_109();
__int64 goodB2G_101();
__int64 CWE415_Double_Free__malloc_free_char_63_good();
void CWE415_Double_Free__malloc_free_long_34_bad();
void goodG2B_110();
void *goodB2G_102();
void *CWE415_Double_Free__malloc_free_long_34_good();
void __fastcall CWE415_Double_Free__malloc_free_long_66b_badSink(__int64 a1);
void __fastcall CWE415_Double_Free__malloc_free_long_66b_goodG2BSink(__int64 a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_long_66b_goodB2GSink(__int64 a1);
void __fastcall badSink_17(void *a1);
void CWE415_Double_Free__malloc_free_int64_t_21_bad();
int goodB2G1Sink_2();
int goodB2G1_65();
void goodB2G2Sink_2();
void goodB2G2_65();
void __fastcall goodG2BSink_17(void *a1);
void goodG2B_111();
void CWE415_Double_Free__malloc_free_int64_t_21_good();
void CWE415_Double_Free__malloc_free_int64_t_03_bad();
void goodB2G1_66();
void goodB2G2_66();
void goodG2B1_57();
void goodG2B2_57();
void CWE415_Double_Free__malloc_free_int64_t_03_good();
void CWE415_Double_Free__malloc_free_int64_t_63_bad();
void goodG2B_112();
__int64 goodB2G_103();
__int64 CWE415_Double_Free__malloc_free_int64_t_63_good();
void *CWE415_Double_Free__malloc_free_struct_61b_badSource();
void *CWE415_Double_Free__malloc_free_struct_61b_goodG2BSource();
void *CWE415_Double_Free__malloc_free_struct_61b_goodB2GSource();
void CWE415_Double_Free__malloc_free_long_53_bad();
void goodG2B_113();
void goodB2G_104();
void CWE415_Double_Free__malloc_free_long_53_good();
void __fastcall CWE415_Double_Free__malloc_free_struct_54b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_struct_54b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_struct_54b_goodB2GSink();
void __fastcall CWE415_Double_Free__malloc_free_struct_54c_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_struct_54c_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_struct_54c_goodB2GSink();
void CWE415_Double_Free__malloc_free_char_66_bad();
void goodG2B_114();
__int64 goodB2G_105();
__int64 CWE415_Double_Free__malloc_free_char_66_good();
void CWE415_Double_Free__malloc_free_struct_01_bad();
void goodG2B_115();
void goodB2G_106();
void CWE415_Double_Free__malloc_free_struct_01_good();
void __fastcall CWE415_Double_Free__malloc_free_struct_53d_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_struct_53d_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_struct_53d_goodB2GSink();
void __fastcall CWE415_Double_Free__malloc_free_char_52b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_char_52b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_char_52b_goodB2GSink();
void CWE415_Double_Free__malloc_free_int64_t_12_bad();
__int64 goodB2G_107();
void goodG2B_116();
void CWE415_Double_Free__malloc_free_int64_t_12_good();
void CWE415_Double_Free__malloc_free_char_06_bad();
__int64 goodB2G1_67();
void goodB2G2_67();
void goodG2B1_58();
void goodG2B2_58();
void CWE415_Double_Free__malloc_free_char_06_good();
void CWE415_Double_Free__malloc_free_struct_61_bad();
void goodG2B_117();
void *goodB2G_108();
void *CWE415_Double_Free__malloc_free_struct_61_good();
void CWE415_Double_Free__malloc_free_int64_t_31_bad();
void goodG2B_118();
void *goodB2G_109();
void *CWE415_Double_Free__malloc_free_int64_t_31_good();
void CWE415_Double_Free__malloc_free_long_07_bad();
int goodB2G1_68();
void goodB2G2_68();
void goodG2B1_59();
void goodG2B2_59();
void CWE415_Double_Free__malloc_free_long_07_good();
void *CWE415_Double_Free__malloc_free_int_61b_badSource();
void *CWE415_Double_Free__malloc_free_int_61b_goodG2BSource();
void *CWE415_Double_Free__malloc_free_int_61b_goodB2GSource();
void __fastcall CWE415_Double_Free__malloc_free_long_52b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_long_52b_goodG2BSink(void *a1);
void CWE415_Double_Free__malloc_free_long_52b_goodB2GSink();
void CWE415_Double_Free__malloc_free_int_54_bad();
void goodG2B_119();
void goodB2G_110();
void CWE415_Double_Free__malloc_free_int_54_good();
void CWE415_Double_Free__malloc_free_long_68_bad();
void goodG2B_120();
__int64 goodB2G_111();
__int64 CWE415_Double_Free__malloc_free_long_68_good();
void CWE415_Double_Free__malloc_free_struct_09_bad();
int goodB2G1_69();
void goodB2G2_69();
void goodG2B1_60();
void goodG2B2_60();
void CWE415_Double_Free__malloc_free_struct_09_good();
void CWE415_Double_Free__malloc_free_int64_t_17_bad();
void goodB2G_112();
void goodG2B_121();
void CWE415_Double_Free__malloc_free_int64_t_17_good();
void __fastcall badSink_18(void *a1);
void CWE415_Double_Free__malloc_free_struct_21_bad();
int goodB2G1Sink_3();
int goodB2G1_70();
void goodB2G2Sink_3();
void goodB2G2_70();
void __fastcall goodG2BSink_18(void *a1);
void goodG2B_122();
void CWE415_Double_Free__malloc_free_struct_21_good();
void CWE415_Double_Free__malloc_free_int64_t_32_bad();
void goodG2B_123();
__int64 goodB2G_113();
__int64 CWE415_Double_Free__malloc_free_int64_t_32_good();
void CWE415_Double_Free__malloc_free_int64_t_02_bad();
void goodB2G1_71();
void goodB2G2_71();
void goodG2B1_61();
void goodG2B2_61();
void CWE415_Double_Free__malloc_free_int64_t_02_good();
void __fastcall CWE415_Double_Free__malloc_free_char_64b_badSink(void **a1);
void __fastcall CWE415_Double_Free__malloc_free_char_64b_goodG2BSink(void **a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_char_64b_goodB2GSink(__int64 a1);
void *CWE415_Double_Free__malloc_free_int64_t_61b_badSource();
void *CWE415_Double_Free__malloc_free_int64_t_61b_goodG2BSource();
void *CWE415_Double_Free__malloc_free_int64_t_61b_goodB2GSource();
void CWE415_Double_Free__malloc_free_int64_t_10_bad();
int goodB2G1_72();
void goodB2G2_72();
void goodG2B1_62();
void goodG2B2_62();
void CWE415_Double_Free__malloc_free_int64_t_10_good();
void CWE415_Double_Free__malloc_free_char_14_bad();
int goodB2G1_73();
void goodB2G2_73();
void goodG2B1_63();
void goodG2B2_63();
void CWE415_Double_Free__malloc_free_char_14_good();
void __fastcall CWE415_Double_Free__malloc_free_struct_67b_badSink(void *a1);
void __fastcall CWE415_Double_Free__malloc_free_struct_67b_goodG2BSink(void *a1);
__int64 __fastcall CWE415_Double_Free__malloc_free_struct_67b_goodB2GSink(__int64 a1);
int __fastcall printLine(const char *a1);
int __fastcall printWLine(__int64 a1);
int __fastcall printIntLine(unsigned int a1);
int __fastcall printShortLine(__int16 a1);
int __fastcall printFloatLine(float a1);
int __fastcall printLongLine(__int64 a1);
int __fastcall printLongLongLine(__int64 a1);
int __fastcall printSizeTLine(__int64 a1);
int __fastcall printHexCharLine(char a1);
int __fastcall printWcharLine(int a1);
int __fastcall printUnsignedLine(unsigned int a1);
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1);
int __fastcall printDoubleLine(double a1);
int __fastcall printStructLine(unsigned int *a1);
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2);
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3);
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3);
__int64 globalReturnsTrue();
__int64 globalReturnsFalse();
__int64 globalReturnsTrueOrFalse();
void good1();
void good2();
void good3();
void good4();
void good5();
void good6();
void good7();
void good8();
void good9();
void bad1();
void bad2();
void bad3();
void bad4();
void bad5();
void bad6();
void bad7();
void bad8();
void bad9();
void __fastcall __noreturn internal_start(void *a1);
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3);
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1);
__int64 __fastcall stdThreadDestroy(void *a1);
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1);
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1);
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1);
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1);
void _libc_csu_init(void); // idb
void _libc_csu_fini(void); // idb
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

char s[3] = { '\0', '\0', '\0' }; // idb
int GLOBAL_CONST_TRUE = 1; // weak
int GLOBAL_CONST_FALSE = 0; // weak
int GLOBAL_CONST_FIVE = 5; // weak
__int64 (__fastcall *_frame_dummy_init_array_entry[2])() = { &frame_dummy, &_do_global_dtors_aux }; // weak
__int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)() = &_do_global_dtors_aux; // weak
__int64 (*qword_628010)(void) = NULL; // weak
int staticFive = 5; // weak
int staticTrue = 1; // weak
int staticFive_0 = 5; // weak
int staticTrue_0 = 1; // weak
int staticTrue_1 = 1; // weak
int staticTrue_2 = 1; // weak
int staticFive_1 = 5; // weak
int staticTrue_3 = 1; // weak
int staticFive_2 = 5; // weak
int staticFive_3 = 5; // weak
int globalTrue = 1; // weak
int globalFive = 5; // weak
char completed_6355; // weak
int CWE415_Double_Free__malloc_free_long_22_badGlobal; // weak
int CWE415_Double_Free__malloc_free_long_22_goodB2G1Global; // weak
int CWE415_Double_Free__malloc_free_long_22_goodB2G2Global; // weak
int CWE415_Double_Free__malloc_free_long_22_goodG2BGlobal; // weak
__int64 CWE415_Double_Free__malloc_free_int64_t_45_badData; // weak
__int64 CWE415_Double_Free__malloc_free_int64_t_45_goodG2BData; // weak
__int64 CWE415_Double_Free__malloc_free_int64_t_45_goodB2GData; // weak
int badStatic; // weak
int goodB2G1Static; // weak
int goodB2G2Static; // weak
int goodG2BStatic; // weak
__int64 CWE415_Double_Free__malloc_free_long_45_badData; // weak
__int64 CWE415_Double_Free__malloc_free_long_45_goodG2BData; // weak
__int64 CWE415_Double_Free__malloc_free_long_45_goodB2GData; // weak
int staticFalse; // weak
int staticFalse_0; // weak
int badStatic_0; // weak
int goodB2G1Static_0; // weak
int goodB2G2Static_0; // weak
int goodG2BStatic_0; // weak
int staticFalse_1; // weak
__int64 CWE415_Double_Free__malloc_free_int_45_badData; // weak
__int64 CWE415_Double_Free__malloc_free_int_45_goodG2BData; // weak
__int64 CWE415_Double_Free__malloc_free_int_45_goodB2GData; // weak
int CWE415_Double_Free__malloc_free_int_22_badGlobal; // weak
int CWE415_Double_Free__malloc_free_int_22_goodB2G1Global; // weak
int CWE415_Double_Free__malloc_free_int_22_goodB2G2Global; // weak
int CWE415_Double_Free__malloc_free_int_22_goodG2BGlobal; // weak
__int64 CWE415_Double_Free__malloc_free_char_45_badData; // weak
__int64 CWE415_Double_Free__malloc_free_char_45_goodG2BData; // weak
__int64 CWE415_Double_Free__malloc_free_char_45_goodB2GData; // weak
int CWE415_Double_Free__malloc_free_int64_t_22_badGlobal; // weak
int CWE415_Double_Free__malloc_free_int64_t_22_goodB2G1Global; // weak
int CWE415_Double_Free__malloc_free_int64_t_22_goodB2G2Global; // weak
int CWE415_Double_Free__malloc_free_int64_t_22_goodG2BGlobal; // weak
int CWE415_Double_Free__malloc_free_char_22_badGlobal; // weak
int CWE415_Double_Free__malloc_free_char_22_goodB2G1Global; // weak
int CWE415_Double_Free__malloc_free_char_22_goodB2G2Global; // weak
int CWE415_Double_Free__malloc_free_char_22_goodG2BGlobal; // weak
int badStatic_1; // weak
int goodB2G1Static_1; // weak
int goodB2G2Static_1; // weak
int goodG2BStatic_1; // weak
int CWE415_Double_Free__malloc_free_struct_22_badGlobal; // weak
int CWE415_Double_Free__malloc_free_struct_22_goodB2G1Global; // weak
int CWE415_Double_Free__malloc_free_struct_22_goodB2G2Global; // weak
int CWE415_Double_Free__malloc_free_struct_22_goodG2BGlobal; // weak
int staticFalse_2; // weak
__int64 CWE415_Double_Free__malloc_free_struct_45_badData; // weak
__int64 CWE415_Double_Free__malloc_free_struct_45_goodG2BData; // weak
__int64 CWE415_Double_Free__malloc_free_struct_45_goodB2GData; // weak
int staticFalse_3; // weak
int badStatic_2; // weak
int goodB2G1Static_2; // weak
int goodB2G2Static_2; // weak
int goodG2BStatic_2; // weak
int badStatic_3; // weak
int goodB2G1Static_3; // weak
int goodB2G2Static_3; // weak
int goodG2BStatic_3; // weak
int globalFalse; // weak
int globalArgc; // weak
__int64 globalArgv; // weak
__int64 CWE415_Double_Free__malloc_free_int_68_goodB2GData; // weak
__int64 CWE415_Double_Free__malloc_free_int_68_badData; // weak
__int64 CWE415_Double_Free__malloc_free_int_68_goodG2BData; // weak
__int64 CWE415_Double_Free__malloc_free_struct_68_goodG2BData; // weak
__int64 CWE415_Double_Free__malloc_free_struct_68_goodB2GData; // weak
__int64 CWE415_Double_Free__malloc_free_struct_68_badData; // weak
__int64 CWE415_Double_Free__malloc_free_int64_t_68_goodG2BData; // weak
__int64 CWE415_Double_Free__malloc_free_int64_t_68_goodB2GData; // weak
__int64 CWE415_Double_Free__malloc_free_int64_t_68_badData; // weak
__int64 CWE415_Double_Free__malloc_free_char_68_badData; // weak
__int64 CWE415_Double_Free__malloc_free_char_68_goodG2BData; // weak
__int64 CWE415_Double_Free__malloc_free_char_68_goodB2GData; // weak
__int64 CWE415_Double_Free__malloc_free_long_68_goodB2GData; // weak
__int64 CWE415_Double_Free__malloc_free_long_68_badData; // weak
__int64 CWE415_Double_Free__malloc_free_long_68_goodG2BData; // weak
// extern _UNKNOWN __gmon_start__; weak


//----- (00000000004008D8) ----------------------------------------------------
void *init_proc()
{
  void *result; // rax

  result = &__gmon_start__;
  if ( &__gmon_start__ )
    result = (void *)_gmon_start__();
  return result;
}
// 400A60: using guessed type __int64 _gmon_start__(void);

//----- (0000000000400900) ----------------------------------------------------
__int64 sub_400900()
{
  return qword_628010();
}
// 628010: using guessed type __int64 (*qword_628010)(void);

//----- (0000000000400A70) ----------------------------------------------------
// positive sp value has been detected, the output may be wrong!
void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>)
{
  int v2; // esi
  int v3; // [rsp-8h] [rbp-8h]
  __int64 _0; // [rsp+0h] [rbp+0h]

  v2 = v3;
  *(_QWORD *)&v3 = a1;
  __libc_start_main(
    (int (__fastcall *)(int, char **, char **))main,
    v2,
    (char **)&_0,
    _libc_csu_init,
    _libc_csu_fini,
    a2,
    &v3);
  __halt();
}
// 400A76: positive sp value 8 has been found

//----- (0000000000400AA0) ----------------------------------------------------
__int64 deregister_tm_clones()
{
  __int64 result; // rax

  result = 6455551LL - (_QWORD)&completed_6355;
  if ( (unsigned __int64)(6455551LL - (_QWORD)&completed_6355) > 0xE )
    result = 0LL;
  return result;
}
// 6280F8: using guessed type char completed_6355;

//----- (0000000000400AD0) ----------------------------------------------------
__int64 register_tm_clones()
{
  return 0LL;
}

//----- (0000000000400B10) ----------------------------------------------------
__int64 _do_global_dtors_aux()
{
  __int64 result; // rax

  if ( !completed_6355 )
  {
    result = deregister_tm_clones();
    completed_6355 = 1;
  }
  return result;
}
// 6280F8: using guessed type char completed_6355;

//----- (0000000000400B30) ----------------------------------------------------
__int64 frame_dummy()
{
  return register_tm_clones();
}
// 400B30: could not find valid save-restore pair for rbp

//----- (0000000000400B5D) ----------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  unsigned int v3; // eax

  v3 = time(0LL);
  srand(v3);
  globalArgc = argc;
  globalArgv = (__int64)argv;
  printLine("Calling CWE415_Double_Free__malloc_free_char_66_good();");
  CWE415_Double_Free__malloc_free_char_66_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_32_good();");
  CWE415_Double_Free__malloc_free_int_32_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_17_good();");
  CWE415_Double_Free__malloc_free_long_17_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_09_good();");
  CWE415_Double_Free__malloc_free_char_09_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_13_good();");
  CWE415_Double_Free__malloc_free_struct_13_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_09_good();");
  CWE415_Double_Free__malloc_free_long_09_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_05_good();");
  CWE415_Double_Free__malloc_free_char_05_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_14_good();");
  CWE415_Double_Free__malloc_free_int64_t_14_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_63_good();");
  CWE415_Double_Free__malloc_free_struct_63_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_16_good();");
  CWE415_Double_Free__malloc_free_struct_16_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_04_good();");
  CWE415_Double_Free__malloc_free_struct_04_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_17_good();");
  CWE415_Double_Free__malloc_free_char_17_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_41_good();");
  CWE415_Double_Free__malloc_free_long_41_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_21_good();");
  CWE415_Double_Free__malloc_free_char_21_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_16_good();");
  CWE415_Double_Free__malloc_free_long_16_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_44_good();");
  CWE415_Double_Free__malloc_free_int64_t_44_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_03_good();");
  CWE415_Double_Free__malloc_free_struct_03_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_64_good();");
  CWE415_Double_Free__malloc_free_struct_64_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_22_good();");
  CWE415_Double_Free__malloc_free_char_22_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_21_good();");
  CWE415_Double_Free__malloc_free_struct_21_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_31_good();");
  CWE415_Double_Free__malloc_free_char_31_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_64_good();");
  CWE415_Double_Free__malloc_free_long_64_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_64_good();");
  CWE415_Double_Free__malloc_free_char_64_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_07_good();");
  CWE415_Double_Free__malloc_free_long_07_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_04_good();");
  CWE415_Double_Free__malloc_free_int_04_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_63_good();");
  CWE415_Double_Free__malloc_free_char_63_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_22_good();");
  CWE415_Double_Free__malloc_free_struct_22_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_64_good();");
  CWE415_Double_Free__malloc_free_int_64_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_45_good();");
  CWE415_Double_Free__malloc_free_int64_t_45_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_68_good();");
  CWE415_Double_Free__malloc_free_int_68_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_03_good();");
  CWE415_Double_Free__malloc_free_char_03_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_13_good();");
  CWE415_Double_Free__malloc_free_long_13_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_22_good();");
  CWE415_Double_Free__malloc_free_long_22_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_11_good();");
  CWE415_Double_Free__malloc_free_int64_t_11_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_64_good();");
  CWE415_Double_Free__malloc_free_int64_t_64_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_06_good();");
  CWE415_Double_Free__malloc_free_struct_06_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_34_good();");
  CWE415_Double_Free__malloc_free_int_34_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_63_good();");
  CWE415_Double_Free__malloc_free_int_63_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_34_good();");
  CWE415_Double_Free__malloc_free_char_34_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_67_good();");
  CWE415_Double_Free__malloc_free_char_67_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_68_good();");
  CWE415_Double_Free__malloc_free_char_68_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_01_good();");
  CWE415_Double_Free__malloc_free_int_01_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_15_good();");
  CWE415_Double_Free__malloc_free_int64_t_15_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_12_good();");
  CWE415_Double_Free__malloc_free_char_12_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_08_good();");
  CWE415_Double_Free__malloc_free_int64_t_08_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_09_good();");
  CWE415_Double_Free__malloc_free_int64_t_09_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_11_good();");
  CWE415_Double_Free__malloc_free_char_11_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_18_good();");
  CWE415_Double_Free__malloc_free_char_18_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_61_good();");
  CWE415_Double_Free__malloc_free_long_61_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_08_good();");
  CWE415_Double_Free__malloc_free_long_08_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_02_good();");
  CWE415_Double_Free__malloc_free_struct_02_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_65_good();");
  CWE415_Double_Free__malloc_free_int64_t_65_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_31_good();");
  CWE415_Double_Free__malloc_free_int64_t_31_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_44_good();");
  CWE415_Double_Free__malloc_free_long_44_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_18_good();");
  CWE415_Double_Free__malloc_free_long_18_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_17_good();");
  CWE415_Double_Free__malloc_free_int_17_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_68_good();");
  CWE415_Double_Free__malloc_free_int64_t_68_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_53_good();");
  CWE415_Double_Free__malloc_free_int64_t_53_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_54_good();");
  CWE415_Double_Free__malloc_free_int64_t_54_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_34_good();");
  CWE415_Double_Free__malloc_free_long_34_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_44_good();");
  CWE415_Double_Free__malloc_free_struct_44_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_08_good();");
  CWE415_Double_Free__malloc_free_char_08_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_06_good();");
  CWE415_Double_Free__malloc_free_int_06_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_67_good();");
  CWE415_Double_Free__malloc_free_long_67_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_05_good();");
  CWE415_Double_Free__malloc_free_int_05_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_21_good();");
  CWE415_Double_Free__malloc_free_int64_t_21_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_31_good();");
  CWE415_Double_Free__malloc_free_struct_31_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_52_good();");
  CWE415_Double_Free__malloc_free_char_52_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_14_good();");
  CWE415_Double_Free__malloc_free_int_14_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_65_good();");
  CWE415_Double_Free__malloc_free_int_65_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_67_good();");
  CWE415_Double_Free__malloc_free_int_67_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_10_good();");
  CWE415_Double_Free__malloc_free_int_10_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_68_good();");
  CWE415_Double_Free__malloc_free_long_68_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_54_good();");
  CWE415_Double_Free__malloc_free_struct_54_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_01_good();");
  CWE415_Double_Free__malloc_free_struct_01_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_04_good();");
  CWE415_Double_Free__malloc_free_char_04_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_42_good();");
  CWE415_Double_Free__malloc_free_long_42_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_54_good();");
  CWE415_Double_Free__malloc_free_char_54_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_03_good();");
  CWE415_Double_Free__malloc_free_long_03_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_52_good();");
  CWE415_Double_Free__malloc_free_long_52_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_13_good();");
  CWE415_Double_Free__malloc_free_int64_t_13_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_67_good();");
  CWE415_Double_Free__malloc_free_int64_t_67_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_16_good();");
  CWE415_Double_Free__malloc_free_int_16_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_45_good();");
  CWE415_Double_Free__malloc_free_int_45_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_65_good();");
  CWE415_Double_Free__malloc_free_long_65_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_12_good();");
  CWE415_Double_Free__malloc_free_long_12_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_41_good();");
  CWE415_Double_Free__malloc_free_int64_t_41_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_52_good();");
  CWE415_Double_Free__malloc_free_int64_t_52_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_34_good();");
  CWE415_Double_Free__malloc_free_struct_34_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_12_good();");
  CWE415_Double_Free__malloc_free_struct_12_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_42_good();");
  CWE415_Double_Free__malloc_free_struct_42_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_01_good();");
  CWE415_Double_Free__malloc_free_long_01_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_52_good();");
  CWE415_Double_Free__malloc_free_int_52_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_02_good();");
  CWE415_Double_Free__malloc_free_int_02_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_04_good();");
  CWE415_Double_Free__malloc_free_long_04_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_07_good();");
  CWE415_Double_Free__malloc_free_struct_07_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_02_good();");
  CWE415_Double_Free__malloc_free_int64_t_02_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_16_good();");
  CWE415_Double_Free__malloc_free_char_16_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_41_good();");
  CWE415_Double_Free__malloc_free_int_41_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_14_good();");
  CWE415_Double_Free__malloc_free_long_14_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_09_good();");
  CWE415_Double_Free__malloc_free_struct_09_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_22_good();");
  CWE415_Double_Free__malloc_free_int_22_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_66_good();");
  CWE415_Double_Free__malloc_free_int64_t_66_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_42_good();");
  CWE415_Double_Free__malloc_free_int_42_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_31_good();");
  CWE415_Double_Free__malloc_free_long_31_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_02_good();");
  CWE415_Double_Free__malloc_free_long_02_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_51_good();");
  CWE415_Double_Free__malloc_free_int64_t_51_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_51_good();");
  CWE415_Double_Free__malloc_free_struct_51_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_66_good();");
  CWE415_Double_Free__malloc_free_long_66_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_63_good();");
  CWE415_Double_Free__malloc_free_long_63_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_54_good();");
  CWE415_Double_Free__malloc_free_int_54_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_07_good();");
  CWE415_Double_Free__malloc_free_char_07_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_53_good();");
  CWE415_Double_Free__malloc_free_struct_53_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_61_good();");
  CWE415_Double_Free__malloc_free_struct_61_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_06_good();");
  CWE415_Double_Free__malloc_free_long_06_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_41_good();");
  CWE415_Double_Free__malloc_free_struct_41_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_42_good();");
  CWE415_Double_Free__malloc_free_char_42_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_03_good();");
  CWE415_Double_Free__malloc_free_int64_t_03_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_13_good();");
  CWE415_Double_Free__malloc_free_int_13_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_18_good();");
  CWE415_Double_Free__malloc_free_struct_18_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_32_good();");
  CWE415_Double_Free__malloc_free_long_32_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_32_good();");
  CWE415_Double_Free__malloc_free_int64_t_32_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_66_good();");
  CWE415_Double_Free__malloc_free_int_66_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_10_good();");
  CWE415_Double_Free__malloc_free_char_10_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_44_good();");
  CWE415_Double_Free__malloc_free_int_44_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_08_good();");
  CWE415_Double_Free__malloc_free_struct_08_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_03_good();");
  CWE415_Double_Free__malloc_free_int_03_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_01_good();");
  CWE415_Double_Free__malloc_free_char_01_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_04_good();");
  CWE415_Double_Free__malloc_free_int64_t_04_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_07_good();");
  CWE415_Double_Free__malloc_free_int64_t_07_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_10_good();");
  CWE415_Double_Free__malloc_free_struct_10_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_22_good();");
  CWE415_Double_Free__malloc_free_int64_t_22_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_15_good();");
  CWE415_Double_Free__malloc_free_struct_15_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_61_good();");
  CWE415_Double_Free__malloc_free_int64_t_61_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_61_good();");
  CWE415_Double_Free__malloc_free_char_61_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_09_good();");
  CWE415_Double_Free__malloc_free_int_09_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_11_good();");
  CWE415_Double_Free__malloc_free_struct_11_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_10_good();");
  CWE415_Double_Free__malloc_free_int64_t_10_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_51_good();");
  CWE415_Double_Free__malloc_free_char_51_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_66_good();");
  CWE415_Double_Free__malloc_free_struct_66_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_08_good();");
  CWE415_Double_Free__malloc_free_int_08_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_32_good();");
  CWE415_Double_Free__malloc_free_struct_32_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_15_good();");
  CWE415_Double_Free__malloc_free_char_15_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_16_good();");
  CWE415_Double_Free__malloc_free_int64_t_16_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_65_good();");
  CWE415_Double_Free__malloc_free_struct_65_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_63_good();");
  CWE415_Double_Free__malloc_free_int64_t_63_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_11_good();");
  CWE415_Double_Free__malloc_free_int_11_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_68_good();");
  CWE415_Double_Free__malloc_free_struct_68_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_21_good();");
  CWE415_Double_Free__malloc_free_long_21_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_52_good();");
  CWE415_Double_Free__malloc_free_struct_52_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_05_good();");
  CWE415_Double_Free__malloc_free_struct_05_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_41_good();");
  CWE415_Double_Free__malloc_free_char_41_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_53_good();");
  CWE415_Double_Free__malloc_free_long_53_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_14_good();");
  CWE415_Double_Free__malloc_free_struct_14_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_42_good();");
  CWE415_Double_Free__malloc_free_int64_t_42_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_06_good();");
  CWE415_Double_Free__malloc_free_int64_t_06_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_17_good();");
  CWE415_Double_Free__malloc_free_struct_17_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_12_good();");
  CWE415_Double_Free__malloc_free_int_12_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_53_good();");
  CWE415_Double_Free__malloc_free_int_53_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_14_good();");
  CWE415_Double_Free__malloc_free_char_14_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_05_good();");
  CWE415_Double_Free__malloc_free_long_05_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_10_good();");
  CWE415_Double_Free__malloc_free_long_10_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_54_good();");
  CWE415_Double_Free__malloc_free_long_54_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_65_good();");
  CWE415_Double_Free__malloc_free_char_65_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_21_good();");
  CWE415_Double_Free__malloc_free_int_21_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_13_good();");
  CWE415_Double_Free__malloc_free_char_13_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_06_good();");
  CWE415_Double_Free__malloc_free_char_06_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_44_good();");
  CWE415_Double_Free__malloc_free_char_44_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_45_good();");
  CWE415_Double_Free__malloc_free_long_45_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_61_good();");
  CWE415_Double_Free__malloc_free_int_61_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_51_good();");
  CWE415_Double_Free__malloc_free_int_51_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_18_good();");
  CWE415_Double_Free__malloc_free_int64_t_18_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_01_good();");
  CWE415_Double_Free__malloc_free_int64_t_01_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_15_good();");
  CWE415_Double_Free__malloc_free_long_15_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_05_good();");
  CWE415_Double_Free__malloc_free_int64_t_05_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_02_good();");
  CWE415_Double_Free__malloc_free_char_02_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_12_good();");
  CWE415_Double_Free__malloc_free_int64_t_12_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_07_good();");
  CWE415_Double_Free__malloc_free_int_07_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_34_good();");
  CWE415_Double_Free__malloc_free_int64_t_34_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_11_good();");
  CWE415_Double_Free__malloc_free_long_11_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_53_good();");
  CWE415_Double_Free__malloc_free_char_53_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_15_good();");
  CWE415_Double_Free__malloc_free_int_15_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_67_good();");
  CWE415_Double_Free__malloc_free_struct_67_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_17_good();");
  CWE415_Double_Free__malloc_free_int64_t_17_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_31_good();");
  CWE415_Double_Free__malloc_free_int_31_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_45_good();");
  CWE415_Double_Free__malloc_free_char_45_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_32_good();");
  CWE415_Double_Free__malloc_free_char_32_good();
  printLine("Calling CWE415_Double_Free__malloc_free_long_51_good();");
  CWE415_Double_Free__malloc_free_long_51_good();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_45_good();");
  CWE415_Double_Free__malloc_free_struct_45_good();
  printLine("Calling CWE415_Double_Free__malloc_free_int_18_good();");
  CWE415_Double_Free__malloc_free_int_18_good();
  printLine("Calling CWE415_Double_Free__malloc_free_char_66_bad();");
  CWE415_Double_Free__malloc_free_char_66_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_32_bad();");
  CWE415_Double_Free__malloc_free_int_32_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_17_bad();");
  CWE415_Double_Free__malloc_free_long_17_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_09_bad();");
  CWE415_Double_Free__malloc_free_char_09_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_13_bad();");
  CWE415_Double_Free__malloc_free_struct_13_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_09_bad();");
  CWE415_Double_Free__malloc_free_long_09_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_05_bad();");
  CWE415_Double_Free__malloc_free_char_05_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_14_bad();");
  CWE415_Double_Free__malloc_free_int64_t_14_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_63_bad();");
  CWE415_Double_Free__malloc_free_struct_63_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_16_bad();");
  CWE415_Double_Free__malloc_free_struct_16_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_04_bad();");
  CWE415_Double_Free__malloc_free_struct_04_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_17_bad();");
  CWE415_Double_Free__malloc_free_char_17_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_41_bad();");
  CWE415_Double_Free__malloc_free_long_41_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_21_bad();");
  CWE415_Double_Free__malloc_free_char_21_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_16_bad();");
  CWE415_Double_Free__malloc_free_long_16_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_44_bad();");
  CWE415_Double_Free__malloc_free_int64_t_44_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_03_bad();");
  CWE415_Double_Free__malloc_free_struct_03_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_64_bad();");
  CWE415_Double_Free__malloc_free_struct_64_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_22_bad();");
  CWE415_Double_Free__malloc_free_char_22_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_21_bad();");
  CWE415_Double_Free__malloc_free_struct_21_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_31_bad();");
  CWE415_Double_Free__malloc_free_char_31_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_64_bad();");
  CWE415_Double_Free__malloc_free_long_64_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_64_bad();");
  CWE415_Double_Free__malloc_free_char_64_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_07_bad();");
  CWE415_Double_Free__malloc_free_long_07_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_04_bad();");
  CWE415_Double_Free__malloc_free_int_04_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_63_bad();");
  CWE415_Double_Free__malloc_free_char_63_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_22_bad();");
  CWE415_Double_Free__malloc_free_struct_22_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_64_bad();");
  CWE415_Double_Free__malloc_free_int_64_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_45_bad();");
  CWE415_Double_Free__malloc_free_int64_t_45_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_68_bad();");
  CWE415_Double_Free__malloc_free_int_68_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_03_bad();");
  CWE415_Double_Free__malloc_free_char_03_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_13_bad();");
  CWE415_Double_Free__malloc_free_long_13_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_22_bad();");
  CWE415_Double_Free__malloc_free_long_22_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_11_bad();");
  CWE415_Double_Free__malloc_free_int64_t_11_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_64_bad();");
  CWE415_Double_Free__malloc_free_int64_t_64_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_06_bad();");
  CWE415_Double_Free__malloc_free_struct_06_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_34_bad();");
  CWE415_Double_Free__malloc_free_int_34_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_63_bad();");
  CWE415_Double_Free__malloc_free_int_63_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_34_bad();");
  CWE415_Double_Free__malloc_free_char_34_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_67_bad();");
  CWE415_Double_Free__malloc_free_char_67_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_68_bad();");
  CWE415_Double_Free__malloc_free_char_68_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_01_bad();");
  CWE415_Double_Free__malloc_free_int_01_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_15_bad();");
  CWE415_Double_Free__malloc_free_int64_t_15_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_12_bad();");
  CWE415_Double_Free__malloc_free_char_12_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_08_bad();");
  CWE415_Double_Free__malloc_free_int64_t_08_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_09_bad();");
  CWE415_Double_Free__malloc_free_int64_t_09_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_11_bad();");
  CWE415_Double_Free__malloc_free_char_11_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_18_bad();");
  CWE415_Double_Free__malloc_free_char_18_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_61_bad();");
  CWE415_Double_Free__malloc_free_long_61_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_08_bad();");
  CWE415_Double_Free__malloc_free_long_08_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_02_bad();");
  CWE415_Double_Free__malloc_free_struct_02_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_65_bad();");
  CWE415_Double_Free__malloc_free_int64_t_65_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_31_bad();");
  CWE415_Double_Free__malloc_free_int64_t_31_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_44_bad();");
  CWE415_Double_Free__malloc_free_long_44_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_18_bad();");
  CWE415_Double_Free__malloc_free_long_18_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_17_bad();");
  CWE415_Double_Free__malloc_free_int_17_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_68_bad();");
  CWE415_Double_Free__malloc_free_int64_t_68_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_53_bad();");
  CWE415_Double_Free__malloc_free_int64_t_53_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_54_bad();");
  CWE415_Double_Free__malloc_free_int64_t_54_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_34_bad();");
  CWE415_Double_Free__malloc_free_long_34_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_44_bad();");
  CWE415_Double_Free__malloc_free_struct_44_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_08_bad();");
  CWE415_Double_Free__malloc_free_char_08_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_06_bad();");
  CWE415_Double_Free__malloc_free_int_06_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_67_bad();");
  CWE415_Double_Free__malloc_free_long_67_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_05_bad();");
  CWE415_Double_Free__malloc_free_int_05_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_21_bad();");
  CWE415_Double_Free__malloc_free_int64_t_21_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_31_bad();");
  CWE415_Double_Free__malloc_free_struct_31_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_52_bad();");
  CWE415_Double_Free__malloc_free_char_52_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_14_bad();");
  CWE415_Double_Free__malloc_free_int_14_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_65_bad();");
  CWE415_Double_Free__malloc_free_int_65_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_67_bad();");
  CWE415_Double_Free__malloc_free_int_67_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_10_bad();");
  CWE415_Double_Free__malloc_free_int_10_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_68_bad();");
  CWE415_Double_Free__malloc_free_long_68_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_54_bad();");
  CWE415_Double_Free__malloc_free_struct_54_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_01_bad();");
  CWE415_Double_Free__malloc_free_struct_01_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_04_bad();");
  CWE415_Double_Free__malloc_free_char_04_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_42_bad();");
  CWE415_Double_Free__malloc_free_long_42_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_54_bad();");
  CWE415_Double_Free__malloc_free_char_54_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_03_bad();");
  CWE415_Double_Free__malloc_free_long_03_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_52_bad();");
  CWE415_Double_Free__malloc_free_long_52_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_13_bad();");
  CWE415_Double_Free__malloc_free_int64_t_13_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_67_bad();");
  CWE415_Double_Free__malloc_free_int64_t_67_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_16_bad();");
  CWE415_Double_Free__malloc_free_int_16_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_45_bad();");
  CWE415_Double_Free__malloc_free_int_45_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_65_bad();");
  CWE415_Double_Free__malloc_free_long_65_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_12_bad();");
  CWE415_Double_Free__malloc_free_long_12_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_41_bad();");
  CWE415_Double_Free__malloc_free_int64_t_41_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_52_bad();");
  CWE415_Double_Free__malloc_free_int64_t_52_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_34_bad();");
  CWE415_Double_Free__malloc_free_struct_34_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_12_bad();");
  CWE415_Double_Free__malloc_free_struct_12_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_42_bad();");
  CWE415_Double_Free__malloc_free_struct_42_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_01_bad();");
  CWE415_Double_Free__malloc_free_long_01_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_52_bad();");
  CWE415_Double_Free__malloc_free_int_52_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_02_bad();");
  CWE415_Double_Free__malloc_free_int_02_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_04_bad();");
  CWE415_Double_Free__malloc_free_long_04_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_07_bad();");
  CWE415_Double_Free__malloc_free_struct_07_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_02_bad();");
  CWE415_Double_Free__malloc_free_int64_t_02_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_16_bad();");
  CWE415_Double_Free__malloc_free_char_16_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_41_bad();");
  CWE415_Double_Free__malloc_free_int_41_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_14_bad();");
  CWE415_Double_Free__malloc_free_long_14_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_09_bad();");
  CWE415_Double_Free__malloc_free_struct_09_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_22_bad();");
  CWE415_Double_Free__malloc_free_int_22_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_66_bad();");
  CWE415_Double_Free__malloc_free_int64_t_66_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_42_bad();");
  CWE415_Double_Free__malloc_free_int_42_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_31_bad();");
  CWE415_Double_Free__malloc_free_long_31_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_02_bad();");
  CWE415_Double_Free__malloc_free_long_02_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_51_bad();");
  CWE415_Double_Free__malloc_free_int64_t_51_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_51_bad();");
  CWE415_Double_Free__malloc_free_struct_51_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_66_bad();");
  CWE415_Double_Free__malloc_free_long_66_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_63_bad();");
  CWE415_Double_Free__malloc_free_long_63_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_54_bad();");
  CWE415_Double_Free__malloc_free_int_54_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_07_bad();");
  CWE415_Double_Free__malloc_free_char_07_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_53_bad();");
  CWE415_Double_Free__malloc_free_struct_53_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_61_bad();");
  CWE415_Double_Free__malloc_free_struct_61_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_06_bad();");
  CWE415_Double_Free__malloc_free_long_06_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_41_bad();");
  CWE415_Double_Free__malloc_free_struct_41_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_42_bad();");
  CWE415_Double_Free__malloc_free_char_42_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_03_bad();");
  CWE415_Double_Free__malloc_free_int64_t_03_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_13_bad();");
  CWE415_Double_Free__malloc_free_int_13_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_18_bad();");
  CWE415_Double_Free__malloc_free_struct_18_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_32_bad();");
  CWE415_Double_Free__malloc_free_long_32_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_32_bad();");
  CWE415_Double_Free__malloc_free_int64_t_32_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_66_bad();");
  CWE415_Double_Free__malloc_free_int_66_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_10_bad();");
  CWE415_Double_Free__malloc_free_char_10_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_44_bad();");
  CWE415_Double_Free__malloc_free_int_44_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_08_bad();");
  CWE415_Double_Free__malloc_free_struct_08_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_03_bad();");
  CWE415_Double_Free__malloc_free_int_03_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_01_bad();");
  CWE415_Double_Free__malloc_free_char_01_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_04_bad();");
  CWE415_Double_Free__malloc_free_int64_t_04_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_07_bad();");
  CWE415_Double_Free__malloc_free_int64_t_07_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_10_bad();");
  CWE415_Double_Free__malloc_free_struct_10_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_22_bad();");
  CWE415_Double_Free__malloc_free_int64_t_22_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_15_bad();");
  CWE415_Double_Free__malloc_free_struct_15_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_61_bad();");
  CWE415_Double_Free__malloc_free_int64_t_61_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_61_bad();");
  CWE415_Double_Free__malloc_free_char_61_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_09_bad();");
  CWE415_Double_Free__malloc_free_int_09_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_11_bad();");
  CWE415_Double_Free__malloc_free_struct_11_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_10_bad();");
  CWE415_Double_Free__malloc_free_int64_t_10_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_51_bad();");
  CWE415_Double_Free__malloc_free_char_51_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_66_bad();");
  CWE415_Double_Free__malloc_free_struct_66_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_08_bad();");
  CWE415_Double_Free__malloc_free_int_08_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_32_bad();");
  CWE415_Double_Free__malloc_free_struct_32_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_15_bad();");
  CWE415_Double_Free__malloc_free_char_15_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_16_bad();");
  CWE415_Double_Free__malloc_free_int64_t_16_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_65_bad();");
  CWE415_Double_Free__malloc_free_struct_65_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_63_bad();");
  CWE415_Double_Free__malloc_free_int64_t_63_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_11_bad();");
  CWE415_Double_Free__malloc_free_int_11_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_68_bad();");
  CWE415_Double_Free__malloc_free_struct_68_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_21_bad();");
  CWE415_Double_Free__malloc_free_long_21_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_52_bad();");
  CWE415_Double_Free__malloc_free_struct_52_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_05_bad();");
  CWE415_Double_Free__malloc_free_struct_05_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_41_bad();");
  CWE415_Double_Free__malloc_free_char_41_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_53_bad();");
  CWE415_Double_Free__malloc_free_long_53_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_14_bad();");
  CWE415_Double_Free__malloc_free_struct_14_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_42_bad();");
  CWE415_Double_Free__malloc_free_int64_t_42_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_06_bad();");
  CWE415_Double_Free__malloc_free_int64_t_06_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_17_bad();");
  CWE415_Double_Free__malloc_free_struct_17_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_12_bad();");
  CWE415_Double_Free__malloc_free_int_12_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_53_bad();");
  CWE415_Double_Free__malloc_free_int_53_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_14_bad();");
  CWE415_Double_Free__malloc_free_char_14_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_05_bad();");
  CWE415_Double_Free__malloc_free_long_05_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_10_bad();");
  CWE415_Double_Free__malloc_free_long_10_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_54_bad();");
  CWE415_Double_Free__malloc_free_long_54_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_65_bad();");
  CWE415_Double_Free__malloc_free_char_65_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_21_bad();");
  CWE415_Double_Free__malloc_free_int_21_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_13_bad();");
  CWE415_Double_Free__malloc_free_char_13_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_06_bad();");
  CWE415_Double_Free__malloc_free_char_06_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_44_bad();");
  CWE415_Double_Free__malloc_free_char_44_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_45_bad();");
  CWE415_Double_Free__malloc_free_long_45_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_61_bad();");
  CWE415_Double_Free__malloc_free_int_61_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_51_bad();");
  CWE415_Double_Free__malloc_free_int_51_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_18_bad();");
  CWE415_Double_Free__malloc_free_int64_t_18_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_01_bad();");
  CWE415_Double_Free__malloc_free_int64_t_01_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_15_bad();");
  CWE415_Double_Free__malloc_free_long_15_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_05_bad();");
  CWE415_Double_Free__malloc_free_int64_t_05_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_02_bad();");
  CWE415_Double_Free__malloc_free_char_02_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_12_bad();");
  CWE415_Double_Free__malloc_free_int64_t_12_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_07_bad();");
  CWE415_Double_Free__malloc_free_int_07_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_34_bad();");
  CWE415_Double_Free__malloc_free_int64_t_34_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_11_bad();");
  CWE415_Double_Free__malloc_free_long_11_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_53_bad();");
  CWE415_Double_Free__malloc_free_char_53_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_15_bad();");
  CWE415_Double_Free__malloc_free_int_15_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_67_bad();");
  CWE415_Double_Free__malloc_free_struct_67_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int64_t_17_bad();");
  CWE415_Double_Free__malloc_free_int64_t_17_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_31_bad();");
  CWE415_Double_Free__malloc_free_int_31_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_45_bad();");
  CWE415_Double_Free__malloc_free_char_45_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_char_32_bad();");
  CWE415_Double_Free__malloc_free_char_32_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_long_51_bad();");
  CWE415_Double_Free__malloc_free_long_51_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_struct_45_bad();");
  CWE415_Double_Free__malloc_free_struct_45_bad();
  printLine("Calling CWE415_Double_Free__malloc_free_int_18_bad();");
  CWE415_Double_Free__malloc_free_int_18_bad();
  return 0;
}
// 62823C: using guessed type int globalArgc;
// 628240: using guessed type __int64 globalArgv;

//----- (0000000000402948) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_53_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int64_t_53b_badSink(ptr);
}

//----- (0000000000402991) ----------------------------------------------------
void goodG2B()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int64_t_53b_goodG2BSink(v0);
}

//----- (00000000004029CE) ----------------------------------------------------
void goodB2G()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int64_t_53b_goodB2GSink();
}

//----- (0000000000402A17) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_53_good()
{
  goodG2B();
  goodB2G();
}

//----- (0000000000402A31) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_54c_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_char_54d_badSink(a1);
}

//----- (0000000000402A4B) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_54c_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_char_54d_goodG2BSink(a1);
}

//----- (0000000000402A65) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_54c_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_char_54d_goodB2GSink();
}

//----- (0000000000402A7F) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_66b_badSink(__int64 a1)
{
  free(*(void **)(a1 + 16));
}

//----- (0000000000402AA5) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_66b_goodG2BSink(__int64 a1)
{
  free(*(void **)(a1 + 16));
}

//----- (0000000000402ACB) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_struct_66b_goodB2GSink(__int64 a1)
{
  return *(_QWORD *)(a1 + 16);
}

//----- (0000000000402AE1) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_54_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int64_t_54b_badSink(ptr);
}

//----- (0000000000402B2A) ----------------------------------------------------
void goodG2B_0()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int64_t_54b_goodG2BSink(v0);
}

//----- (0000000000402B67) ----------------------------------------------------
void goodB2G_0()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int64_t_54b_goodB2GSink();
}

//----- (0000000000402BB0) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_54_good()
{
  goodG2B_0();
  goodB2G_0();
}

//----- (0000000000402BCA) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_16_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000402C15) ----------------------------------------------------
void goodB2G_1()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000402C54) ----------------------------------------------------
void goodG2B_1()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000402C93) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_16_good()
{
  goodB2G_1();
  goodG2B_1();
}

//----- (0000000000402CAD) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_01_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000402CF6) ----------------------------------------------------
void goodG2B_2()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000402D33) ----------------------------------------------------
void goodB2G_2()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000402D70) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_01_good()
{
  goodG2B_2();
  goodB2G_2();
}

//----- (0000000000402D8A) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_22_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_long_22_badGlobal = 1;
  CWE415_Double_Free__malloc_free_long_22_badSink(ptr);
}
// 6280FC: using guessed type int CWE415_Double_Free__malloc_free_long_22_badGlobal;

//----- (0000000000402DDD) ----------------------------------------------------
int goodB2G1()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_long_22_goodB2G1Global = 0;
  return CWE415_Double_Free__malloc_free_long_22_goodB2G1Sink();
}
// 628100: using guessed type int CWE415_Double_Free__malloc_free_long_22_goodB2G1Global;

//----- (0000000000402E30) ----------------------------------------------------
void goodB2G2()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_long_22_goodB2G2Global = 1;
  CWE415_Double_Free__malloc_free_long_22_goodB2G2Sink();
}
// 628104: using guessed type int CWE415_Double_Free__malloc_free_long_22_goodB2G2Global;

//----- (0000000000402E83) ----------------------------------------------------
void goodG2B_3()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_long_22_goodG2BGlobal = 1;
  CWE415_Double_Free__malloc_free_long_22_goodG2BSink(v0);
}
// 628108: using guessed type int CWE415_Double_Free__malloc_free_long_22_goodG2BGlobal;

//----- (0000000000402ECA) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_22_good()
{
  goodB2G1();
  goodB2G2();
  goodG2B_3();
}

//----- (0000000000402EEE) ----------------------------------------------------
void __fastcall badSink(void *a1)
{
  free(a1);
}

//----- (0000000000402F08) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int64_t_44_bad()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))badSink)(ptr);
}

//----- (0000000000402F5A) ----------------------------------------------------
void __fastcall goodG2BSink(void *a1)
{
  free(a1);
}

//----- (0000000000402F74) ----------------------------------------------------
__int64 goodG2B_4()
{
  void *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x320uLL);
  if ( !v1 )
    exit(-1);
  return ((__int64 (__fastcall *)(void *))goodG2BSink)(v1);
}

//----- (0000000000402FBA) ----------------------------------------------------
void goodB2GSink()
{
  ;
}

//----- (0000000000402FC4) ----------------------------------------------------
__int64 goodB2G_3()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))goodB2GSink)(ptr);
}

//----- (0000000000403016) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int64_t_44_good()
{
  goodG2B_4();
  return goodB2G_3();
}

//----- (0000000000403030) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_67b_badSink(void *a1)
{
  free(a1);
}

//----- (0000000000403052) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_67b_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (0000000000403074) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_char_67b_goodB2GSink(__int64 a1)
{
  return a1;
}

//----- (0000000000403086) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_54e_badSink(void *a1)
{
  free(a1);
}

//----- (00000000004030A0) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_54e_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (00000000004030BA) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_54e_goodB2GSink()
{
  ;
}

//----- (00000000004030C4) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_03_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000040310D) ----------------------------------------------------
void goodB2G1_0()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040314A) ----------------------------------------------------
void goodB2G2_0()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000403187) ----------------------------------------------------
void goodG2B1()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004031C4) ----------------------------------------------------
void goodG2B2()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000403201) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_03_good()
{
  goodB2G1_0();
  goodB2G2_0();
  goodG2B1();
  goodG2B2();
}

//----- (000000000040322F) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_66_bad()
{
  char v0; // [rsp+0h] [rbp-30h]
  void *v1; // [rsp+10h] [rbp-20h]
  void *ptr; // [rsp+28h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  v1 = ptr;
  CWE415_Double_Free__malloc_free_int64_t_66b_badSink((__int64)&v0);
}

//----- (0000000000403280) ----------------------------------------------------
void goodG2B_5()
{
  char v0; // [rsp+0h] [rbp-30h]
  void *v1; // [rsp+10h] [rbp-20h]
  void *v2; // [rsp+28h] [rbp-8h]

  v2 = malloc(0x320uLL);
  if ( !v2 )
    exit(-1);
  v1 = v2;
  CWE415_Double_Free__malloc_free_int64_t_66b_goodG2BSink((__int64)&v0);
}

//----- (00000000004032C5) ----------------------------------------------------
__int64 goodB2G_4()
{
  char v1; // [rsp+0h] [rbp-30h]
  void *v2; // [rsp+10h] [rbp-20h]
  void *ptr; // [rsp+28h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  v2 = ptr;
  return CWE415_Double_Free__malloc_free_int64_t_66b_goodB2GSink((__int64)&v1);
}

//----- (0000000000403316) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int64_t_66_good()
{
  goodG2B_5();
  return goodB2G_4();
}

//----- (0000000000403330) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_61_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = CWE415_Double_Free__malloc_free_char_61b_badSource();
  free(ptr);
}

//----- (000000000040335E) ----------------------------------------------------
void goodG2B_6()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = CWE415_Double_Free__malloc_free_char_61b_goodG2BSource();
  free(ptr);
}

//----- (000000000040338C) ----------------------------------------------------
void *goodB2G_5()
{
  return CWE415_Double_Free__malloc_free_char_61b_goodB2GSource();
}

//----- (00000000004033AE) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_char_61_good()
{
  goodG2B_6();
  return goodB2G_5();
}

//----- (00000000004033C8) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_63_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_long_63b_badSink(&ptr);
}

//----- (0000000000403413) ----------------------------------------------------
void goodG2B_7()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_long_63b_goodG2BSink(&v0);
}

//----- (0000000000403452) ----------------------------------------------------
__int64 goodB2G_6()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return CWE415_Double_Free__malloc_free_long_63b_goodB2GSink((__int64)&ptr);
}

//----- (000000000040349D) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_long_63_good()
{
  goodG2B_7();
  return goodB2G_6();
}

//----- (00000000004034B7) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_64b_badSink(void **a1)
{
  free(*a1);
}

//----- (00000000004034E4) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_64b_goodG2BSink(void **a1)
{
  free(*a1);
}

//----- (0000000000403511) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_int_64b_goodB2GSink(__int64 a1)
{
  return *(_QWORD *)a1;
}

//----- (000000000040352E) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_65b_badSink(void *a1)
{
  free(a1);
}

//----- (0000000000403548) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_65b_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (0000000000403562) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_65b_goodB2GSink()
{
  ;
}

//----- (000000000040356C) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_18_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (00000000004035B7) ----------------------------------------------------
void goodB2G_7()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004035F6) ----------------------------------------------------
void goodG2B_8()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000403635) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_18_good()
{
  goodB2G_7();
  goodG2B_8();
}

//----- (000000000040364F) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_52b_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int64_t_52c_badSink(a1);
}

//----- (0000000000403669) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_52b_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int64_t_52c_goodG2BSink(a1);
}

//----- (0000000000403683) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_52b_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_int64_t_52c_goodB2GSink();
}

//----- (000000000040369D) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_09_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( GLOBAL_CONST_TRUE )
    free(ptr);
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004036FA) ----------------------------------------------------
int goodB2G1_1()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = GLOBAL_CONST_FALSE;
  if ( GLOBAL_CONST_FALSE )
    result = printLine("Benign, fixed string");
  return result;
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;
// 41AA88: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000403755) ----------------------------------------------------
void goodB2G2_1()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040379C) ----------------------------------------------------
void goodG2B1_0()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FALSE )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( GLOBAL_CONST_TRUE )
    free(ptr);
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;
// 41AA88: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004037F9) ----------------------------------------------------
void goodG2B2_0()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( GLOBAL_CONST_TRUE )
    free(ptr);
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040384A) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_09_good()
{
  goodB2G1_1();
  goodB2G2_1();
  goodG2B1_0();
  goodG2B2_0();
}

//----- (0000000000403878) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_53b_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_long_53c_badSink(a1);
}

//----- (0000000000403892) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_53b_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_long_53c_goodG2BSink(a1);
}

//----- (00000000004038AC) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_53b_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_long_53c_goodB2GSink();
}

//----- (00000000004038C6) ----------------------------------------------------
__int64 staticReturnsTrue()
{
  return 1LL;
}

//----- (00000000004038D1) ----------------------------------------------------
__int64 staticReturnsFalse()
{
  return 0LL;
}

//----- (00000000004038DC) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_08_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsTrue() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( (unsigned int)staticReturnsTrue() )
    free(ptr);
}

//----- (0000000000403941) ----------------------------------------------------
int goodB2G1_2()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)staticReturnsTrue() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = staticReturnsFalse();
  if ( result )
    result = printLine("Benign, fixed string");
  return result;
}

//----- (00000000004039A4) ----------------------------------------------------
__int64 goodB2G2_2()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)staticReturnsTrue() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  return staticReturnsTrue();
}

//----- (00000000004039F9) ----------------------------------------------------
void goodG2B1_1()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)staticReturnsTrue() )
    free(ptr);
}

//----- (0000000000403A5E) ----------------------------------------------------
void goodG2B2_1()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsTrue() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)staticReturnsTrue() )
    free(ptr);
}

//----- (0000000000403AB7) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_08_good()
{
  goodB2G1_2();
  goodB2G2_2();
  goodG2B1_1();
  goodG2B2_1();
}

//----- (0000000000403AE5) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_67b_badSink(void *a1)
{
  free(a1);
}

//----- (0000000000403B07) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_67b_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (0000000000403B29) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_int_67b_goodB2GSink(__int64 a1)
{
  return a1;
}

//----- (0000000000403B3B) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_06_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000403B98) ----------------------------------------------------
__int64 goodB2G1_3()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return 5LL;
}

//----- (0000000000403BF3) ----------------------------------------------------
void goodB2G2_3()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000403C3A) ----------------------------------------------------
void goodG2B1_2()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000403C97) ----------------------------------------------------
void goodG2B2_2()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000403CE8) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_06_good()
{
  goodB2G1_3();
  goodB2G2_3();
  goodG2B1_2();
  goodG2B2_2();
}

//----- (0000000000403D16) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_64_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int_64b_badSink(&ptr);
}

//----- (0000000000403D61) ----------------------------------------------------
void goodG2B_9()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x190uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int_64b_goodG2BSink(&v0);
}

//----- (0000000000403DA0) ----------------------------------------------------
__int64 goodB2G_8()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return CWE415_Double_Free__malloc_free_int_64b_goodB2GSink((__int64)&ptr);
}

//----- (0000000000403DEB) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int_64_good()
{
  goodG2B_9();
  return goodB2G_8();
}

//----- (0000000000403E05) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_65b_badSink(void *a1)
{
  free(a1);
}

//----- (0000000000403E1F) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_65b_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (0000000000403E39) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_65b_goodB2GSink()
{
  ;
}

//----- (0000000000403E43) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_54b_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_char_54c_badSink(a1);
}

//----- (0000000000403E5D) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_54b_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_char_54c_goodG2BSink(a1);
}

//----- (0000000000403E77) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_54b_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_char_54c_goodB2GSink();
}

//----- (0000000000403E91) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_52_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int64_t_52b_badSink(ptr);
}

//----- (0000000000403EDA) ----------------------------------------------------
void goodG2B_10()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int64_t_52b_goodG2BSink(v0);
}

//----- (0000000000403F17) ----------------------------------------------------
void goodB2G_9()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int64_t_52b_goodB2GSink();
}

//----- (0000000000403F60) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_52_good()
{
  goodG2B_10();
  goodB2G_9();
}

//----- (0000000000403F7A) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_04_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000403FD5) ----------------------------------------------------
__int64 goodB2G1_4()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return 0LL;
}

//----- (000000000040402E) ----------------------------------------------------
void goodB2G2_4()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000404074) ----------------------------------------------------
void goodG2B1_3()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004040CF) ----------------------------------------------------
void goodG2B2_3()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040411E) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_04_good()
{
  goodB2G1_4();
  goodB2G2_4();
  goodG2B1_3();
  goodG2B2_3();
}

//----- (000000000040414C) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_51b_badSink(void *a1)
{
  free(a1);
}

//----- (0000000000404166) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_51b_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (0000000000404180) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_51b_goodB2GSink()
{
  ;
}

//----- (000000000040418A) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_53c_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_char_53d_badSink(a1);
}

//----- (00000000004041A4) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_53c_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_char_53d_goodG2BSink(a1);
}

//----- (00000000004041BE) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_53c_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_char_53d_goodB2GSink();
}

//----- (00000000004041D8) ----------------------------------------------------
void __fastcall badSink_0(void *a1)
{
  free(a1);
}

//----- (00000000004041F2) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_long_44_bad()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))badSink_0)(ptr);
}

//----- (0000000000404244) ----------------------------------------------------
void __fastcall goodG2BSink_0(void *a1)
{
  free(a1);
}

//----- (000000000040425E) ----------------------------------------------------
__int64 goodG2B_11()
{
  void *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x320uLL);
  if ( !v1 )
    exit(-1);
  return ((__int64 (__fastcall *)(void *))goodG2BSink_0)(v1);
}

//----- (00000000004042A4) ----------------------------------------------------
void goodB2GSink_0()
{
  ;
}

//----- (00000000004042AE) ----------------------------------------------------
__int64 goodB2G_10()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))goodB2GSink_0)(ptr);
}

//----- (0000000000404300) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_long_44_good()
{
  goodG2B_11();
  return goodB2G_10();
}

//----- (000000000040431A) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_16_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000404365) ----------------------------------------------------
void goodB2G_11()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004043A4) ----------------------------------------------------
void goodG2B_12()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004043E3) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_16_good()
{
  goodB2G_11();
  goodG2B_12();
}

//----- (00000000004043FD) ----------------------------------------------------
__int64 staticReturnsTrue_0()
{
  return 1LL;
}

//----- (0000000000404408) ----------------------------------------------------
__int64 staticReturnsFalse_0()
{
  return 0LL;
}

//----- (0000000000404413) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_08_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( (unsigned int)staticReturnsTrue_0() )
    free(ptr);
}

//----- (0000000000404478) ----------------------------------------------------
int goodB2G1_5()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)staticReturnsTrue_0() )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = staticReturnsFalse_0();
  if ( result )
    result = printLine("Benign, fixed string");
  return result;
}

//----- (00000000004044DB) ----------------------------------------------------
__int64 goodB2G2_5()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)staticReturnsTrue_0() )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  return staticReturnsTrue_0();
}

//----- (0000000000404530) ----------------------------------------------------
void goodG2B1_4()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsFalse_0() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)staticReturnsTrue_0() )
    free(ptr);
}

//----- (0000000000404595) ----------------------------------------------------
void goodG2B2_4()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)staticReturnsTrue_0() )
    free(ptr);
}

//----- (00000000004045EE) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_08_good()
{
  goodB2G1_5();
  goodB2G2_5();
  goodG2B1_4();
  goodG2B2_4();
}

//----- (000000000040461C) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_11_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( (unsigned int)globalReturnsTrue() )
    free(ptr);
}

//----- (0000000000404681) ----------------------------------------------------
int goodB2G1_6()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = globalReturnsFalse();
  if ( result )
    result = printLine("Benign, fixed string");
  return result;
}

//----- (00000000004046E4) ----------------------------------------------------
__int64 goodB2G2_6()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  return globalReturnsTrue();
}

//----- (0000000000404739) ----------------------------------------------------
void goodG2B1_5()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)globalReturnsTrue() )
    free(ptr);
}

//----- (000000000040479E) ----------------------------------------------------
void goodG2B2_5()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)globalReturnsTrue() )
    free(ptr);
}

//----- (00000000004047F7) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_11_good()
{
  goodB2G1_6();
  goodB2G2_6();
  goodG2B1_5();
  goodG2B2_5();
}

//----- (0000000000404825) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_07_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( staticFive == 5 )
    free(ptr);
}
// 6280C4: using guessed type int staticFive;

//----- (0000000000404884) ----------------------------------------------------
int goodB2G1_7()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = staticFive;
  if ( staticFive != 5 )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280C4: using guessed type int staticFive;

//----- (00000000004048E1) ----------------------------------------------------
void goodB2G2_7()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280C4: using guessed type int staticFive;

//----- (0000000000404929) ----------------------------------------------------
void goodG2B1_6()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  if ( staticFive == 5 )
    free(ptr);
}
// 6280C4: using guessed type int staticFive;

//----- (0000000000404988) ----------------------------------------------------
void goodG2B2_6()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( staticFive == 5 )
    free(ptr);
}
// 6280C4: using guessed type int staticFive;

//----- (00000000004049DB) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_07_good()
{
  goodB2G1_7();
  goodB2G2_7();
  goodG2B1_6();
  goodG2B2_6();
}

//----- (0000000000404A09) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_54e_badSink(void *a1)
{
  free(a1);
}

//----- (0000000000404A23) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_54e_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (0000000000404A3D) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_54e_goodB2GSink()
{
  ;
}

//----- (0000000000404A47) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_14_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( globalFive == 5 )
    free(ptr);
}
// 6280F0: using guessed type int globalFive;

//----- (0000000000404AA6) ----------------------------------------------------
int goodB2G1_8()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = globalFive;
  if ( globalFive != 5 )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280F0: using guessed type int globalFive;

//----- (0000000000404B03) ----------------------------------------------------
void goodB2G2_8()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280F0: using guessed type int globalFive;

//----- (0000000000404B4B) ----------------------------------------------------
void goodG2B1_7()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  if ( globalFive == 5 )
    free(ptr);
}
// 6280F0: using guessed type int globalFive;

//----- (0000000000404BAA) ----------------------------------------------------
void goodG2B2_7()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( globalFive == 5 )
    free(ptr);
}
// 6280F0: using guessed type int globalFive;

//----- (0000000000404BFD) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_14_good()
{
  goodB2G1_8();
  goodB2G2_8();
  goodG2B1_7();
  goodG2B2_7();
}

//----- (0000000000404C2B) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_64b_badSink(void **a1)
{
  free(*a1);
}

//----- (0000000000404C58) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_64b_goodG2BSink(void **a1)
{
  free(*a1);
}

//----- (0000000000404C85) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_struct_64b_goodB2GSink(__int64 a1)
{
  return *(_QWORD *)a1;
}

//----- (0000000000404CA2) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_63b_badSink(void **a1)
{
  free(*a1);
}

//----- (0000000000404CC7) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_63b_goodG2BSink(void **a1)
{
  free(*a1);
}

//----- (0000000000404CEC) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_int_63b_goodB2GSink(__int64 a1)
{
  return *(_QWORD *)a1;
}

//----- (0000000000404D01) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_long_61b_badSource()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (0000000000404D3E) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_long_61b_goodG2BSource()
{
  void *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x320uLL);
  if ( !v1 )
    exit(-1);
  return v1;
}

//----- (0000000000404D6F) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_long_61b_goodB2GSource()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (0000000000404DAC) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_10_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalTrue )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( globalTrue )
    free(ptr);
}
// 6280EC: using guessed type int globalTrue;

//----- (0000000000404E09) ----------------------------------------------------
int goodB2G1_9()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalTrue )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = globalFalse;
  if ( globalFalse )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280EC: using guessed type int globalTrue;
// 628238: using guessed type int globalFalse;

//----- (0000000000404E64) ----------------------------------------------------
void goodB2G2_9()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalTrue )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280EC: using guessed type int globalTrue;

//----- (0000000000404EAB) ----------------------------------------------------
void goodG2B1_8()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( globalTrue )
    free(ptr);
}
// 6280EC: using guessed type int globalTrue;
// 628238: using guessed type int globalFalse;

//----- (0000000000404F08) ----------------------------------------------------
void goodG2B2_8()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalTrue )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( globalTrue )
    free(ptr);
}
// 6280EC: using guessed type int globalTrue;

//----- (0000000000404F59) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_10_good()
{
  goodB2G1_9();
  goodB2G2_9();
  goodG2B1_8();
  goodG2B2_8();
}

//----- (0000000000404F87) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_22_badSink(void *a1)
{
  if ( CWE415_Double_Free__malloc_free_int_22_badGlobal )
    free(a1);
}
// 628188: using guessed type int CWE415_Double_Free__malloc_free_int_22_badGlobal;

//----- (0000000000404FAB) ----------------------------------------------------
int CWE415_Double_Free__malloc_free_int_22_goodB2G1Sink()
{
  int result; // eax

  result = CWE415_Double_Free__malloc_free_int_22_goodB2G1Global;
  if ( CWE415_Double_Free__malloc_free_int_22_goodB2G1Global )
    result = printLine("Benign, fixed string");
  return result;
}
// 62818C: using guessed type int CWE415_Double_Free__malloc_free_int_22_goodB2G1Global;

//----- (0000000000404FCD) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_22_goodB2G2Sink()
{
  ;
}

//----- (0000000000404FD7) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_22_goodG2BSink(void *a1)
{
  if ( CWE415_Double_Free__malloc_free_int_22_goodG2BGlobal )
    free(a1);
}
// 628194: using guessed type int CWE415_Double_Free__malloc_free_int_22_goodG2BGlobal;

//----- (0000000000404FFB) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_54_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_char_54b_badSink(ptr);
}

//----- (0000000000405044) ----------------------------------------------------
void goodG2B_13()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_char_54b_goodG2BSink(v0);
}

//----- (0000000000405081) ----------------------------------------------------
void goodB2G_12()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_char_54b_goodB2GSink();
}

//----- (00000000004050CA) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_54_good()
{
  goodG2B_13();
  goodB2G_12();
}

//----- (00000000004050E4) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_14_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( globalFive == 5 )
    free(ptr);
}
// 6280F0: using guessed type int globalFive;

//----- (0000000000405143) ----------------------------------------------------
int goodB2G1_10()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = globalFive;
  if ( globalFive != 5 )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280F0: using guessed type int globalFive;

//----- (00000000004051A0) ----------------------------------------------------
void goodB2G2_10()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280F0: using guessed type int globalFive;

//----- (00000000004051E8) ----------------------------------------------------
void goodG2B1_9()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  if ( globalFive == 5 )
    free(ptr);
}
// 6280F0: using guessed type int globalFive;

//----- (0000000000405247) ----------------------------------------------------
void goodG2B2_9()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( globalFive == 5 )
    free(ptr);
}
// 6280F0: using guessed type int globalFive;

//----- (000000000040529A) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_14_good()
{
  goodB2G1_10();
  goodB2G2_10();
  goodG2B1_9();
  goodG2B2_9();
}

//----- (00000000004052C8) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_51_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int64_t_51b_badSink(ptr);
}

//----- (0000000000405311) ----------------------------------------------------
void goodG2B_14()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int64_t_51b_goodG2BSink(v0);
}

//----- (000000000040534E) ----------------------------------------------------
void goodB2G_13()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int64_t_51b_goodB2GSink();
}

//----- (0000000000405397) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_51_good()
{
  goodG2B_14();
  goodB2G_13();
}

//----- (00000000004053B1) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_52b_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_struct_52c_badSink(a1);
}

//----- (00000000004053CB) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_52b_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_struct_52c_goodG2BSink(a1);
}

//----- (00000000004053E5) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_52b_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_struct_52c_goodB2GSink();
}

//----- (00000000004053FF) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_32_bad()
{
  __int64 v0; // [rsp+8h] [rbp-28h]
  void *ptr; // [rsp+18h] [rbp-18h]
  void **v2; // [rsp+20h] [rbp-10h]
  __int64 *v3; // [rsp+28h] [rbp-8h]

  v3 = &v0;
  v2 = (void **)&v0;
  v0 = 0LL;
  ptr = 0LL;
  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  *v3 = (__int64)ptr;
  free(*v2);
}

//----- (0000000000405479) ----------------------------------------------------
void goodG2B_15()
{
  __int64 v0; // [rsp+8h] [rbp-28h]
  void *v1; // [rsp+18h] [rbp-18h]
  void **v2; // [rsp+20h] [rbp-10h]
  __int64 *v3; // [rsp+28h] [rbp-8h]

  v3 = &v0;
  v2 = (void **)&v0;
  v0 = 0LL;
  v1 = 0LL;
  v1 = malloc(0x320uLL);
  if ( !v1 )
    exit(-1);
  *v3 = (__int64)v1;
  free(*v2);
}

//----- (00000000004054E7) ----------------------------------------------------
__int64 goodB2G_14()
{
  __int64 v1; // [rsp+8h] [rbp-28h]
  void *ptr; // [rsp+18h] [rbp-18h]
  __int64 *v3; // [rsp+20h] [rbp-10h]
  __int64 *v4; // [rsp+28h] [rbp-8h]

  v4 = &v1;
  v3 = &v1;
  v1 = 0LL;
  ptr = 0LL;
  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  *v4 = (__int64)ptr;
  return *v3;
}

//----- (0000000000405555) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_struct_32_good()
{
  goodG2B_15();
  return goodB2G_14();
}

//----- (000000000040556F) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_54c_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_long_54d_badSink(a1);
}

//----- (0000000000405589) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_54c_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_long_54d_goodG2BSink(a1);
}

//----- (00000000004055A3) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_54c_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_long_54d_goodB2GSink();
}

//----- (00000000004055BD) ----------------------------------------------------
void badSink_1()
{
  free((void *)CWE415_Double_Free__malloc_free_int64_t_45_badData);
}
// 628110: using guessed type __int64 CWE415_Double_Free__malloc_free_int64_t_45_badData;

//----- (00000000004055DE) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_45_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int64_t_45_badData = (__int64)ptr;
  badSink_1();
}
// 628110: using guessed type __int64 CWE415_Double_Free__malloc_free_int64_t_45_badData;

//----- (0000000000405630) ----------------------------------------------------
void goodG2BSink_1()
{
  free((void *)CWE415_Double_Free__malloc_free_int64_t_45_goodG2BData);
}
// 628118: using guessed type __int64 CWE415_Double_Free__malloc_free_int64_t_45_goodG2BData;

//----- (0000000000405651) ----------------------------------------------------
void goodG2B_16()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int64_t_45_goodG2BData = (__int64)v0;
  goodG2BSink_1();
}
// 628118: using guessed type __int64 CWE415_Double_Free__malloc_free_int64_t_45_goodG2BData;

//----- (0000000000405697) ----------------------------------------------------
__int64 goodB2GSink_1()
{
  return CWE415_Double_Free__malloc_free_int64_t_45_goodB2GData;
}
// 628120: using guessed type __int64 CWE415_Double_Free__malloc_free_int64_t_45_goodB2GData;

//----- (00000000004056A8) ----------------------------------------------------
__int64 goodB2G_15()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int64_t_45_goodB2GData = (__int64)ptr;
  return goodB2GSink_1();
}
// 628120: using guessed type __int64 CWE415_Double_Free__malloc_free_int64_t_45_goodB2GData;

//----- (00000000004056FA) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int64_t_45_good()
{
  goodG2B_16();
  return goodB2G_15();
}

//----- (0000000000405714) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_64_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_struct_64b_badSink(&ptr);
}

//----- (000000000040575F) ----------------------------------------------------
void goodG2B_17()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_struct_64b_goodG2BSink(&v0);
}

//----- (000000000040579E) ----------------------------------------------------
__int64 goodB2G_16()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return CWE415_Double_Free__malloc_free_struct_64b_goodB2GSink((__int64)&ptr);
}

//----- (00000000004057E9) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_struct_64_good()
{
  goodG2B_17();
  return goodB2G_16();
}

//----- (0000000000405803) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_06_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000405860) ----------------------------------------------------
__int64 goodB2G1_11()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return 5LL;
}

//----- (00000000004058BB) ----------------------------------------------------
void goodB2G2_11()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000405902) ----------------------------------------------------
void goodG2B1_10()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040595F) ----------------------------------------------------
void goodG2B2_10()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004059B0) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_06_good()
{
  goodB2G1_11();
  goodB2G2_11();
  goodG2B1_10();
  goodG2B2_10();
}

//----- (00000000004059DE) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_52_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_long_52b_badSink(ptr);
}

//----- (0000000000405A27) ----------------------------------------------------
void goodG2B_18()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_long_52b_goodG2BSink(v0);
}

//----- (0000000000405A64) ----------------------------------------------------
void goodB2G_17()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_long_52b_goodB2GSink();
}

//----- (0000000000405AAD) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_52_good()
{
  goodG2B_18();
  goodB2G_17();
}

//----- (0000000000405AC7) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_32_bad()
{
  __int64 v0; // [rsp+8h] [rbp-28h]
  void *ptr; // [rsp+18h] [rbp-18h]
  void **v2; // [rsp+20h] [rbp-10h]
  __int64 *v3; // [rsp+28h] [rbp-8h]

  v3 = &v0;
  v2 = (void **)&v0;
  v0 = 0LL;
  ptr = 0LL;
  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  *v3 = (__int64)ptr;
  free(*v2);
}

//----- (0000000000405B41) ----------------------------------------------------
void goodG2B_19()
{
  __int64 v0; // [rsp+8h] [rbp-28h]
  void *v1; // [rsp+18h] [rbp-18h]
  void **v2; // [rsp+20h] [rbp-10h]
  __int64 *v3; // [rsp+28h] [rbp-8h]

  v3 = &v0;
  v2 = (void **)&v0;
  v0 = 0LL;
  v1 = 0LL;
  v1 = malloc(0x64uLL);
  if ( !v1 )
    exit(-1);
  *v3 = (__int64)v1;
  free(*v2);
}

//----- (0000000000405BAF) ----------------------------------------------------
__int64 goodB2G_18()
{
  __int64 v1; // [rsp+8h] [rbp-28h]
  void *ptr; // [rsp+18h] [rbp-18h]
  __int64 *v3; // [rsp+20h] [rbp-10h]
  __int64 *v4; // [rsp+28h] [rbp-8h]

  v4 = &v1;
  v3 = &v1;
  v1 = 0LL;
  ptr = 0LL;
  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  *v4 = (__int64)ptr;
  return *v3;
}

//----- (0000000000405C1D) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_char_32_good()
{
  goodG2B_19();
  return goodB2G_18();
}

//----- (0000000000405C37) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_51b_badSink(void *a1)
{
  free(a1);
}

//----- (0000000000405C51) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_51b_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (0000000000405C6B) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_51b_goodB2GSink()
{
  ;
}

//----- (0000000000405C75) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_54c_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int64_t_54d_badSink(a1);
}

//----- (0000000000405C8F) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_54c_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int64_t_54d_goodG2BSink(a1);
}

//----- (0000000000405CA9) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_54c_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_int64_t_54d_goodB2GSink();
}

//----- (0000000000405CC3) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_16_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000405D0E) ----------------------------------------------------
void goodB2G_19()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000405D4D) ----------------------------------------------------
void goodG2B_20()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000405D8C) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_16_good()
{
  goodB2G_19();
  goodG2B_20();
}

//----- (0000000000405DA6) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_54b_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_long_54c_badSink(a1);
}

//----- (0000000000405DC0) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_54b_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_long_54c_goodG2BSink(a1);
}

//----- (0000000000405DDA) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_54b_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_long_54c_goodB2GSink();
}

//----- (0000000000405DF4) ----------------------------------------------------
void __fastcall badSink_2(void *a1)
{
  free(a1);
}

//----- (0000000000405E0E) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_41_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  badSink_2(ptr);
}

//----- (0000000000405E57) ----------------------------------------------------
void __fastcall goodG2BSink_2(void *a1)
{
  free(a1);
}

//----- (0000000000405E71) ----------------------------------------------------
void goodG2B_21()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x190uLL);
  if ( !v0 )
    exit(-1);
  goodG2BSink_2(v0);
}

//----- (0000000000405EAE) ----------------------------------------------------
void goodB2GSink_2()
{
  ;
}

//----- (0000000000405EB8) ----------------------------------------------------
void goodB2G_20()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  goodB2GSink_2();
}

//----- (0000000000405F01) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_41_good()
{
  goodB2G_20();
  goodG2B_21();
}

//----- (0000000000405F1B) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_11_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( (unsigned int)globalReturnsTrue() )
    free(ptr);
}

//----- (0000000000405F80) ----------------------------------------------------
int goodB2G1_12()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = globalReturnsFalse();
  if ( result )
    result = printLine("Benign, fixed string");
  return result;
}

//----- (0000000000405FE3) ----------------------------------------------------
__int64 goodB2G2_12()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  return globalReturnsTrue();
}

//----- (0000000000406038) ----------------------------------------------------
void goodG2B1_11()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)globalReturnsTrue() )
    free(ptr);
}

//----- (000000000040609D) ----------------------------------------------------
void goodG2B2_11()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)globalReturnsTrue() )
    free(ptr);
}

//----- (00000000004060F6) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_11_good()
{
  goodB2G1_12();
  goodB2G2_12();
  goodG2B1_11();
  goodG2B2_11();
}

//----- (0000000000406124) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_53d_badSink(void *a1)
{
  free(a1);
}

//----- (000000000040613E) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_53d_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (0000000000406158) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_53d_goodB2GSink()
{
  ;
}

//----- (0000000000406162) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_51b_badSink(void *a1)
{
  free(a1);
}

//----- (000000000040617C) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_51b_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (0000000000406196) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_51b_goodB2GSink()
{
  ;
}

//----- (00000000004061A0) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_64_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_char_64b_badSink(&ptr);
}

//----- (00000000004061EB) ----------------------------------------------------
void goodG2B_22()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_char_64b_goodG2BSink(&v0);
}

//----- (000000000040622A) ----------------------------------------------------
__int64 goodB2G_21()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return CWE415_Double_Free__malloc_free_char_64b_goodB2GSink((__int64)&ptr);
}

//----- (0000000000406275) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_char_64_good()
{
  goodG2B_22();
  return goodB2G_21();
}

//----- (000000000040628F) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int_65_bad()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))CWE415_Double_Free__malloc_free_int_65b_badSink)(ptr);
}

//----- (00000000004062E1) ----------------------------------------------------
__int64 goodG2B_23()
{
  void *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x190uLL);
  if ( !v1 )
    exit(-1);
  return ((__int64 (__fastcall *)(void *))CWE415_Double_Free__malloc_free_int_65b_goodG2BSink)(v1);
}

//----- (0000000000406327) ----------------------------------------------------
__int64 goodB2G_22()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))CWE415_Double_Free__malloc_free_int_65b_goodB2GSink)(ptr);
}

//----- (0000000000406379) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int_65_good()
{
  goodG2B_23();
  return goodB2G_22();
}

//----- (0000000000406393) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_15_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (00000000004063DE) ----------------------------------------------------
void goodB2G1_13()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040641D) ----------------------------------------------------
void goodB2G2_13()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040645C) ----------------------------------------------------
void goodG2B1_12()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040649B) ----------------------------------------------------
void goodG2B2_12()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004064DA) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_15_good()
{
  goodB2G1_13();
  goodB2G2_13();
  goodG2B1_12();
  goodG2B2_12();
}

//----- (0000000000406508) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_31_bad()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000406561) ----------------------------------------------------
void goodG2B_24()
{
  void *v0; // [rsp+18h] [rbp-8h]

  v0 = malloc(0x190uLL);
  if ( !v0 )
    exit(-1);
  free(v0);
}

//----- (00000000004065AE) ----------------------------------------------------
void *goodB2G_23()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (00000000004065FB) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_int_31_good()
{
  goodG2B_24();
  return goodB2G_23();
}

//----- (0000000000406615) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_17_bad()
{
  void *ptr; // [rsp+0h] [rbp-10h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  ptr = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  for ( j = 0; j <= 0; ++j )
    free(ptr);
}

//----- (0000000000406684) ----------------------------------------------------
void goodB2G_24()
{
  void *ptr; // [rsp+0h] [rbp-10h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; i <= 0; ++i )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  for ( j = 0; j <= 0; ++j )
    ;
}

//----- (00000000004066E7) ----------------------------------------------------
void goodG2B_25()
{
  void *ptr; // [rsp+0h] [rbp-10h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  ptr = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  for ( j = 0; j <= 0; ++j )
    free(ptr);
}

//----- (000000000040674A) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_17_good()
{
  goodB2G_24();
  goodG2B_25();
}

//----- (0000000000406764) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_51_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_long_51b_badSink(ptr);
}

//----- (00000000004067AD) ----------------------------------------------------
void goodG2B_26()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_long_51b_goodG2BSink(v0);
}

//----- (00000000004067EA) ----------------------------------------------------
void goodB2G_25()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_long_51b_goodB2GSink();
}

//----- (0000000000406833) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_51_good()
{
  goodG2B_26();
  goodB2G_25();
}

//----- (000000000040684D) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_04_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (00000000004068A8) ----------------------------------------------------
__int64 goodB2G1_14()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return 0LL;
}

//----- (0000000000406901) ----------------------------------------------------
void goodB2G2_14()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000406947) ----------------------------------------------------
void goodG2B1_13()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004069A2) ----------------------------------------------------
void goodG2B2_13()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004069F1) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_04_good()
{
  goodB2G1_14();
  goodB2G2_14();
  goodG2B1_13();
  goodG2B2_13();
}

//----- (0000000000406A1F) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_31_bad()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000406A78) ----------------------------------------------------
void goodG2B_27()
{
  void *v0; // [rsp+18h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  free(v0);
}

//----- (0000000000406AC5) ----------------------------------------------------
void *goodB2G_26()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (0000000000406B12) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_char_31_good()
{
  goodG2B_27();
  return goodB2G_26();
}

//----- (0000000000406B2C) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_54_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_struct_54b_badSink(ptr);
}

//----- (0000000000406B75) ----------------------------------------------------
void goodG2B_28()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_struct_54b_goodG2BSink(v0);
}

//----- (0000000000406BB2) ----------------------------------------------------
void goodB2G_27()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_struct_54b_goodB2GSink();
}

//----- (0000000000406BFB) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_54_good()
{
  goodG2B_28();
  goodB2G_27();
}

//----- (0000000000406C15) ----------------------------------------------------
void *badSource()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (0000000000406C52) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_42_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = badSource();
  free(ptr);
}

//----- (0000000000406C80) ----------------------------------------------------
void *goodG2BSource()
{
  void *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x190uLL);
  if ( !v1 )
    exit(-1);
  return v1;
}

//----- (0000000000406CB1) ----------------------------------------------------
void goodG2B_29()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = goodG2BSource();
  free(ptr);
}

//----- (0000000000406CDF) ----------------------------------------------------
void *goodB2GSource()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (0000000000406D1C) ----------------------------------------------------
void *goodB2G_28()
{
  return goodB2GSource();
}

//----- (0000000000406D3E) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_42_good()
{
  goodB2G_28();
  goodG2B_29();
}

//----- (0000000000406D58) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_char_61b_badSource()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (0000000000406D95) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_char_61b_goodG2BSource()
{
  void *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x64uLL);
  if ( !v1 )
    exit(-1);
  return v1;
}

//----- (0000000000406DC6) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_char_61b_goodB2GSource()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (0000000000406E03) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_09_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( GLOBAL_CONST_TRUE )
    free(ptr);
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000406E60) ----------------------------------------------------
int goodB2G1_15()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = GLOBAL_CONST_FALSE;
  if ( GLOBAL_CONST_FALSE )
    result = printLine("Benign, fixed string");
  return result;
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;
// 41AA88: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000406EBB) ----------------------------------------------------
void goodB2G2_15()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000406F02) ----------------------------------------------------
void goodG2B1_14()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FALSE )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( GLOBAL_CONST_TRUE )
    free(ptr);
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;
// 41AA88: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000406F5F) ----------------------------------------------------
void goodG2B2_14()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( GLOBAL_CONST_TRUE )
    free(ptr);
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000406FB0) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_09_good()
{
  goodB2G1_15();
  goodB2G2_15();
  goodG2B1_14();
  goodG2B2_14();
}

//----- (0000000000406FDE) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_65b_badSink(void *a1)
{
  free(a1);
}

//----- (0000000000406FF8) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_65b_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (0000000000407012) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_65b_goodB2GSink()
{
  ;
}

//----- (000000000040701C) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_68b_badSink()
{
  free((void *)CWE415_Double_Free__malloc_free_int_68_badData);
}
// 628250: using guessed type __int64 CWE415_Double_Free__malloc_free_int_68_badData;

//----- (000000000040703D) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_68b_goodG2BSink()
{
  free((void *)CWE415_Double_Free__malloc_free_int_68_goodG2BData);
}
// 628258: using guessed type __int64 CWE415_Double_Free__malloc_free_int_68_goodG2BData;

//----- (000000000040705E) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int_68b_goodB2GSink()
{
  return CWE415_Double_Free__malloc_free_int_68_goodB2GData;
}
// 628248: using guessed type __int64 CWE415_Double_Free__malloc_free_int_68_goodB2GData;

//----- (000000000040706F) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_54b_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int_54c_badSink(a1);
}

//----- (0000000000407089) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_54b_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int_54c_goodG2BSink(a1);
}

//----- (00000000004070A3) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_54b_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_int_54c_goodB2GSink();
}

//----- (00000000004070BD) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_67_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_char_67b_badSink(ptr);
}

//----- (000000000040710E) ----------------------------------------------------
void goodG2B_30()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_char_67b_goodG2BSink(v0);
}

//----- (0000000000407153) ----------------------------------------------------
__int64 goodB2G_29()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return CWE415_Double_Free__malloc_free_char_67b_goodB2GSink((__int64)ptr);
}

//----- (00000000004071A4) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_char_67_good()
{
  goodG2B_30();
  return goodB2G_29();
}

//----- (00000000004071BE) ----------------------------------------------------
void __fastcall badSink_3(void *a1)
{
  if ( badStatic )
    free(a1);
}
// 628128: using guessed type int badStatic;

//----- (00000000004071E2) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_21_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  badStatic = 1;
  badSink_3(ptr);
}
// 628128: using guessed type int badStatic;

//----- (0000000000407235) ----------------------------------------------------
int goodB2G1Sink()
{
  int result; // eax

  result = goodB2G1Static;
  if ( goodB2G1Static )
    result = printLine("Benign, fixed string");
  return result;
}
// 62812C: using guessed type int goodB2G1Static;

//----- (0000000000407257) ----------------------------------------------------
int goodB2G1_16()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  goodB2G1Static = 0;
  return goodB2G1Sink();
}
// 62812C: using guessed type int goodB2G1Static;

//----- (00000000004072AA) ----------------------------------------------------
void goodB2G2Sink()
{
  ;
}

//----- (00000000004072B4) ----------------------------------------------------
void goodB2G2_16()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  goodB2G2Static = 1;
  goodB2G2Sink();
}
// 628130: using guessed type int goodB2G2Static;

//----- (0000000000407307) ----------------------------------------------------
void __fastcall goodG2BSink_3(void *a1)
{
  if ( goodG2BStatic )
    free(a1);
}
// 628134: using guessed type int goodG2BStatic;

//----- (000000000040732B) ----------------------------------------------------
void goodG2B_31()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  goodG2BStatic = 1;
  goodG2BSink_3(v0);
}
// 628134: using guessed type int goodG2BStatic;

//----- (0000000000407372) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_21_good()
{
  goodB2G1_16();
  goodB2G2_16();
  goodG2B_31();
}

//----- (0000000000407396) ----------------------------------------------------
void badSink_4()
{
  free((void *)CWE415_Double_Free__malloc_free_long_45_badData);
}
// 628138: using guessed type __int64 CWE415_Double_Free__malloc_free_long_45_badData;

//----- (00000000004073B7) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_45_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_long_45_badData = (__int64)ptr;
  badSink_4();
}
// 628138: using guessed type __int64 CWE415_Double_Free__malloc_free_long_45_badData;

//----- (0000000000407409) ----------------------------------------------------
void goodG2BSink_4()
{
  free((void *)CWE415_Double_Free__malloc_free_long_45_goodG2BData);
}
// 628140: using guessed type __int64 CWE415_Double_Free__malloc_free_long_45_goodG2BData;

//----- (000000000040742A) ----------------------------------------------------
void goodG2B_32()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_long_45_goodG2BData = (__int64)v0;
  goodG2BSink_4();
}
// 628140: using guessed type __int64 CWE415_Double_Free__malloc_free_long_45_goodG2BData;

//----- (0000000000407470) ----------------------------------------------------
__int64 goodB2GSink_3()
{
  return CWE415_Double_Free__malloc_free_long_45_goodB2GData;
}
// 628148: using guessed type __int64 CWE415_Double_Free__malloc_free_long_45_goodB2GData;

//----- (0000000000407481) ----------------------------------------------------
__int64 goodB2G_30()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_long_45_goodB2GData = (__int64)ptr;
  return goodB2GSink_3();
}
// 628148: using guessed type __int64 CWE415_Double_Free__malloc_free_long_45_goodB2GData;

//----- (00000000004074D3) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_long_45_good()
{
  goodG2B_32();
  return goodB2G_30();
}

//----- (00000000004074ED) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_68b_badSink()
{
  free((void *)CWE415_Double_Free__malloc_free_long_68_badData);
}
// 6282B0: using guessed type __int64 CWE415_Double_Free__malloc_free_long_68_badData;

//----- (000000000040750E) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_68b_goodG2BSink()
{
  free((void *)CWE415_Double_Free__malloc_free_long_68_goodG2BData);
}
// 6282B8: using guessed type __int64 CWE415_Double_Free__malloc_free_long_68_goodG2BData;

//----- (000000000040752F) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_long_68b_goodB2GSink()
{
  return CWE415_Double_Free__malloc_free_long_68_goodB2GData;
}
// 6282A8: using guessed type __int64 CWE415_Double_Free__malloc_free_long_68_goodB2GData;

//----- (0000000000407540) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_53c_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_struct_53d_badSink(a1);
}

//----- (000000000040755A) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_53c_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_struct_53d_goodG2BSink(a1);
}

//----- (0000000000407574) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_53c_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_struct_53d_goodB2GSink();
}

//----- (000000000040758E) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_06_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (00000000004075EB) ----------------------------------------------------
__int64 goodB2G1_17()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return 5LL;
}

//----- (0000000000407646) ----------------------------------------------------
void goodB2G2_17()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040768D) ----------------------------------------------------
void goodG2B1_15()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004076EA) ----------------------------------------------------
void goodG2B2_15()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040773B) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_06_good()
{
  goodB2G1_17();
  goodB2G2_17();
  goodG2B1_15();
  goodG2B2_15();
}

//----- (0000000000407769) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_22_badSink(void *a1)
{
  if ( CWE415_Double_Free__malloc_free_char_22_badGlobal )
    free(a1);
}
// 6281C0: using guessed type int CWE415_Double_Free__malloc_free_char_22_badGlobal;

//----- (000000000040778D) ----------------------------------------------------
int CWE415_Double_Free__malloc_free_char_22_goodB2G1Sink()
{
  int result; // eax

  result = CWE415_Double_Free__malloc_free_char_22_goodB2G1Global;
  if ( CWE415_Double_Free__malloc_free_char_22_goodB2G1Global )
    result = printLine("Benign, fixed string");
  return result;
}
// 6281C4: using guessed type int CWE415_Double_Free__malloc_free_char_22_goodB2G1Global;

//----- (00000000004077AF) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_22_goodB2G2Sink()
{
  ;
}

//----- (00000000004077B9) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_22_goodG2BSink(void *a1)
{
  if ( CWE415_Double_Free__malloc_free_char_22_goodG2BGlobal )
    free(a1);
}
// 6281CC: using guessed type int CWE415_Double_Free__malloc_free_char_22_goodG2BGlobal;

//----- (00000000004077DD) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_05_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticTrue )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( staticTrue )
    free(ptr);
}
// 6280C8: using guessed type int staticTrue;

//----- (000000000040783A) ----------------------------------------------------
int goodB2G1_18()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticTrue )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = staticFalse;
  if ( staticFalse )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280C8: using guessed type int staticTrue;
// 628150: using guessed type int staticFalse;

//----- (0000000000407895) ----------------------------------------------------
void goodB2G2_18()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticTrue )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280C8: using guessed type int staticTrue;

//----- (00000000004078DC) ----------------------------------------------------
void goodG2B1_16()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( staticTrue )
    free(ptr);
}
// 6280C8: using guessed type int staticTrue;
// 628150: using guessed type int staticFalse;

//----- (0000000000407939) ----------------------------------------------------
void goodG2B2_16()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticTrue )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( staticTrue )
    free(ptr);
}
// 6280C8: using guessed type int staticTrue;

//----- (000000000040798A) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_05_good()
{
  goodB2G1_18();
  goodB2G2_18();
  goodG2B1_16();
  goodG2B2_16();
}

//----- (00000000004079B8) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_17_bad()
{
  void *ptr; // [rsp+0h] [rbp-10h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  ptr = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  for ( j = 0; j <= 0; ++j )
    free(ptr);
}

//----- (0000000000407A27) ----------------------------------------------------
void goodB2G_31()
{
  void *ptr; // [rsp+0h] [rbp-10h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; i <= 0; ++i )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  for ( j = 0; j <= 0; ++j )
    ;
}

//----- (0000000000407A8A) ----------------------------------------------------
void goodG2B_33()
{
  void *ptr; // [rsp+0h] [rbp-10h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  ptr = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  for ( j = 0; j <= 0; ++j )
    free(ptr);
}

//----- (0000000000407AED) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_17_good()
{
  goodB2G_31();
  goodG2B_33();
}

//----- (0000000000407B07) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_54b_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int64_t_54c_badSink(a1);
}

//----- (0000000000407B21) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_54b_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int64_t_54c_goodG2BSink(a1);
}

//----- (0000000000407B3B) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_54b_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_int64_t_54c_goodB2GSink();
}

//----- (0000000000407B55) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_67b_badSink(void *a1)
{
  free(a1);
}

//----- (0000000000407B77) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_67b_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (0000000000407B99) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_long_67b_goodB2GSink(__int64 a1)
{
  return a1;
}

//----- (0000000000407BAB) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_64_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int64_t_64b_badSink(&ptr);
}

//----- (0000000000407BF6) ----------------------------------------------------
void goodG2B_34()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int64_t_64b_goodG2BSink(&v0);
}

//----- (0000000000407C35) ----------------------------------------------------
__int64 goodB2G_32()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return CWE415_Double_Free__malloc_free_int64_t_64b_goodB2GSink((__int64)&ptr);
}

//----- (0000000000407C80) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int64_t_64_good()
{
  goodG2B_34();
  return goodB2G_32();
}

//----- (0000000000407C9A) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_52c_badSink(void *a1)
{
  free(a1);
}

//----- (0000000000407CB4) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_52c_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (0000000000407CCE) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_52c_goodB2GSink()
{
  ;
}

//----- (0000000000407CD8) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_68_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int_68_badData = (__int64)ptr;
  CWE415_Double_Free__malloc_free_int_68b_badSink();
}
// 628250: using guessed type __int64 CWE415_Double_Free__malloc_free_int_68_badData;

//----- (0000000000407D2A) ----------------------------------------------------
void goodG2B_35()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x190uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int_68_goodG2BData = (__int64)v0;
  CWE415_Double_Free__malloc_free_int_68b_goodG2BSink();
}
// 628258: using guessed type __int64 CWE415_Double_Free__malloc_free_int_68_goodG2BData;

//----- (0000000000407D70) ----------------------------------------------------
__int64 goodB2G_33()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int_68_goodB2GData = (__int64)ptr;
  return CWE415_Double_Free__malloc_free_int_68b_goodB2GSink();
}
// 628248: using guessed type __int64 CWE415_Double_Free__malloc_free_int_68_goodB2GData;

//----- (0000000000407DC2) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int_68_good()
{
  goodG2B_35();
  return goodB2G_33();
}

//----- (0000000000407DDC) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_34_bad()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000407E35) ----------------------------------------------------
void goodG2B_36()
{
  void *v0; // [rsp+18h] [rbp-8h]

  v0 = malloc(0x190uLL);
  if ( !v0 )
    exit(-1);
  free(v0);
}

//----- (0000000000407E82) ----------------------------------------------------
void *goodB2G_34()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (0000000000407ECF) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_int_34_good()
{
  goodG2B_36();
  return goodB2G_34();
}

//----- (0000000000407EE9) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_struct_65_bad()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))CWE415_Double_Free__malloc_free_struct_65b_badSink)(ptr);
}

//----- (0000000000407F3B) ----------------------------------------------------
__int64 goodG2B_37()
{
  void *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x320uLL);
  if ( !v1 )
    exit(-1);
  return ((__int64 (__fastcall *)(void *))CWE415_Double_Free__malloc_free_struct_65b_goodG2BSink)(v1);
}

//----- (0000000000407F81) ----------------------------------------------------
__int64 goodB2G_35()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))CWE415_Double_Free__malloc_free_struct_65b_goodB2GSink)(ptr);
}

//----- (0000000000407FD3) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_struct_65_good()
{
  goodG2B_37();
  return goodB2G_35();
}

//----- (0000000000407FED) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_22_badSink(void *a1)
{
  if ( CWE415_Double_Free__malloc_free_struct_22_badGlobal )
    free(a1);
}
// 6281E0: using guessed type int CWE415_Double_Free__malloc_free_struct_22_badGlobal;

//----- (0000000000408011) ----------------------------------------------------
int CWE415_Double_Free__malloc_free_struct_22_goodB2G1Sink()
{
  int result; // eax

  result = CWE415_Double_Free__malloc_free_struct_22_goodB2G1Global;
  if ( CWE415_Double_Free__malloc_free_struct_22_goodB2G1Global )
    result = printLine("Benign, fixed string");
  return result;
}
// 6281E4: using guessed type int CWE415_Double_Free__malloc_free_struct_22_goodB2G1Global;

//----- (0000000000408033) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_22_goodB2G2Sink()
{
  ;
}

//----- (000000000040803D) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_22_goodG2BSink(void *a1)
{
  if ( CWE415_Double_Free__malloc_free_struct_22_goodG2BGlobal )
    free(a1);
}
// 6281EC: using guessed type int CWE415_Double_Free__malloc_free_struct_22_goodG2BGlobal;

//----- (0000000000408061) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_66b_badSink(__int64 a1)
{
  free(*(void **)(a1 + 16));
}

//----- (0000000000408087) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_66b_goodG2BSink(__int64 a1)
{
  free(*(void **)(a1 + 16));
}

//----- (00000000004080AD) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_int_66b_goodB2GSink(__int64 a1)
{
  return *(_QWORD *)(a1 + 16);
}

//----- (00000000004080C3) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_12_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    free(ptr);
}

//----- (0000000000408149) ----------------------------------------------------
__int64 goodB2G_36()
{
  void *ptr; // [rsp+8h] [rbp-8h]
  void *ptra; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  else
  {
    ptra = malloc(0x320uLL);
    if ( !ptra )
      exit(-1);
    free(ptra);
  }
  return globalReturnsTrueOrFalse();
}

//----- (00000000004081CB) ----------------------------------------------------
void goodG2B_38()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  globalReturnsTrueOrFalse();
  free(ptr);
}

//----- (0000000000408251) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_12_good()
{
  goodB2G_36();
  goodG2B_38();
}

//----- (000000000040826B) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_64b_badSink(void **a1)
{
  free(*a1);
}

//----- (0000000000408298) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_64b_goodG2BSink(void **a1)
{
  free(*a1);
}

//----- (00000000004082C5) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_long_64b_goodB2GSink(__int64 a1)
{
  return *(_QWORD *)a1;
}

//----- (00000000004082E2) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_15_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000040832D) ----------------------------------------------------
void goodB2G1_19()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040836C) ----------------------------------------------------
void goodB2G2_19()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004083AB) ----------------------------------------------------
void goodG2B1_17()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004083EA) ----------------------------------------------------
void goodG2B2_17()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000408429) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_15_good()
{
  goodB2G1_19();
  goodB2G2_19();
  goodG2B1_17();
  goodG2B2_17();
}

//----- (0000000000408457) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_07_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_0 == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( staticFive_0 == 5 )
    free(ptr);
}
// 6280CC: using guessed type int staticFive_0;

//----- (00000000004084B6) ----------------------------------------------------
int goodB2G1_20()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticFive_0 == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = staticFive_0;
  if ( staticFive_0 != 5 )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280CC: using guessed type int staticFive_0;

//----- (0000000000408513) ----------------------------------------------------
void goodB2G2_20()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticFive_0 == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280CC: using guessed type int staticFive_0;

//----- (000000000040855B) ----------------------------------------------------
void goodG2B1_18()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_0 == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  if ( staticFive_0 == 5 )
    free(ptr);
}
// 6280CC: using guessed type int staticFive_0;

//----- (00000000004085BA) ----------------------------------------------------
void goodG2B2_18()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_0 == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( staticFive_0 == 5 )
    free(ptr);
}
// 6280CC: using guessed type int staticFive_0;

//----- (000000000040860D) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_07_good()
{
  goodB2G1_20();
  goodB2G2_20();
  goodG2B1_18();
  goodG2B2_18();
}

//----- (000000000040863B) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_51_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_char_51b_badSink(ptr);
}

//----- (0000000000408684) ----------------------------------------------------
void goodG2B_39()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_char_51b_goodG2BSink(v0);
}

//----- (00000000004086C1) ----------------------------------------------------
void goodB2G_37()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_char_51b_goodB2GSink();
}

//----- (000000000040870A) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_51_good()
{
  goodG2B_39();
  goodB2G_37();
}

//----- (0000000000408724) ----------------------------------------------------
void *badSource_0()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (0000000000408761) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_42_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = badSource_0();
  free(ptr);
}

//----- (000000000040878F) ----------------------------------------------------
void *goodG2BSource_0()
{
  void *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x320uLL);
  if ( !v1 )
    exit(-1);
  return v1;
}

//----- (00000000004087C0) ----------------------------------------------------
void goodG2B_40()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = goodG2BSource_0();
  free(ptr);
}

//----- (00000000004087EE) ----------------------------------------------------
void *goodB2GSource_0()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (000000000040882B) ----------------------------------------------------
void *goodB2G_38()
{
  return goodB2GSource_0();
}

//----- (000000000040884D) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_42_good()
{
  goodB2G_38();
  goodG2B_40();
}

//----- (0000000000408867) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_53_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int_53b_badSink(ptr);
}

//----- (00000000004088B0) ----------------------------------------------------
void goodG2B_41()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x190uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int_53b_goodG2BSink(v0);
}

//----- (00000000004088ED) ----------------------------------------------------
void goodB2G_39()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int_53b_goodB2GSink();
}

//----- (0000000000408936) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_53_good()
{
  goodG2B_41();
  goodB2G_39();
}

//----- (0000000000408950) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_01_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000408999) ----------------------------------------------------
void goodG2B_42()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004089D6) ----------------------------------------------------
void goodB2G_40()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000408A13) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_01_good()
{
  goodG2B_42();
  goodB2G_40();
}

//----- (0000000000408A2D) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_32_bad()
{
  __int64 v0; // [rsp+8h] [rbp-28h]
  void *ptr; // [rsp+18h] [rbp-18h]
  void **v2; // [rsp+20h] [rbp-10h]
  __int64 *v3; // [rsp+28h] [rbp-8h]

  v3 = &v0;
  v2 = (void **)&v0;
  v0 = 0LL;
  ptr = 0LL;
  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  *v3 = (__int64)ptr;
  free(*v2);
}

//----- (0000000000408AA7) ----------------------------------------------------
void goodG2B_43()
{
  __int64 v0; // [rsp+8h] [rbp-28h]
  void *v1; // [rsp+18h] [rbp-18h]
  void **v2; // [rsp+20h] [rbp-10h]
  __int64 *v3; // [rsp+28h] [rbp-8h]

  v3 = &v0;
  v2 = (void **)&v0;
  v0 = 0LL;
  v1 = 0LL;
  v1 = malloc(0x320uLL);
  if ( !v1 )
    exit(-1);
  *v3 = (__int64)v1;
  free(*v2);
}

//----- (0000000000408B15) ----------------------------------------------------
__int64 goodB2G_41()
{
  __int64 v1; // [rsp+8h] [rbp-28h]
  void *ptr; // [rsp+18h] [rbp-18h]
  __int64 *v3; // [rsp+20h] [rbp-10h]
  __int64 *v4; // [rsp+28h] [rbp-8h]

  v4 = &v1;
  v3 = &v1;
  v1 = 0LL;
  ptr = 0LL;
  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  *v4 = (__int64)ptr;
  return *v3;
}

//----- (0000000000408B83) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_long_32_good()
{
  goodG2B_43();
  return goodB2G_41();
}

//----- (0000000000408B9D) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_64_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_long_64b_badSink(&ptr);
}

//----- (0000000000408BE8) ----------------------------------------------------
void goodG2B_44()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_long_64b_goodG2BSink(&v0);
}

//----- (0000000000408C27) ----------------------------------------------------
__int64 goodB2G_42()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return CWE415_Double_Free__malloc_free_long_64b_goodB2GSink((__int64)&ptr);
}

//----- (0000000000408C72) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_long_64_good()
{
  goodG2B_44();
  return goodB2G_42();
}

//----- (0000000000408C8C) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_54d_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_char_54e_badSink(a1);
}

//----- (0000000000408CA6) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_54d_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_char_54e_goodG2BSink(a1);
}

//----- (0000000000408CC0) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_54d_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_char_54e_goodB2GSink();
}

//----- (0000000000408CDA) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_68b_badSink()
{
  free((void *)CWE415_Double_Free__malloc_free_struct_68_badData);
}
// 628270: using guessed type __int64 CWE415_Double_Free__malloc_free_struct_68_badData;

//----- (0000000000408CFB) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_68b_goodG2BSink()
{
  free((void *)CWE415_Double_Free__malloc_free_struct_68_goodG2BData);
}
// 628260: using guessed type __int64 CWE415_Double_Free__malloc_free_struct_68_goodG2BData;

//----- (0000000000408D1C) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_struct_68b_goodB2GSink()
{
  return CWE415_Double_Free__malloc_free_struct_68_goodB2GData;
}
// 628268: using guessed type __int64 CWE415_Double_Free__malloc_free_struct_68_goodB2GData;

//----- (0000000000408D2D) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_54e_badSink(void *a1)
{
  free(a1);
}

//----- (0000000000408D47) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_54e_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (0000000000408D61) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_54e_goodB2GSink()
{
  ;
}

//----- (0000000000408D6B) ----------------------------------------------------
void __fastcall badSink_5(void *a1)
{
  free(a1);
}

//----- (0000000000408D85) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_41_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  badSink_5(ptr);
}

//----- (0000000000408DCE) ----------------------------------------------------
void __fastcall goodG2BSink_5(void *a1)
{
  free(a1);
}

//----- (0000000000408DE8) ----------------------------------------------------
void goodG2B_45()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  goodG2BSink_5(v0);
}

//----- (0000000000408E25) ----------------------------------------------------
void goodB2GSink_4()
{
  ;
}

//----- (0000000000408E2F) ----------------------------------------------------
void goodB2G_43()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  goodB2GSink_4();
}

//----- (0000000000408E78) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_41_good()
{
  goodB2G_43();
  goodG2B_45();
}

//----- (0000000000408E92) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_34_bad()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000408EEB) ----------------------------------------------------
void goodG2B_46()
{
  void *v0; // [rsp+18h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  free(v0);
}

//----- (0000000000408F38) ----------------------------------------------------
void *goodB2G_44()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (0000000000408F85) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_char_34_good()
{
  goodG2B_46();
  return goodB2G_44();
}

//----- (0000000000408F9F) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_63b_badSink(void **a1)
{
  free(*a1);
}

//----- (0000000000408FC4) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_63b_goodG2BSink(void **a1)
{
  free(*a1);
}

//----- (0000000000408FE9) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_char_63b_goodB2GSink(__int64 a1)
{
  return *(_QWORD *)a1;
}

//----- (0000000000408FFE) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_13_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( GLOBAL_CONST_FIVE == 5 )
    free(ptr);
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040905D) ----------------------------------------------------
int goodB2G1_21()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE != 5 )
    result = printLine("Benign, fixed string");
  return result;
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004090BA) ----------------------------------------------------
void goodB2G2_21()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000409102) ----------------------------------------------------
void goodG2B1_19()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  if ( GLOBAL_CONST_FIVE == 5 )
    free(ptr);
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000409161) ----------------------------------------------------
void goodG2B2_19()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( GLOBAL_CONST_FIVE == 5 )
    free(ptr);
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004091B4) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_13_good()
{
  goodB2G1_21();
  goodB2G2_21();
  goodG2B1_19();
  goodG2B2_19();
}

//----- (00000000004091E2) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_05_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticTrue_0 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( staticTrue_0 )
    free(ptr);
}
// 6280D0: using guessed type int staticTrue_0;

//----- (000000000040923F) ----------------------------------------------------
int goodB2G1_22()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticTrue_0 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = staticFalse_0;
  if ( staticFalse_0 )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280D0: using guessed type int staticTrue_0;
// 628154: using guessed type int staticFalse_0;

//----- (000000000040929A) ----------------------------------------------------
void goodB2G2_22()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticTrue_0 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280D0: using guessed type int staticTrue_0;

//----- (00000000004092E1) ----------------------------------------------------
void goodG2B1_20()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFalse_0 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( staticTrue_0 )
    free(ptr);
}
// 6280D0: using guessed type int staticTrue_0;
// 628154: using guessed type int staticFalse_0;

//----- (000000000040933E) ----------------------------------------------------
void goodG2B2_20()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticTrue_0 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( staticTrue_0 )
    free(ptr);
}
// 6280D0: using guessed type int staticTrue_0;

//----- (000000000040938F) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_05_good()
{
  goodB2G1_22();
  goodB2G2_22();
  goodG2B1_20();
  goodG2B2_20();
}

//----- (00000000004093BD) ----------------------------------------------------
void __fastcall badSink_6(void *a1)
{
  free(a1);
}

//----- (00000000004093D7) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_41_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  badSink_6(ptr);
}

//----- (0000000000409420) ----------------------------------------------------
void __fastcall goodG2BSink_6(void *a1)
{
  free(a1);
}

//----- (000000000040943A) ----------------------------------------------------
void goodG2B_47()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  goodG2BSink_6(v0);
}

//----- (0000000000409477) ----------------------------------------------------
void goodB2GSink_5()
{
  ;
}

//----- (0000000000409481) ----------------------------------------------------
void goodB2G_45()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  goodB2GSink_5();
}

//----- (00000000004094CA) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_41_good()
{
  goodB2G_45();
  goodG2B_47();
}

//----- (00000000004094E4) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_53b_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_struct_53c_badSink(a1);
}

//----- (00000000004094FE) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_53b_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_struct_53c_goodG2BSink(a1);
}

//----- (0000000000409518) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_53b_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_struct_53c_goodB2GSink();
}

//----- (0000000000409532) ----------------------------------------------------
__int64 staticReturnsTrue_1()
{
  return 1LL;
}

//----- (000000000040953D) ----------------------------------------------------
__int64 staticReturnsFalse_1()
{
  return 0LL;
}

//----- (0000000000409548) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_08_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( (unsigned int)staticReturnsTrue_1() )
    free(ptr);
}

//----- (00000000004095AD) ----------------------------------------------------
int goodB2G1_23()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)staticReturnsTrue_1() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = staticReturnsFalse_1();
  if ( result )
    result = printLine("Benign, fixed string");
  return result;
}

//----- (0000000000409610) ----------------------------------------------------
__int64 goodB2G2_23()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)staticReturnsTrue_1() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  return staticReturnsTrue_1();
}

//----- (0000000000409665) ----------------------------------------------------
void goodG2B1_21()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsFalse_1() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)staticReturnsTrue_1() )
    free(ptr);
}

//----- (00000000004096CA) ----------------------------------------------------
void goodG2B2_21()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)staticReturnsTrue_1() )
    free(ptr);
}

//----- (0000000000409723) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_08_good()
{
  goodB2G1_23();
  goodB2G2_23();
  goodG2B1_21();
  goodG2B2_21();
}

//----- (0000000000409751) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_04_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (00000000004097AC) ----------------------------------------------------
__int64 goodB2G1_24()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return 0LL;
}

//----- (0000000000409805) ----------------------------------------------------
void goodB2G2_24()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040984B) ----------------------------------------------------
void goodG2B1_22()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004098A6) ----------------------------------------------------
void goodG2B2_22()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004098F5) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_04_good()
{
  goodB2G1_24();
  goodB2G2_24();
  goodG2B1_22();
  goodG2B2_22();
}

//----- (0000000000409923) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_09_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( GLOBAL_CONST_TRUE )
    free(ptr);
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000409980) ----------------------------------------------------
int goodB2G1_25()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = GLOBAL_CONST_FALSE;
  if ( GLOBAL_CONST_FALSE )
    result = printLine("Benign, fixed string");
  return result;
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;
// 41AA88: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004099DB) ----------------------------------------------------
void goodB2G2_25()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000409A22) ----------------------------------------------------
void goodG2B1_23()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FALSE )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( GLOBAL_CONST_TRUE )
    free(ptr);
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;
// 41AA88: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000409A7F) ----------------------------------------------------
void goodG2B2_23()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( GLOBAL_CONST_TRUE )
    free(ptr);
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000409AD0) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_09_good()
{
  goodB2G1_25();
  goodB2G2_25();
  goodG2B1_23();
  goodG2B2_23();
}

//----- (0000000000409AFE) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_52c_badSink(void *a1)
{
  free(a1);
}

//----- (0000000000409B18) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_52c_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (0000000000409B32) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_52c_goodB2GSink()
{
  ;
}

//----- (0000000000409B3C) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_53c_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int64_t_53d_badSink(a1);
}

//----- (0000000000409B56) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_53c_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int64_t_53d_goodG2BSink(a1);
}

//----- (0000000000409B70) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_53c_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_int64_t_53d_goodB2GSink();
}

//----- (0000000000409B8A) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_18_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000409BD5) ----------------------------------------------------
void goodB2G_46()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000409C14) ----------------------------------------------------
void goodG2B_48()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000409C53) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_18_good()
{
  goodB2G_46();
  goodG2B_48();
}

//----- (0000000000409C6D) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_54d_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_struct_54e_badSink(a1);
}

//----- (0000000000409C87) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_54d_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_struct_54e_goodG2BSink(a1);
}

//----- (0000000000409CA1) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_54d_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_struct_54e_goodB2GSink();
}

//----- (0000000000409CBB) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_68_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_struct_68_badData = (__int64)ptr;
  CWE415_Double_Free__malloc_free_struct_68b_badSink();
}
// 628270: using guessed type __int64 CWE415_Double_Free__malloc_free_struct_68_badData;

//----- (0000000000409D0D) ----------------------------------------------------
void goodG2B_49()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_struct_68_goodG2BData = (__int64)v0;
  CWE415_Double_Free__malloc_free_struct_68b_goodG2BSink();
}
// 628260: using guessed type __int64 CWE415_Double_Free__malloc_free_struct_68_goodG2BData;

//----- (0000000000409D53) ----------------------------------------------------
__int64 goodB2G_47()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_struct_68_goodB2GData = (__int64)ptr;
  return CWE415_Double_Free__malloc_free_struct_68b_goodB2GSink();
}
// 628268: using guessed type __int64 CWE415_Double_Free__malloc_free_struct_68_goodB2GData;

//----- (0000000000409DA5) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_struct_68_good()
{
  goodG2B_49();
  return goodB2G_47();
}

//----- (0000000000409DBF) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_34_bad()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000409E18) ----------------------------------------------------
void goodG2B_50()
{
  void *v0; // [rsp+18h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  free(v0);
}

//----- (0000000000409E65) ----------------------------------------------------
void *goodB2G_48()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (0000000000409EB2) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_struct_34_good()
{
  goodG2B_50();
  return goodB2G_48();
}

//----- (0000000000409ECC) ----------------------------------------------------
__int64 staticReturnsTrue_2()
{
  return 1LL;
}

//----- (0000000000409ED7) ----------------------------------------------------
__int64 staticReturnsFalse_2()
{
  return 0LL;
}

//----- (0000000000409EE2) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_08_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsTrue_2() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( (unsigned int)staticReturnsTrue_2() )
    free(ptr);
}

//----- (0000000000409F47) ----------------------------------------------------
int goodB2G1_26()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)staticReturnsTrue_2() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = staticReturnsFalse_2();
  if ( result )
    result = printLine("Benign, fixed string");
  return result;
}

//----- (0000000000409FAA) ----------------------------------------------------
__int64 goodB2G2_26()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)staticReturnsTrue_2() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  return staticReturnsTrue_2();
}

//----- (0000000000409FFF) ----------------------------------------------------
void goodG2B1_24()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsFalse_2() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)staticReturnsTrue_2() )
    free(ptr);
}

//----- (000000000040A064) ----------------------------------------------------
void goodG2B2_24()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsTrue_2() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)staticReturnsTrue_2() )
    free(ptr);
}

//----- (000000000040A0BD) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_08_good()
{
  goodB2G1_26();
  goodB2G2_26();
  goodG2B1_24();
  goodG2B2_24();
}

//----- (000000000040A0EB) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_02_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000040A134) ----------------------------------------------------
void goodB2G1_27()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040A171) ----------------------------------------------------
void goodB2G2_27()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040A1AE) ----------------------------------------------------
void goodG2B1_25()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040A1EB) ----------------------------------------------------
void goodG2B2_25()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040A228) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_02_good()
{
  goodB2G1_27();
  goodB2G2_27();
  goodG2B1_25();
  goodG2B2_25();
}

//----- (000000000040A256) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_67_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_long_67b_badSink(ptr);
}

//----- (000000000040A2A7) ----------------------------------------------------
void goodG2B_51()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_long_67b_goodG2BSink(v0);
}

//----- (000000000040A2EC) ----------------------------------------------------
__int64 goodB2G_49()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return CWE415_Double_Free__malloc_free_long_67b_goodB2GSink((__int64)ptr);
}

//----- (000000000040A33D) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_long_67_good()
{
  goodG2B_51();
  return goodB2G_49();
}

//----- (000000000040A357) ----------------------------------------------------
void __fastcall badSink_7(void *a1)
{
  if ( badStatic_0 )
    free(a1);
}
// 628158: using guessed type int badStatic_0;

//----- (000000000040A37B) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_21_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  badStatic_0 = 1;
  badSink_7(ptr);
}
// 628158: using guessed type int badStatic_0;

//----- (000000000040A3CE) ----------------------------------------------------
int goodB2G1Sink_0()
{
  int result; // eax

  result = goodB2G1Static_0;
  if ( goodB2G1Static_0 )
    result = printLine("Benign, fixed string");
  return result;
}
// 62815C: using guessed type int goodB2G1Static_0;

//----- (000000000040A3F0) ----------------------------------------------------
int goodB2G1_28()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  goodB2G1Static_0 = 0;
  return goodB2G1Sink_0();
}
// 62815C: using guessed type int goodB2G1Static_0;

//----- (000000000040A443) ----------------------------------------------------
void goodB2G2Sink_0()
{
  ;
}

//----- (000000000040A44D) ----------------------------------------------------
void goodB2G2_28()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  goodB2G2Static_0 = 1;
  goodB2G2Sink_0();
}
// 628160: using guessed type int goodB2G2Static_0;

//----- (000000000040A4A0) ----------------------------------------------------
void __fastcall goodG2BSink_7(void *a1)
{
  if ( goodG2BStatic_0 )
    free(a1);
}
// 628164: using guessed type int goodG2BStatic_0;

//----- (000000000040A4C4) ----------------------------------------------------
void goodG2B_52()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  goodG2BStatic_0 = 1;
  goodG2BSink_7(v0);
}
// 628164: using guessed type int goodG2BStatic_0;

//----- (000000000040A50B) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_21_good()
{
  goodB2G1_28();
  goodB2G2_28();
  goodG2B_52();
}

//----- (000000000040A52F) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_03_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000040A578) ----------------------------------------------------
void goodB2G1_29()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040A5B5) ----------------------------------------------------
void goodB2G2_29()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040A5F2) ----------------------------------------------------
void goodG2B1_26()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040A62F) ----------------------------------------------------
void goodG2B2_26()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040A66C) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_03_good()
{
  goodB2G1_29();
  goodB2G2_29();
  goodG2B1_26();
  goodG2B2_26();
}

//----- (000000000040A69A) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_65b_badSink(void *a1)
{
  free(a1);
}

//----- (000000000040A6B4) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_65b_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (000000000040A6CE) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_65b_goodB2GSink()
{
  ;
}

//----- (000000000040A6D8) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int64_t_65_bad()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))CWE415_Double_Free__malloc_free_int64_t_65b_badSink)(ptr);
}

//----- (000000000040A72A) ----------------------------------------------------
__int64 goodG2B_53()
{
  void *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x320uLL);
  if ( !v1 )
    exit(-1);
  return ((__int64 (__fastcall *)(void *))CWE415_Double_Free__malloc_free_int64_t_65b_goodG2BSink)(v1);
}

//----- (000000000040A770) ----------------------------------------------------
__int64 goodB2G_50()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))CWE415_Double_Free__malloc_free_int64_t_65b_goodB2GSink)(ptr);
}

//----- (000000000040A7C2) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int64_t_65_good()
{
  goodG2B_53();
  return goodB2G_50();
}

//----- (000000000040A7DC) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_15_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000040A827) ----------------------------------------------------
void goodB2G1_30()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040A866) ----------------------------------------------------
void goodB2G2_30()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040A8A5) ----------------------------------------------------
void goodG2B1_27()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040A8E4) ----------------------------------------------------
void goodG2B2_27()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040A923) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_15_good()
{
  goodB2G1_30();
  goodB2G2_30();
  goodG2B1_27();
  goodG2B2_27();
}

//----- (000000000040A951) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_53b_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int_53c_badSink(a1);
}

//----- (000000000040A96B) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_53b_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int_53c_goodG2BSink(a1);
}

//----- (000000000040A985) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_53b_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_int_53c_goodB2GSink();
}

//----- (000000000040A99F) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_22_badSink(void *a1)
{
  if ( CWE415_Double_Free__malloc_free_long_22_badGlobal )
    free(a1);
}
// 6280FC: using guessed type int CWE415_Double_Free__malloc_free_long_22_badGlobal;

//----- (000000000040A9C3) ----------------------------------------------------
int CWE415_Double_Free__malloc_free_long_22_goodB2G1Sink()
{
  int result; // eax

  result = CWE415_Double_Free__malloc_free_long_22_goodB2G1Global;
  if ( CWE415_Double_Free__malloc_free_long_22_goodB2G1Global )
    result = printLine("Benign, fixed string");
  return result;
}
// 628100: using guessed type int CWE415_Double_Free__malloc_free_long_22_goodB2G1Global;

//----- (000000000040A9E5) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_22_goodB2G2Sink()
{
  ;
}

//----- (000000000040A9EF) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_22_goodG2BSink(void *a1)
{
  if ( CWE415_Double_Free__malloc_free_long_22_goodG2BGlobal )
    free(a1);
}
// 628108: using guessed type int CWE415_Double_Free__malloc_free_long_22_goodG2BGlobal;

//----- (000000000040AA13) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_18_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000040AA5E) ----------------------------------------------------
void goodB2G_51()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040AA9D) ----------------------------------------------------
void goodG2B_54()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040AADC) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_18_good()
{
  goodB2G_51();
  goodG2B_54();
}

//----- (000000000040AAF6) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_53c_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int_53d_badSink(a1);
}

//----- (000000000040AB10) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_53c_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int_53d_goodG2BSink(a1);
}

//----- (000000000040AB2A) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_53c_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_int_53d_goodB2GSink();
}

//----- (000000000040AB44) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_53_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_struct_53b_badSink(ptr);
}

//----- (000000000040AB8D) ----------------------------------------------------
void goodG2B_55()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_struct_53b_goodG2BSink(v0);
}

//----- (000000000040ABCA) ----------------------------------------------------
void goodB2G_52()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_struct_53b_goodB2GSink();
}

//----- (000000000040AC13) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_53_good()
{
  goodG2B_55();
  goodB2G_52();
}

//----- (000000000040AC2D) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_52_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int_52b_badSink(ptr);
}

//----- (000000000040AC76) ----------------------------------------------------
void goodG2B_56()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x190uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int_52b_goodG2BSink(v0);
}

//----- (000000000040ACB3) ----------------------------------------------------
void goodB2G_53()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int_52b_goodB2GSink();
}

//----- (000000000040ACFC) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_52_good()
{
  goodG2B_56();
  goodB2G_53();
}

//----- (000000000040AD16) ----------------------------------------------------
void *badSource_1()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (000000000040AD53) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_42_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = badSource_1();
  free(ptr);
}

//----- (000000000040AD81) ----------------------------------------------------
void *goodG2BSource_1()
{
  void *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x320uLL);
  if ( !v1 )
    exit(-1);
  return v1;
}

//----- (000000000040ADB2) ----------------------------------------------------
void goodG2B_57()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = goodG2BSource_1();
  free(ptr);
}

//----- (000000000040ADE0) ----------------------------------------------------
void *goodB2GSource_1()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (000000000040AE1D) ----------------------------------------------------
void *goodB2G_54()
{
  return goodB2GSource_1();
}

//----- (000000000040AE3F) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_42_good()
{
  goodB2G_54();
  goodG2B_57();
}

//----- (000000000040AE59) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_51b_badSink(void *a1)
{
  free(a1);
}

//----- (000000000040AE73) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_51b_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (000000000040AE8D) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_51b_goodB2GSink()
{
  ;
}

//----- (000000000040AE97) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_16_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000040AEE2) ----------------------------------------------------
void goodB2G_55()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040AF21) ----------------------------------------------------
void goodG2B_58()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040AF60) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_16_good()
{
  goodB2G_55();
  goodG2B_58();
}

//----- (000000000040AF7A) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_68b_badSink()
{
  free((void *)CWE415_Double_Free__malloc_free_int64_t_68_badData);
}
// 628288: using guessed type __int64 CWE415_Double_Free__malloc_free_int64_t_68_badData;

//----- (000000000040AF9B) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_68b_goodG2BSink()
{
  free((void *)CWE415_Double_Free__malloc_free_int64_t_68_goodG2BData);
}
// 628278: using guessed type __int64 CWE415_Double_Free__malloc_free_int64_t_68_goodG2BData;

//----- (000000000040AFBC) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int64_t_68b_goodB2GSink()
{
  return CWE415_Double_Free__malloc_free_int64_t_68_goodB2GData;
}
// 628280: using guessed type __int64 CWE415_Double_Free__malloc_free_int64_t_68_goodB2GData;

//----- (000000000040AFCD) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_12_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  else
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    free(ptr);
}

//----- (000000000040B053) ----------------------------------------------------
__int64 goodB2G_56()
{
  void *ptr; // [rsp+8h] [rbp-8h]
  void *ptra; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  else
  {
    ptra = malloc(0x64uLL);
    if ( !ptra )
      exit(-1);
    free(ptra);
  }
  return globalReturnsTrueOrFalse();
}

//----- (000000000040B0D5) ----------------------------------------------------
void goodG2B_59()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  globalReturnsTrueOrFalse();
  free(ptr);
}

//----- (000000000040B15B) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_12_good()
{
  goodB2G_56();
  goodG2B_59();
}

//----- (000000000040B175) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_54e_badSink(void *a1)
{
  free(a1);
}

//----- (000000000040B18F) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_54e_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (000000000040B1A9) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_54e_goodB2GSink()
{
  ;
}

//----- (000000000040B1B3) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_66_bad()
{
  char v0; // [rsp+0h] [rbp-30h]
  void *v1; // [rsp+10h] [rbp-20h]
  void *ptr; // [rsp+28h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  v1 = ptr;
  CWE415_Double_Free__malloc_free_struct_66b_badSink((__int64)&v0);
}

//----- (000000000040B204) ----------------------------------------------------
void goodG2B_60()
{
  char v0; // [rsp+0h] [rbp-30h]
  void *v1; // [rsp+10h] [rbp-20h]
  void *v2; // [rsp+28h] [rbp-8h]

  v2 = malloc(0x320uLL);
  if ( !v2 )
    exit(-1);
  v1 = v2;
  CWE415_Double_Free__malloc_free_struct_66b_goodG2BSink((__int64)&v0);
}

//----- (000000000040B249) ----------------------------------------------------
__int64 goodB2G_57()
{
  char v1; // [rsp+0h] [rbp-30h]
  void *v2; // [rsp+10h] [rbp-20h]
  void *ptr; // [rsp+28h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  v2 = ptr;
  return CWE415_Double_Free__malloc_free_struct_66b_goodB2GSink((__int64)&v1);
}

//----- (000000000040B29A) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_struct_66_good()
{
  goodG2B_60();
  return goodB2G_57();
}

//----- (000000000040B2B4) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_67_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int_67b_badSink(ptr);
}

//----- (000000000040B305) ----------------------------------------------------
void goodG2B_61()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x190uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int_67b_goodG2BSink(v0);
}

//----- (000000000040B34A) ----------------------------------------------------
__int64 goodB2G_58()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return CWE415_Double_Free__malloc_free_int_67b_goodB2GSink((__int64)ptr);
}

//----- (000000000040B39B) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int_67_good()
{
  goodG2B_61();
  return goodB2G_58();
}

//----- (000000000040B3B5) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_05_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticTrue_1 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( staticTrue_1 )
    free(ptr);
}
// 6280D4: using guessed type int staticTrue_1;

//----- (000000000040B412) ----------------------------------------------------
int goodB2G1_31()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticTrue_1 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = staticFalse_1;
  if ( staticFalse_1 )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280D4: using guessed type int staticTrue_1;
// 628168: using guessed type int staticFalse_1;

//----- (000000000040B46D) ----------------------------------------------------
void goodB2G2_31()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticTrue_1 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280D4: using guessed type int staticTrue_1;

//----- (000000000040B4B4) ----------------------------------------------------
void goodG2B1_28()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFalse_1 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( staticTrue_1 )
    free(ptr);
}
// 6280D4: using guessed type int staticTrue_1;
// 628168: using guessed type int staticFalse_1;

//----- (000000000040B511) ----------------------------------------------------
void goodG2B2_28()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticTrue_1 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( staticTrue_1 )
    free(ptr);
}
// 6280D4: using guessed type int staticTrue_1;

//----- (000000000040B562) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_05_good()
{
  goodB2G1_31();
  goodB2G2_31();
  goodG2B1_28();
  goodG2B2_28();
}

//----- (000000000040B590) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_51_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int_51b_badSink(ptr);
}

//----- (000000000040B5D9) ----------------------------------------------------
void goodG2B_62()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x190uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int_51b_goodG2BSink(v0);
}

//----- (000000000040B616) ----------------------------------------------------
void goodB2G_59()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int_51b_goodB2GSink();
}

//----- (000000000040B65F) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_51_good()
{
  goodG2B_62();
  goodB2G_59();
}

//----- (000000000040B679) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_17_bad()
{
  void *ptr; // [rsp+0h] [rbp-10h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  ptr = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  for ( j = 0; j <= 0; ++j )
    free(ptr);
}

//----- (000000000040B6E8) ----------------------------------------------------
void goodB2G_60()
{
  void *ptr; // [rsp+0h] [rbp-10h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; i <= 0; ++i )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  for ( j = 0; j <= 0; ++j )
    ;
}

//----- (000000000040B74B) ----------------------------------------------------
void goodG2B_63()
{
  void *ptr; // [rsp+0h] [rbp-10h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  ptr = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  for ( j = 0; j <= 0; ++j )
    free(ptr);
}

//----- (000000000040B7AE) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_17_good()
{
  goodB2G_60();
  goodG2B_63();
}

//----- (000000000040B7C8) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_53b_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int64_t_53c_badSink(a1);
}

//----- (000000000040B7E2) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_53b_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int64_t_53c_goodG2BSink(a1);
}

//----- (000000000040B7FC) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_53b_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_int64_t_53c_goodB2GSink();
}

//----- (000000000040B816) ----------------------------------------------------
void __fastcall badSink_8(void *a1)
{
  free(a1);
}

//----- (000000000040B830) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_char_44_bad()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))badSink_8)(ptr);
}

//----- (000000000040B882) ----------------------------------------------------
void __fastcall goodG2BSink_8(void *a1)
{
  free(a1);
}

//----- (000000000040B89C) ----------------------------------------------------
__int64 goodG2B_64()
{
  void *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x64uLL);
  if ( !v1 )
    exit(-1);
  return ((__int64 (__fastcall *)(void *))goodG2BSink_8)(v1);
}

//----- (000000000040B8E2) ----------------------------------------------------
void goodB2GSink_6()
{
  ;
}

//----- (000000000040B8EC) ----------------------------------------------------
__int64 goodB2G_61()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))goodB2GSink_6)(ptr);
}

//----- (000000000040B93E) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_char_44_good()
{
  goodG2B_64();
  return goodB2G_61();
}

//----- (000000000040B958) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_61_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = CWE415_Double_Free__malloc_free_int64_t_61b_badSource();
  free(ptr);
}

//----- (000000000040B986) ----------------------------------------------------
void goodG2B_65()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = CWE415_Double_Free__malloc_free_int64_t_61b_goodG2BSource();
  free(ptr);
}

//----- (000000000040B9B4) ----------------------------------------------------
void *goodB2G_62()
{
  return CWE415_Double_Free__malloc_free_int64_t_61b_goodB2GSource();
}

//----- (000000000040B9D6) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_int64_t_61_good()
{
  goodG2B_65();
  return goodB2G_62();
}

//----- (000000000040B9F0) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_52c_badSink(void *a1)
{
  free(a1);
}

//----- (000000000040BA0A) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_52c_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (000000000040BA24) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_52c_goodB2GSink()
{
  ;
}

//----- (000000000040BA2E) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_11_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( (unsigned int)globalReturnsTrue() )
    free(ptr);
}

//----- (000000000040BA93) ----------------------------------------------------
int goodB2G1_32()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = globalReturnsFalse();
  if ( result )
    result = printLine("Benign, fixed string");
  return result;
}

//----- (000000000040BAF6) ----------------------------------------------------
__int64 goodB2G2_32()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  return globalReturnsTrue();
}

//----- (000000000040BB4B) ----------------------------------------------------
void goodG2B1_29()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)globalReturnsTrue() )
    free(ptr);
}

//----- (000000000040BBB0) ----------------------------------------------------
void goodG2B2_29()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)globalReturnsTrue() )
    free(ptr);
}

//----- (000000000040BC09) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_11_good()
{
  goodB2G1_32();
  goodB2G2_32();
  goodG2B1_29();
  goodG2B2_29();
}

//----- (000000000040BC37) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_02_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000040BC80) ----------------------------------------------------
void goodB2G1_33()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040BCBD) ----------------------------------------------------
void goodB2G2_33()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040BCFA) ----------------------------------------------------
void goodG2B1_30()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040BD37) ----------------------------------------------------
void goodG2B2_30()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040BD74) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_02_good()
{
  goodB2G1_33();
  goodB2G2_33();
  goodG2B1_30();
  goodG2B2_30();
}

//----- (000000000040BDA2) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_68_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int64_t_68_badData = (__int64)ptr;
  CWE415_Double_Free__malloc_free_int64_t_68b_badSink();
}
// 628288: using guessed type __int64 CWE415_Double_Free__malloc_free_int64_t_68_badData;

//----- (000000000040BDF4) ----------------------------------------------------
void goodG2B_66()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int64_t_68_goodG2BData = (__int64)v0;
  CWE415_Double_Free__malloc_free_int64_t_68b_goodG2BSink();
}
// 628278: using guessed type __int64 CWE415_Double_Free__malloc_free_int64_t_68_goodG2BData;

//----- (000000000040BE3A) ----------------------------------------------------
__int64 goodB2G_63()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int64_t_68_goodB2GData = (__int64)ptr;
  return CWE415_Double_Free__malloc_free_int64_t_68b_goodB2GSink();
}
// 628280: using guessed type __int64 CWE415_Double_Free__malloc_free_int64_t_68_goodB2GData;

//----- (000000000040BE8C) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int64_t_68_good()
{
  goodG2B_66();
  return goodB2G_63();
}

//----- (000000000040BEA6) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_63b_badSink(void **a1)
{
  free(*a1);
}

//----- (000000000040BECB) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_63b_goodG2BSink(void **a1)
{
  free(*a1);
}

//----- (000000000040BEF0) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_struct_63b_goodB2GSink(__int64 a1)
{
  return *(_QWORD *)a1;
}

//----- (000000000040BF05) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_34_bad()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000040BF5E) ----------------------------------------------------
void goodG2B_67()
{
  void *v0; // [rsp+18h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  free(v0);
}

//----- (000000000040BFAB) ----------------------------------------------------
void *goodB2G_64()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (000000000040BFF8) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_int64_t_34_good()
{
  goodG2B_67();
  return goodB2G_64();
}

//----- (000000000040C012) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_54d_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_long_54e_badSink(a1);
}

//----- (000000000040C02C) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_54d_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_long_54e_goodG2BSink(a1);
}

//----- (000000000040C046) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_54d_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_long_54e_goodB2GSink();
}

//----- (000000000040C060) ----------------------------------------------------
void badSink_9()
{
  free((void *)CWE415_Double_Free__malloc_free_int_45_badData);
}
// 628170: using guessed type __int64 CWE415_Double_Free__malloc_free_int_45_badData;

//----- (000000000040C081) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_45_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int_45_badData = (__int64)ptr;
  badSink_9();
}
// 628170: using guessed type __int64 CWE415_Double_Free__malloc_free_int_45_badData;

//----- (000000000040C0D3) ----------------------------------------------------
void goodG2BSink_9()
{
  free((void *)CWE415_Double_Free__malloc_free_int_45_goodG2BData);
}
// 628178: using guessed type __int64 CWE415_Double_Free__malloc_free_int_45_goodG2BData;

//----- (000000000040C0F4) ----------------------------------------------------
void goodG2B_68()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x190uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int_45_goodG2BData = (__int64)v0;
  goodG2BSink_9();
}
// 628178: using guessed type __int64 CWE415_Double_Free__malloc_free_int_45_goodG2BData;

//----- (000000000040C13A) ----------------------------------------------------
__int64 goodB2GSink_7()
{
  return CWE415_Double_Free__malloc_free_int_45_goodB2GData;
}
// 628180: using guessed type __int64 CWE415_Double_Free__malloc_free_int_45_goodB2GData;

//----- (000000000040C14B) ----------------------------------------------------
__int64 goodB2G_65()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int_45_goodB2GData = (__int64)ptr;
  return goodB2GSink_7();
}
// 628180: using guessed type __int64 CWE415_Double_Free__malloc_free_int_45_goodB2GData;

//----- (000000000040C19D) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int_45_good()
{
  goodG2B_68();
  return goodB2G_65();
}

//----- (000000000040C1B7) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_66b_badSink(__int64 a1)
{
  free(*(void **)(a1 + 16));
}

//----- (000000000040C1DD) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_66b_goodG2BSink(__int64 a1)
{
  free(*(void **)(a1 + 16));
}

//----- (000000000040C203) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_int64_t_66b_goodB2GSink(__int64 a1)
{
  return *(_QWORD *)(a1 + 16);
}

//----- (000000000040C219) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_13_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( GLOBAL_CONST_FIVE == 5 )
    free(ptr);
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040C278) ----------------------------------------------------
int goodB2G1_34()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE != 5 )
    result = printLine("Benign, fixed string");
  return result;
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040C2D5) ----------------------------------------------------
void goodB2G2_34()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040C31D) ----------------------------------------------------
void goodG2B1_31()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  if ( GLOBAL_CONST_FIVE == 5 )
    free(ptr);
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040C37C) ----------------------------------------------------
void goodG2B2_31()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( GLOBAL_CONST_FIVE == 5 )
    free(ptr);
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040C3CF) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_13_good()
{
  goodB2G1_34();
  goodB2G2_34();
  goodG2B1_31();
  goodG2B2_31();
}

//----- (000000000040C3FD) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_06_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000040C45A) ----------------------------------------------------
__int64 goodB2G1_35()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return 5LL;
}

//----- (000000000040C4B5) ----------------------------------------------------
void goodB2G2_35()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040C4FC) ----------------------------------------------------
void goodG2B1_32()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040C559) ----------------------------------------------------
void goodG2B2_32()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040C5AA) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_06_good()
{
  goodB2G1_35();
  goodB2G2_35();
  goodG2B1_32();
  goodG2B2_32();
}

//----- (000000000040C5D8) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_63b_badSink(void **a1)
{
  free(*a1);
}

//----- (000000000040C5FD) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_63b_goodG2BSink(void **a1)
{
  free(*a1);
}

//----- (000000000040C622) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_long_63b_goodB2GSink(__int64 a1)
{
  return *(_QWORD *)a1;
}

//----- (000000000040C637) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_10_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalTrue )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( globalTrue )
    free(ptr);
}
// 6280EC: using guessed type int globalTrue;

//----- (000000000040C694) ----------------------------------------------------
int goodB2G1_36()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalTrue )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = globalFalse;
  if ( globalFalse )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280EC: using guessed type int globalTrue;
// 628238: using guessed type int globalFalse;

//----- (000000000040C6EF) ----------------------------------------------------
void goodB2G2_36()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalTrue )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280EC: using guessed type int globalTrue;

//----- (000000000040C736) ----------------------------------------------------
void goodG2B1_33()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( globalTrue )
    free(ptr);
}
// 6280EC: using guessed type int globalTrue;
// 628238: using guessed type int globalFalse;

//----- (000000000040C793) ----------------------------------------------------
void goodG2B2_33()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalTrue )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( globalTrue )
    free(ptr);
}
// 6280EC: using guessed type int globalTrue;

//----- (000000000040C7E4) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_10_good()
{
  goodB2G1_36();
  goodB2G2_36();
  goodG2B1_33();
  goodG2B2_33();
}

//----- (000000000040C812) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_68b_badSink()
{
  free((void *)CWE415_Double_Free__malloc_free_char_68_badData);
}
// 628290: using guessed type __int64 CWE415_Double_Free__malloc_free_char_68_badData;

//----- (000000000040C833) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_68b_goodG2BSink()
{
  free((void *)CWE415_Double_Free__malloc_free_char_68_goodG2BData);
}
// 628298: using guessed type __int64 CWE415_Double_Free__malloc_free_char_68_goodG2BData;

//----- (000000000040C854) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_char_68b_goodB2GSink()
{
  return CWE415_Double_Free__malloc_free_char_68_goodB2GData;
}
// 6282A0: using guessed type __int64 CWE415_Double_Free__malloc_free_char_68_goodB2GData;

//----- (000000000040C865) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_01_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000040C8AE) ----------------------------------------------------
void goodG2B_69()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040C8EB) ----------------------------------------------------
void goodB2G_66()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040C928) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_01_good()
{
  goodG2B_69();
  goodB2G_66();
}

//----- (000000000040C942) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_52_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_struct_52b_badSink(ptr);
}

//----- (000000000040C98B) ----------------------------------------------------
void goodG2B_70()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_struct_52b_goodG2BSink(v0);
}

//----- (000000000040C9C8) ----------------------------------------------------
void goodB2G_67()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_struct_52b_goodB2GSink();
}

//----- (000000000040CA11) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_52_good()
{
  goodG2B_70();
  goodB2G_67();
}

//----- (000000000040CA2B) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_61_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = CWE415_Double_Free__malloc_free_long_61b_badSource();
  free(ptr);
}

//----- (000000000040CA59) ----------------------------------------------------
void goodG2B_71()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = CWE415_Double_Free__malloc_free_long_61b_goodG2BSource();
  free(ptr);
}

//----- (000000000040CA87) ----------------------------------------------------
void *goodB2G_68()
{
  return CWE415_Double_Free__malloc_free_long_61b_goodB2GSource();
}

//----- (000000000040CAA9) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_long_61_good()
{
  goodG2B_71();
  return goodB2G_68();
}

//----- (000000000040CAC3) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_22_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int_22_badGlobal = 1;
  CWE415_Double_Free__malloc_free_int_22_badSink(ptr);
}
// 628188: using guessed type int CWE415_Double_Free__malloc_free_int_22_badGlobal;

//----- (000000000040CB16) ----------------------------------------------------
int goodB2G1_37()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int_22_goodB2G1Global = 0;
  return CWE415_Double_Free__malloc_free_int_22_goodB2G1Sink();
}
// 62818C: using guessed type int CWE415_Double_Free__malloc_free_int_22_goodB2G1Global;

//----- (000000000040CB69) ----------------------------------------------------
void goodB2G2_37()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int_22_goodB2G2Global = 1;
  CWE415_Double_Free__malloc_free_int_22_goodB2G2Sink();
}
// 628190: using guessed type int CWE415_Double_Free__malloc_free_int_22_goodB2G2Global;

//----- (000000000040CBBC) ----------------------------------------------------
void goodG2B_72()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x190uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int_22_goodG2BGlobal = 1;
  CWE415_Double_Free__malloc_free_int_22_goodG2BSink(v0);
}
// 628194: using guessed type int CWE415_Double_Free__malloc_free_int_22_goodG2BGlobal;

//----- (000000000040CC03) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_22_good()
{
  goodB2G1_37();
  goodB2G2_37();
  goodG2B_72();
}

//----- (000000000040CC27) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_10_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalTrue )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( globalTrue )
    free(ptr);
}
// 6280EC: using guessed type int globalTrue;

//----- (000000000040CC84) ----------------------------------------------------
int goodB2G1_38()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalTrue )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = globalFalse;
  if ( globalFalse )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280EC: using guessed type int globalTrue;
// 628238: using guessed type int globalFalse;

//----- (000000000040CCDF) ----------------------------------------------------
void goodB2G2_38()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalTrue )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280EC: using guessed type int globalTrue;

//----- (000000000040CD26) ----------------------------------------------------
void goodG2B1_34()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( globalTrue )
    free(ptr);
}
// 6280EC: using guessed type int globalTrue;
// 628238: using guessed type int globalFalse;

//----- (000000000040CD83) ----------------------------------------------------
void goodG2B2_34()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalTrue )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( globalTrue )
    free(ptr);
}
// 6280EC: using guessed type int globalTrue;

//----- (000000000040CDD4) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_10_good()
{
  goodB2G1_38();
  goodB2G2_38();
  goodG2B1_34();
  goodG2B2_34();
}

//----- (000000000040CE02) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_54d_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int64_t_54e_badSink(a1);
}

//----- (000000000040CE1C) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_54d_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int64_t_54e_goodG2BSink(a1);
}

//----- (000000000040CE36) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_54d_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_int64_t_54e_goodB2GSink();
}

//----- (000000000040CE50) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_04_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000040CEAB) ----------------------------------------------------
__int64 goodB2G1_39()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return 0LL;
}

//----- (000000000040CF04) ----------------------------------------------------
void goodB2G2_39()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040CF4A) ----------------------------------------------------
void goodG2B1_35()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040CFA5) ----------------------------------------------------
void goodG2B2_35()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040CFF4) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_04_good()
{
  goodB2G1_39();
  goodB2G2_39();
  goodG2B1_35();
  goodG2B2_35();
}

//----- (000000000040D022) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_31_bad()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000040D07B) ----------------------------------------------------
void goodG2B_73()
{
  void *v0; // [rsp+18h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  free(v0);
}

//----- (000000000040D0C8) ----------------------------------------------------
void *goodB2G_69()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (000000000040D115) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_struct_31_good()
{
  goodG2B_73();
  return goodB2G_69();
}

//----- (000000000040D12F) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_09_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( GLOBAL_CONST_TRUE )
    free(ptr);
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040D18C) ----------------------------------------------------
int goodB2G1_40()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = GLOBAL_CONST_FALSE;
  if ( GLOBAL_CONST_FALSE )
    result = printLine("Benign, fixed string");
  return result;
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;
// 41AA88: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000040D1E7) ----------------------------------------------------
void goodB2G2_40()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040D22E) ----------------------------------------------------
void goodG2B1_36()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FALSE )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( GLOBAL_CONST_TRUE )
    free(ptr);
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;
// 41AA88: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000040D28B) ----------------------------------------------------
void goodG2B2_36()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( GLOBAL_CONST_TRUE )
    free(ptr);
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040D2DC) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_09_good()
{
  goodB2G1_40();
  goodB2G2_40();
  goodG2B1_36();
  goodG2B2_36();
}

//----- (000000000040D30A) ----------------------------------------------------
void badSink_10()
{
  free((void *)CWE415_Double_Free__malloc_free_char_45_badData);
}
// 628198: using guessed type __int64 CWE415_Double_Free__malloc_free_char_45_badData;

//----- (000000000040D32B) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_45_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_char_45_badData = (__int64)ptr;
  badSink_10();
}
// 628198: using guessed type __int64 CWE415_Double_Free__malloc_free_char_45_badData;

//----- (000000000040D37D) ----------------------------------------------------
void goodG2BSink_10()
{
  free((void *)CWE415_Double_Free__malloc_free_char_45_goodG2BData);
}
// 6281A0: using guessed type __int64 CWE415_Double_Free__malloc_free_char_45_goodG2BData;

//----- (000000000040D39E) ----------------------------------------------------
void goodG2B_74()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_char_45_goodG2BData = (__int64)v0;
  goodG2BSink_10();
}
// 6281A0: using guessed type __int64 CWE415_Double_Free__malloc_free_char_45_goodG2BData;

//----- (000000000040D3E4) ----------------------------------------------------
__int64 goodB2GSink_8()
{
  return CWE415_Double_Free__malloc_free_char_45_goodB2GData;
}
// 6281A8: using guessed type __int64 CWE415_Double_Free__malloc_free_char_45_goodB2GData;

//----- (000000000040D3F5) ----------------------------------------------------
__int64 goodB2G_70()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_char_45_goodB2GData = (__int64)ptr;
  return goodB2GSink_8();
}
// 6281A8: using guessed type __int64 CWE415_Double_Free__malloc_free_char_45_goodB2GData;

//----- (000000000040D447) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_char_45_good()
{
  goodG2B_74();
  return goodB2G_70();
}

//----- (000000000040D461) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_54d_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int_54e_badSink(a1);
}

//----- (000000000040D47B) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_54d_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int_54e_goodG2BSink(a1);
}

//----- (000000000040D495) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_54d_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_int_54e_goodB2GSink();
}

//----- (000000000040D4AF) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_67_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_struct_67b_badSink(ptr);
}

//----- (000000000040D500) ----------------------------------------------------
void goodG2B_75()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_struct_67b_goodG2BSink(v0);
}

//----- (000000000040D545) ----------------------------------------------------
__int64 goodB2G_71()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return CWE415_Double_Free__malloc_free_struct_67b_goodB2GSink((__int64)ptr);
}

//----- (000000000040D596) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_struct_67_good()
{
  goodG2B_75();
  return goodB2G_71();
}

//----- (000000000040D5B0) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_char_65_bad()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))CWE415_Double_Free__malloc_free_char_65b_badSink)(ptr);
}

//----- (000000000040D602) ----------------------------------------------------
__int64 goodG2B_76()
{
  void *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x64uLL);
  if ( !v1 )
    exit(-1);
  return ((__int64 (__fastcall *)(void *))CWE415_Double_Free__malloc_free_char_65b_goodG2BSink)(v1);
}

//----- (000000000040D648) ----------------------------------------------------
__int64 goodB2G_72()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))CWE415_Double_Free__malloc_free_char_65b_goodB2GSink)(ptr);
}

//----- (000000000040D69A) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_char_65_good()
{
  goodG2B_76();
  return goodB2G_72();
}

//----- (000000000040D6B4) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_22_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int64_t_22_badGlobal = 1;
  CWE415_Double_Free__malloc_free_int64_t_22_badSink(ptr);
}
// 6281B0: using guessed type int CWE415_Double_Free__malloc_free_int64_t_22_badGlobal;

//----- (000000000040D707) ----------------------------------------------------
int goodB2G1_41()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int64_t_22_goodB2G1Global = 0;
  return CWE415_Double_Free__malloc_free_int64_t_22_goodB2G1Sink();
}
// 6281B4: using guessed type int CWE415_Double_Free__malloc_free_int64_t_22_goodB2G1Global;

//----- (000000000040D75A) ----------------------------------------------------
void goodB2G2_41()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int64_t_22_goodB2G2Global = 1;
  CWE415_Double_Free__malloc_free_int64_t_22_goodB2G2Sink();
}
// 6281B8: using guessed type int CWE415_Double_Free__malloc_free_int64_t_22_goodB2G2Global;

//----- (000000000040D7AD) ----------------------------------------------------
void goodG2B_77()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int64_t_22_goodG2BGlobal = 1;
  CWE415_Double_Free__malloc_free_int64_t_22_goodG2BSink(v0);
}
// 6281BC: using guessed type int CWE415_Double_Free__malloc_free_int64_t_22_goodG2BGlobal;

//----- (000000000040D7F4) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_22_good()
{
  goodB2G1_41();
  goodB2G2_41();
  goodG2B_77();
}

//----- (000000000040D818) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_15_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000040D863) ----------------------------------------------------
void goodB2G1_42()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040D8A2) ----------------------------------------------------
void goodB2G2_42()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040D8E1) ----------------------------------------------------
void goodG2B1_37()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040D920) ----------------------------------------------------
void goodG2B2_37()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040D95F) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_15_good()
{
  goodB2G1_42();
  goodB2G2_42();
  goodG2B1_37();
  goodG2B2_37();
}

//----- (000000000040D98D) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_13_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( GLOBAL_CONST_FIVE == 5 )
    free(ptr);
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040D9EC) ----------------------------------------------------
int goodB2G1_43()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE != 5 )
    result = printLine("Benign, fixed string");
  return result;
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040DA49) ----------------------------------------------------
void goodB2G2_43()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040DA91) ----------------------------------------------------
void goodG2B1_38()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  if ( GLOBAL_CONST_FIVE == 5 )
    free(ptr);
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040DAF0) ----------------------------------------------------
void goodG2B2_38()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( GLOBAL_CONST_FIVE == 5 )
    free(ptr);
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040DB43) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_13_good()
{
  goodB2G1_43();
  goodB2G2_43();
  goodG2B1_38();
  goodG2B2_38();
}

//----- (000000000040DB71) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_64b_badSink(void **a1)
{
  free(*a1);
}

//----- (000000000040DB9E) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_64b_goodG2BSink(void **a1)
{
  free(*a1);
}

//----- (000000000040DBCB) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_int64_t_64b_goodB2GSink(__int64 a1)
{
  return *(_QWORD *)a1;
}

//----- (000000000040DBE8) ----------------------------------------------------
void *badSource_2()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (000000000040DC25) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_42_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = badSource_2();
  free(ptr);
}

//----- (000000000040DC53) ----------------------------------------------------
void *goodG2BSource_2()
{
  void *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x64uLL);
  if ( !v1 )
    exit(-1);
  return v1;
}

//----- (000000000040DC84) ----------------------------------------------------
void goodG2B_78()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = goodG2BSource_2();
  free(ptr);
}

//----- (000000000040DCB2) ----------------------------------------------------
void *goodB2GSource_2()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (000000000040DCEF) ----------------------------------------------------
void *goodB2G_73()
{
  return goodB2GSource_2();
}

//----- (000000000040DD11) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_42_good()
{
  goodB2G_73();
  goodG2B_78();
}

//----- (000000000040DD2B) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_66_bad()
{
  char v0; // [rsp+0h] [rbp-30h]
  void *v1; // [rsp+10h] [rbp-20h]
  void *ptr; // [rsp+28h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  v1 = ptr;
  CWE415_Double_Free__malloc_free_long_66b_badSink((__int64)&v0);
}

//----- (000000000040DD7C) ----------------------------------------------------
void goodG2B_79()
{
  char v0; // [rsp+0h] [rbp-30h]
  void *v1; // [rsp+10h] [rbp-20h]
  void *v2; // [rsp+28h] [rbp-8h]

  v2 = malloc(0x320uLL);
  if ( !v2 )
    exit(-1);
  v1 = v2;
  CWE415_Double_Free__malloc_free_long_66b_goodG2BSink((__int64)&v0);
}

//----- (000000000040DDC1) ----------------------------------------------------
__int64 goodB2G_74()
{
  char v1; // [rsp+0h] [rbp-30h]
  void *v2; // [rsp+10h] [rbp-20h]
  void *ptr; // [rsp+28h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  v2 = ptr;
  return CWE415_Double_Free__malloc_free_long_66b_goodB2GSink((__int64)&v1);
}

//----- (000000000040DE12) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_long_66_good()
{
  goodG2B_79();
  return goodB2G_74();
}

//----- (000000000040DE2C) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_32_bad()
{
  __int64 v0; // [rsp+8h] [rbp-28h]
  void *ptr; // [rsp+18h] [rbp-18h]
  void **v2; // [rsp+20h] [rbp-10h]
  __int64 *v3; // [rsp+28h] [rbp-8h]

  v3 = &v0;
  v2 = (void **)&v0;
  v0 = 0LL;
  ptr = 0LL;
  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  *v3 = (__int64)ptr;
  free(*v2);
}

//----- (000000000040DEA6) ----------------------------------------------------
void goodG2B_80()
{
  __int64 v0; // [rsp+8h] [rbp-28h]
  void *v1; // [rsp+18h] [rbp-18h]
  void **v2; // [rsp+20h] [rbp-10h]
  __int64 *v3; // [rsp+28h] [rbp-8h]

  v3 = &v0;
  v2 = (void **)&v0;
  v0 = 0LL;
  v1 = 0LL;
  v1 = malloc(0x190uLL);
  if ( !v1 )
    exit(-1);
  *v3 = (__int64)v1;
  free(*v2);
}

//----- (000000000040DF14) ----------------------------------------------------
__int64 goodB2G_75()
{
  __int64 v1; // [rsp+8h] [rbp-28h]
  void *ptr; // [rsp+18h] [rbp-18h]
  __int64 *v3; // [rsp+20h] [rbp-10h]
  __int64 *v4; // [rsp+28h] [rbp-8h]

  v4 = &v1;
  v3 = &v1;
  v1 = 0LL;
  ptr = 0LL;
  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  *v4 = (__int64)ptr;
  return *v3;
}

//----- (000000000040DF82) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int_32_good()
{
  goodG2B_80();
  return goodB2G_75();
}

//----- (000000000040DF9C) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_14_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( globalFive == 5 )
    free(ptr);
}
// 6280F0: using guessed type int globalFive;

//----- (000000000040DFFB) ----------------------------------------------------
int goodB2G1_44()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = globalFive;
  if ( globalFive != 5 )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280F0: using guessed type int globalFive;

//----- (000000000040E058) ----------------------------------------------------
void goodB2G2_44()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280F0: using guessed type int globalFive;

//----- (000000000040E0A0) ----------------------------------------------------
void goodG2B1_39()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  if ( globalFive == 5 )
    free(ptr);
}
// 6280F0: using guessed type int globalFive;

//----- (000000000040E0FF) ----------------------------------------------------
void goodG2B2_39()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( globalFive == 5 )
    free(ptr);
}
// 6280F0: using guessed type int globalFive;

//----- (000000000040E152) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_14_good()
{
  goodB2G1_44();
  goodB2G2_44();
  goodG2B1_39();
  goodG2B2_39();
}

//----- (000000000040E180) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_51b_badSink(void *a1)
{
  free(a1);
}

//----- (000000000040E19A) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_51b_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (000000000040E1B4) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_51b_goodB2GSink()
{
  ;
}

//----- (000000000040E1BE) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_65b_badSink(void *a1)
{
  free(a1);
}

//----- (000000000040E1D8) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_65b_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (000000000040E1F2) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_65b_goodB2GSink()
{
  ;
}

//----- (000000000040E1FC) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_22_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_char_22_badGlobal = 1;
  CWE415_Double_Free__malloc_free_char_22_badSink(ptr);
}
// 6281C0: using guessed type int CWE415_Double_Free__malloc_free_char_22_badGlobal;

//----- (000000000040E24F) ----------------------------------------------------
int goodB2G1_45()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_char_22_goodB2G1Global = 0;
  return CWE415_Double_Free__malloc_free_char_22_goodB2G1Sink();
}
// 6281C4: using guessed type int CWE415_Double_Free__malloc_free_char_22_goodB2G1Global;

//----- (000000000040E2A2) ----------------------------------------------------
void goodB2G2_45()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_char_22_goodB2G2Global = 1;
  CWE415_Double_Free__malloc_free_char_22_goodB2G2Sink();
}
// 6281C8: using guessed type int CWE415_Double_Free__malloc_free_char_22_goodB2G2Global;

//----- (000000000040E2F5) ----------------------------------------------------
void goodG2B_81()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_char_22_goodG2BGlobal = 1;
  CWE415_Double_Free__malloc_free_char_22_goodG2BSink(v0);
}
// 6281CC: using guessed type int CWE415_Double_Free__malloc_free_char_22_goodG2BGlobal;

//----- (000000000040E33C) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_22_good()
{
  goodB2G1_45();
  goodB2G2_45();
  goodG2B_81();
}

//----- (000000000040E360) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_67b_badSink(void *a1)
{
  free(a1);
}

//----- (000000000040E382) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_67b_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (000000000040E3A4) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_int64_t_67b_goodB2GSink(__int64 a1)
{
  return a1;
}

//----- (000000000040E3B6) ----------------------------------------------------
void __fastcall badSink_11(void *a1)
{
  if ( badStatic_1 )
    free(a1);
}
// 6281D0: using guessed type int badStatic_1;

//----- (000000000040E3DA) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_21_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  badStatic_1 = 1;
  badSink_11(ptr);
}
// 6281D0: using guessed type int badStatic_1;

//----- (000000000040E42D) ----------------------------------------------------
int goodB2G1Sink_1()
{
  int result; // eax

  result = goodB2G1Static_1;
  if ( goodB2G1Static_1 )
    result = printLine("Benign, fixed string");
  return result;
}
// 6281D4: using guessed type int goodB2G1Static_1;

//----- (000000000040E44F) ----------------------------------------------------
int goodB2G1_46()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  goodB2G1Static_1 = 0;
  return goodB2G1Sink_1();
}
// 6281D4: using guessed type int goodB2G1Static_1;

//----- (000000000040E4A2) ----------------------------------------------------
void goodB2G2Sink_1()
{
  ;
}

//----- (000000000040E4AC) ----------------------------------------------------
void goodB2G2_46()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  goodB2G2Static_1 = 1;
  goodB2G2Sink_1();
}
// 6281D8: using guessed type int goodB2G2Static_1;

//----- (000000000040E4FF) ----------------------------------------------------
void __fastcall goodG2BSink_11(void *a1)
{
  if ( goodG2BStatic_1 )
    free(a1);
}
// 6281DC: using guessed type int goodG2BStatic_1;

//----- (000000000040E523) ----------------------------------------------------
void goodG2B_82()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x190uLL);
  if ( !v0 )
    exit(-1);
  goodG2BStatic_1 = 1;
  goodG2BSink_11(v0);
}
// 6281DC: using guessed type int goodG2BStatic_1;

//----- (000000000040E56A) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_21_good()
{
  goodB2G1_46();
  goodB2G2_46();
  goodG2B_82();
}

//----- (000000000040E58E) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_03_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000040E5D7) ----------------------------------------------------
void goodB2G1_47()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040E614) ----------------------------------------------------
void goodB2G2_47()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040E651) ----------------------------------------------------
void goodG2B1_40()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040E68E) ----------------------------------------------------
void goodG2B2_40()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040E6CB) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_03_good()
{
  goodB2G1_47();
  goodB2G2_47();
  goodG2B1_40();
  goodG2B2_40();
}

//----- (000000000040E6F9) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_22_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_struct_22_badGlobal = 1;
  CWE415_Double_Free__malloc_free_struct_22_badSink(ptr);
}
// 6281E0: using guessed type int CWE415_Double_Free__malloc_free_struct_22_badGlobal;

//----- (000000000040E74C) ----------------------------------------------------
int goodB2G1_48()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_struct_22_goodB2G1Global = 0;
  return CWE415_Double_Free__malloc_free_struct_22_goodB2G1Sink();
}
// 6281E4: using guessed type int CWE415_Double_Free__malloc_free_struct_22_goodB2G1Global;

//----- (000000000040E79F) ----------------------------------------------------
void goodB2G2_48()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_struct_22_goodB2G2Global = 1;
  CWE415_Double_Free__malloc_free_struct_22_goodB2G2Sink();
}
// 6281E8: using guessed type int CWE415_Double_Free__malloc_free_struct_22_goodB2G2Global;

//----- (000000000040E7F2) ----------------------------------------------------
void goodG2B_83()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_struct_22_goodG2BGlobal = 1;
  CWE415_Double_Free__malloc_free_struct_22_goodG2BSink(v0);
}
// 6281EC: using guessed type int CWE415_Double_Free__malloc_free_struct_22_goodG2BGlobal;

//----- (000000000040E839) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_22_good()
{
  goodB2G1_48();
  goodB2G2_48();
  goodG2B_83();
}

//----- (000000000040E85D) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_63_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int_63b_badSink(&ptr);
}

//----- (000000000040E8A8) ----------------------------------------------------
void goodG2B_84()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x190uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int_63b_goodG2BSink(&v0);
}

//----- (000000000040E8E7) ----------------------------------------------------
__int64 goodB2G_76()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return CWE415_Double_Free__malloc_free_int_63b_goodB2GSink((__int64)&ptr);
}

//----- (000000000040E932) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int_63_good()
{
  goodG2B_84();
  return goodB2G_76();
}

//----- (000000000040E94C) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_05_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticTrue_2 )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( staticTrue_2 )
    free(ptr);
}
// 6280D8: using guessed type int staticTrue_2;

//----- (000000000040E9A9) ----------------------------------------------------
int goodB2G1_49()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticTrue_2 )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = staticFalse_2;
  if ( staticFalse_2 )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280D8: using guessed type int staticTrue_2;
// 6281F0: using guessed type int staticFalse_2;

//----- (000000000040EA04) ----------------------------------------------------
void goodB2G2_49()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticTrue_2 )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280D8: using guessed type int staticTrue_2;

//----- (000000000040EA4B) ----------------------------------------------------
void goodG2B1_41()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFalse_2 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( staticTrue_2 )
    free(ptr);
}
// 6280D8: using guessed type int staticTrue_2;
// 6281F0: using guessed type int staticFalse_2;

//----- (000000000040EAA8) ----------------------------------------------------
void goodG2B2_41()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticTrue_2 )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( staticTrue_2 )
    free(ptr);
}
// 6280D8: using guessed type int staticTrue_2;

//----- (000000000040EAF9) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_05_good()
{
  goodB2G1_49();
  goodB2G2_49();
  goodG2B1_41();
  goodG2B2_41();
}

//----- (000000000040EB27) ----------------------------------------------------
void __fastcall badSink_12(void *a1)
{
  free(a1);
}

//----- (000000000040EB41) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_41_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  badSink_12(ptr);
}

//----- (000000000040EB8A) ----------------------------------------------------
void __fastcall goodG2BSink_12(void *a1)
{
  free(a1);
}

//----- (000000000040EBA4) ----------------------------------------------------
void goodG2B_85()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  goodG2BSink_12(v0);
}

//----- (000000000040EBE1) ----------------------------------------------------
void goodB2GSink_9()
{
  ;
}

//----- (000000000040EBEB) ----------------------------------------------------
void goodB2G_77()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  goodB2GSink_9();
}

//----- (000000000040EC34) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_41_good()
{
  goodB2G_77();
  goodG2B_85();
}

//----- (000000000040EC4E) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_18_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000040EC99) ----------------------------------------------------
void goodB2G_78()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040ECD8) ----------------------------------------------------
void goodG2B_86()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040ED17) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_18_good()
{
  goodB2G_78();
  goodG2B_86();
}

//----- (000000000040ED31) ----------------------------------------------------
__int64 staticReturnsTrue_3()
{
  return 1LL;
}

//----- (000000000040ED3C) ----------------------------------------------------
__int64 staticReturnsFalse_3()
{
  return 0LL;
}

//----- (000000000040ED47) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_08_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsTrue_3() )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( (unsigned int)staticReturnsTrue_3() )
    free(ptr);
}

//----- (000000000040EDAC) ----------------------------------------------------
int goodB2G1_50()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)staticReturnsTrue_3() )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = staticReturnsFalse_3();
  if ( result )
    result = printLine("Benign, fixed string");
  return result;
}

//----- (000000000040EE0F) ----------------------------------------------------
__int64 goodB2G2_50()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)staticReturnsTrue_3() )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  return staticReturnsTrue_3();
}

//----- (000000000040EE64) ----------------------------------------------------
void goodG2B1_42()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsFalse_3() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)staticReturnsTrue_3() )
    free(ptr);
}

//----- (000000000040EEC9) ----------------------------------------------------
void goodG2B2_42()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsTrue_3() )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)staticReturnsTrue_3() )
    free(ptr);
}

//----- (000000000040EF22) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_08_good()
{
  goodB2G1_50();
  goodB2G2_50();
  goodG2B1_42();
  goodG2B2_42();
}

//----- (000000000040EF50) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_54_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_long_54b_badSink(ptr);
}

//----- (000000000040EF99) ----------------------------------------------------
void goodG2B_87()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_long_54b_goodG2BSink(v0);
}

//----- (000000000040EFD6) ----------------------------------------------------
void goodB2G_79()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_long_54b_goodB2GSink();
}

//----- (000000000040F01F) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_54_good()
{
  goodG2B_87();
  goodB2G_79();
}

//----- (000000000040F039) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_66_bad()
{
  char v0; // [rsp+0h] [rbp-30h]
  void *v1; // [rsp+10h] [rbp-20h]
  void *ptr; // [rsp+28h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  v1 = ptr;
  CWE415_Double_Free__malloc_free_int_66b_badSink((__int64)&v0);
}

//----- (000000000040F08A) ----------------------------------------------------
void goodG2B_88()
{
  char v0; // [rsp+0h] [rbp-30h]
  void *v1; // [rsp+10h] [rbp-20h]
  void *v2; // [rsp+28h] [rbp-8h]

  v2 = malloc(0x190uLL);
  if ( !v2 )
    exit(-1);
  v1 = v2;
  CWE415_Double_Free__malloc_free_int_66b_goodG2BSink((__int64)&v0);
}

//----- (000000000040F0CF) ----------------------------------------------------
__int64 goodB2G_80()
{
  char v1; // [rsp+0h] [rbp-30h]
  void *v2; // [rsp+10h] [rbp-20h]
  void *ptr; // [rsp+28h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  v2 = ptr;
  return CWE415_Double_Free__malloc_free_int_66b_goodB2GSink((__int64)&v1);
}

//----- (000000000040F120) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int_66_good()
{
  goodG2B_88();
  return goodB2G_80();
}

//----- (000000000040F13A) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_52c_badSink(void *a1)
{
  free(a1);
}

//----- (000000000040F154) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_52c_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (000000000040F16E) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_52c_goodB2GSink()
{
  ;
}

//----- (000000000040F178) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_04_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000040F1D3) ----------------------------------------------------
__int64 goodB2G1_51()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return 0LL;
}

//----- (000000000040F22C) ----------------------------------------------------
void goodB2G2_51()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040F272) ----------------------------------------------------
void goodG2B1_43()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040F2CD) ----------------------------------------------------
void goodG2B2_43()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000040F31C) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_04_good()
{
  goodB2G1_51();
  goodB2G2_51();
  goodG2B1_43();
  goodG2B2_43();
}

//----- (000000000040F34A) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_14_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( globalFive == 5 )
    free(ptr);
}
// 6280F0: using guessed type int globalFive;

//----- (000000000040F3A9) ----------------------------------------------------
int goodB2G1_52()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalFive == 5 )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = globalFive;
  if ( globalFive != 5 )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280F0: using guessed type int globalFive;

//----- (000000000040F406) ----------------------------------------------------
void goodB2G2_52()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalFive == 5 )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280F0: using guessed type int globalFive;

//----- (000000000040F44E) ----------------------------------------------------
void goodG2B1_44()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  if ( globalFive == 5 )
    free(ptr);
}
// 6280F0: using guessed type int globalFive;

//----- (000000000040F4AD) ----------------------------------------------------
void goodG2B2_44()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( globalFive == 5 )
    free(ptr);
}
// 6280F0: using guessed type int globalFive;

//----- (000000000040F500) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_14_good()
{
  goodB2G1_52();
  goodB2G2_52();
  goodG2B1_44();
  goodG2B2_44();
}

//----- (000000000040F52E) ----------------------------------------------------
void badSink_13()
{
  free((void *)CWE415_Double_Free__malloc_free_struct_45_badData);
}
// 6281F8: using guessed type __int64 CWE415_Double_Free__malloc_free_struct_45_badData;

//----- (000000000040F54F) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_45_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_struct_45_badData = (__int64)ptr;
  badSink_13();
}
// 6281F8: using guessed type __int64 CWE415_Double_Free__malloc_free_struct_45_badData;

//----- (000000000040F5A1) ----------------------------------------------------
void goodG2BSink_13()
{
  free((void *)CWE415_Double_Free__malloc_free_struct_45_goodG2BData);
}
// 628200: using guessed type __int64 CWE415_Double_Free__malloc_free_struct_45_goodG2BData;

//----- (000000000040F5C2) ----------------------------------------------------
void goodG2B_89()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_struct_45_goodG2BData = (__int64)v0;
  goodG2BSink_13();
}
// 628200: using guessed type __int64 CWE415_Double_Free__malloc_free_struct_45_goodG2BData;

//----- (000000000040F608) ----------------------------------------------------
__int64 goodB2GSink_10()
{
  return CWE415_Double_Free__malloc_free_struct_45_goodB2GData;
}
// 628208: using guessed type __int64 CWE415_Double_Free__malloc_free_struct_45_goodB2GData;

//----- (000000000040F619) ----------------------------------------------------
__int64 goodB2G_81()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_struct_45_goodB2GData = (__int64)ptr;
  return goodB2GSink_10();
}
// 628208: using guessed type __int64 CWE415_Double_Free__malloc_free_struct_45_goodB2GData;

//----- (000000000040F66B) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_struct_45_good()
{
  goodG2B_89();
  return goodB2G_81();
}

//----- (000000000040F685) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_68_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_char_68_badData = (__int64)ptr;
  CWE415_Double_Free__malloc_free_char_68b_badSink();
}
// 628290: using guessed type __int64 CWE415_Double_Free__malloc_free_char_68_badData;

//----- (000000000040F6D7) ----------------------------------------------------
void goodG2B_90()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_char_68_goodG2BData = (__int64)v0;
  CWE415_Double_Free__malloc_free_char_68b_goodG2BSink();
}
// 628298: using guessed type __int64 CWE415_Double_Free__malloc_free_char_68_goodG2BData;

//----- (000000000040F71D) ----------------------------------------------------
__int64 goodB2G_82()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_char_68_goodB2GData = (__int64)ptr;
  return CWE415_Double_Free__malloc_free_char_68b_goodB2GSink();
}
// 6282A0: using guessed type __int64 CWE415_Double_Free__malloc_free_char_68_goodB2GData;

//----- (000000000040F76F) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_char_68_good()
{
  goodG2B_90();
  return goodB2G_82();
}

//----- (000000000040F789) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_52b_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int_52c_badSink(a1);
}

//----- (000000000040F7A3) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_52b_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int_52c_goodG2BSink(a1);
}

//----- (000000000040F7BD) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_52b_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_int_52c_goodB2GSink();
}

//----- (000000000040F7D7) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_31_bad()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000040F830) ----------------------------------------------------
void goodG2B_91()
{
  void *v0; // [rsp+18h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  free(v0);
}

//----- (000000000040F87D) ----------------------------------------------------
void *goodB2G_83()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (000000000040F8CA) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_long_31_good()
{
  goodG2B_91();
  return goodB2G_83();
}

//----- (000000000040F8E4) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_53b_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_char_53c_badSink(a1);
}

//----- (000000000040F8FE) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_53b_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_char_53c_goodG2BSink(a1);
}

//----- (000000000040F918) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_53b_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_char_53c_goodB2GSink();
}

//----- (000000000040F932) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_66b_badSink(__int64 a1)
{
  free(*(void **)(a1 + 16));
}

//----- (000000000040F958) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_66b_goodG2BSink(__int64 a1)
{
  free(*(void **)(a1 + 16));
}

//----- (000000000040F97E) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_char_66b_goodB2GSink(__int64 a1)
{
  return *(_QWORD *)(a1 + 16);
}

//----- (000000000040F994) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_12_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  else
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    free(ptr);
}

//----- (000000000040FA1A) ----------------------------------------------------
__int64 goodB2G_84()
{
  void *ptr; // [rsp+8h] [rbp-8h]
  void *ptra; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  else
  {
    ptra = malloc(0x190uLL);
    if ( !ptra )
      exit(-1);
    free(ptra);
  }
  return globalReturnsTrueOrFalse();
}

//----- (000000000040FA9C) ----------------------------------------------------
void goodG2B_92()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  globalReturnsTrueOrFalse();
  free(ptr);
}

//----- (000000000040FB22) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_12_good()
{
  goodB2G_84();
  goodG2B_92();
}

//----- (000000000040FB3C) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_67_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int64_t_67b_badSink(ptr);
}

//----- (000000000040FB8D) ----------------------------------------------------
void goodG2B_93()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int64_t_67b_goodG2BSink(v0);
}

//----- (000000000040FBD2) ----------------------------------------------------
__int64 goodB2G_85()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return CWE415_Double_Free__malloc_free_int64_t_67b_goodB2GSink((__int64)ptr);
}

//----- (000000000040FC23) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int64_t_67_good()
{
  goodG2B_93();
  return goodB2G_85();
}

//----- (000000000040FC3D) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_53d_badSink(void *a1)
{
  free(a1);
}

//----- (000000000040FC57) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_53d_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (000000000040FC71) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_53d_goodB2GSink()
{
  ;
}

//----- (000000000040FC7B) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_22_badSink(void *a1)
{
  if ( CWE415_Double_Free__malloc_free_int64_t_22_badGlobal )
    free(a1);
}
// 6281B0: using guessed type int CWE415_Double_Free__malloc_free_int64_t_22_badGlobal;

//----- (000000000040FC9F) ----------------------------------------------------
int CWE415_Double_Free__malloc_free_int64_t_22_goodB2G1Sink()
{
  int result; // eax

  result = CWE415_Double_Free__malloc_free_int64_t_22_goodB2G1Global;
  if ( CWE415_Double_Free__malloc_free_int64_t_22_goodB2G1Global )
    result = printLine("Benign, fixed string");
  return result;
}
// 6281B4: using guessed type int CWE415_Double_Free__malloc_free_int64_t_22_goodB2G1Global;

//----- (000000000040FCC1) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_22_goodB2G2Sink()
{
  ;
}

//----- (000000000040FCCB) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_22_goodG2BSink(void *a1)
{
  if ( CWE415_Double_Free__malloc_free_int64_t_22_goodG2BGlobal )
    free(a1);
}
// 6281BC: using guessed type int CWE415_Double_Free__malloc_free_int64_t_22_goodG2BGlobal;

//----- (000000000040FCEF) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_53_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_char_53b_badSink(ptr);
}

//----- (000000000040FD38) ----------------------------------------------------
void goodG2B_94()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_char_53b_goodG2BSink(v0);
}

//----- (000000000040FD75) ----------------------------------------------------
void goodB2G_86()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_char_53b_goodB2GSink();
}

//----- (000000000040FDBE) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_53_good()
{
  goodG2B_94();
  goodB2G_86();
}

//----- (000000000040FDD8) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_53c_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_long_53d_badSink(a1);
}

//----- (000000000040FDF2) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_53c_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_long_53d_goodG2BSink(a1);
}

//----- (000000000040FE0C) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_53c_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_long_53d_goodB2GSink();
}

//----- (000000000040FE26) ----------------------------------------------------
void __fastcall badSink_14(void *a1)
{
  free(a1);
}

//----- (000000000040FE40) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int_44_bad()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))badSink_14)(ptr);
}

//----- (000000000040FE92) ----------------------------------------------------
void __fastcall goodG2BSink_14(void *a1)
{
  free(a1);
}

//----- (000000000040FEAC) ----------------------------------------------------
__int64 goodG2B_95()
{
  void *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x190uLL);
  if ( !v1 )
    exit(-1);
  return ((__int64 (__fastcall *)(void *))goodG2BSink_14)(v1);
}

//----- (000000000040FEF2) ----------------------------------------------------
void goodB2GSink_11()
{
  ;
}

//----- (000000000040FEFC) ----------------------------------------------------
__int64 goodB2G_87()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))goodB2GSink_11)(ptr);
}

//----- (000000000040FF4E) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int_44_good()
{
  goodG2B_95();
  return goodB2G_87();
}

//----- (000000000040FF68) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_11_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( (unsigned int)globalReturnsTrue() )
    free(ptr);
}

//----- (000000000040FFCD) ----------------------------------------------------
int goodB2G1_53()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = globalReturnsFalse();
  if ( result )
    result = printLine("Benign, fixed string");
  return result;
}

//----- (0000000000410030) ----------------------------------------------------
__int64 goodB2G2_53()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  return globalReturnsTrue();
}

//----- (0000000000410085) ----------------------------------------------------
void goodG2B1_45()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)globalReturnsTrue() )
    free(ptr);
}

//----- (00000000004100EA) ----------------------------------------------------
void goodG2B2_45()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)globalReturnsTrue() )
    free(ptr);
}

//----- (0000000000410143) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_11_good()
{
  goodB2G1_53();
  goodB2G2_53();
  goodG2B1_45();
  goodG2B2_45();
}

//----- (0000000000410171) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_02_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (00000000004101BA) ----------------------------------------------------
void goodB2G1_54()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004101F7) ----------------------------------------------------
void goodB2G2_54()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000410234) ----------------------------------------------------
void goodG2B1_46()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000410271) ----------------------------------------------------
void goodG2B2_46()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004102AE) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_02_good()
{
  goodB2G1_54();
  goodB2G2_54();
  goodG2B1_46();
  goodG2B2_46();
}

//----- (00000000004102DC) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_54e_badSink(void *a1)
{
  free(a1);
}

//----- (00000000004102F6) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_54e_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (0000000000410310) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_54e_goodB2GSink()
{
  ;
}

//----- (000000000041031A) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_51_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_struct_51b_badSink(ptr);
}

//----- (0000000000410363) ----------------------------------------------------
void goodG2B_96()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_struct_51b_goodG2BSink(v0);
}

//----- (00000000004103A0) ----------------------------------------------------
void goodB2G_88()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_struct_51b_goodB2GSink();
}

//----- (00000000004103E9) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_51_good()
{
  goodG2B_96();
  goodB2G_88();
}

//----- (0000000000410403) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_03_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000041044C) ----------------------------------------------------
void goodB2G1_55()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000410489) ----------------------------------------------------
void goodB2G2_55()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004104C6) ----------------------------------------------------
void goodG2B1_47()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000410503) ----------------------------------------------------
void goodG2B2_47()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000410540) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_03_good()
{
  goodB2G1_55();
  goodB2G2_55();
  goodG2B1_47();
  goodG2B2_47();
}

//----- (000000000041056E) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_long_65_bad()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))CWE415_Double_Free__malloc_free_long_65b_badSink)(ptr);
}

//----- (00000000004105C0) ----------------------------------------------------
__int64 goodG2B_97()
{
  void *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x320uLL);
  if ( !v1 )
    exit(-1);
  return ((__int64 (__fastcall *)(void *))CWE415_Double_Free__malloc_free_long_65b_goodG2BSink)(v1);
}

//----- (0000000000410606) ----------------------------------------------------
__int64 goodB2G_89()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))CWE415_Double_Free__malloc_free_long_65b_goodB2GSink)(ptr);
}

//----- (0000000000410658) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_long_65_good()
{
  goodG2B_97();
  return goodB2G_89();
}

//----- (0000000000410672) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_63_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_struct_63b_badSink(&ptr);
}

//----- (00000000004106BD) ----------------------------------------------------
void goodG2B_98()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_struct_63b_goodG2BSink(&v0);
}

//----- (00000000004106FC) ----------------------------------------------------
__int64 goodB2G_90()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return CWE415_Double_Free__malloc_free_struct_63b_goodB2GSink((__int64)&ptr);
}

//----- (0000000000410747) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_struct_63_good()
{
  goodG2B_98();
  return goodB2G_90();
}

//----- (0000000000410761) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_53d_badSink(void *a1)
{
  free(a1);
}

//----- (000000000041077B) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_53d_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (0000000000410795) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_53d_goodB2GSink()
{
  ;
}

//----- (000000000041079F) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_15_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (00000000004107EA) ----------------------------------------------------
void goodB2G1_56()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000410829) ----------------------------------------------------
void goodB2G2_56()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000410868) ----------------------------------------------------
void goodG2B1_48()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004108A7) ----------------------------------------------------
void goodG2B2_48()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004108E6) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_15_good()
{
  goodB2G1_56();
  goodB2G2_56();
  goodG2B1_48();
  goodG2B2_48();
}

//----- (0000000000410914) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_07_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_1 == 5 )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( staticFive_1 == 5 )
    free(ptr);
}
// 6280DC: using guessed type int staticFive_1;

//----- (0000000000410973) ----------------------------------------------------
int goodB2G1_57()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticFive_1 == 5 )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = staticFive_1;
  if ( staticFive_1 != 5 )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280DC: using guessed type int staticFive_1;

//----- (00000000004109D0) ----------------------------------------------------
void goodB2G2_57()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticFive_1 == 5 )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280DC: using guessed type int staticFive_1;

//----- (0000000000410A18) ----------------------------------------------------
void goodG2B1_49()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_1 == 5 )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  if ( staticFive_1 == 5 )
    free(ptr);
}
// 6280DC: using guessed type int staticFive_1;

//----- (0000000000410A77) ----------------------------------------------------
void goodG2B2_49()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_1 == 5 )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( staticFive_1 == 5 )
    free(ptr);
}
// 6280DC: using guessed type int staticFive_1;

//----- (0000000000410ACA) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_07_good()
{
  goodB2G1_57();
  goodB2G2_57();
  goodG2B1_49();
  goodG2B2_49();
}

//----- (0000000000410AF8) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_10_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalTrue )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( globalTrue )
    free(ptr);
}
// 6280EC: using guessed type int globalTrue;

//----- (0000000000410B55) ----------------------------------------------------
int goodB2G1_58()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalTrue )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = globalFalse;
  if ( globalFalse )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280EC: using guessed type int globalTrue;
// 628238: using guessed type int globalFalse;

//----- (0000000000410BB0) ----------------------------------------------------
void goodB2G2_58()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalTrue )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280EC: using guessed type int globalTrue;

//----- (0000000000410BF7) ----------------------------------------------------
void goodG2B1_50()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( globalTrue )
    free(ptr);
}
// 6280EC: using guessed type int globalTrue;
// 628238: using guessed type int globalFalse;

//----- (0000000000410C54) ----------------------------------------------------
void goodG2B2_50()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalTrue )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( globalTrue )
    free(ptr);
}
// 6280EC: using guessed type int globalTrue;

//----- (0000000000410CA5) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_10_good()
{
  goodB2G1_58();
  goodB2G2_58();
  goodG2B1_50();
  goodG2B2_50();
}

//----- (0000000000410CD3) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_18_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000410D1E) ----------------------------------------------------
void goodB2G_91()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000410D5D) ----------------------------------------------------
void goodG2B_99()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000410D9C) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_18_good()
{
  goodB2G_91();
  goodG2B_99();
}

//----- (0000000000410DB6) ----------------------------------------------------
void *badSource_3()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (0000000000410DF3) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_42_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = badSource_3();
  free(ptr);
}

//----- (0000000000410E21) ----------------------------------------------------
void *goodG2BSource_3()
{
  void *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x320uLL);
  if ( !v1 )
    exit(-1);
  return v1;
}

//----- (0000000000410E52) ----------------------------------------------------
void goodG2B_100()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = goodG2BSource_3();
  free(ptr);
}

//----- (0000000000410E80) ----------------------------------------------------
void *goodB2GSource_3()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (0000000000410EBD) ----------------------------------------------------
void *goodB2G_92()
{
  return goodB2GSource_3();
}

//----- (0000000000410EDF) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_42_good()
{
  goodB2G_92();
  goodG2B_100();
}

//----- (0000000000410EF9) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_54c_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int_54d_badSink(a1);
}

//----- (0000000000410F13) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_54c_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_int_54d_goodG2BSink(a1);
}

//----- (0000000000410F2D) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_54c_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_int_54d_goodB2GSink();
}

//----- (0000000000410F47) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_13_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( GLOBAL_CONST_FIVE == 5 )
    free(ptr);
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000410FA6) ----------------------------------------------------
int goodB2G1_59()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE != 5 )
    result = printLine("Benign, fixed string");
  return result;
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000411003) ----------------------------------------------------
void goodB2G2_59()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041104B) ----------------------------------------------------
void goodG2B1_51()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  if ( GLOBAL_CONST_FIVE == 5 )
    free(ptr);
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004110AA) ----------------------------------------------------
void goodG2B2_51()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( GLOBAL_CONST_FIVE == 5 )
    free(ptr);
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004110FD) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_13_good()
{
  goodB2G1_59();
  goodB2G2_59();
  goodG2B1_51();
  goodG2B2_51();
}

//----- (000000000041112B) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_01_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000411174) ----------------------------------------------------
void goodG2B_101()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004111B1) ----------------------------------------------------
void goodB2G_93()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004111EE) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_01_good()
{
  goodG2B_101();
  goodB2G_93();
}

//----- (0000000000411208) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_53d_badSink(void *a1)
{
  free(a1);
}

//----- (0000000000411222) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int_53d_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (000000000041123C) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_53d_goodB2GSink()
{
  ;
}

//----- (0000000000411246) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_12_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    free(ptr);
}

//----- (00000000004112CC) ----------------------------------------------------
__int64 goodB2G_94()
{
  void *ptr; // [rsp+8h] [rbp-8h]
  void *ptra; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  else
  {
    ptra = malloc(0x320uLL);
    if ( !ptra )
      exit(-1);
    free(ptra);
  }
  return globalReturnsTrueOrFalse();
}

//----- (000000000041134E) ----------------------------------------------------
void goodG2B_102()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  globalReturnsTrueOrFalse();
  free(ptr);
}

//----- (00000000004113D4) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_12_good()
{
  goodB2G_94();
  goodG2B_102();
}

//----- (00000000004113EE) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_13_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( GLOBAL_CONST_FIVE == 5 )
    free(ptr);
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041144D) ----------------------------------------------------
int goodB2G1_60()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE != 5 )
    result = printLine("Benign, fixed string");
  return result;
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004114AA) ----------------------------------------------------
void goodB2G2_60()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004114F2) ----------------------------------------------------
void goodG2B1_52()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  if ( GLOBAL_CONST_FIVE == 5 )
    free(ptr);
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000411551) ----------------------------------------------------
void goodG2B2_52()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( GLOBAL_CONST_FIVE == 5 )
    free(ptr);
}
// 41AA8C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004115A4) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_13_good()
{
  goodB2G1_60();
  goodB2G2_60();
  goodG2B1_52();
  goodG2B2_52();
}

//----- (00000000004115D2) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_61_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = CWE415_Double_Free__malloc_free_int_61b_badSource();
  free(ptr);
}

//----- (0000000000411600) ----------------------------------------------------
void goodG2B_103()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = CWE415_Double_Free__malloc_free_int_61b_goodG2BSource();
  free(ptr);
}

//----- (000000000041162E) ----------------------------------------------------
void *goodB2G_95()
{
  return CWE415_Double_Free__malloc_free_int_61b_goodB2GSource();
}

//----- (0000000000411650) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_int_61_good()
{
  goodG2B_103();
  return goodB2G_95();
}

//----- (000000000041166A) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_63b_badSink(void **a1)
{
  free(*a1);
}

//----- (000000000041168F) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_int64_t_63b_goodG2BSink(void **a1)
{
  free(*a1);
}

//----- (00000000004116B4) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_int64_t_63b_goodB2GSink(__int64 a1)
{
  return *(_QWORD *)a1;
}

//----- (00000000004116C9) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_52_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_char_52b_badSink(ptr);
}

//----- (0000000000411712) ----------------------------------------------------
void goodG2B_104()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_char_52b_goodG2BSink(v0);
}

//----- (000000000041174F) ----------------------------------------------------
void goodB2G_96()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_char_52b_goodB2GSink();
}

//----- (0000000000411798) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_52_good()
{
  goodG2B_104();
  goodB2G_96();
}

//----- (00000000004117B2) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_05_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticTrue_3 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( staticTrue_3 )
    free(ptr);
}
// 6280E0: using guessed type int staticTrue_3;

//----- (000000000041180F) ----------------------------------------------------
int goodB2G1_61()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticTrue_3 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = staticFalse_3;
  if ( staticFalse_3 )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280E0: using guessed type int staticTrue_3;
// 628210: using guessed type int staticFalse_3;

//----- (000000000041186A) ----------------------------------------------------
void goodB2G2_61()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticTrue_3 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280E0: using guessed type int staticTrue_3;

//----- (00000000004118B1) ----------------------------------------------------
void goodG2B1_53()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFalse_3 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( staticTrue_3 )
    free(ptr);
}
// 6280E0: using guessed type int staticTrue_3;
// 628210: using guessed type int staticFalse_3;

//----- (000000000041190E) ----------------------------------------------------
void goodG2B2_53()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticTrue_3 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( staticTrue_3 )
    free(ptr);
}
// 6280E0: using guessed type int staticTrue_3;

//----- (000000000041195F) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_05_good()
{
  goodB2G1_61();
  goodB2G2_61();
  goodG2B1_53();
  goodG2B2_53();
}

//----- (000000000041198D) ----------------------------------------------------
void __fastcall badSink_15(void *a1)
{
  free(a1);
}

//----- (00000000004119A7) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_41_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  badSink_15(ptr);
}

//----- (00000000004119F0) ----------------------------------------------------
void __fastcall goodG2BSink_15(void *a1)
{
  free(a1);
}

//----- (0000000000411A0A) ----------------------------------------------------
void goodG2B_105()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  goodG2BSink_15(v0);
}

//----- (0000000000411A47) ----------------------------------------------------
void goodB2GSink_12()
{
  ;
}

//----- (0000000000411A51) ----------------------------------------------------
void goodB2G_97()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  goodB2GSink_12();
}

//----- (0000000000411A9A) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_41_good()
{
  goodB2G_97();
  goodG2B_105();
}

//----- (0000000000411AB4) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_17_bad()
{
  void *ptr; // [rsp+0h] [rbp-10h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  ptr = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  for ( j = 0; j <= 0; ++j )
    free(ptr);
}

//----- (0000000000411B23) ----------------------------------------------------
void goodB2G_98()
{
  void *ptr; // [rsp+0h] [rbp-10h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; i <= 0; ++i )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  for ( j = 0; j <= 0; ++j )
    ;
}

//----- (0000000000411B86) ----------------------------------------------------
void goodG2B_106()
{
  void *ptr; // [rsp+0h] [rbp-10h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  ptr = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  for ( j = 0; j <= 0; ++j )
    free(ptr);
}

//----- (0000000000411BE9) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_17_good()
{
  goodB2G_98();
  goodG2B_106();
}

//----- (0000000000411C03) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_16_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000411C4E) ----------------------------------------------------
void goodB2G_99()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000411C8D) ----------------------------------------------------
void goodG2B_107()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000411CCC) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_16_good()
{
  goodB2G_99();
  goodG2B_107();
}

//----- (0000000000411CE6) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_52c_badSink(void *a1)
{
  free(a1);
}

//----- (0000000000411D00) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_52c_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (0000000000411D1A) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_52c_goodB2GSink()
{
  ;
}

//----- (0000000000411D24) ----------------------------------------------------
void __fastcall badSink_16(void *a1)
{
  free(a1);
}

//----- (0000000000411D3E) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_struct_44_bad()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))badSink_16)(ptr);
}

//----- (0000000000411D90) ----------------------------------------------------
void __fastcall goodG2BSink_16(void *a1)
{
  free(a1);
}

//----- (0000000000411DAA) ----------------------------------------------------
__int64 goodG2B_108()
{
  void *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x320uLL);
  if ( !v1 )
    exit(-1);
  return ((__int64 (__fastcall *)(void *))goodG2BSink_16)(v1);
}

//----- (0000000000411DF0) ----------------------------------------------------
void goodB2GSink_13()
{
  ;
}

//----- (0000000000411DFA) ----------------------------------------------------
__int64 goodB2G_100()
{
  void *ptr; // [rsp+0h] [rbp-10h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ((__int64 (__fastcall *)(void *))goodB2GSink_13)(ptr);
}

//----- (0000000000411E4C) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_struct_44_good()
{
  goodG2B_108();
  return goodB2G_100();
}

//----- (0000000000411E66) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_07_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_2 == 5 )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( staticFive_2 == 5 )
    free(ptr);
}
// 6280E4: using guessed type int staticFive_2;

//----- (0000000000411EC5) ----------------------------------------------------
int goodB2G1_62()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticFive_2 == 5 )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = staticFive_2;
  if ( staticFive_2 != 5 )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280E4: using guessed type int staticFive_2;

//----- (0000000000411F22) ----------------------------------------------------
void goodB2G2_62()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticFive_2 == 5 )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280E4: using guessed type int staticFive_2;

//----- (0000000000411F6A) ----------------------------------------------------
void goodG2B1_54()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_2 == 5 )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  if ( staticFive_2 == 5 )
    free(ptr);
}
// 6280E4: using guessed type int staticFive_2;

//----- (0000000000411FC9) ----------------------------------------------------
void goodG2B2_54()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_2 == 5 )
  {
    ptr = malloc(0x190uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( staticFive_2 == 5 )
    free(ptr);
}
// 6280E4: using guessed type int staticFive_2;

//----- (000000000041201C) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_07_good()
{
  goodB2G1_62();
  goodB2G2_62();
  goodG2B1_54();
  goodG2B2_54();
}

//----- (000000000041204A) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_11_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( (unsigned int)globalReturnsTrue() )
    free(ptr);
}

//----- (00000000004120AF) ----------------------------------------------------
int goodB2G1_63()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = globalReturnsFalse();
  if ( result )
    result = printLine("Benign, fixed string");
  return result;
}

//----- (0000000000412112) ----------------------------------------------------
__int64 goodB2G2_63()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  return globalReturnsTrue();
}

//----- (0000000000412167) ----------------------------------------------------
void goodG2B1_55()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)globalReturnsTrue() )
    free(ptr);
}

//----- (00000000004121CC) ----------------------------------------------------
void goodG2B2_55()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)globalReturnsTrue() )
    free(ptr);
}

//----- (0000000000412225) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_11_good()
{
  goodB2G1_63();
  goodB2G2_63();
  goodG2B1_55();
  goodG2B2_55();
}

//----- (0000000000412253) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_02_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000041229C) ----------------------------------------------------
void goodB2G1_64()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004122D9) ----------------------------------------------------
void goodB2G2_64()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000412316) ----------------------------------------------------
void goodG2B1_56()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000412353) ----------------------------------------------------
void goodG2B2_56()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000412390) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_02_good()
{
  goodB2G1_64();
  goodB2G2_64();
  goodG2B1_56();
  goodG2B2_56();
}

//----- (00000000004123BE) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_63_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_char_63b_badSink(&ptr);
}

//----- (0000000000412409) ----------------------------------------------------
void goodG2B_109()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_char_63b_goodG2BSink(&v0);
}

//----- (0000000000412448) ----------------------------------------------------
__int64 goodB2G_101()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return CWE415_Double_Free__malloc_free_char_63b_goodB2GSink((__int64)&ptr);
}

//----- (0000000000412493) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_char_63_good()
{
  goodG2B_109();
  return goodB2G_101();
}

//----- (00000000004124AD) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_34_bad()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000412506) ----------------------------------------------------
void goodG2B_110()
{
  void *v0; // [rsp+18h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  free(v0);
}

//----- (0000000000412553) ----------------------------------------------------
void *goodB2G_102()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (00000000004125A0) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_long_34_good()
{
  goodG2B_110();
  return goodB2G_102();
}

//----- (00000000004125BA) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_66b_badSink(__int64 a1)
{
  free(*(void **)(a1 + 16));
}

//----- (00000000004125E0) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_66b_goodG2BSink(__int64 a1)
{
  free(*(void **)(a1 + 16));
}

//----- (0000000000412606) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_long_66b_goodB2GSink(__int64 a1)
{
  return *(_QWORD *)(a1 + 16);
}

//----- (000000000041261C) ----------------------------------------------------
void __fastcall badSink_17(void *a1)
{
  if ( badStatic_2 )
    free(a1);
}
// 628214: using guessed type int badStatic_2;

//----- (0000000000412640) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_21_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  badStatic_2 = 1;
  badSink_17(ptr);
}
// 628214: using guessed type int badStatic_2;

//----- (0000000000412693) ----------------------------------------------------
int goodB2G1Sink_2()
{
  int result; // eax

  result = goodB2G1Static_2;
  if ( goodB2G1Static_2 )
    result = printLine("Benign, fixed string");
  return result;
}
// 628218: using guessed type int goodB2G1Static_2;

//----- (00000000004126B5) ----------------------------------------------------
int goodB2G1_65()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  goodB2G1Static_2 = 0;
  return goodB2G1Sink_2();
}
// 628218: using guessed type int goodB2G1Static_2;

//----- (0000000000412708) ----------------------------------------------------
void goodB2G2Sink_2()
{
  ;
}

//----- (0000000000412712) ----------------------------------------------------
void goodB2G2_65()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  goodB2G2Static_2 = 1;
  goodB2G2Sink_2();
}
// 62821C: using guessed type int goodB2G2Static_2;

//----- (0000000000412765) ----------------------------------------------------
void __fastcall goodG2BSink_17(void *a1)
{
  if ( goodG2BStatic_2 )
    free(a1);
}
// 628220: using guessed type int goodG2BStatic_2;

//----- (0000000000412789) ----------------------------------------------------
void goodG2B_111()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  goodG2BStatic_2 = 1;
  goodG2BSink_17(v0);
}
// 628220: using guessed type int goodG2BStatic_2;

//----- (00000000004127D0) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_21_good()
{
  goodB2G1_65();
  goodB2G2_65();
  goodG2B_111();
}

//----- (00000000004127F4) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_03_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000041283D) ----------------------------------------------------
void goodB2G1_66()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000041287A) ----------------------------------------------------
void goodB2G2_66()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004128B7) ----------------------------------------------------
void goodG2B1_57()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004128F4) ----------------------------------------------------
void goodG2B2_57()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000412931) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_03_good()
{
  goodB2G1_66();
  goodB2G2_66();
  goodG2B1_57();
  goodG2B2_57();
}

//----- (000000000041295F) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_63_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int64_t_63b_badSink(&ptr);
}

//----- (00000000004129AA) ----------------------------------------------------
void goodG2B_112()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int64_t_63b_goodG2BSink(&v0);
}

//----- (00000000004129E9) ----------------------------------------------------
__int64 goodB2G_103()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return CWE415_Double_Free__malloc_free_int64_t_63b_goodB2GSink((__int64)&ptr);
}

//----- (0000000000412A34) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int64_t_63_good()
{
  goodG2B_112();
  return goodB2G_103();
}

//----- (0000000000412A4E) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_struct_61b_badSource()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (0000000000412A8B) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_struct_61b_goodG2BSource()
{
  void *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x320uLL);
  if ( !v1 )
    exit(-1);
  return v1;
}

//----- (0000000000412ABC) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_struct_61b_goodB2GSource()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (0000000000412AF9) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_53_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_long_53b_badSink(ptr);
}

//----- (0000000000412B42) ----------------------------------------------------
void goodG2B_113()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_long_53b_goodG2BSink(v0);
}

//----- (0000000000412B7F) ----------------------------------------------------
void goodB2G_104()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_long_53b_goodB2GSink();
}

//----- (0000000000412BC8) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_53_good()
{
  goodG2B_113();
  goodB2G_104();
}

//----- (0000000000412BE2) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_54b_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_struct_54c_badSink(a1);
}

//----- (0000000000412BFC) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_54b_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_struct_54c_goodG2BSink(a1);
}

//----- (0000000000412C16) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_54b_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_struct_54c_goodB2GSink();
}

//----- (0000000000412C30) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_54c_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_struct_54d_badSink(a1);
}

//----- (0000000000412C4A) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_54c_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_struct_54d_goodG2BSink(a1);
}

//----- (0000000000412C64) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_54c_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_struct_54d_goodB2GSink();
}

//----- (0000000000412C7E) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_66_bad()
{
  char v0; // [rsp+0h] [rbp-30h]
  void *v1; // [rsp+10h] [rbp-20h]
  void *ptr; // [rsp+28h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  v1 = ptr;
  CWE415_Double_Free__malloc_free_char_66b_badSink((__int64)&v0);
}

//----- (0000000000412CCF) ----------------------------------------------------
void goodG2B_114()
{
  char v0; // [rsp+0h] [rbp-30h]
  void *v1; // [rsp+10h] [rbp-20h]
  void *v2; // [rsp+28h] [rbp-8h]

  v2 = malloc(0x64uLL);
  if ( !v2 )
    exit(-1);
  v1 = v2;
  CWE415_Double_Free__malloc_free_char_66b_goodG2BSink((__int64)&v0);
}

//----- (0000000000412D14) ----------------------------------------------------
__int64 goodB2G_105()
{
  char v1; // [rsp+0h] [rbp-30h]
  void *v2; // [rsp+10h] [rbp-20h]
  void *ptr; // [rsp+28h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  v2 = ptr;
  return CWE415_Double_Free__malloc_free_char_66b_goodB2GSink((__int64)&v1);
}

//----- (0000000000412D65) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_char_66_good()
{
  goodG2B_114();
  return goodB2G_105();
}

//----- (0000000000412D7F) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_01_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000412DC8) ----------------------------------------------------
void goodG2B_115()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000412E05) ----------------------------------------------------
void goodB2G_106()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000412E42) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_01_good()
{
  goodG2B_115();
  goodB2G_106();
}

//----- (0000000000412E5C) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_53d_badSink(void *a1)
{
  free(a1);
}

//----- (0000000000412E76) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_53d_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (0000000000412E90) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_53d_goodB2GSink()
{
  ;
}

//----- (0000000000412E9A) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_52b_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_char_52c_badSink(a1);
}

//----- (0000000000412EB4) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_52b_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_char_52c_goodG2BSink(a1);
}

//----- (0000000000412ECE) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_52b_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_char_52c_goodB2GSink();
}

//----- (0000000000412EE8) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_12_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    free(ptr);
}

//----- (0000000000412F6E) ----------------------------------------------------
__int64 goodB2G_107()
{
  void *ptr; // [rsp+8h] [rbp-8h]
  void *ptra; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  else
  {
    ptra = malloc(0x320uLL);
    if ( !ptra )
      exit(-1);
    free(ptra);
  }
  return globalReturnsTrueOrFalse();
}

//----- (0000000000412FF0) ----------------------------------------------------
void goodG2B_116()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  globalReturnsTrueOrFalse();
  free(ptr);
}

//----- (0000000000413076) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_12_good()
{
  goodB2G_107();
  goodG2B_116();
}

//----- (0000000000413090) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_06_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (00000000004130ED) ----------------------------------------------------
__int64 goodB2G1_67()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return 5LL;
}

//----- (0000000000413148) ----------------------------------------------------
void goodB2G2_67()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000041318F) ----------------------------------------------------
void goodG2B1_58()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (00000000004131EC) ----------------------------------------------------
void goodG2B2_58()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x64uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000041323D) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_06_good()
{
  goodB2G1_67();
  goodB2G2_67();
  goodG2B1_58();
  goodG2B2_58();
}

//----- (000000000041326B) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_61_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = CWE415_Double_Free__malloc_free_struct_61b_badSource();
  free(ptr);
}

//----- (0000000000413299) ----------------------------------------------------
void goodG2B_117()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = CWE415_Double_Free__malloc_free_struct_61b_goodG2BSource();
  free(ptr);
}

//----- (00000000004132C7) ----------------------------------------------------
void *goodB2G_108()
{
  return CWE415_Double_Free__malloc_free_struct_61b_goodB2GSource();
}

//----- (00000000004132E9) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_struct_61_good()
{
  goodG2B_117();
  return goodB2G_108();
}

//----- (0000000000413303) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_31_bad()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (000000000041335C) ----------------------------------------------------
void goodG2B_118()
{
  void *v0; // [rsp+18h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  free(v0);
}

//----- (00000000004133A9) ----------------------------------------------------
void *goodB2G_109()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (00000000004133F6) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_int64_t_31_good()
{
  goodG2B_118();
  return goodB2G_109();
}

//----- (0000000000413410) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_07_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_3 == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( staticFive_3 == 5 )
    free(ptr);
}
// 6280E8: using guessed type int staticFive_3;

//----- (000000000041346F) ----------------------------------------------------
int goodB2G1_68()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticFive_3 == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = staticFive_3;
  if ( staticFive_3 != 5 )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280E8: using guessed type int staticFive_3;

//----- (00000000004134CC) ----------------------------------------------------
void goodB2G2_68()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( staticFive_3 == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280E8: using guessed type int staticFive_3;

//----- (0000000000413514) ----------------------------------------------------
void goodG2B1_59()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_3 == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  if ( staticFive_3 == 5 )
    free(ptr);
}
// 6280E8: using guessed type int staticFive_3;

//----- (0000000000413573) ----------------------------------------------------
void goodG2B2_59()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_3 == 5 )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( staticFive_3 == 5 )
    free(ptr);
}
// 6280E8: using guessed type int staticFive_3;

//----- (00000000004135C6) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_07_good()
{
  goodB2G1_68();
  goodB2G2_68();
  goodG2B1_59();
  goodG2B2_59();
}

//----- (00000000004135F4) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_int_61b_badSource()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (0000000000413631) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_int_61b_goodG2BSource()
{
  void *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x190uLL);
  if ( !v1 )
    exit(-1);
  return v1;
}

//----- (0000000000413662) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_int_61b_goodB2GSource()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (000000000041369F) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_52b_badSink(void *a1)
{
  CWE415_Double_Free__malloc_free_long_52c_badSink(a1);
}

//----- (00000000004136B9) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_long_52b_goodG2BSink(void *a1)
{
  CWE415_Double_Free__malloc_free_long_52c_goodG2BSink(a1);
}

//----- (00000000004136D3) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_52b_goodB2GSink()
{
  CWE415_Double_Free__malloc_free_long_52c_goodB2GSink();
}

//----- (00000000004136ED) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_54_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int_54b_badSink(ptr);
}

//----- (0000000000413736) ----------------------------------------------------
void goodG2B_119()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x190uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_int_54b_goodG2BSink(v0);
}

//----- (0000000000413773) ----------------------------------------------------
void goodB2G_110()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x190uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_int_54b_goodB2GSink();
}

//----- (00000000004137BC) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int_54_good()
{
  goodG2B_119();
  goodB2G_110();
}

//----- (00000000004137D6) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_long_68_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_long_68_badData = (__int64)ptr;
  CWE415_Double_Free__malloc_free_long_68b_badSink();
}
// 6282B0: using guessed type __int64 CWE415_Double_Free__malloc_free_long_68_badData;

//----- (0000000000413828) ----------------------------------------------------
void goodG2B_120()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  CWE415_Double_Free__malloc_free_long_68_goodG2BData = (__int64)v0;
  CWE415_Double_Free__malloc_free_long_68b_goodG2BSink();
}
// 6282B8: using guessed type __int64 CWE415_Double_Free__malloc_free_long_68_goodG2BData;

//----- (000000000041386E) ----------------------------------------------------
__int64 goodB2G_111()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  CWE415_Double_Free__malloc_free_long_68_goodB2GData = (__int64)ptr;
  return CWE415_Double_Free__malloc_free_long_68b_goodB2GSink();
}
// 6282A8: using guessed type __int64 CWE415_Double_Free__malloc_free_long_68_goodB2GData;

//----- (00000000004138C0) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_long_68_good()
{
  goodG2B_120();
  return goodB2G_111();
}

//----- (00000000004138DA) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_09_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( GLOBAL_CONST_TRUE )
    free(ptr);
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000413937) ----------------------------------------------------
int goodB2G1_69()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = GLOBAL_CONST_FALSE;
  if ( GLOBAL_CONST_FALSE )
    result = printLine("Benign, fixed string");
  return result;
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;
// 41AA88: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000413992) ----------------------------------------------------
void goodB2G2_69()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004139D9) ----------------------------------------------------
void goodG2B1_60()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FALSE )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( GLOBAL_CONST_TRUE )
    free(ptr);
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;
// 41AA88: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000413A36) ----------------------------------------------------
void goodG2B2_60()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( GLOBAL_CONST_TRUE )
    free(ptr);
}
// 41AA84: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000413A87) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_09_good()
{
  goodB2G1_69();
  goodB2G2_69();
  goodG2B1_60();
  goodG2B2_60();
}

//----- (0000000000413AB5) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_17_bad()
{
  void *ptr; // [rsp+0h] [rbp-10h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  ptr = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  for ( j = 0; j <= 0; ++j )
    free(ptr);
}

//----- (0000000000413B24) ----------------------------------------------------
void goodB2G_112()
{
  void *ptr; // [rsp+0h] [rbp-10h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  for ( i = 0; i <= 0; ++i )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  for ( j = 0; j <= 0; ++j )
    ;
}

//----- (0000000000413B87) ----------------------------------------------------
void goodG2B_121()
{
  void *ptr; // [rsp+0h] [rbp-10h]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  ptr = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  for ( j = 0; j <= 0; ++j )
    free(ptr);
}

//----- (0000000000413BEA) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_17_good()
{
  goodB2G_112();
  goodG2B_121();
}

//----- (0000000000413C04) ----------------------------------------------------
void __fastcall badSink_18(void *a1)
{
  if ( badStatic_3 )
    free(a1);
}
// 628224: using guessed type int badStatic_3;

//----- (0000000000413C28) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_21_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  badStatic_3 = 1;
  badSink_18(ptr);
}
// 628224: using guessed type int badStatic_3;

//----- (0000000000413C7B) ----------------------------------------------------
int goodB2G1Sink_3()
{
  int result; // eax

  result = goodB2G1Static_3;
  if ( goodB2G1Static_3 )
    result = printLine("Benign, fixed string");
  return result;
}
// 628228: using guessed type int goodB2G1Static_3;

//----- (0000000000413C9D) ----------------------------------------------------
int goodB2G1_70()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  goodB2G1Static_3 = 0;
  return goodB2G1Sink_3();
}
// 628228: using guessed type int goodB2G1Static_3;

//----- (0000000000413CF0) ----------------------------------------------------
void goodB2G2Sink_3()
{
  ;
}

//----- (0000000000413CFA) ----------------------------------------------------
void goodB2G2_70()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  goodB2G2Static_3 = 1;
  goodB2G2Sink_3();
}
// 62822C: using guessed type int goodB2G2Static_3;

//----- (0000000000413D4D) ----------------------------------------------------
void __fastcall goodG2BSink_18(void *a1)
{
  if ( goodG2BStatic_3 )
    free(a1);
}
// 628230: using guessed type int goodG2BStatic_3;

//----- (0000000000413D71) ----------------------------------------------------
void goodG2B_122()
{
  void *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x320uLL);
  if ( !v0 )
    exit(-1);
  goodG2BStatic_3 = 1;
  goodG2BSink_18(v0);
}
// 628230: using guessed type int goodG2BStatic_3;

//----- (0000000000413DB8) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_struct_21_good()
{
  goodB2G1_70();
  goodB2G2_70();
  goodG2B_122();
}

//----- (0000000000413DDC) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_32_bad()
{
  __int64 v0; // [rsp+8h] [rbp-28h]
  void *ptr; // [rsp+18h] [rbp-18h]
  void **v2; // [rsp+20h] [rbp-10h]
  __int64 *v3; // [rsp+28h] [rbp-8h]

  v3 = &v0;
  v2 = (void **)&v0;
  v0 = 0LL;
  ptr = 0LL;
  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  *v3 = (__int64)ptr;
  free(*v2);
}

//----- (0000000000413E56) ----------------------------------------------------
void goodG2B_123()
{
  __int64 v0; // [rsp+8h] [rbp-28h]
  void *v1; // [rsp+18h] [rbp-18h]
  void **v2; // [rsp+20h] [rbp-10h]
  __int64 *v3; // [rsp+28h] [rbp-8h]

  v3 = &v0;
  v2 = (void **)&v0;
  v0 = 0LL;
  v1 = 0LL;
  v1 = malloc(0x320uLL);
  if ( !v1 )
    exit(-1);
  *v3 = (__int64)v1;
  free(*v2);
}

//----- (0000000000413EC4) ----------------------------------------------------
__int64 goodB2G_113()
{
  __int64 v1; // [rsp+8h] [rbp-28h]
  void *ptr; // [rsp+18h] [rbp-18h]
  __int64 *v3; // [rsp+20h] [rbp-10h]
  __int64 *v4; // [rsp+28h] [rbp-8h]

  v4 = &v1;
  v3 = &v1;
  v1 = 0LL;
  ptr = 0LL;
  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  *v4 = (__int64)ptr;
  return *v3;
}

//----- (0000000000413F32) ----------------------------------------------------
__int64 CWE415_Double_Free__malloc_free_int64_t_32_good()
{
  goodG2B_123();
  return goodB2G_113();
}

//----- (0000000000413F4C) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_02_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  free(ptr);
}

//----- (0000000000413F95) ----------------------------------------------------
void goodB2G1_71()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000413FD2) ----------------------------------------------------
void goodB2G2_71()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000041400F) ----------------------------------------------------
void goodG2B1_61()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (000000000041404C) ----------------------------------------------------
void goodG2B2_61()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
}

//----- (0000000000414089) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_02_good()
{
  goodB2G1_71();
  goodB2G2_71();
  goodG2B1_61();
  goodG2B2_61();
}

//----- (00000000004140B7) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_64b_badSink(void **a1)
{
  free(*a1);
}

//----- (00000000004140E4) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_char_64b_goodG2BSink(void **a1)
{
  free(*a1);
}

//----- (0000000000414111) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_char_64b_goodB2GSink(__int64 a1)
{
  return *(_QWORD *)a1;
}

//----- (000000000041412E) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_int64_t_61b_badSource()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (000000000041416B) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_int64_t_61b_goodG2BSource()
{
  void *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x320uLL);
  if ( !v1 )
    exit(-1);
  return v1;
}

//----- (000000000041419C) ----------------------------------------------------
void *CWE415_Double_Free__malloc_free_int64_t_61b_goodB2GSource()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = malloc(0x320uLL);
  if ( !ptr )
    exit(-1);
  free(ptr);
  return ptr;
}

//----- (00000000004141D9) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_10_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalTrue )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( globalTrue )
    free(ptr);
}
// 6280EC: using guessed type int globalTrue;

//----- (0000000000414236) ----------------------------------------------------
int goodB2G1_72()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalTrue )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = globalFalse;
  if ( globalFalse )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280EC: using guessed type int globalTrue;
// 628238: using guessed type int globalFalse;

//----- (0000000000414291) ----------------------------------------------------
void goodB2G2_72()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalTrue )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280EC: using guessed type int globalTrue;

//----- (00000000004142D8) ----------------------------------------------------
void goodG2B1_62()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( globalTrue )
    free(ptr);
}
// 6280EC: using guessed type int globalTrue;
// 628238: using guessed type int globalFalse;

//----- (0000000000414335) ----------------------------------------------------
void goodG2B2_62()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalTrue )
  {
    ptr = malloc(0x320uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( globalTrue )
    free(ptr);
}
// 6280EC: using guessed type int globalTrue;

//----- (0000000000414386) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_int64_t_10_good()
{
  goodB2G1_72();
  goodB2G2_72();
  goodG2B1_62();
  goodG2B2_62();
}

//----- (00000000004143B4) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_14_bad()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  if ( globalFive == 5 )
    free(ptr);
}
// 6280F0: using guessed type int globalFive;

//----- (0000000000414413) ----------------------------------------------------
int goodB2G1_73()
{
  int result; // eax
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalFive == 5 )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
  result = globalFive;
  if ( globalFive != 5 )
    result = printLine("Benign, fixed string");
  return result;
}
// 6280F0: using guessed type int globalFive;

//----- (0000000000414470) ----------------------------------------------------
void goodB2G2_73()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  if ( globalFive == 5 )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
    free(ptr);
  }
}
// 6280F0: using guessed type int globalFive;

//----- (00000000004144B8) ----------------------------------------------------
void goodG2B1_63()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  else
  {
    printLine("Benign, fixed string");
  }
  if ( globalFive == 5 )
    free(ptr);
}
// 6280F0: using guessed type int globalFive;

//----- (0000000000414517) ----------------------------------------------------
void goodG2B2_63()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = malloc(0x64uLL);
    if ( !ptr )
      exit(-1);
  }
  if ( globalFive == 5 )
    free(ptr);
}
// 6280F0: using guessed type int globalFive;

//----- (000000000041456A) ----------------------------------------------------
void CWE415_Double_Free__malloc_free_char_14_good()
{
  goodB2G1_73();
  goodB2G2_73();
  goodG2B1_63();
  goodG2B2_63();
}

//----- (0000000000414598) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_67b_badSink(void *a1)
{
  free(a1);
}

//----- (00000000004145BA) ----------------------------------------------------
void __fastcall CWE415_Double_Free__malloc_free_struct_67b_goodG2BSink(void *a1)
{
  free(a1);
}

//----- (00000000004145DC) ----------------------------------------------------
__int64 __fastcall CWE415_Double_Free__malloc_free_struct_67b_goodB2GSink(__int64 a1)
{
  return a1;
}

//----- (00000000004145EE) ----------------------------------------------------
int __fastcall printLine(const char *a1)
{
  int result; // eax

  if ( a1 )
    result = puts(a1);
  return result;
}

//----- (000000000041460F) ----------------------------------------------------
int __fastcall printWLine(__int64 a1)
{
  int result; // eax

  if ( a1 )
    result = wprintf("%", a1);
  return result;
}

//----- (000000000041463A) ----------------------------------------------------
int __fastcall printIntLine(unsigned int a1)
{
  return printf("%d\n", a1);
}

//----- (000000000041465B) ----------------------------------------------------
int __fastcall printShortLine(__int16 a1)
{
  return printf("%hd\n", (unsigned int)a1);
}

//----- (0000000000414680) ----------------------------------------------------
int __fastcall printFloatLine(float a1)
{
  return printf("%f\n", a1);
}

//----- (00000000004146A6) ----------------------------------------------------
int __fastcall printLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (00000000004146CA) ----------------------------------------------------
int __fastcall printLongLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (00000000004146EE) ----------------------------------------------------
int __fastcall printSizeTLine(__int64 a1)
{
  return printf("%zu\n", a1);
}

//----- (0000000000414712) ----------------------------------------------------
int __fastcall printHexCharLine(char a1)
{
  return printf("%02x\n", (unsigned int)a1);
}

//----- (0000000000414736) ----------------------------------------------------
int __fastcall printWcharLine(int a1)
{
  int v2; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+14h] [rbp-Ch]

  v2 = a1;
  v3 = 0;
  return printf("%ls\n", &v2);
}

//----- (0000000000414766) ----------------------------------------------------
int __fastcall printUnsignedLine(unsigned int a1)
{
  return printf("%u\n", a1);
}

//----- (0000000000414787) ----------------------------------------------------
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1)
{
  return printf("%02x\n", a1);
}

//----- (00000000004147AB) ----------------------------------------------------
int __fastcall printDoubleLine(double a1)
{
  return printf("%g\n", a1);
}

//----- (00000000004147D6) ----------------------------------------------------
int __fastcall printStructLine(unsigned int *a1)
{
  return printf("%d -- %d\n", *a1, a1[1]);
}

//----- (0000000000414802) ----------------------------------------------------
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2)
{
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; i < a2; ++i )
    printf("%02x", *(unsigned __int8 *)(a1 + i));
  return puts(s);
}

//----- (0000000000414859) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL;
        i < a2
     && (*__ctype_b_loc())[*(char *)(2 * i + v4)] & 0x1000
     && (*__ctype_b_loc())[*(char *)(2 * i + 1 + v4)] & 0x1000;
        ++i )
  {
    __isoc99_sscanf(2 * i + v4, "%02x", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400930: using guessed type __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000414932) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL; i < a2 && iswxdigit(*(_DWORD *)(8 * i + v4)) && iswxdigit(*(_DWORD *)(8 * i + 4 + v4)); ++i )
  {
    __isoc99_swscanf(8 * i + v4, "%", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 4009F0: using guessed type __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004149E6) ----------------------------------------------------
__int64 globalReturnsTrue()
{
  return 1LL;
}

//----- (00000000004149F1) ----------------------------------------------------
__int64 globalReturnsFalse()
{
  return 0LL;
}

//----- (00000000004149FC) ----------------------------------------------------
__int64 globalReturnsTrueOrFalse()
{
  return (unsigned int)(rand() % 2);
}

//----- (0000000000414A12) ----------------------------------------------------
void good1()
{
  ;
}

//----- (0000000000414A18) ----------------------------------------------------
void good2()
{
  ;
}

//----- (0000000000414A1E) ----------------------------------------------------
void good3()
{
  ;
}

//----- (0000000000414A24) ----------------------------------------------------
void good4()
{
  ;
}

//----- (0000000000414A2A) ----------------------------------------------------
void good5()
{
  ;
}

//----- (0000000000414A30) ----------------------------------------------------
void good6()
{
  ;
}

//----- (0000000000414A36) ----------------------------------------------------
void good7()
{
  ;
}

//----- (0000000000414A3C) ----------------------------------------------------
void good8()
{
  ;
}

//----- (0000000000414A42) ----------------------------------------------------
void good9()
{
  ;
}

//----- (0000000000414A48) ----------------------------------------------------
void bad1()
{
  ;
}

//----- (0000000000414A4E) ----------------------------------------------------
void bad2()
{
  ;
}

//----- (0000000000414A54) ----------------------------------------------------
void bad3()
{
  ;
}

//----- (0000000000414A5A) ----------------------------------------------------
void bad4()
{
  ;
}

//----- (0000000000414A60) ----------------------------------------------------
void bad5()
{
  ;
}

//----- (0000000000414A66) ----------------------------------------------------
void bad6()
{
  ;
}

//----- (0000000000414A6C) ----------------------------------------------------
void bad7()
{
  ;
}

//----- (0000000000414A72) ----------------------------------------------------
void bad8()
{
  ;
}

//----- (0000000000414A78) ----------------------------------------------------
void bad9()
{
  ;
}

//----- (0000000000414A7E) ----------------------------------------------------
void __fastcall __noreturn internal_start(void *a1)
{
  (*((void (__fastcall **)(_QWORD))a1 + 1))(*((_QWORD *)a1 + 2));
  pthread_exit(0LL);
}

//----- (0000000000414AB1) ----------------------------------------------------
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3)
{
  __int64 result; // rax
  void **v4; // [rsp+8h] [rbp-28h]
  pthread_t newthread; // [rsp+20h] [rbp-10h]
  void *arg; // [rsp+28h] [rbp-8h]

  v4 = a3;
  *a3 = 0LL;
  arg = malloc(0x18uLL);
  if ( !arg )
    return 0LL;
  *((_QWORD *)arg + 1) = a1;
  *((_QWORD *)arg + 2) = a2;
  if ( pthread_create(&newthread, 0LL, (void *(*)(void *))internal_start, arg) )
  {
    free(arg);
    result = 0LL;
  }
  else
  {
    *(_QWORD *)arg = newthread;
    *v4 = arg;
    result = 1LL;
  }
  return result;
}

//----- (0000000000414B55) ----------------------------------------------------
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1)
{
  void *thread_return; // [rsp+18h] [rbp-8h]

  return pthread_join(*a1, &thread_return) == 0;
}

//----- (0000000000414B89) ----------------------------------------------------
__int64 __fastcall stdThreadDestroy(void *a1)
{
  free(a1);
  return 1LL;
}

//----- (0000000000414BA8) ----------------------------------------------------
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1)
{
  __int64 result; // rax
  pthread_mutex_t *mutex; // [rsp+18h] [rbp-8h]

  *a1 = 0LL;
  mutex = (pthread_mutex_t *)malloc(0x28uLL);
  if ( !mutex )
    return 0LL;
  if ( pthread_mutex_init(mutex, 0LL) )
  {
    free(a1);
    result = 0LL;
  }
  else
  {
    *a1 = mutex;
    result = 1LL;
  }
  return result;
}

//----- (0000000000414C1D) ----------------------------------------------------
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1)
{
  return pthread_mutex_lock(a1);
}

//----- (0000000000414C37) ----------------------------------------------------
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1)
{
  return pthread_mutex_unlock(a1);
}

//----- (0000000000414C51) ----------------------------------------------------
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1)
{
  pthread_mutex_destroy(a1);
  free(a1);
}

//----- (0000000000414C80) ----------------------------------------------------
void _libc_csu_init(void)
{
  __int64 v0; // rbx
  signed __int64 v1; // rbp

  v0 = 0LL;
  v1 = &_do_global_dtors_aux_fini_array_entry - _frame_dummy_init_array_entry;
  init_proc();
  if ( v1 )
  {
    do
      _frame_dummy_init_array_entry[v0++]();
    while ( v0 != v1 );
  }
}
// 627DD0: using guessed type __int64 (__fastcall *_frame_dummy_init_array_entry[2])();
// 627DD8: using guessed type __int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)();

//----- (0000000000414CF4) ----------------------------------------------------
void term_proc()
{
  ;
}

// ALL OK, 1321 function(s) have been successfully decompiled
