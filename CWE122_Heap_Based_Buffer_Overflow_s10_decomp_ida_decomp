/* This file was generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2018 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

void *init_proc();
__int64 sub_4009B0();
// int printf(const char *format, ...);
// void *memset(void *s, int c, size_t n);
// int puts(const char *s);
// __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD); weak
// void __noreturn exit(int status);
// void *malloc(size_t size);
// int __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end);
// int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr);
// int iswxdigit(wint_t wc);
// void free(void *ptr);
// int pthread_create(pthread_t *newthread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);
// const unsigned __int16 **__ctype_b_loc(void);
// int pthread_join(pthread_t th, void **thread_return);
// char *strcat(char *dest, const char *src);
// void __noreturn pthread_exit(void *retval);
// int wprintf(const wchar_t *format, ...);
// __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD); weak
// char *strcpy(char *dest, const char *src);
// void srand(unsigned int seed);
// int pthread_mutex_lock(pthread_mutex_t *mutex);
// int rand(void);
// int pthread_mutex_destroy(pthread_mutex_t *mutex);
// int pthread_mutex_unlock(pthread_mutex_t *mutex);
// time_t time(time_t *timer);
// __int64 _gmon_start__(void); weak
// void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>);
__int64 deregister_tm_clones();
__int64 register_tm_clones();
__int64 _do_global_dtors_aux();
__int64 frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_04_bad();
void goodG2B1();
void goodG2B2();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_04_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54c_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54c_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_17_bad();
void goodG2B();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_17_good();
void __fastcall badSink(char *a1);
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_44_bad();
void __fastcall goodG2BSink(char *a1);
__int64 goodG2B_0();
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_44_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_07_bad();
void goodG2B1_0();
void goodG2B2_0();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_07_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54_bad();
void goodG2B_1();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_11_bad();
void goodG2B1_1();
void goodG2B2_1();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_11_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_02_bad();
void goodG2B1_2();
void goodG2B2_2();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_02_good();
_BYTE *__fastcall badSource(_BYTE *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_42_bad();
_BYTE *__fastcall goodG2BSource(_BYTE *a1);
void goodG2B_2();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_42_good();
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_badSource(_BYTE *a1);
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_goodG2B1Source(_BYTE *a1);
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_goodG2B2Source(_BYTE *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_05_bad();
void goodG2B1_3();
void goodG2B2_3();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_05_good();
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_61b_badSource(_BYTE *a1);
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_61b_goodG2BSource(_BYTE *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_10_bad();
void goodG2B1_4();
void goodG2B2_4();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_10_good();
void badSink_0();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_bad();
void goodG2BSink_0();
void goodG2B_3();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_65b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_65b_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_06_bad();
void goodG2B1_5();
void goodG2B2_5();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_06_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_01_bad();
void goodG2B_4();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_01_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_bad();
void goodG2B1_6();
void goodG2B2_6();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_61_bad();
void goodG2B_5();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_61_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_16_bad();
void goodG2B_6();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_16_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53d_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53d_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_05_bad();
void goodG2B1_7();
void goodG2B2_7();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_05_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_07_bad();
void goodG2B1_8();
void goodG2B2_8();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_07_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_41_badSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_41_bad();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_41_goodG2BSink(char *a1);
void goodG2B_7();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_41_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_17_bad();
void goodG2B_8();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_17_good();
void __fastcall badSink_1(char *a1);
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_44_bad();
void __fastcall goodG2BSink_1(char *a1);
__int64 goodG2B_9();
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_44_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53b_goodG2BSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52c_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52c_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_51_bad();
void goodG2B_10();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_51_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_34_bad();
void goodG2B_11();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_34_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_66b_badSink(__int64 a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_66b_goodG2BSink(__int64 a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_63b_badSink(char **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_63b_goodG2BSink(char **a1);
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_61b_badSource(_BYTE *a1);
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_61b_goodG2BSource(_BYTE *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_10_bad();
void goodG2B1_9();
void goodG2B2_9();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_10_good();
void badSink_2();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_45_bad();
void goodG2BSink_2();
void goodG2B_12();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_45_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54d_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54d_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53_bad();
void goodG2B_13();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_06_bad();
void goodG2B1_10();
void goodG2B2_10();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_06_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54c_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54c_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_01_bad();
void goodG2B_14();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_01_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_13_bad();
void goodG2B1_11();
void goodG2B2_11();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_13_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53d_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53d_goodG2BSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b_badSink(char **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b_goodG2BSink(char **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54e_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54e_goodG2BSink(char *a1);
void __fastcall badSink_3(char *a1);
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_44_bad();
void __fastcall goodG2BSink_3(char *a1);
__int64 goodG2B_15();
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_44_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_61_bad();
void goodG2B_16();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_61_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_31_bad();
void goodG2B_17();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_31_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_09_bad();
void goodG2B1_12();
void goodG2B2_12();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_09_good();
_BYTE *__fastcall badSource_0(_BYTE *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_21_bad();
_BYTE *__fastcall goodG2B1Source(_BYTE *a1);
void goodG2B1_13();
_BYTE *__fastcall goodG2B2Source(_BYTE *a1);
void goodG2B2_13();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_21_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_03_bad();
void goodG2B1_14();
void goodG2B2_14();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_03_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63_bad();
void goodG2B_18();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_14_bad();
void goodG2B1_15();
void goodG2B2_15();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_14_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_32_bad();
void goodG2B_19();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_32_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_18_bad();
void goodG2B_20();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_18_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_67b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_67b_goodG2BSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54b_goodG2BSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53d_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53d_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_12_bad();
void goodG2B_21();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_12_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_63_bad();
void goodG2B_22();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_63_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54c_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54c_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_16_bad();
void goodG2B_23();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_16_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52b_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53_bad();
void goodG2B_24();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_06_bad();
void goodG2B1_16();
void goodG2B2_16();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_06_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_04_bad();
void goodG2B1_17();
void goodG2B2_17();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_04_good();
__int64 staticReturnsTrue();
__int64 staticReturnsFalse();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_08_bad();
void goodG2B1_18();
void goodG2B2_18();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_08_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52_bad();
void goodG2B_25();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_02_bad();
void goodG2B1_19();
void goodG2B2_19();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_02_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_67_bad();
void goodG2B_26();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_67_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_17_bad();
void goodG2B_27();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_17_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_66_bad();
void goodG2B_28();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_66_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53b_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54_bad();
void goodG2B_29();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_67_bad();
void goodG2B_30();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_67_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_11_bad();
void goodG2B1_20();
void goodG2B2_20();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_11_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_02_bad();
void goodG2B1_21();
void goodG2B2_21();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_02_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52b_goodG2BSink(char *a1);
_BYTE *CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_61b_badSource();
_BYTE *CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_61b_goodG2BSource();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_10_bad();
void goodG2B1_22();
void goodG2B2_22();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_10_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_14_bad();
void goodG2B1_23();
void goodG2B2_23();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_14_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_32_bad();
void goodG2B_31();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_32_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54c_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54c_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_01_bad();
void goodG2B_32();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_01_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_67b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_67b_goodG2BSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54e_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54e_goodG2BSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53c_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53c_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52_bad();
void goodG2B_33();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_64_bad();
void goodG2B_34();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_64_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_51b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_51b_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_51_bad();
void goodG2B_35();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_51_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_61_bad();
void goodG2B_36();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_61_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_16_bad();
void goodG2B_37();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_16_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_04_bad();
void goodG2B1_24();
void goodG2B2_24();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_04_good();
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_65_bad();
__int64 goodG2B_38();
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_65_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_15_bad();
void goodG2B1_25();
void goodG2B2_25();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_15_good();
__int64 staticReturnsTrue_0();
__int64 staticReturnsFalse_0();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_08_bad();
void goodG2B1_26();
void goodG2B2_26();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_08_good();
_BYTE *badSource_1();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_42_bad();
_BYTE *goodG2BSource_0();
void goodG2B_39();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_42_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_51_bad();
void goodG2B_40();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_51_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_bad();
void goodG2B1_27();
void goodG2B2_27();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68b_badSink();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68b_goodG2BSink();
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_badSource(_BYTE *a1);
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B1Source(_BYTE *a1);
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B2Source(_BYTE *a1);
__int64 staticReturnsTrue_1();
__int64 staticReturnsFalse_1();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_08_bad();
void goodG2B1_28();
void goodG2B2_28();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_08_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54b_goodG2BSink(char *a1);
void badSink_4();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_bad();
void goodG2BSink_4();
void goodG2B_41();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_bad();
void goodG2B_42();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_06_bad();
void goodG2B1_29();
void goodG2B2_29();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_06_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_badSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_bad();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_goodG2BSink(char *a1);
void goodG2B_43();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53b_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_02_bad();
void goodG2B1_30();
void goodG2B2_30();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_02_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c_goodG2BSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53b_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_bad();
void goodG2B1_31();
void goodG2B2_31();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68_bad();
void goodG2B_44();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_67_bad();
void goodG2B_45();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_67_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_bad();
void goodG2B_46();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_66b_badSink(__int64 a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_66b_goodG2BSink(__int64 a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_11_bad();
void goodG2B1_32();
void goodG2B2_32();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_11_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_07_bad();
void goodG2B1_33();
void goodG2B2_33();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_07_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54_bad();
void goodG2B_47();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54d_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54d_goodG2BSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_64b_badSink(char **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_64b_goodG2BSink(char **a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53_bad();
void goodG2B_48();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_13_bad();
void goodG2B1_34();
void goodG2B2_34();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_13_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_14_bad();
void goodG2B1_35();
void goodG2B2_35();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_14_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32_bad();
void goodG2B_49();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54e_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54e_goodG2BSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54e_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54e_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_66_bad();
void goodG2B_50();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_66_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_67b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_67b_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_64_bad();
void goodG2B_51();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_64_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_31_bad();
void goodG2B_52();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_31_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53c_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53c_goodG2BSink(char *a1);
_BYTE *__fastcall badSource_2(_BYTE *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_21_bad();
_BYTE *__fastcall goodG2B1Source_0(_BYTE *a1);
void goodG2B1_36();
_BYTE *__fastcall goodG2B2Source_0(_BYTE *a1);
void goodG2B2_36();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_21_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_03_bad();
void goodG2B1_37();
void goodG2B2_37();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_03_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_04_bad();
void goodG2B1_38();
void goodG2B2_38();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_04_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_31_bad();
void goodG2B_53();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_31_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_15_bad();
void goodG2B1_39();
void goodG2B2_39();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_15_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_18_bad();
void goodG2B_54();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_18_good();
_BYTE *badSource_3();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_42_bad();
_BYTE *goodG2BSource_1();
void goodG2B_55();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_42_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_12_bad();
void goodG2B_56();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_12_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52_bad();
void goodG2B_57();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68b_badSink();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68b_goodG2BSink();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_51b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_51b_goodG2BSink(char *a1);
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_badSource(_BYTE *a1);
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_goodG2B1Source(_BYTE *a1);
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_goodG2B2Source(_BYTE *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_64_bad();
void goodG2B_58();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_64_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53c_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53c_goodG2BSink(char *a1);
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_65_bad();
__int64 goodG2B_59();
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_65_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54d_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54d_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_15_bad();
void goodG2B1_40();
void goodG2B2_40();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_15_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_64b_badSink(char **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_64b_goodG2BSink(char **a1);
__int64 staticReturnsTrue_2();
__int64 staticReturnsFalse_2();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_08_bad();
void goodG2B1_41();
void goodG2B2_41();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_08_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61_bad();
void goodG2B_60();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61_good();
_BYTE *__fastcall badSource_4(_BYTE *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_42_bad();
_BYTE *__fastcall goodG2BSource_2(_BYTE *a1);
void goodG2B_61();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_42_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_34_bad();
void goodG2B_62();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_34_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_13_bad();
void goodG2B1_42();
void goodG2B2_42();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_13_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_14_bad();
void goodG2B1_43();
void goodG2B2_43();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_14_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_32_bad();
void goodG2B_63();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_32_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_51b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_51b_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68b_badSink();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68b_goodG2BSink();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_67b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_67b_goodG2BSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52b_goodG2BSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54b_goodG2BSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_51b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_51b_goodG2BSink(char *a1);
_BYTE *__fastcall badSource_5(_BYTE *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_21_bad();
_BYTE *__fastcall goodG2B1Source_1(_BYTE *a1);
void goodG2B1_44();
_BYTE *__fastcall goodG2B2Source_1(_BYTE *a1);
void goodG2B2_44();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_21_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_03_bad();
void goodG2B1_45();
void goodG2B2_45();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_03_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_09_bad();
void goodG2B1_46();
void goodG2B2_46();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_09_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_63_bad();
void goodG2B_64();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_63_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53c_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53c_goodG2BSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52c_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52c_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_34_bad();
void goodG2B_65();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_34_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_65b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_65b_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_18_bad();
void goodG2B_66();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_18_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_63b_badSink(char **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_63b_goodG2BSink(char **a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_64_bad();
void goodG2B_67();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_64_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_66b_badSink(__int64 a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_66b_goodG2BSink(__int64 a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54_bad();
void goodG2B_68();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_05_bad();
void goodG2B1_47();
void goodG2B2_47();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_05_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_12_bad();
void goodG2B_69();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_12_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53_bad();
void goodG2B_70();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54b_goodG2BSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_64b_badSink(char **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_64b_goodG2BSink(char **a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_bad();
void goodG2B_71();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_17_bad();
void goodG2B_72();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_17_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_66_bad();
void goodG2B_73();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_66_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_31_bad();
void goodG2B_74();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_31_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_11_bad();
void goodG2B1_48();
void goodG2B2_48();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_11_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_67_bad();
void goodG2B_75();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_67_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_bad();
void goodG2B1_49();
void goodG2B2_49();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52b_goodG2BSink(char *a1);
_BYTE *CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b_badSource();
_BYTE *CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b_goodG2BSource();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_10_bad();
void goodG2B1_50();
void goodG2B2_50();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_10_good();
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_65_bad();
__int64 goodG2B_76();
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_65_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54d_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54d_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_15_bad();
void goodG2B1_51();
void goodG2B2_51();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_15_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_01_bad();
void goodG2B_77();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_01_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_13_bad();
void goodG2B1_52();
void goodG2B2_52();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_13_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53d_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53d_goodG2BSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52c_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52c_goodG2BSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_63b_badSink(char **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_63b_goodG2BSink(char **a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52_bad();
void goodG2B_78();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68b_badSink();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68b_goodG2BSink();
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_65_bad();
__int64 goodG2B_79();
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_65_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_16_bad();
void goodG2B_80();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_16_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_41_badSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_41_bad();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_41_goodG2BSink(char *a1);
void goodG2B_81();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_41_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_09_bad();
void goodG2B1_53();
void goodG2B2_53();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_09_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_07_bad();
void goodG2B1_54();
void goodG2B2_54();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_07_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_05_bad();
void goodG2B1_55();
void goodG2B2_55();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_05_good();
void __fastcall badSink_5(char *a1);
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_44_bad();
void __fastcall goodG2BSink_5(char *a1);
__int64 goodG2B_82();
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_44_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_09_bad();
void goodG2B1_56();
void goodG2B2_56();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_09_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_41_badSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_41_bad();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_41_goodG2BSink(char *a1);
void goodG2B_83();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_41_good();
_BYTE *__fastcall badSource_6(_BYTE *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_21_bad();
_BYTE *__fastcall goodG2B1Source_2(_BYTE *a1);
void goodG2B1_57();
_BYTE *__fastcall goodG2B2Source_2(_BYTE *a1);
void goodG2B2_57();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_21_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_03_bad();
void goodG2B1_58();
void goodG2B2_58();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_03_good();
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_badSource(_BYTE *a1);
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B1Source(_BYTE *a1);
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B2Source(_BYTE *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_63_bad();
void goodG2B_84();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_63_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_65b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_65b_goodG2BSink(char *a1);
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_51_bad();
void goodG2B_85();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_51_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_18_bad();
void goodG2B_86();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_18_good();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_34_bad();
void goodG2B_87();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_34_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_65b_badSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_65b_goodG2BSink(char *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_66b_badSink(__int64 a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_66b_goodG2BSink(__int64 a1);
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_66_bad();
void goodG2B_88();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_66_good();
void badSink_6();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_bad();
void goodG2BSink_6();
void goodG2B_89();
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_good();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12_bad();
void goodG2B_90();
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_64b_badSink(char **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_64b_goodG2BSink(char **a1);
int __fastcall printLine(const char *a1);
int __fastcall printWLine(__int64 a1);
int __fastcall printIntLine(unsigned int a1);
int __fastcall printShortLine(__int16 a1);
int __fastcall printFloatLine(float a1);
int __fastcall printLongLine(__int64 a1);
int __fastcall printLongLongLine(__int64 a1);
int __fastcall printSizeTLine(__int64 a1);
int __fastcall printHexCharLine(char a1);
int __fastcall printWcharLine(int a1);
int __fastcall printUnsignedLine(unsigned int a1);
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1);
int __fastcall printDoubleLine(double a1);
int __fastcall printStructLine(unsigned int *a1);
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2);
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3);
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3);
__int64 globalReturnsTrue();
__int64 globalReturnsFalse();
__int64 globalReturnsTrueOrFalse();
void good1();
void good2();
void good3();
void good4();
void good5();
void good6();
void good7();
void good8();
void good9();
void bad1();
void bad2();
void bad3();
void bad4();
void bad5();
void bad6();
void bad7();
void bad8();
void bad9();
void __fastcall __noreturn internal_start(void *a1);
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3);
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1);
__int64 __fastcall stdThreadDestroy(void *a1);
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1);
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1);
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1);
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1);
void _libc_csu_init(void); // idb
void _libc_csu_fini(void); // idb
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

char s[3] = { '\0', '\0', '\0' }; // idb
int GLOBAL_CONST_TRUE = 1; // weak
int GLOBAL_CONST_FALSE = 0; // weak
int GLOBAL_CONST_FIVE = 5; // weak
__int64 (__fastcall *_frame_dummy_init_array_entry[2])() = { &frame_dummy, &_do_global_dtors_aux }; // weak
__int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)() = &_do_global_dtors_aux; // weak
__int64 (*qword_620010)(void) = NULL; // weak
int staticFive = 5; // weak
int staticTrue = 1; // weak
int staticTrue_0 = 1; // weak
int staticFive_0 = 5; // weak
int staticFive_1 = 5; // weak
int staticTrue_1 = 1; // weak
int staticFive_2 = 5; // weak
int staticTrue_2 = 1; // weak
int globalTrue = 1; // weak
int globalFive = 5; // weak
char completed_6355; // weak
int staticFalse; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_badData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_goodG2BData; // weak
int CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_badGlobal; // weak
int CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_goodG2B1Global; // weak
int CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_goodG2B2Global; // weak
int staticFalse_0; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_45_badData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_45_goodG2BData; // weak
int badStatic; // weak
int goodG2B1Static; // weak
int goodG2B2Static; // weak
int CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_badGlobal; // weak
int CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_goodG2B1Global; // weak
int CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_goodG2B2Global; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_badData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_goodG2BData; // weak
int CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_badGlobal; // weak
int CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B1Global; // weak
int CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B2Global; // weak
int badStatic_0; // weak
int goodG2B1Static_0; // weak
int goodG2B2Static_0; // weak
int badStatic_1; // weak
int goodG2B1Static_1; // weak
int goodG2B2Static_1; // weak
int staticFalse_1; // weak
int CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_badGlobal; // weak
int CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B1Global; // weak
int CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B2Global; // weak
int staticFalse_2; // weak
int badStatic_2; // weak
int goodG2B1Static_2; // weak
int goodG2B2Static_2; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_badData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_goodG2BData; // weak
int globalFalse; // weak
int globalArgc; // weak
__int64 globalArgv; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_badData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_goodG2BData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68_badData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68_goodG2BData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_badData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_goodG2BData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_goodG2BData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_badData; // weak
// extern _UNKNOWN __gmon_start__; weak


//----- (0000000000400988) ----------------------------------------------------
void *init_proc()
{
  void *result; // rax

  result = &__gmon_start__;
  if ( &__gmon_start__ )
    result = (void *)_gmon_start__();
  return result;
}
// 400B40: using guessed type __int64 _gmon_start__(void);

//----- (00000000004009B0) ----------------------------------------------------
__int64 sub_4009B0()
{
  return qword_620010();
}
// 620010: using guessed type __int64 (*qword_620010)(void);

//----- (0000000000400B50) ----------------------------------------------------
// positive sp value has been detected, the output may be wrong!
void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>)
{
  int v2; // esi
  int v3; // [rsp-8h] [rbp-8h]
  __int64 _0; // [rsp+0h] [rbp+0h]

  v2 = v3;
  *(_QWORD *)&v3 = a1;
  __libc_start_main(
    (int (__fastcall *)(int, char **, char **))main,
    v2,
    (char **)&_0,
    _libc_csu_init,
    _libc_csu_fini,
    a2,
    &v3);
  __halt();
}
// 400B56: positive sp value 8 has been found

//----- (0000000000400B80) ----------------------------------------------------
__int64 deregister_tm_clones()
{
  __int64 result; // rax

  result = 6422799LL - (_QWORD)&completed_6355;
  if ( (unsigned __int64)(6422799LL - (_QWORD)&completed_6355) > 0xE )
    result = 0LL;
  return result;
}
// 620108: using guessed type char completed_6355;

//----- (0000000000400BB0) ----------------------------------------------------
__int64 register_tm_clones()
{
  return 0LL;
}

//----- (0000000000400BF0) ----------------------------------------------------
__int64 _do_global_dtors_aux()
{
  __int64 result; // rax

  if ( !completed_6355 )
  {
    result = deregister_tm_clones();
    completed_6355 = 1;
  }
  return result;
}
// 620108: using guessed type char completed_6355;

//----- (0000000000400C10) ----------------------------------------------------
__int64 frame_dummy()
{
  return register_tm_clones();
}
// 400C10: could not find valid save-restore pair for rbp

//----- (0000000000400C3D) ----------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  unsigned int v3; // eax

  v3 = time(0LL);
  srand(v3);
  globalArgc = argc;
  globalArgv = (__int64)argv;
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_12_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_12_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_03_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_03_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_01_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_01_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_06_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_06_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_10_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_10_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_14_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_14_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_05_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_05_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_05_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_05_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_17_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_17_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_64_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_64_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_67_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_67_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_63_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_63_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_08_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_08_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_10_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_10_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_63_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_63_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_18_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_18_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_08_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_08_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_65_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_65_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_41_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_41_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_13_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_13_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_21_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_21_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_32_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_32_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_04_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_04_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_66_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_66_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_18_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_18_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_11_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_11_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_07_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_07_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_09_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_09_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_44_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_44_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_34_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_34_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_34_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_34_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_07_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_07_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_07_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_07_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_01_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_01_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_44_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_44_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_31_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_31_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_11_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_11_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_51_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_51_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_65_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_65_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_61_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_61_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_04_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_04_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_09_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_09_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_04_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_04_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_12_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_12_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_06_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_06_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_13_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_13_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_61_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_61_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_16_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_16_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_05_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_05_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_31_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_31_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_10_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_10_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_14_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_14_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_02_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_02_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_06_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_06_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_44_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_44_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_01_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_01_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_02_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_02_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_31_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_31_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_03_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_03_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_17_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_17_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_21_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_21_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_66_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_66_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_15_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_15_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_21_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_21_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_51_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_51_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_14_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_14_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_08_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_08_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_67_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_67_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_67_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_67_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_16_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_16_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_10_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_10_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_01_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_01_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_12_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_12_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_04_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_04_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_13_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_13_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_32_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_32_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_11_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_11_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_17_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_17_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_66_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_66_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_51_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_51_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_42_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_42_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_32_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_32_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_42_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_42_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_64_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_64_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_18_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_18_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_18_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_18_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_08_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_08_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_02_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_02_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_42_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_42_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_16_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_16_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_03_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_03_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_64_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_64_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_34_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_34_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_51_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_51_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_41_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_41_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_14_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_14_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_13_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_13_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_67_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_67_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_34_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_34_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_65_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_65_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_61_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_61_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_03_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_03_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_07_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_07_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_64_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_64_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_31_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_31_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_65_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_65_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_15_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_15_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_45_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_45_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_15_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_15_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_02_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_02_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_09_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_09_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_06_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_06_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_42_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_42_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_41_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_41_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_21_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_21_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_44_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_44_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_63_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_63_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_17_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_17_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_05_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_05_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_66_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_66_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_15_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_15_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_16_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_16_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_09_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_09_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_11_good();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_11_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_12_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_12_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_03_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_03_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_01_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_01_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_06_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_06_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_10_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_10_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_14_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_14_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_05_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_05_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_05_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_05_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_17_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_17_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_64_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_64_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_67_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_67_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_63_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_63_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_08_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_08_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_10_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_10_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_63_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_63_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_18_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_18_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_08_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_08_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_65_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_65_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_41_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_41_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_13_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_13_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_21_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_21_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_32_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_32_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_04_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_04_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_66_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_66_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_18_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_18_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_11_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_11_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_07_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_07_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_09_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_09_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_44_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_44_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_34_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_34_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_34_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_34_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_07_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_07_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_07_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_07_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_01_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_01_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_44_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_44_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_31_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_31_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_11_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_11_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_51_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_51_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_65_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_65_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_61_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_61_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_04_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_04_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_09_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_09_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_04_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_04_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_12_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_12_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_06_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_06_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_13_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_13_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_61_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_61_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_16_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_16_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_05_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_05_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_31_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_31_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_10_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_10_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_14_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_14_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_02_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_02_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_06_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_06_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_44_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_44_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_01_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_01_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_02_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_02_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_31_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_31_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_03_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_03_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_17_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_17_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_21_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_21_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_66_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_66_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_15_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_15_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_21_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_21_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_51_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_51_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_14_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_14_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_08_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_08_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_67_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_67_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_67_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_67_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_16_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_16_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_10_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_10_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_01_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_01_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_12_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_12_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_04_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_04_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_13_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_13_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_32_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_32_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_11_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_11_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_17_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_17_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_66_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_66_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_51_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_51_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_42_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_42_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_32_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_32_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_42_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_42_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_64_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_64_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_18_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_18_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_18_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_18_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_08_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_08_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_02_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_02_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_42_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_42_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_16_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_16_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_03_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_03_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_64_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_64_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_34_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_34_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_51_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_51_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_41_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_41_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_14_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_14_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_13_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_13_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_67_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_67_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_34_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_34_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_65_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_65_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_61_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_61_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_03_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_03_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_07_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_07_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_64_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_64_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_31_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_31_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_65_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_65_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_15_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_15_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_45_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_45_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_15_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_15_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_02_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_02_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_09_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_09_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_06_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_06_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_42_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_42_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_41_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_41_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_21_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_21_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_44_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_44_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_63_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_63_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_17_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_17_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_05_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_05_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_66_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_66_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_15_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_15_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_16_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_16_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_09_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_09_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_11_bad();");
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_11_bad();
  return 0;
}
// 6201C4: using guessed type int globalArgc;
// 6201C8: using guessed type __int64 globalArgv;

//----- (0000000000402438) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_04_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x32uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (00000000004024BE) ----------------------------------------------------
void goodG2B1()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000402550) ----------------------------------------------------
void goodG2B2()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (00000000004025D6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_04_good()
{
  goodG2B1();
  goodG2B2();
}

//----- (00000000004025F0) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54c_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54d_badSink(a1);
}

//----- (000000000040260A) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54c_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54d_goodG2BSink(a1);
}

//----- (0000000000402624) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_17_bad()
{
  char dest[8]; // [rsp+0h] [rbp-50h]
  char v1; // [rsp+8h] [rbp-48h]
  __int16 v2; // [rsp+30h] [rbp-20h]
  void *s; // [rsp+40h] [rbp-10h]
  int i; // [rsp+4Ch] [rbp-4h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  for ( i = 0; i <= 0; ++i )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (00000000004026D2) ----------------------------------------------------
void goodG2B()
{
  char dest[8]; // [rsp+0h] [rbp-50h]
  char v1; // [rsp+8h] [rbp-48h]
  __int16 v2; // [rsp+30h] [rbp-20h]
  void *s; // [rsp+40h] [rbp-10h]
  int i; // [rsp+4Ch] [rbp-4h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  for ( i = 0; i <= 0; ++i )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000402780) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_17_good()
{
  goodG2B();
}

//----- (0000000000402790) ----------------------------------------------------
void __fastcall badSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (00000000004027EF) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_44_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))badSink)(s);
}

//----- (000000000040284E) ----------------------------------------------------
void __fastcall goodG2BSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (00000000004028AD) ----------------------------------------------------
__int64 goodG2B_0()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))goodG2BSink)(s);
}

//----- (000000000040290C) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_44_good()
{
  return goodG2B_0();
}

//----- (000000000040291C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_07_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( staticFive == 5 )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 6200DC: using guessed type int staticFive;

//----- (00000000004029A4) ----------------------------------------------------
void goodG2B1_0()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( staticFive == 5 )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 6200DC: using guessed type int staticFive;

//----- (0000000000402A38) ----------------------------------------------------
void goodG2B2_0()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( staticFive == 5 )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 6200DC: using guessed type int staticFive;

//----- (0000000000402AC0) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_07_good()
{
  goodG2B1_0();
  goodG2B2_0();
}

//----- (0000000000402ADA) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54b_badSink(s);
}

//----- (0000000000402B30) ----------------------------------------------------
void goodG2B_1()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54b_goodG2BSink(s);
}

//----- (0000000000402B86) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54_good()
{
  goodG2B_1();
}

//----- (0000000000402B96) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_11_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( (unsigned int)globalReturnsTrue() )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000402C3F) ----------------------------------------------------
void goodG2B1_1()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( (unsigned int)globalReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000402CF4) ----------------------------------------------------
void goodG2B2_1()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( (unsigned int)globalReturnsTrue() )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000402D9D) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_11_good()
{
  goodG2B1_1();
  goodG2B2_1();
}

//----- (0000000000402DB7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_02_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000402E52) ----------------------------------------------------
void goodG2B1_2()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000402EED) ----------------------------------------------------
void goodG2B2_2()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000402F88) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_02_good()
{
  goodG2B1_2();
  goodG2B2_2();
}

//----- (0000000000402FA2) ----------------------------------------------------
_BYTE *__fastcall badSource(_BYTE *a1)
{
  memset(a1, 65, 0x63uLL);
  a1[99] = 0;
  return a1;
}

//----- (0000000000402FD5) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_42_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  src = badSource(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, src);
  printLine(src);
  free(src);
}

//----- (000000000040305F) ----------------------------------------------------
_BYTE *__fastcall goodG2BSource(_BYTE *a1)
{
  memset(a1, 65, 0x31uLL);
  a1[49] = 0;
  return a1;
}

//----- (0000000000403092) ----------------------------------------------------
void goodG2B_2()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  src = goodG2BSource(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, src);
  printLine(src);
  free(src);
}

//----- (000000000040311C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_42_good()
{
  goodG2B_2();
}

//----- (000000000040312C) ----------------------------------------------------
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_badSource(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_badGlobal )
  {
    v2 = malloc(0x32uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 0;
  }
  return v2;
}
// 620120: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_badGlobal;

//----- (000000000040316E) ----------------------------------------------------
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_goodG2B1Source(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_goodG2B1Global )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    v2 = malloc(0x64uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 0;
  }
  return v2;
}
// 620124: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_goodG2B1Global;

//----- (00000000004031BC) ----------------------------------------------------
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_goodG2B2Source(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_goodG2B2Global )
  {
    v2 = malloc(0x64uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 0;
  }
  return v2;
}
// 620128: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_goodG2B2Global;

//----- (00000000004031FE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_05_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( staticTrue )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 6200E0: using guessed type int staticTrue;

//----- (0000000000403285) ----------------------------------------------------
void goodG2B1_3()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( staticFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 62010C: using guessed type int staticFalse;

//----- (0000000000403318) ----------------------------------------------------
void goodG2B2_3()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( staticTrue )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 6200E0: using guessed type int staticTrue;

//----- (000000000040339F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_05_good()
{
  goodG2B1_3();
  goodG2B2_3();
}

//----- (00000000004033B9) ----------------------------------------------------
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_61b_badSource(_BYTE *a1)
{
  memset(a1, 65, 0x63uLL);
  a1[99] = 0;
  return a1;
}

//----- (00000000004033EC) ----------------------------------------------------
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_61b_goodG2BSource(_BYTE *a1)
{
  memset(a1, 65, 0x31uLL);
  a1[49] = 0;
  return a1;
}

//----- (000000000040341F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_10_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( globalTrue )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 6200FC: using guessed type int globalTrue;

//----- (00000000004034C4) ----------------------------------------------------
void goodG2B1_4()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( globalFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 6201C0: using guessed type int globalFalse;

//----- (0000000000403575) ----------------------------------------------------
void goodG2B2_4()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( globalTrue )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 6200FC: using guessed type int globalTrue;

//----- (000000000040361A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_10_good()
{
  goodG2B1_4();
  goodG2B2_4();
}

//----- (0000000000403634) ----------------------------------------------------
void badSink_0()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_badData;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 620110: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_badData;

//----- (000000000040368E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_bad()
{
  _BYTE *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_badData = (__int64)v0;
  badSink_0();
}
// 620110: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_badData;

//----- (00000000004036DB) ----------------------------------------------------
void goodG2BSink_0()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_goodG2BData;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 620118: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_goodG2BData;

//----- (0000000000403735) ----------------------------------------------------
void goodG2B_3()
{
  _BYTE *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_goodG2BData = (__int64)v0;
  goodG2BSink_0();
}
// 620118: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_goodG2BData;

//----- (0000000000403782) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_good()
{
  goodG2B_3();
}

//----- (0000000000403792) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_65b_badSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (00000000004037F1) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_65b_goodG2BSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (0000000000403850) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_06_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x32uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (00000000004038D7) ----------------------------------------------------
void goodG2B1_5()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040396A) ----------------------------------------------------
void goodG2B2_5()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (00000000004039F1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_06_good()
{
  goodG2B1_5();
  goodG2B2_5();
}

//----- (0000000000403A0B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_01_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000403AA6) ----------------------------------------------------
void goodG2B_4()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000403B41) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_01_good()
{
  goodG2B_4();
}

//----- (0000000000403B51) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_badGlobal = 1;
  dest = CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_badSource(0LL);
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 620120: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_badGlobal;

//----- (0000000000403BC2) ----------------------------------------------------
void goodG2B1_6()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_goodG2B1Global = 0;
  dest = CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_goodG2B1Source(0LL);
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 620124: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_goodG2B1Global;

//----- (0000000000403C33) ----------------------------------------------------
void goodG2B2_6()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_goodG2B2Global = 1;
  dest = CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_goodG2B2Source(0LL);
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 620128: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_goodG2B2Global;

//----- (0000000000403CA4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_22_good()
{
  goodG2B1_6();
  goodG2B2_6();
}

//----- (0000000000403CBE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_61_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  src = CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_61b_badSource(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, src);
  printLine(src);
  free(src);
}

//----- (0000000000403D48) ----------------------------------------------------
void goodG2B_5()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  src = CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_61b_goodG2BSource(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, src);
  printLine(src);
  free(src);
}

//----- (0000000000403DD2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_61_good()
{
  goodG2B_5();
}

//----- (0000000000403DE2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_16_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x32uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000403E60) ----------------------------------------------------
void goodG2B_6()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000403EDE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_16_good()
{
  goodG2B_6();
}

//----- (0000000000403EEE) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53d_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (0000000000403F41) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53d_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (0000000000403F94) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_05_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( staticTrue_0 )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 6200E4: using guessed type int staticTrue_0;

//----- (000000000040401B) ----------------------------------------------------
void goodG2B1_7()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( staticFalse_0 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 62012C: using guessed type int staticFalse_0;

//----- (00000000004040AE) ----------------------------------------------------
void goodG2B2_7()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( staticTrue_0 )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 6200E4: using guessed type int staticTrue_0;

//----- (0000000000404135) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_05_good()
{
  goodG2B1_7();
  goodG2B2_7();
}

//----- (000000000040414F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_07_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( staticFive_0 == 5 )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 6200E8: using guessed type int staticFive_0;

//----- (00000000004041F5) ----------------------------------------------------
void goodG2B1_8()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( staticFive_0 == 5 )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 6200E8: using guessed type int staticFive_0;

//----- (00000000004042A7) ----------------------------------------------------
void goodG2B2_8()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( staticFive_0 == 5 )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 6200E8: using guessed type int staticFive_0;

//----- (000000000040434D) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_07_good()
{
  goodG2B1_8();
  goodG2B2_8();
}

//----- (0000000000404367) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_41_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (00000000004043BA) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_41_bad()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_41_badSink(v0);
}

//----- (00000000004043FE) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_41_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (0000000000404451) ----------------------------------------------------
void goodG2B_7()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_41_goodG2BSink(v0);
}

//----- (0000000000404495) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_41_good()
{
  goodG2B_7();
}

//----- (00000000004044A5) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_17_bad()
{
  char dest[8]; // [rsp+0h] [rbp-50h]
  char v1; // [rsp+8h] [rbp-48h]
  __int16 v2; // [rsp+30h] [rbp-20h]
  void *s; // [rsp+40h] [rbp-10h]
  int i; // [rsp+4Ch] [rbp-4h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  for ( i = 0; i <= 0; ++i )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000404553) ----------------------------------------------------
void goodG2B_8()
{
  char dest[8]; // [rsp+0h] [rbp-50h]
  char v1; // [rsp+8h] [rbp-48h]
  __int16 v2; // [rsp+30h] [rbp-20h]
  void *s; // [rsp+40h] [rbp-10h]
  int i; // [rsp+4Ch] [rbp-4h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  for ( i = 0; i <= 0; ++i )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000404601) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_17_good()
{
  goodG2B_8();
}

//----- (0000000000404611) ----------------------------------------------------
void __fastcall badSink_1(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (0000000000404670) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_44_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))badSink_1)(s);
}

//----- (00000000004046CF) ----------------------------------------------------
void __fastcall goodG2BSink_1(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (000000000040472E) ----------------------------------------------------
__int64 goodG2B_9()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))goodG2BSink_1)(s);
}

//----- (000000000040478D) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_44_good()
{
  return goodG2B_9();
}

//----- (000000000040479D) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53b_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53c_badSink(a1);
}

//----- (00000000004047B7) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53b_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53c_goodG2BSink(a1);
}

//----- (00000000004047D1) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52c_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (0000000000404824) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52c_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (0000000000404877) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_51_bad()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_51b_badSink(v0);
}

//----- (00000000004048BB) ----------------------------------------------------
void goodG2B_10()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_51b_goodG2BSink(v0);
}

//----- (00000000004048FF) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_51_good()
{
  goodG2B_10();
}

//----- (000000000040490F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_34_bad()
{
  char s; // [rsp+0h] [rbp-90h]
  char v1; // [rsp+63h] [rbp-2Dh]
  char *v2; // [rsp+70h] [rbp-20h]
  char *dest; // [rsp+80h] [rbp-10h]
  char *v4; // [rsp+88h] [rbp-8h]

  v4 = (char *)malloc(0x32uLL);
  if ( !v4 )
    exit(-1);
  *v4 = 0;
  v2 = v4;
  dest = v4;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (00000000004049A5) ----------------------------------------------------
void goodG2B_11()
{
  char s; // [rsp+0h] [rbp-90h]
  char v1; // [rsp+63h] [rbp-2Dh]
  char *v2; // [rsp+70h] [rbp-20h]
  char *dest; // [rsp+80h] [rbp-10h]
  char *v4; // [rsp+88h] [rbp-8h]

  v4 = (char *)malloc(0x64uLL);
  if ( !v4 )
    exit(-1);
  *v4 = 0;
  v2 = v4;
  dest = v4;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000404A3B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_34_good()
{
  goodG2B_11();
}

//----- (0000000000404A4B) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_66b_badSink(__int64 a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = *(char **)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000404AAA) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_66b_goodG2BSink(__int64 a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = *(char **)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000404B09) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_63b_badSink(char **a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]
  char *src; // [rsp+48h] [rbp-8h]

  src = *a1;
  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, src);
  printLine(src);
  free(src);
}

//----- (0000000000404B73) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_63b_goodG2BSink(char **a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]
  char *src; // [rsp+48h] [rbp-8h]

  src = *a1;
  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, src);
  printLine(src);
  free(src);
}

//----- (0000000000404BDD) ----------------------------------------------------
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_61b_badSource(_BYTE *a1)
{
  memset(a1, 65, 0x63uLL);
  a1[99] = 0;
  return a1;
}

//----- (0000000000404C10) ----------------------------------------------------
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_61b_goodG2BSource(_BYTE *a1)
{
  memset(a1, 65, 0x31uLL);
  a1[49] = 0;
  return a1;
}

//----- (0000000000404C43) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_10_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( globalTrue )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 6200FC: using guessed type int globalTrue;

//----- (0000000000404CE8) ----------------------------------------------------
void goodG2B1_9()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( globalFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 6201C0: using guessed type int globalFalse;

//----- (0000000000404D99) ----------------------------------------------------
void goodG2B2_9()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( globalTrue )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 6200FC: using guessed type int globalTrue;

//----- (0000000000404E3E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_10_good()
{
  goodG2B1_9();
  goodG2B2_9();
}

//----- (0000000000404E58) ----------------------------------------------------
void badSink_2()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_45_badData;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 620130: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_45_badData;

//----- (0000000000404EB2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_45_bad()
{
  _BYTE *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_45_badData = (__int64)v0;
  badSink_2();
}
// 620130: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_45_badData;

//----- (0000000000404EFF) ----------------------------------------------------
void goodG2BSink_2()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_45_goodG2BData;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 620138: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_45_goodG2BData;

//----- (0000000000404F59) ----------------------------------------------------
void goodG2B_12()
{
  _BYTE *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_45_goodG2BData = (__int64)v0;
  goodG2BSink_2();
}
// 620138: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_45_goodG2BData;

//----- (0000000000404FA6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_45_good()
{
  goodG2B_12();
}

//----- (0000000000404FB6) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54d_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54e_badSink(a1);
}

//----- (0000000000404FD0) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54d_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54e_goodG2BSink(a1);
}

//----- (0000000000404FEA) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53_bad()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53b_badSink(v0);
}

//----- (000000000040502E) ----------------------------------------------------
void goodG2B_13()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53b_goodG2BSink(v0);
}

//----- (0000000000405072) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53_good()
{
  goodG2B_13();
}

//----- (0000000000405082) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_06_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x32uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000405109) ----------------------------------------------------
void goodG2B1_10()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040519C) ----------------------------------------------------
void goodG2B2_10()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000405223) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_06_good()
{
  goodG2B1_10();
  goodG2B2_10();
}

//----- (000000000040523D) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54c_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54d_badSink(a1);
}

//----- (0000000000405257) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54c_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54d_goodG2BSink(a1);
}

//----- (0000000000405271) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_01_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040530C) ----------------------------------------------------
void goodG2B_14()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (00000000004053A7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_01_good()
{
  goodG2B_14();
}

//----- (00000000004053B7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_13_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 417FCC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040545D) ----------------------------------------------------
void goodG2B1_11()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 417FCC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040550F) ----------------------------------------------------
void goodG2B2_11()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 417FCC: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004055B5) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_13_good()
{
  goodG2B1_11();
  goodG2B2_11();
}

//----- (00000000004055CF) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53d_badSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (000000000040562E) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53d_goodG2BSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (000000000040568D) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b_badSink(char **a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]
  char *src; // [rsp+48h] [rbp-8h]

  src = *a1;
  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, src);
  printLine(src);
  free(src);
}

//----- (00000000004056F7) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b_goodG2BSink(char **a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]
  char *src; // [rsp+48h] [rbp-8h]

  src = *a1;
  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, src);
  printLine(src);
  free(src);
}

//----- (0000000000405761) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54e_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (00000000004057B4) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54e_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (0000000000405807) ----------------------------------------------------
void __fastcall badSink_3(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (000000000040585A) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_44_bad()
{
  _BYTE *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x32uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 0;
  return ((__int64 (__fastcall *)(_BYTE *))badSink_3)(v1);
}

//----- (00000000004058A7) ----------------------------------------------------
void __fastcall goodG2BSink_3(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (00000000004058FA) ----------------------------------------------------
__int64 goodG2B_15()
{
  _BYTE *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x64uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 0;
  return ((__int64 (__fastcall *)(_BYTE *))goodG2BSink_3)(v1);
}

//----- (0000000000405947) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_44_good()
{
  return goodG2B_15();
}

//----- (0000000000405957) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_61_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  src = CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_61b_badSource(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, src);
  printLine(src);
  free(src);
}

//----- (00000000004059E1) ----------------------------------------------------
void goodG2B_16()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  src = CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_61b_goodG2BSource(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, src);
  printLine(src);
  free(src);
}

//----- (0000000000405A6B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_61_good()
{
  goodG2B_16();
}

//----- (0000000000405A7B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_31_bad()
{
  char s; // [rsp+0h] [rbp-80h]
  char v1; // [rsp+63h] [rbp-1Dh]
  char *dest; // [rsp+68h] [rbp-18h]
  char *v3; // [rsp+70h] [rbp-10h]
  char *v4; // [rsp+78h] [rbp-8h]

  v4 = (char *)malloc(0x32uLL);
  if ( !v4 )
    exit(-1);
  *v4 = 0;
  v3 = v4;
  dest = v4;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000405B08) ----------------------------------------------------
void goodG2B_17()
{
  char s; // [rsp+0h] [rbp-80h]
  char v1; // [rsp+63h] [rbp-1Dh]
  char *dest; // [rsp+68h] [rbp-18h]
  char *v3; // [rsp+70h] [rbp-10h]
  char *v4; // [rsp+78h] [rbp-8h]

  v4 = (char *)malloc(0x64uLL);
  if ( !v4 )
    exit(-1);
  *v4 = 0;
  v3 = v4;
  dest = v4;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000405B95) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_31_good()
{
  goodG2B_17();
}

//----- (0000000000405BA5) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_09_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( GLOBAL_CONST_TRUE )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 417FC4: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000405C4A) ----------------------------------------------------
void goodG2B1_12()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( GLOBAL_CONST_FALSE )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 417FC8: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000405CFB) ----------------------------------------------------
void goodG2B2_12()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( GLOBAL_CONST_TRUE )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 417FC4: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000405DA0) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_09_good()
{
  goodG2B1_12();
  goodG2B2_12();
}

//----- (0000000000405DBA) ----------------------------------------------------
_BYTE *__fastcall badSource_0(_BYTE *a1)
{
  if ( badStatic )
  {
    memset(a1, 65, 0x63uLL);
    a1[99] = 0;
  }
  return a1;
}
// 620140: using guessed type int badStatic;

//----- (0000000000405DF7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_21_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  badStatic = 1;
  src = badSource_0(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, src);
  printLine(src);
  free(src);
}
// 620140: using guessed type int badStatic;

//----- (0000000000405E8B) ----------------------------------------------------
_BYTE *__fastcall goodG2B1Source(_BYTE *a1)
{
  if ( goodG2B1Static )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    memset(a1, 65, 0x31uLL);
    a1[49] = 0;
  }
  return a1;
}
// 620144: using guessed type int goodG2B1Static;

//----- (0000000000405ED4) ----------------------------------------------------
void goodG2B1_13()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  goodG2B1Static = 0;
  src = goodG2B1Source(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, src);
  printLine(src);
  free(src);
}
// 620144: using guessed type int goodG2B1Static;

//----- (0000000000405F68) ----------------------------------------------------
_BYTE *__fastcall goodG2B2Source(_BYTE *a1)
{
  if ( goodG2B2Static )
  {
    memset(a1, 65, 0x31uLL);
    a1[49] = 0;
  }
  return a1;
}
// 620148: using guessed type int goodG2B2Static;

//----- (0000000000405FA5) ----------------------------------------------------
void goodG2B2_13()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  goodG2B2Static = 1;
  src = goodG2B2Source(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, src);
  printLine(src);
  free(src);
}
// 620148: using guessed type int goodG2B2Static;

//----- (0000000000406039) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_21_good()
{
  goodG2B1_13();
  goodG2B2_13();
}

//----- (0000000000406053) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_03_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (00000000004060EE) ----------------------------------------------------
void goodG2B1_14()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000406189) ----------------------------------------------------
void goodG2B2_14()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000406224) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_03_good()
{
  goodG2B1_14();
  goodG2B2_14();
}

//----- (000000000040623E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63_bad()
{
  void *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b_badSink((char **)&s);
}

//----- (0000000000406296) ----------------------------------------------------
void goodG2B_18()
{
  void *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b_goodG2BSink((char **)&s);
}

//----- (00000000004062EE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63_good()
{
  goodG2B_18();
}

//----- (00000000004062FE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_14_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( globalFive == 5 )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 620100: using guessed type int globalFive;

//----- (0000000000406386) ----------------------------------------------------
void goodG2B1_15()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( globalFive == 5 )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 620100: using guessed type int globalFive;

//----- (000000000040641A) ----------------------------------------------------
void goodG2B2_15()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( globalFive == 5 )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 620100: using guessed type int globalFive;

//----- (00000000004064A2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_14_good()
{
  goodG2B1_15();
  goodG2B2_15();
}

//----- (00000000004064BC) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_32_bad()
{
  char s; // [rsp+0h] [rbp-90h]
  char v1; // [rsp+63h] [rbp-2Dh]
  __int64 v2; // [rsp+68h] [rbp-28h]
  char *dest; // [rsp+70h] [rbp-20h]
  _BYTE *v4; // [rsp+78h] [rbp-18h]
  char **v5; // [rsp+80h] [rbp-10h]
  __int64 *v6; // [rsp+88h] [rbp-8h]

  v6 = &v2;
  v5 = (char **)&v2;
  v2 = 0LL;
  v4 = 0LL;
  v4 = malloc(0x32uLL);
  if ( !v4 )
    exit(-1);
  *v4 = 0;
  *v6 = (__int64)v4;
  dest = *v5;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000406573) ----------------------------------------------------
void goodG2B_19()
{
  char s; // [rsp+0h] [rbp-90h]
  char v1; // [rsp+63h] [rbp-2Dh]
  __int64 v2; // [rsp+68h] [rbp-28h]
  char *dest; // [rsp+70h] [rbp-20h]
  _BYTE *v4; // [rsp+78h] [rbp-18h]
  char **v5; // [rsp+80h] [rbp-10h]
  __int64 *v6; // [rsp+88h] [rbp-8h]

  v6 = &v2;
  v5 = (char **)&v2;
  v2 = 0LL;
  v4 = 0LL;
  v4 = malloc(0x64uLL);
  if ( !v4 )
    exit(-1);
  *v4 = 0;
  *v6 = (__int64)v4;
  dest = *v5;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040662A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_32_good()
{
  goodG2B_19();
}

//----- (000000000040663A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_18_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (00000000004066D6) ----------------------------------------------------
void goodG2B_20()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000406772) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_18_good()
{
  goodG2B_20();
}

//----- (0000000000406782) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_67b_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = a1;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (00000000004067DD) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_67b_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = a1;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000406838) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54b_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54c_badSink(a1);
}

//----- (0000000000406852) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54b_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54c_goodG2BSink(a1);
}

//----- (000000000040686C) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53d_badSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (00000000004068CB) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53d_goodG2BSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (000000000040692A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_12_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  else
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (00000000004069F6) ----------------------------------------------------
void goodG2B_21()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  globalReturnsTrueOrFalse();
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000406AC2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_12_good()
{
  goodG2B_21();
}

//----- (0000000000406AD2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_63_bad()
{
  void *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_63b_badSink((char **)&s);
}

//----- (0000000000406B2A) ----------------------------------------------------
void goodG2B_22()
{
  void *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_63b_goodG2BSink((char **)&s);
}

//----- (0000000000406B82) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_63_good()
{
  goodG2B_22();
}

//----- (0000000000406B92) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54c_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54d_badSink(a1);
}

//----- (0000000000406BAC) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54c_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54d_goodG2BSink(a1);
}

//----- (0000000000406BC6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_16_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x32uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000406C44) ----------------------------------------------------
void goodG2B_23()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000406CC2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_16_good()
{
  goodG2B_23();
}

//----- (0000000000406CD2) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52b_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c_badSink(a1);
}

//----- (0000000000406CEC) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52b_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c_goodG2BSink(a1);
}

//----- (0000000000406D06) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53b_badSink(s);
}

//----- (0000000000406D5C) ----------------------------------------------------
void goodG2B_24()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53b_goodG2BSink(s);
}

//----- (0000000000406DB2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53_good()
{
  goodG2B_24();
}

//----- (0000000000406DC2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_06_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000406E67) ----------------------------------------------------
void goodG2B1_16()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000406F18) ----------------------------------------------------
void goodG2B2_16()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000406FBD) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_06_good()
{
  goodG2B1_16();
  goodG2B2_16();
}

//----- (0000000000406FD7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_04_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x32uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040705D) ----------------------------------------------------
void goodG2B1_17()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (00000000004070EF) ----------------------------------------------------
void goodG2B2_17()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000407175) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_04_good()
{
  goodG2B1_17();
  goodG2B2_17();
}

//----- (000000000040718F) ----------------------------------------------------
__int64 staticReturnsTrue()
{
  return 1LL;
}

//----- (000000000040719A) ----------------------------------------------------
__int64 staticReturnsFalse()
{
  return 0LL;
}

//----- (00000000004071A5) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_08_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)staticReturnsTrue() )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000407230) ----------------------------------------------------
void goodG2B1_18()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)staticReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (00000000004072C7) ----------------------------------------------------
void goodG2B2_18()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)staticReturnsTrue() )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000407352) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_08_good()
{
  goodG2B1_18();
  goodG2B2_18();
}

//----- (000000000040736C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52_bad()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52b_badSink(v0);
}

//----- (00000000004073B0) ----------------------------------------------------
void goodG2B_25()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52b_goodG2BSink(v0);
}

//----- (00000000004073F4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52_good()
{
  goodG2B_25();
}

//----- (0000000000407404) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_02_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x32uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000407481) ----------------------------------------------------
void goodG2B1_19()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (00000000004074FE) ----------------------------------------------------
void goodG2B2_19()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040757B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_02_good()
{
  goodG2B1_19();
  goodG2B2_19();
}

//----- (0000000000407595) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_67_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_67b_badSink(s);
}

//----- (00000000004075F3) ----------------------------------------------------
void goodG2B_26()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_67b_goodG2BSink(s);
}

//----- (0000000000407651) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_67_good()
{
  goodG2B_26();
}

//----- (0000000000407661) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_17_bad()
{
  char s; // [rsp+0h] [rbp-80h]
  char v1; // [rsp+63h] [rbp-1Dh]
  char *dest; // [rsp+70h] [rbp-10h]
  int i; // [rsp+7Ch] [rbp-4h]

  dest = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (00000000004076F1) ----------------------------------------------------
void goodG2B_27()
{
  char s; // [rsp+0h] [rbp-80h]
  char v1; // [rsp+63h] [rbp-1Dh]
  char *dest; // [rsp+70h] [rbp-10h]
  int i; // [rsp+7Ch] [rbp-4h]

  dest = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000407781) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_17_good()
{
  goodG2B_27();
}

//----- (0000000000407791) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_66_bad()
{
  char v0; // [rsp+0h] [rbp-30h]
  void *v1; // [rsp+10h] [rbp-20h]
  void *s; // [rsp+28h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = s;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_66b_badSink((__int64)&v0);
}

//----- (00000000004077EF) ----------------------------------------------------
void goodG2B_28()
{
  char v0; // [rsp+0h] [rbp-30h]
  void *v1; // [rsp+10h] [rbp-20h]
  void *s; // [rsp+28h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  v1 = s;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_66b_goodG2BSink((__int64)&v0);
}

//----- (000000000040784D) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_66_good()
{
  goodG2B_28();
}

//----- (000000000040785D) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53b_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53c_badSink(a1);
}

//----- (0000000000407877) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53b_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53c_goodG2BSink(a1);
}

//----- (0000000000407891) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54_bad()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54b_badSink(v0);
}

//----- (00000000004078D5) ----------------------------------------------------
void goodG2B_29()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54b_goodG2BSink(v0);
}

//----- (0000000000407919) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54_good()
{
  goodG2B_29();
}

//----- (0000000000407929) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_67_bad()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_67b_badSink(v0);
}

//----- (0000000000407975) ----------------------------------------------------
void goodG2B_30()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_67b_goodG2BSink(v0);
}

//----- (00000000004079C1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_67_good()
{
  goodG2B_30();
}

//----- (00000000004079D1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_11_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000407A5C) ----------------------------------------------------
void goodG2B1_20()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000407AF3) ----------------------------------------------------
void goodG2B2_20()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000407B7E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_11_good()
{
  goodG2B1_20();
  goodG2B2_20();
}

//----- (0000000000407B98) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_02_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x32uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000407C15) ----------------------------------------------------
void goodG2B1_21()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000407C92) ----------------------------------------------------
void goodG2B2_21()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000407D0F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_02_good()
{
  goodG2B1_21();
  goodG2B2_21();
}

//----- (0000000000407D29) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52b_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52c_badSink(a1);
}

//----- (0000000000407D43) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52b_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52c_goodG2BSink(a1);
}

//----- (0000000000407D5D) ----------------------------------------------------
_BYTE *CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_61b_badSource()
{
  _BYTE *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x32uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 0;
  return v1;
}

//----- (0000000000407D95) ----------------------------------------------------
_BYTE *CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_61b_goodG2BSource()
{
  _BYTE *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x64uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 0;
  return v1;
}

//----- (0000000000407DCD) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_10_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( globalTrue )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 6200FC: using guessed type int globalTrue;

//----- (0000000000407E54) ----------------------------------------------------
void goodG2B1_22()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( globalFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 6201C0: using guessed type int globalFalse;

//----- (0000000000407EE7) ----------------------------------------------------
void goodG2B2_22()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( globalTrue )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 6200FC: using guessed type int globalTrue;

//----- (0000000000407F6E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_10_good()
{
  goodG2B1_22();
  goodG2B2_22();
}

//----- (0000000000407F88) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_14_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( globalFive == 5 )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 620100: using guessed type int globalFive;

//----- (000000000040802E) ----------------------------------------------------
void goodG2B1_23()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( globalFive == 5 )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 620100: using guessed type int globalFive;

//----- (00000000004080E0) ----------------------------------------------------
void goodG2B2_23()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( globalFive == 5 )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 620100: using guessed type int globalFive;

//----- (0000000000408186) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_14_good()
{
  goodG2B1_23();
  goodG2B2_23();
}

//----- (00000000004081A0) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_32_bad()
{
  char dest[8]; // [rsp+0h] [rbp-60h]
  char v1; // [rsp+8h] [rbp-58h]
  __int16 v2; // [rsp+30h] [rbp-30h]
  void *v3; // [rsp+38h] [rbp-28h]
  char *src; // [rsp+40h] [rbp-20h]
  void *s; // [rsp+48h] [rbp-18h]
  char **v6; // [rsp+50h] [rbp-10h]
  void **v7; // [rsp+58h] [rbp-8h]

  v7 = &v3;
  v6 = (char **)&v3;
  v3 = malloc(0x64uLL);
  if ( !v3 )
    exit(-1);
  s = *v7;
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  *v7 = s;
  src = *v6;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, src);
  printLine(src);
  free(src);
}

//----- (000000000040826E) ----------------------------------------------------
void goodG2B_31()
{
  char dest[8]; // [rsp+0h] [rbp-60h]
  char v1; // [rsp+8h] [rbp-58h]
  __int16 v2; // [rsp+30h] [rbp-30h]
  void *v3; // [rsp+38h] [rbp-28h]
  char *src; // [rsp+40h] [rbp-20h]
  void *s; // [rsp+48h] [rbp-18h]
  char **v6; // [rsp+50h] [rbp-10h]
  void **v7; // [rsp+58h] [rbp-8h]

  v7 = &v3;
  v6 = (char **)&v3;
  v3 = malloc(0x64uLL);
  if ( !v3 )
    exit(-1);
  s = *v7;
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *v7 = s;
  src = *v6;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, src);
  printLine(src);
  free(src);
}

//----- (000000000040833C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_32_good()
{
  goodG2B_31();
}

//----- (000000000040834C) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54c_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54d_badSink(a1);
}

//----- (0000000000408366) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54c_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54d_goodG2BSink(a1);
}

//----- (0000000000408380) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_01_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x32uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (00000000004083FD) ----------------------------------------------------
void goodG2B_32()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040847A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_01_good()
{
  goodG2B_32();
}

//----- (000000000040848A) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_67b_badSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]
  char *src; // [rsp+48h] [rbp-8h]

  src = a1;
  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, a1);
  printLine(src);
  free(src);
}

//----- (00000000004084F1) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_67b_goodG2BSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]
  char *src; // [rsp+48h] [rbp-8h]

  src = a1;
  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, a1);
  printLine(src);
  free(src);
}

//----- (0000000000408558) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54e_badSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (00000000004085B7) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54e_goodG2BSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (0000000000408616) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53c_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53d_badSink(a1);
}

//----- (0000000000408630) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53c_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53d_goodG2BSink(a1);
}

//----- (000000000040864A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52b_badSink(s);
}

//----- (00000000004086A0) ----------------------------------------------------
void goodG2B_33()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52b_goodG2BSink(s);
}

//----- (00000000004086F6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52_good()
{
  goodG2B_33();
}

//----- (0000000000408706) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_64_bad()
{
  void *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_64b_badSink((char **)&s);
}

//----- (000000000040875E) ----------------------------------------------------
void goodG2B_34()
{
  void *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_64b_goodG2BSink((char **)&s);
}

//----- (00000000004087B6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_64_good()
{
  goodG2B_34();
}

//----- (00000000004087C6) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_51b_badSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (0000000000408825) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_51b_goodG2BSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (0000000000408884) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_51_bad()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_51b_badSink(v0);
}

//----- (00000000004088C8) ----------------------------------------------------
void goodG2B_35()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_51b_goodG2BSink(v0);
}

//----- (000000000040890C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_51_good()
{
  goodG2B_35();
}

//----- (000000000040891C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_61_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_61b_badSource();
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000408983) ----------------------------------------------------
void goodG2B_36()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_61b_goodG2BSource();
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (00000000004089EA) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_61_good()
{
  goodG2B_36();
}

//----- (00000000004089FA) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_16_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000408A96) ----------------------------------------------------
void goodG2B_37()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000408B32) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_16_good()
{
  goodG2B_37();
}

//----- (0000000000408B42) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_04_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000408BE6) ----------------------------------------------------
void goodG2B1_24()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000408C96) ----------------------------------------------------
void goodG2B2_24()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000408D3A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_04_good()
{
  goodG2B1_24();
  goodG2B2_24();
}

//----- (0000000000408D54) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_65_bad()
{
  _BYTE *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x32uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 0;
  return ((__int64 (__fastcall *)(_BYTE *))CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_65b_badSink)(v1);
}

//----- (0000000000408DA1) ----------------------------------------------------
__int64 goodG2B_38()
{
  _BYTE *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x64uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 0;
  return ((__int64 (__fastcall *)(_BYTE *))CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_65b_goodG2BSink)(v1);
}

//----- (0000000000408DEE) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_65_good()
{
  return goodG2B_38();
}

//----- (0000000000408DFE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_15_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x32uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000408E7C) ----------------------------------------------------
void goodG2B1_25()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000408EFA) ----------------------------------------------------
void goodG2B2_25()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000408F78) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_15_good()
{
  goodG2B1_25();
  goodG2B2_25();
}

//----- (0000000000408F92) ----------------------------------------------------
__int64 staticReturnsTrue_0()
{
  return 1LL;
}

//----- (0000000000408F9D) ----------------------------------------------------
__int64 staticReturnsFalse_0()
{
  return 0LL;
}

//----- (0000000000408FA8) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_08_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000409033) ----------------------------------------------------
void goodG2B1_26()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)staticReturnsFalse_0() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (00000000004090CA) ----------------------------------------------------
void goodG2B2_26()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000409155) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_08_good()
{
  goodG2B1_26();
  goodG2B2_26();
}

//----- (000000000040916F) ----------------------------------------------------
_BYTE *badSource_1()
{
  _BYTE *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x32uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 0;
  return v1;
}

//----- (00000000004091A7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_42_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = badSource_1();
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040920E) ----------------------------------------------------
_BYTE *goodG2BSource_0()
{
  _BYTE *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x64uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 0;
  return v1;
}

//----- (0000000000409246) ----------------------------------------------------
void goodG2B_39()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = goodG2BSource_0();
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (00000000004092AD) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_42_good()
{
  goodG2B_39();
}

//----- (00000000004092BD) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_51_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_51b_badSink(s);
}

//----- (0000000000409313) ----------------------------------------------------
void goodG2B_40()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_51b_goodG2BSink(s);
}

//----- (0000000000409369) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_51_good()
{
  goodG2B_40();
}

//----- (0000000000409379) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_badGlobal = 1;
  src = CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_badSource(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, src);
  printLine(src);
  free(src);
}
// 62014C: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_badGlobal;

//----- (000000000040940D) ----------------------------------------------------
void goodG2B1_27()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_goodG2B1Global = 0;
  src = CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_goodG2B1Source(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, src);
  printLine(src);
  free(src);
}
// 620150: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_goodG2B1Global;

//----- (00000000004094A1) ----------------------------------------------------
void goodG2B2_27()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_goodG2B2Global = 1;
  src = CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_goodG2B2Source(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, src);
  printLine(src);
  free(src);
}
// 620154: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_goodG2B2Global;

//----- (0000000000409535) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_good()
{
  goodG2B1_27();
  goodG2B2_27();
}

//----- (000000000040954F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68b_badSink()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68_badData;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 6201E0: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68_badData;

//----- (00000000004095A9) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68b_goodG2BSink()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68_goodG2BData;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 6201E8: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68_goodG2BData;

//----- (0000000000409603) ----------------------------------------------------
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_badSource(_BYTE *a1)
{
  if ( CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_badGlobal )
  {
    memset(a1, 65, 0x63uLL);
    a1[99] = 0;
  }
  return a1;
}
// 620168: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_badGlobal;

//----- (0000000000409640) ----------------------------------------------------
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B1Source(_BYTE *a1)
{
  if ( CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B1Global )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    memset(a1, 65, 0x31uLL);
    a1[49] = 0;
  }
  return a1;
}
// 62016C: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B1Global;

//----- (0000000000409689) ----------------------------------------------------
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B2Source(_BYTE *a1)
{
  if ( CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B2Global )
  {
    memset(a1, 65, 0x31uLL);
    a1[49] = 0;
  }
  return a1;
}
// 620170: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B2Global;

//----- (00000000004096C6) ----------------------------------------------------
__int64 staticReturnsTrue_1()
{
  return 1LL;
}

//----- (00000000004096D1) ----------------------------------------------------
__int64 staticReturnsFalse_1()
{
  return 0LL;
}

//----- (00000000004096DC) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_08_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000409785) ----------------------------------------------------
void goodG2B1_28()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( (unsigned int)staticReturnsFalse_1() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040983A) ----------------------------------------------------
void goodG2B2_28()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (00000000004098E3) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_08_good()
{
  goodG2B1_28();
  goodG2B2_28();
}

//----- (00000000004098FD) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54b_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54c_badSink(a1);
}

//----- (0000000000409917) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54b_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54c_goodG2BSink(a1);
}

//----- (0000000000409931) ----------------------------------------------------
void badSink_4()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_badData;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_badData);
  printLine(src);
  free(src);
}
// 620158: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_badData;

//----- (0000000000409997) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_badData = (__int64)s;
  badSink_4();
}
// 620158: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_badData;

//----- (00000000004099F6) ----------------------------------------------------
void goodG2BSink_4()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_goodG2BData;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_goodG2BData);
  printLine(src);
  free(src);
}
// 620160: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_goodG2BData;

//----- (0000000000409A5C) ----------------------------------------------------
void goodG2B_41()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_goodG2BData = (__int64)s;
  goodG2BSink_4();
}
// 620160: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_goodG2BData;

//----- (0000000000409ABB) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_45_good()
{
  goodG2B_41();
}

//----- (0000000000409ACB) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_badData = (__int64)s;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68b_badSink();
}
// 6201D0: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_badData;

//----- (0000000000409B2A) ----------------------------------------------------
void goodG2B_42()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_goodG2BData = (__int64)s;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68b_goodG2BSink();
}
// 6201D8: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_goodG2BData;

//----- (0000000000409B89) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_good()
{
  goodG2B_42();
}

//----- (0000000000409B99) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_06_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000409C3E) ----------------------------------------------------
void goodG2B1_29()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000409CEF) ----------------------------------------------------
void goodG2B2_29()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000409D94) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_06_good()
{
  goodG2B1_29();
  goodG2B2_29();
}

//----- (0000000000409DAE) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (0000000000409E01) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_bad()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_badSink(v0);
}

//----- (0000000000409E45) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (0000000000409E98) ----------------------------------------------------
void goodG2B_43()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_goodG2BSink(v0);
}

//----- (0000000000409EDC) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_good()
{
  goodG2B_43();
}

//----- (0000000000409EEC) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53b_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53c_badSink(a1);
}

//----- (0000000000409F06) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53b_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53c_goodG2BSink(a1);
}

//----- (0000000000409F20) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_02_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000409FBB) ----------------------------------------------------
void goodG2B1_30()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040A056) ----------------------------------------------------
void goodG2B2_30()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040A0F1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_02_good()
{
  goodG2B1_30();
  goodG2B2_30();
}

//----- (000000000040A10B) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (000000000040A15E) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (000000000040A1B1) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53b_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53c_badSink(a1);
}

//----- (000000000040A1CB) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53b_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53c_goodG2BSink(a1);
}

//----- (000000000040A1E5) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_badGlobal = 1;
  src = CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_badSource(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, src);
  printLine(src);
  free(src);
}
// 620168: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_badGlobal;

//----- (000000000040A279) ----------------------------------------------------
void goodG2B1_31()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B1Global = 0;
  src = CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B1Source(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, src);
  printLine(src);
  free(src);
}
// 62016C: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B1Global;

//----- (000000000040A30D) ----------------------------------------------------
void goodG2B2_31()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B2Global = 1;
  src = CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B2Source(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, src);
  printLine(src);
  free(src);
}
// 620170: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B2Global;

//----- (000000000040A3A1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_good()
{
  goodG2B1_31();
  goodG2B2_31();
}

//----- (000000000040A3BB) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68_bad()
{
  _BYTE *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68_badData = (__int64)v0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68b_badSink();
}
// 6201E0: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68_badData;

//----- (000000000040A408) ----------------------------------------------------
void goodG2B_44()
{
  _BYTE *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68_goodG2BData = (__int64)v0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68b_goodG2BSink();
}
// 6201E8: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68_goodG2BData;

//----- (000000000040A455) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_68_good()
{
  goodG2B_44();
}

//----- (000000000040A465) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_67_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_67b_badSink(s);
}

//----- (000000000040A4C3) ----------------------------------------------------
void goodG2B_45()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_67b_goodG2BSink(s);
}

//----- (000000000040A521) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_67_good()
{
  goodG2B_45();
}

//----- (000000000040A531) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_badData = (__int64)s;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68b_badSink();
}
// 6201F0: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_badData;

//----- (000000000040A590) ----------------------------------------------------
void goodG2B_46()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_goodG2BData = (__int64)s;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68b_goodG2BSink();
}
// 6201F8: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_goodG2BData;

//----- (000000000040A5EF) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_good()
{
  goodG2B_46();
}

//----- (000000000040A5FF) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_66b_badSink(__int64 a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = *(char **)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040A65E) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_66b_goodG2BSink(__int64 a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = *(char **)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040A6BD) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_11_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( (unsigned int)globalReturnsTrue() )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040A766) ----------------------------------------------------
void goodG2B1_32()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( (unsigned int)globalReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040A81B) ----------------------------------------------------
void goodG2B2_32()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( (unsigned int)globalReturnsTrue() )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040A8C4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_11_good()
{
  goodG2B1_32();
  goodG2B2_32();
}

//----- (000000000040A8DE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_07_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( staticFive_1 == 5 )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 6200EC: using guessed type int staticFive_1;

//----- (000000000040A984) ----------------------------------------------------
void goodG2B1_33()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( staticFive_1 == 5 )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 6200EC: using guessed type int staticFive_1;

//----- (000000000040AA36) ----------------------------------------------------
void goodG2B2_33()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( staticFive_1 == 5 )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 6200EC: using guessed type int staticFive_1;

//----- (000000000040AADC) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_07_good()
{
  goodG2B1_33();
  goodG2B2_33();
}

//----- (000000000040AAF6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54_bad()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54b_badSink(v0);
}

//----- (000000000040AB3A) ----------------------------------------------------
void goodG2B_47()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54b_goodG2BSink(v0);
}

//----- (000000000040AB7E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54_good()
{
  goodG2B_47();
}

//----- (000000000040AB8E) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54d_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54e_badSink(a1);
}

//----- (000000000040ABA8) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54d_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_54e_goodG2BSink(a1);
}

//----- (000000000040ABC2) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_64b_badSink(char **a1)
{
  char dest[8]; // [rsp+10h] [rbp-50h]
  char v2; // [rsp+18h] [rbp-48h]
  __int16 v3; // [rsp+40h] [rbp-20h]
  char *src; // [rsp+50h] [rbp-10h]
  char **v5; // [rsp+58h] [rbp-8h]

  v5 = a1;
  src = *a1;
  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, src);
  printLine(src);
  free(src);
}

//----- (000000000040AC34) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_64b_goodG2BSink(char **a1)
{
  char dest[8]; // [rsp+10h] [rbp-50h]
  char v2; // [rsp+18h] [rbp-48h]
  __int16 v3; // [rsp+40h] [rbp-20h]
  char *src; // [rsp+50h] [rbp-10h]
  char **v5; // [rsp+58h] [rbp-8h]

  v5 = a1;
  src = *a1;
  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, src);
  printLine(src);
  free(src);
}

//----- (000000000040ACA6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53_bad()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53b_badSink(v0);
}

//----- (000000000040ACEA) ----------------------------------------------------
void goodG2B_48()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53b_goodG2BSink(v0);
}

//----- (000000000040AD2E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53_good()
{
  goodG2B_48();
}

//----- (000000000040AD3E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_13_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 417FCC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040ADE4) ----------------------------------------------------
void goodG2B1_34()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 417FCC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040AE96) ----------------------------------------------------
void goodG2B2_34()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 417FCC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040AF3C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_13_good()
{
  goodG2B1_34();
  goodG2B2_34();
}

//----- (000000000040AF56) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_14_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( globalFive == 5 )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 620100: using guessed type int globalFive;

//----- (000000000040AFFC) ----------------------------------------------------
void goodG2B1_35()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( globalFive == 5 )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 620100: using guessed type int globalFive;

//----- (000000000040B0AE) ----------------------------------------------------
void goodG2B2_35()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( globalFive == 5 )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 620100: using guessed type int globalFive;

//----- (000000000040B154) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_14_good()
{
  goodG2B1_35();
  goodG2B2_35();
}

//----- (000000000040B16E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32_bad()
{
  char dest[8]; // [rsp+0h] [rbp-60h]
  char v1; // [rsp+8h] [rbp-58h]
  __int16 v2; // [rsp+30h] [rbp-30h]
  void *v3; // [rsp+38h] [rbp-28h]
  char *src; // [rsp+40h] [rbp-20h]
  void *s; // [rsp+48h] [rbp-18h]
  char **v6; // [rsp+50h] [rbp-10h]
  void **v7; // [rsp+58h] [rbp-8h]

  v7 = &v3;
  v6 = (char **)&v3;
  v3 = malloc(0x64uLL);
  if ( !v3 )
    exit(-1);
  s = *v7;
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  *v7 = s;
  src = *v6;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, src);
  printLine(src);
  free(src);
}

//----- (000000000040B23C) ----------------------------------------------------
void goodG2B_49()
{
  char dest[8]; // [rsp+0h] [rbp-60h]
  char v1; // [rsp+8h] [rbp-58h]
  __int16 v2; // [rsp+30h] [rbp-30h]
  void *v3; // [rsp+38h] [rbp-28h]
  char *src; // [rsp+40h] [rbp-20h]
  void *s; // [rsp+48h] [rbp-18h]
  char **v6; // [rsp+50h] [rbp-10h]
  void **v7; // [rsp+58h] [rbp-8h]

  v7 = &v3;
  v6 = (char **)&v3;
  v3 = malloc(0x64uLL);
  if ( !v3 )
    exit(-1);
  s = *v7;
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *v7 = s;
  src = *v6;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, src);
  printLine(src);
  free(src);
}

//----- (000000000040B30A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32_good()
{
  goodG2B_49();
}

//----- (000000000040B31A) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54e_badSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (000000000040B379) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54e_goodG2BSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (000000000040B3D8) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54e_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (000000000040B42B) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54e_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (000000000040B47E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_66_bad()
{
  char v0; // [rsp+0h] [rbp-30h]
  _BYTE *v1; // [rsp+10h] [rbp-20h]
  _BYTE *v2; // [rsp+28h] [rbp-8h]

  v2 = malloc(0x32uLL);
  if ( !v2 )
    exit(-1);
  *v2 = 0;
  v1 = v2;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_66b_badSink((__int64)&v0);
}

//----- (000000000040B4CA) ----------------------------------------------------
void goodG2B_50()
{
  char v0; // [rsp+0h] [rbp-30h]
  _BYTE *v1; // [rsp+10h] [rbp-20h]
  _BYTE *v2; // [rsp+28h] [rbp-8h]

  v2 = malloc(0x64uLL);
  if ( !v2 )
    exit(-1);
  *v2 = 0;
  v1 = v2;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_66b_goodG2BSink((__int64)&v0);
}

//----- (000000000040B516) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_66_good()
{
  goodG2B_50();
}

//----- (000000000040B526) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_67b_badSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]
  char *src; // [rsp+48h] [rbp-8h]

  src = a1;
  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, a1);
  printLine(src);
  free(src);
}

//----- (000000000040B58D) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_67b_goodG2BSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]
  char *src; // [rsp+48h] [rbp-8h]

  src = a1;
  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, a1);
  printLine(src);
  free(src);
}

//----- (000000000040B5F4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_64_bad()
{
  void *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_64b_badSink((char **)&s);
}

//----- (000000000040B64C) ----------------------------------------------------
void goodG2B_51()
{
  void *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_64b_goodG2BSink((char **)&s);
}

//----- (000000000040B6A4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_64_good()
{
  goodG2B_51();
}

//----- (000000000040B6B4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_31_bad()
{
  char dest[8]; // [rsp+0h] [rbp-50h]
  char v1; // [rsp+8h] [rbp-48h]
  __int16 v2; // [rsp+30h] [rbp-20h]
  char *src; // [rsp+38h] [rbp-18h]
  void *v4; // [rsp+40h] [rbp-10h]
  void *s; // [rsp+48h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = s;
  src = (char *)s;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine(src);
  free(src);
}

//----- (000000000040B75F) ----------------------------------------------------
void goodG2B_52()
{
  char dest[8]; // [rsp+0h] [rbp-50h]
  char v1; // [rsp+8h] [rbp-48h]
  __int16 v2; // [rsp+30h] [rbp-20h]
  char *src; // [rsp+38h] [rbp-18h]
  void *v4; // [rsp+40h] [rbp-10h]
  void *s; // [rsp+48h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  v4 = s;
  src = (char *)s;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine(src);
  free(src);
}

//----- (000000000040B80A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_31_good()
{
  goodG2B_52();
}

//----- (000000000040B81A) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53c_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53d_badSink(a1);
}

//----- (000000000040B834) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53c_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_53d_goodG2BSink(a1);
}

//----- (000000000040B84E) ----------------------------------------------------
_BYTE *__fastcall badSource_2(_BYTE *a1)
{
  if ( badStatic_0 )
  {
    memset(a1, 65, 0x63uLL);
    a1[99] = 0;
  }
  return a1;
}
// 620174: using guessed type int badStatic_0;

//----- (000000000040B88B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_21_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  badStatic_0 = 1;
  src = badSource_2(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, src);
  printLine(src);
  free(src);
}
// 620174: using guessed type int badStatic_0;

//----- (000000000040B91F) ----------------------------------------------------
_BYTE *__fastcall goodG2B1Source_0(_BYTE *a1)
{
  if ( goodG2B1Static_0 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    memset(a1, 65, 0x31uLL);
    a1[49] = 0;
  }
  return a1;
}
// 620178: using guessed type int goodG2B1Static_0;

//----- (000000000040B968) ----------------------------------------------------
void goodG2B1_36()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  goodG2B1Static_0 = 0;
  src = goodG2B1Source_0(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, src);
  printLine(src);
  free(src);
}
// 620178: using guessed type int goodG2B1Static_0;

//----- (000000000040B9FC) ----------------------------------------------------
_BYTE *__fastcall goodG2B2Source_0(_BYTE *a1)
{
  if ( goodG2B2Static_0 )
  {
    memset(a1, 65, 0x31uLL);
    a1[49] = 0;
  }
  return a1;
}
// 62017C: using guessed type int goodG2B2Static_0;

//----- (000000000040BA39) ----------------------------------------------------
void goodG2B2_36()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  goodG2B2Static_0 = 1;
  src = goodG2B2Source_0(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, src);
  printLine(src);
  free(src);
}
// 62017C: using guessed type int goodG2B2Static_0;

//----- (000000000040BACD) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_21_good()
{
  goodG2B1_36();
  goodG2B2_36();
}

//----- (000000000040BAE7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_03_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040BB82) ----------------------------------------------------
void goodG2B1_37()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040BC1D) ----------------------------------------------------
void goodG2B2_37()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040BCB8) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_03_good()
{
  goodG2B1_37();
  goodG2B2_37();
}

//----- (000000000040BCD2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_04_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040BD76) ----------------------------------------------------
void goodG2B1_38()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040BE26) ----------------------------------------------------
void goodG2B2_38()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040BECA) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_04_good()
{
  goodG2B1_38();
  goodG2B2_38();
}

//----- (000000000040BEE4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_31_bad()
{
  char dest[8]; // [rsp+0h] [rbp-50h]
  char v1; // [rsp+8h] [rbp-48h]
  __int16 v2; // [rsp+30h] [rbp-20h]
  char *src; // [rsp+38h] [rbp-18h]
  void *v4; // [rsp+40h] [rbp-10h]
  void *s; // [rsp+48h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v4 = s;
  src = (char *)s;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine(src);
  free(src);
}

//----- (000000000040BF8F) ----------------------------------------------------
void goodG2B_53()
{
  char dest[8]; // [rsp+0h] [rbp-50h]
  char v1; // [rsp+8h] [rbp-48h]
  __int16 v2; // [rsp+30h] [rbp-20h]
  char *src; // [rsp+38h] [rbp-18h]
  void *v4; // [rsp+40h] [rbp-10h]
  void *s; // [rsp+48h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  v4 = s;
  src = (char *)s;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine(src);
  free(src);
}

//----- (000000000040C03A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_31_good()
{
  goodG2B_53();
}

//----- (000000000040C04A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_15_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x32uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040C0C8) ----------------------------------------------------
void goodG2B1_39()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040C146) ----------------------------------------------------
void goodG2B2_39()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040C1C4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_15_good()
{
  goodG2B1_39();
  goodG2B2_39();
}

//----- (000000000040C1DE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_18_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040C27A) ----------------------------------------------------
void goodG2B_54()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040C316) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_18_good()
{
  goodG2B_54();
}

//----- (000000000040C326) ----------------------------------------------------
_BYTE *badSource_3()
{
  _BYTE *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x32uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 0;
  return v1;
}

//----- (000000000040C35E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_42_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = badSource_3();
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040C3C5) ----------------------------------------------------
_BYTE *goodG2BSource_1()
{
  _BYTE *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x64uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 0;
  return v1;
}

//----- (000000000040C3FD) ----------------------------------------------------
void goodG2B_55()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = goodG2BSource_1();
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040C464) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_42_good()
{
  goodG2B_55();
}

//----- (000000000040C474) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_12_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  else
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040C540) ----------------------------------------------------
void goodG2B_56()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  globalReturnsTrueOrFalse();
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040C60C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_12_good()
{
  goodG2B_56();
}

//----- (000000000040C61C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52_bad()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52b_badSink(v0);
}

//----- (000000000040C660) ----------------------------------------------------
void goodG2B_57()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52b_goodG2BSink(v0);
}

//----- (000000000040C6A4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52_good()
{
  goodG2B_57();
}

//----- (000000000040C6B4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68b_badSink()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_badData;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 620208: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_badData;

//----- (000000000040C70E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68b_goodG2BSink()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_goodG2BData;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 620200: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_goodG2BData;

//----- (000000000040C768) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_51b_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (000000000040C7BB) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_51b_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (000000000040C80E) ----------------------------------------------------
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_badSource(_BYTE *a1)
{
  if ( CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_badGlobal )
  {
    memset(a1, 65, 0x63uLL);
    a1[99] = 0;
  }
  return a1;
}
// 62014C: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_badGlobal;

//----- (000000000040C84B) ----------------------------------------------------
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_goodG2B1Source(_BYTE *a1)
{
  if ( CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_goodG2B1Global )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    memset(a1, 65, 0x31uLL);
    a1[49] = 0;
  }
  return a1;
}
// 620150: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_goodG2B1Global;

//----- (000000000040C894) ----------------------------------------------------
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_goodG2B2Source(_BYTE *a1)
{
  if ( CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_goodG2B2Global )
  {
    memset(a1, 65, 0x31uLL);
    a1[49] = 0;
  }
  return a1;
}
// 620154: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_22_goodG2B2Global;

//----- (000000000040C8D1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_64_bad()
{
  _BYTE *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_64b_badSink(&v0);
}

//----- (000000000040C917) ----------------------------------------------------
void goodG2B_58()
{
  _BYTE *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_64b_goodG2BSink(&v0);
}

//----- (000000000040C95D) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_64_good()
{
  goodG2B_58();
}

//----- (000000000040C96D) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53c_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53d_badSink(a1);
}

//----- (000000000040C987) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53c_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_53d_goodG2BSink(a1);
}

//----- (000000000040C9A1) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_65_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_65b_badSink)(s);
}

//----- (000000000040CA00) ----------------------------------------------------
__int64 goodG2B_59()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_65b_goodG2BSink)(s);
}

//----- (000000000040CA5F) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_65_good()
{
  return goodG2B_59();
}

//----- (000000000040CA6F) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54d_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54e_badSink(a1);
}

//----- (000000000040CA89) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54d_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54e_goodG2BSink(a1);
}

//----- (000000000040CAA3) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_15_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040CB3F) ----------------------------------------------------
void goodG2B1_40()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040CBDB) ----------------------------------------------------
void goodG2B2_40()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040CC77) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_15_good()
{
  goodG2B1_40();
  goodG2B2_40();
}

//----- (000000000040CC91) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_64b_badSink(char **a1)
{
  char s; // [rsp+10h] [rbp-80h]
  char v2; // [rsp+73h] [rbp-1Dh]
  char *dest; // [rsp+80h] [rbp-10h]
  char **v4; // [rsp+88h] [rbp-8h]

  v4 = a1;
  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040CD00) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_64b_goodG2BSink(char **a1)
{
  char s; // [rsp+10h] [rbp-80h]
  char v2; // [rsp+73h] [rbp-1Dh]
  char *dest; // [rsp+80h] [rbp-10h]
  char **v4; // [rsp+88h] [rbp-8h]

  v4 = a1;
  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040CD6F) ----------------------------------------------------
__int64 staticReturnsTrue_2()
{
  return 1LL;
}

//----- (000000000040CD7A) ----------------------------------------------------
__int64 staticReturnsFalse_2()
{
  return 0LL;
}

//----- (000000000040CD85) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_08_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( (unsigned int)staticReturnsTrue_2() )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040CE2E) ----------------------------------------------------
void goodG2B1_41()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( (unsigned int)staticReturnsFalse_2() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040CEE3) ----------------------------------------------------
void goodG2B2_41()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( (unsigned int)staticReturnsTrue_2() )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040CF8C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_08_good()
{
  goodG2B1_41();
  goodG2B2_41();
}

//----- (000000000040CFA6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b_badSource();
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040D00D) ----------------------------------------------------
void goodG2B_60()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b_goodG2BSource();
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040D074) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61_good()
{
  goodG2B_60();
}

//----- (000000000040D084) ----------------------------------------------------
_BYTE *__fastcall badSource_4(_BYTE *a1)
{
  memset(a1, 65, 0x63uLL);
  a1[99] = 0;
  return a1;
}

//----- (000000000040D0B7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_42_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  src = badSource_4(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, src);
  printLine(src);
  free(src);
}

//----- (000000000040D141) ----------------------------------------------------
_BYTE *__fastcall goodG2BSource_2(_BYTE *a1)
{
  memset(a1, 65, 0x31uLL);
  a1[49] = 0;
  return a1;
}

//----- (000000000040D174) ----------------------------------------------------
void goodG2B_61()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)malloc(0x64uLL);
  if ( !src )
    exit(-1);
  src = goodG2BSource_2(src);
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, src);
  printLine(src);
  free(src);
}

//----- (000000000040D1FE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_42_good()
{
  goodG2B_61();
}

//----- (000000000040D20E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_34_bad()
{
  char s; // [rsp+0h] [rbp-90h]
  char v1; // [rsp+63h] [rbp-2Dh]
  char *v2; // [rsp+70h] [rbp-20h]
  char *dest; // [rsp+80h] [rbp-10h]
  char *v4; // [rsp+88h] [rbp-8h]

  v4 = (char *)malloc(0x32uLL);
  if ( !v4 )
    exit(-1);
  *v4 = 0;
  v2 = v4;
  dest = v4;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040D2A4) ----------------------------------------------------
void goodG2B_62()
{
  char s; // [rsp+0h] [rbp-90h]
  char v1; // [rsp+63h] [rbp-2Dh]
  char *v2; // [rsp+70h] [rbp-20h]
  char *dest; // [rsp+80h] [rbp-10h]
  char *v4; // [rsp+88h] [rbp-8h]

  v4 = (char *)malloc(0x64uLL);
  if ( !v4 )
    exit(-1);
  *v4 = 0;
  v2 = v4;
  dest = v4;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040D33A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_34_good()
{
  goodG2B_62();
}

//----- (000000000040D34A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_13_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 417FCC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040D3D2) ----------------------------------------------------
void goodG2B1_42()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 417FCC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040D466) ----------------------------------------------------
void goodG2B2_42()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 417FCC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040D4EE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_13_good()
{
  goodG2B1_42();
  goodG2B2_42();
}

//----- (000000000040D508) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_14_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( globalFive == 5 )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 620100: using guessed type int globalFive;

//----- (000000000040D590) ----------------------------------------------------
void goodG2B1_43()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( globalFive == 5 )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 620100: using guessed type int globalFive;

//----- (000000000040D624) ----------------------------------------------------
void goodG2B2_43()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( globalFive == 5 )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 620100: using guessed type int globalFive;

//----- (000000000040D6AC) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_14_good()
{
  goodG2B1_43();
  goodG2B2_43();
}

//----- (000000000040D6C6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_32_bad()
{
  char s; // [rsp+0h] [rbp-90h]
  char v1; // [rsp+63h] [rbp-2Dh]
  __int64 v2; // [rsp+68h] [rbp-28h]
  char *dest; // [rsp+70h] [rbp-20h]
  _BYTE *v4; // [rsp+78h] [rbp-18h]
  char **v5; // [rsp+80h] [rbp-10h]
  __int64 *v6; // [rsp+88h] [rbp-8h]

  v6 = &v2;
  v5 = (char **)&v2;
  v2 = 0LL;
  v4 = 0LL;
  v4 = malloc(0x32uLL);
  if ( !v4 )
    exit(-1);
  *v4 = 0;
  *v6 = (__int64)v4;
  dest = *v5;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040D77D) ----------------------------------------------------
void goodG2B_63()
{
  char s; // [rsp+0h] [rbp-90h]
  char v1; // [rsp+63h] [rbp-2Dh]
  __int64 v2; // [rsp+68h] [rbp-28h]
  char *dest; // [rsp+70h] [rbp-20h]
  _BYTE *v4; // [rsp+78h] [rbp-18h]
  char **v5; // [rsp+80h] [rbp-10h]
  __int64 *v6; // [rsp+88h] [rbp-8h]

  v6 = &v2;
  v5 = (char **)&v2;
  v2 = 0LL;
  v4 = 0LL;
  v4 = malloc(0x64uLL);
  if ( !v4 )
    exit(-1);
  *v4 = 0;
  *v6 = (__int64)v4;
  dest = *v5;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040D834) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_32_good()
{
  goodG2B_63();
}

//----- (000000000040D844) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_51b_badSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (000000000040D8A3) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_51b_goodG2BSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (000000000040D902) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68b_badSink()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_badData;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_badData);
  printLine(src);
  free(src);
}
// 6201D0: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_badData;

//----- (000000000040D968) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68b_goodG2BSink()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_goodG2BData;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_goodG2BData);
  printLine(src);
  free(src);
}
// 6201D8: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_68_goodG2BData;

//----- (000000000040D9CE) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_67b_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = a1;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040DA29) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_67b_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = a1;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040DA84) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52b_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52c_badSink(a1);
}

//----- (000000000040DA9E) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52b_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_52c_goodG2BSink(a1);
}

//----- (000000000040DAB8) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54b_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54c_badSink(a1);
}

//----- (000000000040DAD2) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54b_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54c_goodG2BSink(a1);
}

//----- (000000000040DAEC) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_51b_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (000000000040DB3F) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_51b_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (000000000040DB92) ----------------------------------------------------
_BYTE *__fastcall badSource_5(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( badStatic_1 )
  {
    v2 = malloc(0x32uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 0;
  }
  return v2;
}
// 620180: using guessed type int badStatic_1;

//----- (000000000040DBD4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_21_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  badStatic_1 = 1;
  dest = badSource_5(0LL);
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 620180: using guessed type int badStatic_1;

//----- (000000000040DC45) ----------------------------------------------------
_BYTE *__fastcall goodG2B1Source_1(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( goodG2B1Static_1 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    v2 = malloc(0x64uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 0;
  }
  return v2;
}
// 620184: using guessed type int goodG2B1Static_1;

//----- (000000000040DC93) ----------------------------------------------------
void goodG2B1_44()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  goodG2B1Static_1 = 0;
  dest = goodG2B1Source_1(0LL);
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 620184: using guessed type int goodG2B1Static_1;

//----- (000000000040DD04) ----------------------------------------------------
_BYTE *__fastcall goodG2B2Source_1(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( goodG2B2Static_1 )
  {
    v2 = malloc(0x64uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 0;
  }
  return v2;
}
// 620188: using guessed type int goodG2B2Static_1;

//----- (000000000040DD46) ----------------------------------------------------
void goodG2B2_44()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  goodG2B2Static_1 = 1;
  dest = goodG2B2Source_1(0LL);
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 620188: using guessed type int goodG2B2Static_1;

//----- (000000000040DDB7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_21_good()
{
  goodG2B1_44();
  goodG2B2_44();
}

//----- (000000000040DDD1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_03_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x32uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040DE4E) ----------------------------------------------------
void goodG2B1_45()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040DECB) ----------------------------------------------------
void goodG2B2_45()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040DF48) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_03_good()
{
  goodG2B1_45();
  goodG2B2_45();
}

//----- (000000000040DF62) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_09_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 417FC4: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040DFE9) ----------------------------------------------------
void goodG2B1_46()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FALSE )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 417FC8: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000040E07C) ----------------------------------------------------
void goodG2B2_46()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 417FC4: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040E103) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_09_good()
{
  goodG2B1_46();
  goodG2B2_46();
}

//----- (000000000040E11D) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_63_bad()
{
  _BYTE *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_63b_badSink(&v0);
}

//----- (000000000040E163) ----------------------------------------------------
void goodG2B_64()
{
  _BYTE *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_63b_goodG2BSink(&v0);
}

//----- (000000000040E1A9) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_63_good()
{
  goodG2B_64();
}

//----- (000000000040E1B9) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53c_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53d_badSink(a1);
}

//----- (000000000040E1D3) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53c_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53d_goodG2BSink(a1);
}

//----- (000000000040E1ED) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52c_badSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (000000000040E24C) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52c_goodG2BSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (000000000040E2AB) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_34_bad()
{
  char dest[8]; // [rsp+0h] [rbp-60h]
  char v1; // [rsp+8h] [rbp-58h]
  __int16 v2; // [rsp+30h] [rbp-30h]
  void *v3; // [rsp+40h] [rbp-20h]
  char *src; // [rsp+50h] [rbp-10h]
  void *s; // [rsp+58h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v3 = s;
  src = (char *)s;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine(src);
  free(src);
}

//----- (000000000040E356) ----------------------------------------------------
void goodG2B_65()
{
  char dest[8]; // [rsp+0h] [rbp-60h]
  char v1; // [rsp+8h] [rbp-58h]
  __int16 v2; // [rsp+30h] [rbp-30h]
  void *v3; // [rsp+40h] [rbp-20h]
  char *src; // [rsp+50h] [rbp-10h]
  void *s; // [rsp+58h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  v3 = s;
  src = (char *)s;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine(src);
  free(src);
}

//----- (000000000040E401) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_34_good()
{
  goodG2B_65();
}

//----- (000000000040E411) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_65b_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (000000000040E464) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_65b_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (000000000040E4B7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_18_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x32uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040E535) ----------------------------------------------------
void goodG2B_66()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040E5B3) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_18_good()
{
  goodG2B_66();
}

//----- (000000000040E5C3) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_63b_badSink(char **a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040E621) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_63b_goodG2BSink(char **a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040E67F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_64_bad()
{
  _BYTE *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_64b_badSink(&v0);
}

//----- (000000000040E6C5) ----------------------------------------------------
void goodG2B_67()
{
  _BYTE *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_64b_goodG2BSink(&v0);
}

//----- (000000000040E70B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_64_good()
{
  goodG2B_67();
}

//----- (000000000040E71B) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_66b_badSink(__int64 a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]
  char *src; // [rsp+48h] [rbp-8h]

  src = *(char **)(a1 + 16);
  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, src);
  printLine(src);
  free(src);
}

//----- (000000000040E786) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_66b_goodG2BSink(__int64 a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]
  char *src; // [rsp+48h] [rbp-8h]

  src = *(char **)(a1 + 16);
  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, src);
  printLine(src);
  free(src);
}

//----- (000000000040E7F1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54b_badSink(s);
}

//----- (000000000040E847) ----------------------------------------------------
void goodG2B_68()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54b_goodG2BSink(s);
}

//----- (000000000040E89D) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_54_good()
{
  goodG2B_68();
}

//----- (000000000040E8AD) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_05_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( staticTrue_1 )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 6200F0: using guessed type int staticTrue_1;

//----- (000000000040E952) ----------------------------------------------------
void goodG2B1_47()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( staticFalse_1 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 62018C: using guessed type int staticFalse_1;

//----- (000000000040EA03) ----------------------------------------------------
void goodG2B2_47()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( staticTrue_1 )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 6200F0: using guessed type int staticTrue_1;

//----- (000000000040EAA8) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_05_good()
{
  goodG2B1_47();
  goodG2B2_47();
}

//----- (000000000040EAC2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_12_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  else
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040EB75) ----------------------------------------------------
void goodG2B_69()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  else
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040EC28) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_12_good()
{
  goodG2B_69();
}

//----- (000000000040EC38) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53b_badSink(s);
}

//----- (000000000040EC8E) ----------------------------------------------------
void goodG2B_70()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53b_goodG2BSink(s);
}

//----- (000000000040ECE4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_53_good()
{
  goodG2B_70();
}

//----- (000000000040ECF4) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54b_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54c_badSink(a1);
}

//----- (000000000040ED0E) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54b_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_54c_goodG2BSink(a1);
}

//----- (000000000040ED28) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_64b_badSink(char **a1)
{
  char s; // [rsp+10h] [rbp-80h]
  char v2; // [rsp+73h] [rbp-1Dh]
  char *dest; // [rsp+80h] [rbp-10h]
  char **v4; // [rsp+88h] [rbp-8h]

  v4 = a1;
  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040ED97) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_64b_goodG2BSink(char **a1)
{
  char s; // [rsp+10h] [rbp-80h]
  char v2; // [rsp+73h] [rbp-1Dh]
  char *dest; // [rsp+80h] [rbp-10h]
  char **v4; // [rsp+88h] [rbp-8h]

  v4 = a1;
  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040EE06) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_bad()
{
  _BYTE *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_badData = (__int64)v0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68b_badSink();
}
// 620208: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_badData;

//----- (000000000040EE53) ----------------------------------------------------
void goodG2B_71()
{
  _BYTE *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_goodG2BData = (__int64)v0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68b_goodG2BSink();
}
// 620200: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_goodG2BData;

//----- (000000000040EEA0) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_68_good()
{
  goodG2B_71();
}

//----- (000000000040EEB0) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_17_bad()
{
  char s; // [rsp+0h] [rbp-80h]
  char v1; // [rsp+63h] [rbp-1Dh]
  char *dest; // [rsp+70h] [rbp-10h]
  int i; // [rsp+7Ch] [rbp-4h]

  dest = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040EF40) ----------------------------------------------------
void goodG2B_72()
{
  char s; // [rsp+0h] [rbp-80h]
  char v1; // [rsp+63h] [rbp-1Dh]
  char *dest; // [rsp+70h] [rbp-10h]
  int i; // [rsp+7Ch] [rbp-4h]

  dest = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040EFD0) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_17_good()
{
  goodG2B_72();
}

//----- (000000000040EFE0) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_66_bad()
{
  char v0; // [rsp+0h] [rbp-30h]
  void *v1; // [rsp+10h] [rbp-20h]
  void *s; // [rsp+28h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v1 = s;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_66b_badSink((__int64)&v0);
}

//----- (000000000040F03E) ----------------------------------------------------
void goodG2B_73()
{
  char v0; // [rsp+0h] [rbp-30h]
  void *v1; // [rsp+10h] [rbp-20h]
  void *s; // [rsp+28h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  v1 = s;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_66b_goodG2BSink((__int64)&v0);
}

//----- (000000000040F09C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_66_good()
{
  goodG2B_73();
}

//----- (000000000040F0AC) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_31_bad()
{
  char s; // [rsp+0h] [rbp-80h]
  char v1; // [rsp+63h] [rbp-1Dh]
  char *dest; // [rsp+68h] [rbp-18h]
  char *v3; // [rsp+70h] [rbp-10h]
  char *v4; // [rsp+78h] [rbp-8h]

  v4 = (char *)malloc(0x32uLL);
  if ( !v4 )
    exit(-1);
  *v4 = 0;
  v3 = v4;
  dest = v4;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040F139) ----------------------------------------------------
void goodG2B_74()
{
  char s; // [rsp+0h] [rbp-80h]
  char v1; // [rsp+63h] [rbp-1Dh]
  char *dest; // [rsp+68h] [rbp-18h]
  char *v3; // [rsp+70h] [rbp-10h]
  char *v4; // [rsp+78h] [rbp-8h]

  v4 = (char *)malloc(0x64uLL);
  if ( !v4 )
    exit(-1);
  *v4 = 0;
  v3 = v4;
  dest = v4;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040F1C6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_31_good()
{
  goodG2B_74();
}

//----- (000000000040F1D6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_11_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040F261) ----------------------------------------------------
void goodG2B1_48()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040F2F8) ----------------------------------------------------
void goodG2B2_48()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040F383) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_11_good()
{
  goodG2B1_48();
  goodG2B2_48();
}

//----- (000000000040F39D) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_67_bad()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_67b_badSink(v0);
}

//----- (000000000040F3E9) ----------------------------------------------------
void goodG2B_75()
{
  char *v0; // [rsp+8h] [rbp-8h]

  v0 = (char *)malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_67b_goodG2BSink(v0);
}

//----- (000000000040F435) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_67_good()
{
  goodG2B_75();
}

//----- (000000000040F445) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_badGlobal = 1;
  dest = CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_badSource(0LL);
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 620190: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_badGlobal;

//----- (000000000040F4B6) ----------------------------------------------------
void goodG2B1_49()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B1Global = 0;
  dest = CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B1Source(0LL);
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 620194: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B1Global;

//----- (000000000040F527) ----------------------------------------------------
void goodG2B2_49()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B2Global = 1;
  dest = CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B2Source(0LL);
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 620198: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B2Global;

//----- (000000000040F598) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_good()
{
  goodG2B1_49();
  goodG2B2_49();
}

//----- (000000000040F5B2) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52b_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52c_badSink(a1);
}

//----- (000000000040F5CC) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52b_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52c_goodG2BSink(a1);
}

//----- (000000000040F5E6) ----------------------------------------------------
_BYTE *CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b_badSource()
{
  _BYTE *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x32uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 0;
  return v1;
}

//----- (000000000040F61E) ----------------------------------------------------
_BYTE *CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b_goodG2BSource()
{
  _BYTE *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(0x64uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 0;
  return v1;
}

//----- (000000000040F656) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_10_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( globalTrue )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 6200FC: using guessed type int globalTrue;

//----- (000000000040F6DD) ----------------------------------------------------
void goodG2B1_50()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( globalFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 6201C0: using guessed type int globalFalse;

//----- (000000000040F770) ----------------------------------------------------
void goodG2B2_50()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( globalTrue )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 6200FC: using guessed type int globalTrue;

//----- (000000000040F7F7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_10_good()
{
  goodG2B1_50();
  goodG2B2_50();
}

//----- (000000000040F811) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_65_bad()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_65b_badSink)(s);
}

//----- (000000000040F870) ----------------------------------------------------
__int64 goodG2B_76()
{
  _BYTE *s; // [rsp+0h] [rbp-10h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  return ((__int64 (__fastcall *)(_BYTE *))CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_65b_goodG2BSink)(s);
}

//----- (000000000040F8CF) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_65_good()
{
  return goodG2B_76();
}

//----- (000000000040F8DF) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54d_badSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54e_badSink(a1);
}

//----- (000000000040F8F9) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54d_goodG2BSink(char *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_54e_goodG2BSink(a1);
}

//----- (000000000040F913) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_15_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040F9AF) ----------------------------------------------------
void goodG2B1_51()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040FA4B) ----------------------------------------------------
void goodG2B2_51()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (000000000040FAE7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_15_good()
{
  goodG2B1_51();
  goodG2B2_51();
}

//----- (000000000040FB01) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_01_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x32uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040FB7E) ----------------------------------------------------
void goodG2B_77()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040FBFB) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_01_good()
{
  goodG2B_77();
}

//----- (000000000040FC0B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_13_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 417FCC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040FC93) ----------------------------------------------------
void goodG2B1_52()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 417FCC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040FD27) ----------------------------------------------------
void goodG2B2_52()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 417FCC: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040FDAF) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_13_good()
{
  goodG2B1_52();
  goodG2B2_52();
}

//----- (000000000040FDC9) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53d_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (000000000040FE1C) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_53d_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (000000000040FE6F) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52c_badSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (000000000040FECE) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_52c_goodG2BSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (000000000040FF2D) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_63b_badSink(char **a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040FF8B) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_63b_goodG2BSink(char **a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]
  char *dest; // [rsp+78h] [rbp-8h]

  dest = *a1;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (000000000040FFE9) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52b_badSink(s);
}

//----- (000000000041003F) ----------------------------------------------------
void goodG2B_78()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52b_goodG2BSink(s);
}

//----- (0000000000410095) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_52_good()
{
  goodG2B_78();
}

//----- (00000000004100A5) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68b_badSink()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_badData;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_badData);
  printLine(src);
  free(src);
}
// 6201F0: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_badData;

//----- (000000000041010B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68b_goodG2BSink()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_goodG2BData;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_goodG2BData);
  printLine(src);
  free(src);
}
// 6201F8: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_68_goodG2BData;

//----- (0000000000410171) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_65_bad()
{
  _BYTE *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x32uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 0;
  return ((__int64 (__fastcall *)(_BYTE *))CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_65b_badSink)(v1);
}

//----- (00000000004101BE) ----------------------------------------------------
__int64 goodG2B_79()
{
  _BYTE *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x64uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 0;
  return ((__int64 (__fastcall *)(_BYTE *))CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_65b_goodG2BSink)(v1);
}

//----- (000000000041020B) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_65_good()
{
  return goodG2B_79();
}

//----- (000000000041021B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_16_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (00000000004102B7) ----------------------------------------------------
void goodG2B_80()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}

//----- (0000000000410353) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_16_good()
{
  goodG2B_80();
}

//----- (0000000000410363) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_41_badSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (00000000004103C2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_41_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_41_badSink(s);
}

//----- (0000000000410418) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_41_goodG2BSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (0000000000410477) ----------------------------------------------------
void goodG2B_81()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_41_goodG2BSink(s);
}

//----- (00000000004104CD) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_41_good()
{
  goodG2B_81();
}

//----- (00000000004104DD) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_09_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( GLOBAL_CONST_TRUE )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 417FC4: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000410582) ----------------------------------------------------
void goodG2B1_53()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( GLOBAL_CONST_FALSE )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 417FC8: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000410633) ----------------------------------------------------
void goodG2B2_53()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( GLOBAL_CONST_TRUE )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 417FC4: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004106D8) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_09_good()
{
  goodG2B1_53();
  goodG2B2_53();
}

//----- (00000000004106F2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_07_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( staticFive_2 == 5 )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 6200F4: using guessed type int staticFive_2;

//----- (000000000041077A) ----------------------------------------------------
void goodG2B1_54()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( staticFive_2 == 5 )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 6200F4: using guessed type int staticFive_2;

//----- (000000000041080E) ----------------------------------------------------
void goodG2B2_54()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( staticFive_2 == 5 )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 6200F4: using guessed type int staticFive_2;

//----- (0000000000410896) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_07_good()
{
  goodG2B1_54();
  goodG2B2_54();
}

//----- (00000000004108B0) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_05_bad()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( staticTrue_2 )
  {
    memset(s, 65, 0x63uLL);
    *((_BYTE *)s + 99) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 6200F8: using guessed type int staticTrue_2;

//----- (0000000000410955) ----------------------------------------------------
void goodG2B1_55()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( staticFalse_2 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 62019C: using guessed type int staticFalse_2;

//----- (0000000000410A06) ----------------------------------------------------
void goodG2B2_55()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  if ( staticTrue_2 )
  {
    memset(s, 65, 0x31uLL);
    *((_BYTE *)s + 49) = 0;
  }
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine((const char *)s);
  free(s);
}
// 6200F8: using guessed type int staticTrue_2;

//----- (0000000000410AAB) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_05_good()
{
  goodG2B1_55();
  goodG2B2_55();
}

//----- (0000000000410AC5) ----------------------------------------------------
void __fastcall badSink_5(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (0000000000410B18) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_44_bad()
{
  _BYTE *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x32uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 0;
  return ((__int64 (__fastcall *)(_BYTE *))badSink_5)(v1);
}

//----- (0000000000410B65) ----------------------------------------------------
void __fastcall goodG2BSink_5(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (0000000000410BB8) ----------------------------------------------------
__int64 goodG2B_82()
{
  _BYTE *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(0x64uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 0;
  return ((__int64 (__fastcall *)(_BYTE *))goodG2BSink_5)(v1);
}

//----- (0000000000410C05) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_44_good()
{
  return goodG2B_82();
}

//----- (0000000000410C15) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_09_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 417FC4: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000410C9C) ----------------------------------------------------
void goodG2B1_56()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_FALSE )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 417FC8: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000410D2F) ----------------------------------------------------
void goodG2B2_56()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcpy(dest, &s);
  printLine(dest);
  free(dest);
}
// 417FC4: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000410DB6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_09_good()
{
  goodG2B1_56();
  goodG2B2_56();
}

//----- (0000000000410DD0) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_41_badSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (0000000000410E2F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_41_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_41_badSink(s);
}

//----- (0000000000410E85) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_41_goodG2BSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (0000000000410EE4) ----------------------------------------------------
void goodG2B_83()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_41_goodG2BSink(s);
}

//----- (0000000000410F3A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_41_good()
{
  goodG2B_83();
}

//----- (0000000000410F4A) ----------------------------------------------------
_BYTE *__fastcall badSource_6(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( badStatic_2 )
  {
    v2 = malloc(0x32uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 0;
  }
  return v2;
}
// 6201A0: using guessed type int badStatic_2;

//----- (0000000000410F8C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_21_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  badStatic_2 = 1;
  dest = badSource_6(0LL);
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 6201A0: using guessed type int badStatic_2;

//----- (0000000000410FFD) ----------------------------------------------------
_BYTE *__fastcall goodG2B1Source_2(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( goodG2B1Static_2 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    v2 = malloc(0x64uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 0;
  }
  return v2;
}
// 6201A4: using guessed type int goodG2B1Static_2;

//----- (000000000041104B) ----------------------------------------------------
void goodG2B1_57()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  goodG2B1Static_2 = 0;
  dest = goodG2B1Source_2(0LL);
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 6201A4: using guessed type int goodG2B1Static_2;

//----- (00000000004110BC) ----------------------------------------------------
_BYTE *__fastcall goodG2B2Source_2(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( goodG2B2Static_2 )
  {
    v2 = malloc(0x64uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 0;
  }
  return v2;
}
// 6201A8: using guessed type int goodG2B2Static_2;

//----- (00000000004110FE) ----------------------------------------------------
void goodG2B2_57()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  goodG2B2Static_2 = 1;
  dest = goodG2B2Source_2(0LL);
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}
// 6201A8: using guessed type int goodG2B2Static_2;

//----- (000000000041116F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_21_good()
{
  goodG2B1_57();
  goodG2B2_57();
}

//----- (0000000000411189) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_03_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x32uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000411206) ----------------------------------------------------
void goodG2B1_58()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000411283) ----------------------------------------------------
void goodG2B2_58()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000411300) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_03_good()
{
  goodG2B1_58();
  goodG2B2_58();
}

//----- (000000000041131A) ----------------------------------------------------
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_badSource(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_badGlobal )
  {
    v2 = malloc(0x32uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 0;
  }
  return v2;
}
// 620190: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_badGlobal;

//----- (000000000041135C) ----------------------------------------------------
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B1Source(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B1Global )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    v2 = malloc(0x64uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 0;
  }
  return v2;
}
// 620194: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B1Global;

//----- (00000000004113AA) ----------------------------------------------------
_BYTE *__fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B2Source(_BYTE *a1)
{
  _BYTE *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B2Global )
  {
    v2 = malloc(0x64uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 0;
  }
  return v2;
}
// 620198: using guessed type int CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B2Global;

//----- (00000000004113EC) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_63_bad()
{
  _BYTE *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x32uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_63b_badSink(&v0);
}

//----- (0000000000411432) ----------------------------------------------------
void goodG2B_84()
{
  _BYTE *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(0x64uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_63b_goodG2BSink(&v0);
}

//----- (0000000000411478) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_63_good()
{
  goodG2B_84();
}

//----- (0000000000411488) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_65b_badSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (00000000004114E7) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_65b_goodG2BSink(char *a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]

  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, a1);
  printLine(a1);
  free(a1);
}

//----- (0000000000411546) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_51_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_51b_badSink(s);
}

//----- (000000000041159C) ----------------------------------------------------
void goodG2B_85()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_51b_goodG2BSink(s);
}

//----- (00000000004115F2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_51_good()
{
  goodG2B_85();
}

//----- (0000000000411602) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_18_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x32uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000411680) ----------------------------------------------------
void goodG2B_86()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = (char *)malloc(0x64uLL);
  if ( !dest )
    exit(-1);
  *dest = 0;
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (00000000004116FE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_18_good()
{
  goodG2B_86();
}

//----- (000000000041170E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_34_bad()
{
  char dest[8]; // [rsp+0h] [rbp-60h]
  char v1; // [rsp+8h] [rbp-58h]
  __int16 v2; // [rsp+30h] [rbp-30h]
  void *v3; // [rsp+40h] [rbp-20h]
  char *src; // [rsp+50h] [rbp-10h]
  void *s; // [rsp+58h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v3 = s;
  src = (char *)s;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine(src);
  free(src);
}

//----- (00000000004117B9) ----------------------------------------------------
void goodG2B_87()
{
  char dest[8]; // [rsp+0h] [rbp-60h]
  char v1; // [rsp+8h] [rbp-58h]
  __int16 v2; // [rsp+30h] [rbp-30h]
  void *v3; // [rsp+40h] [rbp-20h]
  char *src; // [rsp+50h] [rbp-10h]
  void *s; // [rsp+58h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  *((_BYTE *)s + 49) = 0;
  v3 = s;
  src = (char *)s;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcat(dest, (const char *)s);
  printLine(src);
  free(src);
}

//----- (0000000000411864) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_34_good()
{
  goodG2B_87();
}

//----- (0000000000411874) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_65b_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (00000000004118C7) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_65b_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v2; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v2 = 0;
  strcpy(a1, &s);
  printLine(a1);
  free(a1);
}

//----- (000000000041191A) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_66b_badSink(__int64 a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]
  char *src; // [rsp+48h] [rbp-8h]

  src = *(char **)(a1 + 16);
  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, src);
  printLine(src);
  free(src);
}

//----- (0000000000411985) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_66b_goodG2BSink(__int64 a1)
{
  char dest[8]; // [rsp+10h] [rbp-40h]
  char v2; // [rsp+18h] [rbp-38h]
  __int16 v3; // [rsp+40h] [rbp-10h]
  char *src; // [rsp+48h] [rbp-8h]

  src = *(char **)(a1 + 16);
  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcat(dest, src);
  printLine(src);
  free(src);
}

//----- (00000000004119F0) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_66_bad()
{
  char v0; // [rsp+0h] [rbp-30h]
  _BYTE *v1; // [rsp+10h] [rbp-20h]
  _BYTE *v2; // [rsp+28h] [rbp-8h]

  v2 = malloc(0x32uLL);
  if ( !v2 )
    exit(-1);
  *v2 = 0;
  v1 = v2;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_66b_badSink((__int64)&v0);
}

//----- (0000000000411A3C) ----------------------------------------------------
void goodG2B_88()
{
  char v0; // [rsp+0h] [rbp-30h]
  _BYTE *v1; // [rsp+10h] [rbp-20h]
  _BYTE *v2; // [rsp+28h] [rbp-8h]

  v2 = malloc(0x64uLL);
  if ( !v2 )
    exit(-1);
  *v2 = 0;
  v1 = v2;
  CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_66b_goodG2BSink((__int64)&v0);
}

//----- (0000000000411A88) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_66_good()
{
  goodG2B_88();
}

//----- (0000000000411A98) ----------------------------------------------------
void badSink_6()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_badData;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_badData);
  printLine(src);
  free(src);
}
// 6201B0: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_badData;

//----- (0000000000411AFE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_bad()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x63uLL);
  s[99] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_badData = (__int64)s;
  badSink_6();
}
// 6201B0: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_badData;

//----- (0000000000411B5D) ----------------------------------------------------
void goodG2BSink_6()
{
  char dest[8]; // [rsp+0h] [rbp-40h]
  char v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+30h] [rbp-10h]
  char *src; // [rsp+38h] [rbp-8h]

  src = (char *)CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_goodG2BData;
  *(_QWORD *)dest = 0LL;
  memset(&v1, 0, 0x28uLL);
  v2 = 0;
  strcpy(dest, (const char *)CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_goodG2BData);
  printLine(src);
  free(src);
}
// 6201B8: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_goodG2BData;

//----- (0000000000411BC3) ----------------------------------------------------
void goodG2B_89()
{
  _BYTE *s; // [rsp+8h] [rbp-8h]

  s = malloc(0x64uLL);
  if ( !s )
    exit(-1);
  memset(s, 65, 0x31uLL);
  s[49] = 0;
  CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_goodG2BData = (__int64)s;
  goodG2BSink_6();
}
// 6201B8: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_goodG2BData;

//----- (0000000000411C22) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_45_good()
{
  goodG2B_89();
}

//----- (0000000000411C32) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    dest = (char *)malloc(0x32uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  else
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000411CE5) ----------------------------------------------------
void goodG2B_90()
{
  char s; // [rsp+0h] [rbp-70h]
  char v1; // [rsp+63h] [rbp-Dh]
  char *dest; // [rsp+68h] [rbp-8h]

  dest = 0LL;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  else
  {
    dest = (char *)malloc(0x64uLL);
    if ( !dest )
      exit(-1);
    *dest = 0;
  }
  memset(&s, 67, 0x63uLL);
  v1 = 0;
  strcat(dest, &s);
  printLine(dest);
  free(dest);
}

//----- (0000000000411D98) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12_good()
{
  goodG2B_90();
}

//----- (0000000000411DA8) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_64b_badSink(char **a1)
{
  char dest[8]; // [rsp+10h] [rbp-50h]
  char v2; // [rsp+18h] [rbp-48h]
  __int16 v3; // [rsp+40h] [rbp-20h]
  char *src; // [rsp+50h] [rbp-10h]
  char **v5; // [rsp+58h] [rbp-8h]

  v5 = a1;
  src = *a1;
  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, src);
  printLine(src);
  free(src);
}

//----- (0000000000411E1A) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_64b_goodG2BSink(char **a1)
{
  char dest[8]; // [rsp+10h] [rbp-50h]
  char v2; // [rsp+18h] [rbp-48h]
  __int16 v3; // [rsp+40h] [rbp-20h]
  char *src; // [rsp+50h] [rbp-10h]
  char **v5; // [rsp+58h] [rbp-8h]

  v5 = a1;
  src = *a1;
  *(_QWORD *)dest = 0LL;
  memset(&v2, 0, 0x28uLL);
  v3 = 0;
  strcpy(dest, src);
  printLine(src);
  free(src);
}

//----- (0000000000411E8C) ----------------------------------------------------
int __fastcall printLine(const char *a1)
{
  int result; // eax

  if ( a1 )
    result = puts(a1);
  return result;
}

//----- (0000000000411EAD) ----------------------------------------------------
int __fastcall printWLine(__int64 a1)
{
  int result; // eax

  if ( a1 )
    result = wprintf("%", a1);
  return result;
}

//----- (0000000000411ED8) ----------------------------------------------------
int __fastcall printIntLine(unsigned int a1)
{
  return printf("%d\n", a1);
}

//----- (0000000000411EF9) ----------------------------------------------------
int __fastcall printShortLine(__int16 a1)
{
  return printf("%hd\n", (unsigned int)a1);
}

//----- (0000000000411F1E) ----------------------------------------------------
int __fastcall printFloatLine(float a1)
{
  return printf("%f\n", a1);
}

//----- (0000000000411F44) ----------------------------------------------------
int __fastcall printLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (0000000000411F68) ----------------------------------------------------
int __fastcall printLongLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (0000000000411F8C) ----------------------------------------------------
int __fastcall printSizeTLine(__int64 a1)
{
  return printf("%zu\n", a1);
}

//----- (0000000000411FB0) ----------------------------------------------------
int __fastcall printHexCharLine(char a1)
{
  return printf("%02x\n", (unsigned int)a1);
}

//----- (0000000000411FD4) ----------------------------------------------------
int __fastcall printWcharLine(int a1)
{
  int v2; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+14h] [rbp-Ch]

  v2 = a1;
  v3 = 0;
  return printf("%ls\n", &v2);
}

//----- (0000000000412004) ----------------------------------------------------
int __fastcall printUnsignedLine(unsigned int a1)
{
  return printf("%u\n", a1);
}

//----- (0000000000412025) ----------------------------------------------------
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1)
{
  return printf("%02x\n", a1);
}

//----- (0000000000412049) ----------------------------------------------------
int __fastcall printDoubleLine(double a1)
{
  return printf("%g\n", a1);
}

//----- (0000000000412074) ----------------------------------------------------
int __fastcall printStructLine(unsigned int *a1)
{
  return printf("%d -- %d\n", *a1, a1[1]);
}

//----- (00000000004120A0) ----------------------------------------------------
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2)
{
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; i < a2; ++i )
    printf("%02x", *(unsigned __int8 *)(a1 + i));
  return puts(s);
}

//----- (00000000004120F7) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL;
        i < a2
     && (*__ctype_b_loc())[*(char *)(2 * i + v4)] & 0x1000
     && (*__ctype_b_loc())[*(char *)(2 * i + 1 + v4)] & 0x1000;
        ++i )
  {
    __isoc99_sscanf(2 * i + v4, "%02x", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 4009F0: using guessed type __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004121D0) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL; i < a2 && iswxdigit(*(_DWORD *)(8 * i + v4)) && iswxdigit(*(_DWORD *)(8 * i + 4 + v4)); ++i )
  {
    __isoc99_swscanf(8 * i + v4, "%", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400AC0: using guessed type __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412284) ----------------------------------------------------
__int64 globalReturnsTrue()
{
  return 1LL;
}

//----- (000000000041228F) ----------------------------------------------------
__int64 globalReturnsFalse()
{
  return 0LL;
}

//----- (000000000041229A) ----------------------------------------------------
__int64 globalReturnsTrueOrFalse()
{
  return (unsigned int)(rand() % 2);
}

//----- (00000000004122B0) ----------------------------------------------------
void good1()
{
  ;
}

//----- (00000000004122B6) ----------------------------------------------------
void good2()
{
  ;
}

//----- (00000000004122BC) ----------------------------------------------------
void good3()
{
  ;
}

//----- (00000000004122C2) ----------------------------------------------------
void good4()
{
  ;
}

//----- (00000000004122C8) ----------------------------------------------------
void good5()
{
  ;
}

//----- (00000000004122CE) ----------------------------------------------------
void good6()
{
  ;
}

//----- (00000000004122D4) ----------------------------------------------------
void good7()
{
  ;
}

//----- (00000000004122DA) ----------------------------------------------------
void good8()
{
  ;
}

//----- (00000000004122E0) ----------------------------------------------------
void good9()
{
  ;
}

//----- (00000000004122E6) ----------------------------------------------------
void bad1()
{
  ;
}

//----- (00000000004122EC) ----------------------------------------------------
void bad2()
{
  ;
}

//----- (00000000004122F2) ----------------------------------------------------
void bad3()
{
  ;
}

//----- (00000000004122F8) ----------------------------------------------------
void bad4()
{
  ;
}

//----- (00000000004122FE) ----------------------------------------------------
void bad5()
{
  ;
}

//----- (0000000000412304) ----------------------------------------------------
void bad6()
{
  ;
}

//----- (000000000041230A) ----------------------------------------------------
void bad7()
{
  ;
}

//----- (0000000000412310) ----------------------------------------------------
void bad8()
{
  ;
}

//----- (0000000000412316) ----------------------------------------------------
void bad9()
{
  ;
}

//----- (000000000041231C) ----------------------------------------------------
void __fastcall __noreturn internal_start(void *a1)
{
  (*((void (__fastcall **)(_QWORD))a1 + 1))(*((_QWORD *)a1 + 2));
  pthread_exit(0LL);
}

//----- (000000000041234F) ----------------------------------------------------
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3)
{
  __int64 result; // rax
  void **v4; // [rsp+8h] [rbp-28h]
  pthread_t newthread; // [rsp+20h] [rbp-10h]
  void *arg; // [rsp+28h] [rbp-8h]

  v4 = a3;
  *a3 = 0LL;
  arg = malloc(0x18uLL);
  if ( !arg )
    return 0LL;
  *((_QWORD *)arg + 1) = a1;
  *((_QWORD *)arg + 2) = a2;
  if ( pthread_create(&newthread, 0LL, (void *(*)(void *))internal_start, arg) )
  {
    free(arg);
    result = 0LL;
  }
  else
  {
    *(_QWORD *)arg = newthread;
    *v4 = arg;
    result = 1LL;
  }
  return result;
}

//----- (00000000004123F3) ----------------------------------------------------
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1)
{
  void *thread_return; // [rsp+18h] [rbp-8h]

  return pthread_join(*a1, &thread_return) == 0;
}

//----- (0000000000412427) ----------------------------------------------------
__int64 __fastcall stdThreadDestroy(void *a1)
{
  free(a1);
  return 1LL;
}

//----- (0000000000412446) ----------------------------------------------------
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1)
{
  __int64 result; // rax
  pthread_mutex_t *mutex; // [rsp+18h] [rbp-8h]

  *a1 = 0LL;
  mutex = (pthread_mutex_t *)malloc(0x28uLL);
  if ( !mutex )
    return 0LL;
  if ( pthread_mutex_init(mutex, 0LL) )
  {
    free(a1);
    result = 0LL;
  }
  else
  {
    *a1 = mutex;
    result = 1LL;
  }
  return result;
}

//----- (00000000004124BB) ----------------------------------------------------
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1)
{
  return pthread_mutex_lock(a1);
}

//----- (00000000004124D5) ----------------------------------------------------
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1)
{
  return pthread_mutex_unlock(a1);
}

//----- (00000000004124EF) ----------------------------------------------------
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1)
{
  pthread_mutex_destroy(a1);
  free(a1);
}

//----- (0000000000412520) ----------------------------------------------------
void _libc_csu_init(void)
{
  __int64 v0; // rbx
  signed __int64 v1; // rbp

  v0 = 0LL;
  v1 = &_do_global_dtors_aux_fini_array_entry - _frame_dummy_init_array_entry;
  init_proc();
  if ( v1 )
  {
    do
      _frame_dummy_init_array_entry[v0++]();
    while ( v0 != v1 );
  }
}
// 61FDD0: using guessed type __int64 (__fastcall *_frame_dummy_init_array_entry[2])();
// 61FDD8: using guessed type __int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)();

//----- (0000000000412594) ----------------------------------------------------
void term_proc()
{
  ;
}

// ALL OK, 772 function(s) have been successfully decompiled
