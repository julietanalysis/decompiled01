/* This file was generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2018 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

void *init_proc();
__int64 sub_400D00();
// int printf(const char *format, ...);
// void *memset(void *s, int c, size_t n);
// int close(int fd);
// __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD); weak
// int puts(const char *s);
// uint16_t htons(uint16_t hostshort);
// __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD); weak
// void __noreturn exit(int status);
// void *malloc(size_t size);
// FILE *fopen(const char *filename, const char *modes);
// int __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end);
// ssize_t recv(int fd, void *buf, size_t n, int flags);
// int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr);
// char *fgets(char *s, int n, FILE *stream);
// int iswxdigit(wint_t wc);
// void free(void *ptr);
// int pthread_create(pthread_t *newthread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);
// int listen(int fd, int n);
// const unsigned __int16 **__ctype_b_loc(void);
// int pthread_join(pthread_t th, void **thread_return);
// int usleep(__useconds_t useconds);
// void __noreturn pthread_exit(void *retval);
// int atoi(const char *nptr);
// int connect(int fd, const struct sockaddr *addr, socklen_t len);
// int socket(int domain, int type, int protocol);
// int wprintf(const wchar_t *format, ...);
// __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD); weak
// void srand(unsigned int seed);
// int fclose(FILE *stream);
// int bind(int fd, const struct sockaddr *addr, socklen_t len);
// size_t fwrite(const void *ptr, size_t size, size_t n, FILE *s);
// int pthread_mutex_lock(pthread_mutex_t *mutex);
// int rand(void);
// int pthread_mutex_destroy(pthread_mutex_t *mutex);
// int accept(int fd, struct sockaddr *addr, socklen_t *addr_len);
// int pthread_mutex_unlock(pthread_mutex_t *mutex);
// time_t time(time_t *timer);
// in_addr_t inet_addr(const char *cp);
// __int64 _gmon_start__(void); weak
// void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>);
__int64 deregister_tm_clones();
__int64 register_tm_clones();
__int64 _do_global_dtors_aux();
__int64 frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
int CWE400_Resource_Exhaustion__listen_socket_fwrite_68b_badSink();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_68b_goodG2BSink();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_68b_goodB2GSink();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_22_bad();
int goodB2G1();
__int64 goodB2G2();
__int64 goodG2B();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_22_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_15_bad();
int goodB2G1_0();
int goodB2G2_0();
int goodG2B1();
int goodG2B2();
int CWE400_Resource_Exhaustion__fscanf_fwrite_15_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54b_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_11_bad();
int goodB2G1_1();
__int64 goodB2G2_1();
__int64 goodG2B1_0();
__int64 goodG2B2_0();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_11_good();
__int64 __fastcall badSource(unsigned int a1);
int CWE400_Resource_Exhaustion__fscanf_fwrite_42_bad();
__int64 goodG2BSource();
int goodG2B_0();
__int64 __fastcall goodB2GSource(unsigned int a1);
int goodB2G();
int CWE400_Resource_Exhaustion__fscanf_fwrite_42_good();
__int64 CWE400_Resource_Exhaustion__fscanf_sleep_65_bad();
int goodG2B_1();
__int64 goodB2G_0();
__int64 CWE400_Resource_Exhaustion__fscanf_sleep_65_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54d_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54d_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54d_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_18_bad();
int goodB2G_1();
__int64 goodG2B_2();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_18_good();
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_53b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_53b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_53b_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_10_bad();
int goodB2G1_2();
__int64 goodB2G2_2();
__int64 goodG2B1_1();
__int64 goodG2B2_1();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_10_good();
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_52c_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_52c_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_52c_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_64_bad();
__int64 goodG2B_3();
__int64 goodB2G_2();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_64_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_13_bad();
int goodB2G1_3();
__int64 goodB2G2_3();
__int64 goodG2B1_2();
__int64 goodG2B2_2();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_13_good();
int CWE400_Resource_Exhaustion__connect_socket_sleep_51_bad();
int goodG2B_4();
int goodB2G_3();
int CWE400_Resource_Exhaustion__connect_socket_sleep_51_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_68_bad();
int goodG2B_5();
int goodB2G_4();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_68_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_22_bad();
int goodB2G1_4();
__int64 goodB2G2_4();
__int64 goodG2B_6();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_22_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_68b_badSink();
int CWE400_Resource_Exhaustion__fscanf_sleep_68b_goodG2BSink();
int CWE400_Resource_Exhaustion__fscanf_sleep_68b_goodB2GSink();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_18_bad();
int goodB2G_5();
int goodG2B_7();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_18_good();
int CWE400_Resource_Exhaustion__fgets_sleep_67_bad();
int goodG2B_8();
int goodB2G_6();
int CWE400_Resource_Exhaustion__fgets_sleep_67_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_22_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_22_goodB2G1Sink(signed int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_22_goodB2G2Sink(signed int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_22_goodG2BSink(__useconds_t a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_01_bad();
__int64 goodG2B_9();
int goodB2G_7();
int CWE400_Resource_Exhaustion__connect_socket_for_loop_01_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_05_bad();
int goodB2G1_5();
int goodB2G2_5();
int goodG2B1_3();
int goodG2B2_3();
int CWE400_Resource_Exhaustion__fscanf_fwrite_05_good();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_34_bad();
__int64 goodG2B_10();
__int64 goodB2G_8();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_34_good();
int CWE400_Resource_Exhaustion__fgets_fwrite_54_bad();
int goodG2B_11();
void goodB2G_9();
void CWE400_Resource_Exhaustion__fgets_fwrite_54_good();
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_53d_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_53d_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_53d_goodB2GSink(int a1);
int __fastcall badSink(int a1);
int CWE400_Resource_Exhaustion__fscanf_fwrite_41_bad();
int __fastcall goodG2BSink(int a1);
int goodG2B_12();
void __fastcall goodB2GSink(int a1);
void goodB2G_10();
int CWE400_Resource_Exhaustion__fscanf_fwrite_41_good();
int CWE400_Resource_Exhaustion__connect_socket_sleep_52_bad();
int goodG2B_13();
int goodB2G_11();
int CWE400_Resource_Exhaustion__connect_socket_sleep_52_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_51b_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_51b_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_51b_goodB2GSink(signed int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54d_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54d_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54d_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__listen_socket_fwrite_53_bad();
int goodG2B_14();
void goodB2G_12();
void CWE400_Resource_Exhaustion__listen_socket_fwrite_53_good();
int CWE400_Resource_Exhaustion__connect_socket_sleep_16_bad();
int goodB2G_13();
int goodG2B_15();
int CWE400_Resource_Exhaustion__connect_socket_sleep_16_good();
__int64 badSink_0();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_45_bad();
__int64 goodG2BSink_0();
__int64 goodG2B_16();
__int64 goodB2GSink_0();
__int64 goodB2G_14();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_45_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_34_bad();
int goodG2B_17();
int goodB2G_15();
int CWE400_Resource_Exhaustion__fscanf_fwrite_34_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_53b_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_53b_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_53b_goodB2GSink(signed int a1);
__int64 __fastcall badSink_1(int a1);
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_21_bad();
int __fastcall goodB2G1Sink(int a1);
int goodB2G1_6();
__int64 __fastcall goodB2G2Sink(int a1);
__int64 goodB2G2_6();
__int64 __fastcall goodG2BSink_1(int a1);
__int64 goodG2B_18();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_21_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_03_bad();
__int64 goodB2G1_7();
__int64 goodB2G2_7();
__int64 goodG2B1_4();
__int64 goodG2B2_4();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_03_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_66b_badSink(__int64 a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_66b_goodG2BSink(__int64 a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_66b_goodB2GSink(__int64 a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_65b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_65b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_65b_goodB2GSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_52c_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_52c_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_52c_goodB2GSink(signed int a1);
int CWE400_Resource_Exhaustion__fscanf_sleep_05_bad();
int goodB2G1_8();
int goodB2G2_8();
int goodG2B1_5();
int goodG2B2_5();
int CWE400_Resource_Exhaustion__fscanf_sleep_05_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_68_bad();
int goodG2B_19();
int goodB2G_16();
int CWE400_Resource_Exhaustion__fscanf_sleep_68_good();
__int64 staticReturnsTrue();
__int64 staticReturnsFalse();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_08_bad();
int goodB2G1_9();
__int64 goodB2G2_9();
__int64 goodG2B1_6();
__int64 goodG2B2_6();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_08_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_18_bad();
__int64 goodB2G_17();
__int64 goodG2B_20();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_18_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_61_bad();
int goodG2B_21();
int goodB2G_18();
int CWE400_Resource_Exhaustion__fscanf_fwrite_61_good();
int CWE400_Resource_Exhaustion__fgets_fwrite_22_bad();
int goodB2G1_10();
int goodB2G2_10();
int goodG2B_22();
int CWE400_Resource_Exhaustion__fgets_fwrite_22_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_53c_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_53c_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_53c_goodB2GSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_63b_badSink(int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_63b_goodG2BSink(int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_63b_goodB2GSink(int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_61b_badSource(unsigned int a1);
__int64 CWE400_Resource_Exhaustion__fgets_fwrite_61b_goodG2BSource();
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_61b_goodB2GSource(unsigned int a1);
void CWE400_Resource_Exhaustion__listen_socket_for_loop_17_bad();
void goodB2G_19();
__int64 goodG2B_23();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_17_good();
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_52b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_52b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_52b_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_12_bad();
__int64 goodB2G_20();
__int64 goodG2B_24();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_12_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_53_bad();
int goodG2B_25();
int goodB2G_21();
int CWE400_Resource_Exhaustion__fscanf_sleep_53_good();
__int64 __fastcall badSink_2(int a1);
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_44_bad();
__int64 __fastcall goodG2BSink_2(int a1);
__int64 goodG2B_26();
__int64 __fastcall goodB2GSink_1(int a1);
__int64 goodB2G_22();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_44_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54e_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54e_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54e_goodB2GSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_53c_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_53c_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_53c_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__fgets_fwrite_65_bad();
int goodG2B_27();
__int64 goodB2G_23();
__int64 CWE400_Resource_Exhaustion__fgets_fwrite_65_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54b_goodB2GSink(int a1);
int badSink_3();
int CWE400_Resource_Exhaustion__connect_socket_sleep_45_bad();
int goodG2BSink_3();
int goodG2B_28();
int goodB2GSink_2();
int goodB2G_24();
int CWE400_Resource_Exhaustion__connect_socket_sleep_45_good();
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54b_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__connect_socket_sleep_06_bad();
int goodB2G1_11();
int goodB2G2_11();
int goodG2B1_7();
int goodG2B2_7();
int CWE400_Resource_Exhaustion__connect_socket_sleep_06_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_67b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_67b_goodG2BSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_67b_goodB2GSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_61b_badSource(unsigned int a1);
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_61b_goodG2BSource();
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_61b_goodB2GSource(unsigned int a1);
int CWE400_Resource_Exhaustion__fgets_sleep_15_bad();
int goodB2G1_12();
int goodB2G2_12();
int goodG2B1_8();
int goodG2B2_8();
int CWE400_Resource_Exhaustion__fgets_sleep_15_good();
int CWE400_Resource_Exhaustion__fgets_fwrite_31_bad();
int goodG2B_29();
int goodB2G_25();
int CWE400_Resource_Exhaustion__fgets_fwrite_31_good();
int CWE400_Resource_Exhaustion__fgets_sleep_64_bad();
int goodG2B_30();
int goodB2G_26();
int CWE400_Resource_Exhaustion__fgets_sleep_64_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_16_bad();
int goodB2G_27();
int goodG2B_31();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_16_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_13_bad();
int goodB2G1_13();
int goodB2G2_13();
int goodG2B1_9();
int goodG2B2_9();
int CWE400_Resource_Exhaustion__fscanf_sleep_13_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_14_bad();
int goodB2G1_14();
int goodB2G2_14();
int goodG2B1_10();
int goodG2B2_10();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_14_good();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_32_bad();
__int64 goodG2B_32();
__int64 goodB2G_28();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_32_good();
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_52b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_52b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_52b_goodB2GSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54c_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54c_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54c_goodB2GSink(signed int a1);
int CWE400_Resource_Exhaustion__connect_socket_sleep_01_bad();
int goodG2B_33();
int goodB2G_29();
int CWE400_Resource_Exhaustion__connect_socket_sleep_01_good();
int CWE400_Resource_Exhaustion__fgets_fwrite_67_bad();
int goodG2B_34();
int goodB2G_30();
int CWE400_Resource_Exhaustion__fgets_fwrite_67_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_65_bad();
__int64 goodG2B_35();
__int64 goodB2G_31();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_65_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54d_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54d_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54d_goodB2GSink(signed int a1);
int CWE400_Resource_Exhaustion__fscanf_fwrite_63_bad();
int goodG2B_36();
int goodB2G_32();
int CWE400_Resource_Exhaustion__fscanf_fwrite_63_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_22_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_22_goodB2G1Sink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_22_goodB2G2Sink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_22_goodG2BSink(int a1);
int CWE400_Resource_Exhaustion__listen_socket_fwrite_12_bad();
int goodB2G_33();
int goodG2B_37();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_12_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_07_bad();
int goodB2G1_15();
int goodB2G2_15();
int goodG2B1_11();
int goodG2B2_11();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_07_good();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_04_bad();
__int64 goodB2G1_16();
__int64 goodB2G2_16();
__int64 goodG2B1_12();
__int64 goodG2B2_12();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_04_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_09_bad();
int goodB2G1_17();
__int64 goodB2G2_17();
__int64 goodG2B1_13();
__int64 goodG2B2_13();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_09_good();
int __fastcall badSink_4(__useconds_t a1);
int CWE400_Resource_Exhaustion__fscanf_sleep_21_bad();
int __fastcall goodB2G1Sink_0(signed int a1);
int goodB2G1_18();
int __fastcall goodB2G2Sink_0(signed int a1);
int goodB2G2_18();
int __fastcall goodG2BSink_4(__useconds_t a1);
int goodG2B_38();
int CWE400_Resource_Exhaustion__fscanf_sleep_21_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_03_bad();
int goodB2G1_19();
int goodB2G2_19();
int goodG2B1_14();
int goodG2B2_14();
int CWE400_Resource_Exhaustion__fscanf_sleep_03_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_68b_badSink();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_68b_goodG2BSink();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_68b_goodB2GSink();
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54e_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54e_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54e_goodB2GSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_51b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_51b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_51b_goodB2GSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_63b_badSink(int *a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_63b_goodG2BSink(int *a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_63b_goodB2GSink(int *a1);
int CWE400_Resource_Exhaustion__connect_socket_sleep_09_bad();
int goodB2G1_20();
int goodB2G2_20();
int goodG2B1_15();
int goodG2B2_15();
int CWE400_Resource_Exhaustion__connect_socket_sleep_09_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_18_bad();
int goodB2G_34();
int goodG2B_39();
int CWE400_Resource_Exhaustion__fscanf_sleep_18_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_16_bad();
int goodB2G_35();
__int64 goodG2B_40();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_16_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_32_bad();
int goodG2B_41();
int goodB2G_36();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_32_good();
int CWE400_Resource_Exhaustion__fgets_fwrite_68_bad();
int goodG2B_42();
int goodB2G_37();
int CWE400_Resource_Exhaustion__fgets_fwrite_68_good();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_14_bad();
int goodB2G1_21();
__int64 goodB2G2_21();
__int64 goodG2B1_16();
__int64 goodG2B2_16();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_14_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_11_bad();
int goodB2G1_22();
int goodB2G2_22();
int goodG2B1_17();
int goodG2B2_17();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_11_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_02_bad();
int goodB2G1_23();
int goodB2G2_23();
int goodG2B1_18();
int goodG2B2_18();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_02_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_03_bad();
int goodB2G1_24();
int goodB2G2_24();
__int64 goodG2B1_19();
__int64 goodG2B2_19();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_03_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_53b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_53b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_53b_goodB2GSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_64b_badSink(int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_64b_goodG2BSink(int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_64b_goodB2GSink(int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_52c_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_52c_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_52c_goodB2GSink(int a1);
void CWE400_Resource_Exhaustion__fscanf_fwrite_17_bad();
void goodB2G_38();
void goodG2B_43();
void CWE400_Resource_Exhaustion__fscanf_fwrite_17_good();
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_67b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_67b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_67b_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_51_bad();
__int64 goodG2B_44();
__int64 goodB2G_39();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_51_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_04_bad();
int goodB2G1_25();
int goodB2G2_25();
int goodG2B1_20();
int goodG2B2_20();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_04_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_68_bad();
__int64 goodG2B_45();
__int64 goodB2G_40();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_68_good();
int __fastcall badSink_5(int a1);
__int64 CWE400_Resource_Exhaustion__fscanf_fwrite_44_bad();
int __fastcall goodG2BSink_5(int a1);
int goodG2B_46();
void __fastcall goodB2GSink_3(int a1);
__int64 goodB2G_41();
__int64 CWE400_Resource_Exhaustion__fscanf_fwrite_44_good();
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54c_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54c_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54c_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__listen_socket_fwrite_01_bad();
int goodG2B_47();
int goodB2G_42();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_01_good();
int CWE400_Resource_Exhaustion__fgets_fwrite_13_bad();
int goodB2G1_26();
int goodB2G2_26();
int goodG2B1_21();
int goodG2B2_21();
int CWE400_Resource_Exhaustion__fgets_fwrite_13_good();
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_53d_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_53d_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_53d_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_31_bad();
__int64 goodG2B_48();
__int64 goodB2G_43();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_31_good();
__int64 badSink_6();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_45_bad();
__int64 goodG2BSink_6();
__int64 goodG2B_49();
__int64 goodB2GSink_4();
__int64 goodB2G_44();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_45_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_11_bad();
int goodB2G1_27();
int goodB2G2_27();
int goodG2B1_22();
int goodG2B2_22();
int CWE400_Resource_Exhaustion__fscanf_sleep_11_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_02_bad();
int goodB2G1_28();
int goodB2G2_28();
int goodG2B1_23();
int goodG2B2_23();
int CWE400_Resource_Exhaustion__fscanf_sleep_02_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_53_bad();
__int64 goodG2B_50();
__int64 goodB2G_45();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_53_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_06_bad();
__int64 goodB2G1_29();
__int64 goodB2G2_29();
__int64 goodG2B1_24();
__int64 goodG2B2_24();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_06_good();
int CWE400_Resource_Exhaustion__fgets_fwrite_03_bad();
int goodB2G1_30();
int goodB2G2_30();
int goodG2B1_25();
int goodG2B2_25();
int CWE400_Resource_Exhaustion__fgets_fwrite_03_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_63b_badSink(__useconds_t *a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_63b_goodG2BSink(__useconds_t *a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_63b_goodB2GSink(signed int *a1);
int CWE400_Resource_Exhaustion__connect_socket_sleep_54_bad();
int goodG2B_51();
int goodB2G_46();
int CWE400_Resource_Exhaustion__connect_socket_sleep_54_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_10_bad();
int goodB2G1_31();
int goodB2G2_31();
int goodG2B1_26();
int goodG2B2_26();
int CWE400_Resource_Exhaustion__fscanf_sleep_10_good();
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_22_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodB2G1Sink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodB2G2Sink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodG2BSink(int a1);
__int64 staticReturnsTrue_0();
__int64 staticReturnsFalse_0();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_08_bad();
int goodB2G1_32();
int goodB2G2_32();
int goodG2B1_27();
int goodG2B2_27();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_08_good();
int CWE400_Resource_Exhaustion__connect_socket_sleep_04_bad();
int goodB2G1_33();
int goodB2G2_33();
int goodG2B1_28();
int goodG2B2_28();
int CWE400_Resource_Exhaustion__connect_socket_sleep_04_good();
int __fastcall badSink_7(int a1);
int CWE400_Resource_Exhaustion__fgets_fwrite_21_bad();
int __fastcall goodB2G1Sink_1(int a1);
int goodB2G1_34();
int __fastcall goodB2G2Sink_1(int a1);
int goodB2G2_34();
int __fastcall goodG2BSink_7(int a1);
int goodG2B_52();
int CWE400_Resource_Exhaustion__fgets_fwrite_21_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_01_bad();
int goodG2B_53();
int goodB2G_47();
int CWE400_Resource_Exhaustion__fscanf_sleep_01_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_53d_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_53d_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_53d_goodB2GSink(signed int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_65b_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_65b_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_65b_goodB2GSink(signed int a1);
int CWE400_Resource_Exhaustion__fgets_fwrite_18_bad();
int goodB2G_48();
int goodG2B_54();
int CWE400_Resource_Exhaustion__fgets_fwrite_18_good();
int CWE400_Resource_Exhaustion__connect_socket_sleep_66_bad();
int goodG2B_55();
int goodB2G_49();
int CWE400_Resource_Exhaustion__connect_socket_sleep_66_good();
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_64b_badSink(int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_64b_goodG2BSink(int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_64b_goodB2GSink(int *a1);
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_12_bad();
__int64 goodB2G_50();
__int64 goodG2B_56();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_12_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_07_bad();
int goodB2G1_35();
int goodB2G2_35();
int goodG2B1_29();
int goodG2B2_29();
int CWE400_Resource_Exhaustion__fscanf_fwrite_07_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_52b_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_52b_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_52b_goodB2GSink(signed int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_53c_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_53c_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_53c_goodB2GSink(signed int a1);
int CWE400_Resource_Exhaustion__fscanf_fwrite_03_bad();
int goodB2G1_36();
int goodB2G2_36();
int goodG2B1_30();
int goodG2B2_30();
int CWE400_Resource_Exhaustion__fscanf_fwrite_03_good();
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54b_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fgets_fwrite_12_bad();
int goodB2G_51();
int goodG2B_57();
int CWE400_Resource_Exhaustion__fgets_fwrite_12_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_15_bad();
int goodB2G1_37();
int goodB2G2_37();
int goodG2B1_31();
int goodG2B2_31();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_15_good();
__int64 __fastcall badSource_0(unsigned int a1);
int CWE400_Resource_Exhaustion__connect_socket_fwrite_42_bad();
__int64 goodG2BSource_0();
int goodG2B_58();
__int64 __fastcall goodB2GSource_0(unsigned int a1);
int goodB2G_52();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_42_good();
__int64 CWE400_Resource_Exhaustion__connect_socket_sleep_65_bad();
int goodG2B_59();
__int64 goodB2G_53();
__int64 CWE400_Resource_Exhaustion__connect_socket_sleep_65_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_52_bad();
__int64 goodG2B_60();
__int64 goodB2G_54();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_52_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_64_bad();
__int64 goodG2B_61();
__int64 goodB2G_55();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_64_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_51b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_51b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_51b_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_14_bad();
int goodB2G1_38();
__int64 goodB2G2_38();
__int64 goodG2B1_32();
__int64 goodG2B2_32();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_14_good();
void CWE400_Resource_Exhaustion__fgets_sleep_17_bad();
void goodB2G_56();
int goodG2B_62();
int CWE400_Resource_Exhaustion__fgets_sleep_17_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_32_bad();
__int64 goodG2B_63();
__int64 goodB2G_57();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_32_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_16_bad();
int goodB2G_58();
__int64 goodG2B_64();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_16_good();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_13_bad();
int goodB2G1_39();
__int64 goodB2G2_39();
__int64 goodG2B1_33();
__int64 goodG2B2_33();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_13_good();
int CWE400_Resource_Exhaustion__fgets_fwrite_11_bad();
int goodB2G1_40();
int goodB2G2_40();
int goodG2B1_34();
int goodG2B2_34();
int CWE400_Resource_Exhaustion__fgets_fwrite_11_good();
int CWE400_Resource_Exhaustion__fgets_fwrite_02_bad();
int goodB2G1_41();
int goodB2G2_41();
int goodG2B1_35();
int goodG2B2_35();
int CWE400_Resource_Exhaustion__fgets_fwrite_02_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_67b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_67b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_67b_goodB2GSink(int a1);
__int64 staticReturnsTrue_1();
__int64 staticReturnsFalse_1();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_08_bad();
int goodB2G1_42();
__int64 goodB2G2_42();
__int64 goodG2B1_36();
__int64 goodG2B2_36();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_08_good();
int CWE400_Resource_Exhaustion__connect_socket_sleep_68b_badSink();
int CWE400_Resource_Exhaustion__connect_socket_sleep_68b_goodG2BSink();
int CWE400_Resource_Exhaustion__connect_socket_sleep_68b_goodB2GSink();
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54b_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54b_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54b_goodB2GSink(signed int a1);
int __fastcall badSink_8(__useconds_t a1);
__int64 CWE400_Resource_Exhaustion__fgets_sleep_44_bad();
int __fastcall goodG2BSink_8(__useconds_t a1);
int goodG2B_65();
int __fastcall goodB2GSink_5(signed int a1);
__int64 goodB2G_59();
__int64 CWE400_Resource_Exhaustion__fgets_sleep_44_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_05_bad();
int goodB2G1_43();
int goodB2G2_43();
int goodG2B1_37();
int goodG2B2_37();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_05_good();
int CWE400_Resource_Exhaustion__fgets_fwrite_09_bad();
int goodB2G1_44();
int goodB2G2_44();
int goodG2B1_38();
int goodG2B2_38();
int CWE400_Resource_Exhaustion__fgets_fwrite_09_good();
int __fastcall badSink_9(int a1);
int CWE400_Resource_Exhaustion__connect_socket_fwrite_41_bad();
int __fastcall goodG2BSink_9(int a1);
int goodG2B_66();
void __fastcall goodB2GSink_6(int a1);
void goodB2G_60();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_41_good();
int CWE400_Resource_Exhaustion__fgets_fwrite_10_bad();
int goodB2G1_45();
int goodB2G2_45();
int goodG2B1_39();
int goodG2B2_39();
int CWE400_Resource_Exhaustion__fgets_fwrite_10_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_51_bad();
__int64 goodG2B_67();
__int64 goodB2G_61();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_51_good();
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_65b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_65b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_65b_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_31_bad();
__int64 goodG2B_68();
__int64 goodB2G_62();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_31_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54c_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54c_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54c_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_66_bad();
__int64 goodG2B_69();
__int64 goodB2G_63();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_66_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_34_bad();
int goodG2B_70();
int goodB2G_64();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_34_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_54_bad();
__int64 goodG2B_71();
__int64 goodB2G_65();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_54_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_53b_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_53b_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_53b_goodB2GSink(signed int a1);
int CWE400_Resource_Exhaustion__fgets_fwrite_01_bad();
int goodG2B_72();
int goodB2G_66();
int CWE400_Resource_Exhaustion__fgets_fwrite_01_good();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_03_bad();
int goodB2G1_46();
int goodB2G2_46();
__int64 goodG2B1_40();
__int64 goodG2B2_40();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_03_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_53d_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_53d_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_53d_goodB2GSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_52c_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_52c_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_52c_goodB2GSink(signed int a1);
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_67_bad();
__int64 goodG2B_73();
__int64 goodB2G_67();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_67_good();
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_53c_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_53c_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_53c_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fscanf_sleep_54_bad();
int goodG2B_74();
int goodB2G_68();
int CWE400_Resource_Exhaustion__fscanf_sleep_54_good();
int CWE400_Resource_Exhaustion__connect_socket_sleep_68_bad();
int goodG2B_75();
int goodB2G_69();
int CWE400_Resource_Exhaustion__connect_socket_sleep_68_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_06_bad();
__int64 goodB2G1_47();
__int64 goodB2G2_47();
__int64 goodG2B1_41();
__int64 goodG2B2_41();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_06_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_22_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodB2G1Sink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodB2G2Sink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodG2BSink(int a1);
__int64 CWE400_Resource_Exhaustion__listen_socket_fwrite_65_bad();
int goodG2B_76();
__int64 goodB2G_70();
__int64 CWE400_Resource_Exhaustion__listen_socket_fwrite_65_good();
int CWE400_Resource_Exhaustion__fgets_sleep_09_bad();
int goodB2G1_48();
int goodB2G2_48();
int goodG2B1_42();
int goodG2B2_42();
int CWE400_Resource_Exhaustion__fgets_sleep_09_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_65b_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_65b_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_65b_goodB2GSink(signed int a1);
__int64 __fastcall badSource_1(unsigned int a1);
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_42_bad();
__int64 goodG2BSource_1();
__int64 goodG2B_77();
__int64 __fastcall goodB2GSource_1(unsigned int a1);
__int64 goodB2G_71();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_42_good();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_12_bad();
__int64 goodB2G_72();
__int64 goodG2B_78();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_12_good();
__int64 staticReturnsTrue_2();
__int64 staticReturnsFalse_2();
int CWE400_Resource_Exhaustion__fgets_fwrite_08_bad();
int goodB2G1_49();
int goodB2G2_49();
int goodG2B1_43();
int goodG2B2_43();
int CWE400_Resource_Exhaustion__fgets_fwrite_08_good();
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_53c_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_53c_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_53c_goodB2GSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54e_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54e_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54e_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__connect_socket_fwrite_66_bad();
int goodG2B_79();
int goodB2G_73();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_66_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_53d_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_53d_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_53d_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__listen_socket_fwrite_54_bad();
int goodG2B_80();
void goodB2G_74();
void CWE400_Resource_Exhaustion__listen_socket_fwrite_54_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_61b_badSource(unsigned int a1);
__int64 CWE400_Resource_Exhaustion__fscanf_fwrite_61b_goodG2BSource();
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_61b_goodB2GSource(unsigned int a1);
int CWE400_Resource_Exhaustion__fgets_sleep_07_bad();
int goodB2G1_50();
int goodB2G2_50();
int goodG2B1_44();
int goodG2B2_44();
int CWE400_Resource_Exhaustion__fgets_sleep_07_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_53c_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_53c_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_53c_goodB2GSink(signed int a1);
int CWE400_Resource_Exhaustion__listen_socket_fwrite_06_bad();
int goodB2G1_51();
int goodB2G2_51();
int goodG2B1_45();
int goodG2B2_45();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_06_good();
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_61b_badSource(unsigned int a1);
__int64 CWE400_Resource_Exhaustion__listen_socket_fwrite_61b_goodG2BSource();
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_61b_goodB2GSource(unsigned int a1);
int CWE400_Resource_Exhaustion__fgets_sleep_61_bad();
int goodG2B_81();
int goodB2G_75();
int CWE400_Resource_Exhaustion__fgets_sleep_61_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_11_bad();
int goodB2G1_52();
int goodB2G2_52();
int goodG2B1_46();
int goodG2B2_46();
int CWE400_Resource_Exhaustion__fscanf_fwrite_11_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_02_bad();
int goodB2G1_53();
int goodB2G2_53();
int goodG2B1_47();
int goodG2B2_47();
int CWE400_Resource_Exhaustion__fscanf_fwrite_02_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_66b_badSink(__int64 a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_66b_goodG2BSink(__int64 a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_66b_goodB2GSink(__int64 a1);
int CWE400_Resource_Exhaustion__fscanf_sleep_17_bad();
int goodB2G_76();
int goodG2B_82();
int CWE400_Resource_Exhaustion__fscanf_sleep_17_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54d_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54d_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54d_goodB2GSink(signed int a1);
int __fastcall badSink_10(__useconds_t a1);
__int64 CWE400_Resource_Exhaustion__fscanf_sleep_44_bad();
int __fastcall goodG2BSink_10(__useconds_t a1);
int goodG2B_83();
int __fastcall goodB2GSink_7(signed int a1);
__int64 goodB2G_77();
__int64 CWE400_Resource_Exhaustion__fscanf_sleep_44_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_63b_badSink(int *a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_63b_goodG2BSink(int *a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_63b_goodB2GSink(int *a1);
int CWE400_Resource_Exhaustion__connect_socket_fwrite_54_bad();
int goodG2B_84();
void goodB2G_78();
void CWE400_Resource_Exhaustion__connect_socket_fwrite_54_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_61_bad();
__int64 goodG2B_85();
__int64 goodB2G_79();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_61_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_10_bad();
int goodB2G1_54();
int goodB2G2_54();
int goodG2B1_48();
int goodG2B2_48();
int CWE400_Resource_Exhaustion__fscanf_fwrite_10_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_51_bad();
__int64 goodG2B_86();
__int64 goodB2G_80();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_51_good();
int CWE400_Resource_Exhaustion__fgets_sleep_13_bad();
int goodB2G1_55();
int goodB2G2_55();
int goodG2B1_49();
int goodG2B2_49();
int CWE400_Resource_Exhaustion__fgets_sleep_13_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_61_bad();
int goodG2B_87();
int goodB2G_81();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_61_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54c_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54c_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54c_goodB2GSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_61b_badSource(unsigned int a1);
__int64 CWE400_Resource_Exhaustion__fscanf_sleep_61b_goodG2BSource();
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_61b_goodB2GSource(unsigned int a1);
int CWE400_Resource_Exhaustion__fscanf_fwrite_01_bad();
int goodG2B_88();
int goodB2G_82();
int CWE400_Resource_Exhaustion__fscanf_fwrite_01_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_66b_badSink(__int64 a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_66b_goodG2BSink(__int64 a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_66b_goodB2GSink(__int64 a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_65b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_65b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_65b_goodB2GSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54e_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54e_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54e_goodB2GSink(int a1);
__int64 badSink_11();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_45_bad();
__int64 goodG2BSink_11();
__int64 goodG2B_89();
__int64 goodB2GSink_8();
__int64 goodB2G_83();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_45_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_66_bad();
__int64 goodG2B_90();
__int64 goodB2G_84();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_66_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_07_bad();
int goodB2G1_56();
int goodB2G2_56();
int goodG2B1_50();
int goodG2B2_50();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_07_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_06_bad();
__int64 goodB2G1_57();
__int64 goodB2G2_57();
__int64 goodG2B1_51();
__int64 goodG2B2_51();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_06_good();
int CWE400_Resource_Exhaustion__fgets_fwrite_63_bad();
int goodG2B_91();
int goodB2G_85();
int CWE400_Resource_Exhaustion__fgets_fwrite_63_good();
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_63b_badSink(int *a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_63b_goodG2BSink(int *a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_63b_goodB2GSink(int *a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_53c_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_53c_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_53c_goodB2GSink(int a1);
int __fastcall badSink_12(__useconds_t a1);
int CWE400_Resource_Exhaustion__fgets_sleep_21_bad();
int __fastcall goodB2G1Sink_2(signed int a1);
int goodB2G1_58();
int __fastcall goodB2G2Sink_2(signed int a1);
int goodB2G2_58();
int __fastcall goodG2BSink_12(__useconds_t a1);
int goodG2B_92();
int CWE400_Resource_Exhaustion__fgets_sleep_21_good();
int CWE400_Resource_Exhaustion__fgets_sleep_03_bad();
int goodB2G1_59();
int goodB2G2_59();
int goodG2B1_52();
int goodG2B2_52();
int CWE400_Resource_Exhaustion__fgets_sleep_03_good();
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_61b_badSource(unsigned int a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_61b_goodG2BSource();
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_61b_goodB2GSource(unsigned int a1);
int CWE400_Resource_Exhaustion__fscanf_fwrite_04_bad();
int goodB2G1_60();
int goodB2G2_60();
int goodG2B1_53();
int goodG2B2_53();
int CWE400_Resource_Exhaustion__fscanf_fwrite_04_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_14_bad();
int goodB2G1_61();
__int64 goodB2G2_61();
__int64 goodG2B1_54();
__int64 goodG2B2_54();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_14_good();
int CWE400_Resource_Exhaustion__fgets_sleep_18_bad();
int goodB2G_86();
int goodG2B_93();
int CWE400_Resource_Exhaustion__fgets_sleep_18_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_32_bad();
__int64 goodG2B_94();
__int64 goodB2G_87();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_32_good();
__int64 CWE400_Resource_Exhaustion__connect_socket_fwrite_65_bad();
int goodG2B_95();
__int64 goodB2G_88();
__int64 CWE400_Resource_Exhaustion__connect_socket_fwrite_65_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_66_bad();
int goodG2B_96();
int goodB2G_89();
int CWE400_Resource_Exhaustion__fscanf_fwrite_66_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_07_bad();
int goodB2G1_62();
int goodB2G2_62();
int goodG2B1_55();
int goodG2B2_55();
int CWE400_Resource_Exhaustion__fscanf_sleep_07_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_64b_badSink(int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_64b_goodG2BSink(int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_64b_goodB2GSink(int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_67b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_67b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_67b_goodB2GSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54d_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54d_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54d_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fgets_sleep_12_bad();
int goodB2G_90();
int goodG2B_97();
int CWE400_Resource_Exhaustion__fgets_sleep_12_good();
int CWE400_Resource_Exhaustion__connect_socket_sleep_15_bad();
int goodB2G1_63();
int goodB2G2_63();
int goodG2B1_56();
int goodG2B2_56();
int CWE400_Resource_Exhaustion__connect_socket_sleep_15_good();
int badSink_13();
int CWE400_Resource_Exhaustion__fscanf_sleep_45_bad();
int goodG2BSink_13();
int goodG2B_98();
int goodB2GSink_9();
int goodB2G_91();
int CWE400_Resource_Exhaustion__fscanf_sleep_45_good();
void CWE400_Resource_Exhaustion__fgets_fwrite_17_bad();
void goodB2G_92();
void goodG2B_99();
void CWE400_Resource_Exhaustion__fgets_fwrite_17_good();
__int64 __fastcall badSource_2(unsigned int a1);
int CWE400_Resource_Exhaustion__connect_socket_sleep_42_bad();
__int64 goodG2BSource_2();
int goodG2B_100();
__int64 __fastcall goodB2GSource_2(unsigned int a1);
int goodB2G_93();
int CWE400_Resource_Exhaustion__connect_socket_sleep_42_good();
int __fastcall badSink_14(int a1);
__int64 CWE400_Resource_Exhaustion__fgets_fwrite_44_bad();
int __fastcall goodG2BSink_14(int a1);
int goodG2B_101();
void __fastcall goodB2GSink_10(int a1);
__int64 goodB2G_94();
__int64 CWE400_Resource_Exhaustion__fgets_fwrite_44_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_04_bad();
__int64 goodB2G1_64();
__int64 goodB2G2_64();
__int64 goodG2B1_57();
__int64 goodG2B2_57();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_04_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_31_bad();
__int64 goodG2B_102();
__int64 goodB2G_95();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_31_good();
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_63b_badSink(int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_63b_goodG2BSink(int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_63b_goodB2GSink(int *a1);
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_64_bad();
__int64 goodG2B_103();
__int64 goodB2G_96();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_64_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_51b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_51b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_51b_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_67_bad();
__int64 goodG2B_104();
__int64 goodB2G_97();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_67_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_53b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_53b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_53b_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__connect_socket_sleep_03_bad();
int goodB2G1_65();
int goodB2G2_65();
int goodG2B1_58();
int goodG2B2_58();
int CWE400_Resource_Exhaustion__connect_socket_sleep_03_good();
int CWE400_Resource_Exhaustion__fgets_sleep_11_bad();
int goodB2G1_66();
int goodB2G2_66();
int goodG2B1_59();
int goodG2B2_59();
int CWE400_Resource_Exhaustion__fgets_sleep_11_good();
int CWE400_Resource_Exhaustion__fgets_sleep_02_bad();
int goodB2G1_67();
int goodB2G2_67();
int goodG2B1_60();
int goodG2B2_60();
int CWE400_Resource_Exhaustion__fgets_sleep_02_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_52c_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_52c_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_52c_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fscanf_fwrite_54_bad();
int goodG2B_105();
void goodB2G_98();
void CWE400_Resource_Exhaustion__fscanf_fwrite_54_good();
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_22_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodB2G1Sink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodB2G2Sink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodG2BSink(int a1);
int CWE400_Resource_Exhaustion__connect_socket_sleep_05_bad();
int goodB2G1_68();
int goodB2G2_68();
int goodG2B1_61();
int goodG2B2_61();
int CWE400_Resource_Exhaustion__connect_socket_sleep_05_good();
int __fastcall badSink_15(__useconds_t a1);
int CWE400_Resource_Exhaustion__connect_socket_sleep_41_bad();
int __fastcall goodG2BSink_15(__useconds_t a1);
int goodG2B_106();
int __fastcall goodB2GSink_11(signed int a1);
int goodB2G_99();
int CWE400_Resource_Exhaustion__connect_socket_sleep_41_good();
int CWE400_Resource_Exhaustion__fgets_sleep_10_bad();
int goodB2G1_69();
int goodB2G2_69();
int goodG2B1_62();
int goodG2B2_62();
int CWE400_Resource_Exhaustion__fgets_sleep_10_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_52b_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_52b_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_52b_goodB2GSink(signed int a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_63_bad();
__int64 goodG2B_107();
__int64 goodB2G_100();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_63_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54c_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54c_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54c_goodB2GSink(signed int a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_61_bad();
__int64 goodG2B_108();
__int64 goodB2G_101();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_61_good();
int CWE400_Resource_Exhaustion__connect_socket_sleep_34_bad();
int goodG2B_109();
int goodB2G_102();
int CWE400_Resource_Exhaustion__connect_socket_sleep_34_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_65b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_65b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_65b_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fgets_sleep_01_bad();
int goodG2B_110();
int goodB2G_103();
int CWE400_Resource_Exhaustion__fgets_sleep_01_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_53_bad();
int goodG2B_111();
void goodB2G_104();
void CWE400_Resource_Exhaustion__connect_socket_fwrite_53_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_66b_badSink(__int64 a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_66b_goodG2BSink(__int64 a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_66b_goodB2GSink(__int64 a1);
int CWE400_Resource_Exhaustion__fgets_sleep_16_bad();
int goodB2G_105();
int goodG2B_112();
int CWE400_Resource_Exhaustion__fgets_sleep_16_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_22_bad();
int goodB2G1_70();
__int64 goodB2G2_70();
__int64 goodG2B_113();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_22_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_15_bad();
int goodB2G1_71();
int goodB2G2_71();
int goodG2B1_63();
int goodG2B2_63();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_15_good();
int CWE400_Resource_Exhaustion__fgets_fwrite_07_bad();
int goodB2G1_72();
int goodB2G2_72();
int goodG2B1_64();
int goodG2B2_64();
int CWE400_Resource_Exhaustion__fgets_fwrite_07_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_53c_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_53c_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_53c_goodB2GSink(int a1);
__int64 __fastcall badSource_3(unsigned int a1);
int CWE400_Resource_Exhaustion__listen_socket_fwrite_42_bad();
__int64 goodG2BSource_3();
int goodG2B_114();
__int64 __fastcall goodB2GSource_3(unsigned int a1);
int goodB2G_106();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_42_good();
__int64 badSink_16();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_45_bad();
__int64 goodG2BSink_16();
__int64 goodG2B_115();
__int64 goodB2GSink_12();
__int64 goodB2G_107();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_45_good();
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54d_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54d_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54d_goodB2GSink(int a1);
__int64 staticReturnsTrue_3();
__int64 staticReturnsFalse_3();
int CWE400_Resource_Exhaustion__fgets_sleep_08_bad();
int goodB2G1_73();
int goodB2G2_73();
int goodG2B1_65();
int goodG2B2_65();
int CWE400_Resource_Exhaustion__fgets_sleep_08_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_68_bad();
__int64 goodG2B_116();
__int64 goodB2G_108();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_68_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_09_bad();
int goodB2G1_74();
int goodB2G2_74();
int goodG2B1_66();
int goodG2B2_66();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_09_good();
__int64 CWE400_Resource_Exhaustion__fscanf_fwrite_65_bad();
int goodG2B_117();
__int64 goodB2G_109();
__int64 CWE400_Resource_Exhaustion__fscanf_fwrite_65_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54e_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54e_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54e_goodB2GSink(signed int a1);
void CWE400_Resource_Exhaustion__connect_socket_for_loop_17_bad();
void goodB2G_110();
__int64 goodG2B_118();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_17_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_52b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_52b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_52b_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_02_bad();
int goodB2G1_75();
int goodB2G2_75();
__int64 goodG2B1_67();
__int64 goodG2B2_67();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_02_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_61_bad();
int goodG2B_119();
int goodB2G_111();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_61_good();
__int64 __fastcall badSink_17(int a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_44_bad();
__int64 __fastcall goodG2BSink_17(int a1);
__int64 goodG2B_120();
__int64 __fastcall goodB2GSink_13(int a1);
__int64 goodB2G_112();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_44_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_14_bad();
int goodB2G1_76();
__int64 goodB2G2_76();
__int64 goodG2B1_68();
__int64 goodG2B2_68();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_14_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_32_bad();
__int64 goodG2B_121();
__int64 goodB2G_113();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_32_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_15_bad();
int goodB2G1_77();
int goodB2G2_77();
int goodG2B1_69();
int goodG2B2_69();
int CWE400_Resource_Exhaustion__fscanf_sleep_15_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_05_bad();
int goodB2G1_78();
int goodB2G2_78();
int goodG2B1_70();
int goodG2B2_70();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_05_good();
int __fastcall badSink_18(int a1);
int CWE400_Resource_Exhaustion__listen_socket_fwrite_41_bad();
int __fastcall goodG2BSink_18(int a1);
int goodG2B_122();
void __fastcall goodB2GSink_14(int a1);
void goodB2G_114();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_41_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_68b_badSink();
int CWE400_Resource_Exhaustion__fscanf_fwrite_68b_goodG2BSink();
int CWE400_Resource_Exhaustion__fscanf_fwrite_68b_goodB2GSink();
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_67b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_67b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_67b_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fgets_fwrite_06_bad();
int goodB2G1_79();
int goodB2G2_79();
int goodG2B1_71();
int goodG2B2_71();
int CWE400_Resource_Exhaustion__fgets_fwrite_06_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54b_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54b_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54b_goodB2GSink(signed int a1);
__int64 __fastcall badSource_4(unsigned int a1);
int CWE400_Resource_Exhaustion__fscanf_sleep_42_bad();
__int64 goodG2BSource_4();
int goodG2B_123();
__int64 __fastcall goodB2GSource_4(unsigned int a1);
int goodB2G_115();
int CWE400_Resource_Exhaustion__fscanf_sleep_42_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_63b_badSink(int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_63b_goodG2BSink(int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_63b_goodB2GSink(int *a1);
int CWE400_Resource_Exhaustion__connect_socket_fwrite_52_bad();
int goodG2B_124();
void goodB2G_116();
void CWE400_Resource_Exhaustion__connect_socket_fwrite_52_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_34_bad();
int goodG2B_125();
int goodB2G_117();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_34_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_51b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_51b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_51b_goodB2GSink(int a1);
__int64 __fastcall badSink_19(int a1);
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_21_bad();
int __fastcall goodB2G1Sink_3(int a1);
int goodB2G1_80();
__int64 __fastcall goodB2G2Sink_3(int a1);
__int64 goodB2G2_80();
__int64 __fastcall goodG2BSink_19(int a1);
__int64 goodG2B_126();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_21_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_03_bad();
int goodB2G1_81();
int goodB2G2_81();
__int64 goodG2B1_72();
__int64 goodG2B2_72();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_03_good();
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_66b_badSink(__int64 a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_66b_goodG2BSink(__int64 a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_66b_goodB2GSink(__int64 a1);
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_31_bad();
__int64 goodG2B_127();
__int64 goodB2G_118();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_31_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_53b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_53b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_53b_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_18_bad();
int goodB2G_119();
__int64 goodG2B_128();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_18_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_52c_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_52c_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_52c_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fscanf_fwrite_68_bad();
int goodG2B_129();
int goodB2G_120();
int CWE400_Resource_Exhaustion__fscanf_fwrite_68_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_67_bad();
__int64 goodG2B_130();
__int64 goodB2G_121();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_67_good();
int CWE400_Resource_Exhaustion__fgets_sleep_54_bad();
int goodG2B_131();
int goodB2G_122();
int CWE400_Resource_Exhaustion__fgets_sleep_54_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_63_bad();
__int64 goodG2B_132();
__int64 goodB2G_123();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_63_good();
__int64 staticReturnsTrue_4();
__int64 staticReturnsFalse_4();
int CWE400_Resource_Exhaustion__connect_socket_sleep_08_bad();
int goodB2G1_82();
int goodB2G2_82();
int goodG2B1_73();
int goodG2B2_73();
int CWE400_Resource_Exhaustion__connect_socket_sleep_08_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_51_bad();
int goodG2B_133();
void goodB2G_124();
void CWE400_Resource_Exhaustion__connect_socket_fwrite_51_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_22_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_22_goodB2G1Sink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_22_goodB2G2Sink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_22_goodG2BSink(int a1);
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_12_bad();
__int64 goodB2G_125();
__int64 goodG2B_134();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_12_good();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_07_bad();
int goodB2G1_83();
__int64 goodB2G2_83();
__int64 goodG2B1_74();
__int64 goodG2B2_74();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_07_good();
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54e_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54e_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54e_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fscanf_sleep_34_bad();
int goodG2B_135();
int goodB2G_126();
int CWE400_Resource_Exhaustion__fscanf_sleep_34_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_66_bad();
int goodG2B_136();
int goodB2G_127();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_66_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_53_bad();
int goodG2B_137();
void goodB2G_128();
void CWE400_Resource_Exhaustion__fscanf_fwrite_53_good();
int badSink_20();
int CWE400_Resource_Exhaustion__fgets_sleep_45_bad();
int goodG2BSink_20();
int goodG2B_138();
int goodB2GSink_15();
int goodB2G_129();
int CWE400_Resource_Exhaustion__fgets_sleep_45_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_65b_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_65b_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_65b_goodB2GSink(signed int a1);
__int64 CWE400_Resource_Exhaustion__fgets_sleep_65_bad();
int goodG2B_139();
__int64 goodB2G_130();
__int64 CWE400_Resource_Exhaustion__fgets_sleep_65_good();
int badSink_21();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_45_bad();
int goodG2BSink_21();
int goodG2B_140();
int goodB2GSink_16();
int goodB2G_131();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_45_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_06_bad();
int goodB2G1_84();
int goodB2G2_84();
int goodG2B1_75();
int goodG2B2_75();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_06_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_53c_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_53c_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_53c_goodB2GSink(signed int a1);
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_11_bad();
int goodB2G1_85();
__int64 goodB2G2_85();
__int64 goodG2B1_76();
__int64 goodG2B2_76();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_11_good();
int CWE400_Resource_Exhaustion__fgets_fwrite_15_bad();
int goodB2G1_86();
int goodB2G2_86();
int goodG2B1_77();
int goodG2B2_77();
int CWE400_Resource_Exhaustion__fgets_fwrite_15_good();
__int64 __fastcall badSource_5(unsigned int a1);
int CWE400_Resource_Exhaustion__fgets_fwrite_42_bad();
__int64 goodG2BSource_5();
int goodG2B_141();
__int64 __fastcall goodB2GSource_5(unsigned int a1);
int goodB2G_132();
int CWE400_Resource_Exhaustion__fgets_fwrite_42_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54e_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54e_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54e_goodB2GSink(signed int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_53c_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_53c_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_53c_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fscanf_sleep_66_bad();
int goodG2B_142();
int goodB2G_133();
int CWE400_Resource_Exhaustion__fscanf_sleep_66_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_52b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_52b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_52b_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_10_bad();
int goodB2G1_87();
__int64 goodB2G2_87();
__int64 goodG2B1_78();
__int64 goodG2B2_78();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_10_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54d_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54d_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54d_goodB2GSink(int a1);
__int64 __fastcall badSink_22(int a1);
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_44_bad();
__int64 __fastcall goodG2BSink_22(int a1);
__int64 goodG2B_143();
__int64 __fastcall goodB2GSink_17(int a1);
__int64 goodB2G_134();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_44_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_10_bad();
int goodB2G1_88();
int goodB2G2_88();
int goodG2B1_79();
int goodG2B2_79();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_10_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54b_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54b_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54b_goodB2GSink(signed int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54c_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54c_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54c_goodB2GSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_64b_badSink(int *a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_64b_goodG2BSink(int *a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_64b_goodB2GSink(int *a1);
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_01_bad();
__int64 goodG2B_144();
int goodB2G_135();
int CWE400_Resource_Exhaustion__listen_socket_for_loop_01_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_17_bad();
__int64 goodB2G_136();
__int64 goodG2B_145();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_17_good();
int CWE400_Resource_Exhaustion__fgets_sleep_68b_badSink();
int CWE400_Resource_Exhaustion__fgets_sleep_68b_goodG2BSink();
int CWE400_Resource_Exhaustion__fgets_sleep_68b_goodB2GSink();
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_61b_badSource(unsigned int a1);
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_61b_goodG2BSource();
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_61b_goodB2GSource(unsigned int a1);
int CWE400_Resource_Exhaustion__fgets_fwrite_05_bad();
int goodB2G1_89();
int goodB2G2_89();
int goodG2B1_80();
int goodG2B2_80();
int CWE400_Resource_Exhaustion__fgets_fwrite_05_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_22_bad();
int goodB2G1_90();
int goodB2G2_90();
int goodG2B_146();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_22_good();
int __fastcall badSink_23(int a1);
int CWE400_Resource_Exhaustion__fgets_fwrite_41_bad();
int __fastcall goodG2BSink_23(int a1);
int goodG2B_147();
void __fastcall goodB2GSink_18(int a1);
void goodB2G_137();
int CWE400_Resource_Exhaustion__fgets_fwrite_41_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_52_bad();
int goodG2B_148();
void goodB2G_138();
void CWE400_Resource_Exhaustion__fscanf_fwrite_52_good();
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_63b_badSink(int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_63b_goodG2BSink(int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_63b_goodB2GSink(int *a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_51b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_51b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_51b_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__connect_socket_sleep_14_bad();
int goodB2G1_91();
int goodB2G2_91();
int goodG2B1_81();
int goodG2B2_81();
int CWE400_Resource_Exhaustion__connect_socket_sleep_14_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_16_bad();
int goodB2G_139();
int goodG2B_149();
int CWE400_Resource_Exhaustion__fscanf_fwrite_16_good();
int CWE400_Resource_Exhaustion__fgets_fwrite_14_bad();
int goodB2G1_92();
int goodB2G2_92();
int goodG2B1_82();
int goodG2B2_82();
int CWE400_Resource_Exhaustion__fgets_fwrite_14_good();
__int64 staticReturnsTrue_5();
__int64 staticReturnsFalse_5();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_08_bad();
int goodB2G1_93();
__int64 goodB2G2_93();
__int64 goodG2B1_83();
__int64 goodG2B2_83();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_08_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_53b_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_53b_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_53b_goodB2GSink(signed int a1);
__int64 __fastcall badSink_24(int a1);
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_21_bad();
int __fastcall goodB2G1Sink_4(int a1);
int goodB2G1_94();
__int64 __fastcall goodB2G2Sink_4(int a1);
__int64 goodB2G2_94();
__int64 __fastcall goodG2BSink_24(int a1);
__int64 goodG2B_150();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_21_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_66b_badSink(__int64 a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_66b_goodG2BSink(__int64 a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_66b_goodB2GSink(__int64 a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_52c_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_52c_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_52c_goodB2GSink(signed int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_66b_badSink(__int64 a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_66b_goodG2BSink(__int64 a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_66b_goodB2GSink(__int64 a1);
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_61_bad();
__int64 goodG2B_151();
__int64 goodB2G_140();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_61_good();
int CWE400_Resource_Exhaustion__fgets_sleep_68_bad();
int goodG2B_152();
int goodB2G_141();
int CWE400_Resource_Exhaustion__fgets_sleep_68_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_18_bad();
int goodB2G_142();
__int64 goodG2B_153();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_18_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_51_bad();
int goodG2B_154();
void goodB2G_143();
void CWE400_Resource_Exhaustion__fscanf_fwrite_51_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_07_bad();
int goodB2G1_95();
__int64 goodB2G2_95();
__int64 goodG2B1_84();
__int64 goodG2B2_84();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_07_good();
int CWE400_Resource_Exhaustion__connect_socket_sleep_31_bad();
int goodG2B_155();
int goodB2G_144();
int CWE400_Resource_Exhaustion__connect_socket_sleep_31_good();
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54b_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_09_bad();
int goodB2G1_96();
__int64 goodB2G2_96();
__int64 goodG2B1_85();
__int64 goodG2B2_85();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_09_good();
int CWE400_Resource_Exhaustion__fgets_sleep_53_bad();
int goodG2B_156();
int goodB2G_145();
int CWE400_Resource_Exhaustion__fgets_sleep_53_good();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_15_bad();
int goodB2G1_97();
int goodB2G2_97();
__int64 goodG2B1_86();
__int64 goodG2B2_86();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_15_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54e_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54e_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54e_goodB2GSink(int a1);
int badSink_25();
int CWE400_Resource_Exhaustion__fscanf_fwrite_45_bad();
int goodG2BSink_25();
int goodG2B_157();
int goodB2GSink_19();
int goodB2G_146();
int CWE400_Resource_Exhaustion__fscanf_fwrite_45_good();
int CWE400_Resource_Exhaustion__fgets_fwrite_66_bad();
int goodG2B_158();
int goodB2G_147();
int CWE400_Resource_Exhaustion__fgets_fwrite_66_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_67b_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_67b_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_67b_goodB2GSink(signed int a1);
__int64 __fastcall badSource_6(unsigned int a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_42_bad();
__int64 goodG2BSource_6();
__int64 goodG2B_159();
__int64 __fastcall goodB2GSource_6(unsigned int a1);
__int64 goodB2G_148();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_42_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_52b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_52b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_52b_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fscanf_fwrite_06_bad();
int goodB2G1_98();
int goodB2G2_98();
int goodG2B1_87();
int goodG2B2_87();
int CWE400_Resource_Exhaustion__fscanf_fwrite_06_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_22_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodB2G1Sink(signed int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodB2G2Sink(signed int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodG2BSink(__useconds_t a1);
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_11_bad();
int goodB2G1_99();
__int64 goodB2G2_99();
__int64 goodG2B1_88();
__int64 goodG2B2_88();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_11_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_02_bad();
int goodB2G1_100();
int goodB2G2_100();
__int64 goodG2B1_89();
__int64 goodG2B2_89();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_02_good();
int CWE400_Resource_Exhaustion__fgets_fwrite_04_bad();
int goodB2G1_101();
int goodB2G2_101();
int goodG2B1_90();
int goodG2B2_90();
int CWE400_Resource_Exhaustion__fgets_fwrite_04_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_14_bad();
int goodB2G1_102();
int goodB2G2_102();
int goodG2B1_91();
int goodG2B2_91();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_14_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_52b_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_52b_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_52b_goodB2GSink(signed int a1);
int CWE400_Resource_Exhaustion__listen_socket_fwrite_32_bad();
int goodG2B_160();
int goodB2G_149();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_32_good();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_05_bad();
int goodB2G1_103();
__int64 goodB2G2_103();
__int64 goodG2B1_92();
__int64 goodG2B2_92();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_05_good();
__int64 __fastcall badSink_26(int a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_41_bad();
__int64 __fastcall goodG2BSink_26(int a1);
__int64 goodG2B_161();
__int64 __fastcall goodB2GSink_20(int a1);
__int64 goodB2G_150();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_41_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_09_bad();
int goodB2G1_104();
int goodB2G2_104();
int goodG2B1_93();
int goodG2B2_93();
int CWE400_Resource_Exhaustion__fscanf_fwrite_09_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_64b_badSink(int *a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_64b_goodG2BSink(int *a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_64b_goodB2GSink(int *a1);
int CWE400_Resource_Exhaustion__fscanf_fwrite_64_bad();
int goodG2B_162();
int goodB2G_151();
int CWE400_Resource_Exhaustion__fscanf_fwrite_64_good();
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_67b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_67b_goodG2BSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_67b_goodB2GSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_65b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_65b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_65b_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__connect_socket_sleep_22_bad();
int goodB2G1_105();
int goodB2G2_105();
int goodG2B_163();
int CWE400_Resource_Exhaustion__connect_socket_sleep_22_good();
int CWE400_Resource_Exhaustion__fgets_sleep_32_bad();
int goodG2B_164();
int goodB2G_152();
int CWE400_Resource_Exhaustion__fgets_sleep_32_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_03_bad();
int goodB2G1_106();
int goodB2G2_106();
int goodG2B1_94();
int goodG2B2_94();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_03_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54c_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54c_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54c_goodB2GSink(int a1);
int __fastcall badSink_27(__useconds_t a1);
int CWE400_Resource_Exhaustion__fscanf_sleep_41_bad();
int __fastcall goodG2BSink_27(__useconds_t a1);
int goodG2B_165();
int __fastcall goodB2GSink_21(signed int a1);
int goodB2G_153();
int CWE400_Resource_Exhaustion__fscanf_sleep_41_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_01_bad();
__int64 goodG2B_166();
int goodB2G_154();
int CWE400_Resource_Exhaustion__fgets_for_loop_01_good();
int CWE400_Resource_Exhaustion__fgets_sleep_52_bad();
int goodG2B_167();
int goodB2G_155();
int CWE400_Resource_Exhaustion__fgets_sleep_52_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_04_bad();
int goodB2G1_107();
int goodB2G2_107();
int goodG2B1_95();
int goodG2B2_95();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_04_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_31_bad();
int goodG2B_168();
int goodB2G_156();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_31_good();
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_64b_badSink(int *a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_64b_goodG2BSink(int *a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_64b_goodB2GSink(int *a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54d_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54d_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54d_goodB2GSink(signed int a1);
int CWE400_Resource_Exhaustion__fscanf_sleep_14_bad();
int goodB2G1_108();
int goodB2G2_108();
int goodG2B1_96();
int goodG2B2_96();
int CWE400_Resource_Exhaustion__fscanf_sleep_14_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_63b_badSink(int *a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_63b_goodG2BSink(int *a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_63b_goodB2GSink(int *a1);
int CWE400_Resource_Exhaustion__fscanf_sleep_12_bad();
int goodB2G_157();
int goodG2B_169();
int CWE400_Resource_Exhaustion__fscanf_sleep_12_good();
__int64 staticReturnsTrue_6();
__int64 staticReturnsFalse_6();
int CWE400_Resource_Exhaustion__fscanf_fwrite_08_bad();
int goodB2G1_109();
int goodB2G2_109();
int goodG2B1_97();
int goodG2B2_97();
int CWE400_Resource_Exhaustion__fscanf_fwrite_08_good();
int CWE400_Resource_Exhaustion__connect_socket_sleep_13_bad();
int goodB2G1_110();
int goodB2G2_110();
int goodG2B1_98();
int goodG2B2_98();
int CWE400_Resource_Exhaustion__connect_socket_sleep_13_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_67_bad();
int goodG2B_170();
int goodB2G_158();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_67_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_65_bad();
__int64 goodG2B_171();
__int64 goodB2G_159();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_65_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_67b_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_67b_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_67b_goodB2GSink(signed int a1);
int CWE400_Resource_Exhaustion__fscanf_sleep_09_bad();
int goodB2G1_111();
int goodB2G2_111();
int goodG2B1_99();
int goodG2B2_99();
int CWE400_Resource_Exhaustion__fscanf_sleep_09_good();
int CWE400_Resource_Exhaustion__fgets_sleep_66_bad();
int goodG2B_172();
int goodB2G_160();
int CWE400_Resource_Exhaustion__fgets_sleep_66_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_09_bad();
int goodB2G1_112();
__int64 goodB2G2_112();
__int64 goodG2B1_100();
__int64 goodG2B2_100();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_09_good();
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodB2G1Sink(int a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodB2G2Sink(int a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54e_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54e_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54e_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_66_bad();
__int64 goodG2B_173();
__int64 goodB2G_161();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_66_good();
int CWE400_Resource_Exhaustion__fgets_sleep_51_bad();
int goodG2B_174();
int goodB2G_162();
int CWE400_Resource_Exhaustion__fgets_sleep_51_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_63_bad();
int goodG2B_175();
int goodB2G_163();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_63_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_04_bad();
int goodB2G1_113();
int goodB2G2_113();
int goodG2B1_101();
int goodG2B2_101();
int CWE400_Resource_Exhaustion__fscanf_sleep_04_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_31_bad();
int goodG2B_176();
int goodB2G_164();
int CWE400_Resource_Exhaustion__fscanf_sleep_31_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_68b_badSink();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_68b_goodG2BSink();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_68b_goodB2GSink();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_65_bad();
__int64 goodG2B_177();
__int64 goodB2G_165();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_65_good();
int __fastcall badSink_28(__useconds_t a1);
int CWE400_Resource_Exhaustion__connect_socket_sleep_21_bad();
int __fastcall goodB2G1Sink_5(signed int a1);
int goodB2G1_114();
int __fastcall goodB2G2Sink_5(signed int a1);
int goodB2G2_114();
int __fastcall goodG2BSink_28(__useconds_t a1);
int goodG2B_178();
int CWE400_Resource_Exhaustion__connect_socket_sleep_21_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54b_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fscanf_sleep_67_bad();
int goodG2B_179();
int goodB2G_166();
int CWE400_Resource_Exhaustion__fscanf_sleep_67_good();
__int64 staticReturnsTrue_7();
__int64 staticReturnsFalse_7();
int CWE400_Resource_Exhaustion__fscanf_sleep_08_bad();
int goodB2G1_115();
int goodB2G2_115();
int goodG2B1_102();
int goodG2B2_102();
int CWE400_Resource_Exhaustion__fscanf_sleep_08_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_04_bad();
__int64 goodB2G1_116();
__int64 goodB2G2_116();
__int64 goodG2B1_103();
__int64 goodG2B2_103();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_04_good();
int CWE400_Resource_Exhaustion__connect_socket_sleep_53_bad();
int goodG2B_180();
int goodB2G_167();
int CWE400_Resource_Exhaustion__connect_socket_sleep_53_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_22_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_22_goodB2G1Sink(signed int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_22_goodB2G2Sink(signed int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_22_goodG2BSink(__useconds_t a1);
int CWE400_Resource_Exhaustion__connect_socket_sleep_18_bad();
int goodB2G_168();
int goodG2B_181();
int CWE400_Resource_Exhaustion__connect_socket_sleep_18_good();
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_52c_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_52c_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_52c_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fgets_sleep_31_bad();
int goodG2B_182();
int goodB2G_169();
int CWE400_Resource_Exhaustion__fgets_sleep_31_good();
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_66b_badSink(__int64 a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_66b_goodG2BSink(__int64 a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_66b_goodB2GSink(__int64 a1);
void CWE400_Resource_Exhaustion__connect_socket_fwrite_17_bad();
void goodB2G_170();
void goodG2B_183();
void CWE400_Resource_Exhaustion__connect_socket_fwrite_17_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_05_bad();
int goodB2G1_117();
__int64 goodB2G2_117();
__int64 goodG2B1_104();
__int64 goodG2B2_104();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_05_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_54_bad();
__int64 goodG2B_184();
__int64 goodB2G_171();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_54_good();
__int64 __fastcall badSink_29(int a1);
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_41_bad();
__int64 __fastcall goodG2BSink_29(int a1);
__int64 goodG2B_185();
__int64 __fastcall goodB2GSink_22(int a1);
__int64 goodB2G_172();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_41_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_13_bad();
int goodB2G1_118();
int goodB2G2_118();
int goodG2B1_105();
int goodG2B2_105();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_13_good();
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_53d_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_53d_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_53d_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fgets_fwrite_32_bad();
int goodG2B_186();
int goodB2G_173();
int CWE400_Resource_Exhaustion__fgets_fwrite_32_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_64b_badSink(__useconds_t *a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_64b_goodG2BSink(__useconds_t *a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_64b_goodB2GSink(signed int *a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54d_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54d_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54d_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fscanf_sleep_22_bad();
int goodB2G1_119();
int goodB2G2_119();
int goodG2B_187();
int CWE400_Resource_Exhaustion__fscanf_sleep_22_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_53_bad();
__int64 goodG2B_188();
__int64 goodB2G_174();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_53_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_61_bad();
int goodG2B_189();
int goodB2G_175();
int CWE400_Resource_Exhaustion__fscanf_sleep_61_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_51b_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_51b_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_51b_goodB2GSink(signed int a1);
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_34_bad();
__int64 goodG2B_190();
__int64 goodB2G_176();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_34_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_67b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_67b_goodG2BSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_67b_goodB2GSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_65b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_65b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_65b_goodB2GSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_61b_badSource(unsigned int a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_fwrite_61b_goodG2BSource();
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_61b_goodB2GSource(unsigned int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54c_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54c_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54c_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_04_bad();
__int64 goodB2G1_120();
__int64 goodB2G2_120();
__int64 goodG2B1_106();
__int64 goodG2B2_106();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_04_good();
int CWE400_Resource_Exhaustion__connect_socket_sleep_10_bad();
int goodB2G1_121();
int goodB2G2_121();
int goodG2B1_107();
int goodG2B2_107();
int CWE400_Resource_Exhaustion__connect_socket_sleep_10_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_68b_badSink();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_68b_goodG2BSink();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_68b_goodB2GSink();
int CWE400_Resource_Exhaustion__fgets_fwrite_68b_badSink();
int CWE400_Resource_Exhaustion__fgets_fwrite_68b_goodG2BSink();
int CWE400_Resource_Exhaustion__fgets_fwrite_68b_goodB2GSink();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_09_bad();
int goodB2G1_122();
__int64 goodB2G2_122();
__int64 goodG2B1_108();
__int64 goodG2B2_108();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_09_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_02_bad();
__int64 goodB2G1_123();
__int64 goodB2G2_123();
__int64 goodG2B1_109();
__int64 goodG2B2_109();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_02_good();
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_51b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_51b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_51b_goodB2GSink(int a1);
__int64 __fastcall badSource_7(unsigned int a1);
int CWE400_Resource_Exhaustion__fgets_sleep_42_bad();
__int64 goodG2BSource_7();
int goodG2B_191();
__int64 __fastcall goodB2GSource_7(unsigned int a1);
int goodB2G_177();
int CWE400_Resource_Exhaustion__fgets_sleep_42_good();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_64_bad();
__int64 goodG2B_192();
__int64 goodB2G_178();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_64_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_16_bad();
int goodB2G_179();
int goodG2B_193();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_16_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_64b_badSink(__useconds_t *a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_64b_goodG2BSink(__useconds_t *a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_64b_goodB2GSink(signed int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_53b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_53b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_53b_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_54_bad();
__int64 goodG2B_194();
__int64 goodB2G_180();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_54_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_10_bad();
int goodB2G1_124();
__int64 goodB2G2_124();
__int64 goodG2B1_110();
__int64 goodG2B2_110();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_10_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_15_bad();
__int64 goodB2G1_125();
__int64 goodB2G2_125();
__int64 goodG2B1_111();
__int64 goodG2B2_111();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_15_good();
void CWE400_Resource_Exhaustion__connect_socket_sleep_17_bad();
void goodB2G_181();
int goodG2B_195();
int CWE400_Resource_Exhaustion__connect_socket_sleep_17_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54b_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_61_bad();
__int64 goodG2B_196();
__int64 goodB2G_182();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_61_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_53b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_53b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_53b_goodB2GSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54c_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54c_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54c_goodB2GSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_52c_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_52c_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_52c_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_01_bad();
__int64 goodG2B_197();
__int64 goodB2G_183();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_01_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_53d_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_53d_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_53d_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__listen_socket_fwrite_51_bad();
int goodG2B_198();
void goodB2G_184();
void CWE400_Resource_Exhaustion__listen_socket_fwrite_51_good();
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_65b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_65b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_65b_goodB2GSink(int a1);
int __fastcall badSink_30(int a1);
int CWE400_Resource_Exhaustion__listen_socket_fwrite_21_bad();
int __fastcall goodB2G1Sink_6(int a1);
int goodB2G1_126();
int __fastcall goodB2G2Sink_6(int a1);
int goodB2G2_126();
int __fastcall goodG2BSink_30(int a1);
int goodG2B_199();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_21_good();
int CWE400_Resource_Exhaustion__fgets_sleep_05_bad();
int goodB2G1_127();
int goodB2G2_127();
int goodG2B1_112();
int goodG2B2_112();
int CWE400_Resource_Exhaustion__fgets_sleep_05_good();
int __fastcall badSink_31(__useconds_t a1);
int CWE400_Resource_Exhaustion__fgets_sleep_41_bad();
int __fastcall goodG2BSink_31(__useconds_t a1);
int goodG2B_200();
int __fastcall goodB2GSink_23(signed int a1);
int goodB2G_185();
int CWE400_Resource_Exhaustion__fgets_sleep_41_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_52_bad();
int goodG2B_201();
int goodB2G_186();
int CWE400_Resource_Exhaustion__fscanf_sleep_52_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_07_bad();
int goodB2G1_128();
__int64 goodB2G2_128();
__int64 goodG2B1_113();
__int64 goodG2B2_113();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_07_good();
int CWE400_Resource_Exhaustion__connect_socket_sleep_32_bad();
int goodG2B_202();
int goodB2G_187();
int CWE400_Resource_Exhaustion__connect_socket_sleep_32_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_51b_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_51b_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_51b_goodB2GSink(signed int a1);
int __fastcall badSink_32(int a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_fwrite_44_bad();
int __fastcall goodG2BSink_32(int a1);
int goodG2B_203();
void __fastcall goodB2GSink_24(int a1);
__int64 goodB2G_188();
__int64 CWE400_Resource_Exhaustion__connect_socket_fwrite_44_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_09_bad();
int goodB2G1_129();
int goodB2G2_129();
int goodG2B1_114();
int goodG2B2_114();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_09_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_63_bad();
__int64 goodG2B_204();
__int64 goodB2G_189();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_63_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_31_bad();
int goodG2B_205();
int goodB2G_190();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_31_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_53d_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_53d_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_53d_goodB2GSink(signed int a1);
int CWE400_Resource_Exhaustion__fgets_sleep_34_bad();
int goodG2B_206();
int goodB2G_191();
int CWE400_Resource_Exhaustion__fgets_sleep_34_good();
int badSink_33();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_45_bad();
int goodG2BSink_33();
int goodG2B_207();
int goodB2GSink_25();
int goodB2G_192();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_45_good();
int CWE400_Resource_Exhaustion__fgets_fwrite_53_bad();
int goodG2B_208();
void goodB2G_193();
void CWE400_Resource_Exhaustion__fgets_fwrite_53_good();
__int64 staticReturnsTrue_8();
__int64 staticReturnsFalse_8();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_08_bad();
int goodB2G1_130();
__int64 goodB2G2_130();
__int64 goodG2B1_115();
__int64 goodG2B2_115();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_08_good();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_67_bad();
__int64 goodG2B_209();
__int64 goodB2G_194();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_67_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_54_bad();
__int64 goodG2B_210();
__int64 goodB2G_195();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_54_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_67_bad();
int goodG2B_211();
int goodB2G_196();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_67_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_32_bad();
int goodG2B_212();
int goodB2G_197();
int CWE400_Resource_Exhaustion__fscanf_sleep_32_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_64_bad();
int goodG2B_213();
int goodB2G_198();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_64_good();
__int64 __fastcall badSink_34(int a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_21_bad();
int __fastcall goodB2G1Sink_7(int a1);
int goodB2G1_131();
__int64 __fastcall goodB2G2Sink_7(int a1);
__int64 goodB2G2_131();
__int64 __fastcall goodG2BSink_34(int a1);
__int64 goodG2B_214();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_21_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_51_bad();
int goodG2B_215();
int goodB2G_199();
int CWE400_Resource_Exhaustion__fscanf_sleep_51_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_22_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodB2G1Sink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodB2G2Sink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodG2BSink(int a1);
int CWE400_Resource_Exhaustion__connect_socket_sleep_12_bad();
int goodB2G_200();
int goodG2B_216();
int CWE400_Resource_Exhaustion__connect_socket_sleep_12_good();
__int64 staticReturnsTrue_9();
__int64 staticReturnsFalse_9();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_08_bad();
int goodB2G1_132();
int goodB2G2_132();
int goodG2B1_116();
int goodG2B2_116();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_08_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_68_bad();
int goodG2B_217();
int goodB2G_201();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_68_good();
int __fastcall badSink_35(__useconds_t a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_sleep_44_bad();
int __fastcall goodG2BSink_35(__useconds_t a1);
int goodG2B_218();
int __fastcall goodB2GSink_26(signed int a1);
__int64 goodB2G_202();
__int64 CWE400_Resource_Exhaustion__connect_socket_sleep_44_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54e_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54e_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54e_goodB2GSink(signed int a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_68b_badSink();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_68b_goodG2BSink();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_68b_goodB2GSink();
void CWE400_Resource_Exhaustion__fgets_for_loop_17_bad();
void goodB2G_203();
__int64 goodG2B_219();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_17_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_52b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_52b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_52b_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fgets_sleep_06_bad();
int goodB2G1_133();
int goodB2G2_133();
int goodG2B1_117();
int goodG2B2_117();
int CWE400_Resource_Exhaustion__fgets_sleep_06_good();
int CWE400_Resource_Exhaustion__connect_socket_sleep_64_bad();
int goodG2B_220();
int goodB2G_204();
int CWE400_Resource_Exhaustion__connect_socket_sleep_64_good();
__int64 __fastcall badSink_36(int a1);
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_44_bad();
__int64 __fastcall goodG2BSink_36(int a1);
__int64 goodG2B_221();
__int64 __fastcall goodB2GSink_27(int a1);
__int64 goodB2G_205();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_44_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_06_bad();
int goodB2G1_134();
int goodB2G2_134();
int goodG2B1_118();
int goodG2B2_118();
int CWE400_Resource_Exhaustion__fscanf_sleep_06_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54c_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54c_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54c_goodB2GSink(signed int a1);
int CWE400_Resource_Exhaustion__fgets_fwrite_61_bad();
int goodG2B_222();
int goodB2G_206();
int CWE400_Resource_Exhaustion__fgets_fwrite_61_good();
__int64 __fastcall badSource_8(unsigned int a1);
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_42_bad();
__int64 goodG2BSource_8();
__int64 goodG2B_223();
__int64 __fastcall goodB2GSource_8(unsigned int a1);
__int64 goodB2G_207();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_42_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_13_bad();
int goodB2G1_135();
__int64 goodB2G2_135();
__int64 goodG2B1_119();
__int64 goodG2B2_119();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_13_good();
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_53b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_53b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_53b_goodB2GSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_61b_badSource(unsigned int a1);
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_61b_goodG2BSource();
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_61b_goodB2GSource(unsigned int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_66b_badSink(__int64 a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_66b_goodG2BSink(__int64 a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_66b_goodB2GSink(__int64 a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_52c_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_52c_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_52c_goodB2GSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54d_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54d_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54d_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fgets_fwrite_52_bad();
int goodG2B_224();
void goodB2G_208();
void CWE400_Resource_Exhaustion__fgets_fwrite_52_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_64_bad();
int goodG2B_225();
int goodB2G_209();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_64_good();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_68_bad();
__int64 goodG2B_226();
__int64 goodB2G_210();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_68_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_51b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_51b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_51b_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fscanf_fwrite_14_bad();
int goodB2G1_136();
int goodB2G2_136();
int goodG2B1_120();
int goodG2B2_120();
int CWE400_Resource_Exhaustion__fscanf_fwrite_14_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_32_bad();
int goodG2B_227();
int goodB2G_211();
int CWE400_Resource_Exhaustion__fscanf_fwrite_32_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_64b_badSink(__useconds_t *a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_64b_goodG2BSink(__useconds_t *a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_64b_goodB2GSink(signed int *a1);
int CWE400_Resource_Exhaustion__fgets_fwrite_16_bad();
int goodB2G_212();
int goodG2B_228();
int CWE400_Resource_Exhaustion__fgets_fwrite_16_good();
int CWE400_Resource_Exhaustion__fgets_sleep_63_bad();
int goodG2B_229();
int goodB2G_213();
int CWE400_Resource_Exhaustion__fgets_sleep_63_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_13_bad();
int goodB2G1_137();
int goodB2G2_137();
int goodG2B1_121();
int goodG2B2_121();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_13_good();
int CWE400_Resource_Exhaustion__connect_socket_sleep_02_bad();
int goodB2G1_138();
int goodB2G2_138();
int goodG2B1_122();
int goodG2B2_122();
int CWE400_Resource_Exhaustion__connect_socket_sleep_02_good();
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_67b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_67b_goodG2BSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_67b_goodB2GSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_65b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_65b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_65b_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_22_bad();
int goodB2G1_139();
__int64 goodB2G2_139();
__int64 goodG2B_230();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_22_good();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_53_bad();
__int64 goodG2B_231();
__int64 goodB2G_214();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_53_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_16_bad();
int goodB2G_215();
int goodG2B_232();
int CWE400_Resource_Exhaustion__fscanf_sleep_16_good();
int CWE400_Resource_Exhaustion__connect_socket_sleep_67_bad();
int goodG2B_233();
int goodB2G_216();
int CWE400_Resource_Exhaustion__connect_socket_sleep_67_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_63b_badSink(__useconds_t *a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_63b_goodG2BSink(__useconds_t *a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_63b_goodB2GSink(signed int *a1);
int CWE400_Resource_Exhaustion__fgets_fwrite_51_bad();
int goodG2B_234();
void goodB2G_217();
void CWE400_Resource_Exhaustion__fgets_fwrite_51_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_15_bad();
int goodB2G1_140();
int goodB2G2_140();
__int64 goodG2B1_123();
__int64 goodG2B2_123();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_15_good();
int CWE400_Resource_Exhaustion__connect_socket_sleep_11_bad();
int goodB2G1_141();
int goodB2G2_141();
int goodG2B1_124();
int goodG2B2_124();
int CWE400_Resource_Exhaustion__connect_socket_sleep_11_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_07_bad();
int goodB2G1_142();
__int64 goodB2G2_142();
__int64 goodG2B1_125();
__int64 goodG2B2_125();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_07_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_53c_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_53c_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_53c_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fscanf_fwrite_31_bad();
int goodG2B_235();
int goodB2G_218();
int CWE400_Resource_Exhaustion__fscanf_fwrite_31_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_53d_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_53d_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_53d_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fscanf_sleep_64_bad();
int goodG2B_236();
int goodB2G_219();
int CWE400_Resource_Exhaustion__fscanf_sleep_64_good();
__int64 __fastcall badSource_9(unsigned int a1);
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_42_bad();
__int64 goodG2BSource_9();
__int64 goodG2B_237();
__int64 __fastcall goodB2GSource_9(unsigned int a1);
__int64 goodB2G_220();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_42_good();
int __fastcall badSink_37(int a1);
int CWE400_Resource_Exhaustion__connect_socket_fwrite_21_bad();
int __fastcall goodB2G1Sink_8(int a1);
int goodB2G1_143();
int __fastcall goodB2G2Sink_8(int a1);
int goodB2G2_143();
int __fastcall goodG2BSink_37(int a1);
int goodG2B_238();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_21_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_03_bad();
int goodB2G1_144();
int goodB2G2_144();
int goodG2B1_126();
int goodG2B2_126();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_03_good();
int badSink_38();
int CWE400_Resource_Exhaustion__fgets_fwrite_45_bad();
int goodG2BSink_38();
int goodG2B_239();
int goodB2GSink_28();
int goodB2G_221();
int CWE400_Resource_Exhaustion__fgets_fwrite_45_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_67_bad();
int goodG2B_240();
int goodB2G_222();
int CWE400_Resource_Exhaustion__fscanf_fwrite_67_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_65_bad();
__int64 goodG2B_241();
__int64 goodB2G_223();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_65_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_18_bad();
int goodB2G_224();
int goodG2B_242();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_18_good();
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_52b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_52b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_52b_goodB2GSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_22_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodB2G1Sink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodB2G2Sink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodG2BSink(int a1);
int CWE400_Resource_Exhaustion__connect_socket_sleep_63_bad();
int goodG2B_243();
int goodB2G_225();
int CWE400_Resource_Exhaustion__connect_socket_sleep_63_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_22_bad();
int goodB2G1_145();
int goodB2G2_145();
int goodG2B_244();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_22_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_05_bad();
int goodB2G1_146();
__int64 goodB2G2_146();
__int64 goodG2B1_127();
__int64 goodG2B2_127();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_05_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_12_bad();
int goodB2G_226();
int goodG2B_245();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_12_good();
__int64 __fastcall badSink_39(int a1);
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_41_bad();
__int64 __fastcall goodG2BSink_39(int a1);
__int64 goodG2B_246();
__int64 __fastcall goodB2GSink_29(int a1);
__int64 goodB2G_227();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_41_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_68b_badSink();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_68b_goodG2BSink();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_68b_goodB2GSink();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_02_bad();
int goodB2G1_147();
int goodB2G2_147();
__int64 goodG2B1_128();
__int64 goodG2B2_128();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_02_good();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_52_bad();
__int64 goodG2B_247();
__int64 goodB2G_228();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_52_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_64b_badSink(int *a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_64b_goodG2BSink(int *a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_64b_goodB2GSink(int *a1);
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_34_bad();
__int64 goodG2B_248();
__int64 goodB2G_229();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_34_good();
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_51b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_51b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_51b_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fscanf_fwrite_22_bad();
int goodB2G1_148();
int goodB2G2_148();
int goodG2B_249();
int CWE400_Resource_Exhaustion__fscanf_fwrite_22_good();
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_66b_badSink(__int64 a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_66b_goodG2BSink(__int64 a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_66b_goodB2GSink(__int64 a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_16_bad();
int goodB2G_230();
__int64 goodG2B_250();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_16_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_53b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_53b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_53b_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_52_bad();
__int64 goodG2B_251();
__int64 goodB2G_231();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_52_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_52c_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_52c_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_52c_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__connect_socket_fwrite_11_bad();
int goodB2G1_149();
int goodB2G2_149();
int goodG2B1_129();
int goodG2B2_129();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_11_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_02_bad();
int goodB2G1_150();
int goodB2G2_150();
int goodG2B1_130();
int goodG2B2_130();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_02_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_68_bad();
__int64 goodG2B_252();
__int64 goodB2G_232();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_68_good();
int CWE400_Resource_Exhaustion__fgets_sleep_14_bad();
int goodB2G1_151();
int goodB2G2_151();
int goodG2B1_131();
int goodG2B2_131();
int CWE400_Resource_Exhaustion__fgets_sleep_14_good();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_10_bad();
int goodB2G1_152();
int goodB2G2_152();
int goodG2B1_132();
int goodG2B2_132();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_10_good();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_51_bad();
__int64 goodG2B_253();
__int64 goodB2G_233();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_51_good();
int CWE400_Resource_Exhaustion__fgets_fwrite_64_bad();
int goodG2B_254();
int goodB2G_234();
int CWE400_Resource_Exhaustion__fgets_fwrite_64_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_13_bad();
int goodB2G1_153();
int goodB2G2_153();
int goodG2B1_133();
int goodG2B2_133();
int CWE400_Resource_Exhaustion__fscanf_fwrite_13_good();
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_53d_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_53d_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_53d_goodB2GSink(signed int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54e_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54e_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54e_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_34_bad();
__int64 goodG2B_255();
__int64 goodB2G_235();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_34_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_66_bad();
__int64 goodG2B_256();
__int64 goodB2G_236();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_66_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54c_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54c_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54c_goodB2GSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_67b_badSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_67b_goodG2BSink(__useconds_t a1);
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_67b_goodB2GSink(signed int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_sleep_61b_badSource(unsigned int a1);
__int64 CWE400_Resource_Exhaustion__fgets_sleep_61b_goodG2BSource();
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_sleep_61b_goodB2GSource(unsigned int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_61b_badSource(unsigned int a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_sleep_61b_goodG2BSource();
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_61b_goodB2GSource(unsigned int a1);
int CWE400_Resource_Exhaustion__connect_socket_fwrite_01_bad();
int goodG2B_257();
int goodB2G_237();
int CWE400_Resource_Exhaustion__connect_socket_fwrite_01_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_63_bad();
int goodG2B_258();
int goodB2G_238();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_63_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_53d_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_53d_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_53d_goodB2GSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_63b_badSink(__useconds_t *a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_63b_goodG2BSink(__useconds_t *a1);
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_63b_goodB2GSink(signed int *a1);
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_06_bad();
__int64 goodB2G1_154();
__int64 goodB2G2_154();
__int64 goodG2B1_134();
__int64 goodG2B2_134();
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_06_good();
int CWE400_Resource_Exhaustion__listen_socket_fwrite_52_bad();
int goodG2B_259();
void goodB2G_239();
void CWE400_Resource_Exhaustion__listen_socket_fwrite_52_good();
int CWE400_Resource_Exhaustion__fgets_sleep_04_bad();
int goodB2G1_155();
int goodB2G2_155();
int goodG2B1_135();
int goodG2B2_135();
int CWE400_Resource_Exhaustion__fgets_sleep_04_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_11_bad();
int goodB2G1_156();
__int64 goodB2G2_156();
__int64 goodG2B1_136();
__int64 goodG2B2_136();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_11_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54d_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54d_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54d_goodB2GSink(int a1);
int __fastcall badSink_40(int a1);
int CWE400_Resource_Exhaustion__fscanf_fwrite_21_bad();
int __fastcall goodB2G1Sink_9(int a1);
int goodB2G1_157();
int __fastcall goodB2G2Sink_9(int a1);
int goodB2G2_157();
int __fastcall goodG2BSink_40(int a1);
int goodG2B_260();
int CWE400_Resource_Exhaustion__fscanf_fwrite_21_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_15_bad();
int goodB2G1_158();
int goodB2G2_158();
__int64 goodG2B1_137();
__int64 goodG2B2_137();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_15_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_66b_badSink(__int64 a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_66b_goodG2BSink(__int64 a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_66b_goodB2GSink(__int64 a1);
int CWE400_Resource_Exhaustion__connect_socket_sleep_61_bad();
int goodG2B_261();
int goodB2G_240();
int CWE400_Resource_Exhaustion__connect_socket_sleep_61_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_18_bad();
int goodB2G_241();
int goodG2B_262();
int CWE400_Resource_Exhaustion__fscanf_fwrite_18_good();
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_52b_badSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_52b_goodG2BSink(int a1);
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_52b_goodB2GSink(int a1);
int CWE400_Resource_Exhaustion__fgets_fwrite_34_bad();
int goodG2B_263();
int goodB2G_242();
int CWE400_Resource_Exhaustion__fgets_fwrite_34_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_63_bad();
__int64 goodG2B_264();
__int64 goodB2G_243();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_63_good();
int CWE400_Resource_Exhaustion__fscanf_sleep_63_bad();
int goodG2B_265();
int goodB2G_244();
int CWE400_Resource_Exhaustion__fscanf_sleep_63_good();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_10_bad();
int goodB2G1_159();
__int64 goodB2G2_159();
__int64 goodG2B1_138();
__int64 goodG2B2_138();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_10_good();
int CWE400_Resource_Exhaustion__connect_socket_sleep_07_bad();
int goodB2G1_160();
int goodB2G2_160();
int goodG2B1_139();
int goodG2B2_139();
int CWE400_Resource_Exhaustion__connect_socket_sleep_07_good();
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_64b_badSink(int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_64b_goodG2BSink(int *a1);
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_64b_goodB2GSink(int *a1);
void CWE400_Resource_Exhaustion__listen_socket_fwrite_17_bad();
void goodB2G_245();
void goodG2B_266();
void CWE400_Resource_Exhaustion__listen_socket_fwrite_17_good();
int CWE400_Resource_Exhaustion__fscanf_fwrite_12_bad();
int goodB2G_246();
int goodG2B_267();
int CWE400_Resource_Exhaustion__fscanf_fwrite_12_good();
int __fastcall badSink_41(int a1);
__int64 CWE400_Resource_Exhaustion__listen_socket_fwrite_44_bad();
int __fastcall goodG2BSink_41(int a1);
int goodG2B_268();
void __fastcall goodB2GSink_30(int a1);
__int64 goodB2G_247();
__int64 CWE400_Resource_Exhaustion__listen_socket_fwrite_44_good();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_13_bad();
int goodB2G1_161();
__int64 goodB2G2_161();
__int64 goodG2B1_140();
__int64 goodG2B2_140();
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_13_good();
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54b_badSink(int a1);
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54b_goodG2BSink(int a1);
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54b_goodB2GSink(int a1);
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_05_bad();
int goodB2G1_162();
__int64 goodB2G2_162();
__int64 goodG2B1_141();
__int64 goodG2B2_141();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_05_good();
__int64 __fastcall badSink_42(int a1);
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_41_bad();
__int64 __fastcall goodG2BSink_42(int a1);
__int64 goodG2B_269();
__int64 __fastcall goodB2GSink_31(int a1);
__int64 goodB2G_248();
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_41_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_52_bad();
__int64 goodG2B_270();
__int64 goodB2G_249();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_52_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_53_bad();
__int64 goodG2B_271();
__int64 goodB2G_250();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_53_good();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_16_bad();
__int64 goodB2G_251();
__int64 goodG2B_272();
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_16_good();
int CWE400_Resource_Exhaustion__fgets_sleep_22_bad();
int goodB2G1_163();
int goodB2G2_163();
int goodG2B_273();
int CWE400_Resource_Exhaustion__fgets_sleep_22_good();
int __fastcall printLine(const char *a1);
int __fastcall printWLine(__int64 a1);
int __fastcall printIntLine(unsigned int a1);
int __fastcall printShortLine(__int16 a1);
int __fastcall printFloatLine(float a1);
int __fastcall printLongLine(__int64 a1);
int __fastcall printLongLongLine(__int64 a1);
int __fastcall printSizeTLine(__int64 a1);
int __fastcall printHexCharLine(char a1);
int __fastcall printWcharLine(int a1);
int __fastcall printUnsignedLine(unsigned int a1);
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1);
int __fastcall printDoubleLine(double a1);
int __fastcall printStructLine(unsigned int *a1);
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2);
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3);
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3);
__int64 globalReturnsTrue();
__int64 globalReturnsFalse();
__int64 globalReturnsTrueOrFalse();
void good1();
void good2();
void good3();
void good4();
void good5();
void good6();
void good7();
void good8();
void good9();
void bad1();
void bad2();
void bad3();
void bad4();
void bad5();
void bad6();
void bad7();
void bad8();
void bad9();
void __fastcall __noreturn internal_start(void *a1);
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3);
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1);
__int64 __fastcall stdThreadDestroy(void *a1);
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1);
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1);
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1);
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1);
void _libc_csu_init(void); // idb
void _libc_csu_fini(void); // idb
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

_UNKNOWN unk_46D754; // weak
_UNKNOWN unk_46D8A8; // weak
_UNKNOWN unk_46F2DC; // weak
_UNKNOWN unk_46FC3C; // weak
_UNKNOWN unk_47019C; // weak
_UNKNOWN unk_470C94; // weak
char s[3] = { '\0', '\0', '\0' }; // idb
int GLOBAL_CONST_TRUE = 1; // weak
int GLOBAL_CONST_FALSE = 0; // weak
int GLOBAL_CONST_FIVE = 5; // weak
__int64 (__fastcall *_frame_dummy_init_array_entry[2])() = { &frame_dummy, &_do_global_dtors_aux }; // weak
__int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)() = &_do_global_dtors_aux; // weak
__int64 (*qword_68E010)(void) = NULL; // weak
int staticTrue = 1; // weak
int staticTrue_0 = 1; // weak
int staticFive = 5; // weak
int staticFive_0 = 5; // weak
int staticTrue_1 = 1; // weak
int staticFive_1 = 5; // weak
int staticFive_2 = 5; // weak
int staticFive_3 = 5; // weak
int staticTrue_2 = 1; // weak
int staticFive_4 = 5; // weak
int staticTrue_3 = 1; // weak
int staticFive_5 = 5; // weak
int staticTrue_4 = 1; // weak
int staticFive_6 = 5; // weak
int staticTrue_5 = 1; // weak
int staticTrue_6 = 1; // weak
int staticTrue_7 = 1; // weak
int staticFive_7 = 5; // weak
int staticFive_8 = 5; // weak
int staticTrue_8 = 1; // weak
int staticFive_9 = 5; // weak
int staticTrue_9 = 1; // weak
int globalTrue = 1; // weak
int globalFive = 5; // weak
FILE *stdin; // idb
char completed_6355; // weak
int CWE400_Resource_Exhaustion__fscanf_for_loop_22_badGlobal; // weak
int CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodB2G1Global; // weak
int CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodB2G2Global; // weak
int CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodG2BGlobal; // weak
int CWE400_Resource_Exhaustion__fgets_for_loop_22_badGlobal; // weak
int CWE400_Resource_Exhaustion__fgets_for_loop_22_goodB2G1Global; // weak
int CWE400_Resource_Exhaustion__fgets_for_loop_22_goodB2G2Global; // weak
int CWE400_Resource_Exhaustion__fgets_for_loop_22_goodG2BGlobal; // weak
int staticFalse; // weak
int CWE400_Resource_Exhaustion__connect_socket_for_loop_45_badData; // weak
int CWE400_Resource_Exhaustion__connect_socket_for_loop_45_goodG2BData; // weak
int CWE400_Resource_Exhaustion__connect_socket_for_loop_45_goodB2GData; // weak
int badStatic; // weak
int goodB2G1Static; // weak
int goodB2G2Static; // weak
int goodG2BStatic; // weak
int staticFalse_0; // weak
int CWE400_Resource_Exhaustion__fgets_fwrite_22_badGlobal; // weak
int CWE400_Resource_Exhaustion__fgets_fwrite_22_goodB2G1Global; // weak
int CWE400_Resource_Exhaustion__fgets_fwrite_22_goodB2G2Global; // weak
int CWE400_Resource_Exhaustion__fgets_fwrite_22_goodG2BGlobal; // weak
int CWE400_Resource_Exhaustion__connect_socket_sleep_45_badData; // weak
int CWE400_Resource_Exhaustion__connect_socket_sleep_45_goodG2BData; // weak
int CWE400_Resource_Exhaustion__connect_socket_sleep_45_goodB2GData; // weak
int badStatic_0; // weak
int goodB2G1Static_0; // weak
int goodB2G2Static_0; // weak
int goodG2BStatic_0; // weak
int CWE400_Resource_Exhaustion__listen_socket_for_loop_45_badData; // weak
int CWE400_Resource_Exhaustion__listen_socket_for_loop_45_goodG2BData; // weak
int CWE400_Resource_Exhaustion__listen_socket_for_loop_45_goodB2GData; // weak
int badStatic_1; // weak
int goodB2G1Static_1; // weak
int goodB2G2Static_1; // weak
int goodG2BStatic_1; // weak
int staticFalse_1; // weak
int CWE400_Resource_Exhaustion__fscanf_for_loop_45_badData; // weak
int CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodG2BData; // weak
int CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodB2GData; // weak
int badStatic_2; // weak
int goodB2G1Static_2; // weak
int goodB2G2Static_2; // weak
int goodG2BStatic_2; // weak
int CWE400_Resource_Exhaustion__fscanf_sleep_45_badData; // weak
int CWE400_Resource_Exhaustion__fscanf_sleep_45_goodG2BData; // weak
int CWE400_Resource_Exhaustion__fscanf_sleep_45_goodB2GData; // weak
int staticFalse_2; // weak
int CWE400_Resource_Exhaustion__listen_socket_for_loop_22_badGlobal; // weak
int CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodB2G1Global; // weak
int CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodB2G2Global; // weak
int CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodG2BGlobal; // weak
int CWE400_Resource_Exhaustion__fgets_for_loop_45_badData; // weak
int CWE400_Resource_Exhaustion__fgets_for_loop_45_goodG2BData; // weak
int CWE400_Resource_Exhaustion__fgets_for_loop_45_goodB2GData; // weak
int staticFalse_3; // weak
int badStatic_3; // weak
int goodB2G1Static_3; // weak
int goodB2G2Static_3; // weak
int goodG2BStatic_3; // weak
int CWE400_Resource_Exhaustion__fgets_sleep_45_badData; // weak
int CWE400_Resource_Exhaustion__fgets_sleep_45_goodG2BData; // weak
int CWE400_Resource_Exhaustion__fgets_sleep_45_goodB2GData; // weak
int CWE400_Resource_Exhaustion__connect_socket_fwrite_45_badData; // weak
int CWE400_Resource_Exhaustion__connect_socket_fwrite_45_goodG2BData; // weak
int CWE400_Resource_Exhaustion__connect_socket_fwrite_45_goodB2GData; // weak
int staticFalse_4; // weak
int CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badGlobal; // weak
int CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodB2G1Global; // weak
int CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodB2G2Global; // weak
int CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodG2BGlobal; // weak
int badStatic_4; // weak
int goodB2G1Static_4; // weak
int goodB2G2Static_4; // weak
int goodG2BStatic_4; // weak
int CWE400_Resource_Exhaustion__fscanf_fwrite_45_badData; // weak
int CWE400_Resource_Exhaustion__fscanf_fwrite_45_goodG2BData; // weak
int CWE400_Resource_Exhaustion__fscanf_fwrite_45_goodB2GData; // weak
int staticFalse_5; // weak
int CWE400_Resource_Exhaustion__connect_socket_sleep_22_badGlobal; // weak
int CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodB2G1Global; // weak
int CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodB2G2Global; // weak
int CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodG2BGlobal; // weak
int badStatic_5; // weak
int goodB2G1Static_5; // weak
int goodB2G2Static_5; // weak
int goodG2BStatic_5; // weak
int staticFalse_6; // weak
int CWE400_Resource_Exhaustion__fscanf_sleep_22_badGlobal; // weak
int CWE400_Resource_Exhaustion__fscanf_sleep_22_goodB2G1Global; // weak
int CWE400_Resource_Exhaustion__fscanf_sleep_22_goodB2G2Global; // weak
int CWE400_Resource_Exhaustion__fscanf_sleep_22_goodG2BGlobal; // weak
int badStatic_6; // weak
int goodB2G1Static_6; // weak
int goodB2G2Static_6; // weak
int goodG2BStatic_6; // weak
int staticFalse_7; // weak
int CWE400_Resource_Exhaustion__listen_socket_fwrite_45_badData; // weak
int CWE400_Resource_Exhaustion__listen_socket_fwrite_45_goodG2BData; // weak
int CWE400_Resource_Exhaustion__listen_socket_fwrite_45_goodB2GData; // weak
int badStatic_7; // weak
int goodB2G1Static_7; // weak
int goodB2G2Static_7; // weak
int goodG2BStatic_7; // weak
int CWE400_Resource_Exhaustion__connect_socket_for_loop_22_badGlobal; // weak
int CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodB2G1Global; // weak
int CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodB2G2Global; // weak
int CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodG2BGlobal; // weak
int badStatic_8; // weak
int goodB2G1Static_8; // weak
int goodB2G2Static_8; // weak
int goodG2BStatic_8; // weak
int CWE400_Resource_Exhaustion__fgets_fwrite_45_badData; // weak
int CWE400_Resource_Exhaustion__fgets_fwrite_45_goodG2BData; // weak
int CWE400_Resource_Exhaustion__fgets_fwrite_45_goodB2GData; // weak
int CWE400_Resource_Exhaustion__connect_socket_fwrite_22_badGlobal; // weak
int CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodB2G1Global; // weak
int CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodB2G2Global; // weak
int CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodG2BGlobal; // weak
int staticFalse_8; // weak
int CWE400_Resource_Exhaustion__fscanf_fwrite_22_badGlobal; // weak
int CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodB2G1Global; // weak
int CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodB2G2Global; // weak
int CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodG2BGlobal; // weak
int badStatic_9; // weak
int goodB2G1Static_9; // weak
int goodB2G2Static_9; // weak
int goodG2BStatic_9; // weak
int staticFalse_9; // weak
int CWE400_Resource_Exhaustion__fgets_sleep_22_badGlobal; // weak
int CWE400_Resource_Exhaustion__fgets_sleep_22_goodB2G1Global; // weak
int CWE400_Resource_Exhaustion__fgets_sleep_22_goodB2G2Global; // weak
int CWE400_Resource_Exhaustion__fgets_sleep_22_goodG2BGlobal; // weak
int globalFalse; // weak
int globalArgc; // weak
__int64 globalArgv; // weak
int CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodB2GData; // weak
int CWE400_Resource_Exhaustion__listen_socket_fwrite_68_badData; // weak
int CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodG2BData; // weak
int CWE400_Resource_Exhaustion__fscanf_sleep_68_badData; // weak
int CWE400_Resource_Exhaustion__fscanf_sleep_68_goodB2GData; // weak
int CWE400_Resource_Exhaustion__fscanf_sleep_68_goodG2BData; // weak
int CWE400_Resource_Exhaustion__fgets_fwrite_68_badData; // weak
int CWE400_Resource_Exhaustion__fgets_fwrite_68_goodB2GData; // weak
int CWE400_Resource_Exhaustion__fgets_fwrite_68_goodG2BData; // weak
int CWE400_Resource_Exhaustion__fgets_for_loop_68_goodG2BData; // weak
int CWE400_Resource_Exhaustion__fgets_for_loop_68_goodB2GData; // weak
int CWE400_Resource_Exhaustion__fgets_for_loop_68_badData; // weak
int CWE400_Resource_Exhaustion__connect_socket_sleep_68_goodG2BData; // weak
int CWE400_Resource_Exhaustion__connect_socket_sleep_68_badData; // weak
int CWE400_Resource_Exhaustion__connect_socket_sleep_68_goodB2GData; // weak
int CWE400_Resource_Exhaustion__listen_socket_for_loop_68_goodB2GData; // weak
int CWE400_Resource_Exhaustion__listen_socket_for_loop_68_badData; // weak
int CWE400_Resource_Exhaustion__listen_socket_for_loop_68_goodG2BData; // weak
int CWE400_Resource_Exhaustion__fscanf_fwrite_68_goodG2BData; // weak
int CWE400_Resource_Exhaustion__fscanf_fwrite_68_goodB2GData; // weak
int CWE400_Resource_Exhaustion__fscanf_fwrite_68_badData; // weak
int CWE400_Resource_Exhaustion__fgets_sleep_68_goodG2BData; // weak
int CWE400_Resource_Exhaustion__fgets_sleep_68_goodB2GData; // weak
int CWE400_Resource_Exhaustion__fgets_sleep_68_badData; // weak
int CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodB2GData; // weak
int CWE400_Resource_Exhaustion__connect_socket_fwrite_68_badData; // weak
int CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodG2BData; // weak
int CWE400_Resource_Exhaustion__connect_socket_for_loop_68_goodB2GData; // weak
int CWE400_Resource_Exhaustion__connect_socket_for_loop_68_goodG2BData; // weak
int CWE400_Resource_Exhaustion__connect_socket_for_loop_68_badData; // weak
int CWE400_Resource_Exhaustion__fscanf_for_loop_68_badData; // weak
int CWE400_Resource_Exhaustion__fscanf_for_loop_68_goodG2BData; // weak
int CWE400_Resource_Exhaustion__fscanf_for_loop_68_goodB2GData; // weak
// extern _UNKNOWN __gmon_start__; weak


//----- (0000000000400CE0) ----------------------------------------------------
void *init_proc()
{
  void *result; // rax

  result = &__gmon_start__;
  if ( &__gmon_start__ )
    result = (void *)_gmon_start__();
  return result;
}
// 400F70: using guessed type __int64 _gmon_start__(void);

//----- (0000000000400D00) ----------------------------------------------------
__int64 sub_400D00()
{
  return qword_68E010();
}
// 68E010: using guessed type __int64 (*qword_68E010)(void);

//----- (0000000000400F80) ----------------------------------------------------
// positive sp value has been detected, the output may be wrong!
void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>)
{
  int v2; // esi
  int v3; // [rsp-8h] [rbp-8h]
  __int64 _0; // [rsp+0h] [rbp+0h]

  v2 = v3;
  *(_QWORD *)&v3 = a1;
  __libc_start_main(
    (int (__fastcall *)(int, char **, char **))main,
    v2,
    (char **)&_0,
    _libc_csu_init,
    _libc_csu_fini,
    a2,
    &v3);
  __halt();
}
// 400F86: positive sp value 8 has been found

//----- (0000000000400FB0) ----------------------------------------------------
__int64 deregister_tm_clones()
{
  __int64 result; // rax

  result = 6873527LL - (_QWORD)&stdin;
  if ( (unsigned __int64)(6873527LL - (_QWORD)&stdin) > 0xE )
    result = 0LL;
  return result;
}

//----- (0000000000400FE0) ----------------------------------------------------
__int64 register_tm_clones()
{
  return 0LL;
}

//----- (0000000000401020) ----------------------------------------------------
__int64 _do_global_dtors_aux()
{
  __int64 result; // rax

  if ( !completed_6355 )
  {
    result = deregister_tm_clones();
    completed_6355 = 1;
  }
  return result;
}
// 68E1B8: using guessed type char completed_6355;

//----- (0000000000401040) ----------------------------------------------------
__int64 frame_dummy()
{
  return register_tm_clones();
}
// 401040: could not find valid save-restore pair for rbp

//----- (000000000040106D) ----------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  unsigned int v3; // eax

  v3 = time(0LL);
  srand(v3);
  globalArgc = argc;
  globalArgv = (__int64)argv;
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_52_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_52_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_16_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_16_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_14_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_14_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_13_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_13_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_03_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_03_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_51_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_51_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_54_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_54_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_65_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_65_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_44_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_44_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_41_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_41_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_31_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_31_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_66_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_66_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_44_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_44_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_44_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_44_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_09_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_09_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_67_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_67_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_54_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_54_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_53_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_53_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_31_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_31_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_15_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_15_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_03_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_03_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_54_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_54_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_13_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_13_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_12_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_12_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_61_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_61_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_14_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_14_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_17_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_17_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_10_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_10_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_65_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_65_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_10_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_10_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_34_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_34_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_03_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_03_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_52_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_52_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_51_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_51_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_51_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_51_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_11_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_11_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_14_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_14_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_21_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_21_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_09_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_09_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_06_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_06_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_15_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_15_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_51_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_51_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_18_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_18_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_63_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_63_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_52_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_52_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_66_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_66_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_16_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_16_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_21_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_21_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_17_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_17_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_09_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_09_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_01_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_01_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_42_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_42_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_67_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_67_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_17_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_17_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_04_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_04_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_12_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_12_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_66_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_66_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_18_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_18_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_68_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_68_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_08_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_08_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_42_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_42_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_11_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_11_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_53_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_53_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_01_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_01_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_64_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_64_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_03_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_03_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_32_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_32_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_09_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_09_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_04_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_04_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_06_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_06_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_53_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_53_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_41_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_41_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_02_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_02_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_63_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_63_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_68_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_68_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_10_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_10_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_41_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_41_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_45_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_45_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_22_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_22_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_61_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_61_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_53_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_53_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_54_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_54_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_05_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_05_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_44_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_44_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_45_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_45_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_54_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_54_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_68_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_68_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_03_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_03_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_67_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_67_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_07_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_07_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_11_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_11_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_15_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_15_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_44_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_44_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_66_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_66_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_16_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_16_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_22_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_22_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_15_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_15_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_22_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_22_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_52_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_52_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_13_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_13_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_13_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_13_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_08_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_08_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_32_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_32_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_65_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_65_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_45_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_45_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_51_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_51_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_63_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_63_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_22_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_22_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_10_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_10_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_41_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_41_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_17_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_17_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_01_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_01_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_42_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_42_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_21_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_21_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_10_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_10_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_44_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_44_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_13_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_13_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_03_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_03_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_45_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_45_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_04_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_04_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_09_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_09_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_68_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_68_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_64_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_64_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_64_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_64_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_21_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_21_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_61_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_61_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_66_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_66_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_32_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_32_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_18_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_18_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_09_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_09_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_12_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_12_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_10_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_10_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_65_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_65_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_32_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_32_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_41_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_41_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_67_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_67_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_44_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_44_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_01_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_01_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_68_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_68_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_61_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_61_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_21_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_21_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_31_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_31_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_51_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_51_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_63_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_63_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_14_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_14_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_14_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_14_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_41_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_41_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_44_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_44_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_53_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_53_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_14_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_14_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_63_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_63_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_05_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_05_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_32_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_32_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_45_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_45_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_64_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_64_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_32_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_32_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_18_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_18_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_10_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_10_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_34_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_34_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_05_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_05_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_11_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_11_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_04_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_04_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_16_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_16_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_08_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_08_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_31_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_31_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_07_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_07_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_54_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_54_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_16_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_16_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_17_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_17_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_07_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_07_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_08_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_08_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_06_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_06_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_02_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_02_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_09_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_09_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_51_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_51_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_52_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_52_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_13_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_13_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_02_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_02_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_02_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_02_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_21_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_21_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_06_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_06_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_22_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_22_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_42_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_42_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_22_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_22_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_08_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_08_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_11_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_11_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_68_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_68_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_12_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_12_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_53_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_53_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_05_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_05_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_04_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_04_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_42_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_42_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_12_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_12_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_64_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_64_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_53_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_53_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_61_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_61_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_10_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_10_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_05_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_05_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_31_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_31_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_07_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_07_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_01_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_01_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_63_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_63_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_34_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_34_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_14_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_14_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_05_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_05_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_61_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_61_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_12_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_12_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_41_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_41_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_51_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_51_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_67_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_67_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_42_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_42_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_02_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_02_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_53_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_53_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_45_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_45_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_02_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_02_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_22_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_22_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_34_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_34_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_01_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_01_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_17_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_17_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_09_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_09_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_05_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_05_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_03_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_03_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_02_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_02_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_31_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_31_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_54_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_54_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_44_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_44_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_31_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_31_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_05_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_05_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_66_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_66_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_15_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_15_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_68_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_68_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_03_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_03_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_12_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_12_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_11_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_11_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_10_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_10_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_45_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_45_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_65_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_65_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_52_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_52_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_52_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_52_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_66_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_66_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_11_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_11_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_45_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_45_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_04_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_04_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_22_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_22_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_10_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_10_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_06_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_06_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_15_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_15_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_34_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_34_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_18_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_18_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_03_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_03_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_01_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_01_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_06_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_06_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_34_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_34_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_07_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_07_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_66_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_66_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_17_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_17_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_64_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_64_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_08_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_08_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_51_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_51_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_07_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_07_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_11_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_11_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_41_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_41_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_22_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_22_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_14_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_14_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_07_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_07_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_06_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_06_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_05_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_05_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_16_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_16_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_63_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_63_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_63_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_63_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_22_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_22_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_42_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_42_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_65_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_65_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_11_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_11_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_08_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_08_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_07_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_07_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_32_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_32_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_53_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_53_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_21_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_21_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_42_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_42_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_67_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_67_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_16_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_16_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_61_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_61_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_31_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_31_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_16_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_16_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_45_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_45_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_66_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_66_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_03_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_03_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_64_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_64_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_41_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_41_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_21_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_21_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_04_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_04_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_08_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_08_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_45_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_45_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_13_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_13_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_34_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_34_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_04_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_04_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_17_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_17_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_42_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_42_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_01_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_01_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_13_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_13_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_32_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_32_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_10_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_10_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_18_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_18_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_44_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_44_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_18_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_18_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_14_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_14_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_63_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_63_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_17_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_17_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_12_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_12_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_64_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_64_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_04_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_04_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_16_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_16_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_06_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_06_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_15_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_15_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_67_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_67_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_52_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_52_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_65_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_65_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_54_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_54_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_09_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_09_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_01_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_01_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_15_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_15_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_63_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_63_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_45_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_45_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_42_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_42_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_18_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_18_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_68_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_68_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_61_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_61_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_41_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_41_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_31_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_31_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_18_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_18_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_14_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_14_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_06_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_06_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_34_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_34_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_07_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_07_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_08_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_08_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_15_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_15_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_42_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_42_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_65_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_65_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_21_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_21_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_12_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_12_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_66_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_66_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_64_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_64_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_16_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_16_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_52_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_52_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_68_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_68_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_15_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_15_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_11_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_11_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_31_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_31_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_61_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_61_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_16_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_16_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_21_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_21_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_34_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_34_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_02_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_02_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_61_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_61_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_34_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_34_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_18_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_18_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_07_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_07_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_64_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_64_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_54_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_54_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_65_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_65_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_02_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_02_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_18_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_18_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_32_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_32_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_06_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_06_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_01_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_01_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_63_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_63_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_14_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_14_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_02_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_02_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_67_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_67_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_32_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_32_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_04_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_04_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_12_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_12_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_51_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_51_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_65_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_65_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_31_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_31_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_06_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_06_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_68_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_68_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_12_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_12_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_21_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_21_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_13_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_13_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_52_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_52_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_67_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_67_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_01_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_01_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_05_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_05_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_13_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_13_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_66_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_66_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_54_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_54_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_22_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_22_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_34_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_34_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_53_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_53_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_09_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_09_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_51_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_51_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_44_good();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_44_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_02_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_02_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_53_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_53_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_04_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_04_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_17_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_17_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_52_good();");
  CWE400_Resource_Exhaustion__fscanf_sleep_52_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_08_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_08_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_67_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_67_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_54_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_54_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_61_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_61_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_03_good();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_03_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_64_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_64_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_65_good();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_65_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_32_good();");
  CWE400_Resource_Exhaustion__fgets_fwrite_32_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_08_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_08_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_09_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_09_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_13_good();");
  CWE400_Resource_Exhaustion__fgets_sleep_13_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_07_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_07_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_41_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_41_good();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_17_good();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_17_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_11_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_11_good();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_05_good();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_05_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_68_good();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_68_good();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_15_good();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_15_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_67_good();");
  CWE400_Resource_Exhaustion__fgets_for_loop_67_good();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_52_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_52_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_16_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_16_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_14_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_14_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_13_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_13_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_03_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_03_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_51_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_51_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_54_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_54_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_65_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_65_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_44_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_44_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_41_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_41_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_31_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_31_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_66_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_66_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_44_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_44_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_44_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_44_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_09_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_09_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_67_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_67_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_54_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_54_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_53_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_53_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_31_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_31_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_15_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_15_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_03_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_03_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_54_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_54_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_13_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_13_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_12_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_12_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_61_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_61_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_14_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_14_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_17_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_17_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_10_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_10_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_65_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_65_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_10_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_10_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_34_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_34_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_03_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_03_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_52_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_52_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_51_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_51_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_51_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_51_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_11_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_11_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_14_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_14_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_21_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_21_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_09_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_09_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_06_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_06_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_15_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_15_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_51_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_51_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_18_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_18_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_63_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_63_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_52_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_52_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_66_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_66_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_16_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_16_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_21_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_21_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_17_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_17_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_09_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_09_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_01_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_01_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_42_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_42_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_67_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_67_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_17_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_17_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_04_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_04_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_12_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_12_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_66_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_66_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_18_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_18_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_68_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_68_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_08_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_08_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_42_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_42_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_11_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_11_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_53_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_53_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_01_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_01_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_64_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_64_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_03_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_03_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_32_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_32_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_09_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_09_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_04_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_04_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_06_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_06_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_53_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_53_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_41_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_41_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_02_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_02_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_63_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_63_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_68_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_68_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_10_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_10_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_41_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_41_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_45_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_45_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_22_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_22_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_61_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_61_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_53_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_53_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_54_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_54_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_05_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_05_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_44_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_44_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_45_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_45_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_54_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_54_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_68_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_68_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_03_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_03_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_67_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_67_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_07_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_07_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_11_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_11_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_15_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_15_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_44_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_44_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_66_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_66_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_16_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_16_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_22_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_22_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_15_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_15_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_22_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_22_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_52_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_52_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_13_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_13_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_13_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_13_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_08_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_08_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_32_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_32_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_65_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_65_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_45_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_45_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_51_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_51_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_63_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_63_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_22_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_22_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_10_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_10_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_41_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_41_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_17_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_17_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_01_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_01_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_42_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_42_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_21_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_21_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_10_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_10_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_44_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_44_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_13_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_13_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_03_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_03_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_45_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_45_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_04_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_04_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_09_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_09_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_68_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_68_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_64_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_64_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_64_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_64_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_21_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_21_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_61_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_61_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_66_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_66_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_32_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_32_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_18_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_18_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_09_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_09_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_12_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_12_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_10_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_10_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_65_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_65_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_32_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_32_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_41_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_41_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_67_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_67_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_44_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_44_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_01_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_01_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_68_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_68_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_61_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_61_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_21_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_21_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_31_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_31_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_51_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_51_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_63_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_63_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_14_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_14_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_14_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_14_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_41_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_41_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_44_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_44_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_53_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_53_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_14_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_14_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_63_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_63_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_05_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_05_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_32_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_32_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_45_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_45_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_64_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_64_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_32_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_32_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_18_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_18_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_10_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_10_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_34_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_34_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_05_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_05_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_11_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_11_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_04_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_04_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_16_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_16_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_08_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_08_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_31_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_31_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_07_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_07_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_54_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_54_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_16_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_16_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_17_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_17_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_07_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_07_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_08_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_08_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_06_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_06_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_02_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_02_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_09_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_09_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_51_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_51_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_52_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_52_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_13_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_13_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_02_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_02_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_02_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_02_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_21_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_21_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_06_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_06_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_22_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_22_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_42_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_42_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_22_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_22_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_08_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_08_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_11_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_11_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_68_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_68_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_12_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_12_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_53_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_53_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_05_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_05_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_04_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_04_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_42_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_42_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_12_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_12_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_64_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_64_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_53_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_53_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_61_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_61_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_10_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_10_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_05_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_05_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_31_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_31_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_07_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_07_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_01_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_01_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_63_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_63_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_34_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_34_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_14_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_14_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_05_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_05_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_61_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_61_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_12_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_12_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_41_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_41_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_51_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_51_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_67_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_67_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_42_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_42_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_02_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_02_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_53_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_53_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_45_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_45_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_02_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_02_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_22_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_22_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_34_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_34_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_01_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_01_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_17_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_17_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_09_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_09_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_05_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_05_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_03_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_03_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_02_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_02_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_31_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_31_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_54_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_54_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_44_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_44_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_31_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_31_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_05_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_05_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_66_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_66_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_15_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_15_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_68_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_68_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_03_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_03_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_12_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_12_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_11_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_11_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_10_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_10_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_45_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_45_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_65_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_65_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_52_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_52_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_52_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_52_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_66_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_66_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_11_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_11_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_45_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_45_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_04_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_04_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_22_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_22_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_10_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_10_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_06_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_06_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_15_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_15_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_34_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_34_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_18_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_18_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_03_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_03_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_01_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_01_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_06_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_06_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_34_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_34_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_07_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_07_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_66_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_66_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_17_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_17_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_64_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_64_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_08_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_08_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_51_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_51_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_07_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_07_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_11_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_11_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_41_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_41_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_22_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_22_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_14_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_14_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_07_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_07_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_06_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_06_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_05_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_05_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_16_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_16_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_63_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_63_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_63_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_63_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_22_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_22_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_42_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_42_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_65_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_65_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_11_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_11_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_08_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_08_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_07_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_07_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_32_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_32_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_53_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_53_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_21_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_21_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_42_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_42_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_67_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_67_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_16_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_16_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_61_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_61_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_31_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_31_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_16_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_16_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_45_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_45_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_66_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_66_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_03_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_03_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_64_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_64_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_41_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_41_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_21_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_21_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_04_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_04_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_08_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_08_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_45_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_45_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_13_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_13_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_34_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_34_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_04_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_04_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_17_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_17_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_42_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_42_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_01_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_01_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_13_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_13_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_32_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_32_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_10_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_10_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_18_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_18_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_44_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_44_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_18_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_18_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_14_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_14_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_63_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_63_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_17_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_17_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_12_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_12_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_64_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_64_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_04_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_04_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_16_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_16_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_06_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_06_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_15_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_15_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_67_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_67_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_52_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_52_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_65_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_65_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_54_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_54_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_09_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_09_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_01_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_01_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_15_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_15_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_63_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_63_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_45_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_45_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_42_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_42_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_18_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_18_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_68_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_68_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_61_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_61_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_41_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_41_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_31_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_31_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_18_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_18_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_14_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_14_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_06_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_06_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_34_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_34_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_07_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_07_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_08_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_08_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_15_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_15_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_42_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_42_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_65_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_65_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_21_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_21_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_12_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_12_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_66_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_66_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_64_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_64_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_16_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_16_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_52_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_52_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_68_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_68_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_15_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_15_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_11_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_11_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_31_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_31_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_61_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_61_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_16_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_16_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_21_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_21_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_34_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_34_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_02_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_02_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_61_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_61_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_34_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_34_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_18_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_18_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_07_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_07_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_64_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_64_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_54_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_54_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_65_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_65_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_02_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_02_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_18_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_18_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_32_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_32_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_06_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_06_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_01_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_01_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_63_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_63_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_14_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_14_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_02_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_02_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_67_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_67_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_32_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_32_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_04_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_04_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_12_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_12_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_51_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_51_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_65_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_65_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_31_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_31_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_06_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_06_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_68_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_68_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_12_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_12_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_21_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_21_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_13_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_13_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_52_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_52_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_67_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_67_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_01_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_01_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_05_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_05_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_13_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_13_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_66_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_66_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_54_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_54_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_22_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_22_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_34_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_34_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_53_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_53_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_09_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_09_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_51_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_51_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_fwrite_44_bad();");
  CWE400_Resource_Exhaustion__listen_socket_fwrite_44_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_02_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_02_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_53_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_53_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_04_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_04_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_17_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_17_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_sleep_52_bad();");
  CWE400_Resource_Exhaustion__fscanf_sleep_52_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_08_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_08_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_67_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_67_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_54_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_54_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_61_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_61_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_sleep_03_bad();");
  CWE400_Resource_Exhaustion__connect_socket_sleep_03_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_64_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_64_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_for_loop_65_bad();");
  CWE400_Resource_Exhaustion__connect_socket_for_loop_65_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_fwrite_32_bad();");
  CWE400_Resource_Exhaustion__fgets_fwrite_32_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_08_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_08_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_09_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_09_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_sleep_13_bad();");
  CWE400_Resource_Exhaustion__fgets_sleep_13_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_07_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_07_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_41_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_41_bad();
  printLine("Calling CWE400_Resource_Exhaustion__connect_socket_fwrite_17_bad();");
  CWE400_Resource_Exhaustion__connect_socket_fwrite_17_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_11_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_11_bad();
  printLine("Calling CWE400_Resource_Exhaustion__listen_socket_for_loop_05_bad();");
  CWE400_Resource_Exhaustion__listen_socket_for_loop_05_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_for_loop_68_bad();");
  CWE400_Resource_Exhaustion__fscanf_for_loop_68_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fscanf_fwrite_15_bad();");
  CWE400_Resource_Exhaustion__fscanf_fwrite_15_bad();
  printLine("Calling CWE400_Resource_Exhaustion__fgets_for_loop_67_bad();");
  CWE400_Resource_Exhaustion__fgets_for_loop_67_bad();
  return 0;
}
// 68E3D4: using guessed type int globalArgc;
// 68E3D8: using guessed type __int64 globalArgv;

//----- (00000000004051F8) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_68b_badSink()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__listen_socket_fwrite_68_badData;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}
// 68E3E4: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_68_badData;

//----- (00000000004052A1) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_68b_goodG2BSink()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodG2BData;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}
// 68E3E8: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodG2BData;

//----- (000000000040534A) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_68b_goodB2GSink()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodB2GData;
  v2 = CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodB2GData;
  if ( CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodB2GData > 0
    && CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodB2GData <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v2 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E3E0: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodB2GData;

//----- (0000000000405403) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_22_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_for_loop_22_badGlobal = 1;
  return CWE400_Resource_Exhaustion__fscanf_for_loop_22_badSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1BC: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_22_badGlobal;

//----- (0000000000405445) ----------------------------------------------------
int goodB2G1()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodB2G1Global = 0;
  return CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodB2G1Sink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1C0: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodB2G1Global;

//----- (0000000000405487) ----------------------------------------------------
__int64 goodB2G2()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodB2G2Global = 1;
  return CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodB2G2Sink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1C4: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodB2G2Global;

//----- (00000000004054C9) ----------------------------------------------------
__int64 goodG2B()
{
  CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodG2BGlobal = 1;
  return CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodG2BSink(20);
}
// 68E1C8: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodG2BGlobal;

//----- (00000000004054F5) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_22_good()
{
  goodB2G1();
  goodB2G2();
  return goodG2B();
}

//----- (0000000000405519) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_15_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_bad.txt";
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  if ( s )
    result = fclose(s);
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004055DF) ----------------------------------------------------
int goodB2G1_0()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004056B8) ----------------------------------------------------
int goodB2G2_0()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000405791) ----------------------------------------------------
int goodG2B1()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000405841) ----------------------------------------------------
int goodG2B2()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004058F1) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_15_good()
{
  goodB2G1_0();
  goodB2G2_0();
  goodG2B1();
  return goodG2B2();
}

//----- (000000000040591F) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_fwrite_54c_badSink(a1);
}

//----- (0000000000405936) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_fwrite_54c_goodG2BSink(a1);
}

//----- (000000000040594D) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54b_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__fgets_fwrite_54c_goodB2GSink(a1);
}

//----- (0000000000405964) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_11_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 405964: using guessed type char buf[16];

//----- (0000000000405A8E) ----------------------------------------------------
int goodB2G1_1()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsFalse();
  if ( result )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 405A8E: using guessed type char buf[16];

//----- (0000000000405BD0) ----------------------------------------------------
__int64 goodB2G2_1()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( (_DWORD)result )
  {
    i = 0LL;
    if ( v8 > 0 && v8 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v8;
        if ( v8 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 405BD0: using guessed type char buf[16];

//----- (0000000000405D06) ----------------------------------------------------
__int64 goodG2B1_0()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = globalReturnsTrue();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000405D72) ----------------------------------------------------
__int64 goodG2B2_0()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    v2 = 20;
  result = globalReturnsTrue();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000405DD2) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_11_good()
{
  goodB2G1_1();
  goodB2G2_1();
  goodG2B1_0();
  return goodG2B2_0();
}

//----- (0000000000405E00) ----------------------------------------------------
__int64 __fastcall badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000405E2D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_42_bad()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = badSource(0xFFFFFFFF);
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000405EE1) ----------------------------------------------------
__int64 goodG2BSource()
{
  return 20LL;
}

//----- (0000000000405EF4) ----------------------------------------------------
int goodG2B_0()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = goodG2BSource();
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000405FA8) ----------------------------------------------------
__int64 __fastcall goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000405FD5) ----------------------------------------------------
int goodB2G()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = goodB2GSource(0xFFFFFFFF);
  v2 = result;
  if ( result > 0 && result <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v2 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (0000000000406099) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_42_good()
{
  goodB2G();
  return goodG2B_0();
}

//----- (00000000004060B3) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_sleep_65_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(__useconds_t); // [rsp+8h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__fscanf_sleep_65b_badSink;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004060F4) ----------------------------------------------------
int goodG2B_1()
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_65b_goodG2BSink(0x14u);
}

//----- (000000000040611F) ----------------------------------------------------
__int64 goodB2G_0()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(signed int); // [rsp+8h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__fscanf_sleep_65b_goodB2GSink;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000406160) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_sleep_65_good()
{
  goodG2B_1();
  return goodB2G_0();
}

//----- (000000000040617A) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54d_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_54e_badSink(a1);
}

//----- (0000000000406191) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54d_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_54e_goodG2BSink(a1);
}

//----- (00000000004061A8) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54d_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_54e_goodB2GSink(a1);
}

//----- (00000000004061BF) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_18_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  for ( i = 0LL; ; ++i )
  {
    result = v8;
    if ( v8 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 4061BF: using guessed type char buf[16];

//----- (00000000004062CB) ----------------------------------------------------
int goodB2G_1()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v5 = result;
      if ( result != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 4062CB: using guessed type char buf[16];

//----- (00000000004063E3) ----------------------------------------------------
__int64 goodG2B_2()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000406429) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_18_good()
{
  goodB2G_1();
  return goodG2B_2();
}

//----- (0000000000406443) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_53b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_53c_badSink(a1);
}

//----- (000000000040645A) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_53b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_53c_goodG2BSink(a1);
}

//----- (0000000000406471) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_53b_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__listen_socket_fwrite_53c_goodB2GSink(a1);
}

//----- (0000000000406488) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_10_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = (unsigned int)globalTrue;
  if ( globalTrue )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 406488: using guessed type char buf[16];

//----- (00000000004065AA) ----------------------------------------------------
int goodB2G1_2()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFalse;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;
// 4065AA: using guessed type char buf[16];

//----- (00000000004066E4) ----------------------------------------------------
__int64 goodB2G2_2()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = (unsigned int)globalTrue;
  if ( globalTrue )
  {
    i = 0LL;
    if ( v8 > 0 && v8 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v8;
        if ( v8 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 4066E4: using guessed type char buf[16];

//----- (0000000000406812) ----------------------------------------------------
__int64 goodG2B1_1()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = (unsigned int)globalTrue;
  if ( globalTrue )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;

//----- (0000000000406876) ----------------------------------------------------
__int64 goodG2B2_1()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( globalTrue )
    v2 = 20;
  result = (unsigned int)globalTrue;
  if ( globalTrue )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;

//----- (00000000004068CE) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_10_good()
{
  goodB2G1_2();
  goodB2G2_2();
  goodG2B1_1();
  return goodG2B2_1();
}

//----- (00000000004068FC) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_52c_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000040699F) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_52c_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000406A42) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_52c_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (0000000000406AF5) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_64_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_for_loop_64b_badSink(&v4);
}

//----- (0000000000406B5F) ----------------------------------------------------
__int64 goodG2B_3()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__fgets_for_loop_64b_goodG2BSink(&v1);
}

//----- (0000000000406B83) ----------------------------------------------------
__int64 goodB2G_2()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_for_loop_64b_goodB2GSink(&v4);
}

//----- (0000000000406BED) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_64_good()
{
  goodG2B_3();
  return goodB2G_2();
}

//----- (0000000000406C07) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_13_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = (unsigned int)GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000406C77) ----------------------------------------------------
int goodB2G1_3()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000406D02) ----------------------------------------------------
__int64 goodB2G2_3()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = (unsigned int)GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    i = 0LL;
    result = v1;
    if ( (int)v1 > 0 )
    {
      result = v1;
      if ( (int)v1 <= 20 )
      {
        for ( i = 0LL; ; ++i )
        {
          result = (int)v1;
          if ( (int)v1 <= i )
            break;
          printLine("Hello");
        }
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000406D81) ----------------------------------------------------
__int64 goodG2B1_2()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v2 = 20;
  else
    printLine("Benign, fixed string");
  result = (unsigned int)GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000406DE7) ----------------------------------------------------
__int64 goodG2B2_2()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v2 = 20;
  result = (unsigned int)GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000406E41) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_13_good()
{
  goodB2G1_3();
  goodB2G2_3();
  goodG2B1_2();
  return goodG2B2_2();
}

//----- (0000000000406E6F) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_51_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_sleep_51b_badSink(v7);
}
// 406E6F: using guessed type char buf[16];

//----- (0000000000406F57) ----------------------------------------------------
int goodG2B_4()
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_51b_goodG2BSink(0x14u);
}

//----- (0000000000406F79) ----------------------------------------------------
int goodB2G_3()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_sleep_51b_goodB2GSink(v7);
}
// 406F79: using guessed type char buf[16];

//----- (0000000000407061) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_51_good()
{
  goodG2B_4();
  return goodB2G_3();
}

//----- (000000000040707B) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_68_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE400_Resource_Exhaustion__listen_socket_fwrite_68_badData = v8;
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_68b_badSink();
}
// 68E3E4: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_68_badData;
// 40707B: using guessed type char buf[16];

//----- (00000000004071B2) ----------------------------------------------------
int goodG2B_5()
{
  CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodG2BData = 20;
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_68b_goodG2BSink();
}
// 68E3E8: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodG2BData;

//----- (00000000004071DD) ----------------------------------------------------
int goodB2G_4()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodB2GData = v8;
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_68b_goodB2GSink();
}
// 68E3E0: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodB2GData;
// 4071DD: using guessed type char buf[16];

//----- (0000000000407314) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_68_good()
{
  goodG2B_5();
  return goodB2G_4();
}

//----- (000000000040732E) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_22_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_for_loop_22_badGlobal = 1;
  return CWE400_Resource_Exhaustion__fgets_for_loop_22_badSink(v4);
}
// 68E1CC: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_22_badGlobal;

//----- (00000000004073A0) ----------------------------------------------------
int goodB2G1_4()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_for_loop_22_goodB2G1Global = 0;
  return CWE400_Resource_Exhaustion__fgets_for_loop_22_goodB2G1Sink(v4);
}
// 68E1D0: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_22_goodB2G1Global;

//----- (0000000000407412) ----------------------------------------------------
__int64 goodB2G2_4()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_for_loop_22_goodB2G2Global = 1;
  return CWE400_Resource_Exhaustion__fgets_for_loop_22_goodB2G2Sink(v4);
}
// 68E1D4: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_22_goodB2G2Global;

//----- (0000000000407484) ----------------------------------------------------
__int64 goodG2B_6()
{
  CWE400_Resource_Exhaustion__fgets_for_loop_22_goodG2BGlobal = 1;
  return CWE400_Resource_Exhaustion__fgets_for_loop_22_goodG2BSink(20);
}
// 68E1D8: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_22_goodG2BGlobal;

//----- (00000000004074B0) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_22_good()
{
  goodB2G1_4();
  goodB2G2_4();
  return goodG2B_6();
}

//----- (00000000004074D4) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_68b_badSink()
{
  usleep(CWE400_Resource_Exhaustion__fscanf_sleep_68_badData);
  return printLine("Sleep time possibly too long");
}
// 68E3EC: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_68_badData;

//----- (00000000004074FB) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_68b_goodG2BSink()
{
  usleep(CWE400_Resource_Exhaustion__fscanf_sleep_68_goodG2BData);
  return printLine("Sleep time possibly too long");
}
// 68E3F4: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_68_goodG2BData;

//----- (0000000000407522) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_68b_goodB2GSink()
{
  if ( CWE400_Resource_Exhaustion__fscanf_sleep_68_goodB2GData <= 0
    || CWE400_Resource_Exhaustion__fscanf_sleep_68_goodB2GData > 2000 )
  {
    return printLine("Sleep time too long");
  }
  usleep(CWE400_Resource_Exhaustion__fscanf_sleep_68_goodB2GData);
  return printLine("Sleep time OK");
}
// 68E3F0: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_68_goodB2GData;

//----- (0000000000407564) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_18_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v7 = recv(v10, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v11;
    if ( v11 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 407564: using guessed type char buf[16];

//----- (0000000000407720) ----------------------------------------------------
int goodB2G_5()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v10 = result;
        if ( result != -1 )
        {
          result = recv(v10, buf, 0xDuLL, 0);
          v7 = result;
          if ( result != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              result = atoi(buf);
              v11 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v10 != -1 )
    result = close(v10);
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 407720: using guessed type char buf[16];

//----- (00000000004078EC) ----------------------------------------------------
int goodG2B_7()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000040799C) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_18_good()
{
  goodB2G_5();
  return goodG2B_7();
}

//----- (00000000004079B6) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_67_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE400_Resource_Exhaustion__fgets_sleep_67b_badSink(v5);
}

//----- (0000000000407A24) ----------------------------------------------------
int goodG2B_8()
{
  return CWE400_Resource_Exhaustion__fgets_sleep_67b_goodG2BSink(0x14u);
}

//----- (0000000000407A4C) ----------------------------------------------------
int goodB2G_6()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE400_Resource_Exhaustion__fgets_sleep_67b_goodB2GSink(v5);
}

//----- (0000000000407ABA) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_67_good()
{
  goodG2B_8();
  return goodB2G_6();
}

//----- (0000000000407AD4) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_22_badSink(__useconds_t a1)
{
  int result; // eax

  result = CWE400_Resource_Exhaustion__fgets_sleep_22_badGlobal;
  if ( CWE400_Resource_Exhaustion__fgets_sleep_22_badGlobal )
  {
    usleep(a1);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E3BC: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_22_badGlobal;

//----- (0000000000407AFF) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_22_goodB2G1Sink(signed int a1)
{
  if ( CWE400_Resource_Exhaustion__fgets_sleep_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}
// 68E3C0: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_22_goodB2G1Global;

//----- (0000000000407B51) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_22_goodB2G2Sink(signed int a1)
{
  int result; // eax

  result = CWE400_Resource_Exhaustion__fgets_sleep_22_goodB2G2Global;
  if ( CWE400_Resource_Exhaustion__fgets_sleep_22_goodB2G2Global )
  {
    if ( a1 <= 0 || a1 > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(a1);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 68E3C4: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_22_goodB2G2Global;

//----- (0000000000407B97) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_22_goodG2BSink(__useconds_t a1)
{
  int result; // eax

  result = CWE400_Resource_Exhaustion__fgets_sleep_22_goodG2BGlobal;
  if ( CWE400_Resource_Exhaustion__fgets_sleep_22_goodG2BGlobal )
  {
    usleep(a1);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E3C8: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_22_goodG2BGlobal;

//----- (0000000000407BC2) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_01_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  for ( i = 0LL; ; ++i )
  {
    result = v8;
    if ( v8 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 407BC2: using guessed type char buf[16];

//----- (0000000000407CCC) ----------------------------------------------------
__int64 goodG2B_9()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000407D10) ----------------------------------------------------
int goodB2G_7()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v5 = result;
      if ( result != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 407D10: using guessed type char buf[16];

//----- (0000000000407E26) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_for_loop_01_good()
{
  goodG2B_9();
  return goodB2G_7();
}

//----- (0000000000407E40) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_05_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( staticTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticTrue;
  if ( staticTrue )
  {
    i = 0LL;
    s = 0LL;
    filename = "output_bad.txt";
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    if ( s )
      result = fclose(s);
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E14C: using guessed type int staticTrue;

//----- (0000000000407F1C) ----------------------------------------------------
int goodB2G1_5()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( staticTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( staticFalse )
    return printLine("Benign, fixed string");
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E14C: using guessed type int staticTrue;
// 68E1DC: using guessed type int staticFalse;

//----- (0000000000408016) ----------------------------------------------------
int goodB2G2_5()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( staticTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticTrue;
  if ( staticTrue )
  {
    i = 0LL;
    s = 0LL;
    filename = "output_good.txt";
    result = v1;
    if ( v1 > 0 )
    {
      result = v1;
      if ( v1 <= 20 )
      {
        s = fopen(filename, "w+");
        if ( !s )
          exit(1);
        for ( i = 0LL; ; ++i )
        {
          result = v1;
          if ( v1 <= i )
            break;
          if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
            exit(1);
        }
        if ( s )
          result = fclose(s);
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E14C: using guessed type int staticTrue;

//----- (0000000000408105) ----------------------------------------------------
int goodG2B1_3()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( staticFalse )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = staticTrue;
  if ( staticTrue )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E14C: using guessed type int staticTrue;
// 68E1DC: using guessed type int staticFalse;

//----- (00000000004081D7) ----------------------------------------------------
int goodG2B2_3()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( staticTrue )
    v3 = 20;
  result = staticTrue;
  if ( staticTrue )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E14C: using guessed type int staticTrue;

//----- (000000000040829D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_05_good()
{
  goodB2G1_5();
  goodB2G2_5();
  goodG2B1_3();
  return goodG2B2_3();
}

//----- (00000000004082CB) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_34_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v10;
  v6 = v10;
  for ( i = 0LL; ; ++i )
  {
    result = v6;
    if ( v6 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 4082CB: using guessed type char buf[16];

//----- (00000000004083E1) ----------------------------------------------------
__int64 goodG2B_10()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000408431) ----------------------------------------------------
__int64 goodB2G_8()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v10;
  result = (unsigned int)v10;
  v6 = v10;
  i = 0LL;
  if ( v10 > 0 && v6 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v6;
      if ( v6 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 408431: using guessed type char buf[16];

//----- (0000000000408553) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_34_good()
{
  goodG2B_10();
  return goodB2G_8();
}

//----- (000000000040856D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_54_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_fwrite_54b_badSink(v4);
}

//----- (00000000004085D5) ----------------------------------------------------
int goodG2B_11()
{
  return CWE400_Resource_Exhaustion__fgets_fwrite_54b_goodG2BSink(20);
}

//----- (00000000004085F7) ----------------------------------------------------
void goodB2G_9()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  *(_QWORD *)s = 0LL;
  v1 = 0;
  v2 = 0;
  if ( fgets(s, 14, stdin) )
    v3 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_fwrite_54b_goodB2GSink(v3);
}

//----- (000000000040865F) ----------------------------------------------------
void CWE400_Resource_Exhaustion__fgets_fwrite_54_good()
{
  goodG2B_11();
  goodB2G_9();
}

//----- (0000000000408679) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_53d_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004086B2) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_53d_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004086EB) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_53d_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000408730) ----------------------------------------------------
int __fastcall badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004087D3) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_41_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return badSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040880B) ----------------------------------------------------
int __fastcall goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004088AE) ----------------------------------------------------
int goodG2B_12()
{
  return goodG2BSink(20);
}

//----- (00000000004088D0) ----------------------------------------------------
void __fastcall goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (0000000000408983) ----------------------------------------------------
void goodB2G_10()
{
  int v0; // [rsp+Ch] [rbp-4h]

  v0 = -1;
  __isoc99_fscanf(stdin, "%d", &v0);
  goodB2GSink(v0);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004089BB) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_41_good()
{
  goodB2G_10();
  return goodG2B_12();
}

//----- (00000000004089D5) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_52_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_sleep_52b_badSink(v7);
}
// 4089D5: using guessed type char buf[16];

//----- (0000000000408ABD) ----------------------------------------------------
int goodG2B_13()
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_52b_goodG2BSink(0x14u);
}

//----- (0000000000408ADF) ----------------------------------------------------
int goodB2G_11()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_sleep_52b_goodB2GSink(v7);
}
// 408ADF: using guessed type char buf[16];

//----- (0000000000408BC7) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_52_good()
{
  goodG2B_13();
  return goodB2G_11();
}

//----- (0000000000408BE1) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_51b_badSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000408C02) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_51b_goodG2BSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000408C23) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_51b_goodB2GSink(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (0000000000408C5F) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54d_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_fwrite_54e_badSink(a1);
}

//----- (0000000000408C76) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54d_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_fwrite_54e_goodG2BSink(a1);
}

//----- (0000000000408C8D) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54d_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__fgets_fwrite_54e_goodB2GSink(a1);
}

//----- (0000000000408CA4) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_53_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_53b_badSink(v8);
}
// 408CA4: using guessed type char buf[16];

//----- (0000000000408DD2) ----------------------------------------------------
int goodG2B_14()
{
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_53b_goodG2BSink(20);
}

//----- (0000000000408DF4) ----------------------------------------------------
void goodB2G_12()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v2; // [rsp+12h] [rbp-1Eh]
  int v3; // [rsp+14h] [rbp-1Ch]
  int v4; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  v6 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v3 = 0;
    v2 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v6 = accept(fd, 0LL, 0LL);
      if ( v6 != -1 )
      {
        v4 = recv(v6, buf, 0xDuLL, 0);
        if ( v4 != -1 )
        {
          if ( v4 )
          {
            buf[v4] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v6 != -1 )
    close(v6);
  CWE400_Resource_Exhaustion__listen_socket_fwrite_53b_goodB2GSink(v7);
}
// 408DF4: using guessed type char buf[16];

//----- (0000000000408F22) ----------------------------------------------------
void CWE400_Resource_Exhaustion__listen_socket_fwrite_53_good()
{
  goodG2B_14();
  goodB2G_12();
}

//----- (0000000000408F3C) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_16_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}
// 408F3C: using guessed type char buf[16];

//----- (0000000000409030) ----------------------------------------------------
int goodB2G_13()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 409030: using guessed type char buf[16];

//----- (000000000040913F) ----------------------------------------------------
int goodG2B_15()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000040916D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_16_good()
{
  goodB2G_13();
  return goodG2B_15();
}

//----- (0000000000409187) ----------------------------------------------------
__int64 badSink_0()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__connect_socket_for_loop_45_badData;
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 68E1E0: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_45_badData;

//----- (00000000004091C6) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_45_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_for_loop_45_badData = v7;
  return badSink_0();
}
// 68E1E0: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_45_badData;
// 4091C6: using guessed type char buf[16];

//----- (00000000004092B7) ----------------------------------------------------
__int64 goodG2BSink_0()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__connect_socket_for_loop_45_goodG2BData;
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 68E1E4: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_45_goodG2BData;

//----- (00000000004092F6) ----------------------------------------------------
__int64 goodG2B_16()
{
  CWE400_Resource_Exhaustion__connect_socket_for_loop_45_goodG2BData = 20;
  return goodG2BSink_0();
}
// 68E1E4: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_45_goodG2BData;

//----- (0000000000409321) ----------------------------------------------------
__int64 goodB2GSink_0()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__connect_socket_for_loop_45_goodB2GData;
  v1 = CWE400_Resource_Exhaustion__connect_socket_for_loop_45_goodB2GData;
  if ( CWE400_Resource_Exhaustion__connect_socket_for_loop_45_goodB2GData > 0
    && CWE400_Resource_Exhaustion__connect_socket_for_loop_45_goodB2GData <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1E8: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_45_goodB2GData;

//----- (000000000040936C) ----------------------------------------------------
__int64 goodB2G_14()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_for_loop_45_goodB2GData = v7;
  return goodB2GSink_0();
}
// 68E1E8: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_45_goodB2GData;
// 40936C: using guessed type char buf[16];

//----- (000000000040945D) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_45_good()
{
  goodG2B_16();
  return goodB2G_14();
}

//----- (0000000000409477) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_34_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *s; // [rsp+18h] [rbp-18h]
  int v4; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  v4 = v1;
  i = 0LL;
  s = 0LL;
  filename = "output_bad.txt";
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v4;
    if ( v4 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  if ( s )
    result = fclose(s);
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000409547) ----------------------------------------------------
int goodG2B_17()
{
  FILE *s; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000409601) ----------------------------------------------------
int goodB2G_15()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *s; // [rsp+18h] [rbp-18h]
  int v4; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  result = v1;
  v4 = v1;
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  if ( v1 > 0 && v4 <= 20 )
  {
    s = fopen(filename, "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v4;
      if ( v4 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    if ( s )
      result = fclose(s);
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004096E1) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_34_good()
{
  goodG2B_17();
  return goodB2G_15();
}

//----- (00000000004096FB) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_53b_badSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_53c_badSink(a1);
}

//----- (0000000000409712) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_53b_goodG2BSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_53c_goodG2BSink(a1);
}

//----- (0000000000409729) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_53b_goodB2GSink(signed int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_53c_goodB2GSink(a1);
}

//----- (0000000000409740) ----------------------------------------------------
__int64 __fastcall badSink_1(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)badStatic;
  if ( badStatic )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1EC: using guessed type int badStatic;

//----- (0000000000409783) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_21_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  badStatic = 1;
  return badSink_1(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1EC: using guessed type int badStatic;

//----- (00000000004097C5) ----------------------------------------------------
int __fastcall goodB2G1Sink(int a1)
{
  int result; // eax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = goodB2G1Static;
  if ( goodB2G1Static )
    return printLine("Benign, fixed string");
  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1F0: using guessed type int goodB2G1Static;

//----- (0000000000409820) ----------------------------------------------------
int goodB2G1_6()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G1Static = 0;
  return goodB2G1Sink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1F0: using guessed type int goodB2G1Static;

//----- (0000000000409862) ----------------------------------------------------
__int64 __fastcall goodB2G2Sink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)goodB2G2Static;
  if ( goodB2G2Static && a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1F4: using guessed type int goodB2G2Static;

//----- (00000000004098B1) ----------------------------------------------------
__int64 goodB2G2_6()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G2Static = 1;
  return goodB2G2Sink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1F4: using guessed type int goodB2G2Static;

//----- (00000000004098F3) ----------------------------------------------------
__int64 __fastcall goodG2BSink_1(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)goodG2BStatic;
  if ( goodG2BStatic )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1F8: using guessed type int goodG2BStatic;

//----- (0000000000409936) ----------------------------------------------------
__int64 goodG2B_18()
{
  goodG2BStatic = 1;
  return goodG2BSink_1(20);
}
// 68E1F8: using guessed type int goodG2BStatic;

//----- (0000000000409962) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_21_good()
{
  goodB2G1_6();
  goodB2G2_6();
  return goodG2B_18();
}

//----- (0000000000409986) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_03_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004099E0) ----------------------------------------------------
__int64 goodB2G1_7()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  result = v1;
  if ( (int)v1 > 0 )
  {
    result = v1;
    if ( (int)v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = (int)v1;
        if ( (int)v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000409A49) ----------------------------------------------------
__int64 goodB2G2_7()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  result = v1;
  if ( (int)v1 > 0 )
  {
    result = v1;
    if ( (int)v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = (int)v1;
        if ( (int)v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000409AB2) ----------------------------------------------------
__int64 goodG2B1_4()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000409AF6) ----------------------------------------------------
__int64 goodG2B2_4()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000409B3A) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_03_good()
{
  goodB2G1_7();
  goodB2G2_7();
  goodG2B1_4();
  return goodG2B2_4();
}

//----- (0000000000409B68) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_66b_badSink(__int64 a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v3 = *(_DWORD *)(a1 + 8);
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000409C16) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_66b_goodG2BSink(__int64 a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v3 = *(_DWORD *)(a1 + 8);
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000409CC4) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = *(_DWORD *)(a1 + 8);
  v3 = *(_DWORD *)(a1 + 8);
  if ( v3 > 0 && v3 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (0000000000409D82) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_65b_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000409E25) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_65b_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000409EC8) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_65b_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (0000000000409F7B) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_52c_badSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000409F9C) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_52c_goodG2BSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000409FBD) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_52c_goodB2GSink(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (0000000000409FF9) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_05_bad()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( staticTrue_0 )
    __isoc99_fscanf(stdin, "%d", &useconds);
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E150: using guessed type int staticTrue_0;

//----- (000000000040A04F) ----------------------------------------------------
int goodB2G1_8()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( staticTrue_0 )
    __isoc99_fscanf(stdin, "%d", &useconds);
  if ( staticFalse_0 )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E150: using guessed type int staticTrue_0;
// 68E1FC: using guessed type int staticFalse_0;

//----- (000000000040A0CE) ----------------------------------------------------
int goodB2G2_8()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( staticTrue_0 )
    __isoc99_fscanf(stdin, "%d", &useconds);
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E150: using guessed type int staticTrue_0;

//----- (000000000040A141) ----------------------------------------------------
int goodG2B1_5()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( staticFalse_0 )
    printLine("Benign, fixed string");
  else
    useconds = 20;
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E150: using guessed type int staticTrue_0;
// 68E1FC: using guessed type int staticFalse_0;

//----- (000000000040A18D) ----------------------------------------------------
int goodG2B2_5()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( staticTrue_0 )
    useconds = 20;
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E150: using guessed type int staticTrue_0;

//----- (000000000040A1CD) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_05_good()
{
  goodB2G1_8();
  goodB2G2_8();
  goodG2B1_5();
  return goodG2B2_5();
}

//----- (000000000040A1FB) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_68_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_sleep_68_badData = v1;
  return CWE400_Resource_Exhaustion__fscanf_sleep_68b_badSink();
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E3EC: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_68_badData;

//----- (000000000040A23C) ----------------------------------------------------
int goodG2B_19()
{
  CWE400_Resource_Exhaustion__fscanf_sleep_68_goodG2BData = 20;
  return CWE400_Resource_Exhaustion__fscanf_sleep_68b_goodG2BSink();
}
// 68E3F4: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_68_goodG2BData;

//----- (000000000040A267) ----------------------------------------------------
int goodB2G_16()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_sleep_68_goodB2GData = v1;
  return CWE400_Resource_Exhaustion__fscanf_sleep_68b_goodB2GSink();
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E3F0: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_68_goodB2GData;

//----- (000000000040A2A8) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_68_good()
{
  goodG2B_19();
  return goodB2G_16();
}

//----- (000000000040A2C2) ----------------------------------------------------
__int64 staticReturnsTrue()
{
  return 1LL;
}

//----- (000000000040A2CD) ----------------------------------------------------
__int64 staticReturnsFalse()
{
  return 0LL;
}

//----- (000000000040A2D8) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_08_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( (unsigned int)staticReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 40A2D8: using guessed type char buf[16];

//----- (000000000040A402) ----------------------------------------------------
int goodB2G1_9()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( (unsigned int)staticReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsFalse();
  if ( result )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 40A402: using guessed type char buf[16];

//----- (000000000040A544) ----------------------------------------------------
__int64 goodB2G2_9()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( (unsigned int)staticReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue();
  if ( (_DWORD)result )
  {
    i = 0LL;
    if ( v8 > 0 && v8 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v8;
        if ( v8 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 40A544: using guessed type char buf[16];

//----- (000000000040A67A) ----------------------------------------------------
__int64 goodG2B1_6()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( (unsigned int)staticReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = staticReturnsTrue();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000040A6E6) ----------------------------------------------------
__int64 goodG2B2_6()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( (unsigned int)staticReturnsTrue() )
    v2 = 20;
  result = staticReturnsTrue();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000040A746) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_08_good()
{
  goodB2G1_9();
  goodB2G2_9();
  goodG2B1_6();
  return goodG2B2_6();
}

//----- (000000000040A774) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_18_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040A7D0) ----------------------------------------------------
__int64 goodB2G_17()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  result = v1;
  if ( (int)v1 > 0 )
  {
    result = v1;
    if ( (int)v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = (int)v1;
        if ( (int)v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040A83B) ----------------------------------------------------
__int64 goodG2B_20()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000040A881) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_18_good()
{
  goodB2G_17();
  return goodG2B_20();
}

//----- (000000000040A89B) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_61_bad()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__fscanf_fwrite_61b_badSource(0xFFFFFFFF);
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000040A94F) ----------------------------------------------------
int goodG2B_21()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__fscanf_fwrite_61b_goodG2BSource();
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000040AA03) ----------------------------------------------------
int goodB2G_18()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__fscanf_fwrite_61b_goodB2GSource(0xFFFFFFFF);
  v2 = result;
  if ( result > 0 && result <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v2 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000040AAC7) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_61_good()
{
  goodG2B_21();
  return goodB2G_18();
}

//----- (000000000040AAE1) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_22_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_fwrite_22_badGlobal = 1;
  return CWE400_Resource_Exhaustion__fgets_fwrite_22_badSink(v4);
}
// 68E200: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_22_badGlobal;

//----- (000000000040AB53) ----------------------------------------------------
int goodB2G1_10()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_fwrite_22_goodB2G1Global = 0;
  return CWE400_Resource_Exhaustion__fgets_fwrite_22_goodB2G1Sink(v4);
}
// 68E204: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_22_goodB2G1Global;

//----- (000000000040ABC5) ----------------------------------------------------
int goodB2G2_10()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_fwrite_22_goodB2G2Global = 1;
  return CWE400_Resource_Exhaustion__fgets_fwrite_22_goodB2G2Sink(v4);
}
// 68E208: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_22_goodB2G2Global;

//----- (000000000040AC37) ----------------------------------------------------
int goodG2B_22()
{
  CWE400_Resource_Exhaustion__fgets_fwrite_22_goodG2BGlobal = 1;
  return CWE400_Resource_Exhaustion__fgets_fwrite_22_goodG2BSink(20);
}
// 68E20C: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_22_goodG2BGlobal;

//----- (000000000040AC63) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_22_good()
{
  goodB2G1_10();
  goodB2G2_10();
  return goodG2B_22();
}

//----- (000000000040AC87) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_53c_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_fwrite_53d_badSink(a1);
}

//----- (000000000040AC9E) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_53c_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_fwrite_53d_goodG2BSink(a1);
}

//----- (000000000040ACB5) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_53c_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__fgets_fwrite_53d_goodB2GSink(a1);
}

//----- (000000000040ACCC) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_63b_badSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = *a1;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000040AD0F) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_63b_goodG2BSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = *a1;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000040AD52) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_63b_goodB2GSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)*a1;
  v2 = *a1;
  if ( *a1 > 0 && v2 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000040ADA1) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (000000000040ADFE) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_fwrite_61b_goodG2BSource()
{
  return 20LL;
}

//----- (000000000040AE11) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (000000000040AE6E) ----------------------------------------------------
void CWE400_Resource_Exhaustion__listen_socket_for_loop_17_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  int v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+20h] [rbp-20h]
  int fd; // [rsp+24h] [rbp-1Ch]
  unsigned __int64 k; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = 0;
      v2 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v4 = recv(v7, buf, 0xDuLL, 0);
          if ( v4 != -1 )
          {
            if ( v4 )
            {
              buf[v4] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  for ( j = 0; j <= 0; ++j )
  {
    for ( k = 0LL; v8 > k; ++k )
      printLine("Hello");
  }
}
// 40AE6E: using guessed type char buf[16];

//----- (000000000040AFEB) ----------------------------------------------------
void goodB2G_19()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  int v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+20h] [rbp-20h]
  int fd; // [rsp+24h] [rbp-1Ch]
  unsigned __int64 k; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    v7 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = 0;
      v2 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v7 = accept(fd, 0LL, 0LL);
        if ( v7 != -1 )
        {
          v4 = recv(v7, buf, 0xDuLL, 0);
          if ( v4 != -1 )
          {
            if ( v4 )
            {
              buf[v4] = 0;
              v8 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v7 != -1 )
      close(v7);
  }
  for ( j = 0; j <= 0; ++j )
  {
    k = 0LL;
    if ( v8 > 0 && v8 <= 20 )
    {
      for ( k = 0LL; v8 > k; ++k )
        printLine("Hello");
    }
  }
}
// 40AFEB: using guessed type char buf[16];

//----- (000000000040B174) ----------------------------------------------------
__int64 goodG2B_23()
{
  __int64 result; // rax
  unsigned __int64 k; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v2 = -1;
  for ( i = 0; i <= 0; ++i )
    v2 = 20;
  for ( j = 0; j <= 0; ++j )
  {
    for ( k = 0LL; ; ++k )
    {
      result = v2;
      if ( v2 <= k )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000040B1DE) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_17_good()
{
  goodB2G_19();
  return goodG2B_23();
}

//----- (000000000040B1F8) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_52b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_52c_badSink(a1);
}

//----- (000000000040B20F) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_52b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_52c_goodG2BSink(a1);
}

//----- (000000000040B226) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_52b_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__listen_socket_fwrite_52c_goodB2GSink(a1);
}

//----- (000000000040B23D) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_12_bad()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  unsigned __int64 j; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%d", &v1);
  else
    v1 = 20;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    for ( i = 0LL; ; ++i )
    {
      result = (int)v1;
      if ( (int)v1 <= i )
        break;
      printLine("Hello");
    }
  }
  else
  {
    j = 0LL;
    result = v1;
    if ( (int)v1 > 0 )
    {
      result = v1;
      if ( (int)v1 <= 20 )
      {
        for ( j = 0LL; ; ++j )
        {
          result = (int)v1;
          if ( (int)v1 <= j )
            break;
          printLine("Hello");
        }
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040B2F9) ----------------------------------------------------
__int64 goodB2G_20()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  unsigned __int64 j; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    i = 0LL;
    result = v1;
    if ( (int)v1 > 0 )
    {
      result = v1;
      if ( (int)v1 <= 20 )
      {
        for ( i = 0LL; ; ++i )
        {
          result = (int)v1;
          if ( (int)v1 <= i )
            break;
          printLine("Hello");
        }
      }
    }
  }
  else
  {
    j = 0LL;
    result = v1;
    if ( (int)v1 > 0 )
    {
      result = v1;
      if ( (int)v1 <= 20 )
      {
        for ( j = 0LL; ; ++j )
        {
          result = (int)v1;
          if ( (int)v1 <= j )
            break;
          printLine("Hello");
        }
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040B3DA) ----------------------------------------------------
__int64 goodG2B_24()
{
  __int64 result; // rax
  unsigned __int64 j; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  globalReturnsTrueOrFalse();
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    for ( i = 0LL; ; ++i )
    {
      result = 20LL;
      if ( i >= 0x14 )
        break;
      printLine("Hello");
    }
  }
  else
  {
    for ( j = 0LL; ; ++j )
    {
      result = 20LL;
      if ( j >= 0x14 )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000040B471) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_12_good()
{
  goodB2G_20();
  return goodG2B_24();
}

//----- (000000000040B48B) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_53_bad()
{
  __useconds_t v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_sleep_53b_badSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040B4C3) ----------------------------------------------------
int goodG2B_25()
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_53b_goodG2BSink(0x14u);
}

//----- (000000000040B4E5) ----------------------------------------------------
int goodB2G_21()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_sleep_53b_goodB2GSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040B51D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_53_good()
{
  goodG2B_25();
  return goodB2G_21();
}

//----- (000000000040B537) ----------------------------------------------------
__int64 __fastcall badSink_2(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000040B570) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_44_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  __int64 (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = badSink_2;
  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return v7(v9);
}
// 40B570: using guessed type char buf[16];

//----- (000000000040B6A7) ----------------------------------------------------
__int64 __fastcall goodG2BSink_2(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000040B6E0) ----------------------------------------------------
__int64 goodG2B_26()
{
  return goodG2BSink_2(20);
}

//----- (000000000040B70B) ----------------------------------------------------
__int64 __fastcall goodB2GSink_1(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000040B750) ----------------------------------------------------
__int64 goodB2G_22()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  __int64 (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = goodB2GSink_1;
  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return v7(v9);
}
// 40B750: using guessed type char buf[16];

//----- (000000000040B887) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_44_good()
{
  goodG2B_26();
  return goodB2G_22();
}

//----- (000000000040B8A1) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54e_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000040B944) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54e_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000040B9E7) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54e_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (000000000040BA9A) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_53c_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_53d_badSink(a1);
}

//----- (000000000040BAB1) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_53c_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_53d_goodG2BSink(a1);
}

//----- (000000000040BAC8) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_53c_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_53d_goodB2GSink(a1);
}

//----- (000000000040BADF) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_fwrite_65_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE400_Resource_Exhaustion__fgets_fwrite_65b_badSink;
  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000040BB50) ----------------------------------------------------
int goodG2B_27()
{
  return CWE400_Resource_Exhaustion__fgets_fwrite_65b_goodG2BSink(20);
}

//----- (000000000040BB7B) ----------------------------------------------------
__int64 goodB2G_23()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  void (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE400_Resource_Exhaustion__fgets_fwrite_65b_goodB2GSink;
  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000040BBEC) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_fwrite_65_good()
{
  goodG2B_27();
  return goodB2G_23();
}

//----- (000000000040BC06) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_54c_badSink(a1);
}

//----- (000000000040BC1D) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_54c_goodG2BSink(a1);
}

//----- (000000000040BC34) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54b_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_54c_goodB2GSink(a1);
}

//----- (000000000040BC4B) ----------------------------------------------------
int badSink_3()
{
  usleep(CWE400_Resource_Exhaustion__connect_socket_sleep_45_badData);
  return printLine("Sleep time possibly too long");
}
// 68E210: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_45_badData;

//----- (000000000040BC72) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_45_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_sleep_45_badData = v7;
  return badSink_3();
}
// 68E210: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_45_badData;
// 40BC72: using guessed type char buf[16];

//----- (000000000040BD63) ----------------------------------------------------
int goodG2BSink_3()
{
  usleep(CWE400_Resource_Exhaustion__connect_socket_sleep_45_goodG2BData);
  return printLine("Sleep time possibly too long");
}
// 68E214: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_45_goodG2BData;

//----- (000000000040BD8A) ----------------------------------------------------
int goodG2B_28()
{
  CWE400_Resource_Exhaustion__connect_socket_sleep_45_goodG2BData = 20;
  return goodG2BSink_3();
}
// 68E214: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_45_goodG2BData;

//----- (000000000040BDB5) ----------------------------------------------------
int goodB2GSink_2()
{
  if ( CWE400_Resource_Exhaustion__connect_socket_sleep_45_goodB2GData <= 0
    || CWE400_Resource_Exhaustion__connect_socket_sleep_45_goodB2GData > 2000 )
  {
    return printLine("Sleep time too long");
  }
  usleep(CWE400_Resource_Exhaustion__connect_socket_sleep_45_goodB2GData);
  return printLine("Sleep time OK");
}
// 68E218: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_45_goodB2GData;

//----- (000000000040BDF7) ----------------------------------------------------
int goodB2G_24()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_sleep_45_goodB2GData = v7;
  return goodB2GSink_2();
}
// 68E218: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_45_goodB2GData;
// 40BDF7: using guessed type char buf[16];

//----- (000000000040BEE8) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_45_good()
{
  goodG2B_28();
  return goodB2G_24();
}

//----- (000000000040BF02) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_54c_badSink(a1);
}

//----- (000000000040BF19) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_54c_goodG2BSink(a1);
}

//----- (000000000040BF30) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54b_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_54c_goodB2GSink(a1);
}

//----- (000000000040BF47) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_06_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}
// 40BF47: using guessed type char buf[16];

//----- (000000000040C051) ----------------------------------------------------
int goodB2G1_11()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 40C051: using guessed type char buf[16];

//----- (000000000040C182) ----------------------------------------------------
int goodB2G2_11()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 40C182: using guessed type char buf[16];

//----- (000000000040C2A7) ----------------------------------------------------
int goodG2B1_7()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000040C2F3) ----------------------------------------------------
int goodG2B2_7()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000040C333) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_06_good()
{
  goodB2G1_11();
  goodB2G2_11();
  goodG2B1_7();
  return goodG2B2_7();
}

//----- (000000000040C361) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_67b_badSink(int a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000040C40A) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_67b_goodG2BSink(int a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000040C4B3) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_67b_goodB2GSink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = a1;
  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000040C56C) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 40C56C: using guessed type char buf[16];

//----- (000000000040C68F) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_61b_goodG2BSource()
{
  return 20LL;
}

//----- (000000000040C6A2) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 40C6A2: using guessed type char buf[16];

//----- (000000000040C7C5) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_15_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (000000000040C839) ----------------------------------------------------
int goodB2G1_12()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (000000000040C8C8) ----------------------------------------------------
int goodB2G2_12()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (000000000040C957) ----------------------------------------------------
int goodG2B1_8()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000040C985) ----------------------------------------------------
int goodG2B2_8()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000040C9B3) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_15_good()
{
  goodB2G1_12();
  goodB2G2_12();
  goodG2B1_8();
  return goodG2B2_8();
}

//----- (000000000040C9E1) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_31_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-40h]
  int v2; // [rsp+8h] [rbp-38h]
  __int16 v3; // [rsp+Ch] [rbp-34h]
  char *filename; // [rsp+18h] [rbp-28h]
  FILE *stream; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v7 = v9;
  v6 = v9;
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v6;
    if ( v6 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}

//----- (000000000040CAE1) ----------------------------------------------------
int goodG2B_29()
{
  FILE *s; // [rsp+10h] [rbp-20h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000040CB9B) ----------------------------------------------------
int goodB2G_25()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-40h]
  int v2; // [rsp+8h] [rbp-38h]
  __int16 v3; // [rsp+Ch] [rbp-34h]
  char *filename; // [rsp+18h] [rbp-28h]
  FILE *stream; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v7 = v9;
  result = v9;
  v6 = v9;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v9 > 0 && v6 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v6;
      if ( v6 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (000000000040CCAB) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_31_good()
{
  goodG2B_29();
  return goodB2G_25();
}

//----- (000000000040CCC5) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_64_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_sleep_64b_badSink((__useconds_t *)&v4);
}

//----- (000000000040CD2F) ----------------------------------------------------
int goodG2B_30()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__fgets_sleep_64b_goodG2BSink((__useconds_t *)&v1);
}

//----- (000000000040CD53) ----------------------------------------------------
int goodB2G_26()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_sleep_64b_goodB2GSink(&v4);
}

//----- (000000000040CDBD) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_64_good()
{
  goodG2B_30();
  return goodB2G_26();
}

//----- (000000000040CDD7) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_16_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v10;
    if ( v10 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 40CDD7: using guessed type char buf[16];

//----- (000000000040CF4D) ----------------------------------------------------
int goodB2G_27()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v7 = result;
      if ( result != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          result = atoi(buf);
          v10 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 40CF4D: using guessed type char buf[16];

//----- (000000000040D0D3) ----------------------------------------------------
int goodG2B_31()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000040D183) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_16_good()
{
  goodB2G_27();
  return goodG2B_31();
}

//----- (000000000040D19D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_13_bad()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &useconds);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040D1F5) ----------------------------------------------------
int goodB2G1_13()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &useconds);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040D276) ----------------------------------------------------
int goodB2G2_13()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &useconds);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040D2EB) ----------------------------------------------------
int goodG2B1_9()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    useconds = 20;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040D339) ----------------------------------------------------
int goodG2B2_9()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    useconds = 20;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040D37B) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_13_good()
{
  goodB2G1_13();
  goodB2G2_13();
  goodG2B1_9();
  return goodG2B2_9();
}

//----- (000000000040D3A9) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_14_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;
// 40D3A9: using guessed type char buf[16];

//----- (000000000040D53B) ----------------------------------------------------
int goodB2G1_14()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;
// 40D53B: using guessed type char buf[16];

//----- (000000000040D6E8) ----------------------------------------------------
int goodB2G2_14()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v10 > 0 && v10 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v10;
        if ( v10 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;
// 40D6E8: using guessed type char buf[16];

//----- (000000000040D88A) ----------------------------------------------------
int goodG2B1_10()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( globalFive == 5 )
    v3 = 20;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (000000000040D95E) ----------------------------------------------------
int goodG2B2_10()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( globalFive == 5 )
    v3 = 20;
  result = globalFive;
  if ( globalFive == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (000000000040DA26) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_14_good()
{
  goodB2G1_14();
  goodB2G2_14();
  goodG2B1_10();
  return goodG2B2_10();
}

//----- (000000000040DA54) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_32_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+24h] [rbp-2Ch]
  int v7; // [rsp+28h] [rbp-28h]
  int fd; // [rsp+2Ch] [rbp-24h]
  int *v9; // [rsp+30h] [rbp-20h]
  int *v10; // [rsp+38h] [rbp-18h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v12; // [rsp+4Ch] [rbp-4h]

  v10 = &v5;
  v9 = &v5;
  v5 = -1;
  v12 = -1;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v10 = v12;
  v6 = *v9;
  for ( i = 0LL; ; ++i )
  {
    result = v6;
    if ( v6 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 40DA54: using guessed type char buf[16];

//----- (000000000040DB89) ----------------------------------------------------
__int64 goodG2B_32()
{
  __int64 result; // rax
  int v1; // [rsp+Ch] [rbp-24h]
  int v2; // [rsp+10h] [rbp-20h]
  int v3; // [rsp+14h] [rbp-1Ch]
  int *v4; // [rsp+18h] [rbp-18h]
  int *v5; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 20;
  v1 = 20;
  v2 = 20;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000040DBF8) ----------------------------------------------------
__int64 goodB2G_28()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+24h] [rbp-2Ch]
  int v7; // [rsp+28h] [rbp-28h]
  int fd; // [rsp+2Ch] [rbp-24h]
  int *v9; // [rsp+30h] [rbp-20h]
  int *v10; // [rsp+38h] [rbp-18h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v12; // [rsp+4Ch] [rbp-4h]

  v10 = &v5;
  v9 = &v5;
  v5 = -1;
  v12 = -1;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v10 = v12;
  result = (unsigned int)*v9;
  v6 = *v9;
  i = 0LL;
  if ( v6 > 0 && v6 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v6;
      if ( v6 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 40DBF8: using guessed type char buf[16];

//----- (000000000040DD39) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_32_good()
{
  goodG2B_32();
  return goodB2G_28();
}

//----- (000000000040DD53) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_52b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_52c_badSink(a1);
}

//----- (000000000040DD6A) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_52b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_52c_goodG2BSink(a1);
}

//----- (000000000040DD81) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_52b_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_52c_goodB2GSink(a1);
}

//----- (000000000040DD98) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54c_badSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_54d_badSink(a1);
}

//----- (000000000040DDAF) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54c_goodG2BSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_54d_goodG2BSink(a1);
}

//----- (000000000040DDC6) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54c_goodB2GSink(signed int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_54d_goodB2GSink(a1);
}

//----- (000000000040DDDD) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_01_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}
// 40DDDD: using guessed type char buf[16];

//----- (000000000040DECF) ----------------------------------------------------
int goodG2B_33()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000040DEFB) ----------------------------------------------------
int goodB2G_29()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 40DEFB: using guessed type char buf[16];

//----- (000000000040E008) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_01_good()
{
  goodG2B_33();
  return goodB2G_29();
}

//----- (000000000040E022) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_67_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE400_Resource_Exhaustion__fgets_fwrite_67b_badSink(v5);
}

//----- (000000000040E090) ----------------------------------------------------
int goodG2B_34()
{
  return CWE400_Resource_Exhaustion__fgets_fwrite_67b_goodG2BSink(20);
}

//----- (000000000040E0B8) ----------------------------------------------------
int goodB2G_30()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE400_Resource_Exhaustion__fgets_fwrite_67b_goodB2GSink(v5);
}

//----- (000000000040E126) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_67_good()
{
  goodG2B_34();
  return goodB2G_30();
}

//----- (000000000040E140) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_65_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __int64 (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE400_Resource_Exhaustion__fgets_for_loop_65b_badSink;
  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return v4(v5);
}

//----- (000000000040E1B1) ----------------------------------------------------
__int64 goodG2B_35()
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_65b_goodG2BSink(20);
}

//----- (000000000040E1DC) ----------------------------------------------------
__int64 goodB2G_31()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __int64 (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE400_Resource_Exhaustion__fgets_for_loop_65b_goodB2GSink;
  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return v4(v5);
}

//----- (000000000040E24D) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_65_good()
{
  goodG2B_35();
  return goodB2G_31();
}

//----- (000000000040E267) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54d_badSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_54e_badSink(a1);
}

//----- (000000000040E27E) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54d_goodG2BSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_54e_goodG2BSink(a1);
}

//----- (000000000040E295) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54d_goodB2GSink(signed int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_54e_goodB2GSink(a1);
}

//----- (000000000040E2AC) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_fwrite_63b_badSink(&v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040E2E6) ----------------------------------------------------
int goodG2B_36()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__fscanf_fwrite_63b_goodG2BSink(&v1);
}

//----- (000000000040E30A) ----------------------------------------------------
int goodB2G_32()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_fwrite_63b_goodB2GSink(&v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040E344) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_63_good()
{
  goodG2B_36();
  return goodB2G_32();
}

//----- (000000000040E35E) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_22_badSink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__fgets_fwrite_22_badGlobal;
  if ( CWE400_Resource_Exhaustion__fgets_fwrite_22_badGlobal )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E200: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_22_badGlobal;

//----- (000000000040E40F) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_22_goodB2G1Sink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__fgets_fwrite_22_goodB2G1Global;
  if ( CWE400_Resource_Exhaustion__fgets_fwrite_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E204: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_22_goodB2G1Global;

//----- (000000000040E4DB) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_22_goodB2G2Sink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__fgets_fwrite_22_goodB2G2Global;
  if ( CWE400_Resource_Exhaustion__fgets_fwrite_22_goodB2G2Global && a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E208: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_22_goodB2G2Global;

//----- (000000000040E59C) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_22_goodG2BSink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__fgets_fwrite_22_goodG2BGlobal;
  if ( CWE400_Resource_Exhaustion__fgets_fwrite_22_goodG2BGlobal )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E20C: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_22_goodG2BGlobal;

//----- (000000000040E64D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_12_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-60h]
  __int16 s; // [rsp+10h] [rbp-50h]
  uint16_t v3; // [rsp+12h] [rbp-4Eh]
  int v4; // [rsp+14h] [rbp-4Ch]
  char *v5; // [rsp+20h] [rbp-40h]
  FILE *v6; // [rsp+28h] [rbp-38h]
  char *filename; // [rsp+30h] [rbp-30h]
  FILE *stream; // [rsp+38h] [rbp-28h]
  int v9; // [rsp+40h] [rbp-20h]
  int fd; // [rsp+44h] [rbp-1Ch]
  unsigned __int64 j; // [rsp+48h] [rbp-18h]
  unsigned __int64 i; // [rsp+50h] [rbp-10h]
  int v13; // [rsp+58h] [rbp-8h]
  int v14; // [rsp+5Ch] [rbp-4h]

  v14 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v13 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v13 = accept(fd, 0LL, 0LL);
        if ( v13 != -1 )
        {
          v9 = recv(v13, buf, 0xDuLL, 0);
          if ( v9 != -1 )
          {
            if ( v9 )
            {
              buf[v9] = 0;
              v14 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v13 != -1 )
      close(v13);
  }
  else
  {
    v14 = 20;
  }
  result = globalReturnsTrueOrFalse();
  if ( result )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v14;
      if ( v14 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  else
  {
    j = 0LL;
    v6 = 0LL;
    v5 = "output_good.txt";
    if ( v14 > 0 && v14 <= 20 )
    {
      v6 = fopen(v5, "w+");
      if ( !v6 )
        exit(1);
      for ( j = 0LL; ; ++j )
      {
        result = v14;
        if ( v14 <= j )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, v6) != 50 )
          exit(1);
      }
      if ( v6 )
        result = fclose(v6);
    }
  }
  return result;
}
// 40E64D: using guessed type char buf[16];

//----- (000000000040E8E6) ----------------------------------------------------
int goodB2G_33()
{
  int result; // eax
  char nptr[16]; // [rsp+0h] [rbp-90h]
  struct sockaddr addr; // [rsp+10h] [rbp-80h]
  char buf[16]; // [rsp+20h] [rbp-70h]
  __int16 s; // [rsp+30h] [rbp-60h]
  uint16_t v5; // [rsp+32h] [rbp-5Eh]
  int v6; // [rsp+34h] [rbp-5Ch]
  char *v7; // [rsp+40h] [rbp-50h]
  FILE *v8; // [rsp+48h] [rbp-48h]
  char *filename; // [rsp+50h] [rbp-40h]
  FILE *stream; // [rsp+58h] [rbp-38h]
  int v11; // [rsp+60h] [rbp-30h]
  int v12; // [rsp+64h] [rbp-2Ch]
  int v13; // [rsp+68h] [rbp-28h]
  int fd; // [rsp+6Ch] [rbp-24h]
  unsigned __int64 j; // [rsp+70h] [rbp-20h]
  unsigned __int64 i; // [rsp+78h] [rbp-18h]
  int v17; // [rsp+84h] [rbp-Ch]
  int v18; // [rsp+88h] [rbp-8h]
  int v19; // [rsp+8Ch] [rbp-4h]

  v19 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v18 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v6 = 0;
      v5 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v18 = accept(fd, 0LL, 0LL);
        if ( v18 != -1 )
        {
          v13 = recv(v18, buf, 0xDuLL, 0);
          if ( v13 != -1 )
          {
            if ( v13 )
            {
              buf[v13] = 0;
              v19 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v18 != -1 )
      close(v18);
  }
  else
  {
    v17 = -1;
    v12 = socket(2, 1, 6);
    if ( v12 != -1 )
    {
      memset(&addr, 0, 0x10uLL);
      addr.sa_family = 2;
      *(_DWORD *)&addr.sa_data[2] = 0;
      *(_WORD *)addr.sa_data = htons(0x6987u);
      if ( bind(v12, &addr, 0x10u) != -1 && listen(v12, 5) != -1 )
      {
        v17 = accept(v12, 0LL, 0LL);
        if ( v17 != -1 )
        {
          v11 = recv(v17, nptr, 0xDuLL, 0);
          if ( v11 != -1 )
          {
            if ( v11 )
            {
              nptr[v11] = 0;
              v19 = atoi(nptr);
            }
          }
        }
      }
    }
    if ( v12 != -1 )
      close(v12);
    if ( v17 != -1 )
      close(v17);
  }
  result = globalReturnsTrueOrFalse();
  if ( result )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v19 > 0 && v19 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v19;
        if ( v19 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  else
  {
    j = 0LL;
    v8 = 0LL;
    v7 = "output_good.txt";
    if ( v19 > 0 && v19 <= 20 )
    {
      v8 = fopen(v7, "w+");
      if ( !v8 )
        exit(1);
      for ( j = 0LL; ; ++j )
      {
        result = v19;
        if ( v19 <= j )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, v8) != 50 )
          exit(1);
      }
      if ( v8 )
        result = fclose(v8);
    }
  }
  return result;
}
// 40E8E6: using guessed type char buf[16];
// 40E8E6: using guessed type char nptr[16];

//----- (000000000040ECB1) ----------------------------------------------------
int goodG2B_37()
{
  int result; // eax
  FILE *stream; // [rsp+10h] [rbp-30h]
  FILE *s; // [rsp+20h] [rbp-20h]
  unsigned __int64 j; // [rsp+28h] [rbp-18h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]

  globalReturnsTrueOrFalse();
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; i < 0x14; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  else
  {
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( j = 0LL; j < 0x14; ++j )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    result = fclose(stream);
  }
  return result;
}

//----- (000000000040EE28) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_12_good()
{
  goodB2G_33();
  return goodG2B_37();
}

//----- (000000000040EE42) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_07_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( staticFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive;
  if ( staticFive == 5 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E154: using guessed type int staticFive;
// 40EE42: using guessed type char buf[16];

//----- (000000000040EFD4) ----------------------------------------------------
int goodB2G1_15()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( staticFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive;
  if ( staticFive != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E154: using guessed type int staticFive;
// 40EFD4: using guessed type char buf[16];

//----- (000000000040F181) ----------------------------------------------------
int goodB2G2_15()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( staticFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive;
  if ( staticFive == 5 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v10 > 0 && v10 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v10;
        if ( v10 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 68E154: using guessed type int staticFive;
// 40F181: using guessed type char buf[16];

//----- (000000000040F323) ----------------------------------------------------
int goodG2B1_11()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( staticFive == 5 )
    v3 = 20;
  else
    printLine("Benign, fixed string");
  result = staticFive;
  if ( staticFive == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E154: using guessed type int staticFive;

//----- (000000000040F3F7) ----------------------------------------------------
int goodG2B2_11()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( staticFive == 5 )
    v3 = 20;
  result = staticFive;
  if ( staticFive == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E154: using guessed type int staticFive;

//----- (000000000040F4BF) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_07_good()
{
  goodB2G1_15();
  goodB2G2_15();
  goodG2B1_11();
  return goodG2B2_11();
}

//----- (000000000040F4ED) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_04_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  for ( i = 0LL; ; ++i )
  {
    result = v8;
    if ( v8 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 40F4ED: using guessed type char buf[16];

//----- (000000000040F60D) ----------------------------------------------------
__int64 goodB2G1_16()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  result = 0LL;
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 40F60D: using guessed type char buf[16];

//----- (000000000040F745) ----------------------------------------------------
__int64 goodB2G2_16()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  result = 1LL;
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 40F745: using guessed type char buf[16];

//----- (000000000040F871) ----------------------------------------------------
__int64 goodG2B1_12()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000040F8D3) ----------------------------------------------------
__int64 goodG2B2_12()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000040F929) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_04_good()
{
  goodB2G1_16();
  goodB2G2_16();
  goodG2B1_12();
  return goodG2B2_12();
}

//----- (000000000040F957) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_09_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = (unsigned int)GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 40F957: using guessed type char buf[16];

//----- (000000000040FABF) ----------------------------------------------------
int goodB2G1_17()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = GLOBAL_CONST_FALSE;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;
// 40FABF: using guessed type char buf[16];

//----- (000000000040FC3F) ----------------------------------------------------
__int64 goodB2G2_17()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = (unsigned int)GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    i = 0LL;
    if ( v9 > 0 && v9 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v9;
        if ( v9 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 40FC3F: using guessed type char buf[16];

//----- (000000000040FDB3) ----------------------------------------------------
__int64 goodG2B1_13()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = (unsigned int)GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000040FE17) ----------------------------------------------------
__int64 goodG2B2_13()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( GLOBAL_CONST_TRUE )
    v2 = 20;
  result = (unsigned int)GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040FE6F) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_09_good()
{
  goodB2G1_17();
  goodB2G2_17();
  goodG2B1_13();
  return goodG2B2_13();
}

//----- (000000000040FE9D) ----------------------------------------------------
int __fastcall badSink_4(__useconds_t a1)
{
  int result; // eax

  result = badStatic_0;
  if ( badStatic_0 )
  {
    usleep(a1);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E21C: using guessed type int badStatic_0;

//----- (000000000040FEC8) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_21_bad()
{
  __useconds_t v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  badStatic_0 = 1;
  return badSink_4(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E21C: using guessed type int badStatic_0;

//----- (000000000040FF0A) ----------------------------------------------------
int __fastcall goodB2G1Sink_0(signed int a1)
{
  if ( goodB2G1Static_0 )
    return printLine("Benign, fixed string");
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}
// 68E220: using guessed type int goodB2G1Static_0;

//----- (000000000040FF5C) ----------------------------------------------------
int goodB2G1_18()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G1Static_0 = 0;
  return goodB2G1Sink_0(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E220: using guessed type int goodB2G1Static_0;

//----- (000000000040FF9E) ----------------------------------------------------
int __fastcall goodB2G2Sink_0(signed int a1)
{
  int result; // eax

  result = goodB2G2Static_0;
  if ( goodB2G2Static_0 )
  {
    if ( a1 <= 0 || a1 > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(a1);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 68E224: using guessed type int goodB2G2Static_0;

//----- (000000000040FFE4) ----------------------------------------------------
int goodB2G2_18()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G2Static_0 = 1;
  return goodB2G2Sink_0(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E224: using guessed type int goodB2G2Static_0;

//----- (0000000000410026) ----------------------------------------------------
int __fastcall goodG2BSink_4(__useconds_t a1)
{
  int result; // eax

  result = goodG2BStatic_0;
  if ( goodG2BStatic_0 )
  {
    usleep(a1);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E228: using guessed type int goodG2BStatic_0;

//----- (0000000000410051) ----------------------------------------------------
int goodG2B_38()
{
  goodG2BStatic_0 = 1;
  return goodG2BSink_4(0x14u);
}
// 68E228: using guessed type int goodG2BStatic_0;

//----- (000000000041007D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_21_good()
{
  goodB2G1_18();
  goodB2G2_18();
  return goodG2B_38();
}

//----- (00000000004100A1) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_03_bad()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, "%d", &useconds);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004100E3) ----------------------------------------------------
int goodB2G1_19()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, "%d", &useconds);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410142) ----------------------------------------------------
int goodB2G2_19()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, "%d", &useconds);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004101A1) ----------------------------------------------------
int goodG2B1_14()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004101CD) ----------------------------------------------------
int goodG2B2_14()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004101F9) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_03_good()
{
  goodB2G1_19();
  goodB2G2_19();
  goodG2B1_14();
  return goodG2B2_14();
}

//----- (0000000000410227) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_68b_badSink()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__fgets_for_loop_68_badData;
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 68E40C: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_68_badData;

//----- (0000000000410266) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_68b_goodG2BSink()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__fgets_for_loop_68_goodG2BData;
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 68E404: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_68_goodG2BData;

//----- (00000000004102A5) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_68b_goodB2GSink()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__fgets_for_loop_68_goodB2GData;
  v1 = CWE400_Resource_Exhaustion__fgets_for_loop_68_goodB2GData;
  if ( CWE400_Resource_Exhaustion__fgets_for_loop_68_goodB2GData > 0
    && CWE400_Resource_Exhaustion__fgets_for_loop_68_goodB2GData <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E408: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_68_goodB2GData;

//----- (00000000004102F0) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54e_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000410329) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54e_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000410362) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54e_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (00000000004103A7) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_51b_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004103E0) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_51b_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000410419) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_51b_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000041045E) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_63b_badSink(int *a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v3 = *a1;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000041050B) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_63b_goodG2BSink(int *a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v3 = *a1;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004105B8) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_63b_goodB2GSink(int *a1)
{
  int result; // eax
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = *a1;
  v3 = *a1;
  if ( *a1 > 0 && v3 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (0000000000410675) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_09_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 410675: using guessed type char buf[16];

//----- (000000000041077F) ----------------------------------------------------
int goodB2G1_20()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;
// 41077F: using guessed type char buf[16];

//----- (00000000004108B0) ----------------------------------------------------
int goodB2G2_20()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 4108B0: using guessed type char buf[16];

//----- (00000000004109D5) ----------------------------------------------------
int goodG2B1_15()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    useconds = 20;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000410A21) ----------------------------------------------------
int goodG2B2_15()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_TRUE )
    useconds = 20;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000410A61) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_09_good()
{
  goodB2G1_20();
  goodB2G2_20();
  goodG2B1_15();
  return goodG2B2_15();
}

//----- (0000000000410A8F) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_18_bad()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, "%d", &useconds);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410AD3) ----------------------------------------------------
int goodB2G_34()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, "%d", &useconds);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000410B34) ----------------------------------------------------
int goodG2B_39()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000410B62) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_18_good()
{
  goodB2G_34();
  return goodG2B_39();
}

//----- (0000000000410B7C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_16_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  for ( i = 0LL; ; ++i )
  {
    result = v9;
    if ( v9 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 410B7C: using guessed type char buf[16];

//----- (0000000000410CCE) ----------------------------------------------------
int goodB2G_35()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v5 = result;
          if ( result != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 410CCE: using guessed type char buf[16];

//----- (0000000000410E2C) ----------------------------------------------------
__int64 goodG2B_40()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000410E72) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_16_good()
{
  goodB2G_35();
  return goodG2B_40();
}

//----- (0000000000410E8C) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_32_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-70h]
  __int16 s; // [rsp+10h] [rbp-60h]
  uint16_t v3; // [rsp+12h] [rbp-5Eh]
  in_addr_t v4; // [rsp+14h] [rbp-5Ch]
  int v5; // [rsp+2Ch] [rbp-44h]
  char *filename; // [rsp+30h] [rbp-40h]
  FILE *stream; // [rsp+38h] [rbp-38h]
  int v8; // [rsp+44h] [rbp-2Ch]
  int v9; // [rsp+48h] [rbp-28h]
  int fd; // [rsp+4Ch] [rbp-24h]
  int *v11; // [rsp+50h] [rbp-20h]
  int *v12; // [rsp+58h] [rbp-18h]
  unsigned __int64 i; // [rsp+60h] [rbp-10h]
  int v14; // [rsp+6Ch] [rbp-4h]

  v12 = &v5;
  v11 = &v5;
  v5 = -1;
  v14 = -1;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v9 = recv(fd, buf, 0xDuLL, 0);
      if ( v9 != -1 )
      {
        if ( v9 )
        {
          buf[v9] = 0;
          v14 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v12 = v14;
  v8 = *v11;
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v8;
    if ( v8 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 410E8C: using guessed type char buf[16];

//----- (000000000041102B) ----------------------------------------------------
int goodG2B_41()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-34h]
  char *filename; // [rsp+10h] [rbp-30h]
  FILE *s; // [rsp+18h] [rbp-28h]
  int v4; // [rsp+20h] [rbp-20h]
  int v5; // [rsp+24h] [rbp-1Ch]
  int *v6; // [rsp+28h] [rbp-18h]
  int *v7; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v7 = &v1;
  v6 = &v1;
  v5 = 20;
  v1 = 20;
  v4 = 20;
  i = 0LL;
  s = 0LL;
  filename = "output_bad.txt";
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v4;
    if ( v4 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  if ( s )
    result = fclose(s);
  return result;
}

//----- (0000000000411104) ----------------------------------------------------
int goodB2G_36()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-70h]
  __int16 s; // [rsp+10h] [rbp-60h]
  uint16_t v3; // [rsp+12h] [rbp-5Eh]
  in_addr_t v4; // [rsp+14h] [rbp-5Ch]
  int v5; // [rsp+2Ch] [rbp-44h]
  char *filename; // [rsp+30h] [rbp-40h]
  FILE *stream; // [rsp+38h] [rbp-38h]
  int v8; // [rsp+44h] [rbp-2Ch]
  int v9; // [rsp+48h] [rbp-28h]
  int fd; // [rsp+4Ch] [rbp-24h]
  int *v11; // [rsp+50h] [rbp-20h]
  int *v12; // [rsp+58h] [rbp-18h]
  unsigned __int64 i; // [rsp+60h] [rbp-10h]
  int v14; // [rsp+6Ch] [rbp-4h]

  v12 = &v5;
  v11 = &v5;
  v5 = -1;
  v14 = -1;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v9 = recv(fd, buf, 0xDuLL, 0);
      if ( v9 != -1 )
      {
        if ( v9 )
        {
          buf[v9] = 0;
          v14 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v12 = v14;
  result = *v11;
  v8 = *v11;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v8 > 0 && v8 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 411104: using guessed type char buf[16];

//----- (00000000004112B3) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_32_good()
{
  goodG2B_41();
  return goodB2G_36();
}

//----- (00000000004112CD) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_68_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_fwrite_68_badData = v4;
  return CWE400_Resource_Exhaustion__fgets_fwrite_68b_badSink();
}
// 68E3F8: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_68_badData;

//----- (000000000041133E) ----------------------------------------------------
int goodG2B_42()
{
  CWE400_Resource_Exhaustion__fgets_fwrite_68_goodG2BData = 20;
  return CWE400_Resource_Exhaustion__fgets_fwrite_68b_goodG2BSink();
}
// 68E400: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_68_goodG2BData;

//----- (0000000000411369) ----------------------------------------------------
int goodB2G_37()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_fwrite_68_goodB2GData = v4;
  return CWE400_Resource_Exhaustion__fgets_fwrite_68b_goodB2GSink();
}
// 68E3FC: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_68_goodB2GData;

//----- (00000000004113DA) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_68_good()
{
  goodG2B_42();
  return goodB2G_37();
}

//----- (00000000004113F4) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_14_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = (unsigned int)globalFive;
  if ( globalFive == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;
// 4113F4: using guessed type char buf[16];

//----- (0000000000411518) ----------------------------------------------------
int goodB2G1_21()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;
// 411518: using guessed type char buf[16];

//----- (0000000000411654) ----------------------------------------------------
__int64 goodB2G2_21()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = (unsigned int)globalFive;
  if ( globalFive == 5 )
  {
    i = 0LL;
    if ( v8 > 0 && v8 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v8;
        if ( v8 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;
// 411654: using guessed type char buf[16];

//----- (0000000000411784) ----------------------------------------------------
__int64 goodG2B1_16()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( globalFive == 5 )
    v2 = 20;
  else
    printLine("Benign, fixed string");
  result = (unsigned int)globalFive;
  if ( globalFive == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (00000000004117EA) ----------------------------------------------------
__int64 goodG2B2_16()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( globalFive == 5 )
    v2 = 20;
  result = (unsigned int)globalFive;
  if ( globalFive == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (0000000000411844) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_14_good()
{
  goodB2G1_21();
  goodB2G2_21();
  goodG2B1_16();
  return goodG2B2_16();
}

//----- (0000000000411872) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_11_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 411872: using guessed type char buf[16];

//----- (0000000000411A50) ----------------------------------------------------
int goodB2G1_22()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = globalReturnsFalse();
  if ( result )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 411A50: using guessed type char buf[16];

//----- (0000000000411C49) ----------------------------------------------------
int goodB2G2_22()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v11 > 0 && v11 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v11;
        if ( v11 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 411C49: using guessed type char buf[16];

//----- (0000000000411E37) ----------------------------------------------------
int goodG2B1_17()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = globalReturnsTrue();
  if ( result )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (0000000000411F11) ----------------------------------------------------
int goodG2B2_17()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    v3 = 20;
  result = globalReturnsTrue();
  if ( result )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (0000000000411FDF) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_11_good()
{
  goodB2G1_22();
  goodB2G2_22();
  goodG2B1_17();
  return goodG2B2_17();
}

//----- (000000000041200D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_02_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v7 = recv(v10, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v11;
    if ( v11 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 41200D: using guessed type char buf[16];

//----- (00000000004121C7) ----------------------------------------------------
int goodB2G1_23()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v10 = result;
        if ( result != -1 )
        {
          result = recv(v10, buf, 0xDuLL, 0);
          v7 = result;
          if ( result != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              result = atoi(buf);
              v11 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v10 != -1 )
    result = close(v10);
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 4121C7: using guessed type char buf[16];

//----- (0000000000412391) ----------------------------------------------------
int goodB2G2_23()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v10 = result;
        if ( result != -1 )
        {
          result = recv(v10, buf, 0xDuLL, 0);
          v7 = result;
          if ( result != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              result = atoi(buf);
              v11 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v10 != -1 )
    result = close(v10);
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 412391: using guessed type char buf[16];

//----- (000000000041255B) ----------------------------------------------------
int goodG2B1_18()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000412609) ----------------------------------------------------
int goodG2B2_18()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004126B7) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_02_good()
{
  goodB2G1_23();
  goodB2G2_23();
  goodG2B1_18();
  return goodG2B2_18();
}

//----- (00000000004126E5) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_03_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  for ( i = 0LL; ; ++i )
  {
    result = v5;
    if ( v5 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000041276F) ----------------------------------------------------
int goodB2G1_24()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000412805) ----------------------------------------------------
int goodB2G2_24()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000041289B) ----------------------------------------------------
__int64 goodG2B1_19()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004128DF) ----------------------------------------------------
__int64 goodG2B2_19()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000412923) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_03_good()
{
  goodB2G1_24();
  goodB2G2_24();
  goodG2B1_19();
  return goodG2B2_19();
}

//----- (0000000000412951) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_53b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_53c_badSink(a1);
}

//----- (0000000000412968) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_53b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_53c_goodG2BSink(a1);
}

//----- (000000000041297F) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_53b_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_53c_goodB2GSink(a1);
}

//----- (0000000000412996) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_64b_badSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+1Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v2 = *a1;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004129E1) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_64b_goodG2BSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+1Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v2 = *a1;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000412A2C) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_64b_goodB2GSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+1Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = (unsigned int)*a1;
  v2 = *a1;
  if ( *a1 > 0 && v2 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000412A83) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_52c_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000412ABC) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_52c_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000412AF5) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_52c_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000412B3A) ----------------------------------------------------
void CWE400_Resource_Exhaustion__fscanf_fwrite_17_bad()
{
  int v0; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *s; // [rsp+18h] [rbp-18h]
  unsigned __int64 k; // [rsp+20h] [rbp-10h]
  int j; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v0 = -1;
  for ( i = 0; i <= 0; ++i )
    __isoc99_fscanf(stdin, "%d", &v0);
  for ( j = 0; j <= 0; ++j )
  {
    k = 0LL;
    s = 0LL;
    filename = "output_bad.txt";
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( k = 0LL; v0 > k; ++k )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    if ( s )
      fclose(s);
  }
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412C2B) ----------------------------------------------------
void goodB2G_38()
{
  int v0; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *s; // [rsp+18h] [rbp-18h]
  unsigned __int64 k; // [rsp+20h] [rbp-10h]
  int j; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v0 = -1;
  for ( i = 0; i <= 0; ++i )
    __isoc99_fscanf(stdin, "%d", &v0);
  for ( j = 0; j <= 0; ++j )
  {
    k = 0LL;
    s = 0LL;
    filename = "output_good.txt";
    if ( v0 > 0 && v0 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( k = 0LL; v0 > k; ++k )
      {
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        fclose(s);
    }
  }
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412D2F) ----------------------------------------------------
void goodG2B_43()
{
  FILE *s; // [rsp+10h] [rbp-20h]
  unsigned __int64 k; // [rsp+18h] [rbp-18h]
  int v2; // [rsp+24h] [rbp-Ch]
  int j; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v2 = -1;
  for ( i = 0; i <= 0; ++i )
    v2 = 20;
  for ( j = 0; j <= 0; ++j )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( k = 0LL; v2 > k; ++k )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (0000000000412E0A) ----------------------------------------------------
void CWE400_Resource_Exhaustion__fscanf_fwrite_17_good()
{
  goodB2G_38();
  goodG2B_43();
}

//----- (0000000000412E24) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_67b_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000412E63) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_67b_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000412EA2) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_67b_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)a1;
  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000412EED) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_51_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_51b_badSink(v8);
}
// 412EED: using guessed type char buf[16];

//----- (000000000041301B) ----------------------------------------------------
__int64 goodG2B_44()
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_51b_goodG2BSink(20);
}

//----- (000000000041303D) ----------------------------------------------------
__int64 goodB2G_39()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_51b_goodB2GSink(v8);
}
// 41303D: using guessed type char buf[16];

//----- (000000000041316B) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_51_good()
{
  goodG2B_44();
  return goodB2G_39();
}

//----- (0000000000413185) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_04_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v10;
    if ( v10 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 413185: using guessed type char buf[16];

//----- (0000000000413313) ----------------------------------------------------
int goodB2G1_25()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  result = 0;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 413313: using guessed type char buf[16];

//----- (00000000004134BC) ----------------------------------------------------
int goodB2G2_25()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  result = 1;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 4134BC: using guessed type char buf[16];

//----- (000000000041365A) ----------------------------------------------------
int goodG2B1_20()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000041372A) ----------------------------------------------------
int goodG2B2_20()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004137EE) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_04_good()
{
  goodB2G1_25();
  goodB2G2_25();
  goodG2B1_20();
  return goodG2B2_20();
}

//----- (000000000041381C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_68_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_for_loop_68_badData = v4;
  return CWE400_Resource_Exhaustion__fgets_for_loop_68b_badSink();
}
// 68E40C: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_68_badData;

//----- (000000000041388D) ----------------------------------------------------
__int64 goodG2B_45()
{
  CWE400_Resource_Exhaustion__fgets_for_loop_68_goodG2BData = 20;
  return CWE400_Resource_Exhaustion__fgets_for_loop_68b_goodG2BSink();
}
// 68E404: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_68_goodG2BData;

//----- (00000000004138B8) ----------------------------------------------------
__int64 goodB2G_40()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_for_loop_68_goodB2GData = v4;
  return CWE400_Resource_Exhaustion__fgets_for_loop_68b_goodB2GSink();
}
// 68E408: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_68_goodB2GData;

//----- (0000000000413929) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_68_good()
{
  goodG2B_45();
  return goodB2G_40();
}

//----- (0000000000413943) ----------------------------------------------------
int __fastcall badSink_5(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004139E6) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_fwrite_44_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = badSink_5;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413A27) ----------------------------------------------------
int __fastcall goodG2BSink_5(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000413ACA) ----------------------------------------------------
int goodG2B_46()
{
  return goodG2BSink_5(20);
}

//----- (0000000000413AF5) ----------------------------------------------------
void __fastcall goodB2GSink_3(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (0000000000413BA8) ----------------------------------------------------
__int64 goodB2G_41()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  void (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_3;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413BE9) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_fwrite_44_good()
{
  goodG2B_46();
  return goodB2G_41();
}

//----- (0000000000413C03) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54c_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_54d_badSink(a1);
}

//----- (0000000000413C1A) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54c_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_54d_goodG2BSink(a1);
}

//----- (0000000000413C31) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54c_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__listen_socket_fwrite_54d_goodB2GSink(a1);
}

//----- (0000000000413C48) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_01_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v7 = recv(v10, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v11;
    if ( v11 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 413C48: using guessed type char buf[16];

//----- (0000000000413E02) ----------------------------------------------------
int goodG2B_47()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000413EB0) ----------------------------------------------------
int goodB2G_42()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v10 = result;
        if ( result != -1 )
        {
          result = recv(v10, buf, 0xDuLL, 0);
          v7 = result;
          if ( result != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              result = atoi(buf);
              v11 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v10 != -1 )
    result = close(v10);
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 413EB0: using guessed type char buf[16];

//----- (000000000041407A) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_01_good()
{
  goodG2B_47();
  return goodB2G_42();
}

//----- (0000000000414094) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_13_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004141A2) ----------------------------------------------------
int goodB2G1_26()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004142CB) ----------------------------------------------------
int goodB2G2_26()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v7 > 0 && v7 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v7;
        if ( v7 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004143E9) ----------------------------------------------------
int goodG2B1_21()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v3 = 20;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004144BD) ----------------------------------------------------
int goodG2B2_21()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v3 = 20;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000414585) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_13_good()
{
  goodB2G1_26();
  goodB2G2_26();
  goodG2B1_21();
  return goodG2B2_21();
}

//----- (00000000004145B3) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_53d_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000414656) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_53d_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004146F9) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_53d_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (00000000004147AC) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_31_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v10;
  v5 = v10;
  for ( i = 0LL; ; ++i )
  {
    result = v5;
    if ( v5 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 4147AC: using guessed type char buf[16];

//----- (00000000004148C2) ----------------------------------------------------
__int64 goodG2B_48()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000414912) ----------------------------------------------------
__int64 goodB2G_43()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v10;
  result = (unsigned int)v10;
  v5 = v10;
  i = 0LL;
  if ( v10 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 414912: using guessed type char buf[16];

//----- (0000000000414A34) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_31_good()
{
  goodG2B_48();
  return goodB2G_43();
}

//----- (0000000000414A4E) ----------------------------------------------------
__int64 badSink_6()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__listen_socket_for_loop_45_badData;
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 68E22C: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_45_badData;

//----- (0000000000414A8D) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_45_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE400_Resource_Exhaustion__listen_socket_for_loop_45_badData = v8;
  return badSink_6();
}
// 68E22C: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_45_badData;
// 414A8D: using guessed type char buf[16];

//----- (0000000000414BC4) ----------------------------------------------------
__int64 goodG2BSink_6()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__listen_socket_for_loop_45_goodG2BData;
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 68E230: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_45_goodG2BData;

//----- (0000000000414C03) ----------------------------------------------------
__int64 goodG2B_49()
{
  CWE400_Resource_Exhaustion__listen_socket_for_loop_45_goodG2BData = 20;
  return goodG2BSink_6();
}
// 68E230: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_45_goodG2BData;

//----- (0000000000414C2E) ----------------------------------------------------
__int64 goodB2GSink_4()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__listen_socket_for_loop_45_goodB2GData;
  v1 = CWE400_Resource_Exhaustion__listen_socket_for_loop_45_goodB2GData;
  if ( CWE400_Resource_Exhaustion__listen_socket_for_loop_45_goodB2GData > 0
    && CWE400_Resource_Exhaustion__listen_socket_for_loop_45_goodB2GData <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E234: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_45_goodB2GData;

//----- (0000000000414C79) ----------------------------------------------------
__int64 goodB2G_44()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE400_Resource_Exhaustion__listen_socket_for_loop_45_goodB2GData = v8;
  return goodB2GSink_4();
}
// 68E234: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_45_goodB2GData;
// 414C79: using guessed type char buf[16];

//----- (0000000000414DB0) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_45_good()
{
  goodG2B_49();
  return goodB2G_44();
}

//----- (0000000000414DCA) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_11_bad()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &useconds);
  result = globalReturnsTrue();
  if ( result )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000414E28) ----------------------------------------------------
int goodB2G1_27()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &useconds);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000414EAF) ----------------------------------------------------
int goodB2G2_27()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &useconds);
  result = globalReturnsTrue();
  if ( result )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000414F2A) ----------------------------------------------------
int goodG2B1_22()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    useconds = 20;
  result = globalReturnsTrue();
  if ( result )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}

//----- (0000000000414F7E) ----------------------------------------------------
int goodG2B2_22()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsTrue() )
    useconds = 20;
  result = globalReturnsTrue();
  if ( result )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}

//----- (0000000000414FC6) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_11_good()
{
  goodB2G1_27();
  goodB2G2_27();
  goodG2B1_22();
  return goodG2B2_22();
}

//----- (0000000000414FF4) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_02_bad()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, "%d", &useconds);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000415036) ----------------------------------------------------
int goodB2G1_28()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, "%d", &useconds);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000415095) ----------------------------------------------------
int goodB2G2_28()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, "%d", &useconds);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004150F4) ----------------------------------------------------
int goodG2B1_23()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000415120) ----------------------------------------------------
int goodG2B2_23()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000041514C) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_02_good()
{
  goodB2G1_28();
  goodB2G2_28();
  goodG2B1_23();
  return goodG2B2_23();
}

//----- (000000000041517A) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_53_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_for_loop_53b_badSink(v4);
}

//----- (00000000004151E2) ----------------------------------------------------
__int64 goodG2B_50()
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_53b_goodG2BSink(20);
}

//----- (0000000000415204) ----------------------------------------------------
__int64 goodB2G_45()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_for_loop_53b_goodB2GSink(v4);
}

//----- (000000000041526C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_53_good()
{
  goodG2B_50();
  return goodB2G_45();
}

//----- (0000000000415286) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_06_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  for ( i = 0LL; ; ++i )
  {
    result = v9;
    if ( v9 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 415286: using guessed type char buf[16];

//----- (00000000004153EE) ----------------------------------------------------
__int64 goodB2G1_29()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  result = 5LL;
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 4153EE: using guessed type char buf[16];

//----- (000000000041556E) ----------------------------------------------------
__int64 goodB2G2_29()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  result = 5LL;
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 41556E: using guessed type char buf[16];

//----- (00000000004156E2) ----------------------------------------------------
__int64 goodG2B1_24()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000415746) ----------------------------------------------------
__int64 goodG2B2_24()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000041579E) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_06_good()
{
  goodB2G1_29();
  goodB2G2_29();
  goodG2B1_24();
  return goodG2B2_24();
}

//----- (00000000004157CC) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_03_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v7;
    if ( v7 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}

//----- (00000000004158C0) ----------------------------------------------------
int goodB2G1_30()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v7 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (00000000004159C4) ----------------------------------------------------
int goodB2G2_30()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v7 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (0000000000415AC8) ----------------------------------------------------
int goodG2B1_25()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000415B76) ----------------------------------------------------
int goodG2B2_25()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000415C24) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_03_good()
{
  goodB2G1_30();
  goodB2G2_30();
  goodG2B1_25();
  return goodG2B2_25();
}

//----- (0000000000415C52) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_63b_badSink(__useconds_t *a1)
{
  usleep(*a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000415C7D) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_63b_goodG2BSink(__useconds_t *a1)
{
  usleep(*a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000415CA8) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_63b_goodB2GSink(signed int *a1)
{
  signed int useconds; // [rsp+1Ch] [rbp-4h]

  useconds = *a1;
  if ( *a1 <= 0 || useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (0000000000415CEE) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_54_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_sleep_54b_badSink(v7);
}
// 415CEE: using guessed type char buf[16];

//----- (0000000000415DD6) ----------------------------------------------------
int goodG2B_51()
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_54b_goodG2BSink(0x14u);
}

//----- (0000000000415DF8) ----------------------------------------------------
int goodB2G_46()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_sleep_54b_goodB2GSink(v7);
}
// 415DF8: using guessed type char buf[16];

//----- (0000000000415EE0) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_54_good()
{
  goodG2B_51();
  return goodB2G_46();
}

//----- (0000000000415EFA) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_10_bad()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &useconds);
  result = globalTrue;
  if ( globalTrue )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1A4: using guessed type int globalTrue;

//----- (0000000000415F50) ----------------------------------------------------
int goodB2G1_31()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &useconds);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;

//----- (0000000000415FCF) ----------------------------------------------------
int goodB2G2_31()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &useconds);
  result = globalTrue;
  if ( globalTrue )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1A4: using guessed type int globalTrue;

//----- (0000000000416042) ----------------------------------------------------
int goodG2B1_26()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    useconds = 20;
  result = globalTrue;
  if ( globalTrue )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;

//----- (000000000041608E) ----------------------------------------------------
int goodG2B2_26()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( globalTrue )
    useconds = 20;
  result = globalTrue;
  if ( globalTrue )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;

//----- (00000000004160CE) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_10_good()
{
  goodB2G1_31();
  goodB2G2_31();
  goodG2B1_26();
  return goodG2B2_26();
}

//----- (00000000004160FC) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_22_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__connect_socket_for_loop_22_badGlobal;
  if ( CWE400_Resource_Exhaustion__connect_socket_for_loop_22_badGlobal )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E358: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_22_badGlobal;

//----- (000000000041613F) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodB2G1Sink(int a1)
{
  int result; // eax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodB2G1Global;
  if ( CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E35C: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodB2G1Global;

//----- (000000000041619A) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodB2G2Sink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodB2G2Global;
  if ( CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodB2G2Global && a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E360: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodB2G2Global;

//----- (00000000004161E9) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodG2BGlobal;
  if ( CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodG2BGlobal )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E364: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodG2BGlobal;

//----- (000000000041622C) ----------------------------------------------------
__int64 staticReturnsTrue_0()
{
  return 1LL;
}

//----- (0000000000416237) ----------------------------------------------------
__int64 staticReturnsFalse_0()
{
  return 0LL;
}

//----- (0000000000416242) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_08_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = staticReturnsTrue_0();
  if ( result )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 416242: using guessed type char buf[16];

//----- (0000000000416420) ----------------------------------------------------
int goodB2G1_32()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = staticReturnsFalse_0();
  if ( result )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 416420: using guessed type char buf[16];

//----- (0000000000416619) ----------------------------------------------------
int goodB2G2_32()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = staticReturnsTrue_0();
  if ( result )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v11 > 0 && v11 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v11;
        if ( v11 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 416619: using guessed type char buf[16];

//----- (0000000000416807) ----------------------------------------------------
int goodG2B1_27()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( (unsigned int)staticReturnsFalse_0() )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = staticReturnsTrue_0();
  if ( result )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (00000000004168E1) ----------------------------------------------------
int goodG2B2_27()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( (unsigned int)staticReturnsTrue_0() )
    v3 = 20;
  result = staticReturnsTrue_0();
  if ( result )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (00000000004169AF) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_08_good()
{
  goodB2G1_32();
  goodB2G2_32();
  goodG2B1_27();
  return goodG2B2_27();
}

//----- (00000000004169DD) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_04_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}
// 4169DD: using guessed type char buf[16];

//----- (0000000000416AE5) ----------------------------------------------------
int goodB2G1_33()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 416AE5: using guessed type char buf[16];

//----- (0000000000416C14) ----------------------------------------------------
int goodB2G2_33()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 416C14: using guessed type char buf[16];

//----- (0000000000416D37) ----------------------------------------------------
int goodG2B1_28()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000416D81) ----------------------------------------------------
int goodG2B2_28()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000416DBF) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_04_good()
{
  goodB2G1_33();
  goodB2G2_33();
  goodG2B1_28();
  return goodG2B2_28();
}

//----- (0000000000416DED) ----------------------------------------------------
int __fastcall badSink_7(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = badStatic_1;
  if ( badStatic_1 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E238: using guessed type int badStatic_1;

//----- (0000000000416E9E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_21_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  badStatic_1 = 1;
  return badSink_7(v4);
}
// 68E238: using guessed type int badStatic_1;

//----- (0000000000416F10) ----------------------------------------------------
int __fastcall goodB2G1Sink_1(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = goodB2G1Static_1;
  if ( goodB2G1Static_1 )
    return printLine("Benign, fixed string");
  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E23C: using guessed type int goodB2G1Static_1;

//----- (0000000000416FDC) ----------------------------------------------------
int goodB2G1_34()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G1Static_1 = 0;
  return goodB2G1Sink_1(v4);
}
// 68E23C: using guessed type int goodB2G1Static_1;

//----- (000000000041704E) ----------------------------------------------------
int __fastcall goodB2G2Sink_1(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = goodB2G2Static_1;
  if ( goodB2G2Static_1 && a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E240: using guessed type int goodB2G2Static_1;

//----- (000000000041710F) ----------------------------------------------------
int goodB2G2_34()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G2Static_1 = 1;
  return goodB2G2Sink_1(v4);
}
// 68E240: using guessed type int goodB2G2Static_1;

//----- (0000000000417181) ----------------------------------------------------
int __fastcall goodG2BSink_7(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = goodG2BStatic_1;
  if ( goodG2BStatic_1 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E244: using guessed type int goodG2BStatic_1;

//----- (0000000000417232) ----------------------------------------------------
int goodG2B_52()
{
  goodG2BStatic_1 = 1;
  return goodG2BSink_7(20);
}
// 68E244: using guessed type int goodG2BStatic_1;

//----- (000000000041725E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_21_good()
{
  goodB2G1_34();
  goodB2G2_34();
  return goodG2B_52();
}

//----- (0000000000417282) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_01_bad()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, "%d", &useconds);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004172C4) ----------------------------------------------------
int goodG2B_53()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004172F0) ----------------------------------------------------
int goodB2G_47()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, "%d", &useconds);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041734F) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_01_good()
{
  goodG2B_53();
  return goodB2G_47();
}

//----- (0000000000417369) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_53d_badSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000041738A) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_53d_goodG2BSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004173AB) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_53d_goodB2GSink(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (00000000004173E7) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_65b_badSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000417408) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_65b_goodG2BSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000417429) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_65b_goodB2GSink(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (0000000000417465) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_18_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v7;
    if ( v7 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}

//----- (000000000041755B) ----------------------------------------------------
int goodB2G_48()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v7 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (0000000000417661) ----------------------------------------------------
int goodG2B_54()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000417711) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_18_good()
{
  goodB2G_48();
  return goodG2B_54();
}

//----- (000000000041772B) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_66_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE400_Resource_Exhaustion__connect_socket_sleep_66b_badSink((__int64)&v5);
}
// 41772B: using guessed type char buf[16];

//----- (000000000041781B) ----------------------------------------------------
int goodG2B_55()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 20;
  v2 = 20;
  return CWE400_Resource_Exhaustion__connect_socket_sleep_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000417845) ----------------------------------------------------
int goodB2G_49()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE400_Resource_Exhaustion__connect_socket_sleep_66b_goodB2GSink((__int64)&v5);
}
// 417845: using guessed type char buf[16];

//----- (0000000000417935) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_66_good()
{
  goodG2B_55();
  return goodB2G_49();
}

//----- (000000000041794F) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_64b_badSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+1Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v2 = *a1;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000041799A) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_64b_goodG2BSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+1Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v2 = *a1;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004179E5) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_64b_goodB2GSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+1Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = (unsigned int)*a1;
  v2 = *a1;
  if ( *a1 > 0 && v2 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000417A3C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_12_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  unsigned __int64 j; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v6 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    v6 = 20;
  }
  result = globalReturnsTrueOrFalse();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v6;
      if ( v6 <= i )
        break;
      printLine("Hello");
    }
  }
  else
  {
    j = 0LL;
    if ( v6 > 0 && v6 <= 20 )
    {
      for ( j = 0LL; ; ++j )
      {
        result = v6;
        if ( v6 <= j )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}

//----- (0000000000417B25) ----------------------------------------------------
__int64 goodB2G_50()
{
  __int64 result; // rax
  char nptr[8]; // [rsp+0h] [rbp-40h]
  int v2; // [rsp+8h] [rbp-38h]
  __int16 v3; // [rsp+Ch] [rbp-34h]
  char s[8]; // [rsp+10h] [rbp-30h]
  int v5; // [rsp+18h] [rbp-28h]
  __int16 v6; // [rsp+1Ch] [rbp-24h]
  unsigned __int64 j; // [rsp+28h] [rbp-18h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v5 = 0;
    v6 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    *(_QWORD *)nptr = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(nptr, 14, stdin) )
      v9 = atoi(nptr);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrueOrFalse();
  if ( (_DWORD)result )
  {
    i = 0LL;
    if ( v9 > 0 && v9 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v9;
        if ( v9 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  else
  {
    j = 0LL;
    if ( v9 > 0 && v9 <= 20 )
    {
      for ( j = 0LL; ; ++j )
      {
        result = v9;
        if ( v9 <= j )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}

//----- (0000000000417C60) ----------------------------------------------------
__int64 goodG2B_56()
{
  __int64 result; // rax
  unsigned __int64 j; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  globalReturnsTrueOrFalse();
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    for ( i = 0LL; ; ++i )
    {
      result = 20LL;
      if ( i >= 0x14 )
        break;
      printLine("Hello");
    }
  }
  else
  {
    for ( j = 0LL; ; ++j )
    {
      result = 20LL;
      if ( j >= 0x14 )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000417CF7) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_12_good()
{
  goodB2G_50();
  return goodG2B_56();
}

//----- (0000000000417D11) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_07_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( staticFive_0 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticFive_0;
  if ( staticFive_0 == 5 )
  {
    i = 0LL;
    s = 0LL;
    filename = "output_bad.txt";
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    if ( s )
      result = fclose(s);
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E158: using guessed type int staticFive_0;

//----- (0000000000417DEF) ----------------------------------------------------
int goodB2G1_35()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( staticFive_0 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( staticFive_0 != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E158: using guessed type int staticFive_0;

//----- (0000000000417EEB) ----------------------------------------------------
int goodB2G2_35()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( staticFive_0 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticFive_0;
  if ( staticFive_0 == 5 )
  {
    i = 0LL;
    s = 0LL;
    filename = "output_good.txt";
    result = v1;
    if ( v1 > 0 )
    {
      result = v1;
      if ( v1 <= 20 )
      {
        s = fopen(filename, "w+");
        if ( !s )
          exit(1);
        for ( i = 0LL; ; ++i )
        {
          result = v1;
          if ( v1 <= i )
            break;
          if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
            exit(1);
        }
        if ( s )
          result = fclose(s);
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E158: using guessed type int staticFive_0;

//----- (0000000000417FDC) ----------------------------------------------------
int goodG2B1_29()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( staticFive_0 == 5 )
    v3 = 20;
  else
    printLine("Benign, fixed string");
  result = staticFive_0;
  if ( staticFive_0 == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E158: using guessed type int staticFive_0;

//----- (00000000004180B0) ----------------------------------------------------
int goodG2B2_29()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( staticFive_0 == 5 )
    v3 = 20;
  result = staticFive_0;
  if ( staticFive_0 == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E158: using guessed type int staticFive_0;

//----- (0000000000418178) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_07_good()
{
  goodB2G1_35();
  goodB2G2_35();
  goodG2B1_29();
  return goodG2B2_29();
}

//----- (00000000004181A6) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_52b_badSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_52c_badSink(a1);
}

//----- (00000000004181BD) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_52b_goodG2BSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_52c_goodG2BSink(a1);
}

//----- (00000000004181D4) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_52b_goodB2GSink(signed int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_52c_goodB2GSink(a1);
}

//----- (00000000004181EB) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_53c_badSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_53d_badSink(a1);
}

//----- (0000000000418202) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_53c_goodG2BSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_53d_goodG2BSink(a1);
}

//----- (0000000000418219) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_53c_goodB2GSink(signed int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_53d_goodB2GSink(a1);
}

//----- (0000000000418230) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_03_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_bad.txt";
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  if ( s )
    result = fclose(s);
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004182F4) ----------------------------------------------------
int goodB2G1_36()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004183CB) ----------------------------------------------------
int goodB2G2_36()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004184A2) ----------------------------------------------------
int goodG2B1_30()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000418550) ----------------------------------------------------
int goodG2B2_30()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004185FE) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_03_good()
{
  goodB2G1_36();
  goodB2G2_36();
  goodG2B1_30();
  return goodG2B2_30();
}

//----- (000000000041862C) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_54c_badSink(a1);
}

//----- (0000000000418643) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_54c_goodG2BSink(a1);
}

//----- (000000000041865A) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54b_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__listen_socket_fwrite_54c_goodB2GSink(a1);
}

//----- (0000000000418671) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_12_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-50h]
  int v2; // [rsp+8h] [rbp-48h]
  __int16 v3; // [rsp+Ch] [rbp-44h]
  char *v4; // [rsp+18h] [rbp-38h]
  FILE *v5; // [rsp+20h] [rbp-30h]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  unsigned __int64 j; // [rsp+38h] [rbp-18h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v10 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    v10 = 20;
  }
  result = globalReturnsTrueOrFalse();
  if ( result )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  else
  {
    j = 0LL;
    v5 = 0LL;
    v4 = "output_good.txt";
    if ( v10 > 0 && v10 <= 20 )
    {
      v5 = fopen(v4, "w+");
      if ( !v5 )
        exit(1);
      for ( j = 0LL; ; ++j )
      {
        result = v10;
        if ( v10 <= j )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, v5) != 50 )
          exit(1);
      }
      if ( v5 )
        result = fclose(v5);
    }
  }
  return result;
}

//----- (000000000041883E) ----------------------------------------------------
int goodB2G_51()
{
  int result; // eax
  char nptr[8]; // [rsp+0h] [rbp-60h]
  int v2; // [rsp+8h] [rbp-58h]
  __int16 v3; // [rsp+Ch] [rbp-54h]
  char s[8]; // [rsp+10h] [rbp-50h]
  int v5; // [rsp+18h] [rbp-48h]
  __int16 v6; // [rsp+1Ch] [rbp-44h]
  char *v7; // [rsp+28h] [rbp-38h]
  FILE *v8; // [rsp+30h] [rbp-30h]
  char *filename; // [rsp+38h] [rbp-28h]
  FILE *stream; // [rsp+40h] [rbp-20h]
  unsigned __int64 j; // [rsp+48h] [rbp-18h]
  unsigned __int64 i; // [rsp+50h] [rbp-10h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v5 = 0;
    v6 = 0;
    if ( fgets(s, 14, stdin) )
      v13 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    *(_QWORD *)nptr = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(nptr, 14, stdin) )
      v13 = atoi(nptr);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrueOrFalse();
  if ( result )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v13 > 0 && v13 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v13;
        if ( v13 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  else
  {
    j = 0LL;
    v8 = 0LL;
    v7 = "output_good.txt";
    if ( v13 > 0 && v13 <= 20 )
    {
      v8 = fopen(v7, "w+");
      if ( !v8 )
        exit(1);
      for ( j = 0LL; ; ++j )
      {
        result = v13;
        if ( v13 <= j )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, v8) != 50 )
          exit(1);
      }
      if ( v8 )
        result = fclose(v8);
    }
  }
  return result;
}

//----- (0000000000418A65) ----------------------------------------------------
int goodG2B_57()
{
  int result; // eax
  FILE *stream; // [rsp+10h] [rbp-30h]
  FILE *s; // [rsp+20h] [rbp-20h]
  unsigned __int64 j; // [rsp+28h] [rbp-18h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]

  globalReturnsTrueOrFalse();
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; i < 0x14; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  else
  {
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( j = 0LL; j < 0x14; ++j )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    result = fclose(stream);
  }
  return result;
}

//----- (0000000000418BDC) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_12_good()
{
  goodB2G_51();
  return goodG2B_57();
}

//----- (0000000000418BF6) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_15_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v10;
    if ( v10 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 418BF6: using guessed type char buf[16];

//----- (0000000000418D6C) ----------------------------------------------------
int goodB2G1_37()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v7 = result;
      if ( result != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          result = atoi(buf);
          v10 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 418D6C: using guessed type char buf[16];

//----- (0000000000418EF2) ----------------------------------------------------
int goodB2G2_37()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v7 = result;
      if ( result != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          result = atoi(buf);
          v10 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 418EF2: using guessed type char buf[16];

//----- (0000000000419078) ----------------------------------------------------
int goodG2B1_31()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000419128) ----------------------------------------------------
int goodG2B2_31()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004191D8) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_15_good()
{
  goodB2G1_37();
  goodB2G2_37();
  goodG2B1_31();
  return goodG2B2_31();
}

//----- (0000000000419206) ----------------------------------------------------
__int64 __fastcall badSource_0(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 419206: using guessed type char buf[16];

//----- (00000000004192E3) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_42_bad()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = badSource_0(0xFFFFFFFF);
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000419397) ----------------------------------------------------
__int64 goodG2BSource_0()
{
  return 20LL;
}

//----- (00000000004193AA) ----------------------------------------------------
int goodG2B_58()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = goodG2BSource_0();
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000041945E) ----------------------------------------------------
__int64 __fastcall goodB2GSource_0(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 41945E: using guessed type char buf[16];

//----- (000000000041953B) ----------------------------------------------------
int goodB2G_52()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = goodB2GSource_0(0xFFFFFFFF);
  v2 = result;
  if ( result > 0 && result <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v2 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (00000000004195FF) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_42_good()
{
  goodB2G_52();
  return goodG2B_58();
}

//----- (0000000000419619) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_sleep_65_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(__useconds_t); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE400_Resource_Exhaustion__connect_socket_sleep_65b_badSink;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 419619: using guessed type char buf[16];

//----- (000000000041970A) ----------------------------------------------------
int goodG2B_59()
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_65b_goodG2BSink(0x14u);
}

//----- (0000000000419735) ----------------------------------------------------
__int64 goodB2G_53()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(signed int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE400_Resource_Exhaustion__connect_socket_sleep_65b_goodB2GSink;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 419735: using guessed type char buf[16];

//----- (0000000000419826) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_sleep_65_good()
{
  goodG2B_59();
  return goodB2G_53();
}

//----- (0000000000419840) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_52_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_for_loop_52b_badSink(v4);
}

//----- (00000000004198A8) ----------------------------------------------------
__int64 goodG2B_60()
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_52b_goodG2BSink(20);
}

//----- (00000000004198CA) ----------------------------------------------------
__int64 goodB2G_54()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_for_loop_52b_goodB2GSink(v4);
}

//----- (0000000000419932) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_52_good()
{
  goodG2B_60();
  return goodB2G_54();
}

//----- (000000000041994C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_64_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_64b_badSink(&v5);
}
// 41994C: using guessed type char buf[16];

//----- (0000000000419A7C) ----------------------------------------------------
__int64 goodG2B_61()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_64b_goodG2BSink(&v1);
}

//----- (0000000000419AA0) ----------------------------------------------------
__int64 goodB2G_55()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_64b_goodB2GSink(&v5);
}
// 419AA0: using guessed type char buf[16];

//----- (0000000000419BD0) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_64_good()
{
  goodG2B_61();
  return goodB2G_55();
}

//----- (0000000000419BEA) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_51b_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000419C23) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_51b_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000419C5C) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_51b_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000419CA1) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_14_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = (unsigned int)globalFive;
  if ( globalFive == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1A8: using guessed type int globalFive;

//----- (0000000000419D11) ----------------------------------------------------
int goodB2G1_38()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1A8: using guessed type int globalFive;

//----- (0000000000419D9C) ----------------------------------------------------
__int64 goodB2G2_38()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = (unsigned int)globalFive;
  if ( globalFive == 5 )
  {
    i = 0LL;
    result = v1;
    if ( (int)v1 > 0 )
    {
      result = v1;
      if ( (int)v1 <= 20 )
      {
        for ( i = 0LL; ; ++i )
        {
          result = (int)v1;
          if ( (int)v1 <= i )
            break;
          printLine("Hello");
        }
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1A8: using guessed type int globalFive;

//----- (0000000000419E1B) ----------------------------------------------------
__int64 goodG2B1_32()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( globalFive == 5 )
    v2 = 20;
  else
    printLine("Benign, fixed string");
  result = (unsigned int)globalFive;
  if ( globalFive == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (0000000000419E81) ----------------------------------------------------
__int64 goodG2B2_32()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( globalFive == 5 )
    v2 = 20;
  result = (unsigned int)globalFive;
  if ( globalFive == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (0000000000419EDB) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_14_good()
{
  goodB2G1_38();
  goodB2G2_38();
  goodG2B1_32();
  return goodG2B2_32();
}

//----- (0000000000419F09) ----------------------------------------------------
void CWE400_Resource_Exhaustion__fgets_sleep_17_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+14h] [rbp-Ch]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v1 = 0;
    v2 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    usleep(useconds);
    printLine("Sleep time possibly too long");
  }
}

//----- (0000000000419FA1) ----------------------------------------------------
void goodB2G_56()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+14h] [rbp-Ch]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v1 = 0;
    v2 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      printLine("Sleep time OK");
    }
  }
}

//----- (000000000041A054) ----------------------------------------------------
int goodG2B_62()
{
  int result; // eax
  __useconds_t useconds; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  for ( i = 0; i <= 0; ++i )
    useconds = 20;
  for ( j = 0; j <= 0; ++j )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}

//----- (000000000041A0A6) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_17_good()
{
  goodB2G_56();
  return goodG2B_62();
}

//----- (000000000041A0C0) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_32_bad()
{
  __int64 result; // rax
  int v1; // [rsp+Ch] [rbp-24h]
  int v2; // [rsp+10h] [rbp-20h]
  int v3; // [rsp+14h] [rbp-1Ch]
  int *v4; // [rsp+18h] [rbp-18h]
  int *v5; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = -1;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  *v5 = v1;
  v3 = *v4;
  for ( i = 0LL; ; ++i )
  {
    result = v3;
    if ( v3 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041A145) ----------------------------------------------------
__int64 goodG2B_63()
{
  __int64 result; // rax
  int v1; // [rsp+Ch] [rbp-24h]
  int v2; // [rsp+10h] [rbp-20h]
  int v3; // [rsp+14h] [rbp-1Ch]
  int *v4; // [rsp+18h] [rbp-18h]
  int *v5; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 20;
  v1 = 20;
  v2 = 20;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000041A1B4) ----------------------------------------------------
__int64 goodB2G_57()
{
  __int64 result; // rax
  int v1; // [rsp+Ch] [rbp-24h]
  int v2; // [rsp+10h] [rbp-20h]
  int v3; // [rsp+14h] [rbp-1Ch]
  int *v4; // [rsp+18h] [rbp-18h]
  int *v5; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v5 = &v2;
  v4 = &v2;
  v2 = -1;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  *v5 = v1;
  result = (unsigned int)*v4;
  v3 = *v4;
  i = 0LL;
  if ( v3 > 0 && v3 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v3;
      if ( v3 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041A245) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_32_good()
{
  goodG2B_63();
  return goodB2G_57();
}

//----- (000000000041A25F) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_16_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  for ( i = 0LL; ; ++i )
  {
    result = v5;
    if ( v5 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000041A2EB) ----------------------------------------------------
int goodB2G_58()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000041A383) ----------------------------------------------------
__int64 goodG2B_64()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000041A3C9) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_16_good()
{
  goodB2G_58();
  return goodG2B_64();
}

//----- (000000000041A3E3) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_13_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = (unsigned int)GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;
// 41A3E3: using guessed type char buf[16];

//----- (000000000041A507) ----------------------------------------------------
int goodB2G1_39()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;
// 41A507: using guessed type char buf[16];

//----- (000000000041A643) ----------------------------------------------------
__int64 goodB2G2_39()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = (unsigned int)GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    i = 0LL;
    if ( v8 > 0 && v8 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v8;
        if ( v8 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;
// 41A643: using guessed type char buf[16];

//----- (000000000041A773) ----------------------------------------------------
__int64 goodG2B1_33()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v2 = 20;
  else
    printLine("Benign, fixed string");
  result = (unsigned int)GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041A7D9) ----------------------------------------------------
__int64 goodG2B2_33()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v2 = 20;
  result = (unsigned int)GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041A833) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_13_good()
{
  goodB2G1_39();
  goodB2G2_39();
  goodG2B1_33();
  return goodG2B2_33();
}

//----- (000000000041A861) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_11_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( result )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (000000000041A975) ----------------------------------------------------
int goodB2G1_40()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsFalse();
  if ( result )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (000000000041AAA4) ----------------------------------------------------
int goodB2G2_40()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( result )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v7 > 0 && v7 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v7;
        if ( v7 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}

//----- (000000000041ABC8) ----------------------------------------------------
int goodG2B1_34()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = globalReturnsTrue();
  if ( result )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000041ACA2) ----------------------------------------------------
int goodG2B2_34()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    v3 = 20;
  result = globalReturnsTrue();
  if ( result )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000041AD70) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_11_good()
{
  goodB2G1_40();
  goodB2G2_40();
  goodG2B1_34();
  return goodG2B2_34();
}

//----- (000000000041AD9E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_02_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v7;
    if ( v7 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}

//----- (000000000041AE92) ----------------------------------------------------
int goodB2G1_41()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v7 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (000000000041AF96) ----------------------------------------------------
int goodB2G2_41()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v7 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (000000000041B09A) ----------------------------------------------------
int goodG2B1_35()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000041B148) ----------------------------------------------------
int goodG2B2_35()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000041B1F6) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_02_good()
{
  goodB2G1_41();
  goodB2G2_41();
  goodG2B1_35();
  return goodG2B2_35();
}

//----- (000000000041B224) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_67b_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000041B263) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_67b_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000041B2A2) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_67b_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)a1;
  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000041B2ED) ----------------------------------------------------
__int64 staticReturnsTrue_1()
{
  return 1LL;
}

//----- (000000000041B2F8) ----------------------------------------------------
__int64 staticReturnsFalse_1()
{
  return 0LL;
}

//----- (000000000041B303) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_08_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_1();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000041B3A9) ----------------------------------------------------
int goodB2G1_42()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsFalse_1();
  if ( result )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000041B467) ----------------------------------------------------
__int64 goodB2G2_42()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_1();
  if ( (_DWORD)result )
  {
    i = 0LL;
    if ( v5 > 0 && v5 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v5;
        if ( v5 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}

//----- (000000000041B519) ----------------------------------------------------
__int64 goodG2B1_36()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( (unsigned int)staticReturnsFalse_1() )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = staticReturnsTrue_1();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000041B585) ----------------------------------------------------
__int64 goodG2B2_36()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( (unsigned int)staticReturnsTrue_1() )
    v2 = 20;
  result = staticReturnsTrue_1();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000041B5E5) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_08_good()
{
  goodB2G1_42();
  goodB2G2_42();
  goodG2B1_36();
  return goodG2B2_36();
}

//----- (000000000041B613) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_68b_badSink()
{
  usleep(CWE400_Resource_Exhaustion__connect_socket_sleep_68_badData);
  return printLine("Sleep time possibly too long");
}
// 68E414: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_68_badData;

//----- (000000000041B63A) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_68b_goodG2BSink()
{
  usleep(CWE400_Resource_Exhaustion__connect_socket_sleep_68_goodG2BData);
  return printLine("Sleep time possibly too long");
}
// 68E410: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_68_goodG2BData;

//----- (000000000041B661) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_68b_goodB2GSink()
{
  if ( CWE400_Resource_Exhaustion__connect_socket_sleep_68_goodB2GData <= 0
    || CWE400_Resource_Exhaustion__connect_socket_sleep_68_goodB2GData > 2000 )
  {
    return printLine("Sleep time too long");
  }
  usleep(CWE400_Resource_Exhaustion__connect_socket_sleep_68_goodB2GData);
  return printLine("Sleep time OK");
}
// 68E418: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_68_goodB2GData;

//----- (000000000041B6A3) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54b_badSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_54c_badSink(a1);
}

//----- (000000000041B6BA) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54b_goodG2BSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_54c_goodG2BSink(a1);
}

//----- (000000000041B6D1) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54b_goodB2GSink(signed int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_54c_goodB2GSink(a1);
}

//----- (000000000041B6E8) ----------------------------------------------------
int __fastcall badSink_8(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000041B709) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_sleep_44_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(__useconds_t); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = badSink_8;
  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000041B77A) ----------------------------------------------------
int __fastcall goodG2BSink_8(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000041B79B) ----------------------------------------------------
int goodG2B_65()
{
  return goodG2BSink_8(0x14u);
}

//----- (000000000041B7C6) ----------------------------------------------------
int __fastcall goodB2GSink_5(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (000000000041B802) ----------------------------------------------------
__int64 goodB2G_59()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(signed int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = goodB2GSink_5;
  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000041B873) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_sleep_44_good()
{
  goodG2B_65();
  return goodB2G_59();
}

//----- (000000000041B88D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_05_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( staticTrue_1 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticTrue_1;
  if ( staticTrue_1 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E15C: using guessed type int staticTrue_1;
// 41B88D: using guessed type char buf[16];

//----- (000000000041BA1D) ----------------------------------------------------
int goodB2G1_43()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( staticTrue_1 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFalse_1;
  if ( staticFalse_1 )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E15C: using guessed type int staticTrue_1;
// 68E248: using guessed type int staticFalse_1;
// 41BA1D: using guessed type char buf[16];

//----- (000000000041BBC8) ----------------------------------------------------
int goodB2G2_43()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( staticTrue_1 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticTrue_1;
  if ( staticTrue_1 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v10 > 0 && v10 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v10;
        if ( v10 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 68E15C: using guessed type int staticTrue_1;
// 41BBC8: using guessed type char buf[16];

//----- (000000000041BD68) ----------------------------------------------------
int goodG2B1_37()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( staticFalse_1 )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = staticTrue_1;
  if ( staticTrue_1 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E15C: using guessed type int staticTrue_1;
// 68E248: using guessed type int staticFalse_1;

//----- (000000000041BE3A) ----------------------------------------------------
int goodG2B2_37()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( staticTrue_1 )
    v3 = 20;
  result = staticTrue_1;
  if ( staticTrue_1 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E15C: using guessed type int staticTrue_1;

//----- (000000000041BF00) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_05_good()
{
  goodB2G1_43();
  goodB2G2_43();
  goodG2B1_37();
  return goodG2B2_37();
}

//----- (000000000041BF2E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_09_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041C03A) ----------------------------------------------------
int goodB2G1_44()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FALSE;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041C161) ----------------------------------------------------
int goodB2G2_44()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v7 > 0 && v7 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v7;
        if ( v7 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041C27D) ----------------------------------------------------
int goodG2B1_38()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041C34F) ----------------------------------------------------
int goodG2B2_38()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( GLOBAL_CONST_TRUE )
    v3 = 20;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041C415) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_09_good()
{
  goodB2G1_44();
  goodB2G2_44();
  goodG2B1_38();
  return goodG2B2_38();
}

//----- (000000000041C443) ----------------------------------------------------
int __fastcall badSink_9(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000041C4E6) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_41_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return badSink_9(v7);
}
// 41C4E6: using guessed type char buf[16];

//----- (000000000041C5CE) ----------------------------------------------------
int __fastcall goodG2BSink_9(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000041C671) ----------------------------------------------------
int goodG2B_66()
{
  return goodG2BSink_9(20);
}

//----- (000000000041C693) ----------------------------------------------------
void __fastcall goodB2GSink_6(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (000000000041C746) ----------------------------------------------------
void goodB2G_60()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v2; // [rsp+12h] [rbp-1Eh]
  in_addr_t v3; // [rsp+14h] [rbp-1Ch]
  int v4; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v3 = inet_addr("127.0.0.1");
    v2 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v4 = recv(fd, buf, 0xDuLL, 0);
      if ( v4 != -1 )
      {
        if ( v4 )
        {
          buf[v4] = 0;
          v6 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2GSink_6(v6);
}
// 41C746: using guessed type char buf[16];

//----- (000000000041C82E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_41_good()
{
  goodB2G_60();
  return goodG2B_66();
}

//----- (000000000041C848) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_10_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalTrue;
  if ( globalTrue )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;

//----- (000000000041C954) ----------------------------------------------------
int goodB2G1_45()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFalse;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;

//----- (000000000041CA7B) ----------------------------------------------------
int goodB2G2_45()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalTrue;
  if ( globalTrue )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v7 > 0 && v7 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v7;
        if ( v7 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;

//----- (000000000041CB97) ----------------------------------------------------
int goodG2B1_39()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = globalTrue;
  if ( globalTrue )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;

//----- (000000000041CC69) ----------------------------------------------------
int goodG2B2_39()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( globalTrue )
    v3 = 20;
  result = globalTrue;
  if ( globalTrue )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;

//----- (000000000041CD2F) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_10_good()
{
  goodB2G1_45();
  goodB2G2_45();
  goodG2B1_39();
  return goodG2B2_39();
}

//----- (000000000041CD5D) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_51_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_for_loop_51b_badSink(v4);
}

//----- (000000000041CDC5) ----------------------------------------------------
__int64 goodG2B_67()
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_51b_goodG2BSink(20);
}

//----- (000000000041CDE7) ----------------------------------------------------
__int64 goodB2G_61()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_for_loop_51b_goodB2GSink(v4);
}

//----- (000000000041CE4F) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_51_good()
{
  goodG2B_67();
  return goodB2G_61();
}

//----- (000000000041CE69) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_65b_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000041CF0C) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_65b_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000041CFAF) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_65b_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (000000000041D062) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_31_bad()
{
  __int64 result; // rax
  int v1; // [rsp+Ch] [rbp-14h]
  int v2; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  v3 = v1;
  v2 = v1;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041D0C8) ----------------------------------------------------
__int64 goodG2B_68()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000041D118) ----------------------------------------------------
__int64 goodB2G_62()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  int v2; // [rsp+10h] [rbp-10h]
  unsigned int v3; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  v3 = v1;
  result = v1;
  v2 = v1;
  i = 0LL;
  if ( (int)v1 > 0 && v2 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041D18A) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_31_good()
{
  goodG2B_68();
  return goodB2G_62();
}

//----- (000000000041D1A4) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54c_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_fwrite_54d_badSink(a1);
}

//----- (000000000041D1BB) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54c_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_fwrite_54d_goodG2BSink(a1);
}

//----- (000000000041D1D2) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54c_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__fgets_fwrite_54d_goodB2GSink(a1);
}

//----- (000000000041D1E9) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE400_Resource_Exhaustion__fscanf_for_loop_66b_badSink((__int64)&v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041D229) ----------------------------------------------------
__int64 goodG2B_69()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 20;
  v2 = 20;
  return CWE400_Resource_Exhaustion__fscanf_for_loop_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000041D253) ----------------------------------------------------
__int64 goodB2G_63()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE400_Resource_Exhaustion__fscanf_for_loop_66b_goodB2GSink((__int64)&v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041D293) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_66_good()
{
  goodG2B_69();
  return goodB2G_63();
}

//----- (000000000041D2AD) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_34_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-60h]
  __int16 s; // [rsp+10h] [rbp-50h]
  uint16_t v3; // [rsp+12h] [rbp-4Eh]
  in_addr_t v4; // [rsp+14h] [rbp-4Ch]
  int v5; // [rsp+20h] [rbp-40h]
  char *filename; // [rsp+30h] [rbp-30h]
  FILE *stream; // [rsp+38h] [rbp-28h]
  int v8; // [rsp+44h] [rbp-1Ch]
  int v9; // [rsp+48h] [rbp-18h]
  int fd; // [rsp+4Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+50h] [rbp-10h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v9 = recv(fd, buf, 0xDuLL, 0);
      if ( v9 != -1 )
      {
        if ( v9 )
        {
          buf[v9] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v12;
  v8 = v12;
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v8;
    if ( v8 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 41D2AD: using guessed type char buf[16];

//----- (000000000041D42D) ----------------------------------------------------
int goodG2B_70()
{
  FILE *s; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000041D4E7) ----------------------------------------------------
int goodB2G_64()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-60h]
  __int16 s; // [rsp+10h] [rbp-50h]
  uint16_t v3; // [rsp+12h] [rbp-4Eh]
  in_addr_t v4; // [rsp+14h] [rbp-4Ch]
  int v5; // [rsp+20h] [rbp-40h]
  char *filename; // [rsp+30h] [rbp-30h]
  FILE *stream; // [rsp+38h] [rbp-28h]
  int v8; // [rsp+44h] [rbp-1Ch]
  int v9; // [rsp+48h] [rbp-18h]
  int fd; // [rsp+4Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+50h] [rbp-10h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v9 = recv(fd, buf, 0xDuLL, 0);
      if ( v9 != -1 )
      {
        if ( v9 )
        {
          buf[v9] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v12;
  result = v12;
  v8 = v12;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v12 > 0 && v8 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 41D4E7: using guessed type char buf[16];

//----- (000000000041D677) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_34_good()
{
  goodG2B_70();
  return goodB2G_64();
}

//----- (000000000041D691) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_54_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_54b_badSink(v8);
}
// 41D691: using guessed type char buf[16];

//----- (000000000041D7BF) ----------------------------------------------------
__int64 goodG2B_71()
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_54b_goodG2BSink(20);
}

//----- (000000000041D7E1) ----------------------------------------------------
__int64 goodB2G_65()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_54b_goodB2GSink(v8);
}
// 41D7E1: using guessed type char buf[16];

//----- (000000000041D90F) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_54_good()
{
  goodG2B_71();
  return goodB2G_65();
}

//----- (000000000041D929) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_53b_badSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_53c_badSink(a1);
}

//----- (000000000041D940) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_53b_goodG2BSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_53c_goodG2BSink(a1);
}

//----- (000000000041D957) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_53b_goodB2GSink(signed int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_53c_goodB2GSink(a1);
}

//----- (000000000041D96E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_01_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v7;
    if ( v7 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}

//----- (000000000041DA62) ----------------------------------------------------
int goodG2B_72()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000041DB10) ----------------------------------------------------
int goodB2G_66()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v7 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (000000000041DC14) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_01_good()
{
  goodG2B_72();
  return goodB2G_66();
}

//----- (000000000041DC2E) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_03_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  for ( i = 0LL; ; ++i )
  {
    result = v8;
    if ( v8 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 41DC2E: using guessed type char buf[16];

//----- (000000000041DD38) ----------------------------------------------------
int goodB2G1_46()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v5 = result;
      if ( result != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 41DD38: using guessed type char buf[16];

//----- (000000000041DE4E) ----------------------------------------------------
int goodB2G2_46()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v5 = result;
      if ( result != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 41DE4E: using guessed type char buf[16];

//----- (000000000041DF64) ----------------------------------------------------
__int64 goodG2B1_40()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000041DFA8) ----------------------------------------------------
__int64 goodG2B2_40()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000041DFEC) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_03_good()
{
  goodB2G1_46();
  goodB2G2_46();
  goodG2B1_40();
  return goodG2B2_40();
}

//----- (000000000041E01A) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_53d_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000041E0BD) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_53d_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000041E160) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_53d_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (000000000041E213) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_52c_badSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000041E234) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_52c_goodG2BSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000041E255) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_52c_goodB2GSink(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (000000000041E291) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_67_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_for_loop_67b_badSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041E2CF) ----------------------------------------------------
__int64 goodG2B_73()
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_67b_goodG2BSink(20);
}

//----- (000000000041E2F7) ----------------------------------------------------
__int64 goodB2G_67()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_for_loop_67b_goodB2GSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041E335) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_67_good()
{
  goodG2B_73();
  return goodB2G_67();
}

//----- (000000000041E34F) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_53c_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_53d_badSink(a1);
}

//----- (000000000041E366) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_53c_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_53d_goodG2BSink(a1);
}

//----- (000000000041E37D) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_53c_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__listen_socket_fwrite_53d_goodB2GSink(a1);
}

//----- (000000000041E394) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_54_bad()
{
  __useconds_t v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_sleep_54b_badSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041E3CC) ----------------------------------------------------
int goodG2B_74()
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_54b_goodG2BSink(0x14u);
}

//----- (000000000041E3EE) ----------------------------------------------------
int goodB2G_68()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_sleep_54b_goodB2GSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041E426) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_54_good()
{
  goodG2B_74();
  return goodB2G_68();
}

//----- (000000000041E440) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_68_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_sleep_68_badData = v7;
  return CWE400_Resource_Exhaustion__connect_socket_sleep_68b_badSink();
}
// 68E414: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_68_badData;
// 41E440: using guessed type char buf[16];

//----- (000000000041E531) ----------------------------------------------------
int goodG2B_75()
{
  CWE400_Resource_Exhaustion__connect_socket_sleep_68_goodG2BData = 20;
  return CWE400_Resource_Exhaustion__connect_socket_sleep_68b_goodG2BSink();
}
// 68E410: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_68_goodG2BData;

//----- (000000000041E55C) ----------------------------------------------------
int goodB2G_69()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_sleep_68_goodB2GData = v7;
  return CWE400_Resource_Exhaustion__connect_socket_sleep_68b_goodB2GSink();
}
// 68E418: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_68_goodB2GData;
// 41E55C: using guessed type char buf[16];

//----- (000000000041E64D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_68_good()
{
  goodG2B_75();
  return goodB2G_69();
}

//----- (000000000041E667) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_06_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  for ( i = 0LL; ; ++i )
  {
    result = v5;
    if ( v5 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000041E705) ----------------------------------------------------
__int64 goodB2G1_47()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  result = 5LL;
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000041E7BB) ----------------------------------------------------
__int64 goodB2G2_47()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  result = 5LL;
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000041E865) ----------------------------------------------------
__int64 goodG2B1_41()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000041E8C9) ----------------------------------------------------
__int64 goodG2B2_41()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000041E921) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_06_good()
{
  goodB2G1_47();
  goodB2G2_47();
  goodG2B1_41();
  return goodG2B2_41();
}

//----- (000000000041E94F) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_22_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__fscanf_for_loop_22_badGlobal;
  if ( CWE400_Resource_Exhaustion__fscanf_for_loop_22_badGlobal )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1BC: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_22_badGlobal;

//----- (000000000041E992) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodB2G1Sink(int a1)
{
  int result; // eax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodB2G1Global;
  if ( CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1C0: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodB2G1Global;

//----- (000000000041E9ED) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodB2G2Sink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodB2G2Global;
  if ( CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodB2G2Global && a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1C4: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodB2G2Global;

//----- (000000000041EA3C) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodG2BGlobal;
  if ( CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodG2BGlobal )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1C8: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_22_goodG2BGlobal;

//----- (000000000041EA7F) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_fwrite_65_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = CWE400_Resource_Exhaustion__listen_socket_fwrite_65b_badSink;
  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 41EA7F: using guessed type char buf[16];

//----- (000000000041EBB6) ----------------------------------------------------
int goodG2B_76()
{
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_65b_goodG2BSink(20);
}

//----- (000000000041EBE1) ----------------------------------------------------
__int64 goodB2G_70()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  void (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = CWE400_Resource_Exhaustion__listen_socket_fwrite_65b_goodB2GSink;
  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 41EBE1: using guessed type char buf[16];

//----- (000000000041ED18) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_fwrite_65_good()
{
  goodG2B_76();
  return goodB2G_70();
}

//----- (000000000041ED32) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_09_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041EDB8) ----------------------------------------------------
int goodB2G1_48()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041EE65) ----------------------------------------------------
int goodB2G2_48()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041EF06) ----------------------------------------------------
int goodG2B1_42()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    useconds = 20;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041EF52) ----------------------------------------------------
int goodG2B2_42()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_TRUE )
    useconds = 20;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041EF92) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_09_good()
{
  goodB2G1_48();
  goodB2G2_48();
  goodG2B1_42();
  return goodG2B2_42();
}

//----- (000000000041EFC0) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_65b_badSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000041EFE1) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_65b_goodG2BSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000041F002) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_65b_goodB2GSink(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (000000000041F03E) ----------------------------------------------------
__int64 __fastcall badSource_1(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041F06B) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_42_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = badSource_1(0xFFFFFFFF);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000041F0B5) ----------------------------------------------------
__int64 goodG2BSource_1()
{
  return 20LL;
}

//----- (000000000041F0C8) ----------------------------------------------------
__int64 goodG2B_77()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = goodG2BSource_1();
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000041F112) ----------------------------------------------------
__int64 __fastcall goodB2GSource_1(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041F13F) ----------------------------------------------------
__int64 goodB2G_71()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  result = goodB2GSource_1(0xFFFFFFFF);
  v1 = result;
  if ( (int)result > 0 && (int)result <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000041F195) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_42_good()
{
  goodB2G_71();
  return goodG2B_77();
}

//----- (000000000041F1AF) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_12_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int fd; // [rsp+24h] [rbp-1Ch]
  unsigned __int64 j; // [rsp+28h] [rbp-18h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    v9 = 20;
  }
  result = globalReturnsTrueOrFalse();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  else
  {
    j = 0LL;
    if ( v9 > 0 && v9 <= 20 )
    {
      for ( j = 0LL; ; ++j )
      {
        result = v9;
        if ( v9 <= j )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 41F1AF: using guessed type char buf[16];

//----- (000000000041F31E) ----------------------------------------------------
__int64 goodB2G_72()
{
  __int64 result; // rax
  char nptr[16]; // [rsp+0h] [rbp-70h]
  struct sockaddr addr; // [rsp+10h] [rbp-60h]
  char buf[16]; // [rsp+20h] [rbp-50h]
  __int16 s; // [rsp+30h] [rbp-40h]
  uint16_t v5; // [rsp+32h] [rbp-3Eh]
  in_addr_t v6; // [rsp+34h] [rbp-3Ch]
  int v7; // [rsp+48h] [rbp-28h]
  int v8; // [rsp+4Ch] [rbp-24h]
  int v9; // [rsp+50h] [rbp-20h]
  int fd; // [rsp+54h] [rbp-1Ch]
  unsigned __int64 j; // [rsp+58h] [rbp-18h]
  unsigned __int64 i; // [rsp+60h] [rbp-10h]
  int v13; // [rsp+6Ch] [rbp-4h]

  v13 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v6 = inet_addr("127.0.0.1");
      v5 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v9 = recv(fd, buf, 0xDuLL, 0);
        if ( v9 != -1 )
        {
          if ( v9 )
          {
            buf[v9] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    v8 = socket(2, 1, 6);
    if ( v8 != -1 )
    {
      memset(&addr, 0, 0x10uLL);
      addr.sa_family = 2;
      *(_DWORD *)&addr.sa_data[2] = inet_addr("127.0.0.1");
      *(_WORD *)addr.sa_data = htons(0x6987u);
      if ( connect(v8, &addr, 0x10u) != -1 )
      {
        v7 = recv(v8, nptr, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            nptr[v7] = 0;
            v13 = atoi(nptr);
          }
        }
      }
    }
    if ( v8 != -1 )
      close(v8);
  }
  result = globalReturnsTrueOrFalse();
  if ( (_DWORD)result )
  {
    i = 0LL;
    if ( v13 > 0 && v13 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v13;
        if ( v13 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  else
  {
    j = 0LL;
    if ( v13 > 0 && v13 <= 20 )
    {
      for ( j = 0LL; ; ++j )
      {
        result = v13;
        if ( v13 <= j )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 41F31E: using guessed type char buf[16];
// 41F31E: using guessed type char nptr[16];

//----- (000000000041F565) ----------------------------------------------------
__int64 goodG2B_78()
{
  __int64 result; // rax
  unsigned __int64 j; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  globalReturnsTrueOrFalse();
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    for ( i = 0LL; ; ++i )
    {
      result = 20LL;
      if ( i >= 0x14 )
        break;
      printLine("Hello");
    }
  }
  else
  {
    for ( j = 0LL; ; ++j )
    {
      result = 20LL;
      if ( j >= 0x14 )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000041F5FC) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_12_good()
{
  goodB2G_72();
  return goodG2B_78();
}

//----- (000000000041F616) ----------------------------------------------------
__int64 staticReturnsTrue_2()
{
  return 1LL;
}

//----- (000000000041F621) ----------------------------------------------------
__int64 staticReturnsFalse_2()
{
  return 0LL;
}

//----- (000000000041F62C) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_08_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)staticReturnsTrue_2() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_2();
  if ( result )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (000000000041F740) ----------------------------------------------------
int goodB2G1_49()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)staticReturnsTrue_2() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsFalse_2();
  if ( result )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (000000000041F86F) ----------------------------------------------------
int goodB2G2_49()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( (unsigned int)staticReturnsTrue_2() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_2();
  if ( result )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v7 > 0 && v7 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v7;
        if ( v7 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}

//----- (000000000041F993) ----------------------------------------------------
int goodG2B1_43()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( (unsigned int)staticReturnsFalse_2() )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = staticReturnsTrue_2();
  if ( result )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000041FA6D) ----------------------------------------------------
int goodG2B2_43()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( (unsigned int)staticReturnsTrue_2() )
    v3 = 20;
  result = staticReturnsTrue_2();
  if ( result )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000041FB3B) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_08_good()
{
  goodB2G1_49();
  goodB2G2_49();
  goodG2B1_43();
  return goodG2B2_43();
}

//----- (000000000041FB69) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_53c_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_53d_badSink(a1);
}

//----- (000000000041FB80) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_53c_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_53d_goodG2BSink(a1);
}

//----- (000000000041FB97) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_53c_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_53d_goodB2GSink(a1);
}

//----- (000000000041FBAE) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54e_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000041FC51) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54e_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000041FCF4) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54e_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (000000000041FDA7) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_66_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_66b_badSink((__int64)&v5);
}
// 41FDA7: using guessed type char buf[16];

//----- (000000000041FE97) ----------------------------------------------------
int goodG2B_79()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 20;
  v2 = 20;
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000041FEC1) ----------------------------------------------------
int goodB2G_73()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_66b_goodB2GSink((__int64)&v5);
}
// 41FEC1: using guessed type char buf[16];

//----- (000000000041FFB1) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_66_good()
{
  goodG2B_79();
  return goodB2G_73();
}

//----- (000000000041FFCB) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_53d_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000042006E) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_53d_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000420111) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_53d_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (00000000004201C4) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_54_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_54b_badSink(v8);
}
// 4201C4: using guessed type char buf[16];

//----- (00000000004202F2) ----------------------------------------------------
int goodG2B_80()
{
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_54b_goodG2BSink(20);
}

//----- (0000000000420314) ----------------------------------------------------
void goodB2G_74()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v2; // [rsp+12h] [rbp-1Eh]
  int v3; // [rsp+14h] [rbp-1Ch]
  int v4; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  v6 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v3 = 0;
    v2 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v6 = accept(fd, 0LL, 0LL);
      if ( v6 != -1 )
      {
        v4 = recv(v6, buf, 0xDuLL, 0);
        if ( v4 != -1 )
        {
          if ( v4 )
          {
            buf[v4] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v6 != -1 )
    close(v6);
  CWE400_Resource_Exhaustion__listen_socket_fwrite_54b_goodB2GSink(v7);
}
// 420314: using guessed type char buf[16];

//----- (0000000000420442) ----------------------------------------------------
void CWE400_Resource_Exhaustion__listen_socket_fwrite_54_good()
{
  goodG2B_80();
  goodB2G_74();
}

//----- (000000000042045C) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000420489) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_fwrite_61b_goodG2BSource()
{
  return 20LL;
}

//----- (000000000042049C) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004204C9) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_07_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( staticFive_1 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_1;
  if ( staticFive_1 == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E160: using guessed type int staticFive_1;

//----- (0000000000420551) ----------------------------------------------------
int goodB2G1_50()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( staticFive_1 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( staticFive_1 != 5 )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 68E160: using guessed type int staticFive_1;

//----- (0000000000420600) ----------------------------------------------------
int goodB2G2_50()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( staticFive_1 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_1;
  if ( staticFive_1 == 5 )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 68E160: using guessed type int staticFive_1;

//----- (00000000004206A3) ----------------------------------------------------
int goodG2B1_44()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( staticFive_1 == 5 )
    useconds = 20;
  else
    printLine("Benign, fixed string");
  result = staticFive_1;
  if ( staticFive_1 == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E160: using guessed type int staticFive_1;

//----- (00000000004206F1) ----------------------------------------------------
int goodG2B2_44()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( staticFive_1 == 5 )
    useconds = 20;
  result = staticFive_1;
  if ( staticFive_1 == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E160: using guessed type int staticFive_1;

//----- (0000000000420733) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_07_good()
{
  goodB2G1_50();
  goodB2G2_50();
  goodG2B1_44();
  return goodG2B2_44();
}

//----- (0000000000420761) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_53c_badSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_53d_badSink(a1);
}

//----- (0000000000420778) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_53c_goodG2BSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_53d_goodG2BSink(a1);
}

//----- (000000000042078F) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_53c_goodB2GSink(signed int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_53d_goodB2GSink(a1);
}

//----- (00000000004207A6) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_06_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v7 = recv(v10, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v11;
    if ( v11 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 4207A6: using guessed type char buf[16];

//----- (000000000042097C) ----------------------------------------------------
int goodB2G1_51()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v7 = recv(v10, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  result = 5;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 42097C: using guessed type char buf[16];

//----- (0000000000420B6D) ----------------------------------------------------
int goodB2G2_51()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v7 = recv(v10, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  result = 5;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 420B6D: using guessed type char buf[16];

//----- (0000000000420D53) ----------------------------------------------------
int goodG2B1_45()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000420E25) ----------------------------------------------------
int goodG2B2_45()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000420EEB) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_06_good()
{
  goodB2G1_51();
  goodB2G2_51();
  goodG2B1_45();
  return goodG2B2_45();
}

//----- (0000000000420F19) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 420F19: using guessed type char buf[16];

//----- (000000000042103C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_fwrite_61b_goodG2BSource()
{
  return 20LL;
}

//----- (000000000042104F) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 42104F: using guessed type char buf[16];

//----- (0000000000421172) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_61_bad()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = CWE400_Resource_Exhaustion__fgets_sleep_61b_badSource(0xFFFFFFFF);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004211A4) ----------------------------------------------------
int goodG2B_81()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = CWE400_Resource_Exhaustion__fgets_sleep_61b_goodG2BSource();
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004211D6) ----------------------------------------------------
int goodB2G_75()
{
  signed int useconds; // [rsp+Ch] [rbp-4h]

  useconds = CWE400_Resource_Exhaustion__fgets_sleep_61b_goodB2GSource(0xFFFFFFFF);
  if ( useconds <= 0 || useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (0000000000421223) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_61_good()
{
  goodG2B_81();
  return goodB2G_75();
}

//----- (000000000042123D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_11_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    i = 0LL;
    s = 0LL;
    filename = "output_bad.txt";
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    if ( s )
      result = fclose(s);
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000421321) ----------------------------------------------------
int goodB2G1_52()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000421423) ----------------------------------------------------
int goodB2G2_52()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalReturnsTrue();
  if ( result )
  {
    i = 0LL;
    s = 0LL;
    filename = "output_good.txt";
    result = v1;
    if ( v1 > 0 )
    {
      result = v1;
      if ( v1 <= 20 )
      {
        s = fopen(filename, "w+");
        if ( !s )
          exit(1);
        for ( i = 0LL; ; ++i )
        {
          result = v1;
          if ( v1 <= i )
            break;
          if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
            exit(1);
        }
        if ( s )
          result = fclose(s);
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042151A) ----------------------------------------------------
int goodG2B1_46()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = globalReturnsTrue();
  if ( result )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (00000000004215F4) ----------------------------------------------------
int goodG2B2_46()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    v3 = 20;
  result = globalReturnsTrue();
  if ( result )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (00000000004216C2) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_11_good()
{
  goodB2G1_52();
  goodB2G2_52();
  goodG2B1_46();
  return goodG2B2_46();
}

//----- (00000000004216F0) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_02_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_bad.txt";
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  if ( s )
    result = fclose(s);
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004217B4) ----------------------------------------------------
int goodB2G1_53()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042188B) ----------------------------------------------------
int goodB2G2_53()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000421962) ----------------------------------------------------
int goodG2B1_47()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000421A10) ----------------------------------------------------
int goodG2B2_47()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000421ABE) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_02_good()
{
  goodB2G1_53();
  goodB2G2_53();
  goodG2B1_47();
  return goodG2B2_47();
}

//----- (0000000000421AEC) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_66b_badSink(__int64 a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = *(_DWORD *)(a1 + 8);
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000421B30) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_66b_goodG2BSink(__int64 a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = *(_DWORD *)(a1 + 8);
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000421B74) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_66b_goodB2GSink(__int64 a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = *(unsigned int *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 > 0 && v2 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000421BC4) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_17_bad()
{
  int result; // eax
  __useconds_t useconds; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%d", &useconds);
  for ( j = 0; j <= 0; ++j )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000421C2C) ----------------------------------------------------
int goodB2G_76()
{
  int result; // eax
  __useconds_t useconds; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%d", &useconds);
  for ( j = 0; j <= 0; ++j )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000421CB1) ----------------------------------------------------
int goodG2B_82()
{
  int result; // eax
  __useconds_t useconds; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  for ( i = 0; i <= 0; ++i )
    useconds = 20;
  for ( j = 0; j <= 0; ++j )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}

//----- (0000000000421D03) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_17_good()
{
  goodB2G_76();
  return goodG2B_82();
}

//----- (0000000000421D1D) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54d_badSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fgets_sleep_54e_badSink(a1);
}

//----- (0000000000421D34) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54d_goodG2BSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fgets_sleep_54e_goodG2BSink(a1);
}

//----- (0000000000421D4B) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54d_goodB2GSink(signed int a1)
{
  return CWE400_Resource_Exhaustion__fgets_sleep_54e_goodB2GSink(a1);
}

//----- (0000000000421D62) ----------------------------------------------------
int __fastcall badSink_10(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000421D83) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_sleep_44_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(__useconds_t); // [rsp+8h] [rbp-8h]

  v2 = badSink_10;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000421DC4) ----------------------------------------------------
int __fastcall goodG2BSink_10(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000421DE5) ----------------------------------------------------
int goodG2B_83()
{
  return goodG2BSink_10(0x14u);
}

//----- (0000000000421E10) ----------------------------------------------------
int __fastcall goodB2GSink_7(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (0000000000421E4C) ----------------------------------------------------
__int64 goodB2G_77()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(signed int); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_7;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000421E8D) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_sleep_44_good()
{
  goodG2B_83();
  return goodB2G_77();
}

//----- (0000000000421EA7) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_63b_badSink(int *a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v3 = *a1;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000421F54) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_63b_goodG2BSink(int *a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v3 = *a1;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000422001) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_63b_goodB2GSink(int *a1)
{
  int result; // eax
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = *a1;
  v3 = *a1;
  if ( *a1 > 0 && v3 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (00000000004220BE) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_54_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_54b_badSink(v7);
}
// 4220BE: using guessed type char buf[16];

//----- (00000000004221A6) ----------------------------------------------------
int goodG2B_84()
{
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_54b_goodG2BSink(20);
}

//----- (00000000004221C8) ----------------------------------------------------
void goodB2G_78()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v2; // [rsp+12h] [rbp-1Eh]
  in_addr_t v3; // [rsp+14h] [rbp-1Ch]
  int v4; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v3 = inet_addr("127.0.0.1");
    v2 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v4 = recv(fd, buf, 0xDuLL, 0);
      if ( v4 != -1 )
      {
        if ( v4 )
        {
          buf[v4] = 0;
          v6 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_fwrite_54b_goodB2GSink(v6);
}
// 4221C8: using guessed type char buf[16];

//----- (00000000004222B0) ----------------------------------------------------
void CWE400_Resource_Exhaustion__connect_socket_fwrite_54_good()
{
  goodG2B_84();
  goodB2G_78();
}

//----- (00000000004222CA) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_61_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__fgets_for_loop_61b_badSource(0xFFFFFFFF);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000422314) ----------------------------------------------------
__int64 goodG2B_85()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__fgets_for_loop_61b_goodG2BSource();
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000042235E) ----------------------------------------------------
__int64 goodB2G_79()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__fgets_for_loop_61b_goodB2GSource(0xFFFFFFFF);
  v1 = result;
  if ( (int)result > 0 && (int)result <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (00000000004223B4) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_61_good()
{
  goodG2B_85();
  return goodB2G_79();
}

//----- (00000000004223CE) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_10_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    i = 0LL;
    s = 0LL;
    filename = "output_bad.txt";
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    if ( s )
      result = fclose(s);
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1A4: using guessed type int globalTrue;

//----- (00000000004224AA) ----------------------------------------------------
int goodB2G1_54()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;

//----- (00000000004225A4) ----------------------------------------------------
int goodB2G2_54()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalTrue;
  if ( globalTrue )
  {
    i = 0LL;
    s = 0LL;
    filename = "output_good.txt";
    result = v1;
    if ( v1 > 0 )
    {
      result = v1;
      if ( v1 <= 20 )
      {
        s = fopen(filename, "w+");
        if ( !s )
          exit(1);
        for ( i = 0LL; ; ++i )
        {
          result = v1;
          if ( v1 <= i )
            break;
          if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
            exit(1);
        }
        if ( s )
          result = fclose(s);
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1A4: using guessed type int globalTrue;

//----- (0000000000422693) ----------------------------------------------------
int goodG2B1_48()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = globalTrue;
  if ( globalTrue )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;

//----- (0000000000422765) ----------------------------------------------------
int goodG2B2_48()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( globalTrue )
    v3 = 20;
  result = globalTrue;
  if ( globalTrue )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;

//----- (000000000042282B) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_10_good()
{
  goodB2G1_54();
  goodB2G2_54();
  goodG2B1_48();
  return goodG2B2_48();
}

//----- (0000000000422859) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_51_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_for_loop_51b_badSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000422891) ----------------------------------------------------
__int64 goodG2B_86()
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_51b_goodG2BSink(20);
}

//----- (00000000004228B3) ----------------------------------------------------
__int64 goodB2G_80()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_for_loop_51b_goodB2GSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004228EB) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_51_good()
{
  goodG2B_86();
  return goodB2G_80();
}

//----- (0000000000422905) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_13_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042298D) ----------------------------------------------------
int goodB2G1_55()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000422A3C) ----------------------------------------------------
int goodB2G2_55()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000422ADF) ----------------------------------------------------
int goodG2B1_49()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    useconds = 20;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000422B2D) ----------------------------------------------------
int goodG2B2_49()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    useconds = 20;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000422B6F) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_13_good()
{
  goodB2G1_55();
  goodB2G2_55();
  goodG2B1_49();
  return goodG2B2_49();
}

//----- (0000000000422B9D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_61_bad()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__listen_socket_fwrite_61b_badSource(0xFFFFFFFF);
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000422C51) ----------------------------------------------------
int goodG2B_87()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__listen_socket_fwrite_61b_goodG2BSource();
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000422D05) ----------------------------------------------------
int goodB2G_81()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__listen_socket_fwrite_61b_goodB2GSource(0xFFFFFFFF);
  v2 = result;
  if ( result > 0 && result <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v2 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (0000000000422DC9) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_61_good()
{
  goodG2B_87();
  return goodB2G_81();
}

//----- (0000000000422DE3) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54c_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_fwrite_54d_badSink(a1);
}

//----- (0000000000422DFA) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54c_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_fwrite_54d_goodG2BSink(a1);
}

//----- (0000000000422E11) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54c_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__fscanf_fwrite_54d_goodB2GSink(a1);
}

//----- (0000000000422E28) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000422E55) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_sleep_61b_goodG2BSource()
{
  return 20LL;
}

//----- (0000000000422E68) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000422E95) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_01_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_bad.txt";
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  if ( s )
    result = fclose(s);
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000422F59) ----------------------------------------------------
int goodG2B_88()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000423007) ----------------------------------------------------
int goodB2G_82()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004230DE) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_01_good()
{
  goodG2B_88();
  return goodB2G_82();
}

//----- (00000000004230F8) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_66b_badSink(__int64 a1)
{
  usleep(*(_DWORD *)(a1 + 8));
  return printLine("Sleep time possibly too long");
}

//----- (0000000000423124) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_66b_goodG2BSink(__int64 a1)
{
  usleep(*(_DWORD *)(a1 + 8));
  return printLine("Sleep time possibly too long");
}

//----- (0000000000423150) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_66b_goodB2GSink(__int64 a1)
{
  signed int useconds; // [rsp+1Ch] [rbp-4h]

  useconds = *(_DWORD *)(a1 + 8);
  if ( useconds <= 0 || useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (0000000000423197) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_65b_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000042323A) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_65b_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004232DD) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_65b_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (0000000000423390) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54e_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004233C9) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54e_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000423402) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54e_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000423447) ----------------------------------------------------
__int64 badSink_11()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__fscanf_for_loop_45_badData;
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 68E24C: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_45_badData;

//----- (0000000000423486) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_45_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_for_loop_45_badData = v1;
  return badSink_11();
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E24C: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_45_badData;

//----- (00000000004234C7) ----------------------------------------------------
__int64 goodG2BSink_11()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodG2BData;
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 68E250: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodG2BData;

//----- (0000000000423506) ----------------------------------------------------
__int64 goodG2B_89()
{
  CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodG2BData = 20;
  return goodG2BSink_11();
}
// 68E250: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodG2BData;

//----- (0000000000423531) ----------------------------------------------------
__int64 goodB2GSink_8()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodB2GData;
  v1 = CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodB2GData;
  if ( CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodB2GData > 0
    && CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodB2GData <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E254: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodB2GData;

//----- (000000000042357C) ----------------------------------------------------
__int64 goodB2G_83()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodB2GData = v1;
  return goodB2GSink_8();
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E254: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodB2GData;

//----- (00000000004235BD) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_45_good()
{
  goodG2B_89();
  return goodB2G_83();
}

//----- (00000000004235D7) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_66_bad()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE400_Resource_Exhaustion__fgets_for_loop_66b_badSink((__int64)&v4);
}

//----- (0000000000423647) ----------------------------------------------------
__int64 goodG2B_90()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 20;
  v2 = 20;
  return CWE400_Resource_Exhaustion__fgets_for_loop_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000423671) ----------------------------------------------------
__int64 goodB2G_84()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE400_Resource_Exhaustion__fgets_for_loop_66b_goodB2GSink((__int64)&v4);
}

//----- (00000000004236E1) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_66_good()
{
  goodG2B_90();
  return goodB2G_84();
}

//----- (00000000004236FB) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_07_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( staticFive_2 == 5 )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = staticFive_2;
  if ( staticFive_2 == 5 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E164: using guessed type int staticFive_2;
// 4236FB: using guessed type char buf[16];

//----- (00000000004238D3) ----------------------------------------------------
int goodB2G1_56()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( staticFive_2 == 5 )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = staticFive_2;
  if ( staticFive_2 != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E164: using guessed type int staticFive_2;
// 4238D3: using guessed type char buf[16];

//----- (0000000000423AC6) ----------------------------------------------------
int goodB2G2_56()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( staticFive_2 == 5 )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = staticFive_2;
  if ( staticFive_2 == 5 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v11 > 0 && v11 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v11;
        if ( v11 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 68E164: using guessed type int staticFive_2;
// 423AC6: using guessed type char buf[16];

//----- (0000000000423CAE) ----------------------------------------------------
int goodG2B1_50()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( staticFive_2 == 5 )
    v3 = 20;
  else
    printLine("Benign, fixed string");
  result = staticFive_2;
  if ( staticFive_2 == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E164: using guessed type int staticFive_2;

//----- (0000000000423D82) ----------------------------------------------------
int goodG2B2_50()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( staticFive_2 == 5 )
    v3 = 20;
  result = staticFive_2;
  if ( staticFive_2 == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E164: using guessed type int staticFive_2;

//----- (0000000000423E4A) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_07_good()
{
  goodB2G1_56();
  goodB2G2_56();
  goodG2B1_50();
  return goodG2B2_50();
}

//----- (0000000000423E78) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_06_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, &unk_46D754, &v1);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000423EE6) ----------------------------------------------------
__int64 goodB2G1_57()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, &unk_46D754, &v1);
  i = 0LL;
  result = v1;
  if ( (int)v1 > 0 )
  {
    result = v1;
    if ( (int)v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = (int)v1;
        if ( (int)v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000423F6F) ----------------------------------------------------
__int64 goodB2G2_57()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, &unk_46D754, &v1);
  i = 0LL;
  result = v1;
  if ( (int)v1 > 0 )
  {
    result = v1;
    if ( (int)v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = (int)v1;
        if ( (int)v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000423FEC) ----------------------------------------------------
__int64 goodG2B1_51()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000424050) ----------------------------------------------------
__int64 goodG2B2_51()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004240A8) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_06_good()
{
  goodB2G1_57();
  goodB2G2_57();
  goodG2B1_51();
  return goodG2B2_51();
}

//----- (00000000004240D6) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_63_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_fwrite_63b_badSink(&v4);
}

//----- (0000000000424140) ----------------------------------------------------
int goodG2B_91()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__fgets_fwrite_63b_goodG2BSink(&v1);
}

//----- (0000000000424164) ----------------------------------------------------
int goodB2G_85()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_fwrite_63b_goodB2GSink(&v4);
}

//----- (00000000004241CE) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_63_good()
{
  goodG2B_91();
  return goodB2G_85();
}

//----- (00000000004241E8) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_63b_badSink(int *a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v3 = *a1;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000424295) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_63b_goodG2BSink(int *a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v3 = *a1;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000424342) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_63b_goodB2GSink(int *a1)
{
  int result; // eax
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = *a1;
  v3 = *a1;
  if ( *a1 > 0 && v3 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (00000000004243FF) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_53c_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_53d_badSink(a1);
}

//----- (0000000000424416) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_53c_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_53d_goodG2BSink(a1);
}

//----- (000000000042442D) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_53c_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__connect_socket_fwrite_53d_goodB2GSink(a1);
}

//----- (0000000000424444) ----------------------------------------------------
int __fastcall badSink_12(__useconds_t a1)
{
  int result; // eax

  result = badStatic_2;
  if ( badStatic_2 )
  {
    usleep(a1);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E258: using guessed type int badStatic_2;

//----- (000000000042446F) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_21_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  badStatic_2 = 1;
  return badSink_12(v4);
}
// 68E258: using guessed type int badStatic_2;

//----- (00000000004244E1) ----------------------------------------------------
int __fastcall goodB2G1Sink_2(signed int a1)
{
  if ( goodB2G1Static_2 )
    return printLine("Benign, fixed string");
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}
// 68E25C: using guessed type int goodB2G1Static_2;

//----- (0000000000424533) ----------------------------------------------------
int goodB2G1_58()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G1Static_2 = 0;
  return goodB2G1Sink_2(v4);
}
// 68E25C: using guessed type int goodB2G1Static_2;

//----- (00000000004245A5) ----------------------------------------------------
int __fastcall goodB2G2Sink_2(signed int a1)
{
  int result; // eax

  result = goodB2G2Static_2;
  if ( goodB2G2Static_2 )
  {
    if ( a1 <= 0 || a1 > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(a1);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 68E260: using guessed type int goodB2G2Static_2;

//----- (00000000004245EB) ----------------------------------------------------
int goodB2G2_58()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G2Static_2 = 1;
  return goodB2G2Sink_2(v4);
}
// 68E260: using guessed type int goodB2G2Static_2;

//----- (000000000042465D) ----------------------------------------------------
int __fastcall goodG2BSink_12(__useconds_t a1)
{
  int result; // eax

  result = goodG2BStatic_2;
  if ( goodG2BStatic_2 )
  {
    usleep(a1);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E264: using guessed type int goodG2BStatic_2;

//----- (0000000000424688) ----------------------------------------------------
int goodG2B_92()
{
  goodG2BStatic_2 = 1;
  return goodG2BSink_12(0x14u);
}
// 68E264: using guessed type int goodG2BStatic_2;

//----- (00000000004246B4) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_21_good()
{
  goodB2G1_58();
  goodB2G2_58();
  return goodG2B_92();
}

//----- (00000000004246D8) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_03_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (000000000042474A) ----------------------------------------------------
int goodB2G1_59()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (00000000004247D7) ----------------------------------------------------
int goodB2G2_59()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (0000000000424864) ----------------------------------------------------
int goodG2B1_52()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000424890) ----------------------------------------------------
int goodG2B2_52()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004248BC) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_03_good()
{
  goodB2G1_59();
  goodB2G2_59();
  goodG2B1_52();
  return goodG2B2_52();
}

//----- (00000000004248EA) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 4248EA: using guessed type char buf[16];

//----- (00000000004249C7) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_61b_goodG2BSource()
{
  return 20LL;
}

//----- (00000000004249DA) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 4249DA: using guessed type char buf[16];

//----- (0000000000424AB7) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_04_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, &unk_46D8A8, &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_bad.txt";
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  if ( s )
    result = fclose(s);
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000424B91) ----------------------------------------------------
int goodB2G1_60()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, &unk_46D8A8, &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000424C89) ----------------------------------------------------
int goodB2G2_60()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, &unk_46D8A8, &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000424D76) ----------------------------------------------------
int goodG2B1_53()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000424E46) ----------------------------------------------------
int goodG2B2_53()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000424F0A) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_04_good()
{
  goodB2G1_60();
  goodB2G2_60();
  goodG2B1_53();
  return goodG2B2_53();
}

//----- (0000000000424F38) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_14_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( globalFive == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = (unsigned int)globalFive;
  if ( globalFive == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;
// 424F38: using guessed type char buf[16];

//----- (00000000004250A2) ----------------------------------------------------
int goodB2G1_61()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( globalFive == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalFive;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;
// 4250A2: using guessed type char buf[16];

//----- (0000000000425224) ----------------------------------------------------
__int64 goodB2G2_61()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( globalFive == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = (unsigned int)globalFive;
  if ( globalFive == 5 )
  {
    i = 0LL;
    if ( v9 > 0 && v9 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v9;
        if ( v9 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;
// 425224: using guessed type char buf[16];

//----- (000000000042539A) ----------------------------------------------------
__int64 goodG2B1_54()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( globalFive == 5 )
    v2 = 20;
  else
    printLine("Benign, fixed string");
  result = (unsigned int)globalFive;
  if ( globalFive == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (0000000000425400) ----------------------------------------------------
__int64 goodG2B2_54()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( globalFive == 5 )
    v2 = 20;
  result = (unsigned int)globalFive;
  if ( globalFive == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (000000000042545A) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_14_good()
{
  goodB2G1_61();
  goodB2G2_61();
  goodG2B1_54();
  return goodG2B2_54();
}

//----- (0000000000425488) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_18_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004254FC) ----------------------------------------------------
int goodB2G_86()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (000000000042558B) ----------------------------------------------------
int goodG2B_93()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004255B9) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_18_good()
{
  goodB2G_86();
  return goodG2B_93();
}

//----- (00000000004255D3) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_32_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+24h] [rbp-2Ch]
  int v7; // [rsp+28h] [rbp-28h]
  int fd; // [rsp+2Ch] [rbp-24h]
  int *v9; // [rsp+30h] [rbp-20h]
  int *v10; // [rsp+38h] [rbp-18h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v12; // [rsp+48h] [rbp-8h]
  int v13; // [rsp+4Ch] [rbp-4h]

  v10 = &v5;
  v9 = &v5;
  v5 = -1;
  v13 = -1;
  fd = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v7 = recv(v12, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  *v10 = v13;
  v6 = *v9;
  for ( i = 0LL; ; ++i )
  {
    result = v6;
    if ( v6 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 4255D3: using guessed type char buf[16];

//----- (000000000042574E) ----------------------------------------------------
__int64 goodG2B_94()
{
  __int64 result; // rax
  int v1; // [rsp+Ch] [rbp-24h]
  int v2; // [rsp+10h] [rbp-20h]
  int v3; // [rsp+14h] [rbp-1Ch]
  int *v4; // [rsp+18h] [rbp-18h]
  int *v5; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 20;
  v1 = 20;
  v2 = 20;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004257BD) ----------------------------------------------------
__int64 goodB2G_87()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+24h] [rbp-2Ch]
  int v7; // [rsp+28h] [rbp-28h]
  int fd; // [rsp+2Ch] [rbp-24h]
  int *v9; // [rsp+30h] [rbp-20h]
  int *v10; // [rsp+38h] [rbp-18h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v12; // [rsp+48h] [rbp-8h]
  int v13; // [rsp+4Ch] [rbp-4h]

  v10 = &v5;
  v9 = &v5;
  v5 = -1;
  v13 = -1;
  fd = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v7 = recv(v12, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  *v10 = v13;
  result = (unsigned int)*v9;
  v6 = *v9;
  i = 0LL;
  if ( v6 > 0 && v6 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v6;
      if ( v6 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 4257BD: using guessed type char buf[16];

//----- (0000000000425944) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_32_good()
{
  goodG2B_94();
  return goodB2G_87();
}

//----- (000000000042595E) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_fwrite_65_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE400_Resource_Exhaustion__connect_socket_fwrite_65b_badSink;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 42595E: using guessed type char buf[16];

//----- (0000000000425A4F) ----------------------------------------------------
int goodG2B_95()
{
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_65b_goodG2BSink(20);
}

//----- (0000000000425A7A) ----------------------------------------------------
__int64 goodB2G_88()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  void (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE400_Resource_Exhaustion__connect_socket_fwrite_65b_goodB2GSink;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 425A7A: using guessed type char buf[16];

//----- (0000000000425B6B) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_fwrite_65_good()
{
  goodG2B_95();
  return goodB2G_88();
}

//----- (0000000000425B85) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE400_Resource_Exhaustion__fscanf_fwrite_66b_badSink((__int64)&v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000425BC5) ----------------------------------------------------
int goodG2B_96()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 20;
  v2 = 20;
  return CWE400_Resource_Exhaustion__fscanf_fwrite_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000425BEF) ----------------------------------------------------
int goodB2G_89()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE400_Resource_Exhaustion__fscanf_fwrite_66b_goodB2GSink((__int64)&v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000425C2F) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_66_good()
{
  goodG2B_96();
  return goodB2G_89();
}

//----- (0000000000425C49) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_07_bad()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( staticFive_3 == 5 )
    __isoc99_fscanf(stdin, "%d", &useconds);
  result = staticFive_3;
  if ( staticFive_3 == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E168: using guessed type int staticFive_3;

//----- (0000000000425CA1) ----------------------------------------------------
int goodB2G1_62()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( staticFive_3 == 5 )
    __isoc99_fscanf(stdin, "%d", &useconds);
  if ( staticFive_3 != 5 )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E168: using guessed type int staticFive_3;

//----- (0000000000425D22) ----------------------------------------------------
int goodB2G2_62()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( staticFive_3 == 5 )
    __isoc99_fscanf(stdin, "%d", &useconds);
  result = staticFive_3;
  if ( staticFive_3 == 5 )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E168: using guessed type int staticFive_3;

//----- (0000000000425D97) ----------------------------------------------------
int goodG2B1_55()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( staticFive_3 == 5 )
    useconds = 20;
  else
    printLine("Benign, fixed string");
  result = staticFive_3;
  if ( staticFive_3 == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E168: using guessed type int staticFive_3;

//----- (0000000000425DE5) ----------------------------------------------------
int goodG2B2_55()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( staticFive_3 == 5 )
    useconds = 20;
  result = staticFive_3;
  if ( staticFive_3 == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E168: using guessed type int staticFive_3;

//----- (0000000000425E27) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_07_good()
{
  goodB2G1_62();
  goodB2G2_62();
  goodG2B1_55();
  return goodG2B2_55();
}

//----- (0000000000425E55) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_64b_badSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+1Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v2 = *a1;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000425EA0) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_64b_goodG2BSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+1Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v2 = *a1;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000425EEB) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_64b_goodB2GSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+1Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = (unsigned int)*a1;
  v2 = *a1;
  if ( *a1 > 0 && v2 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000425F42) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_67b_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000425F81) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_67b_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000425FC0) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_67b_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)a1;
  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000042600B) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54d_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_54e_badSink(a1);
}

//----- (0000000000426022) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54d_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_54e_goodG2BSink(a1);
}

//----- (0000000000426039) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54d_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__listen_socket_fwrite_54e_goodB2GSink(a1);
}

//----- (0000000000426050) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_12_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    useconds = 20;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  else if ( (int)useconds <= 0 || (int)useconds > 2000 )
  {
    result = printLine("Sleep time too long");
  }
  else
  {
    usleep(useconds);
    result = printLine("Sleep time OK");
  }
  return result;
}

//----- (0000000000426118) ----------------------------------------------------
int goodB2G_90()
{
  int result; // eax
  char nptr[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char s[8]; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  __int16 v6; // [rsp+1Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v5 = 0;
    v6 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    *(_QWORD *)nptr = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(nptr, 14, stdin) )
      useconds = atoi(nptr);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  else if ( (int)useconds <= 0 || (int)useconds > 2000 )
  {
    result = printLine("Sleep time too long");
  }
  else
  {
    usleep(useconds);
    result = printLine("Sleep time OK");
  }
  return result;
}

//----- (0000000000426241) ----------------------------------------------------
int goodG2B_97()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004262A8) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_12_good()
{
  goodB2G_90();
  return goodG2B_97();
}

//----- (00000000004262C2) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_15_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}
// 4262C2: using guessed type char buf[16];

//----- (00000000004263B6) ----------------------------------------------------
int goodB2G1_63()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 4263B6: using guessed type char buf[16];

//----- (00000000004264C5) ----------------------------------------------------
int goodB2G2_63()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 4264C5: using guessed type char buf[16];

//----- (00000000004265D4) ----------------------------------------------------
int goodG2B1_56()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000426602) ----------------------------------------------------
int goodG2B2_56()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000426630) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_15_good()
{
  goodB2G1_63();
  goodB2G2_63();
  goodG2B1_56();
  return goodG2B2_56();
}

//----- (000000000042665E) ----------------------------------------------------
int badSink_13()
{
  usleep(CWE400_Resource_Exhaustion__fscanf_sleep_45_badData);
  return printLine("Sleep time possibly too long");
}
// 68E268: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_45_badData;

//----- (0000000000426685) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_45_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_sleep_45_badData = v1;
  return badSink_13();
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E268: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_45_badData;

//----- (00000000004266C6) ----------------------------------------------------
int goodG2BSink_13()
{
  usleep(CWE400_Resource_Exhaustion__fscanf_sleep_45_goodG2BData);
  return printLine("Sleep time possibly too long");
}
// 68E26C: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_45_goodG2BData;

//----- (00000000004266ED) ----------------------------------------------------
int goodG2B_98()
{
  CWE400_Resource_Exhaustion__fscanf_sleep_45_goodG2BData = 20;
  return goodG2BSink_13();
}
// 68E26C: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_45_goodG2BData;

//----- (0000000000426718) ----------------------------------------------------
int goodB2GSink_9()
{
  if ( CWE400_Resource_Exhaustion__fscanf_sleep_45_goodB2GData <= 0
    || CWE400_Resource_Exhaustion__fscanf_sleep_45_goodB2GData > 2000 )
  {
    return printLine("Sleep time too long");
  }
  usleep(CWE400_Resource_Exhaustion__fscanf_sleep_45_goodB2GData);
  return printLine("Sleep time OK");
}
// 68E270: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_45_goodB2GData;

//----- (000000000042675A) ----------------------------------------------------
int goodB2G_91()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_sleep_45_goodB2GData = v1;
  return goodB2GSink_9();
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E270: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_45_goodB2GData;

//----- (000000000042679B) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_45_good()
{
  goodG2B_98();
  return goodB2G_91();
}

//----- (00000000004267B5) ----------------------------------------------------
void CWE400_Resource_Exhaustion__fgets_fwrite_17_bad()
{
  char s[8]; // [rsp+0h] [rbp-40h]
  int v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+Ch] [rbp-34h]
  char *filename; // [rsp+18h] [rbp-28h]
  FILE *stream; // [rsp+20h] [rbp-20h]
  unsigned __int64 k; // [rsp+28h] [rbp-18h]
  int v6; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v6 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v1 = 0;
    v2 = 0;
    if ( fgets(s, 14, stdin) )
      v6 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    k = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( k = 0LL; v6 > k; ++k )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      fclose(stream);
  }
}

//----- (00000000004268D6) ----------------------------------------------------
void goodB2G_92()
{
  char s[8]; // [rsp+0h] [rbp-40h]
  int v1; // [rsp+8h] [rbp-38h]
  __int16 v2; // [rsp+Ch] [rbp-34h]
  char *filename; // [rsp+18h] [rbp-28h]
  FILE *stream; // [rsp+20h] [rbp-20h]
  unsigned __int64 k; // [rsp+28h] [rbp-18h]
  int v6; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v6 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v1 = 0;
    v2 = 0;
    if ( fgets(s, 14, stdin) )
      v6 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    k = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v6 > 0 && v6 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( k = 0LL; v6 > k; ++k )
      {
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        fclose(stream);
    }
  }
}

//----- (0000000000426A07) ----------------------------------------------------
void goodG2B_99()
{
  FILE *s; // [rsp+10h] [rbp-20h]
  unsigned __int64 k; // [rsp+18h] [rbp-18h]
  int v2; // [rsp+24h] [rbp-Ch]
  int j; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v2 = -1;
  for ( i = 0; i <= 0; ++i )
    v2 = 20;
  for ( j = 0; j <= 0; ++j )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( k = 0LL; v2 > k; ++k )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (0000000000426AE2) ----------------------------------------------------
void CWE400_Resource_Exhaustion__fgets_fwrite_17_good()
{
  goodB2G_92();
  goodG2B_99();
}

//----- (0000000000426AFC) ----------------------------------------------------
__int64 __fastcall badSource_2(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 426AFC: using guessed type char buf[16];

//----- (0000000000426BD9) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_42_bad()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = badSource_2(0xFFFFFFFF);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000426C0B) ----------------------------------------------------
__int64 goodG2BSource_2()
{
  return 20LL;
}

//----- (0000000000426C1E) ----------------------------------------------------
int goodG2B_100()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = goodG2BSource_2();
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000426C50) ----------------------------------------------------
__int64 __fastcall goodB2GSource_2(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 426C50: using guessed type char buf[16];

//----- (0000000000426D2D) ----------------------------------------------------
int goodB2G_93()
{
  signed int useconds; // [rsp+Ch] [rbp-4h]

  useconds = goodB2GSource_2(0xFFFFFFFF);
  if ( useconds <= 0 || useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (0000000000426D7A) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_42_good()
{
  goodB2G_93();
  return goodG2B_100();
}

//----- (0000000000426D94) ----------------------------------------------------
int __fastcall badSink_14(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000426E37) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_fwrite_44_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = badSink_14;
  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (0000000000426EA8) ----------------------------------------------------
int __fastcall goodG2BSink_14(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000426F4B) ----------------------------------------------------
int goodG2B_101()
{
  return goodG2BSink_14(20);
}

//----- (0000000000426F76) ----------------------------------------------------
void __fastcall goodB2GSink_10(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (0000000000427029) ----------------------------------------------------
__int64 goodB2G_94()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  void (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = goodB2GSink_10;
  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000042709A) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_fwrite_44_good()
{
  goodG2B_101();
  return goodB2G_94();
}

//----- (00000000004270B4) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_04_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  for ( i = 0LL; ; ++i )
  {
    result = v9;
    if ( v9 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 4270B4: using guessed type char buf[16];

//----- (000000000042721A) ----------------------------------------------------
__int64 goodB2G1_64()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  result = 0LL;
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 42721A: using guessed type char buf[16];

//----- (0000000000427398) ----------------------------------------------------
__int64 goodB2G2_64()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  result = 1LL;
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 427398: using guessed type char buf[16];

//----- (000000000042750A) ----------------------------------------------------
__int64 goodG2B1_57()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000042756C) ----------------------------------------------------
__int64 goodG2B2_57()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004275C2) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_04_good()
{
  goodB2G1_64();
  goodB2G2_64();
  goodG2B1_57();
  return goodG2B2_57();
}

//----- (00000000004275F0) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_31_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v7 = recv(v10, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v6 = v11;
  v5 = v11;
  for ( i = 0LL; ; ++i )
  {
    result = v5;
    if ( v5 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 4275F0: using guessed type char buf[16];

//----- (000000000042774C) ----------------------------------------------------
__int64 goodG2B_102()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000042779C) ----------------------------------------------------
__int64 goodB2G_95()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v7 = recv(v10, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v6 = v11;
  result = (unsigned int)v11;
  v5 = v11;
  i = 0LL;
  if ( v11 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 42779C: using guessed type char buf[16];

//----- (0000000000427904) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_31_good()
{
  goodG2B_102();
  return goodB2G_95();
}

//----- (000000000042791E) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_63b_badSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = *a1;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000427961) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_63b_goodG2BSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = *a1;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004279A4) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_63b_goodB2GSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)*a1;
  v2 = *a1;
  if ( *a1 > 0 && v2 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (00000000004279F3) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_for_loop_64b_badSink(&v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000427A2D) ----------------------------------------------------
__int64 goodG2B_103()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__fscanf_for_loop_64b_goodG2BSink(&v1);
}

//----- (0000000000427A51) ----------------------------------------------------
__int64 goodB2G_96()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_for_loop_64b_goodB2GSink(&v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000427A8B) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_64_good()
{
  goodG2B_103();
  return goodB2G_96();
}

//----- (0000000000427AA5) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_51b_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000427ADE) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_51b_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000427B17) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_51b_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000427B5C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_67_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9;
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_67b_badSink(v9);
}
// 427B5C: using guessed type char buf[16];

//----- (0000000000427C90) ----------------------------------------------------
__int64 goodG2B_104()
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_67b_goodG2BSink(20);
}

//----- (0000000000427CB8) ----------------------------------------------------
__int64 goodB2G_97()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9;
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_67b_goodB2GSink(v9);
}
// 427CB8: using guessed type char buf[16];

//----- (0000000000427DEC) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_67_good()
{
  goodG2B_104();
  return goodB2G_97();
}

//----- (0000000000427E06) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_53b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_53c_badSink(a1);
}

//----- (0000000000427E1D) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_53b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_53c_goodG2BSink(a1);
}

//----- (0000000000427E34) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_53b_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__connect_socket_fwrite_53c_goodB2GSink(a1);
}

//----- (0000000000427E4B) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_03_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}
// 427E4B: using guessed type char buf[16];

//----- (0000000000427F3D) ----------------------------------------------------
int goodB2G1_65()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 427F3D: using guessed type char buf[16];

//----- (000000000042804A) ----------------------------------------------------
int goodB2G2_65()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 42804A: using guessed type char buf[16];

//----- (0000000000428157) ----------------------------------------------------
int goodG2B1_58()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000428183) ----------------------------------------------------
int goodG2B2_58()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004281AF) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_03_good()
{
  goodB2G1_65();
  goodB2G2_65();
  goodG2B1_58();
  return goodG2B2_58();
}

//----- (00000000004281DD) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_11_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( result )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}

//----- (000000000042826B) ----------------------------------------------------
int goodB2G1_66()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (0000000000428320) ----------------------------------------------------
int goodB2G2_66()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}

//----- (00000000004283C9) ----------------------------------------------------
int goodG2B1_59()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    useconds = 20;
  result = globalReturnsTrue();
  if ( result )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}

//----- (000000000042841D) ----------------------------------------------------
int goodG2B2_59()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsTrue() )
    useconds = 20;
  result = globalReturnsTrue();
  if ( result )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}

//----- (0000000000428465) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_11_good()
{
  goodB2G1_66();
  goodB2G2_66();
  goodG2B1_59();
  return goodG2B2_59();
}

//----- (0000000000428493) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_02_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000428505) ----------------------------------------------------
int goodB2G1_67()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (0000000000428592) ----------------------------------------------------
int goodB2G2_67()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (000000000042861F) ----------------------------------------------------
int goodG2B1_60()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000042864B) ----------------------------------------------------
int goodG2B2_60()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000428677) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_02_good()
{
  goodB2G1_67();
  goodB2G2_67();
  goodG2B1_60();
  return goodG2B2_60();
}

//----- (00000000004286A5) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_52c_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000428748) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_52c_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004287EB) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_52c_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (000000000042889E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_54_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_fwrite_54b_badSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004288D6) ----------------------------------------------------
int goodG2B_105()
{
  return CWE400_Resource_Exhaustion__fscanf_fwrite_54b_goodG2BSink(20);
}

//----- (00000000004288F8) ----------------------------------------------------
void goodB2G_98()
{
  int v0; // [rsp+Ch] [rbp-4h]

  v0 = -1;
  __isoc99_fscanf(stdin, "%d", &v0);
  CWE400_Resource_Exhaustion__fscanf_fwrite_54b_goodB2GSink(v0);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000428930) ----------------------------------------------------
void CWE400_Resource_Exhaustion__fscanf_fwrite_54_good()
{
  goodG2B_105();
  goodB2G_98();
}

//----- (000000000042894A) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_22_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__listen_socket_for_loop_22_badGlobal;
  if ( CWE400_Resource_Exhaustion__listen_socket_for_loop_22_badGlobal )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E278: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_22_badGlobal;

//----- (000000000042898D) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodB2G1Sink(int a1)
{
  int result; // eax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodB2G1Global;
  if ( CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E27C: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodB2G1Global;

//----- (00000000004289E8) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodB2G2Sink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodB2G2Global;
  if ( CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodB2G2Global && a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E280: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodB2G2Global;

//----- (0000000000428A37) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodG2BGlobal;
  if ( CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodG2BGlobal )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E284: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodG2BGlobal;

//----- (0000000000428A7A) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_05_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( staticTrue_2 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticTrue_2;
  if ( staticTrue_2 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E16C: using guessed type int staticTrue_2;
// 428A7A: using guessed type char buf[16];

//----- (0000000000428B84) ----------------------------------------------------
int goodB2G1_68()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( staticTrue_2 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( staticFalse_2 )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 68E16C: using guessed type int staticTrue_2;
// 68E274: using guessed type int staticFalse_2;
// 428B84: using guessed type char buf[16];

//----- (0000000000428CB5) ----------------------------------------------------
int goodB2G2_68()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( staticTrue_2 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticTrue_2;
  if ( staticTrue_2 )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 68E16C: using guessed type int staticTrue_2;
// 428CB5: using guessed type char buf[16];

//----- (0000000000428DDA) ----------------------------------------------------
int goodG2B1_61()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( staticFalse_2 )
    printLine("Benign, fixed string");
  else
    useconds = 20;
  result = staticTrue_2;
  if ( staticTrue_2 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E16C: using guessed type int staticTrue_2;
// 68E274: using guessed type int staticFalse_2;

//----- (0000000000428E26) ----------------------------------------------------
int goodG2B2_61()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( staticTrue_2 )
    useconds = 20;
  result = staticTrue_2;
  if ( staticTrue_2 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E16C: using guessed type int staticTrue_2;

//----- (0000000000428E66) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_05_good()
{
  goodB2G1_68();
  goodB2G2_68();
  goodG2B1_61();
  return goodG2B2_61();
}

//----- (0000000000428E94) ----------------------------------------------------
int __fastcall badSink_15(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000428EB5) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_41_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return badSink_15(v7);
}
// 428EB5: using guessed type char buf[16];

//----- (0000000000428F9D) ----------------------------------------------------
int __fastcall goodG2BSink_15(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000428FBE) ----------------------------------------------------
int goodG2B_106()
{
  return goodG2BSink_15(0x14u);
}

//----- (0000000000428FE0) ----------------------------------------------------
int __fastcall goodB2GSink_11(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (000000000042901C) ----------------------------------------------------
int goodB2G_99()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return goodB2GSink_11(v7);
}
// 42901C: using guessed type char buf[16];

//----- (0000000000429104) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_41_good()
{
  goodB2G_99();
  return goodG2B_106();
}

//----- (000000000042911E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_10_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalTrue;
  if ( globalTrue )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;

//----- (00000000004291A4) ----------------------------------------------------
int goodB2G1_69()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;

//----- (0000000000429251) ----------------------------------------------------
int goodB2G2_69()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;

//----- (00000000004292F2) ----------------------------------------------------
int goodG2B1_62()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    useconds = 20;
  result = globalTrue;
  if ( globalTrue )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;

//----- (000000000042933E) ----------------------------------------------------
int goodG2B2_62()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( globalTrue )
    useconds = 20;
  result = globalTrue;
  if ( globalTrue )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;

//----- (000000000042937E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_10_good()
{
  goodB2G1_69();
  goodB2G2_69();
  goodG2B1_62();
  return goodG2B2_62();
}

//----- (00000000004293AC) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_52b_badSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_52c_badSink(a1);
}

//----- (00000000004293C3) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_52b_goodG2BSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_52c_goodG2BSink(a1);
}

//----- (00000000004293DA) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_52b_goodB2GSink(signed int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_52c_goodB2GSink(a1);
}

//----- (00000000004293F1) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_63_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_63b_badSink(&v5);
}
// 4293F1: using guessed type char buf[16];

//----- (00000000004294DB) ----------------------------------------------------
__int64 goodG2B_107()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_63b_goodG2BSink(&v1);
}

//----- (00000000004294FF) ----------------------------------------------------
__int64 goodB2G_100()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_63b_goodB2GSink(&v5);
}
// 4294FF: using guessed type char buf[16];

//----- (00000000004295E9) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_63_good()
{
  goodG2B_107();
  return goodB2G_100();
}

//----- (0000000000429603) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54c_badSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fgets_sleep_54d_badSink(a1);
}

//----- (000000000042961A) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54c_goodG2BSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fgets_sleep_54d_goodG2BSink(a1);
}

//----- (0000000000429631) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54c_goodB2GSink(signed int a1)
{
  return CWE400_Resource_Exhaustion__fgets_sleep_54d_goodB2GSink(a1);
}

//----- (0000000000429648) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_61_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__connect_socket_for_loop_61b_badSource(0xFFFFFFFF);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000429692) ----------------------------------------------------
__int64 goodG2B_108()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__connect_socket_for_loop_61b_goodG2BSource();
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004296DC) ----------------------------------------------------
__int64 goodB2G_101()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__connect_socket_for_loop_61b_goodB2GSource(0xFFFFFFFF);
  v1 = result;
  if ( (int)result > 0 && (int)result <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000429732) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_61_good()
{
  goodG2B_108();
  return goodB2G_101();
}

//----- (000000000042974C) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_34_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  __useconds_t useconds; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v9;
  useconds = v9;
  usleep(v9);
  return printLine("Sleep time possibly too long");
}
// 42974C: using guessed type char buf[16];

//----- (000000000042984A) ----------------------------------------------------
int goodG2B_109()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000429882) ----------------------------------------------------
int goodB2G_102()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  __useconds_t useconds; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v9;
  useconds = v9;
  if ( v9 <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 429882: using guessed type char buf[16];

//----- (000000000042999B) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_34_good()
{
  goodG2B_109();
  return goodB2G_102();
}

//----- (00000000004299B5) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_65b_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000429A58) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_65b_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000429AFB) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_65b_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (0000000000429BAE) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_01_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000429C20) ----------------------------------------------------
int goodG2B_110()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000429C4C) ----------------------------------------------------
int goodB2G_103()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (0000000000429CD9) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_01_good()
{
  goodG2B_110();
  return goodB2G_103();
}

//----- (0000000000429CF3) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_53_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_53b_badSink(v7);
}
// 429CF3: using guessed type char buf[16];

//----- (0000000000429DDB) ----------------------------------------------------
int goodG2B_111()
{
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_53b_goodG2BSink(20);
}

//----- (0000000000429DFD) ----------------------------------------------------
void goodB2G_104()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v2; // [rsp+12h] [rbp-1Eh]
  in_addr_t v3; // [rsp+14h] [rbp-1Ch]
  int v4; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v3 = inet_addr("127.0.0.1");
    v2 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v4 = recv(fd, buf, 0xDuLL, 0);
      if ( v4 != -1 )
      {
        if ( v4 )
        {
          buf[v4] = 0;
          v6 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_fwrite_53b_goodB2GSink(v6);
}
// 429DFD: using guessed type char buf[16];

//----- (0000000000429EE5) ----------------------------------------------------
void CWE400_Resource_Exhaustion__connect_socket_fwrite_53_good()
{
  goodG2B_111();
  goodB2G_104();
}

//----- (0000000000429EFF) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_66b_badSink(__int64 a1)
{
  usleep(*(_DWORD *)(a1 + 8));
  return printLine("Sleep time possibly too long");
}

//----- (0000000000429F2B) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_66b_goodG2BSink(__int64 a1)
{
  usleep(*(_DWORD *)(a1 + 8));
  return printLine("Sleep time possibly too long");
}

//----- (0000000000429F57) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_66b_goodB2GSink(__int64 a1)
{
  signed int useconds; // [rsp+1Ch] [rbp-4h]

  useconds = *(_DWORD *)(a1 + 8);
  if ( useconds <= 0 || useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (0000000000429F9E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_16_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (000000000042A012) ----------------------------------------------------
int goodB2G_105()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (000000000042A0A1) ----------------------------------------------------
int goodG2B_112()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000042A0CF) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_16_good()
{
  goodB2G_105();
  return goodG2B_112();
}

//----- (000000000042A0E9) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_22_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE400_Resource_Exhaustion__listen_socket_for_loop_22_badGlobal = 1;
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_22_badSink(v8);
}
// 68E278: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_22_badGlobal;
// 42A0E9: using guessed type char buf[16];

//----- (000000000042A221) ----------------------------------------------------
int goodB2G1_70()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodB2G1Global = 0;
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodB2G1Sink(v8);
}
// 68E27C: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodB2G1Global;
// 42A221: using guessed type char buf[16];

//----- (000000000042A359) ----------------------------------------------------
__int64 goodB2G2_70()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodB2G2Global = 1;
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodB2G2Sink(v8);
}
// 68E280: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodB2G2Global;
// 42A359: using guessed type char buf[16];

//----- (000000000042A491) ----------------------------------------------------
__int64 goodG2B_113()
{
  CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodG2BGlobal = 1;
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodG2BSink(20);
}
// 68E284: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_22_goodG2BGlobal;

//----- (000000000042A4BD) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_22_good()
{
  goodB2G1_70();
  goodB2G2_70();
  return goodG2B_113();
}

//----- (000000000042A4E1) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_15_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v7 = recv(v10, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v11;
    if ( v11 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 42A4E1: using guessed type char buf[16];

//----- (000000000042A69D) ----------------------------------------------------
int goodB2G1_71()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v10 = result;
        if ( result != -1 )
        {
          result = recv(v10, buf, 0xDuLL, 0);
          v7 = result;
          if ( result != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              result = atoi(buf);
              v11 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v10 != -1 )
    result = close(v10);
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 42A69D: using guessed type char buf[16];

//----- (000000000042A869) ----------------------------------------------------
int goodB2G2_71()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v10 = result;
        if ( result != -1 )
        {
          result = recv(v10, buf, 0xDuLL, 0);
          v7 = result;
          if ( result != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              result = atoi(buf);
              v11 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v10 != -1 )
    result = close(v10);
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 42A869: using guessed type char buf[16];

//----- (000000000042AA35) ----------------------------------------------------
int goodG2B1_63()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000042AAE5) ----------------------------------------------------
int goodG2B2_63()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000042AB95) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_15_good()
{
  goodB2G1_71();
  goodB2G2_71();
  goodG2B1_63();
  return goodG2B2_63();
}

//----- (000000000042ABC3) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_07_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticFive_4 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_4;
  if ( staticFive_4 == 5 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E170: using guessed type int staticFive_4;

//----- (000000000042ACD1) ----------------------------------------------------
int goodB2G1_72()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticFive_4 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_4;
  if ( staticFive_4 != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E170: using guessed type int staticFive_4;

//----- (000000000042ADFA) ----------------------------------------------------
int goodB2G2_72()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticFive_4 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_4;
  if ( staticFive_4 == 5 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v7 > 0 && v7 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v7;
        if ( v7 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 68E170: using guessed type int staticFive_4;

//----- (000000000042AF18) ----------------------------------------------------
int goodG2B1_64()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( staticFive_4 == 5 )
    v3 = 20;
  else
    printLine("Benign, fixed string");
  result = staticFive_4;
  if ( staticFive_4 == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E170: using guessed type int staticFive_4;

//----- (000000000042AFEC) ----------------------------------------------------
int goodG2B2_64()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( staticFive_4 == 5 )
    v3 = 20;
  result = staticFive_4;
  if ( staticFive_4 == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E170: using guessed type int staticFive_4;

//----- (000000000042B0B4) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_07_good()
{
  goodB2G1_72();
  goodB2G2_72();
  goodG2B1_64();
  return goodG2B2_64();
}

//----- (000000000042B0E2) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_53c_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_fwrite_53d_badSink(a1);
}

//----- (000000000042B0F9) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_53c_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_fwrite_53d_goodG2BSink(a1);
}

//----- (000000000042B110) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_53c_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__fscanf_fwrite_53d_goodB2GSink(a1);
}

//----- (000000000042B127) ----------------------------------------------------
__int64 __fastcall badSource_3(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 42B127: using guessed type char buf[16];

//----- (000000000042B24A) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_42_bad()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = badSource_3(0xFFFFFFFF);
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000042B2FE) ----------------------------------------------------
__int64 goodG2BSource_3()
{
  return 20LL;
}

//----- (000000000042B311) ----------------------------------------------------
int goodG2B_114()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = goodG2BSource_3();
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000042B3C5) ----------------------------------------------------
__int64 __fastcall goodB2GSource_3(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 42B3C5: using guessed type char buf[16];

//----- (000000000042B4E8) ----------------------------------------------------
int goodB2G_106()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = goodB2GSource_3(0xFFFFFFFF);
  v2 = result;
  if ( result > 0 && result <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v2 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000042B5AC) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_42_good()
{
  goodB2G_106();
  return goodG2B_114();
}

//----- (000000000042B5C6) ----------------------------------------------------
__int64 badSink_16()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__fgets_for_loop_45_badData;
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 68E288: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_45_badData;

//----- (000000000042B605) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_45_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_for_loop_45_badData = v4;
  return badSink_16();
}
// 68E288: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_45_badData;

//----- (000000000042B676) ----------------------------------------------------
__int64 goodG2BSink_16()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__fgets_for_loop_45_goodG2BData;
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 68E28C: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_45_goodG2BData;

//----- (000000000042B6B5) ----------------------------------------------------
__int64 goodG2B_115()
{
  CWE400_Resource_Exhaustion__fgets_for_loop_45_goodG2BData = 20;
  return goodG2BSink_16();
}
// 68E28C: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_45_goodG2BData;

//----- (000000000042B6E0) ----------------------------------------------------
__int64 goodB2GSink_12()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__fgets_for_loop_45_goodB2GData;
  v1 = CWE400_Resource_Exhaustion__fgets_for_loop_45_goodB2GData;
  if ( CWE400_Resource_Exhaustion__fgets_for_loop_45_goodB2GData > 0
    && CWE400_Resource_Exhaustion__fgets_for_loop_45_goodB2GData <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E290: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_45_goodB2GData;

//----- (000000000042B72B) ----------------------------------------------------
__int64 goodB2G_107()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_for_loop_45_goodB2GData = v4;
  return goodB2GSink_12();
}
// 68E290: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_45_goodB2GData;

//----- (000000000042B79C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_45_good()
{
  goodG2B_115();
  return goodB2G_107();
}

//----- (000000000042B7B6) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54d_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_54e_badSink(a1);
}

//----- (000000000042B7CD) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54d_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_54e_goodG2BSink(a1);
}

//----- (000000000042B7E4) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54d_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_54e_goodB2GSink(a1);
}

//----- (000000000042B7FB) ----------------------------------------------------
__int64 staticReturnsTrue_3()
{
  return 1LL;
}

//----- (000000000042B806) ----------------------------------------------------
__int64 staticReturnsFalse_3()
{
  return 0LL;
}

//----- (000000000042B811) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_08_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)staticReturnsTrue_3() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_3();
  if ( result )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}

//----- (000000000042B89F) ----------------------------------------------------
int goodB2G1_73()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)staticReturnsTrue_3() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)staticReturnsFalse_3() )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (000000000042B954) ----------------------------------------------------
int goodB2G2_73()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)staticReturnsTrue_3() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_3();
  if ( result )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}

//----- (000000000042B9FD) ----------------------------------------------------
int goodG2B1_65()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)staticReturnsFalse_3() )
    printLine("Benign, fixed string");
  else
    useconds = 20;
  result = staticReturnsTrue_3();
  if ( result )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}

//----- (000000000042BA51) ----------------------------------------------------
int goodG2B2_65()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)staticReturnsTrue_3() )
    useconds = 20;
  result = staticReturnsTrue_3();
  if ( result )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}

//----- (000000000042BA99) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_08_good()
{
  goodB2G1_73();
  goodB2G2_73();
  goodG2B1_65();
  return goodG2B2_65();
}

//----- (000000000042BAC7) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_68_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE400_Resource_Exhaustion__listen_socket_for_loop_68_badData = v8;
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_68b_badSink();
}
// 68E420: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_68_badData;
// 42BAC7: using guessed type char buf[16];

//----- (000000000042BBFE) ----------------------------------------------------
__int64 goodG2B_116()
{
  CWE400_Resource_Exhaustion__listen_socket_for_loop_68_goodG2BData = 20;
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_68b_goodG2BSink();
}
// 68E424: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_68_goodG2BData;

//----- (000000000042BC29) ----------------------------------------------------
__int64 goodB2G_108()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE400_Resource_Exhaustion__listen_socket_for_loop_68_goodB2GData = v8;
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_68b_goodB2GSink();
}
// 68E41C: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_68_goodB2GData;
// 42BC29: using guessed type char buf[16];

//----- (000000000042BD60) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_68_good()
{
  goodG2B_116();
  return goodB2G_108();
}

//----- (000000000042BD7A) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_09_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 42BD7A: using guessed type char buf[16];

//----- (000000000042BF50) ----------------------------------------------------
int goodB2G1_74()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = GLOBAL_CONST_FALSE;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;
// 42BF50: using guessed type char buf[16];

//----- (000000000042C141) ----------------------------------------------------
int goodB2G2_74()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v11 > 0 && v11 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v11;
        if ( v11 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 42C141: using guessed type char buf[16];

//----- (000000000042C327) ----------------------------------------------------
int goodG2B1_66()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000042C3F9) ----------------------------------------------------
int goodG2B2_66()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( GLOBAL_CONST_TRUE )
    v3 = 20;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000042C4BF) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_09_good()
{
  goodB2G1_74();
  goodB2G2_74();
  goodG2B1_66();
  return goodG2B2_66();
}

//----- (000000000042C4ED) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_fwrite_65_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__fscanf_fwrite_65b_badSink;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C52E) ----------------------------------------------------
int goodG2B_117()
{
  return CWE400_Resource_Exhaustion__fscanf_fwrite_65b_goodG2BSink(20);
}

//----- (000000000042C559) ----------------------------------------------------
__int64 goodB2G_109()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  void (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__fscanf_fwrite_65b_goodB2GSink;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C59A) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_fwrite_65_good()
{
  goodG2B_117();
  return goodB2G_109();
}

//----- (000000000042C5B4) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54e_badSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000042C5D5) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54e_goodG2BSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000042C5F6) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54e_goodB2GSink(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (000000000042C632) ----------------------------------------------------
void CWE400_Resource_Exhaustion__connect_socket_for_loop_17_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  in_addr_t v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+20h] [rbp-20h]
  int fd; // [rsp+24h] [rbp-1Ch]
  unsigned __int64 k; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = inet_addr("127.0.0.1");
      v2 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v4 = recv(fd, buf, 0xDuLL, 0);
        if ( v4 != -1 )
        {
          if ( v4 )
          {
            buf[v4] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    for ( k = 0LL; v7 > k; ++k )
      printLine("Hello");
  }
}
// 42C632: using guessed type char buf[16];

//----- (000000000042C769) ----------------------------------------------------
void goodB2G_110()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  in_addr_t v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+20h] [rbp-20h]
  int fd; // [rsp+24h] [rbp-1Ch]
  unsigned __int64 k; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v7 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = inet_addr("127.0.0.1");
      v2 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v4 = recv(fd, buf, 0xDuLL, 0);
        if ( v4 != -1 )
        {
          if ( v4 )
          {
            buf[v4] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    k = 0LL;
    if ( v7 > 0 && v7 <= 20 )
    {
      for ( k = 0LL; v7 > k; ++k )
        printLine("Hello");
    }
  }
}
// 42C769: using guessed type char buf[16];

//----- (000000000042C8AC) ----------------------------------------------------
__int64 goodG2B_118()
{
  __int64 result; // rax
  unsigned __int64 k; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v2 = -1;
  for ( i = 0; i <= 0; ++i )
    v2 = 20;
  for ( j = 0; j <= 0; ++j )
  {
    for ( k = 0LL; ; ++k )
    {
      result = v2;
      if ( v2 <= k )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000042C916) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_17_good()
{
  goodB2G_110();
  return goodG2B_118();
}

//----- (000000000042C930) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_52b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_52c_badSink(a1);
}

//----- (000000000042C947) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_52b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_52c_goodG2BSink(a1);
}

//----- (000000000042C95E) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_52b_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__connect_socket_fwrite_52c_goodB2GSink(a1);
}

//----- (000000000042C975) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_02_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  for ( i = 0LL; ; ++i )
  {
    result = v9;
    if ( v9 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 42C975: using guessed type char buf[16];

//----- (000000000042CAC5) ----------------------------------------------------
int goodB2G1_75()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v5 = result;
          if ( result != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 42CAC5: using guessed type char buf[16];

//----- (000000000042CC21) ----------------------------------------------------
int goodB2G2_75()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v5 = result;
          if ( result != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 42CC21: using guessed type char buf[16];

//----- (000000000042CD7D) ----------------------------------------------------
__int64 goodG2B1_67()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000042CDC1) ----------------------------------------------------
__int64 goodG2B2_67()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000042CE05) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_02_good()
{
  goodB2G1_75();
  goodB2G2_75();
  goodG2B1_67();
  return goodG2B2_67();
}

//----- (000000000042CE33) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_61_bad()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__connect_socket_fwrite_61b_badSource(0xFFFFFFFF);
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000042CEE7) ----------------------------------------------------
int goodG2B_119()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__connect_socket_fwrite_61b_goodG2BSource();
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000042CF9B) ----------------------------------------------------
int goodB2G_111()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__connect_socket_fwrite_61b_goodB2GSource(0xFFFFFFFF);
  v2 = result;
  if ( result > 0 && result <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v2 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000042D05F) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_61_good()
{
  goodG2B_119();
  return goodB2G_111();
}

//----- (000000000042D079) ----------------------------------------------------
__int64 __fastcall badSink_17(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000042D0B2) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_44_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  __int64 (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = badSink_17;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v7(v8);
}
// 42D0B2: using guessed type char buf[16];

//----- (000000000042D1A3) ----------------------------------------------------
__int64 __fastcall goodG2BSink_17(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000042D1DC) ----------------------------------------------------
__int64 goodG2B_120()
{
  return goodG2BSink_17(20);
}

//----- (000000000042D207) ----------------------------------------------------
__int64 __fastcall goodB2GSink_13(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000042D24C) ----------------------------------------------------
__int64 goodB2G_112()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  __int64 (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = goodB2GSink_13;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v7(v8);
}
// 42D24C: using guessed type char buf[16];

//----- (000000000042D33D) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_44_good()
{
  goodG2B_120();
  return goodB2G_112();
}

//----- (000000000042D357) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_14_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = (unsigned int)globalFive;
  if ( globalFive == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (000000000042D3F7) ----------------------------------------------------
int goodB2G1_76()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (000000000042D4AF) ----------------------------------------------------
__int64 goodB2G2_76()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = (unsigned int)globalFive;
  if ( globalFive == 5 )
  {
    i = 0LL;
    if ( v5 > 0 && v5 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v5;
        if ( v5 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (000000000042D55B) ----------------------------------------------------
__int64 goodG2B1_68()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( globalFive == 5 )
    v2 = 20;
  else
    printLine("Benign, fixed string");
  result = (unsigned int)globalFive;
  if ( globalFive == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (000000000042D5C1) ----------------------------------------------------
__int64 goodG2B2_68()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( globalFive == 5 )
    v2 = 20;
  result = (unsigned int)globalFive;
  if ( globalFive == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (000000000042D61B) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_14_good()
{
  goodB2G1_76();
  goodB2G2_76();
  goodG2B1_68();
  return goodG2B2_68();
}

//----- (000000000042D649) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_32_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-40h]
  int v2; // [rsp+8h] [rbp-38h]
  __int16 v3; // [rsp+Ch] [rbp-34h]
  int v4; // [rsp+18h] [rbp-28h]
  int v5; // [rsp+1Ch] [rbp-24h]
  int *v6; // [rsp+20h] [rbp-20h]
  int *v7; // [rsp+28h] [rbp-18h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v7 = &v4;
  v6 = &v4;
  v4 = -1;
  v9 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  *v7 = v9;
  v5 = *v6;
  for ( i = 0LL; ; ++i )
  {
    result = v5;
    if ( v5 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000042D6FE) ----------------------------------------------------
__int64 goodG2B_121()
{
  __int64 result; // rax
  int v1; // [rsp+Ch] [rbp-24h]
  int v2; // [rsp+10h] [rbp-20h]
  int v3; // [rsp+14h] [rbp-1Ch]
  int *v4; // [rsp+18h] [rbp-18h]
  int *v5; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 20;
  v1 = 20;
  v2 = 20;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000042D76D) ----------------------------------------------------
__int64 goodB2G_113()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-40h]
  int v2; // [rsp+8h] [rbp-38h]
  __int16 v3; // [rsp+Ch] [rbp-34h]
  int v4; // [rsp+18h] [rbp-28h]
  int v5; // [rsp+1Ch] [rbp-24h]
  int *v6; // [rsp+20h] [rbp-20h]
  int *v7; // [rsp+28h] [rbp-18h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v7 = &v4;
  v6 = &v4;
  v4 = -1;
  v9 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  *v7 = v9;
  result = (unsigned int)*v6;
  v5 = *v6;
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000042D82E) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_32_good()
{
  goodG2B_121();
  return goodB2G_113();
}

//----- (000000000042D848) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_15_bad()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, "%d", &useconds);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042D88C) ----------------------------------------------------
int goodB2G1_77()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, "%d", &useconds);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042D8ED) ----------------------------------------------------
int goodB2G2_77()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, "%d", &useconds);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042D94E) ----------------------------------------------------
int goodG2B1_69()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000042D97C) ----------------------------------------------------
int goodG2B2_69()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000042D9AA) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_15_good()
{
  goodB2G1_77();
  goodB2G2_77();
  goodG2B1_69();
  return goodG2B2_69();
}

//----- (000000000042D9D8) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_05_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( staticTrue_3 )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = staticTrue_3;
  if ( staticTrue_3 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E174: using guessed type int staticTrue_3;
// 42D9D8: using guessed type char buf[16];

//----- (000000000042DBAE) ----------------------------------------------------
int goodB2G1_78()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( staticTrue_3 )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = staticFalse_3;
  if ( staticFalse_3 )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E174: using guessed type int staticTrue_3;
// 68E294: using guessed type int staticFalse_3;
// 42DBAE: using guessed type char buf[16];

//----- (000000000042DD9F) ----------------------------------------------------
int goodB2G2_78()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( staticTrue_3 )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = staticTrue_3;
  if ( staticTrue_3 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v11 > 0 && v11 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v11;
        if ( v11 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 68E174: using guessed type int staticTrue_3;
// 42DD9F: using guessed type char buf[16];

//----- (000000000042DF85) ----------------------------------------------------
int goodG2B1_70()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( staticFalse_3 )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = staticTrue_3;
  if ( staticTrue_3 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E174: using guessed type int staticTrue_3;
// 68E294: using guessed type int staticFalse_3;

//----- (000000000042E057) ----------------------------------------------------
int goodG2B2_70()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( staticTrue_3 )
    v3 = 20;
  result = staticTrue_3;
  if ( staticTrue_3 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E174: using guessed type int staticTrue_3;

//----- (000000000042E11D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_05_good()
{
  goodB2G1_78();
  goodB2G2_78();
  goodG2B1_70();
  return goodG2B2_70();
}

//----- (000000000042E14B) ----------------------------------------------------
int __fastcall badSink_18(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000042E1EE) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_41_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return badSink_18(v8);
}
// 42E1EE: using guessed type char buf[16];

//----- (000000000042E31C) ----------------------------------------------------
int __fastcall goodG2BSink_18(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000042E3BF) ----------------------------------------------------
int goodG2B_122()
{
  return goodG2BSink_18(20);
}

//----- (000000000042E3E1) ----------------------------------------------------
void __fastcall goodB2GSink_14(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (000000000042E494) ----------------------------------------------------
void goodB2G_114()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v2; // [rsp+12h] [rbp-1Eh]
  int v3; // [rsp+14h] [rbp-1Ch]
  int v4; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  v6 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v3 = 0;
    v2 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v6 = accept(fd, 0LL, 0LL);
      if ( v6 != -1 )
      {
        v4 = recv(v6, buf, 0xDuLL, 0);
        if ( v4 != -1 )
        {
          if ( v4 )
          {
            buf[v4] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v6 != -1 )
    close(v6);
  goodB2GSink_14(v7);
}
// 42E494: using guessed type char buf[16];

//----- (000000000042E5C2) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_41_good()
{
  goodB2G_114();
  return goodG2B_122();
}

//----- (000000000042E5DC) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_68b_badSink()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__fscanf_fwrite_68_badData;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}
// 68E430: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_68_badData;

//----- (000000000042E685) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_68b_goodG2BSink()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__fscanf_fwrite_68_goodG2BData;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}
// 68E428: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_68_goodG2BData;

//----- (000000000042E72E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_68b_goodB2GSink()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__fscanf_fwrite_68_goodB2GData;
  v2 = CWE400_Resource_Exhaustion__fscanf_fwrite_68_goodB2GData;
  if ( CWE400_Resource_Exhaustion__fscanf_fwrite_68_goodB2GData > 0
    && CWE400_Resource_Exhaustion__fscanf_fwrite_68_goodB2GData <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v2 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E42C: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_68_goodB2GData;

//----- (000000000042E7E7) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_67b_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000042E826) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_67b_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000042E865) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_67b_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)a1;
  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000042E8B0) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_06_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v7;
    if ( v7 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}

//----- (000000000042E9BC) ----------------------------------------------------
int goodB2G1_79()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  result = 5;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (000000000042EAE3) ----------------------------------------------------
int goodB2G2_79()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  result = 5;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (000000000042EBFF) ----------------------------------------------------
int goodG2B1_71()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000042ECD1) ----------------------------------------------------
int goodG2B2_71()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000042ED97) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_06_good()
{
  goodB2G1_79();
  goodB2G2_79();
  goodG2B1_71();
  return goodG2B2_71();
}

//----- (000000000042EDC5) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54b_badSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fgets_sleep_54c_badSink(a1);
}

//----- (000000000042EDDC) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54b_goodG2BSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fgets_sleep_54c_goodG2BSink(a1);
}

//----- (000000000042EDF3) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54b_goodB2GSink(signed int a1)
{
  return CWE400_Resource_Exhaustion__fgets_sleep_54c_goodB2GSink(a1);
}

//----- (000000000042EE0A) ----------------------------------------------------
__int64 __fastcall badSource_4(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042EE37) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_42_bad()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = badSource_4(0xFFFFFFFF);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (000000000042EE69) ----------------------------------------------------
__int64 goodG2BSource_4()
{
  return 20LL;
}

//----- (000000000042EE7C) ----------------------------------------------------
int goodG2B_123()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = goodG2BSource_4();
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (000000000042EEAE) ----------------------------------------------------
__int64 __fastcall goodB2GSource_4(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042EEDB) ----------------------------------------------------
int goodB2G_115()
{
  signed int useconds; // [rsp+Ch] [rbp-4h]

  useconds = goodB2GSource_4(0xFFFFFFFF);
  if ( useconds <= 0 || useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (000000000042EF28) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_42_good()
{
  goodB2G_115();
  return goodG2B_123();
}

//----- (000000000042EF42) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_63b_badSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = *a1;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000042EF85) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_63b_goodG2BSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = *a1;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000042EFC8) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_63b_goodB2GSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)*a1;
  v2 = *a1;
  if ( *a1 > 0 && v2 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000042F017) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_52_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_52b_badSink(v7);
}
// 42F017: using guessed type char buf[16];

//----- (000000000042F0FF) ----------------------------------------------------
int goodG2B_124()
{
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_52b_goodG2BSink(20);
}

//----- (000000000042F121) ----------------------------------------------------
void goodB2G_116()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v2; // [rsp+12h] [rbp-1Eh]
  in_addr_t v3; // [rsp+14h] [rbp-1Ch]
  int v4; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v3 = inet_addr("127.0.0.1");
    v2 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v4 = recv(fd, buf, 0xDuLL, 0);
      if ( v4 != -1 )
      {
        if ( v4 )
        {
          buf[v4] = 0;
          v6 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_fwrite_52b_goodB2GSink(v6);
}
// 42F121: using guessed type char buf[16];

//----- (000000000042F209) ----------------------------------------------------
void CWE400_Resource_Exhaustion__connect_socket_fwrite_52_good()
{
  goodG2B_124();
  goodB2G_116();
}

//----- (000000000042F223) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_34_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-60h]
  __int16 s; // [rsp+10h] [rbp-50h]
  uint16_t v3; // [rsp+12h] [rbp-4Eh]
  int v4; // [rsp+14h] [rbp-4Ch]
  int v5; // [rsp+20h] [rbp-40h]
  char *filename; // [rsp+30h] [rbp-30h]
  FILE *stream; // [rsp+38h] [rbp-28h]
  int v8; // [rsp+44h] [rbp-1Ch]
  int v9; // [rsp+48h] [rbp-18h]
  int fd; // [rsp+4Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+50h] [rbp-10h]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v9 = recv(v12, buf, 0xDuLL, 0);
        if ( v9 != -1 )
        {
          if ( v9 )
          {
            buf[v9] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v5 = v13;
  v8 = v13;
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v8;
    if ( v8 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 42F223: using guessed type char buf[16];

//----- (000000000042F3E9) ----------------------------------------------------
int goodG2B_125()
{
  FILE *s; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000042F4A3) ----------------------------------------------------
int goodB2G_117()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-60h]
  __int16 s; // [rsp+10h] [rbp-50h]
  uint16_t v3; // [rsp+12h] [rbp-4Eh]
  int v4; // [rsp+14h] [rbp-4Ch]
  int v5; // [rsp+20h] [rbp-40h]
  char *filename; // [rsp+30h] [rbp-30h]
  FILE *stream; // [rsp+38h] [rbp-28h]
  int v8; // [rsp+44h] [rbp-1Ch]
  int v9; // [rsp+48h] [rbp-18h]
  int fd; // [rsp+4Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+50h] [rbp-10h]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v9 = recv(v12, buf, 0xDuLL, 0);
        if ( v9 != -1 )
        {
          if ( v9 )
          {
            buf[v9] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v5 = v13;
  result = v13;
  v8 = v13;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v13 > 0 && v8 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 42F4A3: using guessed type char buf[16];

//----- (000000000042F679) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_34_good()
{
  goodG2B_125();
  return goodB2G_117();
}

//----- (000000000042F693) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_51b_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000042F736) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_51b_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000042F7D9) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_51b_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (000000000042F88C) ----------------------------------------------------
__int64 __fastcall badSink_19(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)badStatic_3;
  if ( badStatic_3 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E298: using guessed type int badStatic_3;

//----- (000000000042F8CF) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_21_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  badStatic_3 = 1;
  return badSink_19(v8);
}
// 68E298: using guessed type int badStatic_3;
// 42F8CF: using guessed type char buf[16];

//----- (000000000042FA07) ----------------------------------------------------
int __fastcall goodB2G1Sink_3(int a1)
{
  int result; // eax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = goodB2G1Static_3;
  if ( goodB2G1Static_3 )
    return printLine("Benign, fixed string");
  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E29C: using guessed type int goodB2G1Static_3;

//----- (000000000042FA62) ----------------------------------------------------
int goodB2G1_80()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  goodB2G1Static_3 = 0;
  return goodB2G1Sink_3(v8);
}
// 68E29C: using guessed type int goodB2G1Static_3;
// 42FA62: using guessed type char buf[16];

//----- (000000000042FB9A) ----------------------------------------------------
__int64 __fastcall goodB2G2Sink_3(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)goodB2G2Static_3;
  if ( goodB2G2Static_3 && a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E2A0: using guessed type int goodB2G2Static_3;

//----- (000000000042FBE9) ----------------------------------------------------
__int64 goodB2G2_80()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  goodB2G2Static_3 = 1;
  return goodB2G2Sink_3(v8);
}
// 68E2A0: using guessed type int goodB2G2Static_3;
// 42FBE9: using guessed type char buf[16];

//----- (000000000042FD21) ----------------------------------------------------
__int64 __fastcall goodG2BSink_19(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)goodG2BStatic_3;
  if ( goodG2BStatic_3 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E2A4: using guessed type int goodG2BStatic_3;

//----- (000000000042FD64) ----------------------------------------------------
__int64 goodG2B_126()
{
  goodG2BStatic_3 = 1;
  return goodG2BSink_19(20);
}
// 68E2A4: using guessed type int goodG2BStatic_3;

//----- (000000000042FD90) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_21_good()
{
  goodB2G1_80();
  goodB2G2_80();
  return goodG2B_126();
}

//----- (000000000042FDB4) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_03_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  for ( i = 0LL; ; ++i )
  {
    result = v9;
    if ( v9 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 42FDB4: using guessed type char buf[16];

//----- (000000000042FF04) ----------------------------------------------------
int goodB2G1_81()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v5 = result;
          if ( result != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 42FF04: using guessed type char buf[16];

//----- (0000000000430060) ----------------------------------------------------
int goodB2G2_81()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v5 = result;
          if ( result != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 430060: using guessed type char buf[16];

//----- (00000000004301BC) ----------------------------------------------------
__int64 goodG2B1_72()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000430200) ----------------------------------------------------
__int64 goodG2B2_72()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000430244) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_03_good()
{
  goodB2G1_81();
  goodB2G2_81();
  goodG2B1_72();
  return goodG2B2_72();
}

//----- (0000000000430272) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_66b_badSink(__int64 a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v3 = *(_DWORD *)(a1 + 8);
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000430320) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_66b_goodG2BSink(__int64 a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v3 = *(_DWORD *)(a1 + 8);
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004303CE) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = *(_DWORD *)(a1 + 8);
  v3 = *(_DWORD *)(a1 + 8);
  if ( v3 > 0 && v3 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000043048C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_31_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  int v4; // [rsp+18h] [rbp-18h]
  int v5; // [rsp+1Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v7;
  v4 = v7;
  for ( i = 0LL; ; ++i )
  {
    result = v4;
    if ( v4 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000430522) ----------------------------------------------------
__int64 goodG2B_127()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000430572) ----------------------------------------------------
__int64 goodB2G_118()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  int v4; // [rsp+18h] [rbp-18h]
  int v5; // [rsp+1Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v7;
  result = (unsigned int)v7;
  v4 = v7;
  i = 0LL;
  if ( v7 > 0 && v4 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v4;
      if ( v4 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000430614) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_31_good()
{
  goodG2B_127();
  return goodB2G_118();
}

//----- (000000000043062E) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_53b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_fwrite_53c_badSink(a1);
}

//----- (0000000000430645) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_53b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_fwrite_53c_goodG2BSink(a1);
}

//----- (000000000043065C) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_53b_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__fscanf_fwrite_53c_goodB2GSink(a1);
}

//----- (0000000000430673) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_18_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  for ( i = 0LL; ; ++i )
  {
    result = v9;
    if ( v9 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 430673: using guessed type char buf[16];

//----- (00000000004307C5) ----------------------------------------------------
int goodB2G_119()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v5 = result;
          if ( result != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 4307C5: using guessed type char buf[16];

//----- (0000000000430923) ----------------------------------------------------
__int64 goodG2B_128()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000430969) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_18_good()
{
  goodB2G_119();
  return goodG2B_128();
}

//----- (0000000000430983) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_52c_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000430A26) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_52c_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000430AC9) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_52c_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (0000000000430B7C) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_68_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_fwrite_68_badData = v1;
  return CWE400_Resource_Exhaustion__fscanf_fwrite_68b_badSink();
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E430: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_68_badData;

//----- (0000000000430BBD) ----------------------------------------------------
int goodG2B_129()
{
  CWE400_Resource_Exhaustion__fscanf_fwrite_68_goodG2BData = 20;
  return CWE400_Resource_Exhaustion__fscanf_fwrite_68b_goodG2BSink();
}
// 68E428: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_68_goodG2BData;

//----- (0000000000430BE8) ----------------------------------------------------
int goodB2G_120()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_fwrite_68_goodB2GData = v1;
  return CWE400_Resource_Exhaustion__fscanf_fwrite_68b_goodB2GSink();
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E42C: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_68_goodB2GData;

//----- (0000000000430C29) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_68_good()
{
  goodG2B_129();
  return goodB2G_120();
}

//----- (0000000000430C43) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_67_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE400_Resource_Exhaustion__fgets_for_loop_67b_badSink(v5);
}

//----- (0000000000430CB1) ----------------------------------------------------
__int64 goodG2B_130()
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_67b_goodG2BSink(20);
}

//----- (0000000000430CD9) ----------------------------------------------------
__int64 goodB2G_121()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE400_Resource_Exhaustion__fgets_for_loop_67b_goodB2GSink(v5);
}

//----- (0000000000430D47) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_67_good()
{
  goodG2B_130();
  return goodB2G_121();
}

//----- (0000000000430D61) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_54_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_sleep_54b_badSink(v4);
}

//----- (0000000000430DC9) ----------------------------------------------------
int goodG2B_131()
{
  return CWE400_Resource_Exhaustion__fgets_sleep_54b_goodG2BSink(0x14u);
}

//----- (0000000000430DEB) ----------------------------------------------------
int goodB2G_122()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_sleep_54b_goodB2GSink(v4);
}

//----- (0000000000430E53) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_54_good()
{
  goodG2B_131();
  return goodB2G_122();
}

//----- (0000000000430E6D) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_for_loop_63b_badSink(&v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000430EA7) ----------------------------------------------------
__int64 goodG2B_132()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__fscanf_for_loop_63b_goodG2BSink(&v1);
}

//----- (0000000000430ECB) ----------------------------------------------------
__int64 goodB2G_123()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_for_loop_63b_goodB2GSink(&v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000430F05) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_63_good()
{
  goodG2B_132();
  return goodB2G_123();
}

//----- (0000000000430F1F) ----------------------------------------------------
__int64 staticReturnsTrue_4()
{
  return 1LL;
}

//----- (0000000000430F2A) ----------------------------------------------------
__int64 staticReturnsFalse_4()
{
  return 0LL;
}

//----- (0000000000430F35) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_08_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)staticReturnsTrue_4() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue_4();
  if ( result )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 430F35: using guessed type char buf[16];

//----- (0000000000431047) ----------------------------------------------------
int goodB2G1_82()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)staticReturnsTrue_4() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( (unsigned int)staticReturnsFalse_4() )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 431047: using guessed type char buf[16];

//----- (0000000000431180) ----------------------------------------------------
int goodB2G2_82()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)staticReturnsTrue_4() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue_4();
  if ( result )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 431180: using guessed type char buf[16];

//----- (00000000004312AD) ----------------------------------------------------
int goodG2B1_73()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)staticReturnsFalse_4() )
    printLine("Benign, fixed string");
  else
    useconds = 20;
  result = staticReturnsTrue_4();
  if ( result )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}

//----- (0000000000431301) ----------------------------------------------------
int goodG2B2_73()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)staticReturnsTrue_4() )
    useconds = 20;
  result = staticReturnsTrue_4();
  if ( result )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}

//----- (0000000000431349) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_08_good()
{
  goodB2G1_82();
  goodB2G2_82();
  goodG2B1_73();
  return goodG2B2_73();
}

//----- (0000000000431377) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_51_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_51b_badSink(v7);
}
// 431377: using guessed type char buf[16];

//----- (000000000043145F) ----------------------------------------------------
int goodG2B_133()
{
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_51b_goodG2BSink(20);
}

//----- (0000000000431481) ----------------------------------------------------
void goodB2G_124()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v2; // [rsp+12h] [rbp-1Eh]
  in_addr_t v3; // [rsp+14h] [rbp-1Ch]
  int v4; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v3 = inet_addr("127.0.0.1");
    v2 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v4 = recv(fd, buf, 0xDuLL, 0);
      if ( v4 != -1 )
      {
        if ( v4 )
        {
          buf[v4] = 0;
          v6 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_fwrite_51b_goodB2GSink(v6);
}
// 431481: using guessed type char buf[16];

//----- (0000000000431569) ----------------------------------------------------
void CWE400_Resource_Exhaustion__connect_socket_fwrite_51_good()
{
  goodG2B_133();
  goodB2G_124();
}

//----- (0000000000431583) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_22_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__fgets_for_loop_22_badGlobal;
  if ( CWE400_Resource_Exhaustion__fgets_for_loop_22_badGlobal )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1CC: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_22_badGlobal;

//----- (00000000004315C6) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_22_goodB2G1Sink(int a1)
{
  int result; // eax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__fgets_for_loop_22_goodB2G1Global;
  if ( CWE400_Resource_Exhaustion__fgets_for_loop_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1D0: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_22_goodB2G1Global;

//----- (0000000000431621) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_22_goodB2G2Sink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__fgets_for_loop_22_goodB2G2Global;
  if ( CWE400_Resource_Exhaustion__fgets_for_loop_22_goodB2G2Global && a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1D4: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_22_goodB2G2Global;

//----- (0000000000431670) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_22_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__fgets_for_loop_22_goodG2BGlobal;
  if ( CWE400_Resource_Exhaustion__fgets_for_loop_22_goodG2BGlobal )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1D8: using guessed type int CWE400_Resource_Exhaustion__fgets_for_loop_22_goodG2BGlobal;

//----- (00000000004316B3) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_12_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int fd; // [rsp+24h] [rbp-1Ch]
  unsigned __int64 j; // [rsp+28h] [rbp-18h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v9; // [rsp+38h] [rbp-8h]
  int v10; // [rsp+3Ch] [rbp-4h]

  v10 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v9 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v9 = accept(fd, 0LL, 0LL);
        if ( v9 != -1 )
        {
          v5 = recv(v9, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v10 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v9 != -1 )
      close(v9);
  }
  else
  {
    v10 = 20;
  }
  result = globalReturnsTrueOrFalse();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      printLine("Hello");
    }
  }
  else
  {
    j = 0LL;
    if ( v10 > 0 && v10 <= 20 )
    {
      for ( j = 0LL; ; ++j )
      {
        result = v10;
        if ( v10 <= j )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 4316B3: using guessed type char buf[16];

//----- (0000000000431868) ----------------------------------------------------
__int64 goodB2G_125()
{
  __int64 result; // rax
  char nptr[16]; // [rsp+0h] [rbp-70h]
  struct sockaddr addr; // [rsp+10h] [rbp-60h]
  char buf[16]; // [rsp+20h] [rbp-50h]
  __int16 s; // [rsp+30h] [rbp-40h]
  uint16_t v5; // [rsp+32h] [rbp-3Eh]
  int v6; // [rsp+34h] [rbp-3Ch]
  int v7; // [rsp+40h] [rbp-30h]
  int v8; // [rsp+44h] [rbp-2Ch]
  int v9; // [rsp+48h] [rbp-28h]
  int fd; // [rsp+4Ch] [rbp-24h]
  unsigned __int64 j; // [rsp+50h] [rbp-20h]
  unsigned __int64 i; // [rsp+58h] [rbp-18h]
  int v13; // [rsp+64h] [rbp-Ch]
  int v14; // [rsp+68h] [rbp-8h]
  int v15; // [rsp+6Ch] [rbp-4h]

  v15 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v14 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v6 = 0;
      v5 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v14 = accept(fd, 0LL, 0LL);
        if ( v14 != -1 )
        {
          v9 = recv(v14, buf, 0xDuLL, 0);
          if ( v9 != -1 )
          {
            if ( v9 )
            {
              buf[v9] = 0;
              v15 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v14 != -1 )
      close(v14);
  }
  else
  {
    v13 = -1;
    v8 = socket(2, 1, 6);
    if ( v8 != -1 )
    {
      memset(&addr, 0, 0x10uLL);
      addr.sa_family = 2;
      *(_DWORD *)&addr.sa_data[2] = 0;
      *(_WORD *)addr.sa_data = htons(0x6987u);
      if ( bind(v8, &addr, 0x10u) != -1 && listen(v8, 5) != -1 )
      {
        v13 = accept(v8, 0LL, 0LL);
        if ( v13 != -1 )
        {
          v7 = recv(v13, nptr, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              nptr[v7] = 0;
              v15 = atoi(nptr);
            }
          }
        }
      }
    }
    if ( v8 != -1 )
      close(v8);
    if ( v13 != -1 )
      close(v13);
  }
  result = globalReturnsTrueOrFalse();
  if ( (_DWORD)result )
  {
    i = 0LL;
    if ( v15 > 0 && v15 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v15;
        if ( v15 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  else
  {
    j = 0LL;
    if ( v15 > 0 && v15 <= 20 )
    {
      for ( j = 0LL; ; ++j )
      {
        result = v15;
        if ( v15 <= j )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 431868: using guessed type char buf[16];
// 431868: using guessed type char nptr[16];

//----- (0000000000431B3B) ----------------------------------------------------
__int64 goodG2B_134()
{
  __int64 result; // rax
  unsigned __int64 j; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  globalReturnsTrueOrFalse();
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    for ( i = 0LL; ; ++i )
    {
      result = 20LL;
      if ( i >= 0x14 )
        break;
      printLine("Hello");
    }
  }
  else
  {
    for ( j = 0LL; ; ++j )
    {
      result = 20LL;
      if ( j >= 0x14 )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000431BD2) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_12_good()
{
  goodB2G_125();
  return goodG2B_134();
}

//----- (0000000000431BEC) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_07_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( staticFive_5 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = (unsigned int)staticFive_5;
  if ( staticFive_5 == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E178: using guessed type int staticFive_5;
// 431BEC: using guessed type char buf[16];

//----- (0000000000431D10) ----------------------------------------------------
int goodB2G1_83()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( staticFive_5 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive_5;
  if ( staticFive_5 != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E178: using guessed type int staticFive_5;
// 431D10: using guessed type char buf[16];

//----- (0000000000431E4C) ----------------------------------------------------
__int64 goodB2G2_83()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( staticFive_5 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = (unsigned int)staticFive_5;
  if ( staticFive_5 == 5 )
  {
    i = 0LL;
    if ( v8 > 0 && v8 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v8;
        if ( v8 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 68E178: using guessed type int staticFive_5;
// 431E4C: using guessed type char buf[16];

//----- (0000000000431F7C) ----------------------------------------------------
__int64 goodG2B1_74()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( staticFive_5 == 5 )
    v2 = 20;
  else
    printLine("Benign, fixed string");
  result = (unsigned int)staticFive_5;
  if ( staticFive_5 == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E178: using guessed type int staticFive_5;

//----- (0000000000431FE2) ----------------------------------------------------
__int64 goodG2B2_74()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( staticFive_5 == 5 )
    v2 = 20;
  result = (unsigned int)staticFive_5;
  if ( staticFive_5 == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E178: using guessed type int staticFive_5;

//----- (000000000043203C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_07_good()
{
  goodB2G1_83();
  goodB2G2_83();
  goodG2B1_74();
  return goodG2B2_74();
}

//----- (000000000043206A) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54e_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043210D) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54e_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004321B0) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_54e_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (0000000000432263) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_34_bad()
{
  __useconds_t v1; // [rsp+8h] [rbp-8h]
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  useconds = v1;
  usleep(v1);
  return printLine("Sleep time possibly too long");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004322B1) ----------------------------------------------------
int goodG2B_135()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004322E9) ----------------------------------------------------
int goodB2G_126()
{
  int v1; // [rsp+8h] [rbp-8h]
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  useconds = v1;
  if ( v1 <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000432352) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_34_good()
{
  goodG2B_135();
  return goodB2G_126();
}

//----- (000000000043236C) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_66_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+40h] [rbp-10h]
  int fd; // [rsp+44h] [rbp-Ch]
  int v9; // [rsp+48h] [rbp-8h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_66b_badSink((__int64)&v5);
}
// 43236C: using guessed type char buf[16];

//----- (00000000004324A2) ----------------------------------------------------
int goodG2B_136()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 20;
  v2 = 20;
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_66b_goodG2BSink((__int64)&v1);
}

//----- (00000000004324CC) ----------------------------------------------------
int goodB2G_127()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+40h] [rbp-10h]
  int fd; // [rsp+44h] [rbp-Ch]
  int v9; // [rsp+48h] [rbp-8h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_66b_goodB2GSink((__int64)&v5);
}
// 4324CC: using guessed type char buf[16];

//----- (0000000000432602) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_66_good()
{
  goodG2B_136();
  return goodB2G_127();
}

//----- (000000000043261C) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_53_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_fwrite_53b_badSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000432654) ----------------------------------------------------
int goodG2B_137()
{
  return CWE400_Resource_Exhaustion__fscanf_fwrite_53b_goodG2BSink(20);
}

//----- (0000000000432676) ----------------------------------------------------
void goodB2G_128()
{
  int v0; // [rsp+Ch] [rbp-4h]

  v0 = -1;
  __isoc99_fscanf(stdin, "%d", &v0);
  CWE400_Resource_Exhaustion__fscanf_fwrite_53b_goodB2GSink(v0);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004326AE) ----------------------------------------------------
void CWE400_Resource_Exhaustion__fscanf_fwrite_53_good()
{
  goodG2B_137();
  goodB2G_128();
}

//----- (00000000004326C8) ----------------------------------------------------
int badSink_20()
{
  usleep(CWE400_Resource_Exhaustion__fgets_sleep_45_badData);
  return printLine("Sleep time possibly too long");
}
// 68E2A8: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_45_badData;

//----- (00000000004326EF) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_45_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_sleep_45_badData = v4;
  return badSink_20();
}
// 68E2A8: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_45_badData;

//----- (0000000000432760) ----------------------------------------------------
int goodG2BSink_20()
{
  usleep(CWE400_Resource_Exhaustion__fgets_sleep_45_goodG2BData);
  return printLine("Sleep time possibly too long");
}
// 68E2AC: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_45_goodG2BData;

//----- (0000000000432787) ----------------------------------------------------
int goodG2B_138()
{
  CWE400_Resource_Exhaustion__fgets_sleep_45_goodG2BData = 20;
  return goodG2BSink_20();
}
// 68E2AC: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_45_goodG2BData;

//----- (00000000004327B2) ----------------------------------------------------
int goodB2GSink_15()
{
  if ( CWE400_Resource_Exhaustion__fgets_sleep_45_goodB2GData <= 0
    || CWE400_Resource_Exhaustion__fgets_sleep_45_goodB2GData > 2000 )
  {
    return printLine("Sleep time too long");
  }
  usleep(CWE400_Resource_Exhaustion__fgets_sleep_45_goodB2GData);
  return printLine("Sleep time OK");
}
// 68E2B0: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_45_goodB2GData;

//----- (00000000004327F4) ----------------------------------------------------
int goodB2G_129()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_sleep_45_goodB2GData = v4;
  return goodB2GSink_15();
}
// 68E2B0: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_45_goodB2GData;

//----- (0000000000432865) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_45_good()
{
  goodG2B_138();
  return goodB2G_129();
}

//----- (000000000043287F) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_65b_badSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004328A0) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_65b_goodG2BSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004328C1) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_65b_goodB2GSink(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (00000000004328FD) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_sleep_65_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(__useconds_t); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE400_Resource_Exhaustion__fgets_sleep_65b_badSink;
  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000043296E) ----------------------------------------------------
int goodG2B_139()
{
  return CWE400_Resource_Exhaustion__fgets_sleep_65b_goodG2BSink(0x14u);
}

//----- (0000000000432999) ----------------------------------------------------
__int64 goodB2G_130()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(signed int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE400_Resource_Exhaustion__fgets_sleep_65b_goodB2GSink;
  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (0000000000432A0A) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_sleep_65_good()
{
  goodG2B_139();
  return goodB2G_130();
}

//----- (0000000000432A24) ----------------------------------------------------
int badSink_21()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__connect_socket_fwrite_45_badData;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}
// 68E2B4: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_45_badData;

//----- (0000000000432ACD) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_45_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_fwrite_45_badData = v7;
  return badSink_21();
}
// 68E2B4: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_45_badData;
// 432ACD: using guessed type char buf[16];

//----- (0000000000432BBE) ----------------------------------------------------
int goodG2BSink_21()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__connect_socket_fwrite_45_goodG2BData;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}
// 68E2B8: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_45_goodG2BData;

//----- (0000000000432C67) ----------------------------------------------------
int goodG2B_140()
{
  CWE400_Resource_Exhaustion__connect_socket_fwrite_45_goodG2BData = 20;
  return goodG2BSink_21();
}
// 68E2B8: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_45_goodG2BData;

//----- (0000000000432C92) ----------------------------------------------------
int goodB2GSink_16()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__connect_socket_fwrite_45_goodB2GData;
  v2 = CWE400_Resource_Exhaustion__connect_socket_fwrite_45_goodB2GData;
  if ( CWE400_Resource_Exhaustion__connect_socket_fwrite_45_goodB2GData > 0
    && CWE400_Resource_Exhaustion__connect_socket_fwrite_45_goodB2GData <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v2 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E2BC: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_45_goodB2GData;

//----- (0000000000432D4B) ----------------------------------------------------
int goodB2G_131()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_fwrite_45_goodB2GData = v7;
  return goodB2GSink_16();
}
// 68E2BC: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_45_goodB2GData;
// 432D4B: using guessed type char buf[16];

//----- (0000000000432E3C) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_45_good()
{
  goodG2B_140();
  return goodB2G_131();
}

//----- (0000000000432E56) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_06_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v10;
    if ( v10 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 432E56: using guessed type char buf[16];

//----- (0000000000432FE6) ----------------------------------------------------
int goodB2G1_84()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  result = 5;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 432FE6: using guessed type char buf[16];

//----- (0000000000433191) ----------------------------------------------------
int goodB2G2_84()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  result = 5;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 433191: using guessed type char buf[16];

//----- (0000000000433331) ----------------------------------------------------
int goodG2B1_75()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000433403) ----------------------------------------------------
int goodG2B2_75()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004334C9) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_06_good()
{
  goodB2G1_84();
  goodB2G2_84();
  goodG2B1_75();
  return goodG2B2_75();
}

//----- (00000000004334F7) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_53c_badSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fgets_sleep_53d_badSink(a1);
}

//----- (000000000043350E) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_53c_goodG2BSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fgets_sleep_53d_goodG2BSink(a1);
}

//----- (0000000000433525) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_53c_goodB2GSink(signed int a1)
{
  return CWE400_Resource_Exhaustion__fgets_sleep_53d_goodB2GSink(a1);
}

//----- (000000000043353C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_11_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalReturnsTrue();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 43353C: using guessed type char buf[16];

//----- (00000000004336AC) ----------------------------------------------------
int goodB2G1_85()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalReturnsFalse();
  if ( result )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 4336AC: using guessed type char buf[16];

//----- (0000000000433834) ----------------------------------------------------
__int64 goodB2G2_85()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalReturnsTrue();
  if ( (_DWORD)result )
  {
    i = 0LL;
    if ( v9 > 0 && v9 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v9;
        if ( v9 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 433834: using guessed type char buf[16];

//----- (00000000004339B0) ----------------------------------------------------
__int64 goodG2B1_76()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = globalReturnsTrue();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000433A1C) ----------------------------------------------------
__int64 goodG2B2_76()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    v2 = 20;
  result = globalReturnsTrue();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000433A7C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_11_good()
{
  goodB2G1_85();
  goodB2G2_85();
  goodG2B1_76();
  return goodG2B2_76();
}

//----- (0000000000433AAA) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_15_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v7;
    if ( v7 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}

//----- (0000000000433BA0) ----------------------------------------------------
int goodB2G1_86()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v7 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (0000000000433CA6) ----------------------------------------------------
int goodB2G2_86()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v7 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (0000000000433DAC) ----------------------------------------------------
int goodG2B1_77()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000433E5C) ----------------------------------------------------
int goodG2B2_77()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000433F0C) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_15_good()
{
  goodB2G1_86();
  goodB2G2_86();
  goodG2B1_77();
  return goodG2B2_77();
}

//----- (0000000000433F3A) ----------------------------------------------------
__int64 __fastcall badSource_5(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (0000000000433F97) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_42_bad()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = badSource_5(0xFFFFFFFF);
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043404B) ----------------------------------------------------
__int64 goodG2BSource_5()
{
  return 20LL;
}

//----- (000000000043405E) ----------------------------------------------------
int goodG2B_141()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = goodG2BSource_5();
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000434112) ----------------------------------------------------
__int64 __fastcall goodB2GSource_5(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (000000000043416F) ----------------------------------------------------
int goodB2G_132()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = goodB2GSource_5(0xFFFFFFFF);
  v2 = result;
  if ( result > 0 && result <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v2 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (0000000000434233) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_42_good()
{
  goodB2G_132();
  return goodG2B_141();
}

//----- (000000000043424D) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54e_badSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000043426E) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54e_goodG2BSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000043428F) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54e_goodB2GSink(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (00000000004342CB) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_53c_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_53d_badSink(a1);
}

//----- (00000000004342E2) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_53c_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_53d_goodG2BSink(a1);
}

//----- (00000000004342F9) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_53c_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_53d_goodB2GSink(a1);
}

//----- (0000000000434310) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE400_Resource_Exhaustion__fscanf_sleep_66b_badSink((__int64)&v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000434350) ----------------------------------------------------
int goodG2B_142()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 20;
  v2 = 20;
  return CWE400_Resource_Exhaustion__fscanf_sleep_66b_goodG2BSink((__int64)&v1);
}

//----- (000000000043437A) ----------------------------------------------------
int goodB2G_133()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE400_Resource_Exhaustion__fscanf_sleep_66b_goodB2GSink((__int64)&v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004343BA) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_66_good()
{
  goodG2B_142();
  return goodB2G_133();
}

//----- (00000000004343D4) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_52b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_fwrite_52c_badSink(a1);
}

//----- (00000000004343EB) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_52b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_fwrite_52c_goodG2BSink(a1);
}

//----- (0000000000434402) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_52b_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__fscanf_fwrite_52c_goodB2GSink(a1);
}

//----- (0000000000434419) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_10_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( globalTrue )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = (unsigned int)globalTrue;
  if ( globalTrue )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 434419: using guessed type char buf[16];

//----- (0000000000434581) ----------------------------------------------------
int goodB2G1_87()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( globalTrue )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = globalFalse;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;
// 434581: using guessed type char buf[16];

//----- (0000000000434701) ----------------------------------------------------
__int64 goodB2G2_87()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( globalTrue )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = (unsigned int)globalTrue;
  if ( globalTrue )
  {
    i = 0LL;
    if ( v9 > 0 && v9 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v9;
        if ( v9 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 434701: using guessed type char buf[16];

//----- (0000000000434875) ----------------------------------------------------
__int64 goodG2B1_78()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = (unsigned int)globalTrue;
  if ( globalTrue )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;

//----- (00000000004348D9) ----------------------------------------------------
__int64 goodG2B2_78()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( globalTrue )
    v2 = 20;
  result = (unsigned int)globalTrue;
  if ( globalTrue )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;

//----- (0000000000434931) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_10_good()
{
  goodB2G1_87();
  goodB2G2_87();
  goodG2B1_78();
  return goodG2B2_78();
}

//----- (000000000043495F) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54d_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_54e_badSink(a1);
}

//----- (0000000000434976) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54d_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_54e_goodG2BSink(a1);
}

//----- (000000000043498D) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54d_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_54e_goodB2GSink(a1);
}

//----- (00000000004349A4) ----------------------------------------------------
__int64 __fastcall badSink_22(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004349DD) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_44_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  __int64 (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = badSink_22;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return v2(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000434A1E) ----------------------------------------------------
__int64 __fastcall goodG2BSink_22(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000434A57) ----------------------------------------------------
__int64 goodG2B_143()
{
  return goodG2BSink_22(20);
}

//----- (0000000000434A82) ----------------------------------------------------
__int64 __fastcall goodB2GSink_17(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000434AC7) ----------------------------------------------------
__int64 goodB2G_134()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  __int64 (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_17;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return v2(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000434B08) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_44_good()
{
  goodG2B_143();
  return goodB2G_134();
}

//----- (0000000000434B22) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_10_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( globalTrue )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 434B22: using guessed type char buf[16];

//----- (0000000000434CF8) ----------------------------------------------------
int goodB2G1_88()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( globalTrue )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = globalFalse;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;
// 434CF8: using guessed type char buf[16];

//----- (0000000000434EE9) ----------------------------------------------------
int goodB2G2_88()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( globalTrue )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v11 > 0 && v11 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v11;
        if ( v11 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 434EE9: using guessed type char buf[16];

//----- (00000000004350CF) ----------------------------------------------------
int goodG2B1_79()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = globalTrue;
  if ( globalTrue )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;

//----- (00000000004351A1) ----------------------------------------------------
int goodG2B2_79()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( globalTrue )
    v3 = 20;
  result = globalTrue;
  if ( globalTrue )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;

//----- (0000000000435267) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_10_good()
{
  goodB2G1_88();
  goodB2G2_88();
  goodG2B1_79();
  return goodG2B2_79();
}

//----- (0000000000435295) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54b_badSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_54c_badSink(a1);
}

//----- (00000000004352AC) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54b_goodG2BSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_54c_goodG2BSink(a1);
}

//----- (00000000004352C3) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54b_goodB2GSink(signed int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_54c_goodB2GSink(a1);
}

//----- (00000000004352DA) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54c_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_54d_badSink(a1);
}

//----- (00000000004352F1) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54c_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_54d_goodG2BSink(a1);
}

//----- (0000000000435308) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54c_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_54d_goodB2GSink(a1);
}

//----- (000000000043531F) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_64b_badSink(int *a1)
{
  FILE *s; // [rsp+20h] [rbp-20h]
  int v3; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v3 = *a1;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004353D4) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_64b_goodG2BSink(int *a1)
{
  FILE *s; // [rsp+20h] [rbp-20h]
  int v3; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v3 = *a1;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000435489) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_64b_goodB2GSink(int *a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-20h]
  int v3; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  result = *a1;
  v3 = *a1;
  if ( *a1 > 0 && v3 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000043554E) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_01_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  for ( i = 0LL; ; ++i )
  {
    result = v9;
    if ( v9 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 43554E: using guessed type char buf[16];

//----- (000000000043569E) ----------------------------------------------------
__int64 goodG2B_144()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004356E2) ----------------------------------------------------
int goodB2G_135()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v5 = result;
          if ( result != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 4356E2: using guessed type char buf[16];

//----- (000000000043583E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_for_loop_01_good()
{
  goodG2B_144();
  return goodB2G_135();
}

//----- (0000000000435858) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_17_bad()
{
  __int64 result; // rax
  int v1; // [rsp+Ch] [rbp-14h]
  unsigned __int64 k; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = -1;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%d", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    for ( k = 0LL; ; ++k )
    {
      result = v1;
      if ( v1 <= k )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004358D8) ----------------------------------------------------
__int64 goodB2G_136()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+Ch] [rbp-14h]
  unsigned __int64 k; // [rsp+10h] [rbp-10h]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v1 = -1;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%d", &v1);
  for ( j = 0; j <= 0; ++j )
  {
    k = 0LL;
    result = v1;
    if ( (int)v1 > 0 )
    {
      result = v1;
      if ( (int)v1 <= 20 )
      {
        for ( k = 0LL; ; ++k )
        {
          result = (int)v1;
          if ( (int)v1 <= k )
            break;
          printLine("Hello");
        }
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000435967) ----------------------------------------------------
__int64 goodG2B_145()
{
  __int64 result; // rax
  unsigned __int64 k; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v2 = -1;
  for ( i = 0; i <= 0; ++i )
    v2 = 20;
  for ( j = 0; j <= 0; ++j )
  {
    for ( k = 0LL; ; ++k )
    {
      result = v2;
      if ( v2 <= k )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (00000000004359D1) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_17_good()
{
  goodB2G_136();
  return goodG2B_145();
}

//----- (00000000004359EB) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_68b_badSink()
{
  usleep(CWE400_Resource_Exhaustion__fgets_sleep_68_badData);
  return printLine("Sleep time possibly too long");
}
// 68E43C: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_68_badData;

//----- (0000000000435A12) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_68b_goodG2BSink()
{
  usleep(CWE400_Resource_Exhaustion__fgets_sleep_68_goodG2BData);
  return printLine("Sleep time possibly too long");
}
// 68E434: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_68_goodG2BData;

//----- (0000000000435A39) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_68b_goodB2GSink()
{
  if ( CWE400_Resource_Exhaustion__fgets_sleep_68_goodB2GData <= 0
    || CWE400_Resource_Exhaustion__fgets_sleep_68_goodB2GData > 2000 )
  {
    return printLine("Sleep time too long");
  }
  usleep(CWE400_Resource_Exhaustion__fgets_sleep_68_goodB2GData);
  return printLine("Sleep time OK");
}
// 68E438: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_68_goodB2GData;

//----- (0000000000435A7B) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000435AA8) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_61b_goodG2BSource()
{
  return 20LL;
}

//----- (0000000000435ABB) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000435AE8) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_05_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticTrue_4 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticTrue_4;
  if ( staticTrue_4 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E17C: using guessed type int staticTrue_4;

//----- (0000000000435BF4) ----------------------------------------------------
int goodB2G1_89()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticTrue_4 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFalse_4;
  if ( staticFalse_4 )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E17C: using guessed type int staticTrue_4;
// 68E2C0: using guessed type int staticFalse_4;

//----- (0000000000435D1B) ----------------------------------------------------
int goodB2G2_89()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( staticTrue_4 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticTrue_4;
  if ( staticTrue_4 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v7 > 0 && v7 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v7;
        if ( v7 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 68E17C: using guessed type int staticTrue_4;

//----- (0000000000435E37) ----------------------------------------------------
int goodG2B1_80()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( staticFalse_4 )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = staticTrue_4;
  if ( staticTrue_4 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E17C: using guessed type int staticTrue_4;
// 68E2C0: using guessed type int staticFalse_4;

//----- (0000000000435F09) ----------------------------------------------------
int goodG2B2_80()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( staticTrue_4 )
    v3 = 20;
  result = staticTrue_4;
  if ( staticTrue_4 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E17C: using guessed type int staticTrue_4;

//----- (0000000000435FCF) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_05_good()
{
  goodB2G1_89();
  goodB2G2_89();
  goodG2B1_80();
  return goodG2B2_80();
}

//----- (0000000000435FFD) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_22_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badGlobal = 1;
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badSink(v8);
}
// 68E2C4: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badGlobal;
// 435FFD: using guessed type char buf[16];

//----- (0000000000436135) ----------------------------------------------------
int goodB2G1_90()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodB2G1Global = 0;
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodB2G1Sink(v8);
}
// 68E2C8: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodB2G1Global;
// 436135: using guessed type char buf[16];

//----- (000000000043626D) ----------------------------------------------------
int goodB2G2_90()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodB2G2Global = 1;
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodB2G2Sink(v8);
}
// 68E2CC: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodB2G2Global;
// 43626D: using guessed type char buf[16];

//----- (00000000004363A5) ----------------------------------------------------
int goodG2B_146()
{
  CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodG2BGlobal = 1;
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodG2BSink(20);
}
// 68E2D0: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodG2BGlobal;

//----- (00000000004363D1) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_22_good()
{
  goodB2G1_90();
  goodB2G2_90();
  return goodG2B_146();
}

//----- (00000000004363F5) ----------------------------------------------------
int __fastcall badSink_23(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000436498) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_41_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return badSink_23(v4);
}

//----- (0000000000436500) ----------------------------------------------------
int __fastcall goodG2BSink_23(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004365A3) ----------------------------------------------------
int goodG2B_147()
{
  return goodG2BSink_23(20);
}

//----- (00000000004365C5) ----------------------------------------------------
void __fastcall goodB2GSink_18(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (0000000000436678) ----------------------------------------------------
void goodB2G_137()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  *(_QWORD *)s = 0LL;
  v1 = 0;
  v2 = 0;
  if ( fgets(s, 14, stdin) )
    v3 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2GSink_18(v3);
}

//----- (00000000004366E0) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_41_good()
{
  goodB2G_137();
  return goodG2B_147();
}

//----- (00000000004366FA) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_52_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_fwrite_52b_badSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000436732) ----------------------------------------------------
int goodG2B_148()
{
  return CWE400_Resource_Exhaustion__fscanf_fwrite_52b_goodG2BSink(20);
}

//----- (0000000000436754) ----------------------------------------------------
void goodB2G_138()
{
  int v0; // [rsp+Ch] [rbp-4h]

  v0 = -1;
  __isoc99_fscanf(stdin, "%d", &v0);
  CWE400_Resource_Exhaustion__fscanf_fwrite_52b_goodB2GSink(v0);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043678C) ----------------------------------------------------
void CWE400_Resource_Exhaustion__fscanf_fwrite_52_good()
{
  goodG2B_148();
  goodB2G_138();
}

//----- (00000000004367A6) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_63b_badSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = *a1;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004367E9) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_63b_goodG2BSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = *a1;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000043682C) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_63b_goodB2GSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)*a1;
  v2 = *a1;
  if ( *a1 > 0 && v2 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000043687B) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_51b_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043691E) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_51b_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004369C1) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_51b_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (0000000000436A74) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_14_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;
// 436A74: using guessed type char buf[16];

//----- (0000000000436B80) ----------------------------------------------------
int goodB2G1_91()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 68E1A8: using guessed type int globalFive;
// 436B80: using guessed type char buf[16];

//----- (0000000000436CB3) ----------------------------------------------------
int goodB2G2_91()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;
// 436CB3: using guessed type char buf[16];

//----- (0000000000436DDA) ----------------------------------------------------
int goodG2B1_81()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( globalFive == 5 )
    useconds = 20;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (0000000000436E28) ----------------------------------------------------
int goodG2B2_81()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( globalFive == 5 )
    useconds = 20;
  result = globalFive;
  if ( globalFive == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (0000000000436E6A) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_14_good()
{
  goodB2G1_91();
  goodB2G2_91();
  goodG2B1_81();
  return goodG2B2_81();
}

//----- (0000000000436E98) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_16_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_bad.txt";
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  if ( s )
    result = fclose(s);
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000436F5E) ----------------------------------------------------
int goodB2G_139()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000437037) ----------------------------------------------------
int goodG2B_149()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004370E7) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_16_good()
{
  goodB2G_139();
  return goodG2B_149();
}

//----- (0000000000437101) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_14_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (000000000043720F) ----------------------------------------------------
int goodB2G1_92()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (0000000000437338) ----------------------------------------------------
int goodB2G2_92()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v7 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v7 > 0 && v7 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v7;
        if ( v7 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (0000000000437456) ----------------------------------------------------
int goodG2B1_82()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( globalFive == 5 )
    v3 = 20;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (000000000043752A) ----------------------------------------------------
int goodG2B2_82()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( globalFive == 5 )
    v3 = 20;
  result = globalFive;
  if ( globalFive == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (00000000004375F2) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_14_good()
{
  goodB2G1_92();
  goodB2G2_92();
  goodG2B1_82();
  return goodG2B2_82();
}

//----- (0000000000437620) ----------------------------------------------------
__int64 staticReturnsTrue_5()
{
  return 1LL;
}

//----- (000000000043762B) ----------------------------------------------------
__int64 staticReturnsFalse_5()
{
  return 0LL;
}

//----- (0000000000437636) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_08_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( (unsigned int)staticReturnsTrue_5() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticReturnsTrue_5();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 437636: using guessed type char buf[16];

//----- (00000000004377A6) ----------------------------------------------------
int goodB2G1_93()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( (unsigned int)staticReturnsTrue_5() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticReturnsFalse_5();
  if ( result )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 4377A6: using guessed type char buf[16];

//----- (000000000043792E) ----------------------------------------------------
__int64 goodB2G2_93()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( (unsigned int)staticReturnsTrue_5() )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticReturnsTrue_5();
  if ( (_DWORD)result )
  {
    i = 0LL;
    if ( v9 > 0 && v9 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v9;
        if ( v9 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 43792E: using guessed type char buf[16];

//----- (0000000000437AAA) ----------------------------------------------------
__int64 goodG2B1_83()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( (unsigned int)staticReturnsFalse_5() )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = staticReturnsTrue_5();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000437B16) ----------------------------------------------------
__int64 goodG2B2_83()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( (unsigned int)staticReturnsTrue_5() )
    v2 = 20;
  result = staticReturnsTrue_5();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000437B76) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_08_good()
{
  goodB2G1_93();
  goodB2G2_93();
  goodG2B1_83();
  return goodG2B2_83();
}

//----- (0000000000437BA4) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_53b_badSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fgets_sleep_53c_badSink(a1);
}

//----- (0000000000437BBB) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_53b_goodG2BSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fgets_sleep_53c_goodG2BSink(a1);
}

//----- (0000000000437BD2) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_53b_goodB2GSink(signed int a1)
{
  return CWE400_Resource_Exhaustion__fgets_sleep_53c_goodB2GSink(a1);
}

//----- (0000000000437BE9) ----------------------------------------------------
__int64 __fastcall badSink_24(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)badStatic_4;
  if ( badStatic_4 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E2D4: using guessed type int badStatic_4;

//----- (0000000000437C2C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_21_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  badStatic_4 = 1;
  return badSink_24(v4);
}
// 68E2D4: using guessed type int badStatic_4;

//----- (0000000000437C9E) ----------------------------------------------------
int __fastcall goodB2G1Sink_4(int a1)
{
  int result; // eax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = goodB2G1Static_4;
  if ( goodB2G1Static_4 )
    return printLine("Benign, fixed string");
  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E2D8: using guessed type int goodB2G1Static_4;

//----- (0000000000437CF9) ----------------------------------------------------
int goodB2G1_94()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G1Static_4 = 0;
  return goodB2G1Sink_4(v4);
}
// 68E2D8: using guessed type int goodB2G1Static_4;

//----- (0000000000437D6B) ----------------------------------------------------
__int64 __fastcall goodB2G2Sink_4(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)goodB2G2Static_4;
  if ( goodB2G2Static_4 && a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E2DC: using guessed type int goodB2G2Static_4;

//----- (0000000000437DBA) ----------------------------------------------------
__int64 goodB2G2_94()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G2Static_4 = 1;
  return goodB2G2Sink_4(v4);
}
// 68E2DC: using guessed type int goodB2G2Static_4;

//----- (0000000000437E2C) ----------------------------------------------------
__int64 __fastcall goodG2BSink_24(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)goodG2BStatic_4;
  if ( goodG2BStatic_4 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E2E0: using guessed type int goodG2BStatic_4;

//----- (0000000000437E6F) ----------------------------------------------------
__int64 goodG2B_150()
{
  goodG2BStatic_4 = 1;
  return goodG2BSink_24(20);
}
// 68E2E0: using guessed type int goodG2BStatic_4;

//----- (0000000000437E9B) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_21_good()
{
  goodB2G1_94();
  goodB2G2_94();
  return goodG2B_150();
}

//----- (0000000000437EBF) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_66b_badSink(__int64 a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v3 = *(_DWORD *)(a1 + 8);
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000437F6D) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_66b_goodG2BSink(__int64 a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v3 = *(_DWORD *)(a1 + 8);
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043801B) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = *(_DWORD *)(a1 + 8);
  v3 = *(_DWORD *)(a1 + 8);
  if ( v3 > 0 && v3 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (00000000004380D9) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_52c_badSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004380FA) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_52c_goodG2BSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000043811B) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_52c_goodB2GSink(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (0000000000438157) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_66b_badSink(__int64 a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v3 = *(_DWORD *)(a1 + 8);
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000438205) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_66b_goodG2BSink(__int64 a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v3 = *(_DWORD *)(a1 + 8);
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004382B3) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = *(_DWORD *)(a1 + 8);
  v3 = *(_DWORD *)(a1 + 8);
  if ( v3 > 0 && v3 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (0000000000438371) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_61_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__fscanf_for_loop_61b_badSource(0xFFFFFFFF);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004383BB) ----------------------------------------------------
__int64 goodG2B_151()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__fscanf_for_loop_61b_goodG2BSource();
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000438405) ----------------------------------------------------
__int64 goodB2G_140()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__fscanf_for_loop_61b_goodB2GSource(0xFFFFFFFF);
  v1 = result;
  if ( (int)result > 0 && (int)result <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000043845B) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_61_good()
{
  goodG2B_151();
  return goodB2G_140();
}

//----- (0000000000438475) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_68_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_sleep_68_badData = v4;
  return CWE400_Resource_Exhaustion__fgets_sleep_68b_badSink();
}
// 68E43C: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_68_badData;

//----- (00000000004384E6) ----------------------------------------------------
int goodG2B_152()
{
  CWE400_Resource_Exhaustion__fgets_sleep_68_goodG2BData = 20;
  return CWE400_Resource_Exhaustion__fgets_sleep_68b_goodG2BSink();
}
// 68E434: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_68_goodG2BData;

//----- (0000000000438511) ----------------------------------------------------
int goodB2G_141()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_sleep_68_goodB2GData = v4;
  return CWE400_Resource_Exhaustion__fgets_sleep_68b_goodB2GSink();
}
// 68E438: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_68_goodB2GData;

//----- (0000000000438582) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_68_good()
{
  goodG2B_152();
  return goodB2G_141();
}

//----- (000000000043859C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_18_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  for ( i = 0LL; ; ++i )
  {
    result = v5;
    if ( v5 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000438628) ----------------------------------------------------
int goodB2G_142()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (00000000004386C0) ----------------------------------------------------
__int64 goodG2B_153()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000438706) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_18_good()
{
  goodB2G_142();
  return goodG2B_153();
}

//----- (0000000000438720) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_51_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_fwrite_51b_badSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000438758) ----------------------------------------------------
int goodG2B_154()
{
  return CWE400_Resource_Exhaustion__fscanf_fwrite_51b_goodG2BSink(20);
}

//----- (000000000043877A) ----------------------------------------------------
void goodB2G_143()
{
  int v0; // [rsp+Ch] [rbp-4h]

  v0 = -1;
  __isoc99_fscanf(stdin, "%d", &v0);
  CWE400_Resource_Exhaustion__fscanf_fwrite_51b_goodB2GSink(v0);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004387B2) ----------------------------------------------------
void CWE400_Resource_Exhaustion__fscanf_fwrite_51_good()
{
  goodG2B_154();
  goodB2G_143();
}

//----- (00000000004387CC) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_07_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( staticFive_6 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = (unsigned int)staticFive_6;
  if ( staticFive_6 == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E180: using guessed type int staticFive_6;

//----- (000000000043883C) ----------------------------------------------------
int goodB2G1_95()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( staticFive_6 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( staticFive_6 != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E180: using guessed type int staticFive_6;

//----- (00000000004388C7) ----------------------------------------------------
__int64 goodB2G2_95()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( staticFive_6 == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = (unsigned int)staticFive_6;
  if ( staticFive_6 == 5 )
  {
    i = 0LL;
    result = v1;
    if ( (int)v1 > 0 )
    {
      result = v1;
      if ( (int)v1 <= 20 )
      {
        for ( i = 0LL; ; ++i )
        {
          result = (int)v1;
          if ( (int)v1 <= i )
            break;
          printLine("Hello");
        }
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E180: using guessed type int staticFive_6;

//----- (0000000000438946) ----------------------------------------------------
__int64 goodG2B1_84()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( staticFive_6 == 5 )
    v2 = 20;
  else
    printLine("Benign, fixed string");
  result = (unsigned int)staticFive_6;
  if ( staticFive_6 == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E180: using guessed type int staticFive_6;

//----- (00000000004389AC) ----------------------------------------------------
__int64 goodG2B2_84()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( staticFive_6 == 5 )
    v2 = 20;
  result = (unsigned int)staticFive_6;
  if ( staticFive_6 == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E180: using guessed type int staticFive_6;

//----- (0000000000438A06) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_07_good()
{
  goodB2G1_95();
  goodB2G2_95();
  goodG2B1_84();
  return goodG2B2_84();
}

//----- (0000000000438A34) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_31_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  __useconds_t useconds; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  useconds = v9;
  usleep(v9);
  return printLine("Sleep time possibly too long");
}
// 438A34: using guessed type char buf[16];

//----- (0000000000438B32) ----------------------------------------------------
int goodG2B_155()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000438B6A) ----------------------------------------------------
int goodB2G_144()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  __useconds_t useconds; // [rsp+2Ch] [rbp-14h]
  int v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  useconds = v9;
  if ( v9 <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 438B6A: using guessed type char buf[16];

//----- (0000000000438C83) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_31_good()
{
  goodG2B_155();
  return goodB2G_144();
}

//----- (0000000000438C9D) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_54c_badSink(a1);
}

//----- (0000000000438CB4) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_54c_goodG2BSink(a1);
}

//----- (0000000000438CCB) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54b_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_54c_goodB2GSink(a1);
}

//----- (0000000000438CE2) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_09_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = (unsigned int)GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000438D50) ----------------------------------------------------
int goodB2G1_96()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  i = 0LL;
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000438DD9) ----------------------------------------------------
__int64 goodB2G2_96()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = (unsigned int)GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    i = 0LL;
    result = v1;
    if ( (int)v1 > 0 )
    {
      result = v1;
      if ( (int)v1 <= 20 )
      {
        for ( i = 0LL; ; ++i )
        {
          result = (int)v1;
          if ( (int)v1 <= i )
            break;
          printLine("Hello");
        }
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000438E56) ----------------------------------------------------
__int64 goodG2B1_85()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = (unsigned int)GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000438EBA) ----------------------------------------------------
__int64 goodG2B2_85()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( GLOBAL_CONST_TRUE )
    v2 = 20;
  result = (unsigned int)GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000438F12) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_09_good()
{
  goodB2G1_96();
  goodB2G2_96();
  goodG2B1_85();
  return goodG2B2_85();
}

//----- (0000000000438F40) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_53_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_sleep_53b_badSink(v4);
}

//----- (0000000000438FA8) ----------------------------------------------------
int goodG2B_156()
{
  return CWE400_Resource_Exhaustion__fgets_sleep_53b_goodG2BSink(0x14u);
}

//----- (0000000000438FCA) ----------------------------------------------------
int goodB2G_145()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_sleep_53b_goodB2GSink(v4);
}

//----- (0000000000439032) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_53_good()
{
  goodG2B_156();
  return goodB2G_145();
}

//----- (000000000043904C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_15_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  for ( i = 0LL; ; ++i )
  {
    result = v8;
    if ( v8 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 43904C: using guessed type char buf[16];

//----- (0000000000439158) ----------------------------------------------------
int goodB2G1_97()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v5 = result;
      if ( result != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 439158: using guessed type char buf[16];

//----- (0000000000439270) ----------------------------------------------------
int goodB2G2_97()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v5 = result;
      if ( result != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 439270: using guessed type char buf[16];

//----- (0000000000439388) ----------------------------------------------------
__int64 goodG2B1_86()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004393CE) ----------------------------------------------------
__int64 goodG2B2_86()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000439414) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_15_good()
{
  goodB2G1_97();
  goodB2G2_97();
  goodG2B1_86();
  return goodG2B2_86();
}

//----- (0000000000439442) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54e_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004394E5) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54e_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000439588) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_54e_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (000000000043963B) ----------------------------------------------------
int badSink_25()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__fscanf_fwrite_45_badData;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}
// 68E2E4: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_45_badData;

//----- (00000000004396E4) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_45_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_fwrite_45_badData = v1;
  return badSink_25();
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E2E4: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_45_badData;

//----- (0000000000439725) ----------------------------------------------------
int goodG2BSink_25()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__fscanf_fwrite_45_goodG2BData;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}
// 68E2E8: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_45_goodG2BData;

//----- (00000000004397CE) ----------------------------------------------------
int goodG2B_157()
{
  CWE400_Resource_Exhaustion__fscanf_fwrite_45_goodG2BData = 20;
  return goodG2BSink_25();
}
// 68E2E8: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_45_goodG2BData;

//----- (00000000004397F9) ----------------------------------------------------
int goodB2GSink_19()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__fscanf_fwrite_45_goodB2GData;
  v2 = CWE400_Resource_Exhaustion__fscanf_fwrite_45_goodB2GData;
  if ( CWE400_Resource_Exhaustion__fscanf_fwrite_45_goodB2GData > 0
    && CWE400_Resource_Exhaustion__fscanf_fwrite_45_goodB2GData <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v2 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E2EC: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_45_goodB2GData;

//----- (00000000004398B2) ----------------------------------------------------
int goodB2G_146()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_fwrite_45_goodB2GData = v1;
  return goodB2GSink_19();
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E2EC: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_45_goodB2GData;

//----- (00000000004398F3) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_45_good()
{
  goodG2B_157();
  return goodB2G_146();
}

//----- (000000000043990D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_66_bad()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE400_Resource_Exhaustion__fgets_fwrite_66b_badSink((__int64)&v4);
}

//----- (000000000043997D) ----------------------------------------------------
int goodG2B_158()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 20;
  v2 = 20;
  return CWE400_Resource_Exhaustion__fgets_fwrite_66b_goodG2BSink((__int64)&v1);
}

//----- (00000000004399A7) ----------------------------------------------------
int goodB2G_147()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE400_Resource_Exhaustion__fgets_fwrite_66b_goodB2GSink((__int64)&v4);
}

//----- (0000000000439A17) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_66_good()
{
  goodG2B_158();
  return goodB2G_147();
}

//----- (0000000000439A31) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_67b_badSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000439A58) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_67b_goodG2BSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000439A7F) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_67b_goodB2GSink(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (0000000000439AC1) ----------------------------------------------------
__int64 __fastcall badSource_6(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 439AC1: using guessed type char buf[16];

//----- (0000000000439B9E) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_42_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = badSource_6(0xFFFFFFFF);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000439BE8) ----------------------------------------------------
__int64 goodG2BSource_6()
{
  return 20LL;
}

//----- (0000000000439BFB) ----------------------------------------------------
__int64 goodG2B_159()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = goodG2BSource_6();
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000439C45) ----------------------------------------------------
__int64 __fastcall goodB2GSource_6(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 439C45: using guessed type char buf[16];

//----- (0000000000439D22) ----------------------------------------------------
__int64 goodB2G_148()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  result = goodB2GSource_6(0xFFFFFFFF);
  v1 = result;
  if ( (int)result > 0 && (int)result <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000439D78) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_42_good()
{
  goodB2G_148();
  return goodG2B_159();
}

//----- (0000000000439D92) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_52b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_52c_badSink(a1);
}

//----- (0000000000439DA9) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_52b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_52c_goodG2BSink(a1);
}

//----- (0000000000439DC0) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_52b_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_52c_goodB2GSink(a1);
}

//----- (0000000000439DD7) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_06_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, &unk_46F2DC, &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_bad.txt";
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  if ( s )
    result = fclose(s);
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000439EB3) ----------------------------------------------------
int goodB2G1_98()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, &unk_46F2DC, &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000439FAD) ----------------------------------------------------
int goodB2G2_98()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, &unk_46F2DC, &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043A09C) ----------------------------------------------------
int goodG2B1_87()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043A16E) ----------------------------------------------------
int goodG2B2_87()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043A234) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_06_good()
{
  goodB2G1_98();
  goodB2G2_98();
  goodG2B1_87();
  return goodG2B2_87();
}

//----- (000000000043A262) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_22_badSink(__useconds_t a1)
{
  int result; // eax

  result = CWE400_Resource_Exhaustion__connect_socket_sleep_22_badGlobal;
  if ( CWE400_Resource_Exhaustion__connect_socket_sleep_22_badGlobal )
  {
    usleep(a1);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E2F4: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_22_badGlobal;

//----- (000000000043A28D) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodB2G1Sink(signed int a1)
{
  if ( CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}
// 68E2F8: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodB2G1Global;

//----- (000000000043A2DF) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodB2G2Sink(signed int a1)
{
  int result; // eax

  result = CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodB2G2Global;
  if ( CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodB2G2Global )
  {
    if ( a1 <= 0 || a1 > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(a1);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 68E2FC: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodB2G2Global;

//----- (000000000043A325) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodG2BSink(__useconds_t a1)
{
  int result; // eax

  result = CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodG2BGlobal;
  if ( CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodG2BGlobal )
  {
    usleep(a1);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E300: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodG2BGlobal;

//----- (000000000043A350) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_11_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000043A3F6) ----------------------------------------------------
int goodB2G1_99()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsFalse();
  if ( result )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000043A4B4) ----------------------------------------------------
__int64 goodB2G2_99()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( (_DWORD)result )
  {
    i = 0LL;
    if ( v5 > 0 && v5 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v5;
        if ( v5 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}

//----- (000000000043A566) ----------------------------------------------------
__int64 goodG2B1_88()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = globalReturnsTrue();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000043A5D2) ----------------------------------------------------
__int64 goodG2B2_88()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    v2 = 20;
  result = globalReturnsTrue();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000043A632) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_11_good()
{
  goodB2G1_99();
  goodB2G2_99();
  goodG2B1_88();
  return goodG2B2_88();
}

//----- (000000000043A660) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_02_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  for ( i = 0LL; ; ++i )
  {
    result = v5;
    if ( v5 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000043A6EA) ----------------------------------------------------
int goodB2G1_100()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000043A780) ----------------------------------------------------
int goodB2G2_100()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000043A816) ----------------------------------------------------
__int64 goodG2B1_89()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000043A85A) ----------------------------------------------------
__int64 goodG2B2_89()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000043A89E) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_02_good()
{
  goodB2G1_100();
  goodB2G2_100();
  goodG2B1_89();
  return goodG2B2_89();
}

//----- (000000000043A8CC) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_04_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v7;
    if ( v7 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}

//----- (000000000043A9D6) ----------------------------------------------------
int goodB2G1_101()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  result = 0;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (000000000043AAFB) ----------------------------------------------------
int goodB2G2_101()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  result = 1;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (000000000043AC15) ----------------------------------------------------
int goodG2B1_90()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043ACE5) ----------------------------------------------------
int goodG2B2_90()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043ADA9) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_04_good()
{
  goodB2G1_101();
  goodB2G2_101();
  goodG2B1_90();
  return goodG2B2_90();
}

//----- (000000000043ADD7) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_14_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( globalFive == 5 )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;
// 43ADD7: using guessed type char buf[16];

//----- (000000000043AFAF) ----------------------------------------------------
int goodB2G1_102()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( globalFive == 5 )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = globalFive;
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;
// 43AFAF: using guessed type char buf[16];

//----- (000000000043B1A2) ----------------------------------------------------
int goodB2G2_102()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( globalFive == 5 )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v11 > 0 && v11 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v11;
        if ( v11 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;
// 43B1A2: using guessed type char buf[16];

//----- (000000000043B38A) ----------------------------------------------------
int goodG2B1_91()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( globalFive == 5 )
    v3 = 20;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (000000000043B45E) ----------------------------------------------------
int goodG2B2_91()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( globalFive == 5 )
    v3 = 20;
  result = globalFive;
  if ( globalFive == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (000000000043B526) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_14_good()
{
  goodB2G1_102();
  goodB2G2_102();
  goodG2B1_91();
  return goodG2B2_91();
}

//----- (000000000043B554) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_52b_badSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fgets_sleep_52c_badSink(a1);
}

//----- (000000000043B56B) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_52b_goodG2BSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fgets_sleep_52c_goodG2BSink(a1);
}

//----- (000000000043B582) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_52b_goodB2GSink(signed int a1)
{
  return CWE400_Resource_Exhaustion__fgets_sleep_52c_goodB2GSink(a1);
}

//----- (000000000043B599) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_32_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-70h]
  __int16 s; // [rsp+10h] [rbp-60h]
  uint16_t v3; // [rsp+12h] [rbp-5Eh]
  int v4; // [rsp+14h] [rbp-5Ch]
  int v5; // [rsp+2Ch] [rbp-44h]
  char *filename; // [rsp+30h] [rbp-40h]
  FILE *stream; // [rsp+38h] [rbp-38h]
  int v8; // [rsp+44h] [rbp-2Ch]
  int v9; // [rsp+48h] [rbp-28h]
  int fd; // [rsp+4Ch] [rbp-24h]
  int *v11; // [rsp+50h] [rbp-20h]
  int *v12; // [rsp+58h] [rbp-18h]
  unsigned __int64 i; // [rsp+60h] [rbp-10h]
  int v14; // [rsp+68h] [rbp-8h]
  int v15; // [rsp+6Ch] [rbp-4h]

  v12 = &v5;
  v11 = &v5;
  v5 = -1;
  v15 = -1;
  fd = -1;
  v14 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v14 = accept(fd, 0LL, 0LL);
      if ( v14 != -1 )
      {
        v9 = recv(v14, buf, 0xDuLL, 0);
        if ( v9 != -1 )
        {
          if ( v9 )
          {
            buf[v9] = 0;
            v15 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v14 != -1 )
    close(v14);
  *v12 = v15;
  v8 = *v11;
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v8;
    if ( v8 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 43B599: using guessed type char buf[16];

//----- (000000000043B77E) ----------------------------------------------------
int goodG2B_160()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-34h]
  char *filename; // [rsp+10h] [rbp-30h]
  FILE *s; // [rsp+18h] [rbp-28h]
  int v4; // [rsp+20h] [rbp-20h]
  int v5; // [rsp+24h] [rbp-1Ch]
  int *v6; // [rsp+28h] [rbp-18h]
  int *v7; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v7 = &v1;
  v6 = &v1;
  v5 = 20;
  v1 = 20;
  v4 = 20;
  i = 0LL;
  s = 0LL;
  filename = "output_bad.txt";
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v4;
    if ( v4 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  if ( s )
    result = fclose(s);
  return result;
}

//----- (000000000043B857) ----------------------------------------------------
int goodB2G_149()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-70h]
  __int16 s; // [rsp+10h] [rbp-60h]
  uint16_t v3; // [rsp+12h] [rbp-5Eh]
  int v4; // [rsp+14h] [rbp-5Ch]
  int v5; // [rsp+2Ch] [rbp-44h]
  char *filename; // [rsp+30h] [rbp-40h]
  FILE *stream; // [rsp+38h] [rbp-38h]
  int v8; // [rsp+44h] [rbp-2Ch]
  int v9; // [rsp+48h] [rbp-28h]
  int fd; // [rsp+4Ch] [rbp-24h]
  int *v11; // [rsp+50h] [rbp-20h]
  int *v12; // [rsp+58h] [rbp-18h]
  unsigned __int64 i; // [rsp+60h] [rbp-10h]
  int v14; // [rsp+68h] [rbp-8h]
  int v15; // [rsp+6Ch] [rbp-4h]

  v12 = &v5;
  v11 = &v5;
  v5 = -1;
  v15 = -1;
  fd = -1;
  v14 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v14 = accept(fd, 0LL, 0LL);
      if ( v14 != -1 )
      {
        v9 = recv(v14, buf, 0xDuLL, 0);
        if ( v9 != -1 )
        {
          if ( v9 )
          {
            buf[v9] = 0;
            v15 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v14 != -1 )
    close(v14);
  *v12 = v15;
  result = *v11;
  v8 = *v11;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v8 > 0 && v8 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 43B857: using guessed type char buf[16];

//----- (000000000043BA4C) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_32_good()
{
  goodG2B_160();
  return goodB2G_149();
}

//----- (000000000043BA66) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_05_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( staticTrue_5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = (unsigned int)staticTrue_5;
  if ( staticTrue_5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E184: using guessed type int staticTrue_5;
// 43BA66: using guessed type char buf[16];

//----- (000000000043BB88) ----------------------------------------------------
int goodB2G1_103()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( staticTrue_5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFalse_5;
  if ( staticFalse_5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E184: using guessed type int staticTrue_5;
// 68E2F0: using guessed type int staticFalse_5;
// 43BB88: using guessed type char buf[16];

//----- (000000000043BCC2) ----------------------------------------------------
__int64 goodB2G2_103()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( staticTrue_5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = (unsigned int)staticTrue_5;
  if ( staticTrue_5 )
  {
    i = 0LL;
    if ( v8 > 0 && v8 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v8;
        if ( v8 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 68E184: using guessed type int staticTrue_5;
// 43BCC2: using guessed type char buf[16];

//----- (000000000043BDF0) ----------------------------------------------------
__int64 goodG2B1_92()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( staticFalse_5 )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = (unsigned int)staticTrue_5;
  if ( staticTrue_5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E184: using guessed type int staticTrue_5;
// 68E2F0: using guessed type int staticFalse_5;

//----- (000000000043BE54) ----------------------------------------------------
__int64 goodG2B2_92()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( staticTrue_5 )
    v2 = 20;
  result = (unsigned int)staticTrue_5;
  if ( staticTrue_5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E184: using guessed type int staticTrue_5;

//----- (000000000043BEAC) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_05_good()
{
  goodB2G1_103();
  goodB2G2_103();
  goodG2B1_92();
  return goodG2B2_92();
}

//----- (000000000043BEDA) ----------------------------------------------------
__int64 __fastcall badSink_26(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000043BF13) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_41_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return badSink_26(v7);
}
// 43BF13: using guessed type char buf[16];

//----- (000000000043BFFB) ----------------------------------------------------
__int64 __fastcall goodG2BSink_26(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000043C034) ----------------------------------------------------
__int64 goodG2B_161()
{
  return goodG2BSink_26(20);
}

//----- (000000000043C056) ----------------------------------------------------
__int64 __fastcall goodB2GSink_20(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000043C09B) ----------------------------------------------------
__int64 goodB2G_150()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return goodB2GSink_20(v7);
}
// 43C09B: using guessed type char buf[16];

//----- (000000000043C183) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_41_good()
{
  goodB2G_150();
  return goodG2B_161();
}

//----- (000000000043C19D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_09_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    i = 0LL;
    s = 0LL;
    filename = "output_bad.txt";
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    if ( s )
      result = fclose(s);
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000043C279) ----------------------------------------------------
int goodB2G1_104()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000043C373) ----------------------------------------------------
int goodB2G2_104()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    i = 0LL;
    s = 0LL;
    filename = "output_good.txt";
    result = v1;
    if ( v1 > 0 )
    {
      result = v1;
      if ( v1 <= 20 )
      {
        s = fopen(filename, "w+");
        if ( !s )
          exit(1);
        for ( i = 0LL; ; ++i )
        {
          result = v1;
          if ( v1 <= i )
            break;
          if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
            exit(1);
        }
        if ( s )
          result = fclose(s);
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000043C462) ----------------------------------------------------
int goodG2B1_93()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000043C534) ----------------------------------------------------
int goodG2B2_93()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( GLOBAL_CONST_TRUE )
    v3 = 20;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000043C5FA) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_09_good()
{
  goodB2G1_104();
  goodB2G2_104();
  goodG2B1_93();
  return goodG2B2_93();
}

//----- (000000000043C628) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_64b_badSink(int *a1)
{
  FILE *s; // [rsp+20h] [rbp-20h]
  int v3; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v3 = *a1;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043C6DD) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_64b_goodG2BSink(int *a1)
{
  FILE *s; // [rsp+20h] [rbp-20h]
  int v3; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v3 = *a1;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043C792) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_64b_goodB2GSink(int *a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-20h]
  int v3; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  result = *a1;
  v3 = *a1;
  if ( *a1 > 0 && v3 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000043C857) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_fwrite_64b_badSink(&v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043C891) ----------------------------------------------------
int goodG2B_162()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__fscanf_fwrite_64b_goodG2BSink(&v1);
}

//----- (000000000043C8B5) ----------------------------------------------------
int goodB2G_151()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_fwrite_64b_goodB2GSink(&v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043C8EF) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_64_good()
{
  goodG2B_162();
  return goodB2G_151();
}

//----- (000000000043C909) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_67b_badSink(int a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043C9B2) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_67b_goodG2BSink(int a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043CA5B) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_67b_goodB2GSink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = a1;
  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000043CB14) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_65b_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000043CB4D) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_65b_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000043CB86) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_65b_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000043CBCB) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_22_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_sleep_22_badGlobal = 1;
  return CWE400_Resource_Exhaustion__connect_socket_sleep_22_badSink(v7);
}
// 68E2F4: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_22_badGlobal;
// 43CBCB: using guessed type char buf[16];

//----- (000000000043CCBD) ----------------------------------------------------
int goodB2G1_105()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodB2G1Global = 0;
  return CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodB2G1Sink(v7);
}
// 68E2F8: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodB2G1Global;
// 43CCBD: using guessed type char buf[16];

//----- (000000000043CDAF) ----------------------------------------------------
int goodB2G2_105()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodB2G2Global = 1;
  return CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodB2G2Sink(v7);
}
// 68E2FC: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodB2G2Global;
// 43CDAF: using guessed type char buf[16];

//----- (000000000043CEA1) ----------------------------------------------------
int goodG2B_163()
{
  CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodG2BGlobal = 1;
  return CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodG2BSink(0x14u);
}
// 68E300: using guessed type int CWE400_Resource_Exhaustion__connect_socket_sleep_22_goodG2BGlobal;

//----- (000000000043CECD) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_22_good()
{
  goodB2G1_105();
  goodB2G2_105();
  return goodG2B_163();
}

//----- (000000000043CEF1) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_32_bad()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  int v4; // [rsp+10h] [rbp-20h]
  __useconds_t useconds; // [rsp+14h] [rbp-1Ch]
  __useconds_t *v6; // [rsp+18h] [rbp-18h]
  int *v7; // [rsp+20h] [rbp-10h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v7 = &v4;
  v6 = (__useconds_t *)&v4;
  v4 = -1;
  v8 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v8 = atoi(s);
  else
    printLine("fgets() failed.");
  *v7 = v8;
  useconds = *v6;
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (000000000043CF8E) ----------------------------------------------------
int goodG2B_164()
{
  int v1; // [rsp+4h] [rbp-1Ch]
  __useconds_t useconds; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+Ch] [rbp-14h]
  int *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 20;
  v1 = 20;
  useconds = 20;
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000043CFE5) ----------------------------------------------------
int goodB2G_152()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  int v4; // [rsp+10h] [rbp-20h]
  __useconds_t useconds; // [rsp+14h] [rbp-1Ch]
  __useconds_t *v6; // [rsp+18h] [rbp-18h]
  int *v7; // [rsp+20h] [rbp-10h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v7 = &v4;
  v6 = (__useconds_t *)&v4;
  v4 = -1;
  v8 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v8 = atoi(s);
  else
    printLine("fgets() failed.");
  *v7 = v8;
  useconds = *v6;
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (000000000043D09D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_32_good()
{
  goodG2B_164();
  return goodB2G_152();
}

//----- (000000000043D0B7) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_03_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v7 = recv(v10, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v11;
    if ( v11 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 43D0B7: using guessed type char buf[16];

//----- (000000000043D271) ----------------------------------------------------
int goodB2G1_106()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v10 = result;
        if ( result != -1 )
        {
          result = recv(v10, buf, 0xDuLL, 0);
          v7 = result;
          if ( result != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              result = atoi(buf);
              v11 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v10 != -1 )
    result = close(v10);
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 43D271: using guessed type char buf[16];

//----- (000000000043D43B) ----------------------------------------------------
int goodB2G2_106()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v10 = result;
        if ( result != -1 )
        {
          result = recv(v10, buf, 0xDuLL, 0);
          v7 = result;
          if ( result != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              result = atoi(buf);
              v11 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v10 != -1 )
    result = close(v10);
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 43D43B: using guessed type char buf[16];

//----- (000000000043D605) ----------------------------------------------------
int goodG2B1_94()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043D6B3) ----------------------------------------------------
int goodG2B2_94()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043D761) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_03_good()
{
  goodB2G1_106();
  goodB2G2_106();
  goodG2B1_94();
  return goodG2B2_94();
}

//----- (000000000043D78F) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54c_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_54d_badSink(a1);
}

//----- (000000000043D7A6) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54c_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_54d_goodG2BSink(a1);
}

//----- (000000000043D7BD) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54c_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_54d_goodB2GSink(a1);
}

//----- (000000000043D7D4) ----------------------------------------------------
int __fastcall badSink_27(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000043D7F5) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_41_bad()
{
  __useconds_t v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return badSink_27(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043D82D) ----------------------------------------------------
int __fastcall goodG2BSink_27(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000043D84E) ----------------------------------------------------
int goodG2B_165()
{
  return goodG2BSink_27(0x14u);
}

//----- (000000000043D870) ----------------------------------------------------
int __fastcall goodB2GSink_21(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (000000000043D8AC) ----------------------------------------------------
int goodB2G_153()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return goodB2GSink_21(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043D8E4) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_41_good()
{
  goodB2G_153();
  return goodG2B_165();
}

//----- (000000000043D8FE) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_01_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  for ( i = 0LL; ; ++i )
  {
    result = v5;
    if ( v5 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000043D988) ----------------------------------------------------
__int64 goodG2B_166()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000043D9CC) ----------------------------------------------------
int goodB2G_154()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000043DA62) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_for_loop_01_good()
{
  goodG2B_166();
  return goodB2G_154();
}

//----- (000000000043DA7C) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_52_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_sleep_52b_badSink(v4);
}

//----- (000000000043DAE4) ----------------------------------------------------
int goodG2B_167()
{
  return CWE400_Resource_Exhaustion__fgets_sleep_52b_goodG2BSink(0x14u);
}

//----- (000000000043DB06) ----------------------------------------------------
int goodB2G_155()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_sleep_52b_goodB2GSink(v4);
}

//----- (000000000043DB6E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_52_good()
{
  goodG2B_167();
  return goodB2G_155();
}

//----- (000000000043DB88) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_04_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v7 = recv(v10, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v11;
    if ( v11 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 43DB88: using guessed type char buf[16];

//----- (000000000043DD5C) ----------------------------------------------------
int goodB2G1_107()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v7 = recv(v10, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  result = 0;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 43DD5C: using guessed type char buf[16];

//----- (000000000043DF4B) ----------------------------------------------------
int goodB2G2_107()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v7 = recv(v10, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  result = 1;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 43DF4B: using guessed type char buf[16];

//----- (000000000043E12F) ----------------------------------------------------
int goodG2B1_95()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043E1FF) ----------------------------------------------------
int goodG2B2_95()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043E2C3) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_04_good()
{
  goodB2G1_107();
  goodB2G2_107();
  goodG2B1_95();
  return goodG2B2_95();
}

//----- (000000000043E2F1) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_31_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+20h] [rbp-30h]
  FILE *stream; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+30h] [rbp-20h]
  int v8; // [rsp+34h] [rbp-1Ch]
  int v9; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v12; // [rsp+48h] [rbp-8h]
  int v13; // [rsp+4Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v9 = recv(v12, buf, 0xDuLL, 0);
        if ( v9 != -1 )
        {
          if ( v9 )
          {
            buf[v9] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v8 = v13;
  v7 = v13;
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v7;
    if ( v7 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 43E2F1: using guessed type char buf[16];

//----- (000000000043E4B7) ----------------------------------------------------
int goodG2B_168()
{
  FILE *s; // [rsp+10h] [rbp-20h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043E571) ----------------------------------------------------
int goodB2G_156()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+20h] [rbp-30h]
  FILE *stream; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+30h] [rbp-20h]
  int v8; // [rsp+34h] [rbp-1Ch]
  int v9; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v12; // [rsp+48h] [rbp-8h]
  int v13; // [rsp+4Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v9 = recv(v12, buf, 0xDuLL, 0);
        if ( v9 != -1 )
        {
          if ( v9 )
          {
            buf[v9] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v8 = v13;
  result = v13;
  v7 = v13;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v13 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 43E571: using guessed type char buf[16];

//----- (000000000043E747) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_31_good()
{
  goodG2B_168();
  return goodB2G_156();
}

//----- (000000000043E761) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_64b_badSink(int *a1)
{
  FILE *s; // [rsp+20h] [rbp-20h]
  int v3; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v3 = *a1;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043E816) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_64b_goodG2BSink(int *a1)
{
  FILE *s; // [rsp+20h] [rbp-20h]
  int v3; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v3 = *a1;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043E8CB) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_64b_goodB2GSink(int *a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-20h]
  int v3; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  result = *a1;
  v3 = *a1;
  if ( *a1 > 0 && v3 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000043E990) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54d_badSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_54e_badSink(a1);
}

//----- (000000000043E9A7) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54d_goodG2BSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_54e_goodG2BSink(a1);
}

//----- (000000000043E9BE) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_54d_goodB2GSink(signed int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_54e_goodB2GSink(a1);
}

//----- (000000000043E9D5) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_14_bad()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &useconds);
  result = globalFive;
  if ( globalFive == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1A8: using guessed type int globalFive;

//----- (000000000043EA2D) ----------------------------------------------------
int goodB2G1_108()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &useconds);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1A8: using guessed type int globalFive;

//----- (000000000043EAAE) ----------------------------------------------------
int goodB2G2_108()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &useconds);
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1A8: using guessed type int globalFive;

//----- (000000000043EB23) ----------------------------------------------------
int goodG2B1_96()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( globalFive == 5 )
    useconds = 20;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (000000000043EB71) ----------------------------------------------------
int goodG2B2_96()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( globalFive == 5 )
    useconds = 20;
  result = globalFive;
  if ( globalFive == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (000000000043EBB3) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_14_good()
{
  goodB2G1_108();
  goodB2G2_108();
  goodG2B1_96();
  return goodG2B2_96();
}

//----- (000000000043EBE1) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_63b_badSink(int *a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v3 = *a1;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043EC8E) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_63b_goodG2BSink(int *a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v3 = *a1;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000043ED3B) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_63b_goodB2GSink(int *a1)
{
  int result; // eax
  FILE *s; // [rsp+18h] [rbp-18h]
  int v3; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = *a1;
  v3 = *a1;
  if ( *a1 > 0 && v3 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000043EDF8) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_12_bad()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%d", &useconds);
  else
    useconds = 20;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  else if ( (int)useconds <= 0 || (int)useconds > 2000 )
  {
    result = printLine("Sleep time too long");
  }
  else
  {
    usleep(useconds);
    result = printLine("Sleep time OK");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043EE92) ----------------------------------------------------
int goodB2G_157()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%d", &useconds);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  else if ( (int)useconds <= 0 || (int)useconds > 2000 )
  {
    result = printLine("Sleep time too long");
  }
  else
  {
    usleep(useconds);
    result = printLine("Sleep time OK");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043EF5F) ----------------------------------------------------
int goodG2B_169()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000043EFC6) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_12_good()
{
  goodB2G_157();
  return goodG2B_169();
}

//----- (000000000043EFE0) ----------------------------------------------------
__int64 staticReturnsTrue_6()
{
  return 1LL;
}

//----- (000000000043EFEB) ----------------------------------------------------
__int64 staticReturnsFalse_6()
{
  return 0LL;
}

//----- (000000000043EFF6) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_08_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( (unsigned int)staticReturnsTrue_6() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticReturnsTrue_6();
  if ( result )
  {
    i = 0LL;
    s = 0LL;
    filename = "output_bad.txt";
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    if ( s )
      result = fclose(s);
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043F0DA) ----------------------------------------------------
int goodB2G1_109()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( (unsigned int)staticReturnsTrue_6() )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)staticReturnsFalse_6() )
    return printLine("Benign, fixed string");
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043F1DC) ----------------------------------------------------
int goodB2G2_109()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( (unsigned int)staticReturnsTrue_6() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticReturnsTrue_6();
  if ( result )
  {
    i = 0LL;
    s = 0LL;
    filename = "output_good.txt";
    result = v1;
    if ( v1 > 0 )
    {
      result = v1;
      if ( v1 <= 20 )
      {
        s = fopen(filename, "w+");
        if ( !s )
          exit(1);
        for ( i = 0LL; ; ++i )
        {
          result = v1;
          if ( v1 <= i )
            break;
          if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
            exit(1);
        }
        if ( s )
          result = fclose(s);
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000043F2D3) ----------------------------------------------------
int goodG2B1_97()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( (unsigned int)staticReturnsFalse_6() )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = staticReturnsTrue_6();
  if ( result )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000043F3AD) ----------------------------------------------------
int goodG2B2_97()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( (unsigned int)staticReturnsTrue_6() )
    v3 = 20;
  result = staticReturnsTrue_6();
  if ( result )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000043F47B) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_08_good()
{
  goodB2G1_109();
  goodB2G2_109();
  goodG2B1_97();
  return goodG2B2_97();
}

//----- (000000000043F4A9) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_13_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;
// 43F4A9: using guessed type char buf[16];

//----- (000000000043F5B5) ----------------------------------------------------
int goodB2G1_110()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;
// 43F5B5: using guessed type char buf[16];

//----- (000000000043F6E8) ----------------------------------------------------
int goodB2G2_110()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;
// 43F6E8: using guessed type char buf[16];

//----- (000000000043F80F) ----------------------------------------------------
int goodG2B1_98()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    useconds = 20;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043F85D) ----------------------------------------------------
int goodG2B2_98()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    useconds = 20;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043F89F) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_13_good()
{
  goodB2G1_110();
  goodB2G2_110();
  goodG2B1_98();
  return goodG2B2_98();
}

//----- (000000000043F8CD) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_67_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9;
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_67b_badSink(v9);
}
// 43F8CD: using guessed type char buf[16];

//----- (000000000043FA01) ----------------------------------------------------
int goodG2B_170()
{
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_67b_goodG2BSink(20);
}

//----- (000000000043FA29) ----------------------------------------------------
int goodB2G_158()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9;
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_67b_goodB2GSink(v9);
}
// 43FA29: using guessed type char buf[16];

//----- (000000000043FB5D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_67_good()
{
  goodG2B_170();
  return goodB2G_158();
}

//----- (000000000043FB77) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_65_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  __int64 (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = CWE400_Resource_Exhaustion__listen_socket_for_loop_65b_badSink;
  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return v7(v9);
}
// 43FB77: using guessed type char buf[16];

//----- (000000000043FCAE) ----------------------------------------------------
__int64 goodG2B_171()
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_65b_goodG2BSink(20);
}

//----- (000000000043FCD9) ----------------------------------------------------
__int64 goodB2G_159()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  __int64 (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = CWE400_Resource_Exhaustion__listen_socket_for_loop_65b_goodB2GSink;
  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return v7(v9);
}
// 43FCD9: using guessed type char buf[16];

//----- (000000000043FE10) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_65_good()
{
  goodG2B_171();
  return goodB2G_159();
}

//----- (000000000043FE2A) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_67b_badSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000043FE51) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_67b_goodG2BSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000043FE78) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_67b_goodB2GSink(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (000000000043FEBA) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_09_bad()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &useconds);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000043FF10) ----------------------------------------------------
int goodB2G1_111()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &useconds);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000043FF8F) ----------------------------------------------------
int goodB2G2_111()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &useconds);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000440002) ----------------------------------------------------
int goodG2B1_99()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    useconds = 20;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000044004E) ----------------------------------------------------
int goodG2B2_99()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( GLOBAL_CONST_TRUE )
    useconds = 20;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000044008E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_09_good()
{
  goodB2G1_111();
  goodB2G2_111();
  goodG2B1_99();
  return goodG2B2_99();
}

//----- (00000000004400BC) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_66_bad()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE400_Resource_Exhaustion__fgets_sleep_66b_badSink((__int64)&v4);
}

//----- (000000000044012C) ----------------------------------------------------
int goodG2B_172()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 20;
  v2 = 20;
  return CWE400_Resource_Exhaustion__fgets_sleep_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000440156) ----------------------------------------------------
int goodB2G_160()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE400_Resource_Exhaustion__fgets_sleep_66b_goodB2GSink((__int64)&v4);
}

//----- (00000000004401C6) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_66_good()
{
  goodG2B_172();
  return goodB2G_160();
}

//----- (00000000004401E0) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_09_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = (unsigned int)GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000044027E) ----------------------------------------------------
int goodB2G1_112()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FALSE;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000440334) ----------------------------------------------------
__int64 goodB2G2_112()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = (unsigned int)GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    i = 0LL;
    if ( v5 > 0 && v5 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v5;
        if ( v5 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004403DE) ----------------------------------------------------
__int64 goodG2B1_100()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = (unsigned int)GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000440442) ----------------------------------------------------
__int64 goodG2B2_100()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( GLOBAL_CONST_TRUE )
    v2 = 20;
  result = (unsigned int)GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000044049A) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_09_good()
{
  goodB2G1_112();
  goodB2G2_112();
  goodG2B1_100();
  return goodG2B2_100();
}

//----- (00000000004404C8) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badSink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badGlobal;
  if ( CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badGlobal )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E2C4: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badGlobal;

//----- (0000000000440579) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodB2G1Sink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodB2G1Global;
  if ( CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E2C8: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodB2G1Global;

//----- (0000000000440645) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodB2G2Sink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodB2G2Global;
  if ( CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodB2G2Global && a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E2CC: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodB2G2Global;

//----- (0000000000440706) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodG2BSink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodG2BGlobal;
  if ( CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodG2BGlobal )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E2D0: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_22_goodG2BGlobal;

//----- (00000000004407B7) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54e_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004407F0) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54e_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000440829) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54e_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000044086E) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_66_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_66b_badSink((__int64)&v5);
}
// 44086E: using guessed type char buf[16];

//----- (000000000044095E) ----------------------------------------------------
__int64 goodG2B_173()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 20;
  v2 = 20;
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000440988) ----------------------------------------------------
__int64 goodB2G_161()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_66b_goodB2GSink((__int64)&v5);
}
// 440988: using guessed type char buf[16];

//----- (0000000000440A78) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_66_good()
{
  goodG2B_173();
  return goodB2G_161();
}

//----- (0000000000440A92) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_51_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_sleep_51b_badSink(v4);
}

//----- (0000000000440AFA) ----------------------------------------------------
int goodG2B_174()
{
  return CWE400_Resource_Exhaustion__fgets_sleep_51b_goodG2BSink(0x14u);
}

//----- (0000000000440B1C) ----------------------------------------------------
int goodB2G_162()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_sleep_51b_goodB2GSink(v4);
}

//----- (0000000000440B84) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_51_good()
{
  goodG2B_174();
  return goodB2G_162();
}

//----- (0000000000440B9E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_63_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_63b_badSink(&v5);
}
// 440B9E: using guessed type char buf[16];

//----- (0000000000440C88) ----------------------------------------------------
int goodG2B_175()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_63b_goodG2BSink(&v1);
}

//----- (0000000000440CAC) ----------------------------------------------------
int goodB2G_163()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_63b_goodB2GSink(&v5);
}
// 440CAC: using guessed type char buf[16];

//----- (0000000000440D96) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_63_good()
{
  goodG2B_175();
  return goodB2G_163();
}

//----- (0000000000440DB0) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_04_bad()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, &unk_46FC3C, &useconds);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000440E04) ----------------------------------------------------
int goodB2G1_113()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, &unk_46FC3C, &useconds);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000440E81) ----------------------------------------------------
int goodB2G2_113()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, &unk_46FC3C, &useconds);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000440EF2) ----------------------------------------------------
int goodG2B1_101()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000440F3C) ----------------------------------------------------
int goodG2B2_101()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000440F7A) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_04_good()
{
  goodB2G1_113();
  goodB2G2_113();
  goodG2B1_101();
  return goodG2B2_101();
}

//----- (0000000000440FA8) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_31_bad()
{
  __useconds_t v1; // [rsp+4h] [rbp-Ch]
  __useconds_t useconds; // [rsp+8h] [rbp-8h]
  __useconds_t v3; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  v3 = v1;
  useconds = v1;
  usleep(v1);
  return printLine("Sleep time possibly too long");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000440FF6) ----------------------------------------------------
int goodG2B_176()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044102E) ----------------------------------------------------
int goodB2G_164()
{
  int v1; // [rsp+4h] [rbp-Ch]
  __useconds_t useconds; // [rsp+8h] [rbp-8h]
  int v3; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  v3 = v1;
  useconds = v1;
  if ( v1 <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000441097) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_31_good()
{
  goodG2B_176();
  return goodB2G_164();
}

//----- (00000000004410B1) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_68b_badSink()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__listen_socket_for_loop_68_badData;
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 68E420: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_68_badData;

//----- (00000000004410F0) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_68b_goodG2BSink()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__listen_socket_for_loop_68_goodG2BData;
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 68E424: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_68_goodG2BData;

//----- (000000000044112F) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_68b_goodB2GSink()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__listen_socket_for_loop_68_goodB2GData;
  v1 = CWE400_Resource_Exhaustion__listen_socket_for_loop_68_goodB2GData;
  if ( CWE400_Resource_Exhaustion__listen_socket_for_loop_68_goodB2GData > 0
    && CWE400_Resource_Exhaustion__listen_socket_for_loop_68_goodB2GData <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E41C: using guessed type int CWE400_Resource_Exhaustion__listen_socket_for_loop_68_goodB2GData;

//----- (000000000044117A) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_65_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  __int64 (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE400_Resource_Exhaustion__connect_socket_for_loop_65b_badSink;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v7(v8);
}
// 44117A: using guessed type char buf[16];

//----- (000000000044126B) ----------------------------------------------------
__int64 goodG2B_177()
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_65b_goodG2BSink(20);
}

//----- (0000000000441296) ----------------------------------------------------
__int64 goodB2G_165()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  __int64 (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE400_Resource_Exhaustion__connect_socket_for_loop_65b_goodB2GSink;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v7(v8);
}
// 441296: using guessed type char buf[16];

//----- (0000000000441387) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_65_good()
{
  goodG2B_177();
  return goodB2G_165();
}

//----- (00000000004413A1) ----------------------------------------------------
int __fastcall badSink_28(__useconds_t a1)
{
  int result; // eax

  result = badStatic_5;
  if ( badStatic_5 )
  {
    usleep(a1);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E304: using guessed type int badStatic_5;

//----- (00000000004413CC) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_21_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  badStatic_5 = 1;
  return badSink_28(v7);
}
// 68E304: using guessed type int badStatic_5;
// 4413CC: using guessed type char buf[16];

//----- (00000000004414BE) ----------------------------------------------------
int __fastcall goodB2G1Sink_5(signed int a1)
{
  if ( goodB2G1Static_5 )
    return printLine("Benign, fixed string");
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}
// 68E308: using guessed type int goodB2G1Static_5;

//----- (0000000000441510) ----------------------------------------------------
int goodB2G1_114()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G1Static_5 = 0;
  return goodB2G1Sink_5(v7);
}
// 68E308: using guessed type int goodB2G1Static_5;
// 441510: using guessed type char buf[16];

//----- (0000000000441602) ----------------------------------------------------
int __fastcall goodB2G2Sink_5(signed int a1)
{
  int result; // eax

  result = goodB2G2Static_5;
  if ( goodB2G2Static_5 )
  {
    if ( a1 <= 0 || a1 > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(a1);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 68E30C: using guessed type int goodB2G2Static_5;

//----- (0000000000441648) ----------------------------------------------------
int goodB2G2_114()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G2Static_5 = 1;
  return goodB2G2Sink_5(v7);
}
// 68E30C: using guessed type int goodB2G2Static_5;
// 441648: using guessed type char buf[16];

//----- (000000000044173A) ----------------------------------------------------
int __fastcall goodG2BSink_28(__useconds_t a1)
{
  int result; // eax

  result = goodG2BStatic_5;
  if ( goodG2BStatic_5 )
  {
    usleep(a1);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E310: using guessed type int goodG2BStatic_5;

//----- (0000000000441765) ----------------------------------------------------
int goodG2B_178()
{
  goodG2BStatic_5 = 1;
  return goodG2BSink_28(0x14u);
}
// 68E310: using guessed type int goodG2BStatic_5;

//----- (0000000000441791) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_21_good()
{
  goodB2G1_114();
  goodB2G2_114();
  return goodG2B_178();
}

//----- (00000000004417B5) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_54c_badSink(a1);
}

//----- (00000000004417CC) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_54c_goodG2BSink(a1);
}

//----- (00000000004417E3) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_54b_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_54c_goodB2GSink(a1);
}

//----- (00000000004417FA) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_67_bad()
{
  __useconds_t v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_sleep_67b_badSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000441838) ----------------------------------------------------
int goodG2B_179()
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_67b_goodG2BSink(0x14u);
}

//----- (0000000000441860) ----------------------------------------------------
int goodB2G_166()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_sleep_67b_goodB2GSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044189E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_67_good()
{
  goodG2B_179();
  return goodB2G_166();
}

//----- (00000000004418B8) ----------------------------------------------------
__int64 staticReturnsTrue_7()
{
  return 1LL;
}

//----- (00000000004418C3) ----------------------------------------------------
__int64 staticReturnsFalse_7()
{
  return 0LL;
}

//----- (00000000004418CE) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_08_bad()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)staticReturnsTrue_7() )
    __isoc99_fscanf(stdin, "%d", &useconds);
  result = staticReturnsTrue_7();
  if ( result )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044192C) ----------------------------------------------------
int goodB2G1_115()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)staticReturnsTrue_7() )
    __isoc99_fscanf(stdin, "%d", &useconds);
  if ( (unsigned int)staticReturnsFalse_7() )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004419B3) ----------------------------------------------------
int goodB2G2_115()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)staticReturnsTrue_7() )
    __isoc99_fscanf(stdin, "%d", &useconds);
  result = staticReturnsTrue_7();
  if ( result )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000441A2E) ----------------------------------------------------
int goodG2B1_102()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)staticReturnsFalse_7() )
    printLine("Benign, fixed string");
  else
    useconds = 20;
  result = staticReturnsTrue_7();
  if ( result )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}

//----- (0000000000441A82) ----------------------------------------------------
int goodG2B2_102()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)staticReturnsTrue_7() )
    useconds = 20;
  result = staticReturnsTrue_7();
  if ( result )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}

//----- (0000000000441ACA) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_08_good()
{
  goodB2G1_115();
  goodB2G2_115();
  goodG2B1_102();
  return goodG2B2_102();
}

//----- (0000000000441AF8) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_04_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  for ( i = 0LL; ; ++i )
  {
    result = v5;
    if ( v5 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000441B94) ----------------------------------------------------
__int64 goodB2G1_116()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  result = 0LL;
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000441C48) ----------------------------------------------------
__int64 goodB2G2_116()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  result = 1LL;
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000441CF0) ----------------------------------------------------
__int64 goodG2B1_103()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000441D52) ----------------------------------------------------
__int64 goodG2B2_103()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000441DA8) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_04_good()
{
  goodB2G1_116();
  goodB2G2_116();
  goodG2B1_103();
  return goodG2B2_103();
}

//----- (0000000000441DD6) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_53_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_sleep_53b_badSink(v7);
}
// 441DD6: using guessed type char buf[16];

//----- (0000000000441EBE) ----------------------------------------------------
int goodG2B_180()
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_53b_goodG2BSink(0x14u);
}

//----- (0000000000441EE0) ----------------------------------------------------
int goodB2G_167()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_sleep_53b_goodB2GSink(v7);
}
// 441EE0: using guessed type char buf[16];

//----- (0000000000441FC8) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_53_good()
{
  goodG2B_180();
  return goodB2G_167();
}

//----- (0000000000441FE2) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_22_badSink(__useconds_t a1)
{
  int result; // eax

  result = CWE400_Resource_Exhaustion__fscanf_sleep_22_badGlobal;
  if ( CWE400_Resource_Exhaustion__fscanf_sleep_22_badGlobal )
  {
    usleep(a1);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E318: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_22_badGlobal;

//----- (000000000044200D) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_22_goodB2G1Sink(signed int a1)
{
  if ( CWE400_Resource_Exhaustion__fscanf_sleep_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}
// 68E31C: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_22_goodB2G1Global;

//----- (000000000044205F) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_22_goodB2G2Sink(signed int a1)
{
  int result; // eax

  result = CWE400_Resource_Exhaustion__fscanf_sleep_22_goodB2G2Global;
  if ( CWE400_Resource_Exhaustion__fscanf_sleep_22_goodB2G2Global )
  {
    if ( a1 <= 0 || a1 > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(a1);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 68E320: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_22_goodB2G2Global;

//----- (00000000004420A5) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_22_goodG2BSink(__useconds_t a1)
{
  int result; // eax

  result = CWE400_Resource_Exhaustion__fscanf_sleep_22_goodG2BGlobal;
  if ( CWE400_Resource_Exhaustion__fscanf_sleep_22_goodG2BGlobal )
  {
    usleep(a1);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E324: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_22_goodG2BGlobal;

//----- (00000000004420D0) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_18_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}
// 4420D0: using guessed type char buf[16];

//----- (00000000004421C4) ----------------------------------------------------
int goodB2G_168()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 4421C4: using guessed type char buf[16];

//----- (00000000004422D3) ----------------------------------------------------
int goodG2B_181()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000442301) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_18_good()
{
  goodB2G_168();
  return goodG2B_181();
}

//----- (000000000044231B) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_52c_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000442354) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_52c_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000044238D) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_52c_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (00000000004423D2) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_31_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+14h] [rbp-Ch]
  int v5; // [rsp+18h] [rbp-8h]
  int v6; // [rsp+1Ch] [rbp-4h]

  v6 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  useconds = v6;
  usleep(v6);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000442450) ----------------------------------------------------
int goodG2B_182()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000442488) ----------------------------------------------------
int goodB2G_169()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+14h] [rbp-Ch]
  int v5; // [rsp+18h] [rbp-8h]
  int v6; // [rsp+1Ch] [rbp-4h]

  v6 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  useconds = v6;
  if ( v6 <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (0000000000442521) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_31_good()
{
  goodG2B_182();
  return goodB2G_169();
}

//----- (000000000044253B) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_66b_badSink(__int64 a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = *(_DWORD *)(a1 + 8);
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000044257F) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_66b_goodG2BSink(__int64 a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = *(_DWORD *)(a1 + 8);
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004425C3) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_66b_goodB2GSink(__int64 a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = *(unsigned int *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 > 0 && v2 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000442613) ----------------------------------------------------
void CWE400_Resource_Exhaustion__connect_socket_fwrite_17_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v2; // [rsp+12h] [rbp-3Eh]
  in_addr_t v3; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+20h] [rbp-30h]
  FILE *stream; // [rsp+28h] [rbp-28h]
  int v6; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  unsigned __int64 k; // [rsp+38h] [rbp-18h]
  int v9; // [rsp+44h] [rbp-Ch]
  int j; // [rsp+48h] [rbp-8h]
  int i; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = inet_addr("127.0.0.1");
      v2 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    k = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( k = 0LL; v9 > k; ++k )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      fclose(stream);
  }
}
// 442613: using guessed type char buf[16];

//----- (00000000004427BB) ----------------------------------------------------
void goodB2G_170()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v2; // [rsp+12h] [rbp-3Eh]
  in_addr_t v3; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+20h] [rbp-30h]
  FILE *stream; // [rsp+28h] [rbp-28h]
  int v6; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  unsigned __int64 k; // [rsp+38h] [rbp-18h]
  int v9; // [rsp+44h] [rbp-Ch]
  int j; // [rsp+48h] [rbp-8h]
  int i; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = inet_addr("127.0.0.1");
      v2 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v6 = recv(fd, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    k = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v9 > 0 && v9 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( k = 0LL; v9 > k; ++k )
      {
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        fclose(stream);
    }
  }
}
// 4427BB: using guessed type char buf[16];

//----- (0000000000442973) ----------------------------------------------------
void goodG2B_183()
{
  FILE *s; // [rsp+10h] [rbp-20h]
  unsigned __int64 k; // [rsp+18h] [rbp-18h]
  int v2; // [rsp+24h] [rbp-Ch]
  int j; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v2 = -1;
  for ( i = 0; i <= 0; ++i )
    v2 = 20;
  for ( j = 0; j <= 0; ++j )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( k = 0LL; v2 > k; ++k )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (0000000000442A4E) ----------------------------------------------------
void CWE400_Resource_Exhaustion__connect_socket_fwrite_17_good()
{
  goodB2G_170();
  goodG2B_183();
}

//----- (0000000000442A68) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_05_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( staticTrue_6 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = (unsigned int)staticTrue_6;
  if ( staticTrue_6 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E188: using guessed type int staticTrue_6;

//----- (0000000000442AD6) ----------------------------------------------------
int goodB2G1_117()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( staticTrue_6 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( staticFalse_6 )
    return printLine("Benign, fixed string");
  i = 0LL;
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E188: using guessed type int staticTrue_6;
// 68E314: using guessed type int staticFalse_6;

//----- (0000000000442B5F) ----------------------------------------------------
__int64 goodB2G2_117()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( staticTrue_6 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = (unsigned int)staticTrue_6;
  if ( staticTrue_6 )
  {
    i = 0LL;
    result = v1;
    if ( (int)v1 > 0 )
    {
      result = v1;
      if ( (int)v1 <= 20 )
      {
        for ( i = 0LL; ; ++i )
        {
          result = (int)v1;
          if ( (int)v1 <= i )
            break;
          printLine("Hello");
        }
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E188: using guessed type int staticTrue_6;

//----- (0000000000442BDC) ----------------------------------------------------
__int64 goodG2B1_104()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( staticFalse_6 )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = (unsigned int)staticTrue_6;
  if ( staticTrue_6 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E188: using guessed type int staticTrue_6;
// 68E314: using guessed type int staticFalse_6;

//----- (0000000000442C40) ----------------------------------------------------
__int64 goodG2B2_104()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( staticTrue_6 )
    v2 = 20;
  result = (unsigned int)staticTrue_6;
  if ( staticTrue_6 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E188: using guessed type int staticTrue_6;

//----- (0000000000442C98) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_05_good()
{
  goodB2G1_117();
  goodB2G2_117();
  goodG2B1_104();
  return goodG2B2_104();
}

//----- (0000000000442CC6) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_54_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_for_loop_54b_badSink(v4);
}

//----- (0000000000442D2E) ----------------------------------------------------
__int64 goodG2B_184()
{
  return CWE400_Resource_Exhaustion__fgets_for_loop_54b_goodG2BSink(20);
}

//----- (0000000000442D50) ----------------------------------------------------
__int64 goodB2G_171()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_for_loop_54b_goodB2GSink(v4);
}

//----- (0000000000442DB8) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_54_good()
{
  goodG2B_184();
  return goodB2G_171();
}

//----- (0000000000442DD2) ----------------------------------------------------
__int64 __fastcall badSink_29(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000442E0B) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_41_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return badSink_29(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000442E43) ----------------------------------------------------
__int64 __fastcall goodG2BSink_29(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000442E7C) ----------------------------------------------------
__int64 goodG2B_185()
{
  return goodG2BSink_29(20);
}

//----- (0000000000442E9E) ----------------------------------------------------
__int64 __fastcall goodB2GSink_22(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000442EE3) ----------------------------------------------------
__int64 goodB2G_172()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return goodB2GSink_22(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000442F1B) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_41_good()
{
  goodB2G_172();
  return goodG2B_185();
}

//----- (0000000000442F35) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_13_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;
// 442F35: using guessed type char buf[16];

//----- (000000000044310D) ----------------------------------------------------
int goodB2G1_118()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;
// 44310D: using guessed type char buf[16];

//----- (0000000000443300) ----------------------------------------------------
int goodB2G2_118()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v10 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v10 = accept(fd, 0LL, 0LL);
        if ( v10 != -1 )
        {
          v7 = recv(v10, buf, 0xDuLL, 0);
          if ( v7 != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              v11 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v10 != -1 )
      close(v10);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v11 > 0 && v11 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v11;
        if ( v11 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;
// 443300: using guessed type char buf[16];

//----- (00000000004434E8) ----------------------------------------------------
int goodG2B1_105()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v3 = 20;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004435BC) ----------------------------------------------------
int goodG2B2_105()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v3 = 20;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000443684) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_13_good()
{
  goodB2G1_118();
  goodB2G2_118();
  goodG2B1_105();
  return goodG2B2_105();
}

//----- (00000000004436B2) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_53d_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004436EB) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_53d_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000443724) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_53d_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000443769) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_32_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-50h]
  int v2; // [rsp+8h] [rbp-48h]
  __int16 v3; // [rsp+Ch] [rbp-44h]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+18h] [rbp-38h]
  FILE *stream; // [rsp+20h] [rbp-30h]
  int v7; // [rsp+2Ch] [rbp-24h]
  int *v8; // [rsp+30h] [rbp-20h]
  int *v9; // [rsp+38h] [rbp-18h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v9 = &v4;
  v8 = &v4;
  v4 = -1;
  v11 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v11 = atoi(s);
  else
    printLine("fgets() failed.");
  *v9 = v11;
  v7 = *v8;
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v7;
    if ( v7 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}

//----- (0000000000443888) ----------------------------------------------------
int goodG2B_186()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-34h]
  char *filename; // [rsp+10h] [rbp-30h]
  FILE *s; // [rsp+18h] [rbp-28h]
  int v4; // [rsp+20h] [rbp-20h]
  int v5; // [rsp+24h] [rbp-1Ch]
  int *v6; // [rsp+28h] [rbp-18h]
  int *v7; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v7 = &v1;
  v6 = &v1;
  v5 = 20;
  v1 = 20;
  v4 = 20;
  i = 0LL;
  s = 0LL;
  filename = "output_bad.txt";
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v4;
    if ( v4 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  if ( s )
    result = fclose(s);
  return result;
}

//----- (0000000000443961) ----------------------------------------------------
int goodB2G_173()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-50h]
  int v2; // [rsp+8h] [rbp-48h]
  __int16 v3; // [rsp+Ch] [rbp-44h]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+18h] [rbp-38h]
  FILE *stream; // [rsp+20h] [rbp-30h]
  int v7; // [rsp+2Ch] [rbp-24h]
  int *v8; // [rsp+30h] [rbp-20h]
  int *v9; // [rsp+38h] [rbp-18h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v9 = &v4;
  v8 = &v4;
  v4 = -1;
  v11 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v11 = atoi(s);
  else
    printLine("fgets() failed.");
  *v9 = v11;
  result = *v8;
  v7 = *v8;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (0000000000443A90) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_32_good()
{
  goodG2B_186();
  return goodB2G_173();
}

//----- (0000000000443AAA) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_64b_badSink(__useconds_t *a1)
{
  usleep(*a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000443ADD) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_64b_goodG2BSink(__useconds_t *a1)
{
  usleep(*a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000443B10) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_64b_goodB2GSink(signed int *a1)
{
  signed int useconds; // [rsp+14h] [rbp-Ch]

  useconds = *a1;
  if ( *a1 <= 0 || useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (0000000000443B5E) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54d_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_fwrite_54e_badSink(a1);
}

//----- (0000000000443B75) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54d_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_fwrite_54e_goodG2BSink(a1);
}

//----- (0000000000443B8C) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54d_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__fscanf_fwrite_54e_goodB2GSink(a1);
}

//----- (0000000000443BA3) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_22_bad()
{
  __useconds_t v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_sleep_22_badGlobal = 1;
  return CWE400_Resource_Exhaustion__fscanf_sleep_22_badSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E318: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_22_badGlobal;

//----- (0000000000443BE5) ----------------------------------------------------
int goodB2G1_119()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_sleep_22_goodB2G1Global = 0;
  return CWE400_Resource_Exhaustion__fscanf_sleep_22_goodB2G1Sink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E31C: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_22_goodB2G1Global;

//----- (0000000000443C27) ----------------------------------------------------
int goodB2G2_119()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_sleep_22_goodB2G2Global = 1;
  return CWE400_Resource_Exhaustion__fscanf_sleep_22_goodB2G2Sink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E320: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_22_goodB2G2Global;

//----- (0000000000443C69) ----------------------------------------------------
int goodG2B_187()
{
  CWE400_Resource_Exhaustion__fscanf_sleep_22_goodG2BGlobal = 1;
  return CWE400_Resource_Exhaustion__fscanf_sleep_22_goodG2BSink(0x14u);
}
// 68E324: using guessed type int CWE400_Resource_Exhaustion__fscanf_sleep_22_goodG2BGlobal;

//----- (0000000000443C95) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_22_good()
{
  goodB2G1_119();
  goodB2G2_119();
  return goodG2B_187();
}

//----- (0000000000443CB9) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_53_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_53b_badSink(v8);
}
// 443CB9: using guessed type char buf[16];

//----- (0000000000443DE7) ----------------------------------------------------
__int64 goodG2B_188()
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_53b_goodG2BSink(20);
}

//----- (0000000000443E09) ----------------------------------------------------
__int64 goodB2G_174()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_53b_goodB2GSink(v8);
}
// 443E09: using guessed type char buf[16];

//----- (0000000000443F37) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_53_good()
{
  goodG2B_188();
  return goodB2G_174();
}

//----- (0000000000443F51) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_61_bad()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = CWE400_Resource_Exhaustion__fscanf_sleep_61b_badSource(0xFFFFFFFF);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000443F83) ----------------------------------------------------
int goodG2B_189()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = CWE400_Resource_Exhaustion__fscanf_sleep_61b_goodG2BSource();
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000443FB5) ----------------------------------------------------
int goodB2G_175()
{
  signed int useconds; // [rsp+Ch] [rbp-4h]

  useconds = CWE400_Resource_Exhaustion__fscanf_sleep_61b_goodB2GSource(0xFFFFFFFF);
  if ( useconds <= 0 || useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (0000000000444002) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_61_good()
{
  goodG2B_189();
  return goodB2G_175();
}

//----- (000000000044401C) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_51b_badSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044403D) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_51b_goodG2BSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044405E) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_51b_goodB2GSink(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (000000000044409A) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_34_bad()
{
  __int64 result; // rax
  int v1; // [rsp+10h] [rbp-10h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  v2 = v1;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000444100) ----------------------------------------------------
__int64 goodG2B_190()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000444150) ----------------------------------------------------
__int64 goodB2G_176()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+10h] [rbp-10h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  result = v1;
  v2 = v1;
  i = 0LL;
  if ( (int)v1 > 0 && v2 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004441C2) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_34_good()
{
  goodG2B_190();
  return goodB2G_176();
}

//----- (00000000004441DC) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_67b_badSink(int a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000444285) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_67b_goodG2BSink(int a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000044432E) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_67b_goodB2GSink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = a1;
  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (00000000004443E7) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_65b_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000444420) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_65b_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000444459) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_65b_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000044449E) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 44449E: using guessed type char buf[16];

//----- (000000000044457B) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_fwrite_61b_goodG2BSource()
{
  return 20LL;
}

//----- (000000000044458E) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 44458E: using guessed type char buf[16];

//----- (000000000044466B) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54c_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_54d_badSink(a1);
}

//----- (0000000000444682) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54c_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_54d_goodG2BSink(a1);
}

//----- (0000000000444699) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54c_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_54d_goodB2GSink(a1);
}

//----- (00000000004446B0) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_04_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, &unk_47019C, &v1);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044471C) ----------------------------------------------------
__int64 goodB2G1_120()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, &unk_47019C, &v1);
  i = 0LL;
  result = v1;
  if ( (int)v1 > 0 )
  {
    result = v1;
    if ( (int)v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = (int)v1;
        if ( (int)v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004447A3) ----------------------------------------------------
__int64 goodB2G2_120()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, &unk_47019C, &v1);
  i = 0LL;
  result = v1;
  if ( (int)v1 > 0 )
  {
    result = v1;
    if ( (int)v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = (int)v1;
        if ( (int)v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044481E) ----------------------------------------------------
__int64 goodG2B1_106()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000444880) ----------------------------------------------------
__int64 goodG2B2_106()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004448D6) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_04_good()
{
  goodB2G1_120();
  goodB2G2_120();
  goodG2B1_106();
  return goodG2B2_106();
}

//----- (0000000000444904) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_10_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 444904: using guessed type char buf[16];

//----- (0000000000444A0E) ----------------------------------------------------
int goodB2G1_121()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;
// 444A0E: using guessed type char buf[16];

//----- (0000000000444B3F) ----------------------------------------------------
int goodB2G2_121()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 444B3F: using guessed type char buf[16];

//----- (0000000000444C64) ----------------------------------------------------
int goodG2B1_107()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    useconds = 20;
  result = globalTrue;
  if ( globalTrue )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;

//----- (0000000000444CB0) ----------------------------------------------------
int goodG2B2_107()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( globalTrue )
    useconds = 20;
  result = globalTrue;
  if ( globalTrue )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;

//----- (0000000000444CF0) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_10_good()
{
  goodB2G1_121();
  goodB2G2_121();
  goodG2B1_107();
  return goodG2B2_107();
}

//----- (0000000000444D1E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_68b_badSink()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__connect_socket_fwrite_68_badData;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}
// 68E444: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_68_badData;

//----- (0000000000444DC7) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_68b_goodG2BSink()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodG2BData;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}
// 68E448: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodG2BData;

//----- (0000000000444E70) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_68b_goodB2GSink()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodB2GData;
  v2 = CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodB2GData;
  if ( CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodB2GData > 0
    && CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodB2GData <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v2 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E440: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodB2GData;

//----- (0000000000444F29) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_68b_badSink()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__fgets_fwrite_68_badData;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}
// 68E3F8: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_68_badData;

//----- (0000000000444FD2) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_68b_goodG2BSink()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__fgets_fwrite_68_goodG2BData;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}
// 68E400: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_68_goodG2BData;

//----- (000000000044507B) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_68b_goodB2GSink()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__fgets_fwrite_68_goodB2GData;
  v2 = CWE400_Resource_Exhaustion__fgets_fwrite_68_goodB2GData;
  if ( CWE400_Resource_Exhaustion__fgets_fwrite_68_goodB2GData > 0
    && CWE400_Resource_Exhaustion__fgets_fwrite_68_goodB2GData <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v2 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E3FC: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_68_goodB2GData;

//----- (0000000000445134) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_09_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = (unsigned int)GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 445134: using guessed type char buf[16];

//----- (0000000000445256) ----------------------------------------------------
int goodB2G1_122()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FALSE;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;
// 445256: using guessed type char buf[16];

//----- (0000000000445390) ----------------------------------------------------
__int64 goodB2G2_122()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = (unsigned int)GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    i = 0LL;
    if ( v8 > 0 && v8 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v8;
        if ( v8 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 445390: using guessed type char buf[16];

//----- (00000000004454BE) ----------------------------------------------------
__int64 goodG2B1_108()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = (unsigned int)GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000445522) ----------------------------------------------------
__int64 goodG2B2_108()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( GLOBAL_CONST_TRUE )
    v2 = 20;
  result = (unsigned int)GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000044557A) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_09_good()
{
  goodB2G1_122();
  goodB2G2_122();
  goodG2B1_108();
  return goodG2B2_108();
}

//----- (00000000004455A8) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_02_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000445602) ----------------------------------------------------
__int64 goodB2G1_123()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  result = v1;
  if ( (int)v1 > 0 )
  {
    result = v1;
    if ( (int)v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = (int)v1;
        if ( (int)v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044566B) ----------------------------------------------------
__int64 goodB2G2_123()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  result = v1;
  if ( (int)v1 > 0 )
  {
    result = v1;
    if ( (int)v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = (int)v1;
        if ( (int)v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004456D4) ----------------------------------------------------
__int64 goodG2B1_109()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000445718) ----------------------------------------------------
__int64 goodG2B2_109()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000044575C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_02_good()
{
  goodB2G1_123();
  goodB2G2_123();
  goodG2B1_109();
  return goodG2B2_109();
}

//----- (000000000044578A) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_51b_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000044582D) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_51b_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004458D0) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__listen_socket_fwrite_51b_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (0000000000445983) ----------------------------------------------------
__int64 __fastcall badSource_7(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (00000000004459E0) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_42_bad()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = badSource_7(0xFFFFFFFF);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000445A12) ----------------------------------------------------
__int64 goodG2BSource_7()
{
  return 20LL;
}

//----- (0000000000445A25) ----------------------------------------------------
int goodG2B_191()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = goodG2BSource_7();
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000445A57) ----------------------------------------------------
__int64 __fastcall goodB2GSource_7(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (0000000000445AB4) ----------------------------------------------------
int goodB2G_177()
{
  signed int useconds; // [rsp+Ch] [rbp-4h]

  useconds = goodB2GSource_7(0xFFFFFFFF);
  if ( useconds <= 0 || useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (0000000000445B01) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_42_good()
{
  goodB2G_177();
  return goodG2B_191();
}

//----- (0000000000445B1B) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_64_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_64b_badSink(&v5);
}
// 445B1B: using guessed type char buf[16];

//----- (0000000000445C05) ----------------------------------------------------
__int64 goodG2B_192()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_64b_goodG2BSink(&v1);
}

//----- (0000000000445C29) ----------------------------------------------------
__int64 goodB2G_178()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_64b_goodB2GSink(&v5);
}
// 445C29: using guessed type char buf[16];

//----- (0000000000445D13) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_64_good()
{
  goodG2B_192();
  return goodB2G_178();
}

//----- (0000000000445D2D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_16_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v7 = recv(v10, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v11;
    if ( v11 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 445D2D: using guessed type char buf[16];

//----- (0000000000445EE9) ----------------------------------------------------
int goodB2G_179()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v10 = result;
        if ( result != -1 )
        {
          result = recv(v10, buf, 0xDuLL, 0);
          v7 = result;
          if ( result != -1 )
          {
            if ( v7 )
            {
              buf[v7] = 0;
              result = atoi(buf);
              v11 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v10 != -1 )
    result = close(v10);
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v11 > 0 && v11 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v11;
      if ( v11 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 445EE9: using guessed type char buf[16];

//----- (00000000004460B5) ----------------------------------------------------
int goodG2B_193()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000446165) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_16_good()
{
  goodB2G_179();
  return goodG2B_193();
}

//----- (000000000044617F) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_64b_badSink(__useconds_t *a1)
{
  usleep(*a1);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004461B2) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_64b_goodG2BSink(__useconds_t *a1)
{
  usleep(*a1);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004461E5) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_64b_goodB2GSink(signed int *a1)
{
  signed int useconds; // [rsp+14h] [rbp-Ch]

  useconds = *a1;
  if ( *a1 <= 0 || useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (0000000000446233) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_53b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_53c_badSink(a1);
}

//----- (000000000044624A) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_53b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_53c_goodG2BSink(a1);
}

//----- (0000000000446261) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_53b_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_53c_goodB2GSink(a1);
}

//----- (0000000000446278) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_54_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_54b_badSink(v7);
}
// 446278: using guessed type char buf[16];

//----- (0000000000446360) ----------------------------------------------------
__int64 goodG2B_194()
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_54b_goodG2BSink(20);
}

//----- (0000000000446382) ----------------------------------------------------
__int64 goodB2G_180()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_54b_goodB2GSink(v7);
}
// 446382: using guessed type char buf[16];

//----- (000000000044646A) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_54_good()
{
  goodG2B_194();
  return goodB2G_180();
}

//----- (0000000000446484) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_10_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = (unsigned int)globalTrue;
  if ( globalTrue )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1A4: using guessed type int globalTrue;

//----- (00000000004464F2) ----------------------------------------------------
int goodB2G1_124()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  i = 0LL;
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;

//----- (000000000044657B) ----------------------------------------------------
__int64 goodB2G2_124()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = (unsigned int)globalTrue;
  if ( globalTrue )
  {
    i = 0LL;
    result = v1;
    if ( (int)v1 > 0 )
    {
      result = v1;
      if ( (int)v1 <= 20 )
      {
        for ( i = 0LL; ; ++i )
        {
          result = (int)v1;
          if ( (int)v1 <= i )
            break;
          printLine("Hello");
        }
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1A4: using guessed type int globalTrue;

//----- (00000000004465F8) ----------------------------------------------------
__int64 goodG2B1_110()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = (unsigned int)globalTrue;
  if ( globalTrue )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;

//----- (000000000044665C) ----------------------------------------------------
__int64 goodG2B2_110()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( globalTrue )
    v2 = 20;
  result = (unsigned int)globalTrue;
  if ( globalTrue )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;

//----- (00000000004466B4) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_10_good()
{
  goodB2G1_124();
  goodB2G2_124();
  goodG2B1_110();
  return goodG2B2_110();
}

//----- (00000000004466E2) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_15_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044673E) ----------------------------------------------------
__int64 goodB2G1_125()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  result = v1;
  if ( (int)v1 > 0 )
  {
    result = v1;
    if ( (int)v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = (int)v1;
        if ( (int)v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004467A9) ----------------------------------------------------
__int64 goodB2G2_125()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  result = v1;
  if ( (int)v1 > 0 )
  {
    result = v1;
    if ( (int)v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = (int)v1;
        if ( (int)v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000446814) ----------------------------------------------------
__int64 goodG2B1_111()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000044685A) ----------------------------------------------------
__int64 goodG2B2_111()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004468A0) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_15_good()
{
  goodB2G1_125();
  goodB2G2_125();
  goodG2B1_111();
  return goodG2B2_111();
}

//----- (00000000004468CE) ----------------------------------------------------
void CWE400_Resource_Exhaustion__connect_socket_sleep_17_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  in_addr_t v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+2Ch] [rbp-14h]
  int fd; // [rsp+30h] [rbp-10h]
  __useconds_t useconds; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  useconds = -1;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = inet_addr("127.0.0.1");
      v2 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v4 = recv(fd, buf, 0xDuLL, 0);
        if ( v4 != -1 )
        {
          if ( v4 )
          {
            buf[v4] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    usleep(useconds);
    printLine("Sleep time possibly too long");
  }
}
// 4468CE: using guessed type char buf[16];

//----- (00000000004469ED) ----------------------------------------------------
void goodB2G_181()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v2; // [rsp+12h] [rbp-2Eh]
  in_addr_t v3; // [rsp+14h] [rbp-2Ch]
  int v4; // [rsp+2Ch] [rbp-14h]
  int fd; // [rsp+30h] [rbp-10h]
  __useconds_t useconds; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  useconds = -1;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = inet_addr("127.0.0.1");
      v2 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v4 = recv(fd, buf, 0xDuLL, 0);
        if ( v4 != -1 )
        {
          if ( v4 )
          {
            buf[v4] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      printLine("Sleep time OK");
    }
  }
}
// 4469ED: using guessed type char buf[16];

//----- (0000000000446B27) ----------------------------------------------------
int goodG2B_195()
{
  int result; // eax
  __useconds_t useconds; // [rsp+4h] [rbp-Ch]
  int j; // [rsp+8h] [rbp-8h]
  int i; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  for ( i = 0; i <= 0; ++i )
    useconds = 20;
  for ( j = 0; j <= 0; ++j )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}

//----- (0000000000446B79) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_17_good()
{
  goodB2G_181();
  return goodG2B_195();
}

//----- (0000000000446B93) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_fwrite_54c_badSink(a1);
}

//----- (0000000000446BAA) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_fwrite_54c_goodG2BSink(a1);
}

//----- (0000000000446BC1) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_54b_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__fscanf_fwrite_54c_goodB2GSink(a1);
}

//----- (0000000000446BD8) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_61_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__listen_socket_for_loop_61b_badSource(0xFFFFFFFF);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000446C22) ----------------------------------------------------
__int64 goodG2B_196()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__listen_socket_for_loop_61b_goodG2BSource();
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000446C6C) ----------------------------------------------------
__int64 goodB2G_182()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__listen_socket_for_loop_61b_goodB2GSource(0xFFFFFFFF);
  v1 = result;
  if ( (int)result > 0 && (int)result <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000446CC2) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_61_good()
{
  goodG2B_196();
  return goodB2G_182();
}

//----- (0000000000446CDC) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_53b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_fwrite_53c_badSink(a1);
}

//----- (0000000000446CF3) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_53b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_fwrite_53c_goodG2BSink(a1);
}

//----- (0000000000446D0A) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_53b_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__fgets_fwrite_53c_goodB2GSink(a1);
}

//----- (0000000000446D21) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54c_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_54d_badSink(a1);
}

//----- (0000000000446D38) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54c_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_54d_goodG2BSink(a1);
}

//----- (0000000000446D4F) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_54c_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_54d_goodB2GSink(a1);
}

//----- (0000000000446D66) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_52c_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000446E09) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_52c_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000446EAC) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_52c_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (0000000000446F5F) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_01_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000446FB9) ----------------------------------------------------
__int64 goodG2B_197()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000446FFD) ----------------------------------------------------
__int64 goodB2G_183()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  result = v1;
  if ( (int)v1 > 0 )
  {
    result = v1;
    if ( (int)v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = (int)v1;
        if ( (int)v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000447066) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_01_good()
{
  goodG2B_197();
  return goodB2G_183();
}

//----- (0000000000447080) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_53d_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004470B9) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_53d_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004470F2) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_53d_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000447137) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_51_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_51b_badSink(v8);
}
// 447137: using guessed type char buf[16];

//----- (0000000000447265) ----------------------------------------------------
int goodG2B_198()
{
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_51b_goodG2BSink(20);
}

//----- (0000000000447287) ----------------------------------------------------
void goodB2G_184()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v2; // [rsp+12h] [rbp-1Eh]
  int v3; // [rsp+14h] [rbp-1Ch]
  int v4; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  v6 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v3 = 0;
    v2 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v6 = accept(fd, 0LL, 0LL);
      if ( v6 != -1 )
      {
        v4 = recv(v6, buf, 0xDuLL, 0);
        if ( v4 != -1 )
        {
          if ( v4 )
          {
            buf[v4] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v6 != -1 )
    close(v6);
  CWE400_Resource_Exhaustion__listen_socket_fwrite_51b_goodB2GSink(v7);
}
// 447287: using guessed type char buf[16];

//----- (00000000004473B5) ----------------------------------------------------
void CWE400_Resource_Exhaustion__listen_socket_fwrite_51_good()
{
  goodG2B_198();
  goodB2G_184();
}

//----- (00000000004473CF) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_65b_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000447408) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_65b_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000447441) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_65b_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000447486) ----------------------------------------------------
int __fastcall badSink_30(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = badStatic_6;
  if ( badStatic_6 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E328: using guessed type int badStatic_6;

//----- (0000000000447537) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_21_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  badStatic_6 = 1;
  return badSink_30(v8);
}
// 68E328: using guessed type int badStatic_6;
// 447537: using guessed type char buf[16];

//----- (000000000044766F) ----------------------------------------------------
int __fastcall goodB2G1Sink_6(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = goodB2G1Static_6;
  if ( goodB2G1Static_6 )
    return printLine("Benign, fixed string");
  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E32C: using guessed type int goodB2G1Static_6;

//----- (000000000044773B) ----------------------------------------------------
int goodB2G1_126()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  goodB2G1Static_6 = 0;
  return goodB2G1Sink_6(v8);
}
// 68E32C: using guessed type int goodB2G1Static_6;
// 44773B: using guessed type char buf[16];

//----- (0000000000447873) ----------------------------------------------------
int __fastcall goodB2G2Sink_6(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = goodB2G2Static_6;
  if ( goodB2G2Static_6 && a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E330: using guessed type int goodB2G2Static_6;

//----- (0000000000447934) ----------------------------------------------------
int goodB2G2_126()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  goodB2G2Static_6 = 1;
  return goodB2G2Sink_6(v8);
}
// 68E330: using guessed type int goodB2G2Static_6;
// 447934: using guessed type char buf[16];

//----- (0000000000447A6C) ----------------------------------------------------
int __fastcall goodG2BSink_30(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = goodG2BStatic_6;
  if ( goodG2BStatic_6 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E334: using guessed type int goodG2BStatic_6;

//----- (0000000000447B1D) ----------------------------------------------------
int goodG2B_199()
{
  goodG2BStatic_6 = 1;
  return goodG2BSink_30(20);
}
// 68E334: using guessed type int goodG2BStatic_6;

//----- (0000000000447B49) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_21_good()
{
  goodB2G1_126();
  goodB2G2_126();
  return goodG2B_199();
}

//----- (0000000000447B6D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_05_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( staticTrue_7 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticTrue_7;
  if ( staticTrue_7 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E18C: using guessed type int staticTrue_7;

//----- (0000000000447BF3) ----------------------------------------------------
int goodB2G1_127()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( staticTrue_7 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( staticFalse_7 )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 68E18C: using guessed type int staticTrue_7;
// 68E338: using guessed type int staticFalse_7;

//----- (0000000000447CA0) ----------------------------------------------------
int goodB2G2_127()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( staticTrue_7 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticTrue_7;
  if ( staticTrue_7 )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 68E18C: using guessed type int staticTrue_7;

//----- (0000000000447D41) ----------------------------------------------------
int goodG2B1_112()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( staticFalse_7 )
    printLine("Benign, fixed string");
  else
    useconds = 20;
  result = staticTrue_7;
  if ( staticTrue_7 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E18C: using guessed type int staticTrue_7;
// 68E338: using guessed type int staticFalse_7;

//----- (0000000000447D8D) ----------------------------------------------------
int goodG2B2_112()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( staticTrue_7 )
    useconds = 20;
  result = staticTrue_7;
  if ( staticTrue_7 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E18C: using guessed type int staticTrue_7;

//----- (0000000000447DCD) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_05_good()
{
  goodB2G1_127();
  goodB2G2_127();
  goodG2B1_112();
  return goodG2B2_112();
}

//----- (0000000000447DFB) ----------------------------------------------------
int __fastcall badSink_31(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000447E1C) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_41_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return badSink_31(v4);
}

//----- (0000000000447E84) ----------------------------------------------------
int __fastcall goodG2BSink_31(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000447EA5) ----------------------------------------------------
int goodG2B_200()
{
  return goodG2BSink_31(0x14u);
}

//----- (0000000000447EC7) ----------------------------------------------------
int __fastcall goodB2GSink_23(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (0000000000447F03) ----------------------------------------------------
int goodB2G_185()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return goodB2GSink_23(v4);
}

//----- (0000000000447F6B) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_41_good()
{
  goodB2G_185();
  return goodG2B_200();
}

//----- (0000000000447F85) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_52_bad()
{
  __useconds_t v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_sleep_52b_badSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000447FBD) ----------------------------------------------------
int goodG2B_201()
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_52b_goodG2BSink(0x14u);
}

//----- (0000000000447FDF) ----------------------------------------------------
int goodB2G_186()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_sleep_52b_goodB2GSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000448017) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_52_good()
{
  goodG2B_201();
  return goodB2G_186();
}

//----- (0000000000448031) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_07_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( staticFive_7 == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = (unsigned int)staticFive_7;
  if ( staticFive_7 == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E190: using guessed type int staticFive_7;
// 448031: using guessed type char buf[16];

//----- (000000000044819B) ----------------------------------------------------
int goodB2G1_128()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( staticFive_7 == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticFive_7;
  if ( staticFive_7 != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E190: using guessed type int staticFive_7;
// 44819B: using guessed type char buf[16];

//----- (000000000044831D) ----------------------------------------------------
__int64 goodB2G2_128()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( staticFive_7 == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = (unsigned int)staticFive_7;
  if ( staticFive_7 == 5 )
  {
    i = 0LL;
    if ( v9 > 0 && v9 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v9;
        if ( v9 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 68E190: using guessed type int staticFive_7;
// 44831D: using guessed type char buf[16];

//----- (0000000000448493) ----------------------------------------------------
__int64 goodG2B1_113()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( staticFive_7 == 5 )
    v2 = 20;
  else
    printLine("Benign, fixed string");
  result = (unsigned int)staticFive_7;
  if ( staticFive_7 == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E190: using guessed type int staticFive_7;

//----- (00000000004484F9) ----------------------------------------------------
__int64 goodG2B2_113()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( staticFive_7 == 5 )
    v2 = 20;
  result = (unsigned int)staticFive_7;
  if ( staticFive_7 == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E190: using guessed type int staticFive_7;

//----- (0000000000448553) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_07_good()
{
  goodB2G1_128();
  goodB2G2_128();
  goodG2B1_113();
  return goodG2B2_113();
}

//----- (0000000000448581) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_32_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+28h] [rbp-28h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-24h]
  int v7; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  __useconds_t *v9; // [rsp+38h] [rbp-18h]
  int *v10; // [rsp+40h] [rbp-10h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v10 = &v5;
  v9 = (__useconds_t *)&v5;
  v5 = -1;
  v11 = -1;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v11 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v10 = v11;
  useconds = *v9;
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}
// 448581: using guessed type char buf[16];

//----- (000000000044869E) ----------------------------------------------------
int goodG2B_202()
{
  int v1; // [rsp+4h] [rbp-1Ch]
  __useconds_t useconds; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+Ch] [rbp-14h]
  int *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 20;
  v1 = 20;
  useconds = 20;
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004486F5) ----------------------------------------------------
int goodB2G_187()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  int v5; // [rsp+28h] [rbp-28h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-24h]
  int v7; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  __useconds_t *v9; // [rsp+38h] [rbp-18h]
  int *v10; // [rsp+40h] [rbp-10h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v10 = &v5;
  v9 = (__useconds_t *)&v5;
  v5 = -1;
  v11 = -1;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v11 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v10 = v11;
  useconds = *v9;
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 4486F5: using guessed type char buf[16];

//----- (000000000044882D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_32_good()
{
  goodG2B_202();
  return goodB2G_187();
}

//----- (0000000000448847) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_51b_badSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000448868) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_51b_goodG2BSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000448889) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_51b_goodB2GSink(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (00000000004488C5) ----------------------------------------------------
int __fastcall badSink_32(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000448968) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_fwrite_44_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = badSink_32;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 448968: using guessed type char buf[16];

//----- (0000000000448A59) ----------------------------------------------------
int __fastcall goodG2BSink_32(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000448AFC) ----------------------------------------------------
int goodG2B_203()
{
  return goodG2BSink_32(20);
}

//----- (0000000000448B27) ----------------------------------------------------
void __fastcall goodB2GSink_24(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (0000000000448BDA) ----------------------------------------------------
__int64 goodB2G_188()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  void (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = goodB2GSink_24;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 448BDA: using guessed type char buf[16];

//----- (0000000000448CCB) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_fwrite_44_good()
{
  goodG2B_203();
  return goodB2G_188();
}

//----- (0000000000448CE5) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_09_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 448CE5: using guessed type char buf[16];

//----- (0000000000448E75) ----------------------------------------------------
int goodB2G1_129()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FALSE;
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;
// 448E75: using guessed type char buf[16];

//----- (0000000000449020) ----------------------------------------------------
int goodB2G2_129()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v10 > 0 && v10 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v10;
        if ( v10 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 449020: using guessed type char buf[16];

//----- (00000000004491C0) ----------------------------------------------------
int goodG2B1_114()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;
// 471F40: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000449292) ----------------------------------------------------
int goodG2B2_114()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( GLOBAL_CONST_TRUE )
    v3 = 20;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 471F3C: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000449358) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_09_good()
{
  goodB2G1_129();
  goodB2G2_129();
  goodG2B1_114();
  return goodG2B2_114();
}

//----- (0000000000449386) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_63_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_for_loop_63b_badSink(&v4);
}

//----- (00000000004493F0) ----------------------------------------------------
__int64 goodG2B_204()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__fgets_for_loop_63b_goodG2BSink(&v1);
}

//----- (0000000000449414) ----------------------------------------------------
__int64 goodB2G_189()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_for_loop_63b_goodB2GSink(&v4);
}

//----- (000000000044947E) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_63_good()
{
  goodG2B_204();
  return goodB2G_189();
}

//----- (0000000000449498) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_31_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+20h] [rbp-30h]
  FILE *stream; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+30h] [rbp-20h]
  int v8; // [rsp+34h] [rbp-1Ch]
  int v9; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v12; // [rsp+4Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v9 = recv(fd, buf, 0xDuLL, 0);
      if ( v9 != -1 )
      {
        if ( v9 )
        {
          buf[v9] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v8 = v12;
  v7 = v12;
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v7;
    if ( v7 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 449498: using guessed type char buf[16];

//----- (0000000000449618) ----------------------------------------------------
int goodG2B_205()
{
  FILE *s; // [rsp+10h] [rbp-20h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004496D2) ----------------------------------------------------
int goodB2G_190()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+20h] [rbp-30h]
  FILE *stream; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+30h] [rbp-20h]
  int v8; // [rsp+34h] [rbp-1Ch]
  int v9; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v12; // [rsp+4Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v9 = recv(fd, buf, 0xDuLL, 0);
      if ( v9 != -1 )
      {
        if ( v9 )
        {
          buf[v9] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v8 = v12;
  result = v12;
  v7 = v12;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v12 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 4496D2: using guessed type char buf[16];

//----- (0000000000449862) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_31_good()
{
  goodG2B_205();
  return goodB2G_190();
}

//----- (000000000044987C) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_53d_badSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044989D) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_53d_goodG2BSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004498BE) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_53d_goodB2GSink(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (00000000004498FA) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_34_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  __useconds_t useconds; // [rsp+18h] [rbp-8h]
  int v6; // [rsp+1Ch] [rbp-4h]

  v6 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v6;
  useconds = v6;
  usleep(v6);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000449978) ----------------------------------------------------
int goodG2B_206()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004499B0) ----------------------------------------------------
int goodB2G_191()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  __useconds_t useconds; // [rsp+18h] [rbp-8h]
  int v6; // [rsp+1Ch] [rbp-4h]

  v6 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v6;
  useconds = v6;
  if ( v6 <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (0000000000449A49) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_34_good()
{
  goodG2B_206();
  return goodB2G_191();
}

//----- (0000000000449A63) ----------------------------------------------------
int badSink_33()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__listen_socket_fwrite_45_badData;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}
// 68E33C: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_45_badData;

//----- (0000000000449B0C) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_45_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE400_Resource_Exhaustion__listen_socket_fwrite_45_badData = v8;
  return badSink_33();
}
// 68E33C: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_45_badData;
// 449B0C: using guessed type char buf[16];

//----- (0000000000449C43) ----------------------------------------------------
int goodG2BSink_33()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__listen_socket_fwrite_45_goodG2BData;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}
// 68E340: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_45_goodG2BData;

//----- (0000000000449CEC) ----------------------------------------------------
int goodG2B_207()
{
  CWE400_Resource_Exhaustion__listen_socket_fwrite_45_goodG2BData = 20;
  return goodG2BSink_33();
}
// 68E340: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_45_goodG2BData;

//----- (0000000000449D17) ----------------------------------------------------
int goodB2GSink_25()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__listen_socket_fwrite_45_goodB2GData;
  v2 = CWE400_Resource_Exhaustion__listen_socket_fwrite_45_goodB2GData;
  if ( CWE400_Resource_Exhaustion__listen_socket_fwrite_45_goodB2GData > 0
    && CWE400_Resource_Exhaustion__listen_socket_fwrite_45_goodB2GData <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v2 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E344: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_45_goodB2GData;

//----- (0000000000449DD0) ----------------------------------------------------
int goodB2G_192()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE400_Resource_Exhaustion__listen_socket_fwrite_45_goodB2GData = v8;
  return goodB2GSink_25();
}
// 68E344: using guessed type int CWE400_Resource_Exhaustion__listen_socket_fwrite_45_goodB2GData;
// 449DD0: using guessed type char buf[16];

//----- (0000000000449F07) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_45_good()
{
  goodG2B_207();
  return goodB2G_192();
}

//----- (0000000000449F21) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_53_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_fwrite_53b_badSink(v4);
}

//----- (0000000000449F89) ----------------------------------------------------
int goodG2B_208()
{
  return CWE400_Resource_Exhaustion__fgets_fwrite_53b_goodG2BSink(20);
}

//----- (0000000000449FAB) ----------------------------------------------------
void goodB2G_193()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  *(_QWORD *)s = 0LL;
  v1 = 0;
  v2 = 0;
  if ( fgets(s, 14, stdin) )
    v3 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_fwrite_53b_goodB2GSink(v3);
}

//----- (000000000044A013) ----------------------------------------------------
void CWE400_Resource_Exhaustion__fgets_fwrite_53_good()
{
  goodG2B_208();
  goodB2G_193();
}

//----- (000000000044A02D) ----------------------------------------------------
__int64 staticReturnsTrue_8()
{
  return 1LL;
}

//----- (000000000044A038) ----------------------------------------------------
__int64 staticReturnsFalse_8()
{
  return 0LL;
}

//----- (000000000044A043) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_08_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( (unsigned int)staticReturnsTrue_8() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticReturnsTrue_8();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A0B9) ----------------------------------------------------
int goodB2G1_130()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( (unsigned int)staticReturnsTrue_8() )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)staticReturnsFalse_8() )
    return printLine("Benign, fixed string");
  i = 0LL;
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A14A) ----------------------------------------------------
__int64 goodB2G2_130()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( (unsigned int)staticReturnsTrue_8() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = staticReturnsTrue_8();
  if ( (_DWORD)result )
  {
    i = 0LL;
    result = v1;
    if ( (int)v1 > 0 )
    {
      result = v1;
      if ( (int)v1 <= 20 )
      {
        for ( i = 0LL; ; ++i )
        {
          result = (int)v1;
          if ( (int)v1 <= i )
            break;
          printLine("Hello");
        }
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A1CF) ----------------------------------------------------
__int64 goodG2B1_115()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( (unsigned int)staticReturnsFalse_8() )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = staticReturnsTrue_8();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000044A23B) ----------------------------------------------------
__int64 goodG2B2_115()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( (unsigned int)staticReturnsTrue_8() )
    v2 = 20;
  result = staticReturnsTrue_8();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000044A29B) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_08_good()
{
  goodB2G1_130();
  goodB2G2_130();
  goodG2B1_115();
  return goodG2B2_115();
}

//----- (000000000044A2C9) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_67_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_67b_badSink(v8);
}
// 44A2C9: using guessed type char buf[16];

//----- (000000000044A3B7) ----------------------------------------------------
__int64 goodG2B_209()
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_67b_goodG2BSink(20);
}

//----- (000000000044A3DF) ----------------------------------------------------
__int64 goodB2G_194()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_67b_goodB2GSink(v8);
}
// 44A3DF: using guessed type char buf[16];

//----- (000000000044A4CD) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_67_good()
{
  goodG2B_209();
  return goodB2G_194();
}

//----- (000000000044A4E7) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_54_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_for_loop_54b_badSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A51F) ----------------------------------------------------
__int64 goodG2B_210()
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_54b_goodG2BSink(20);
}

//----- (000000000044A541) ----------------------------------------------------
__int64 goodB2G_195()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_for_loop_54b_goodB2GSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A579) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_54_good()
{
  goodG2B_210();
  return goodB2G_195();
}

//----- (000000000044A593) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_67_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_67b_badSink(v8);
}
// 44A593: using guessed type char buf[16];

//----- (000000000044A681) ----------------------------------------------------
int goodG2B_211()
{
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_67b_goodG2BSink(20);
}

//----- (000000000044A6A9) ----------------------------------------------------
int goodB2G_196()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_67b_goodB2GSink(v8);
}
// 44A6A9: using guessed type char buf[16];

//----- (000000000044A797) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_67_good()
{
  goodG2B_211();
  return goodB2G_196();
}

//----- (000000000044A7B1) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_32_bad()
{
  int v1; // [rsp+4h] [rbp-1Ch]
  int v2; // [rsp+8h] [rbp-18h]
  __useconds_t useconds; // [rsp+Ch] [rbp-14h]
  __useconds_t *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v2;
  v4 = (__useconds_t *)&v2;
  v2 = -1;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  *v5 = v1;
  useconds = *v4;
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A81E) ----------------------------------------------------
int goodG2B_212()
{
  int v1; // [rsp+4h] [rbp-1Ch]
  __useconds_t useconds; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+Ch] [rbp-14h]
  int *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v1;
  v4 = &v1;
  v3 = 20;
  v1 = 20;
  useconds = 20;
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044A875) ----------------------------------------------------
int goodB2G_197()
{
  int v1; // [rsp+4h] [rbp-1Ch]
  int v2; // [rsp+8h] [rbp-18h]
  __useconds_t useconds; // [rsp+Ch] [rbp-14h]
  __useconds_t *v4; // [rsp+10h] [rbp-10h]
  int *v5; // [rsp+18h] [rbp-8h]

  v5 = &v2;
  v4 = (__useconds_t *)&v2;
  v2 = -1;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  *v5 = v1;
  useconds = *v4;
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A8FD) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_32_good()
{
  goodG2B_212();
  return goodB2G_197();
}

//----- (000000000044A917) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_64_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_64b_badSink(&v5);
}
// 44A917: using guessed type char buf[16];

//----- (000000000044AA01) ----------------------------------------------------
int goodG2B_213()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_64b_goodG2BSink(&v1);
}

//----- (000000000044AA25) ----------------------------------------------------
int goodB2G_198()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_64b_goodB2GSink(&v5);
}
// 44AA25: using guessed type char buf[16];

//----- (000000000044AB0F) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_64_good()
{
  goodG2B_213();
  return goodB2G_198();
}

//----- (000000000044AB29) ----------------------------------------------------
__int64 __fastcall badSink_34(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)badStatic_7;
  if ( badStatic_7 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E348: using guessed type int badStatic_7;

//----- (000000000044AB6C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_21_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  badStatic_7 = 1;
  return badSink_34(v7);
}
// 68E348: using guessed type int badStatic_7;
// 44AB6C: using guessed type char buf[16];

//----- (000000000044AC5E) ----------------------------------------------------
int __fastcall goodB2G1Sink_7(int a1)
{
  int result; // eax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = goodB2G1Static_7;
  if ( goodB2G1Static_7 )
    return printLine("Benign, fixed string");
  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E34C: using guessed type int goodB2G1Static_7;

//----- (000000000044ACB9) ----------------------------------------------------
int goodB2G1_131()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G1Static_7 = 0;
  return goodB2G1Sink_7(v7);
}
// 68E34C: using guessed type int goodB2G1Static_7;
// 44ACB9: using guessed type char buf[16];

//----- (000000000044ADAB) ----------------------------------------------------
__int64 __fastcall goodB2G2Sink_7(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)goodB2G2Static_7;
  if ( goodB2G2Static_7 && a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E350: using guessed type int goodB2G2Static_7;

//----- (000000000044ADFA) ----------------------------------------------------
__int64 goodB2G2_131()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G2Static_7 = 1;
  return goodB2G2Sink_7(v7);
}
// 68E350: using guessed type int goodB2G2Static_7;
// 44ADFA: using guessed type char buf[16];

//----- (000000000044AEEC) ----------------------------------------------------
__int64 __fastcall goodG2BSink_34(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = (unsigned int)goodG2BStatic_7;
  if ( goodG2BStatic_7 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E354: using guessed type int goodG2BStatic_7;

//----- (000000000044AF2F) ----------------------------------------------------
__int64 goodG2B_214()
{
  goodG2BStatic_7 = 1;
  return goodG2BSink_34(20);
}
// 68E354: using guessed type int goodG2BStatic_7;

//----- (000000000044AF5B) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_21_good()
{
  goodB2G1_131();
  goodB2G2_131();
  return goodG2B_214();
}

//----- (000000000044AF7F) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_51_bad()
{
  __useconds_t v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_sleep_51b_badSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044AFB7) ----------------------------------------------------
int goodG2B_215()
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_51b_goodG2BSink(0x14u);
}

//----- (000000000044AFD9) ----------------------------------------------------
int goodB2G_199()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_sleep_51b_goodB2GSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044B011) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_51_good()
{
  goodG2B_215();
  return goodB2G_199();
}

//----- (000000000044B02B) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_22_badSink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__connect_socket_fwrite_22_badGlobal;
  if ( CWE400_Resource_Exhaustion__connect_socket_fwrite_22_badGlobal )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E384: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_22_badGlobal;

//----- (000000000044B0DC) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodB2G1Sink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodB2G1Global;
  if ( CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E388: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodB2G1Global;

//----- (000000000044B1A8) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodB2G2Sink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodB2G2Global;
  if ( CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodB2G2Global && a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E38C: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodB2G2Global;

//----- (000000000044B269) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodG2BSink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodG2BGlobal;
  if ( CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodG2BGlobal )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E390: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodG2BGlobal;

//----- (000000000044B31A) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_12_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    useconds = 20;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  else if ( (int)useconds <= 0 || (int)useconds > 2000 )
  {
    result = printLine("Sleep time too long");
  }
  else
  {
    usleep(useconds);
    result = printLine("Sleep time OK");
  }
  return result;
}
// 44B31A: using guessed type char buf[16];

//----- (000000000044B468) ----------------------------------------------------
int goodB2G_200()
{
  int result; // eax
  char nptr[16]; // [rsp+0h] [rbp-60h]
  struct sockaddr addr; // [rsp+10h] [rbp-50h]
  char buf[16]; // [rsp+20h] [rbp-40h]
  __int16 s; // [rsp+30h] [rbp-30h]
  uint16_t v5; // [rsp+32h] [rbp-2Eh]
  in_addr_t v6; // [rsp+34h] [rbp-2Ch]
  int v7; // [rsp+4Ch] [rbp-14h]
  int v8; // [rsp+50h] [rbp-10h]
  int v9; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  __useconds_t useconds; // [rsp+5Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v6 = inet_addr("127.0.0.1");
      v5 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v9 = recv(fd, buf, 0xDuLL, 0);
        if ( v9 != -1 )
        {
          if ( v9 )
          {
            buf[v9] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    v8 = socket(2, 1, 6);
    if ( v8 != -1 )
    {
      memset(&addr, 0, 0x10uLL);
      addr.sa_family = 2;
      *(_DWORD *)&addr.sa_data[2] = inet_addr("127.0.0.1");
      *(_WORD *)addr.sa_data = htons(0x6987u);
      if ( connect(v8, &addr, 0x10u) != -1 )
      {
        v7 = recv(v8, nptr, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            nptr[v7] = 0;
            useconds = atoi(nptr);
          }
        }
      }
    }
    if ( v8 != -1 )
      close(v8);
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  else if ( (int)useconds <= 0 || (int)useconds > 2000 )
  {
    result = printLine("Sleep time too long");
  }
  else
  {
    usleep(useconds);
    result = printLine("Sleep time OK");
  }
  return result;
}
// 44B468: using guessed type char buf[16];
// 44B468: using guessed type char nptr[16];

//----- (000000000044B69D) ----------------------------------------------------
int goodG2B_216()
{
  globalReturnsTrueOrFalse();
  globalReturnsTrueOrFalse();
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044B704) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_12_good()
{
  goodB2G_200();
  return goodG2B_216();
}

//----- (000000000044B71E) ----------------------------------------------------
__int64 staticReturnsTrue_9()
{
  return 1LL;
}

//----- (000000000044B729) ----------------------------------------------------
__int64 staticReturnsFalse_9()
{
  return 0LL;
}

//----- (000000000044B734) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_08_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( (unsigned int)staticReturnsTrue_9() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue_9();
  if ( result )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 44B734: using guessed type char buf[16];

//----- (000000000044B8CC) ----------------------------------------------------
int goodB2G1_132()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( (unsigned int)staticReturnsTrue_9() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsFalse_9();
  if ( result )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 44B8CC: using guessed type char buf[16];

//----- (000000000044BA7F) ----------------------------------------------------
int goodB2G2_132()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( (unsigned int)staticReturnsTrue_9() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue_9();
  if ( result )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v10 > 0 && v10 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v10;
        if ( v10 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 44BA7F: using guessed type char buf[16];

//----- (000000000044BC27) ----------------------------------------------------
int goodG2B1_116()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( (unsigned int)staticReturnsFalse_9() )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = staticReturnsTrue_9();
  if ( result )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000044BD01) ----------------------------------------------------
int goodG2B2_116()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( (unsigned int)staticReturnsTrue_9() )
    v3 = 20;
  result = staticReturnsTrue_9();
  if ( result )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000044BDCF) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_08_good()
{
  goodB2G1_132();
  goodB2G2_132();
  goodG2B1_116();
  return goodG2B2_116();
}

//----- (000000000044BDFD) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_68_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_fwrite_68_badData = v7;
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_68b_badSink();
}
// 68E444: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_68_badData;
// 44BDFD: using guessed type char buf[16];

//----- (000000000044BEEE) ----------------------------------------------------
int goodG2B_217()
{
  CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodG2BData = 20;
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_68b_goodG2BSink();
}
// 68E448: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodG2BData;

//----- (000000000044BF19) ----------------------------------------------------
int goodB2G_201()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodB2GData = v7;
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_68b_goodB2GSink();
}
// 68E440: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodB2GData;
// 44BF19: using guessed type char buf[16];

//----- (000000000044C00A) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_68_good()
{
  goodG2B_217();
  return goodB2G_201();
}

//----- (000000000044C024) ----------------------------------------------------
int __fastcall badSink_35(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044C045) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_sleep_44_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(__useconds_t); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = badSink_35;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 44C045: using guessed type char buf[16];

//----- (000000000044C136) ----------------------------------------------------
int __fastcall goodG2BSink_35(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044C157) ----------------------------------------------------
int goodG2B_218()
{
  return goodG2BSink_35(0x14u);
}

//----- (000000000044C182) ----------------------------------------------------
int __fastcall goodB2GSink_26(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (000000000044C1BE) ----------------------------------------------------
__int64 goodB2G_202()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(signed int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = goodB2GSink_26;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 44C1BE: using guessed type char buf[16];

//----- (000000000044C2AF) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_sleep_44_good()
{
  goodG2B_218();
  return goodB2G_202();
}

//----- (000000000044C2C9) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54e_badSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044C2EA) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54e_goodG2BSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044C30B) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_54e_goodB2GSink(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (000000000044C347) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_68b_badSink()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__connect_socket_for_loop_68_badData;
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 68E454: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_68_badData;

//----- (000000000044C386) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_68b_goodG2BSink()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__connect_socket_for_loop_68_goodG2BData;
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 68E450: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_68_goodG2BData;

//----- (000000000044C3C5) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_68b_goodB2GSink()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__connect_socket_for_loop_68_goodB2GData;
  v1 = CWE400_Resource_Exhaustion__connect_socket_for_loop_68_goodB2GData;
  if ( CWE400_Resource_Exhaustion__connect_socket_for_loop_68_goodB2GData > 0
    && CWE400_Resource_Exhaustion__connect_socket_for_loop_68_goodB2GData <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E44C: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_68_goodB2GData;

//----- (000000000044C410) ----------------------------------------------------
void CWE400_Resource_Exhaustion__fgets_for_loop_17_bad()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v1; // [rsp+8h] [rbp-28h]
  __int16 v2; // [rsp+Ch] [rbp-24h]
  unsigned __int64 k; // [rsp+18h] [rbp-18h]
  int v4; // [rsp+24h] [rbp-Ch]
  int j; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v4 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v1 = 0;
    v2 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    for ( k = 0LL; v4 > k; ++k )
      printLine("Hello");
  }
}

//----- (000000000044C4C0) ----------------------------------------------------
void goodB2G_203()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v1; // [rsp+8h] [rbp-28h]
  __int16 v2; // [rsp+Ch] [rbp-24h]
  unsigned __int64 k; // [rsp+18h] [rbp-18h]
  int v4; // [rsp+24h] [rbp-Ch]
  int j; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v4 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v1 = 0;
    v2 = 0;
    if ( fgets(s, 14, stdin) )
      v4 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    k = 0LL;
    if ( v4 > 0 && v4 <= 20 )
    {
      for ( k = 0LL; v4 > k; ++k )
        printLine("Hello");
    }
  }
}

//----- (000000000044C57C) ----------------------------------------------------
__int64 goodG2B_219()
{
  __int64 result; // rax
  unsigned __int64 k; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  int j; // [rsp+18h] [rbp-8h]
  int i; // [rsp+1Ch] [rbp-4h]

  v2 = -1;
  for ( i = 0; i <= 0; ++i )
    v2 = 20;
  for ( j = 0; j <= 0; ++j )
  {
    for ( k = 0LL; ; ++k )
    {
      result = v2;
      if ( v2 <= k )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000044C5E6) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_17_good()
{
  goodB2G_203();
  return goodG2B_219();
}

//----- (000000000044C600) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_52b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_fwrite_52c_badSink(a1);
}

//----- (000000000044C617) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_52b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fgets_fwrite_52c_goodG2BSink(a1);
}

//----- (000000000044C62E) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_52b_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__fgets_fwrite_52c_goodB2GSink(a1);
}

//----- (000000000044C645) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_06_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044C6CB) ----------------------------------------------------
int goodB2G1_133()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (000000000044C778) ----------------------------------------------------
int goodB2G2_133()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (000000000044C819) ----------------------------------------------------
int goodG2B1_117()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044C865) ----------------------------------------------------
int goodG2B2_117()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044C8A5) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_06_good()
{
  goodB2G1_133();
  goodB2G2_133();
  goodG2B1_117();
  return goodG2B2_117();
}

//----- (000000000044C8D3) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_64_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_sleep_64b_badSink((__useconds_t *)&v5);
}
// 44C8D3: using guessed type char buf[16];

//----- (000000000044C9BD) ----------------------------------------------------
int goodG2B_220()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__connect_socket_sleep_64b_goodG2BSink((__useconds_t *)&v1);
}

//----- (000000000044C9E1) ----------------------------------------------------
int goodB2G_204()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_sleep_64b_goodB2GSink(&v5);
}
// 44C9E1: using guessed type char buf[16];

//----- (000000000044CACB) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_64_good()
{
  goodG2B_220();
  return goodB2G_204();
}

//----- (000000000044CAE5) ----------------------------------------------------
__int64 __fastcall badSink_36(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000044CB1E) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_44_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __int64 (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = badSink_36;
  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return v4(v5);
}

//----- (000000000044CB8F) ----------------------------------------------------
__int64 __fastcall goodG2BSink_36(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000044CBC8) ----------------------------------------------------
__int64 goodG2B_221()
{
  return goodG2BSink_36(20);
}

//----- (000000000044CBF3) ----------------------------------------------------
__int64 __fastcall goodB2GSink_27(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000044CC38) ----------------------------------------------------
__int64 goodB2G_205()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __int64 (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = goodB2GSink_27;
  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return v4(v5);
}

//----- (000000000044CCA9) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_44_good()
{
  goodG2B_221();
  return goodB2G_205();
}

//----- (000000000044CCC3) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_06_bad()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, &unk_470C94, &useconds);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044CD19) ----------------------------------------------------
int goodB2G1_134()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, &unk_470C94, &useconds);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044CD98) ----------------------------------------------------
int goodB2G2_134()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, &unk_470C94, &useconds);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044CE0B) ----------------------------------------------------
int goodG2B1_118()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044CE57) ----------------------------------------------------
int goodG2B2_118()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044CE97) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_06_good()
{
  goodB2G1_134();
  goodB2G2_134();
  goodG2B1_118();
  return goodG2B2_118();
}

//----- (000000000044CEC5) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54c_badSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_54d_badSink(a1);
}

//----- (000000000044CEDC) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54c_goodG2BSink(__useconds_t a1)
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_54d_goodG2BSink(a1);
}

//----- (000000000044CEF3) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_54c_goodB2GSink(signed int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_sleep_54d_goodB2GSink(a1);
}

//----- (000000000044CF0A) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_61_bad()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__fgets_fwrite_61b_badSource(0xFFFFFFFF);
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000044CFBE) ----------------------------------------------------
int goodG2B_222()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__fgets_fwrite_61b_goodG2BSource();
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000044D072) ----------------------------------------------------
int goodB2G_206()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__fgets_fwrite_61b_goodB2GSource(0xFFFFFFFF);
  v2 = result;
  if ( result > 0 && result <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v2 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000044D136) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_61_good()
{
  goodG2B_222();
  return goodB2G_206();
}

//----- (000000000044D150) ----------------------------------------------------
__int64 __fastcall badSource_8(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (000000000044D1AD) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_42_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = badSource_8(0xFFFFFFFF);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000044D1F7) ----------------------------------------------------
__int64 goodG2BSource_8()
{
  return 20LL;
}

//----- (000000000044D20A) ----------------------------------------------------
__int64 goodG2B_223()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = goodG2BSource_8();
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000044D254) ----------------------------------------------------
__int64 __fastcall goodB2GSource_8(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (000000000044D2B1) ----------------------------------------------------
__int64 goodB2G_207()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  result = goodB2GSource_8(0xFFFFFFFF);
  v1 = result;
  if ( (int)result > 0 && (int)result <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000044D307) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_42_good()
{
  goodB2G_207();
  return goodG2B_223();
}

//----- (000000000044D321) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_13_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = (unsigned int)GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044D3C1) ----------------------------------------------------
int goodB2G1_135()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044D479) ----------------------------------------------------
__int64 goodB2G2_135()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = (unsigned int)GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    i = 0LL;
    if ( v5 > 0 && v5 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v5;
        if ( v5 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044D525) ----------------------------------------------------
__int64 goodG2B1_119()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v2 = 20;
  else
    printLine("Benign, fixed string");
  result = (unsigned int)GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044D58B) ----------------------------------------------------
__int64 goodG2B2_119()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v2 = 20;
  result = (unsigned int)GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044D5E5) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_13_good()
{
  goodB2G1_135();
  goodB2G2_135();
  goodG2B1_119();
  return goodG2B2_119();
}

//----- (000000000044D613) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_53b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_53c_badSink(a1);
}

//----- (000000000044D62A) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_53b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_53c_goodG2BSink(a1);
}

//----- (000000000044D641) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_53b_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_53c_goodB2GSink(a1);
}

//----- (000000000044D658) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (000000000044D6B5) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_61b_goodG2BSource()
{
  return 20LL;
}

//----- (000000000044D6C8) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (000000000044D725) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_66b_badSink(__int64 a1)
{
  usleep(*(_DWORD *)(a1 + 8));
  return printLine("Sleep time possibly too long");
}

//----- (000000000044D751) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_66b_goodG2BSink(__int64 a1)
{
  usleep(*(_DWORD *)(a1 + 8));
  return printLine("Sleep time possibly too long");
}

//----- (000000000044D77D) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_66b_goodB2GSink(__int64 a1)
{
  signed int useconds; // [rsp+1Ch] [rbp-4h]

  useconds = *(_DWORD *)(a1 + 8);
  if ( useconds <= 0 || useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (000000000044D7C4) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_52c_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000044D7FD) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_52c_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000044D836) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_52c_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000044D87B) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54d_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_54e_badSink(a1);
}

//----- (000000000044D892) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54d_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_54e_goodG2BSink(a1);
}

//----- (000000000044D8A9) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_54d_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_54e_goodB2GSink(a1);
}

//----- (000000000044D8C0) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_52_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_fwrite_52b_badSink(v4);
}

//----- (000000000044D928) ----------------------------------------------------
int goodG2B_224()
{
  return CWE400_Resource_Exhaustion__fgets_fwrite_52b_goodG2BSink(20);
}

//----- (000000000044D94A) ----------------------------------------------------
void goodB2G_208()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  *(_QWORD *)s = 0LL;
  v1 = 0;
  v2 = 0;
  if ( fgets(s, 14, stdin) )
    v3 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_fwrite_52b_goodB2GSink(v3);
}

//----- (000000000044D9B2) ----------------------------------------------------
void CWE400_Resource_Exhaustion__fgets_fwrite_52_good()
{
  goodG2B_224();
  goodB2G_208();
}

//----- (000000000044D9CC) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_64_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_64b_badSink(&v5);
}
// 44D9CC: using guessed type char buf[16];

//----- (000000000044DAFC) ----------------------------------------------------
int goodG2B_225()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_64b_goodG2BSink(&v1);
}

//----- (000000000044DB20) ----------------------------------------------------
int goodB2G_209()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_64b_goodB2GSink(&v5);
}
// 44DB20: using guessed type char buf[16];

//----- (000000000044DC50) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_64_good()
{
  goodG2B_225();
  return goodB2G_209();
}

//----- (000000000044DC6A) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_68_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_for_loop_68_badData = v7;
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_68b_badSink();
}
// 68E454: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_68_badData;
// 44DC6A: using guessed type char buf[16];

//----- (000000000044DD5B) ----------------------------------------------------
__int64 goodG2B_226()
{
  CWE400_Resource_Exhaustion__connect_socket_for_loop_68_goodG2BData = 20;
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_68b_goodG2BSink();
}
// 68E450: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_68_goodG2BData;

//----- (000000000044DD86) ----------------------------------------------------
__int64 goodB2G_210()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_for_loop_68_goodB2GData = v7;
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_68b_goodB2GSink();
}
// 68E44C: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_68_goodB2GData;
// 44DD86: using guessed type char buf[16];

//----- (000000000044DE77) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_68_good()
{
  goodG2B_226();
  return goodB2G_210();
}

//----- (000000000044DE91) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_51b_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000044DF34) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_51b_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000044DFD7) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_51b_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (000000000044E08A) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_14_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    i = 0LL;
    s = 0LL;
    filename = "output_bad.txt";
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    if ( s )
      result = fclose(s);
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1A8: using guessed type int globalFive;

//----- (000000000044E168) ----------------------------------------------------
int goodB2G1_136()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1A8: using guessed type int globalFive;

//----- (000000000044E264) ----------------------------------------------------
int goodB2G2_136()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalFive;
  if ( globalFive == 5 )
  {
    i = 0LL;
    s = 0LL;
    filename = "output_good.txt";
    result = v1;
    if ( v1 > 0 )
    {
      result = v1;
      if ( v1 <= 20 )
      {
        s = fopen(filename, "w+");
        if ( !s )
          exit(1);
        for ( i = 0LL; ; ++i )
        {
          result = v1;
          if ( v1 <= i )
            break;
          if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
            exit(1);
        }
        if ( s )
          result = fclose(s);
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E1A8: using guessed type int globalFive;

//----- (000000000044E355) ----------------------------------------------------
int goodG2B1_120()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( globalFive == 5 )
    v3 = 20;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (000000000044E429) ----------------------------------------------------
int goodG2B2_120()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( globalFive == 5 )
    v3 = 20;
  result = globalFive;
  if ( globalFive == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (000000000044E4F1) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_14_good()
{
  goodB2G1_136();
  goodB2G2_136();
  goodG2B1_120();
  return goodG2B2_120();
}

//----- (000000000044E51F) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_32_bad()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-38h]
  int v2; // [rsp+Ch] [rbp-34h]
  char *filename; // [rsp+10h] [rbp-30h]
  FILE *s; // [rsp+18h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-1Ch]
  int *v6; // [rsp+28h] [rbp-18h]
  int *v7; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v7 = &v2;
  v6 = &v2;
  v2 = -1;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  *v7 = v1;
  v5 = *v6;
  i = 0LL;
  s = 0LL;
  filename = "output_bad.txt";
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v5;
    if ( v5 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  if ( s )
    result = fclose(s);
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044E60E) ----------------------------------------------------
int goodG2B_227()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-34h]
  char *filename; // [rsp+10h] [rbp-30h]
  FILE *s; // [rsp+18h] [rbp-28h]
  int v4; // [rsp+20h] [rbp-20h]
  int v5; // [rsp+24h] [rbp-1Ch]
  int *v6; // [rsp+28h] [rbp-18h]
  int *v7; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v7 = &v1;
  v6 = &v1;
  v5 = 20;
  v1 = 20;
  v4 = 20;
  i = 0LL;
  s = 0LL;
  filename = "output_bad.txt";
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v4;
    if ( v4 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  if ( s )
    result = fclose(s);
  return result;
}

//----- (000000000044E6E7) ----------------------------------------------------
int goodB2G_211()
{
  int result; // eax
  int v1; // [rsp+8h] [rbp-38h]
  int v2; // [rsp+Ch] [rbp-34h]
  char *filename; // [rsp+10h] [rbp-30h]
  FILE *s; // [rsp+18h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-1Ch]
  int *v6; // [rsp+28h] [rbp-18h]
  int *v7; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v7 = &v2;
  v6 = &v2;
  v2 = -1;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  *v7 = v1;
  result = *v6;
  v5 = *v6;
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  if ( v5 > 0 && v5 <= 20 )
  {
    s = fopen(filename, "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    if ( s )
      result = fclose(s);
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044E7E6) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_32_good()
{
  goodG2B_227();
  return goodB2G_211();
}

//----- (000000000044E800) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_64b_badSink(__useconds_t *a1)
{
  usleep(*a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044E833) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_64b_goodG2BSink(__useconds_t *a1)
{
  usleep(*a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044E866) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_64b_goodB2GSink(signed int *a1)
{
  signed int useconds; // [rsp+14h] [rbp-Ch]

  useconds = *a1;
  if ( *a1 <= 0 || useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (000000000044E8B4) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_16_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v7;
    if ( v7 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}

//----- (000000000044E9AA) ----------------------------------------------------
int goodB2G_212()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *stream; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v7 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v7 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (000000000044EAB0) ----------------------------------------------------
int goodG2B_228()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000044EB60) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_16_good()
{
  goodB2G_212();
  return goodG2B_228();
}

//----- (000000000044EB7A) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_63_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_sleep_63b_badSink((__useconds_t *)&v4);
}

//----- (000000000044EBE4) ----------------------------------------------------
int goodG2B_229()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__fgets_sleep_63b_goodG2BSink((__useconds_t *)&v1);
}

//----- (000000000044EC08) ----------------------------------------------------
int goodB2G_213()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_sleep_63b_goodB2GSink(&v4);
}

//----- (000000000044EC72) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_63_good()
{
  goodG2B_229();
  return goodB2G_213();
}

//----- (000000000044EC8C) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_13_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;
// 44EC8C: using guessed type char buf[16];

//----- (000000000044EE1E) ----------------------------------------------------
int goodB2G1_137()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;
// 44EE1E: using guessed type char buf[16];

//----- (000000000044EFCB) ----------------------------------------------------
int goodB2G2_137()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v10 > 0 && v10 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v10;
        if ( v10 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;
// 44EFCB: using guessed type char buf[16];

//----- (000000000044F16D) ----------------------------------------------------
int goodG2B1_121()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v3 = 20;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044F241) ----------------------------------------------------
int goodG2B2_121()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v3 = 20;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044F309) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_13_good()
{
  goodB2G1_137();
  goodB2G2_137();
  goodG2B1_121();
  return goodG2B2_121();
}

//----- (000000000044F337) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_02_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}
// 44F337: using guessed type char buf[16];

//----- (000000000044F429) ----------------------------------------------------
int goodB2G1_138()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 44F429: using guessed type char buf[16];

//----- (000000000044F536) ----------------------------------------------------
int goodB2G2_138()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          useconds = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 44F536: using guessed type char buf[16];

//----- (000000000044F643) ----------------------------------------------------
int goodG2B1_122()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044F66F) ----------------------------------------------------
int goodG2B2_122()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044F69B) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_02_good()
{
  goodB2G1_138();
  goodB2G2_138();
  goodG2B1_122();
  return goodG2B2_122();
}

//----- (000000000044F6C9) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_67b_badSink(int a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000044F772) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_67b_goodG2BSink(int a1)
{
  FILE *s; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000044F81B) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_67b_goodB2GSink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = a1;
  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (000000000044F8D4) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_65b_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000044F90D) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_65b_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000044F946) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_65b_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000044F98B) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_22_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_for_loop_22_badGlobal = 1;
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_22_badSink(v7);
}
// 68E358: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_22_badGlobal;
// 44F98B: using guessed type char buf[16];

//----- (000000000044FA7D) ----------------------------------------------------
int goodB2G1_139()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodB2G1Global = 0;
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodB2G1Sink(v7);
}
// 68E35C: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodB2G1Global;
// 44FA7D: using guessed type char buf[16];

//----- (000000000044FB6F) ----------------------------------------------------
__int64 goodB2G2_139()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodB2G2Global = 1;
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodB2G2Sink(v7);
}
// 68E360: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodB2G2Global;
// 44FB6F: using guessed type char buf[16];

//----- (000000000044FC61) ----------------------------------------------------
__int64 goodG2B_230()
{
  CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodG2BGlobal = 1;
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodG2BSink(20);
}
// 68E364: using guessed type int CWE400_Resource_Exhaustion__connect_socket_for_loop_22_goodG2BGlobal;

//----- (000000000044FC8D) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_22_good()
{
  goodB2G1_139();
  goodB2G2_139();
  return goodG2B_230();
}

//----- (000000000044FCB1) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_53_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_53b_badSink(v7);
}
// 44FCB1: using guessed type char buf[16];

//----- (000000000044FD99) ----------------------------------------------------
__int64 goodG2B_231()
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_53b_goodG2BSink(20);
}

//----- (000000000044FDBB) ----------------------------------------------------
__int64 goodB2G_214()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_53b_goodB2GSink(v7);
}
// 44FDBB: using guessed type char buf[16];

//----- (000000000044FEA3) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_53_good()
{
  goodG2B_231();
  return goodB2G_214();
}

//----- (000000000044FEBD) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_16_bad()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, "%d", &useconds);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044FF01) ----------------------------------------------------
int goodB2G_215()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  __isoc99_fscanf(stdin, "%d", &useconds);
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044FF62) ----------------------------------------------------
int goodG2B_232()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000044FF90) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_16_good()
{
  goodB2G_215();
  return goodG2B_232();
}

//----- (000000000044FFAA) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_67_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE400_Resource_Exhaustion__connect_socket_sleep_67b_badSink(v8);
}
// 44FFAA: using guessed type char buf[16];

//----- (0000000000450098) ----------------------------------------------------
int goodG2B_233()
{
  return CWE400_Resource_Exhaustion__connect_socket_sleep_67b_goodG2BSink(0x14u);
}

//----- (00000000004500C0) ----------------------------------------------------
int goodB2G_216()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE400_Resource_Exhaustion__connect_socket_sleep_67b_goodB2GSink(v8);
}
// 4500C0: using guessed type char buf[16];

//----- (00000000004501AE) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_67_good()
{
  goodG2B_233();
  return goodB2G_216();
}

//----- (00000000004501C8) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_63b_badSink(__useconds_t *a1)
{
  usleep(*a1);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004501F3) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_63b_goodG2BSink(__useconds_t *a1)
{
  usleep(*a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000045021E) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_63b_goodB2GSink(signed int *a1)
{
  signed int useconds; // [rsp+1Ch] [rbp-4h]

  useconds = *a1;
  if ( *a1 <= 0 || useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (0000000000450264) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_51_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_fwrite_51b_badSink(v4);
}

//----- (00000000004502CC) ----------------------------------------------------
int goodG2B_234()
{
  return CWE400_Resource_Exhaustion__fgets_fwrite_51b_goodG2BSink(20);
}

//----- (00000000004502EE) ----------------------------------------------------
void goodB2G_217()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v1; // [rsp+8h] [rbp-18h]
  __int16 v2; // [rsp+Ch] [rbp-14h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  *(_QWORD *)s = 0LL;
  v1 = 0;
  v2 = 0;
  if ( fgets(s, 14, stdin) )
    v3 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_fwrite_51b_goodB2GSink(v3);
}

//----- (0000000000450356) ----------------------------------------------------
void CWE400_Resource_Exhaustion__fgets_fwrite_51_good()
{
  goodG2B_234();
  goodB2G_217();
}

//----- (0000000000450370) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_15_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  for ( i = 0LL; ; ++i )
  {
    result = v9;
    if ( v9 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 450370: using guessed type char buf[16];

//----- (00000000004504C2) ----------------------------------------------------
int goodB2G1_140()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v5 = result;
          if ( result != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 4504C2: using guessed type char buf[16];

//----- (0000000000450620) ----------------------------------------------------
int goodB2G2_140()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    result = bind(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = listen(fd, 5);
      if ( result != -1 )
      {
        result = accept(fd, 0LL, 0LL);
        v8 = result;
        if ( result != -1 )
        {
          result = recv(v8, buf, 0xDuLL, 0);
          v5 = result;
          if ( result != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              result = atoi(buf);
              v9 = result;
            }
          }
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  if ( v8 != -1 )
    result = close(v8);
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 450620: using guessed type char buf[16];

//----- (000000000045077E) ----------------------------------------------------
__int64 goodG2B1_123()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004507C4) ----------------------------------------------------
__int64 goodG2B2_123()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000045080A) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_15_good()
{
  goodB2G1_140();
  goodB2G2_140();
  goodG2B1_123();
  return goodG2B2_123();
}

//----- (0000000000450838) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_11_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 450838: using guessed type char buf[16];

//----- (000000000045094A) ----------------------------------------------------
int goodB2G1_141()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 45094A: using guessed type char buf[16];

//----- (0000000000450A83) ----------------------------------------------------
int goodB2G2_141()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 450A83: using guessed type char buf[16];

//----- (0000000000450BB0) ----------------------------------------------------
int goodG2B1_124()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    useconds = 20;
  result = globalReturnsTrue();
  if ( result )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}

//----- (0000000000450C04) ----------------------------------------------------
int goodG2B2_124()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( (unsigned int)globalReturnsTrue() )
    useconds = 20;
  result = globalReturnsTrue();
  if ( result )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}

//----- (0000000000450C4C) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_11_good()
{
  goodB2G1_141();
  goodB2G2_141();
  goodG2B1_124();
  return goodG2B2_124();
}

//----- (0000000000450C7A) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_07_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( staticFive_8 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = (unsigned int)staticFive_8;
  if ( staticFive_8 == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E194: using guessed type int staticFive_8;

//----- (0000000000450D1A) ----------------------------------------------------
int goodB2G1_142()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( staticFive_8 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_8;
  if ( staticFive_8 != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E194: using guessed type int staticFive_8;

//----- (0000000000450DD2) ----------------------------------------------------
__int64 goodB2G2_142()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( staticFive_8 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = (unsigned int)staticFive_8;
  if ( staticFive_8 == 5 )
  {
    i = 0LL;
    if ( v5 > 0 && v5 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v5;
        if ( v5 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 68E194: using guessed type int staticFive_8;

//----- (0000000000450E7E) ----------------------------------------------------
__int64 goodG2B1_125()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( staticFive_8 == 5 )
    v2 = 20;
  else
    printLine("Benign, fixed string");
  result = (unsigned int)staticFive_8;
  if ( staticFive_8 == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E194: using guessed type int staticFive_8;

//----- (0000000000450EE4) ----------------------------------------------------
__int64 goodG2B2_125()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( staticFive_8 == 5 )
    v2 = 20;
  result = (unsigned int)staticFive_8;
  if ( staticFive_8 == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E194: using guessed type int staticFive_8;

//----- (0000000000450F3E) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_07_good()
{
  goodB2G1_142();
  goodB2G2_142();
  goodG2B1_125();
  return goodG2B2_125();
}

//----- (0000000000450F6C) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_53c_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_53d_badSink(a1);
}

//----- (0000000000450F83) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_53c_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_53d_goodG2BSink(a1);
}

//----- (0000000000450F9A) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_53c_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_53d_goodB2GSink(a1);
}

//----- (0000000000450FB1) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_31_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *s; // [rsp+18h] [rbp-18h]
  int v4; // [rsp+20h] [rbp-10h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  v5 = v1;
  v4 = v1;
  i = 0LL;
  s = 0LL;
  filename = "output_bad.txt";
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v4;
    if ( v4 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  if ( s )
    result = fclose(s);
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000451081) ----------------------------------------------------
int goodG2B_235()
{
  FILE *s; // [rsp+10h] [rbp-20h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000045113B) ----------------------------------------------------
int goodB2G_218()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-24h]
  char *filename; // [rsp+10h] [rbp-20h]
  FILE *s; // [rsp+18h] [rbp-18h]
  int v4; // [rsp+20h] [rbp-10h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  v5 = v1;
  result = v1;
  v4 = v1;
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  if ( v1 > 0 && v4 <= 20 )
  {
    s = fopen(filename, "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v4;
      if ( v4 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    if ( s )
      result = fclose(s);
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045121B) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_31_good()
{
  goodG2B_235();
  return goodB2G_218();
}

//----- (0000000000451235) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_53d_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000045126E) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_53d_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004512A7) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_for_loop_53d_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (00000000004512EC) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_sleep_64b_badSink((__useconds_t *)&v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000451326) ----------------------------------------------------
int goodG2B_236()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__fscanf_sleep_64b_goodG2BSink((__useconds_t *)&v1);
}

//----- (000000000045134A) ----------------------------------------------------
int goodB2G_219()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_sleep_64b_goodB2GSink(&v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000451384) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_64_good()
{
  goodG2B_236();
  return goodB2G_219();
}

//----- (000000000045139E) ----------------------------------------------------
__int64 __fastcall badSource_9(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 45139E: using guessed type char buf[16];

//----- (00000000004514C1) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_42_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = badSource_9(0xFFFFFFFF);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000045150B) ----------------------------------------------------
__int64 goodG2BSource_9()
{
  return 20LL;
}

//----- (000000000045151E) ----------------------------------------------------
__int64 goodG2B_237()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = goodG2BSource_9();
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000451568) ----------------------------------------------------
__int64 __fastcall goodB2GSource_9(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 451568: using guessed type char buf[16];

//----- (000000000045168B) ----------------------------------------------------
__int64 goodB2G_220()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  result = goodB2GSource_9(0xFFFFFFFF);
  v1 = result;
  if ( (int)result > 0 && (int)result <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (00000000004516E1) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_42_good()
{
  goodB2G_220();
  return goodG2B_237();
}

//----- (00000000004516FB) ----------------------------------------------------
int __fastcall badSink_37(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = badStatic_8;
  if ( badStatic_8 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E368: using guessed type int badStatic_8;

//----- (00000000004517AC) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_21_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  badStatic_8 = 1;
  return badSink_37(v7);
}
// 68E368: using guessed type int badStatic_8;
// 4517AC: using guessed type char buf[16];

//----- (000000000045189E) ----------------------------------------------------
int __fastcall goodB2G1Sink_8(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = goodB2G1Static_8;
  if ( goodB2G1Static_8 )
    return printLine("Benign, fixed string");
  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E36C: using guessed type int goodB2G1Static_8;

//----- (000000000045196A) ----------------------------------------------------
int goodB2G1_143()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G1Static_8 = 0;
  return goodB2G1Sink_8(v7);
}
// 68E36C: using guessed type int goodB2G1Static_8;
// 45196A: using guessed type char buf[16];

//----- (0000000000451A5C) ----------------------------------------------------
int __fastcall goodB2G2Sink_8(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = goodB2G2Static_8;
  if ( goodB2G2Static_8 && a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E370: using guessed type int goodB2G2Static_8;

//----- (0000000000451B1D) ----------------------------------------------------
int goodB2G2_143()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G2Static_8 = 1;
  return goodB2G2Sink_8(v7);
}
// 68E370: using guessed type int goodB2G2Static_8;
// 451B1D: using guessed type char buf[16];

//----- (0000000000451C0F) ----------------------------------------------------
int __fastcall goodG2BSink_37(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = goodG2BStatic_8;
  if ( goodG2BStatic_8 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E374: using guessed type int goodG2BStatic_8;

//----- (0000000000451CC0) ----------------------------------------------------
int goodG2B_238()
{
  goodG2BStatic_8 = 1;
  return goodG2BSink_37(20);
}
// 68E374: using guessed type int goodG2BStatic_8;

//----- (0000000000451CEC) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_21_good()
{
  goodB2G1_143();
  goodB2G2_143();
  return goodG2B_238();
}

//----- (0000000000451D10) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_03_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v10;
    if ( v10 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 451D10: using guessed type char buf[16];

//----- (0000000000451E84) ----------------------------------------------------
int goodB2G1_144()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v7 = result;
      if ( result != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          result = atoi(buf);
          v10 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 451E84: using guessed type char buf[16];

//----- (0000000000452008) ----------------------------------------------------
int goodB2G2_144()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v7 = result;
      if ( result != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          result = atoi(buf);
          v10 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 452008: using guessed type char buf[16];

//----- (000000000045218C) ----------------------------------------------------
int goodG2B1_126()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000045223A) ----------------------------------------------------
int goodG2B2_126()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004522E8) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_03_good()
{
  goodB2G1_144();
  goodB2G2_144();
  goodG2B1_126();
  return goodG2B2_126();
}

//----- (0000000000452316) ----------------------------------------------------
int badSink_38()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__fgets_fwrite_45_badData;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}
// 68E378: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_45_badData;

//----- (00000000004523BF) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_45_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_fwrite_45_badData = v4;
  return badSink_38();
}
// 68E378: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_45_badData;

//----- (0000000000452430) ----------------------------------------------------
int goodG2BSink_38()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__fgets_fwrite_45_goodG2BData;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v2 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}
// 68E37C: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_45_goodG2BData;

//----- (00000000004524D9) ----------------------------------------------------
int goodG2B_239()
{
  CWE400_Resource_Exhaustion__fgets_fwrite_45_goodG2BData = 20;
  return goodG2BSink_38();
}
// 68E37C: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_45_goodG2BData;

//----- (0000000000452504) ----------------------------------------------------
int goodB2GSink_28()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__fgets_fwrite_45_goodB2GData;
  v2 = CWE400_Resource_Exhaustion__fgets_fwrite_45_goodB2GData;
  if ( CWE400_Resource_Exhaustion__fgets_fwrite_45_goodB2GData > 0
    && CWE400_Resource_Exhaustion__fgets_fwrite_45_goodB2GData <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v2 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E380: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_45_goodB2GData;

//----- (00000000004525BD) ----------------------------------------------------
int goodB2G_221()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_fwrite_45_goodB2GData = v4;
  return goodB2GSink_28();
}
// 68E380: using guessed type int CWE400_Resource_Exhaustion__fgets_fwrite_45_goodB2GData;

//----- (000000000045262E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_45_good()
{
  goodG2B_239();
  return goodB2G_221();
}

//----- (0000000000452648) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_67_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_fwrite_67b_badSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000452686) ----------------------------------------------------
int goodG2B_240()
{
  return CWE400_Resource_Exhaustion__fscanf_fwrite_67b_goodG2BSink(20);
}

//----- (00000000004526AE) ----------------------------------------------------
int goodB2G_222()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_fwrite_67b_goodB2GSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004526EC) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_67_good()
{
  goodG2B_240();
  return goodB2G_222();
}

//----- (0000000000452706) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_65_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  __int64 (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__fscanf_for_loop_65b_badSink;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return v2(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000452747) ----------------------------------------------------
__int64 goodG2B_241()
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_65b_goodG2BSink(20);
}

//----- (0000000000452772) ----------------------------------------------------
__int64 goodB2G_223()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  __int64 (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE400_Resource_Exhaustion__fscanf_for_loop_65b_goodB2GSink;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return v2(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004527B3) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_65_good()
{
  goodG2B_241();
  return goodB2G_223();
}

//----- (00000000004527CD) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_18_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v10;
    if ( v10 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 4527CD: using guessed type char buf[16];

//----- (0000000000452943) ----------------------------------------------------
int goodB2G_224()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v7 = result;
      if ( result != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          result = atoi(buf);
          v10 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 452943: using guessed type char buf[16];

//----- (0000000000452AC9) ----------------------------------------------------
int goodG2B_242()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000452B79) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_18_good()
{
  goodB2G_224();
  return goodG2B_242();
}

//----- (0000000000452B93) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_52b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_52c_badSink(a1);
}

//----- (0000000000452BAA) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_52b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_52c_goodG2BSink(a1);
}

//----- (0000000000452BC1) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_52b_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_52c_goodB2GSink(a1);
}

//----- (0000000000452BD8) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_22_badSink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__fscanf_fwrite_22_badGlobal;
  if ( CWE400_Resource_Exhaustion__fscanf_fwrite_22_badGlobal )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E398: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_22_badGlobal;

//----- (0000000000452C89) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodB2G1Sink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodB2G1Global;
  if ( CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E39C: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodB2G1Global;

//----- (0000000000452D55) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodB2G2Sink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodB2G2Global;
  if ( CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodB2G2Global && a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E3A0: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodB2G2Global;

//----- (0000000000452E16) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodG2BSink(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodG2BGlobal;
  if ( CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodG2BGlobal )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E3A4: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodG2BGlobal;

//----- (0000000000452EC7) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_63_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_sleep_63b_badSink((__useconds_t *)&v5);
}
// 452EC7: using guessed type char buf[16];

//----- (0000000000452FB1) ----------------------------------------------------
int goodG2B_243()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__connect_socket_sleep_63b_goodG2BSink((__useconds_t *)&v1);
}

//----- (0000000000452FD5) ----------------------------------------------------
int goodB2G_225()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_sleep_63b_goodB2GSink(&v5);
}
// 452FD5: using guessed type char buf[16];

//----- (00000000004530BF) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_63_good()
{
  goodG2B_243();
  return goodB2G_225();
}

//----- (00000000004530D9) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_22_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_fwrite_22_badGlobal = 1;
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_22_badSink(v7);
}
// 68E384: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_22_badGlobal;
// 4530D9: using guessed type char buf[16];

//----- (00000000004531CB) ----------------------------------------------------
int goodB2G1_145()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodB2G1Global = 0;
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodB2G1Sink(v7);
}
// 68E388: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodB2G1Global;
// 4531CB: using guessed type char buf[16];

//----- (00000000004532BD) ----------------------------------------------------
int goodB2G2_145()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodB2G2Global = 1;
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodB2G2Sink(v7);
}
// 68E38C: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodB2G2Global;
// 4532BD: using guessed type char buf[16];

//----- (00000000004533AF) ----------------------------------------------------
int goodG2B_244()
{
  CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodG2BGlobal = 1;
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodG2BSink(20);
}
// 68E390: using guessed type int CWE400_Resource_Exhaustion__connect_socket_fwrite_22_goodG2BGlobal;

//----- (00000000004533DB) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_22_good()
{
  goodB2G1_145();
  goodB2G2_145();
  return goodG2B_244();
}

//----- (00000000004533FF) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_05_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( staticTrue_8 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = (unsigned int)staticTrue_8;
  if ( staticTrue_8 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E198: using guessed type int staticTrue_8;
// 4533FF: using guessed type char buf[16];

//----- (0000000000453567) ----------------------------------------------------
int goodB2G1_146()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( staticTrue_8 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = staticFalse_8;
  if ( staticFalse_8 )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E198: using guessed type int staticTrue_8;
// 68E394: using guessed type int staticFalse_8;
// 453567: using guessed type char buf[16];

//----- (00000000004536E7) ----------------------------------------------------
__int64 goodB2G2_146()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( staticTrue_8 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = (unsigned int)staticTrue_8;
  if ( staticTrue_8 )
  {
    i = 0LL;
    if ( v9 > 0 && v9 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v9;
        if ( v9 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 68E198: using guessed type int staticTrue_8;
// 4536E7: using guessed type char buf[16];

//----- (000000000045385B) ----------------------------------------------------
__int64 goodG2B1_127()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( staticFalse_8 )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = (unsigned int)staticTrue_8;
  if ( staticTrue_8 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E198: using guessed type int staticTrue_8;
// 68E394: using guessed type int staticFalse_8;

//----- (00000000004538BF) ----------------------------------------------------
__int64 goodG2B2_127()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( staticTrue_8 )
    v2 = 20;
  result = (unsigned int)staticTrue_8;
  if ( staticTrue_8 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E198: using guessed type int staticTrue_8;

//----- (0000000000453917) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_05_good()
{
  goodB2G1_146();
  goodB2G2_146();
  goodG2B1_127();
  return goodG2B2_127();
}

//----- (0000000000453945) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_12_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-60h]
  __int16 s; // [rsp+10h] [rbp-50h]
  uint16_t v3; // [rsp+12h] [rbp-4Eh]
  in_addr_t v4; // [rsp+14h] [rbp-4Ch]
  char *v5; // [rsp+20h] [rbp-40h]
  FILE *v6; // [rsp+28h] [rbp-38h]
  char *filename; // [rsp+30h] [rbp-30h]
  FILE *stream; // [rsp+38h] [rbp-28h]
  int v9; // [rsp+40h] [rbp-20h]
  int fd; // [rsp+44h] [rbp-1Ch]
  unsigned __int64 j; // [rsp+48h] [rbp-18h]
  unsigned __int64 i; // [rsp+50h] [rbp-10h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v9 = recv(fd, buf, 0xDuLL, 0);
        if ( v9 != -1 )
        {
          if ( v9 )
          {
            buf[v9] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    v13 = 20;
  }
  result = globalReturnsTrueOrFalse();
  if ( result )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v13;
      if ( v13 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  else
  {
    j = 0LL;
    v6 = 0LL;
    v5 = "output_good.txt";
    if ( v13 > 0 && v13 <= 20 )
    {
      v6 = fopen(v5, "w+");
      if ( !v6 )
        exit(1);
      for ( j = 0LL; ; ++j )
      {
        result = v13;
        if ( v13 <= j )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, v6) != 50 )
          exit(1);
      }
      if ( v6 )
        result = fclose(v6);
    }
  }
  return result;
}
// 453945: using guessed type char buf[16];

//----- (0000000000453B98) ----------------------------------------------------
int goodB2G_226()
{
  int result; // eax
  char nptr[16]; // [rsp+0h] [rbp-90h]
  struct sockaddr addr; // [rsp+10h] [rbp-80h]
  char buf[16]; // [rsp+20h] [rbp-70h]
  __int16 s; // [rsp+30h] [rbp-60h]
  uint16_t v5; // [rsp+32h] [rbp-5Eh]
  in_addr_t v6; // [rsp+34h] [rbp-5Ch]
  char *v7; // [rsp+48h] [rbp-48h]
  FILE *v8; // [rsp+50h] [rbp-40h]
  char *filename; // [rsp+58h] [rbp-38h]
  FILE *stream; // [rsp+60h] [rbp-30h]
  int v11; // [rsp+68h] [rbp-28h]
  int v12; // [rsp+6Ch] [rbp-24h]
  int v13; // [rsp+70h] [rbp-20h]
  int fd; // [rsp+74h] [rbp-1Ch]
  unsigned __int64 j; // [rsp+78h] [rbp-18h]
  unsigned __int64 i; // [rsp+80h] [rbp-10h]
  int v17; // [rsp+8Ch] [rbp-4h]

  v17 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v6 = inet_addr("127.0.0.1");
      v5 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v13 = recv(fd, buf, 0xDuLL, 0);
        if ( v13 != -1 )
        {
          if ( v13 )
          {
            buf[v13] = 0;
            v17 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    v12 = socket(2, 1, 6);
    if ( v12 != -1 )
    {
      memset(&addr, 0, 0x10uLL);
      addr.sa_family = 2;
      *(_DWORD *)&addr.sa_data[2] = inet_addr("127.0.0.1");
      *(_WORD *)addr.sa_data = htons(0x6987u);
      if ( connect(v12, &addr, 0x10u) != -1 )
      {
        v11 = recv(v12, nptr, 0xDuLL, 0);
        if ( v11 != -1 )
        {
          if ( v11 )
          {
            nptr[v11] = 0;
            v17 = atoi(nptr);
          }
        }
      }
    }
    if ( v12 != -1 )
      close(v12);
  }
  result = globalReturnsTrueOrFalse();
  if ( result )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v17 > 0 && v17 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v17;
        if ( v17 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  else
  {
    j = 0LL;
    v8 = 0LL;
    v7 = "output_good.txt";
    if ( v17 > 0 && v17 <= 20 )
    {
      v8 = fopen(v7, "w+");
      if ( !v8 )
        exit(1);
      for ( j = 0LL; ; ++j )
      {
        result = v17;
        if ( v17 <= j )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, v8) != 50 )
          exit(1);
      }
      if ( v8 )
        result = fclose(v8);
    }
  }
  return result;
}
// 453B98: using guessed type char buf[16];
// 453B98: using guessed type char nptr[16];

//----- (0000000000453ED7) ----------------------------------------------------
int goodG2B_245()
{
  int result; // eax
  FILE *stream; // [rsp+10h] [rbp-30h]
  FILE *s; // [rsp+20h] [rbp-20h]
  unsigned __int64 j; // [rsp+28h] [rbp-18h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]

  globalReturnsTrueOrFalse();
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; i < 0x14; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  else
  {
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( j = 0LL; j < 0x14; ++j )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    result = fclose(stream);
  }
  return result;
}

//----- (000000000045404E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_12_good()
{
  goodB2G_226();
  return goodG2B_245();
}

//----- (0000000000454068) ----------------------------------------------------
__int64 __fastcall badSink_39(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004540A1) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_41_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return badSink_39(v8);
}
// 4540A1: using guessed type char buf[16];

//----- (00000000004541CF) ----------------------------------------------------
__int64 __fastcall goodG2BSink_39(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000454208) ----------------------------------------------------
__int64 goodG2B_246()
{
  return goodG2BSink_39(20);
}

//----- (000000000045422A) ----------------------------------------------------
__int64 __fastcall goodB2GSink_29(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000045426F) ----------------------------------------------------
__int64 goodB2G_227()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return goodB2GSink_29(v8);
}
// 45426F: using guessed type char buf[16];

//----- (000000000045439D) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_41_good()
{
  goodB2G_227();
  return goodG2B_246();
}

//----- (00000000004543B7) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_68b_badSink()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__fscanf_for_loop_68_badData;
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 68E458: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_68_badData;

//----- (00000000004543F6) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_68b_goodG2BSink()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = CWE400_Resource_Exhaustion__fscanf_for_loop_68_goodG2BData;
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 68E45C: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_68_goodG2BData;

//----- (0000000000454435) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_68b_goodB2GSink()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  result = (unsigned int)CWE400_Resource_Exhaustion__fscanf_for_loop_68_goodB2GData;
  v1 = CWE400_Resource_Exhaustion__fscanf_for_loop_68_goodB2GData;
  if ( CWE400_Resource_Exhaustion__fscanf_for_loop_68_goodB2GData > 0
    && CWE400_Resource_Exhaustion__fscanf_for_loop_68_goodB2GData <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E460: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_68_goodB2GData;

//----- (0000000000454480) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_02_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  for ( i = 0LL; ; ++i )
  {
    result = v8;
    if ( v8 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 454480: using guessed type char buf[16];

//----- (000000000045458A) ----------------------------------------------------
int goodB2G1_147()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v5 = result;
      if ( result != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 45458A: using guessed type char buf[16];

//----- (00000000004546A0) ----------------------------------------------------
int goodB2G2_147()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v5 = result;
      if ( result != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 4546A0: using guessed type char buf[16];

//----- (00000000004547B6) ----------------------------------------------------
__int64 goodG2B1_128()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004547FA) ----------------------------------------------------
__int64 goodG2B2_128()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000045483E) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_02_good()
{
  goodB2G1_147();
  goodB2G2_147();
  goodG2B1_128();
  return goodG2B2_128();
}

//----- (000000000045486C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_52_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_52b_badSink(v7);
}
// 45486C: using guessed type char buf[16];

//----- (0000000000454954) ----------------------------------------------------
__int64 goodG2B_247()
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_52b_goodG2BSink(20);
}

//----- (0000000000454976) ----------------------------------------------------
__int64 goodB2G_228()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_52b_goodB2GSink(v7);
}
// 454976: using guessed type char buf[16];

//----- (0000000000454A5E) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_52_good()
{
  goodG2B_247();
  return goodB2G_228();
}

//----- (0000000000454A78) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_64b_badSink(int *a1)
{
  FILE *s; // [rsp+20h] [rbp-20h]
  int v3; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v3 = *a1;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000454B2D) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_64b_goodG2BSink(int *a1)
{
  FILE *s; // [rsp+20h] [rbp-20h]
  int v3; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v3 = *a1;
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; v3 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000454BE2) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_fwrite_64b_goodB2GSink(int *a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-20h]
  int v3; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  result = *a1;
  v3 = *a1;
  if ( *a1 > 0 && v3 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (0000000000454CA7) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_34_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v7 = recv(v10, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v5 = v11;
  v6 = v11;
  for ( i = 0LL; ; ++i )
  {
    result = v6;
    if ( v6 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 454CA7: using guessed type char buf[16];

//----- (0000000000454E03) ----------------------------------------------------
__int64 goodG2B_248()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000454E53) ----------------------------------------------------
__int64 goodB2G_229()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v10; // [rsp+38h] [rbp-8h]
  int v11; // [rsp+3Ch] [rbp-4h]

  v11 = -1;
  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v10 = accept(fd, 0LL, 0LL);
      if ( v10 != -1 )
      {
        v7 = recv(v10, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v10 != -1 )
    close(v10);
  v5 = v11;
  result = (unsigned int)v11;
  v6 = v11;
  i = 0LL;
  if ( v11 > 0 && v6 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v6;
      if ( v6 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 454E53: using guessed type char buf[16];

//----- (0000000000454FBB) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_34_good()
{
  goodG2B_248();
  return goodB2G_229();
}

//----- (0000000000454FD5) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_51b_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000045500E) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_51b_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000455047) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_51b_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000045508C) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_22_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_fwrite_22_badGlobal = 1;
  return CWE400_Resource_Exhaustion__fscanf_fwrite_22_badSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E398: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_22_badGlobal;

//----- (00000000004550CE) ----------------------------------------------------
int goodB2G1_148()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodB2G1Global = 0;
  return CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodB2G1Sink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E39C: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodB2G1Global;

//----- (0000000000455110) ----------------------------------------------------
int goodB2G2_148()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodB2G2Global = 1;
  return CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodB2G2Sink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E3A0: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodB2G2Global;

//----- (0000000000455152) ----------------------------------------------------
int goodG2B_249()
{
  CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodG2BGlobal = 1;
  return CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodG2BSink(20);
}
// 68E3A4: using guessed type int CWE400_Resource_Exhaustion__fscanf_fwrite_22_goodG2BGlobal;

//----- (000000000045517E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_22_good()
{
  goodB2G1_148();
  goodB2G2_148();
  return goodG2B_249();
}

//----- (00000000004551A2) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_66b_badSink(__int64 a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = *(_DWORD *)(a1 + 8);
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004551E6) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_66b_goodG2BSink(__int64 a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = *(_DWORD *)(a1 + 8);
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000045522A) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_66b_goodB2GSink(__int64 a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = *(unsigned int *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 > 0 && v2 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000045527A) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_16_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  for ( i = 0LL; ; ++i )
  {
    result = v8;
    if ( v8 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 45527A: using guessed type char buf[16];

//----- (0000000000455386) ----------------------------------------------------
int goodB2G_230()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v5 = result;
      if ( result != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          result = atoi(buf);
          v8 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 455386: using guessed type char buf[16];

//----- (000000000045549E) ----------------------------------------------------
__int64 goodG2B_250()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004554E4) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_16_good()
{
  goodB2G_230();
  return goodG2B_250();
}

//----- (00000000004554FE) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_53b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_53c_badSink(a1);
}

//----- (0000000000455515) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_53b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_53c_goodG2BSink(a1);
}

//----- (000000000045552C) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_53b_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_53c_goodB2GSink(a1);
}

//----- (0000000000455543) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_52_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_52b_badSink(v8);
}
// 455543: using guessed type char buf[16];

//----- (0000000000455671) ----------------------------------------------------
__int64 goodG2B_251()
{
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_52b_goodG2BSink(20);
}

//----- (0000000000455693) ----------------------------------------------------
__int64 goodB2G_231()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_52b_goodB2GSink(v8);
}
// 455693: using guessed type char buf[16];

//----- (00000000004557C1) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_52_good()
{
  goodG2B_251();
  return goodB2G_231();
}

//----- (00000000004557DB) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_52c_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000455814) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_52c_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000045584D) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_52c_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000455892) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_11_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 455892: using guessed type char buf[16];

//----- (0000000000455A2A) ----------------------------------------------------
int goodB2G1_149()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsFalse();
  if ( result )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 455A2A: using guessed type char buf[16];

//----- (0000000000455BDD) ----------------------------------------------------
int goodB2G2_149()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v10 > 0 && v10 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v10;
        if ( v10 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 455BDD: using guessed type char buf[16];

//----- (0000000000455D85) ----------------------------------------------------
int goodG2B1_129()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = globalReturnsTrue();
  if ( result )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (0000000000455E5F) ----------------------------------------------------
int goodG2B2_129()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    v3 = 20;
  result = globalReturnsTrue();
  if ( result )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}

//----- (0000000000455F2D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_11_good()
{
  goodB2G1_149();
  goodB2G2_149();
  goodG2B1_129();
  return goodG2B2_129();
}

//----- (0000000000455F5B) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_02_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v10;
    if ( v10 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 455F5B: using guessed type char buf[16];

//----- (00000000004560CF) ----------------------------------------------------
int goodB2G1_150()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v7 = result;
      if ( result != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          result = atoi(buf);
          v10 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 4560CF: using guessed type char buf[16];

//----- (0000000000456253) ----------------------------------------------------
int goodB2G2_150()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v7 = result;
      if ( result != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          result = atoi(buf);
          v10 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 456253: using guessed type char buf[16];

//----- (00000000004563D7) ----------------------------------------------------
int goodG2B1_130()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000456485) ----------------------------------------------------
int goodG2B2_130()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000456533) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_02_good()
{
  goodB2G1_150();
  goodB2G2_150();
  goodG2B1_130();
  return goodG2B2_130();
}

//----- (0000000000456561) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_68_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_for_loop_68_badData = v1;
  return CWE400_Resource_Exhaustion__fscanf_for_loop_68b_badSink();
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E458: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_68_badData;

//----- (00000000004565A2) ----------------------------------------------------
__int64 goodG2B_252()
{
  CWE400_Resource_Exhaustion__fscanf_for_loop_68_goodG2BData = 20;
  return CWE400_Resource_Exhaustion__fscanf_for_loop_68b_goodG2BSink();
}
// 68E45C: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_68_goodG2BData;

//----- (00000000004565CD) ----------------------------------------------------
__int64 goodB2G_232()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE400_Resource_Exhaustion__fscanf_for_loop_68_goodB2GData = v1;
  return CWE400_Resource_Exhaustion__fscanf_for_loop_68b_goodB2GSink();
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E460: using guessed type int CWE400_Resource_Exhaustion__fscanf_for_loop_68_goodB2GData;

//----- (000000000045660E) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_68_good()
{
  goodG2B_252();
  return goodB2G_232();
}

//----- (0000000000456628) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_14_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (00000000004566B0) ----------------------------------------------------
int goodB2G1_151()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 68E1A8: using guessed type int globalFive;

//----- (000000000045675F) ----------------------------------------------------
int goodB2G2_151()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      useconds = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (0000000000456802) ----------------------------------------------------
int goodG2B1_131()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( globalFive == 5 )
    useconds = 20;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (0000000000456850) ----------------------------------------------------
int goodG2B2_131()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( globalFive == 5 )
    useconds = 20;
  result = globalFive;
  if ( globalFive == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E1A8: using guessed type int globalFive;

//----- (0000000000456892) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_14_good()
{
  goodB2G1_151();
  goodB2G2_151();
  goodG2B1_131();
  return goodG2B2_131();
}

//----- (00000000004568C0) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_10_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 4568C0: using guessed type char buf[16];

//----- (0000000000456A50) ----------------------------------------------------
int goodB2G1_152()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFalse;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;
// 456A50: using guessed type char buf[16];

//----- (0000000000456BFB) ----------------------------------------------------
int goodB2G2_152()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v7 = recv(fd, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    i = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v10 > 0 && v10 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v10;
        if ( v10 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        result = fclose(stream);
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 456BFB: using guessed type char buf[16];

//----- (0000000000456D9B) ----------------------------------------------------
int goodG2B1_132()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v3 = 20;
  result = globalTrue;
  if ( globalTrue )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;

//----- (0000000000456E6D) ----------------------------------------------------
int goodG2B2_132()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( globalTrue )
    v3 = 20;
  result = globalTrue;
  if ( globalTrue )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;

//----- (0000000000456F33) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_10_good()
{
  goodB2G1_152();
  goodB2G2_152();
  goodG2B1_132();
  return goodG2B2_132();
}

//----- (0000000000456F61) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_51_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_51b_badSink(v7);
}
// 456F61: using guessed type char buf[16];

//----- (0000000000457049) ----------------------------------------------------
__int64 goodG2B_253()
{
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_51b_goodG2BSink(20);
}

//----- (000000000045706B) ----------------------------------------------------
__int64 goodB2G_233()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE400_Resource_Exhaustion__connect_socket_for_loop_51b_goodB2GSink(v7);
}
// 45706B: using guessed type char buf[16];

//----- (0000000000457153) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_51_good()
{
  goodG2B_253();
  return goodB2G_233();
}

//----- (000000000045716D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_64_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_fwrite_64b_badSink(&v4);
}

//----- (00000000004571D7) ----------------------------------------------------
int goodG2B_254()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__fgets_fwrite_64b_goodG2BSink(&v1);
}

//----- (00000000004571FB) ----------------------------------------------------
int goodB2G_234()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE400_Resource_Exhaustion__fgets_fwrite_64b_goodB2GSink(&v4);
}

//----- (0000000000457265) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_64_good()
{
  goodG2B_254();
  return goodB2G_234();
}

//----- (000000000045727F) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_13_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    i = 0LL;
    s = 0LL;
    filename = "output_bad.txt";
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    if ( s )
      result = fclose(s);
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000045735D) ----------------------------------------------------
int goodB2G1_153()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000457459) ----------------------------------------------------
int goodB2G2_153()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    i = 0LL;
    s = 0LL;
    filename = "output_good.txt";
    result = v1;
    if ( v1 > 0 )
    {
      result = v1;
      if ( v1 <= 20 )
      {
        s = fopen(filename, "w+");
        if ( !s )
          exit(1);
        for ( i = 0LL; ; ++i )
        {
          result = v1;
          if ( v1 <= i )
            break;
          if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
            exit(1);
        }
        if ( s )
          result = fclose(s);
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000045754A) ----------------------------------------------------
int goodG2B1_133()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v3 = 20;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000045761E) ----------------------------------------------------
int goodG2B2_133()
{
  int result; // eax
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v3 = 20;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; v3 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004576E6) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_13_good()
{
  goodB2G1_153();
  goodB2G2_153();
  goodG2B1_133();
  return goodG2B2_133();
}

//----- (0000000000457714) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_53d_badSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000457735) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_53d_goodG2BSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000457756) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_53d_goodB2GSink(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (0000000000457792) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54e_badSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004577CB) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54e_goodG2BSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000457804) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__listen_socket_for_loop_54e_goodB2GSink(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000457849) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_34_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  int v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+1Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v7;
  v5 = v7;
  for ( i = 0LL; ; ++i )
  {
    result = v5;
    if ( v5 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004578DF) ----------------------------------------------------
__int64 goodG2B_255()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000045792F) ----------------------------------------------------
__int64 goodB2G_235()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  int v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+1Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+20h] [rbp-10h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v7 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v7;
  result = (unsigned int)v7;
  v5 = v7;
  i = 0LL;
  if ( v7 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (00000000004579D1) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_34_good()
{
  goodG2B_255();
  return goodB2G_235();
}

//----- (00000000004579EB) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_66_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+40h] [rbp-10h]
  int fd; // [rsp+44h] [rbp-Ch]
  int v9; // [rsp+48h] [rbp-8h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_66b_badSink((__int64)&v5);
}
// 4579EB: using guessed type char buf[16];

//----- (0000000000457B21) ----------------------------------------------------
__int64 goodG2B_256()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 20;
  v2 = 20;
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000457B4B) ----------------------------------------------------
__int64 goodB2G_236()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+40h] [rbp-10h]
  int fd; // [rsp+44h] [rbp-Ch]
  int v9; // [rsp+48h] [rbp-8h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_66b_goodB2GSink((__int64)&v5);
}
// 457B4B: using guessed type char buf[16];

//----- (0000000000457C81) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_66_good()
{
  goodG2B_256();
  return goodB2G_236();
}

//----- (0000000000457C9B) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54c_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_54d_badSink(a1);
}

//----- (0000000000457CB2) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54c_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_54d_goodG2BSink(a1);
}

//----- (0000000000457CC9) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54c_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__connect_socket_fwrite_54d_goodB2GSink(a1);
}

//----- (0000000000457CE0) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_67b_badSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000457D07) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_67b_goodG2BSink(__useconds_t a1)
{
  usleep(a1);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000457D2E) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fgets_sleep_67b_goodB2GSink(signed int a1)
{
  if ( a1 <= 0 || a1 > 2000 )
    return printLine("Sleep time too long");
  usleep(a1);
  return printLine("Sleep time OK");
}

//----- (0000000000457D70) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_sleep_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (0000000000457DCD) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_sleep_61b_goodG2BSource()
{
  return 20LL;
}

//----- (0000000000457DE0) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fgets_sleep_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (0000000000457E3D) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 457E3D: using guessed type char buf[16];

//----- (0000000000457F1A) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_sleep_61b_goodG2BSource()
{
  return 20LL;
}

//----- (0000000000457F2D) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_sleep_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 457F2D: using guessed type char buf[16];

//----- (000000000045800A) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_01_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v10 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v10;
    if ( v10 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}
// 45800A: using guessed type char buf[16];

//----- (000000000045817E) ----------------------------------------------------
int goodG2B_257()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000045822C) ----------------------------------------------------
int goodB2G_237()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  in_addr_t v4; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+28h] [rbp-28h]
  FILE *stream; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  int fd; // [rsp+3Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  result = socket(2, 1, 6);
  fd = result;
  if ( result != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    result = connect(fd, (const struct sockaddr *)&s, 0x10u);
    if ( result != -1 )
    {
      result = recv(fd, buf, 0xDuLL, 0);
      v7 = result;
      if ( result != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          result = atoi(buf);
          v10 = result;
        }
      }
    }
  }
  if ( fd != -1 )
    result = close(fd);
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v10 > 0 && v10 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v10;
      if ( v10 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}
// 45822C: using guessed type char buf[16];

//----- (00000000004583B0) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_fwrite_01_good()
{
  goodG2B_257();
  return goodB2G_237();
}

//----- (00000000004583CA) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_63_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_63b_badSink(&v5);
}
// 4583CA: using guessed type char buf[16];

//----- (00000000004584FA) ----------------------------------------------------
int goodG2B_258()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_63b_goodG2BSink(&v1);
}

//----- (000000000045851E) ----------------------------------------------------
int goodB2G_238()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_63b_goodB2GSink(&v5);
}
// 45851E: using guessed type char buf[16];

//----- (000000000045864E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_63_good()
{
  goodG2B_258();
  return goodB2G_238();
}

//----- (0000000000458668) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_53d_badSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000045870B) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_53d_goodG2BSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (00000000004587AE) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_53d_goodB2GSink(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (0000000000458861) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_63b_badSink(__useconds_t *a1)
{
  usleep(*a1);
  return printLine("Sleep time possibly too long");
}

//----- (000000000045888C) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_63b_goodG2BSink(__useconds_t *a1)
{
  usleep(*a1);
  return printLine("Sleep time possibly too long");
}

//----- (00000000004588B7) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__fscanf_sleep_63b_goodB2GSink(signed int *a1)
{
  signed int useconds; // [rsp+1Ch] [rbp-4h]

  useconds = *a1;
  if ( *a1 <= 0 || useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (00000000004588FD) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_06_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  for ( i = 0LL; ; ++i )
  {
    result = v8;
    if ( v8 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 4588FD: using guessed type char buf[16];

//----- (0000000000458A1F) ----------------------------------------------------
__int64 goodB2G1_154()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  result = 5LL;
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 458A1F: using guessed type char buf[16];

//----- (0000000000458B59) ----------------------------------------------------
__int64 goodB2G2_154()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  result = 5LL;
  i = 0LL;
  if ( v8 > 0 && v8 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v8;
      if ( v8 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 458B59: using guessed type char buf[16];

//----- (0000000000458C87) ----------------------------------------------------
__int64 goodG2B1_134()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000458CEB) ----------------------------------------------------
__int64 goodG2B2_134()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000458D43) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__connect_socket_for_loop_06_good()
{
  goodB2G1_154();
  goodB2G2_154();
  goodG2B1_134();
  return goodG2B2_134();
}

//----- (0000000000458D71) ----------------------------------------------------
int CWE400_Resource_Exhaustion__listen_socket_fwrite_52_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_52b_badSink(v8);
}
// 458D71: using guessed type char buf[16];

//----- (0000000000458E9F) ----------------------------------------------------
int goodG2B_259()
{
  return CWE400_Resource_Exhaustion__listen_socket_fwrite_52b_goodG2BSink(20);
}

//----- (0000000000458EC1) ----------------------------------------------------
void goodB2G_239()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v2; // [rsp+12h] [rbp-1Eh]
  int v3; // [rsp+14h] [rbp-1Ch]
  int v4; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  v6 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v3 = 0;
    v2 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v6 = accept(fd, 0LL, 0LL);
      if ( v6 != -1 )
      {
        v4 = recv(v6, buf, 0xDuLL, 0);
        if ( v4 != -1 )
        {
          if ( v4 )
          {
            buf[v4] = 0;
            v7 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v6 != -1 )
    close(v6);
  CWE400_Resource_Exhaustion__listen_socket_fwrite_52b_goodB2GSink(v7);
}
// 458EC1: using guessed type char buf[16];

//----- (0000000000458FEF) ----------------------------------------------------
void CWE400_Resource_Exhaustion__listen_socket_fwrite_52_good()
{
  goodG2B_259();
  goodB2G_239();
}

//----- (0000000000459009) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_04_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (000000000045908D) ----------------------------------------------------
int goodB2G1_155()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (0000000000459138) ----------------------------------------------------
int goodB2G2_155()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  __useconds_t useconds; // [rsp+1Ch] [rbp-4h]

  useconds = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    useconds = atoi(s);
  else
    printLine("fgets() failed.");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (00000000004591D7) ----------------------------------------------------
int goodG2B1_135()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000459221) ----------------------------------------------------
int goodG2B2_135()
{
  usleep(0x14u);
  return printLine("Sleep time possibly too long");
}

//----- (000000000045925F) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_04_good()
{
  goodB2G1_155();
  goodB2G2_155();
  goodG2B1_135();
  return goodG2B2_135();
}

//----- (000000000045928D) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_11_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalReturnsTrue();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000459303) ----------------------------------------------------
int goodB2G1_156()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  i = 0LL;
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000459394) ----------------------------------------------------
__int64 goodB2G2_156()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v1);
  result = globalReturnsTrue();
  if ( (_DWORD)result )
  {
    i = 0LL;
    result = v1;
    if ( (int)v1 > 0 )
    {
      result = v1;
      if ( (int)v1 <= 20 )
      {
        for ( i = 0LL; ; ++i )
        {
          result = (int)v1;
          if ( (int)v1 <= i )
            break;
          printLine("Hello");
        }
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000459419) ----------------------------------------------------
__int64 goodG2B1_136()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = globalReturnsTrue();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000459485) ----------------------------------------------------
__int64 goodG2B2_136()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    v2 = 20;
  result = globalReturnsTrue();
  if ( (_DWORD)result )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (00000000004594E5) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_11_good()
{
  goodB2G1_156();
  goodB2G2_156();
  goodG2B1_136();
  return goodG2B2_136();
}

//----- (0000000000459513) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54d_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_54e_badSink(a1);
}

//----- (000000000045952A) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54d_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_54e_goodG2BSink(a1);
}

//----- (0000000000459541) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54d_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__connect_socket_fwrite_54e_goodB2GSink(a1);
}

//----- (0000000000459558) ----------------------------------------------------
int __fastcall badSink_40(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = badStatic_9;
  if ( badStatic_9 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E3A8: using guessed type int badStatic_9;

//----- (0000000000459609) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_21_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  badStatic_9 = 1;
  return badSink_40(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E3A8: using guessed type int badStatic_9;

//----- (000000000045964B) ----------------------------------------------------
int __fastcall goodB2G1Sink_9(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = goodB2G1Static_9;
  if ( goodB2G1Static_9 )
    return printLine("Benign, fixed string");
  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E3AC: using guessed type int goodB2G1Static_9;

//----- (0000000000459717) ----------------------------------------------------
int goodB2G1_157()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G1Static_9 = 0;
  return goodB2G1Sink_9(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E3AC: using guessed type int goodB2G1Static_9;

//----- (0000000000459759) ----------------------------------------------------
int __fastcall goodB2G2Sink_9(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = goodB2G2Static_9;
  if ( goodB2G2Static_9 && a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E3B0: using guessed type int goodB2G2Static_9;

//----- (000000000045981A) ----------------------------------------------------
int goodB2G2_157()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G2Static_9 = 1;
  return goodB2G2Sink_9(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 68E3B0: using guessed type int goodB2G2Static_9;

//----- (000000000045985C) ----------------------------------------------------
int __fastcall goodG2BSink_40(int a1)
{
  int result; // eax
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = goodG2BStatic_9;
  if ( goodG2BStatic_9 )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  return result;
}
// 68E3B4: using guessed type int goodG2BStatic_9;

//----- (000000000045990D) ----------------------------------------------------
int goodG2B_260()
{
  goodG2BStatic_9 = 1;
  return goodG2BSink_40(20);
}
// 68E3B4: using guessed type int goodG2BStatic_9;

//----- (0000000000459939) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_21_good()
{
  goodB2G1_157();
  goodB2G2_157();
  return goodG2B_260();
}

//----- (000000000045995D) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_15_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  for ( i = 0LL; ; ++i )
  {
    result = v5;
    if ( v5 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (00000000004599E9) ----------------------------------------------------
int goodB2G1_158()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000459A81) ----------------------------------------------------
int goodB2G2_158()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
  {
    result = atoi(s);
    v5 = result;
  }
  else
  {
    result = printLine("fgets() failed.");
  }
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000459B19) ----------------------------------------------------
__int64 goodG2B1_137()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000459B5F) ----------------------------------------------------
__int64 goodG2B2_137()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000459BA5) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_15_good()
{
  goodB2G1_158();
  goodB2G2_158();
  goodG2B1_137();
  return goodG2B2_137();
}

//----- (0000000000459BD3) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_66b_badSink(__int64 a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = *(_DWORD *)(a1 + 8);
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000459C17) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_66b_goodG2BSink(__int64 a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v2 = *(_DWORD *)(a1 + 8);
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (0000000000459C5B) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_66b_goodB2GSink(__int64 a1)
{
  __int64 result; // rax
  int v2; // [rsp+14h] [rbp-Ch]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  result = *(unsigned int *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 8);
  if ( v2 > 0 && v2 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (0000000000459CAB) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_61_bad()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = CWE400_Resource_Exhaustion__connect_socket_sleep_61b_badSource(0xFFFFFFFF);
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000459CDD) ----------------------------------------------------
int goodG2B_261()
{
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = CWE400_Resource_Exhaustion__connect_socket_sleep_61b_goodG2BSource();
  usleep(useconds);
  return printLine("Sleep time possibly too long");
}

//----- (0000000000459D0F) ----------------------------------------------------
int goodB2G_240()
{
  signed int useconds; // [rsp+Ch] [rbp-4h]

  useconds = CWE400_Resource_Exhaustion__connect_socket_sleep_61b_goodB2GSource(0xFFFFFFFF);
  if ( useconds <= 0 || useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}

//----- (0000000000459D5C) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_61_good()
{
  goodG2B_261();
  return goodB2G_240();
}

//----- (0000000000459D76) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_18_bad()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_bad.txt";
  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  if ( s )
    result = fclose(s);
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000459E3C) ----------------------------------------------------
int goodB2G_241()
{
  int result; // eax
  int v1; // [rsp+4h] [rbp-1Ch]
  char *filename; // [rsp+8h] [rbp-18h]
  FILE *s; // [rsp+10h] [rbp-10h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  s = 0LL;
  filename = "output_good.txt";
  result = v1;
  if ( v1 > 0 )
  {
    result = v1;
    if ( v1 <= 20 )
    {
      s = fopen(filename, "w+");
      if ( !s )
        exit(1);
      for ( i = 0LL; ; ++i )
      {
        result = v1;
        if ( v1 <= i )
          break;
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
          exit(1);
      }
      if ( s )
        result = fclose(s);
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000459F15) ----------------------------------------------------
int goodG2B_262()
{
  FILE *s; // [rsp+8h] [rbp-18h]
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (0000000000459FC5) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_18_good()
{
  goodB2G_241();
  return goodG2B_262();
}

//----- (0000000000459FDF) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_52b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_52c_badSink(a1);
}

//----- (0000000000459FF6) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_52b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_52c_goodG2BSink(a1);
}

//----- (000000000045A00D) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__fscanf_for_loop_52b_goodB2GSink(int a1)
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_52c_goodB2GSink(a1);
}

//----- (000000000045A024) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_34_bad()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-40h]
  int v2; // [rsp+8h] [rbp-38h]
  __int16 v3; // [rsp+Ch] [rbp-34h]
  int v4; // [rsp+10h] [rbp-30h]
  char *filename; // [rsp+18h] [rbp-28h]
  FILE *stream; // [rsp+20h] [rbp-20h]
  int v7; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v9;
  v7 = v9;
  i = 0LL;
  stream = 0LL;
  filename = "output_bad.txt";
  stream = fopen("output_bad.txt", "w+");
  if ( !stream )
    exit(1);
  for ( i = 0LL; ; ++i )
  {
    result = v7;
    if ( v7 <= i )
      break;
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
      exit(1);
  }
  if ( stream )
    result = fclose(stream);
  return result;
}

//----- (000000000045A124) ----------------------------------------------------
int goodG2B_263()
{
  FILE *s; // [rsp+18h] [rbp-18h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; i < 0x14; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000045A1DE) ----------------------------------------------------
int goodB2G_242()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-40h]
  int v2; // [rsp+8h] [rbp-38h]
  __int16 v3; // [rsp+Ch] [rbp-34h]
  int v4; // [rsp+10h] [rbp-30h]
  char *filename; // [rsp+18h] [rbp-28h]
  FILE *stream; // [rsp+20h] [rbp-20h]
  int v7; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v9;
  result = v9;
  v7 = v9;
  i = 0LL;
  stream = 0LL;
  filename = "output_good.txt";
  if ( v9 > 0 && v7 <= 20 )
  {
    stream = fopen(filename, "w+");
    if ( !stream )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v7;
      if ( v7 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      result = fclose(stream);
  }
  return result;
}

//----- (000000000045A2EE) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_fwrite_34_good()
{
  goodG2B_263();
  return goodB2G_242();
}

//----- (000000000045A308) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_63_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_63b_badSink(&v5);
}
// 45A308: using guessed type char buf[16];

//----- (000000000045A438) ----------------------------------------------------
__int64 goodG2B_264()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_63b_goodG2BSink(&v1);
}

//----- (000000000045A45C) ----------------------------------------------------
__int64 goodB2G_243()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE400_Resource_Exhaustion__listen_socket_for_loop_63b_goodB2GSink(&v5);
}
// 45A45C: using guessed type char buf[16];

//----- (000000000045A58C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_63_good()
{
  goodG2B_264();
  return goodB2G_243();
}

//----- (000000000045A5A6) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_sleep_63b_badSink((__useconds_t *)&v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045A5E0) ----------------------------------------------------
int goodG2B_265()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 20;
  return CWE400_Resource_Exhaustion__fscanf_sleep_63b_goodG2BSink((__useconds_t *)&v1);
}

//----- (000000000045A604) ----------------------------------------------------
int goodB2G_244()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_sleep_63b_goodB2GSink(&v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045A63E) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_sleep_63_good()
{
  goodG2B_265();
  return goodB2G_244();
}

//----- (000000000045A658) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_10_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = (unsigned int)globalTrue;
  if ( globalTrue )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;

//----- (000000000045A6F6) ----------------------------------------------------
int goodB2G1_159()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFalse;
  if ( globalFalse )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;

//----- (000000000045A7AC) ----------------------------------------------------
__int64 goodB2G2_159()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = (unsigned int)globalTrue;
  if ( globalTrue )
  {
    i = 0LL;
    if ( v5 > 0 && v5 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v5;
        if ( v5 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;

//----- (000000000045A856) ----------------------------------------------------
__int64 goodG2B1_138()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = (unsigned int)globalTrue;
  if ( globalTrue )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;
// 68E3D0: using guessed type int globalFalse;

//----- (000000000045A8BA) ----------------------------------------------------
__int64 goodG2B2_138()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( globalTrue )
    v2 = 20;
  result = (unsigned int)globalTrue;
  if ( globalTrue )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A4: using guessed type int globalTrue;

//----- (000000000045A912) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_10_good()
{
  goodB2G1_159();
  goodB2G2_159();
  goodG2B1_138();
  return goodG2B2_138();
}

//----- (000000000045A940) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_07_bad()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( staticFive_9 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive_9;
  if ( staticFive_9 == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E19C: using guessed type int staticFive_9;
// 45A940: using guessed type char buf[16];

//----- (000000000045AA4C) ----------------------------------------------------
int goodB2G1_160()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( staticFive_9 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( staticFive_9 != 5 )
    return printLine("Benign, fixed string");
  if ( (int)useconds <= 0 || (int)useconds > 2000 )
    return printLine("Sleep time too long");
  usleep(useconds);
  return printLine("Sleep time OK");
}
// 68E19C: using guessed type int staticFive_9;
// 45AA4C: using guessed type char buf[16];

//----- (000000000045AB7F) ----------------------------------------------------
int goodB2G2_160()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  __useconds_t useconds; // [rsp+2Ch] [rbp-4h]

  useconds = -1;
  if ( staticFive_9 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = inet_addr("127.0.0.1");
      v3 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v5 = recv(fd, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            useconds = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive_9;
  if ( staticFive_9 == 5 )
  {
    if ( (int)useconds <= 0 || (int)useconds > 2000 )
    {
      result = printLine("Sleep time too long");
    }
    else
    {
      usleep(useconds);
      result = printLine("Sleep time OK");
    }
  }
  return result;
}
// 68E19C: using guessed type int staticFive_9;
// 45AB7F: using guessed type char buf[16];

//----- (000000000045ACA6) ----------------------------------------------------
int goodG2B1_139()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( staticFive_9 == 5 )
    useconds = 20;
  else
    printLine("Benign, fixed string");
  result = staticFive_9;
  if ( staticFive_9 == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E19C: using guessed type int staticFive_9;

//----- (000000000045ACF4) ----------------------------------------------------
int goodG2B2_139()
{
  int result; // eax
  __useconds_t useconds; // [rsp+Ch] [rbp-4h]

  useconds = -1;
  if ( staticFive_9 == 5 )
    useconds = 20;
  result = staticFive_9;
  if ( staticFive_9 == 5 )
  {
    usleep(useconds);
    result = printLine("Sleep time possibly too long");
  }
  return result;
}
// 68E19C: using guessed type int staticFive_9;

//----- (000000000045AD36) ----------------------------------------------------
int CWE400_Resource_Exhaustion__connect_socket_sleep_07_good()
{
  goodB2G1_160();
  goodB2G2_160();
  goodG2B1_139();
  return goodG2B2_139();
}

//----- (000000000045AD64) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_64b_badSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+1Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v2 = *a1;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000045ADAF) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_64b_goodG2BSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+1Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v2 = *a1;
  for ( i = 0LL; ; ++i )
  {
    result = v2;
    if ( v2 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000045ADFA) ----------------------------------------------------
__int64 __fastcall CWE400_Resource_Exhaustion__connect_socket_for_loop_64b_goodB2GSink(int *a1)
{
  __int64 result; // rax
  int v2; // [rsp+1Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  result = (unsigned int)*a1;
  v2 = *a1;
  if ( *a1 > 0 && v2 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000045AE51) ----------------------------------------------------
void CWE400_Resource_Exhaustion__listen_socket_fwrite_17_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v2; // [rsp+12h] [rbp-3Eh]
  int v3; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+20h] [rbp-30h]
  FILE *stream; // [rsp+28h] [rbp-28h]
  int v6; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  unsigned __int64 k; // [rsp+38h] [rbp-18h]
  int v9; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+44h] [rbp-Ch]
  int j; // [rsp+48h] [rbp-8h]
  int i; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    v9 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = 0;
      v2 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v9 = accept(fd, 0LL, 0LL);
        if ( v9 != -1 )
        {
          v6 = recv(v9, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v10 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v9 != -1 )
      close(v9);
  }
  for ( j = 0; j <= 0; ++j )
  {
    k = 0LL;
    stream = 0LL;
    filename = "output_bad.txt";
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( k = 0LL; v10 > k; ++k )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    if ( stream )
      fclose(stream);
  }
}
// 45AE51: using guessed type char buf[16];

//----- (000000000045B03F) ----------------------------------------------------
void goodB2G_245()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v2; // [rsp+12h] [rbp-3Eh]
  int v3; // [rsp+14h] [rbp-3Ch]
  char *filename; // [rsp+20h] [rbp-30h]
  FILE *stream; // [rsp+28h] [rbp-28h]
  int v6; // [rsp+30h] [rbp-20h]
  int fd; // [rsp+34h] [rbp-1Ch]
  unsigned __int64 k; // [rsp+38h] [rbp-18h]
  int v9; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+44h] [rbp-Ch]
  int j; // [rsp+48h] [rbp-8h]
  int i; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    v9 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v3 = 0;
      v2 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v9 = accept(fd, 0LL, 0LL);
        if ( v9 != -1 )
        {
          v6 = recv(v9, buf, 0xDuLL, 0);
          if ( v6 != -1 )
          {
            if ( v6 )
            {
              buf[v6] = 0;
              v10 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v9 != -1 )
      close(v9);
  }
  for ( j = 0; j <= 0; ++j )
  {
    k = 0LL;
    stream = 0LL;
    filename = "output_good.txt";
    if ( v10 > 0 && v10 <= 20 )
    {
      stream = fopen(filename, "w+");
      if ( !stream )
        exit(1);
      for ( k = 0LL; v10 > k; ++k )
      {
        if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
          exit(1);
      }
      if ( stream )
        fclose(stream);
    }
  }
}
// 45B03F: using guessed type char buf[16];

//----- (000000000045B23D) ----------------------------------------------------
void goodG2B_266()
{
  FILE *s; // [rsp+10h] [rbp-20h]
  unsigned __int64 k; // [rsp+18h] [rbp-18h]
  int v2; // [rsp+24h] [rbp-Ch]
  int j; // [rsp+28h] [rbp-8h]
  int i; // [rsp+2Ch] [rbp-4h]

  v2 = -1;
  for ( i = 0; i <= 0; ++i )
    v2 = 20;
  for ( j = 0; j <= 0; ++j )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( k = 0LL; v2 > k; ++k )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (000000000045B318) ----------------------------------------------------
void CWE400_Resource_Exhaustion__listen_socket_fwrite_17_good()
{
  goodB2G_245();
  goodG2B_266();
}

//----- (000000000045B332) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_12_bad()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-34h]
  char *v2; // [rsp+10h] [rbp-30h]
  FILE *stream; // [rsp+18h] [rbp-28h]
  char *filename; // [rsp+20h] [rbp-20h]
  FILE *s; // [rsp+28h] [rbp-18h]
  unsigned __int64 j; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v1 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%d", &v1);
  else
    v1 = 20;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    i = 0LL;
    s = 0LL;
    filename = "output_bad.txt";
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; ; ++i )
    {
      result = v1;
      if ( v1 <= i )
        break;
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    if ( s )
      result = fclose(s);
  }
  else
  {
    j = 0LL;
    stream = 0LL;
    v2 = "output_good.txt";
    result = v1;
    if ( v1 > 0 )
    {
      result = v1;
      if ( v1 <= 20 )
      {
        stream = fopen(v2, "w+");
        if ( !stream )
          exit(1);
        for ( j = 0LL; ; ++j )
        {
          result = v1;
          if ( v1 <= j )
            break;
          if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
            exit(1);
        }
        if ( stream )
          result = fclose(stream);
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045B4D2) ----------------------------------------------------
int goodB2G_246()
{
  int result; // eax
  int v1; // [rsp+Ch] [rbp-34h]
  char *v2; // [rsp+10h] [rbp-30h]
  FILE *stream; // [rsp+18h] [rbp-28h]
  char *filename; // [rsp+20h] [rbp-20h]
  FILE *s; // [rsp+28h] [rbp-18h]
  unsigned __int64 j; // [rsp+30h] [rbp-10h]
  unsigned __int64 i; // [rsp+38h] [rbp-8h]

  v1 = -1;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%d", &v1);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    i = 0LL;
    s = 0LL;
    filename = "output_good.txt";
    result = v1;
    if ( v1 > 0 )
    {
      result = v1;
      if ( v1 <= 20 )
      {
        s = fopen(filename, "w+");
        if ( !s )
          exit(1);
        for ( i = 0LL; ; ++i )
        {
          result = v1;
          if ( v1 <= i )
            break;
          if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
            exit(1);
        }
        if ( s )
          result = fclose(s);
      }
    }
  }
  else
  {
    j = 0LL;
    stream = 0LL;
    v2 = "output_good.txt";
    result = v1;
    if ( v1 > 0 )
    {
      result = v1;
      if ( v1 <= 20 )
      {
        stream = fopen(v2, "w+");
        if ( !stream )
          exit(1);
        for ( j = 0LL; ; ++j )
        {
          result = v1;
          if ( v1 <= j )
            break;
          if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
            exit(1);
        }
        if ( stream )
          result = fclose(stream);
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045B69F) ----------------------------------------------------
int goodG2B_267()
{
  int result; // eax
  FILE *stream; // [rsp+10h] [rbp-30h]
  FILE *s; // [rsp+20h] [rbp-20h]
  unsigned __int64 j; // [rsp+28h] [rbp-18h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]

  globalReturnsTrueOrFalse();
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    s = fopen("output_bad.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; i < 0x14; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    result = fclose(s);
  }
  else
  {
    stream = fopen("output_bad.txt", "w+");
    if ( !stream )
      exit(1);
    for ( j = 0LL; j < 0x14; ++j )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, stream) != 50 )
        exit(1);
    }
    result = fclose(stream);
  }
  return result;
}

//----- (000000000045B816) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fscanf_fwrite_12_good()
{
  goodB2G_246();
  return goodG2B_267();
}

//----- (000000000045B830) ----------------------------------------------------
int __fastcall badSink_41(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000045B8D3) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_fwrite_44_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = badSink_41;
  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 45B8D3: using guessed type char buf[16];

//----- (000000000045BA0A) ----------------------------------------------------
int __fastcall goodG2BSink_41(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  s = fopen("output_bad.txt", "w+");
  if ( !s )
    exit(1);
  for ( i = 0LL; a1 > i; ++i )
  {
    if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
      exit(1);
  }
  return fclose(s);
}

//----- (000000000045BAAD) ----------------------------------------------------
int goodG2B_268()
{
  return goodG2BSink_41(20);
}

//----- (000000000045BAD8) ----------------------------------------------------
void __fastcall goodB2GSink_30(int a1)
{
  FILE *s; // [rsp+20h] [rbp-10h]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    s = fopen("output_good.txt", "w+");
    if ( !s )
      exit(1);
    for ( i = 0LL; a1 > i; ++i )
    {
      if ( fwrite("This is the sentence we are printing to the file. ", 1uLL, 0x32uLL, s) != 50 )
        exit(1);
    }
    fclose(s);
  }
}

//----- (000000000045BB8B) ----------------------------------------------------
__int64 goodB2G_247()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  void (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = goodB2GSink_30;
  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 45BB8B: using guessed type char buf[16];

//----- (000000000045BCC2) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_fwrite_44_good()
{
  goodG2B_268();
  return goodB2G_247();
}

//----- (000000000045BCDC) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_13_bad()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = (unsigned int)GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;
// 45BCDC: using guessed type char buf[16];

//----- (000000000045BE46) ----------------------------------------------------
int goodB2G1_161()
{
  int result; // eax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v9 > 0 && v9 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v9;
      if ( v9 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;
// 45BE46: using guessed type char buf[16];

//----- (000000000045BFC8) ----------------------------------------------------
__int64 goodB2G2_161()
{
  __int64 result; // rax
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v8 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v4 = 0;
      v3 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v8 = accept(fd, 0LL, 0LL);
        if ( v8 != -1 )
        {
          v5 = recv(v8, buf, 0xDuLL, 0);
          if ( v5 != -1 )
          {
            if ( v5 )
            {
              buf[v5] = 0;
              v9 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v8 != -1 )
      close(v8);
  }
  result = (unsigned int)GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    i = 0LL;
    if ( v9 > 0 && v9 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v9;
        if ( v9 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;
// 45BFC8: using guessed type char buf[16];

//----- (000000000045C13E) ----------------------------------------------------
__int64 goodG2B1_140()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v2 = 20;
  else
    printLine("Benign, fixed string");
  result = (unsigned int)GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000045C1A4) ----------------------------------------------------
__int64 goodG2B2_140()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v2 = 20;
  result = (unsigned int)GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 471F44: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000045C1FE) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__listen_socket_for_loop_13_good()
{
  goodB2G1_161();
  goodB2G2_161();
  goodG2B1_140();
  return goodG2B2_140();
}

//----- (000000000045C22C) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54b_badSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_54c_badSink(a1);
}

//----- (000000000045C243) ----------------------------------------------------
int __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54b_goodG2BSink(int a1)
{
  return CWE400_Resource_Exhaustion__connect_socket_fwrite_54c_goodG2BSink(a1);
}

//----- (000000000045C25A) ----------------------------------------------------
void __fastcall CWE400_Resource_Exhaustion__connect_socket_fwrite_54b_goodB2GSink(int a1)
{
  CWE400_Resource_Exhaustion__connect_socket_fwrite_54c_goodB2GSink(a1);
}

//----- (000000000045C271) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_05_bad()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( staticTrue_9 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = (unsigned int)staticTrue_9;
  if ( staticTrue_9 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A0: using guessed type int staticTrue_9;

//----- (000000000045C30F) ----------------------------------------------------
int goodB2G1_162()
{
  int result; // eax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( staticTrue_9 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFalse_9;
  if ( staticFalse_9 )
    return printLine("Benign, fixed string");
  i = 0LL;
  if ( v5 > 0 && v5 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v5;
      if ( v5 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A0: using guessed type int staticTrue_9;
// 68E3B8: using guessed type int staticFalse_9;

//----- (000000000045C3C5) ----------------------------------------------------
__int64 goodB2G2_162()
{
  __int64 result; // rax
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  unsigned __int64 i; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  if ( staticTrue_9 )
  {
    *(_QWORD *)s = 0LL;
    v2 = 0;
    v3 = 0;
    if ( fgets(s, 14, stdin) )
      v5 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = (unsigned int)staticTrue_9;
  if ( staticTrue_9 )
  {
    i = 0LL;
    if ( v5 > 0 && v5 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = v5;
        if ( v5 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 68E1A0: using guessed type int staticTrue_9;

//----- (000000000045C46F) ----------------------------------------------------
__int64 goodG2B1_141()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( staticFalse_9 )
    printLine("Benign, fixed string");
  else
    v2 = 20;
  result = (unsigned int)staticTrue_9;
  if ( staticTrue_9 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A0: using guessed type int staticTrue_9;
// 68E3B8: using guessed type int staticFalse_9;

//----- (000000000045C4D3) ----------------------------------------------------
__int64 goodG2B2_141()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+0h] [rbp-10h]
  int v2; // [rsp+Ch] [rbp-4h]

  v2 = -1;
  if ( staticTrue_9 )
    v2 = 20;
  result = (unsigned int)staticTrue_9;
  if ( staticTrue_9 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = v2;
      if ( v2 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}
// 68E1A0: using guessed type int staticTrue_9;

//----- (000000000045C52B) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_05_good()
{
  goodB2G1_162();
  goodB2G2_162();
  goodG2B1_141();
  return goodG2B2_141();
}

//----- (000000000045C559) ----------------------------------------------------
__int64 __fastcall badSink_42(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000045C592) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_41_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return badSink_42(v4);
}

//----- (000000000045C5FA) ----------------------------------------------------
__int64 __fastcall goodG2BSink_42(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = a1;
    if ( a1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000045C633) ----------------------------------------------------
__int64 goodG2B_269()
{
  return goodG2BSink_42(20);
}

//----- (000000000045C655) ----------------------------------------------------
__int64 __fastcall goodB2GSink_31(int a1)
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  if ( a1 > 0 && a1 <= 20 )
  {
    for ( i = 0LL; ; ++i )
    {
      result = a1;
      if ( a1 <= i )
        break;
      printLine("Hello");
    }
  }
  return result;
}

//----- (000000000045C69A) ----------------------------------------------------
__int64 goodB2G_248()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return goodB2GSink_31(v4);
}

//----- (000000000045C702) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fgets_for_loop_41_good()
{
  goodB2G_248();
  return goodG2B_269();
}

//----- (000000000045C71C) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_52_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_for_loop_52b_badSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045C754) ----------------------------------------------------
__int64 goodG2B_270()
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_52b_goodG2BSink(20);
}

//----- (000000000045C776) ----------------------------------------------------
__int64 goodB2G_249()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_for_loop_52b_goodB2GSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045C7AE) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_52_good()
{
  goodG2B_270();
  return goodB2G_249();
}

//----- (000000000045C7C8) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_53_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_for_loop_53b_badSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045C800) ----------------------------------------------------
__int64 goodG2B_271()
{
  return CWE400_Resource_Exhaustion__fscanf_for_loop_53b_goodG2BSink(20);
}

//----- (000000000045C822) ----------------------------------------------------
__int64 goodB2G_250()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE400_Resource_Exhaustion__fscanf_for_loop_53b_goodB2GSink(v1);
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045C85A) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_53_good()
{
  goodG2B_271();
  return goodB2G_250();
}

//----- (000000000045C874) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_16_bad()
{
  __int64 result; // rax
  int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  for ( i = 0LL; ; ++i )
  {
    result = v1;
    if ( v1 <= i )
      break;
    printLine("Hello");
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045C8D0) ----------------------------------------------------
__int64 goodB2G_251()
{
  __int64 result; // rax
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  i = 0LL;
  result = v1;
  if ( (int)v1 > 0 )
  {
    result = v1;
    if ( (int)v1 <= 20 )
    {
      for ( i = 0LL; ; ++i )
      {
        result = (int)v1;
        if ( (int)v1 <= i )
          break;
        printLine("Hello");
      }
    }
  }
  return result;
}
// 400D40: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045C93B) ----------------------------------------------------
__int64 goodG2B_272()
{
  __int64 result; // rax
  unsigned __int64 i; // [rsp+8h] [rbp-8h]

  for ( i = 0LL; ; ++i )
  {
    result = 20LL;
    if ( i >= 0x14 )
      break;
    printLine("Hello");
  }
  return result;
}

//----- (000000000045C981) ----------------------------------------------------
__int64 CWE400_Resource_Exhaustion__fscanf_for_loop_16_good()
{
  goodB2G_251();
  return goodG2B_272();
}

//----- (000000000045C99B) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_22_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_sleep_22_badGlobal = 1;
  return CWE400_Resource_Exhaustion__fgets_sleep_22_badSink(v4);
}
// 68E3BC: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_22_badGlobal;

//----- (000000000045CA0D) ----------------------------------------------------
int goodB2G1_163()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_sleep_22_goodB2G1Global = 0;
  return CWE400_Resource_Exhaustion__fgets_sleep_22_goodB2G1Sink(v4);
}
// 68E3C0: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_22_goodB2G1Global;

//----- (000000000045CA7F) ----------------------------------------------------
int goodB2G2_163()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE400_Resource_Exhaustion__fgets_sleep_22_goodB2G2Global = 1;
  return CWE400_Resource_Exhaustion__fgets_sleep_22_goodB2G2Sink(v4);
}
// 68E3C4: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_22_goodB2G2Global;

//----- (000000000045CAF1) ----------------------------------------------------
int goodG2B_273()
{
  CWE400_Resource_Exhaustion__fgets_sleep_22_goodG2BGlobal = 1;
  return CWE400_Resource_Exhaustion__fgets_sleep_22_goodG2BSink(0x14u);
}
// 68E3C8: using guessed type int CWE400_Resource_Exhaustion__fgets_sleep_22_goodG2BGlobal;

//----- (000000000045CB1D) ----------------------------------------------------
int CWE400_Resource_Exhaustion__fgets_sleep_22_good()
{
  goodB2G1_163();
  goodB2G2_163();
  return goodG2B_273();
}

//----- (000000000045CB41) ----------------------------------------------------
int __fastcall printLine(const char *a1)
{
  int result; // eax

  if ( a1 )
    result = puts(a1);
  return result;
}

//----- (000000000045CB62) ----------------------------------------------------
int __fastcall printWLine(__int64 a1)
{
  int result; // eax

  if ( a1 )
    result = wprintf("%", a1);
  return result;
}

//----- (000000000045CB8D) ----------------------------------------------------
int __fastcall printIntLine(unsigned int a1)
{
  return printf("%d\n", a1);
}

//----- (000000000045CBAE) ----------------------------------------------------
int __fastcall printShortLine(__int16 a1)
{
  return printf("%hd\n", (unsigned int)a1);
}

//----- (000000000045CBD3) ----------------------------------------------------
int __fastcall printFloatLine(float a1)
{
  return printf("%f\n", a1);
}

//----- (000000000045CBF9) ----------------------------------------------------
int __fastcall printLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (000000000045CC1D) ----------------------------------------------------
int __fastcall printLongLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (000000000045CC41) ----------------------------------------------------
int __fastcall printSizeTLine(__int64 a1)
{
  return printf("%zu\n", a1);
}

//----- (000000000045CC65) ----------------------------------------------------
int __fastcall printHexCharLine(char a1)
{
  return printf("%02x\n", (unsigned int)a1);
}

//----- (000000000045CC89) ----------------------------------------------------
int __fastcall printWcharLine(int a1)
{
  int v2; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+14h] [rbp-Ch]

  v2 = a1;
  v3 = 0;
  return printf("%ls\n", &v2);
}

//----- (000000000045CCB9) ----------------------------------------------------
int __fastcall printUnsignedLine(unsigned int a1)
{
  return printf("%u\n", a1);
}

//----- (000000000045CCDA) ----------------------------------------------------
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1)
{
  return printf("%02x\n", a1);
}

//----- (000000000045CCFE) ----------------------------------------------------
int __fastcall printDoubleLine(double a1)
{
  return printf("%g\n", a1);
}

//----- (000000000045CD29) ----------------------------------------------------
int __fastcall printStructLine(unsigned int *a1)
{
  return printf("%d -- %d\n", *a1, a1[1]);
}

//----- (000000000045CD55) ----------------------------------------------------
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2)
{
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; i < a2; ++i )
    printf("%02x", *(unsigned __int8 *)(a1 + i));
  return puts(s);
}

//----- (000000000045CDAC) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL;
        i < a2
     && (*__ctype_b_loc())[*(char *)(2 * i + v4)] & 0x1000
     && (*__ctype_b_loc())[*(char *)(2 * i + 1 + v4)] & 0x1000;
        ++i )
  {
    __isoc99_sscanf(2 * i + v4, "%02x", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400D70: using guessed type __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045CE85) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL; i < a2 && iswxdigit(*(_DWORD *)(8 * i + v4)) && iswxdigit(*(_DWORD *)(8 * i + 4 + v4)); ++i )
  {
    __isoc99_swscanf(8 * i + v4, "%", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400EB0: using guessed type __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000045CF39) ----------------------------------------------------
__int64 globalReturnsTrue()
{
  return 1LL;
}

//----- (000000000045CF44) ----------------------------------------------------
__int64 globalReturnsFalse()
{
  return 0LL;
}

//----- (000000000045CF4F) ----------------------------------------------------
__int64 globalReturnsTrueOrFalse()
{
  return (unsigned int)(rand() % 2);
}

//----- (000000000045CF65) ----------------------------------------------------
void good1()
{
  ;
}

//----- (000000000045CF6B) ----------------------------------------------------
void good2()
{
  ;
}

//----- (000000000045CF71) ----------------------------------------------------
void good3()
{
  ;
}

//----- (000000000045CF77) ----------------------------------------------------
void good4()
{
  ;
}

//----- (000000000045CF7D) ----------------------------------------------------
void good5()
{
  ;
}

//----- (000000000045CF83) ----------------------------------------------------
void good6()
{
  ;
}

//----- (000000000045CF89) ----------------------------------------------------
void good7()
{
  ;
}

//----- (000000000045CF8F) ----------------------------------------------------
void good8()
{
  ;
}

//----- (000000000045CF95) ----------------------------------------------------
void good9()
{
  ;
}

//----- (000000000045CF9B) ----------------------------------------------------
void bad1()
{
  ;
}

//----- (000000000045CFA1) ----------------------------------------------------
void bad2()
{
  ;
}

//----- (000000000045CFA7) ----------------------------------------------------
void bad3()
{
  ;
}

//----- (000000000045CFAD) ----------------------------------------------------
void bad4()
{
  ;
}

//----- (000000000045CFB3) ----------------------------------------------------
void bad5()
{
  ;
}

//----- (000000000045CFB9) ----------------------------------------------------
void bad6()
{
  ;
}

//----- (000000000045CFBF) ----------------------------------------------------
void bad7()
{
  ;
}

//----- (000000000045CFC5) ----------------------------------------------------
void bad8()
{
  ;
}

//----- (000000000045CFCB) ----------------------------------------------------
void bad9()
{
  ;
}

//----- (000000000045CFD1) ----------------------------------------------------
void __fastcall __noreturn internal_start(void *a1)
{
  (*((void (__fastcall **)(_QWORD))a1 + 1))(*((_QWORD *)a1 + 2));
  pthread_exit(0LL);
}

//----- (000000000045D004) ----------------------------------------------------
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3)
{
  __int64 result; // rax
  void **v4; // [rsp+8h] [rbp-28h]
  pthread_t newthread; // [rsp+20h] [rbp-10h]
  void *arg; // [rsp+28h] [rbp-8h]

  v4 = a3;
  *a3 = 0LL;
  arg = malloc(0x18uLL);
  if ( !arg )
    return 0LL;
  *((_QWORD *)arg + 1) = a1;
  *((_QWORD *)arg + 2) = a2;
  if ( pthread_create(&newthread, 0LL, (void *(*)(void *))internal_start, arg) )
  {
    free(arg);
    result = 0LL;
  }
  else
  {
    *(_QWORD *)arg = newthread;
    *v4 = arg;
    result = 1LL;
  }
  return result;
}

//----- (000000000045D0A8) ----------------------------------------------------
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1)
{
  void *thread_return; // [rsp+18h] [rbp-8h]

  return pthread_join(*a1, &thread_return) == 0;
}

//----- (000000000045D0DC) ----------------------------------------------------
__int64 __fastcall stdThreadDestroy(void *a1)
{
  free(a1);
  return 1LL;
}

//----- (000000000045D0FB) ----------------------------------------------------
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1)
{
  __int64 result; // rax
  pthread_mutex_t *mutex; // [rsp+18h] [rbp-8h]

  *a1 = 0LL;
  mutex = (pthread_mutex_t *)malloc(0x28uLL);
  if ( !mutex )
    return 0LL;
  if ( pthread_mutex_init(mutex, 0LL) )
  {
    free(a1);
    result = 0LL;
  }
  else
  {
    *a1 = mutex;
    result = 1LL;
  }
  return result;
}

//----- (000000000045D170) ----------------------------------------------------
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1)
{
  return pthread_mutex_lock(a1);
}

//----- (000000000045D18A) ----------------------------------------------------
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1)
{
  return pthread_mutex_unlock(a1);
}

//----- (000000000045D1A4) ----------------------------------------------------
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1)
{
  pthread_mutex_destroy(a1);
  free(a1);
}

//----- (000000000045D1D0) ----------------------------------------------------
void _libc_csu_init(void)
{
  __int64 v0; // rbx
  signed __int64 v1; // rbp

  v0 = 0LL;
  v1 = &_do_global_dtors_aux_fini_array_entry - _frame_dummy_init_array_entry;
  init_proc();
  if ( v1 )
  {
    do
      _frame_dummy_init_array_entry[v0++]();
    while ( v0 != v1 );
  }
}
// 68DDD0: using guessed type __int64 (__fastcall *_frame_dummy_init_array_entry[2])();
// 68DDD8: using guessed type __int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)();

//----- (000000000045D244) ----------------------------------------------------
void term_proc()
{
  ;
}

// ALL OK, 2839 function(s) have been successfully decompiled
