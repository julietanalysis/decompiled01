/* This file was generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2018 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

void *init_proc();
__int64 sub_400900();
// int printf(const char *format, ...);
// int puts(const char *s);
// __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD); weak
// void __noreturn exit(int status);
// void *malloc(size_t size);
// int __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end);
// int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr);
// int iswxdigit(wint_t wc);
// void free(void *ptr);
// int pthread_create(pthread_t *newthread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);
// const unsigned __int16 **__ctype_b_loc(void);
// int pthread_join(pthread_t th, void **thread_return);
// void __noreturn pthread_exit(void *retval);
// int wprintf(const wchar_t *format, ...);
// __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD); weak
// void srand(unsigned int seed);
// int pthread_mutex_lock(pthread_mutex_t *mutex);
// int rand(void);
// int pthread_mutex_destroy(pthread_mutex_t *mutex);
// int pthread_mutex_unlock(pthread_mutex_t *mutex);
// time_t time(time_t *timer);
// __int64 _gmon_start__(void); weak
// void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>);
__int64 deregister_tm_clones();
__int64 register_tm_clones();
__int64 _do_global_dtors_aux();
__int64 frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_31_bad();
void goodG2B();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_31_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_06_bad();
void goodG2B1();
void goodG2B2();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_06_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_65b_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_65b_goodG2BSink(unsigned int *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_67_bad();
void goodG2B_0();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_67_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53c_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53c_goodG2BSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_64b_badSink(__int64 **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_64b_goodG2BSink(__int64 **a1);
_DWORD *__fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_badSource(_DWORD *a1);
_DWORD *__fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B1Source(_DWORD *a1);
_DWORD *__fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B2Source(_DWORD *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_09_bad();
void goodG2B1_0();
void goodG2B2_0();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_09_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_64_bad();
void goodG2B_1();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_64_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_14_bad();
void goodG2B1_1();
void goodG2B2_1();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_14_good();
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_65_bad();
__int64 goodG2B_2();
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_65_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14_bad();
void goodG2B1_2();
void goodG2B2_2();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15_bad();
void goodG2B1_3();
void goodG2B2_3();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_64b_badSink(unsigned int **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_64b_goodG2BSink(unsigned int **a1);
_DWORD *badSource();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42_bad();
_DWORD *goodG2BSource();
void goodG2B_3();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_67b_badSink(__int64 *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_67b_goodG2BSink(__int64 *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_31_bad();
void goodG2B_4();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_31_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_67b_badSink(double *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_67b_goodG2BSink(double *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54_bad();
void goodG2B_5();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_bad();
void goodG2B1_4();
void goodG2B2_4();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68b_badSink();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68b_goodG2BSink();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_64_bad();
void goodG2B_6();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_64_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_15_bad();
void goodG2B1_5();
void goodG2B2_5();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_15_good();
__int64 staticReturnsTrue();
__int64 staticReturnsFalse();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08_bad();
void goodG2B1_6();
void goodG2B2_6();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_04_bad();
void goodG2B1_7();
void goodG2B2_7();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_04_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_65b_badSink(__int64 *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_65b_goodG2BSink(__int64 *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04_bad();
void goodG2B1_8();
void goodG2B2_8();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_31_bad();
void goodG2B_7();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_31_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52c_badSink(double *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52c_goodG2BSink(double *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54d_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54d_goodG2BSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_65b_badSink(double *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_65b_goodG2BSink(double *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05_bad();
void goodG2B1_9();
void goodG2B2_9();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_badSink(unsigned int *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_bad();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_goodG2BSink(unsigned int *a1);
void goodG2B_8();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53b_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53b_goodG2BSink(unsigned int *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_67_bad();
void goodG2B_9();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_67_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_13_bad();
void goodG2B1_10();
void goodG2B2_10();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_13_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52c_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52c_goodG2BSink(unsigned int *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_67_bad();
void goodG2B_10();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_67_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53c_badSink(__int64 *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53c_goodG2BSink(__int64 *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_63b_badSink(unsigned int **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_63b_goodG2BSink(unsigned int **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53c_badSink(double *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53c_goodG2BSink(double *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_bad();
void goodG2B_11();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_good();
_QWORD *__fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_badSource(_QWORD *a1);
_QWORD *__fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B1Source(_QWORD *a1);
_QWORD *__fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B2Source(_QWORD *a1);
_QWORD *__fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_badSource(_QWORD *a1);
_QWORD *__fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_goodG2B1Source(_QWORD *a1);
_QWORD *__fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_goodG2B2Source(_QWORD *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b_badSink(__int64 a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b_goodG2BSink(__int64 a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53d_badSink(__int64 *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53d_goodG2BSink(__int64 *a1);
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_65_bad();
__int64 goodG2B_12();
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_65_good();
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_65_bad();
__int64 goodG2B_13();
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_65_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_01_bad();
void goodG2B_14();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_01_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15_bad();
void goodG2B1_11();
void goodG2B2_11();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53_bad();
void goodG2B_15();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53_good();
void badSink();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_bad();
void goodG2BSink();
void goodG2B_16();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18_bad();
void goodG2B_17();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52_bad();
void goodG2B_18();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_bad();
void goodG2B1_12();
void goodG2B2_12();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68b_badSink();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68b_goodG2BSink();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54e_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54e_goodG2BSink(unsigned int *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66_bad();
void goodG2B_19();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54b_badSink(double *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54b_goodG2BSink(double *a1);
_QWORD *badSource_0();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_42_bad();
_QWORD *goodG2BSource_0();
void goodG2B_20();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_42_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54d_badSink(__int64 *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54d_goodG2BSink(__int64 *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_64b_badSink(double **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_64b_goodG2BSink(double **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54d_badSink(double *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54d_goodG2BSink(double *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_12_bad();
void goodG2B_21();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_12_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_05_bad();
void goodG2B1_13();
void goodG2B2_13();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_05_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52b_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52b_goodG2BSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_41_badSink(__int64 *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_41_bad();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_41_goodG2BSink(__int64 *a1);
void goodG2B_22();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_41_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53b_badSink(__int64 *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53b_goodG2BSink(__int64 *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_05_bad();
void goodG2B1_14();
void goodG2B2_14();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_05_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_41_badSink(double *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_41_bad();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_41_goodG2BSink(double *a1);
void goodG2B_23();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_41_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68b_badSink();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68b_goodG2BSink();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53b_badSink(double *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53b_goodG2BSink(double *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_13_bad();
void goodG2B1_15();
void goodG2B2_15();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_13_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52c_badSink(__int64 *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52c_goodG2BSink(__int64 *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_01_bad();
void goodG2B_24();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_01_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_63b_badSink(__int64 **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_63b_goodG2BSink(__int64 **a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_13_bad();
void goodG2B1_16();
void goodG2B2_16();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_13_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_63b_badSink(double **a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_63b_goodG2BSink(double **a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_bad();
void goodG2B_25();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_bad();
void goodG2B_26();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_17_bad();
void goodG2B_27();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_17_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_34_bad();
void goodG2B_28();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_34_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_66b_badSink(__int64 a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_66b_goodG2BSink(__int64 a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_51_bad();
void goodG2B_29();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_51_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_32_bad();
void goodG2B_30();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_32_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_66b_badSink(__int64 a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_66b_goodG2BSink(__int64 a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_11_bad();
void goodG2B1_17();
void goodG2B2_17();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_11_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_02_bad();
void goodG2B1_18();
void goodG2B2_18();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_02_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54b_badSink(__int64 *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54b_goodG2BSink(__int64 *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52_bad();
void goodG2B_31();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_51b_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_51b_goodG2BSink(unsigned int *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53_bad();
void goodG2B_32();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53_good();
_QWORD *__fastcall badSource_1(_QWORD *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_21_bad();
_QWORD *__fastcall goodG2B1Source(_QWORD *a1);
void goodG2B1_19();
_QWORD *__fastcall goodG2B2Source(_QWORD *a1);
void goodG2B2_19();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_21_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_03_bad();
void goodG2B1_20();
void goodG2B2_20();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_03_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_61_bad();
void goodG2B_33();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_61_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_63_bad();
void goodG2B_34();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_63_good();
_QWORD *__fastcall badSource_2(_QWORD *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_21_bad();
_QWORD *__fastcall goodG2B1Source_0(_QWORD *a1);
void goodG2B1_21();
_QWORD *__fastcall goodG2B2Source_0(_QWORD *a1);
void goodG2B2_21();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_21_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_03_bad();
void goodG2B1_22();
void goodG2B2_22();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_03_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_10_bad();
void goodG2B1_23();
void goodG2B2_23();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_10_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_63_bad();
void goodG2B_35();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_63_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_06_bad();
void goodG2B1_24();
void goodG2B2_24();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_06_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_07_bad();
void goodG2B1_25();
void goodG2B2_25();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_07_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_18_bad();
void goodG2B_36();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_18_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_18_bad();
void goodG2B_37();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_18_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54c_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54c_goodG2BSink(unsigned int *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_66_bad();
void goodG2B_38();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_66_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_66_bad();
void goodG2B_39();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_66_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_01_bad();
void goodG2B_40();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_01_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53d_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53d_goodG2BSink(unsigned int *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_51_bad();
void goodG2B_41();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_51_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_12_bad();
void goodG2B_42();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_12_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52b_badSink(double *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52b_goodG2BSink(double *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52b_badSink(__int64 *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52b_goodG2BSink(__int64 *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_12_bad();
void goodG2B_43();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_12_good();
_DWORD *CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61b_badSource();
_DWORD *CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61b_goodG2BSource();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61_bad();
void goodG2B_44();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61_good();
void __fastcall badSink_0(double *a1);
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_44_bad();
void __fastcall goodG2BSink_0(double *a1);
__int64 goodG2B_45();
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_44_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_09_bad();
void goodG2B1_26();
void goodG2B2_26();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_09_good();
void badSink_1();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_bad();
void goodG2BSink_1();
void goodG2B_46();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_32_bad();
void goodG2B_47();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_32_good();
__int64 staticReturnsTrue_0();
__int64 staticReturnsFalse_0();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_08_bad();
void goodG2B1_27();
void goodG2B2_27();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_08_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_17_bad();
void goodG2B_48();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_17_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_17_bad();
void goodG2B_49();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_17_good();
void __fastcall badSink_2(__int64 *a1);
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_44_bad();
void __fastcall goodG2BSink_2(__int64 *a1);
__int64 goodG2B_50();
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_44_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_11_bad();
void goodG2B1_28();
void goodG2B2_28();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_11_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_02_bad();
void goodG2B1_29();
void goodG2B2_29();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_02_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_11_bad();
void goodG2B1_30();
void goodG2B2_30();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_11_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_02_bad();
void goodG2B1_31();
void goodG2B2_31();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_02_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_51b_badSink(__int64 *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_51b_goodG2BSink(__int64 *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52_bad();
void goodG2B_51();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51b_badSink(double *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51b_goodG2BSink(double *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_16_bad();
void goodG2B_52();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_16_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_16_bad();
void goodG2B_53();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_16_good();
_QWORD *CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_61b_badSource();
_QWORD *CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_61b_goodG2BSource();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_10_bad();
void goodG2B1_32();
void goodG2B2_32();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_10_good();
_QWORD *CWE122_Heap_Based_Buffer_Overflow__sizeof_double_61b_badSource();
_QWORD *CWE122_Heap_Based_Buffer_Overflow__sizeof_double_61b_goodG2BSource();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_10_bad();
void goodG2B1_33();
void goodG2B2_33();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_10_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54b_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54b_goodG2BSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54c_badSink(__int64 *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54c_goodG2BSink(__int64 *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54c_badSink(double *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54c_goodG2BSink(double *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_14_bad();
void goodG2B1_34();
void goodG2B2_34();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_14_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32_bad();
void goodG2B_54();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53_bad();
void goodG2B_55();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_bad();
void goodG2B_56();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54e_badSink(__int64 *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54e_goodG2BSink(__int64 *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07_bad();
void goodG2B1_35();
void goodG2B2_35();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_61_bad();
void goodG2B_57();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_61_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_67b_badSink(unsigned int *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_67b_goodG2BSink(unsigned int *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_bad();
void goodG2B_58();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53d_badSink(double *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53d_goodG2BSink(double *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54_bad();
void goodG2B_59();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_64_bad();
void goodG2B_60();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_64_good();
void badSink_3();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_bad();
void goodG2BSink_3();
void goodG2B_61();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_07_bad();
void goodG2B1_36();
void goodG2B2_36();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_07_good();
__int64 staticReturnsTrue_1();
__int64 staticReturnsFalse_1();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_08_bad();
void goodG2B1_37();
void goodG2B2_37();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_08_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54_bad();
void goodG2B_62();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04_bad();
void goodG2B1_38();
void goodG2B2_38();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04_good();
_DWORD *__fastcall badSource_3(_DWORD *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21_bad();
_DWORD *__fastcall goodG2B1Source_1(_DWORD *a1);
void goodG2B1_39();
_DWORD *__fastcall goodG2B2Source_1(_DWORD *a1);
void goodG2B2_39();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_03_bad();
void goodG2B1_40();
void goodG2B2_40();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_03_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_06_bad();
void goodG2B1_41();
void goodG2B2_41();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_06_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_16_bad();
void goodG2B_63();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_16_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_63_bad();
void goodG2B_64();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_63_good();
_QWORD *badSource_4();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_42_bad();
_QWORD *goodG2BSource_1();
void goodG2B_65();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_42_good();
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54e_badSink(double *a1);
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54e_goodG2BSink(double *a1);
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_bad();
void goodG2B1_42();
void goodG2B2_42();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51_bad();
void goodG2B_66();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51_good();
void __fastcall badSink_4(unsigned int *a1);
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44_bad();
void __fastcall goodG2BSink_4(unsigned int *a1);
__int64 goodG2B_67();
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44_good();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_09_bad();
void goodG2B1_43();
void goodG2B2_43();
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_09_good();
int __fastcall printLine(const char *a1);
int __fastcall printWLine(__int64 a1);
int __fastcall printIntLine(unsigned int a1);
int __fastcall printShortLine(__int16 a1);
int __fastcall printFloatLine(float a1);
int __fastcall printLongLine(__int64 a1);
int __fastcall printLongLongLine(__int64 a1);
int __fastcall printSizeTLine(__int64 a1);
int __fastcall printHexCharLine(char a1);
int __fastcall printWcharLine(int a1);
int __fastcall printUnsignedLine(unsigned int a1);
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1);
int __fastcall printDoubleLine(double a1);
int __fastcall printStructLine(unsigned int *a1);
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2);
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3);
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3);
__int64 globalReturnsTrue();
__int64 globalReturnsFalse();
__int64 globalReturnsTrueOrFalse();
void good1();
void good2();
void good3();
void good4();
void good5();
void good6();
void good7();
void good8();
void good9();
void bad1();
void bad2();
void bad3();
void bad4();
void bad5();
void bad6();
void bad7();
void bad8();
void bad9();
void __fastcall __noreturn internal_start(void *a1);
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3);
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1);
__int64 __fastcall stdThreadDestroy(void *a1);
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1);
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1);
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1);
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1);
void _libc_csu_init(void); // idb
void _libc_csu_fini(void); // idb
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

char s[3] = { '\0', '\0', '\0' }; // idb
int GLOBAL_CONST_TRUE = 1; // weak
int GLOBAL_CONST_FALSE = 0; // weak
int GLOBAL_CONST_FIVE = 5; // weak
__int64 (__fastcall *_frame_dummy_init_array_entry[2])() = { &frame_dummy, &_do_global_dtors_aux }; // weak
__int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)() = &_do_global_dtors_aux; // weak
__int64 (*qword_616010)(void) = NULL; // weak
int staticTrue = 1; // weak
int staticTrue_0 = 1; // weak
int staticTrue_1 = 1; // weak
int staticFive = 5; // weak
int staticFive_0 = 5; // weak
int staticFive_1 = 5; // weak
int globalTrue = 1; // weak
int globalFive = 5; // weak
char completed_6355; // weak
int CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_badGlobal; // weak
int CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B1Global; // weak
int CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B2Global; // weak
int staticFalse; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_badData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_goodG2BData; // weak
int CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_badGlobal; // weak
int CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_goodG2B1Global; // weak
int CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_goodG2B2Global; // weak
int staticFalse_0; // weak
int staticFalse_1; // weak
int badStatic; // weak
int goodG2B1Static; // weak
int goodG2B2Static; // weak
int badStatic_0; // weak
int goodG2B1Static_0; // weak
int goodG2B2Static_0; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_badData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_goodG2BData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_badData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_goodG2BData; // weak
int badStatic_1; // weak
int goodG2B1Static_1; // weak
int goodG2B2Static_1; // weak
int CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_badGlobal; // weak
int CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B1Global; // weak
int CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B2Global; // weak
int globalFalse; // weak
int globalArgc; // weak
__int64 globalArgv; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_badData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_goodG2BData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_badData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_goodG2BData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_goodG2BData; // weak
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_badData; // weak
// extern _UNKNOWN __gmon_start__; weak


//----- (00000000004008D8) ----------------------------------------------------
void *init_proc()
{
  void *result; // rax

  result = &__gmon_start__;
  if ( &__gmon_start__ )
    result = (void *)_gmon_start__();
  return result;
}
// 400A60: using guessed type __int64 _gmon_start__(void);

//----- (0000000000400900) ----------------------------------------------------
__int64 sub_400900()
{
  return qword_616010();
}
// 616010: using guessed type __int64 (*qword_616010)(void);

//----- (0000000000400A70) ----------------------------------------------------
// positive sp value has been detected, the output may be wrong!
void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>)
{
  int v2; // esi
  int v3; // [rsp-8h] [rbp-8h]
  __int64 _0; // [rsp+0h] [rbp+0h]

  v2 = v3;
  *(_QWORD *)&v3 = a1;
  __libc_start_main(
    (int (__fastcall *)(int, char **, char **))main,
    v2,
    (char **)&_0,
    _libc_csu_init,
    _libc_csu_fini,
    a2,
    &v3);
  __halt();
}
// 400A76: positive sp value 8 has been found

//----- (0000000000400AA0) ----------------------------------------------------
__int64 deregister_tm_clones()
{
  __int64 result; // rax

  result = 6381807LL - (_QWORD)&completed_6355;
  if ( (unsigned __int64)(6381807LL - (_QWORD)&completed_6355) > 0xE )
    result = 0LL;
  return result;
}
// 6160E8: using guessed type char completed_6355;

//----- (0000000000400AD0) ----------------------------------------------------
__int64 register_tm_clones()
{
  return 0LL;
}

//----- (0000000000400B10) ----------------------------------------------------
__int64 _do_global_dtors_aux()
{
  __int64 result; // rax

  if ( !completed_6355 )
  {
    result = deregister_tm_clones();
    completed_6355 = 1;
  }
  return result;
}
// 6160E8: using guessed type char completed_6355;

//----- (0000000000400B30) ----------------------------------------------------
__int64 frame_dummy()
{
  return register_tm_clones();
}
// 400B30: could not find valid save-restore pair for rbp

//----- (0000000000400B5D) ----------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  unsigned int v3; // eax

  v3 = time(0LL);
  srand(v3);
  globalArgc = argc;
  globalArgv = (__int64)argv;
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_67_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_67_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_17_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_17_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_08_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_08_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_03_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_03_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_13_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_13_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_44_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_44_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_06_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_06_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_17_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_17_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_07_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_07_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_61_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_61_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_65_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_65_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_04_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_04_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_67_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_67_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_07_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_07_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_09_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_09_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_63_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_63_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_06_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_06_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_65_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_65_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_18_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_18_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_09_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_09_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_66_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_66_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_61_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_61_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_18_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_18_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_42_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_42_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_05_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_05_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_65_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_65_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_16_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_16_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_11_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_11_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_13_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_13_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_44_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_44_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_02_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_02_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_06_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_06_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_31_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_31_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_32_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_32_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_14_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_14_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_64_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_64_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_34_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_34_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_15_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_15_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_11_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_11_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_13_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_13_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_10_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_10_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_02_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_02_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_21_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_21_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_05_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_05_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_41_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_41_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_16_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_16_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_31_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_31_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_64_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_64_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_21_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_21_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_10_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_10_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_09_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_09_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_08_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_08_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_12_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_12_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_51_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_51_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_41_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_41_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_12_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_12_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_02_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_02_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_03_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_03_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_64_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_64_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_31_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_31_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_01_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_01_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_63_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_63_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_66_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_66_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_11_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_11_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_42_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_42_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_16_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_16_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_01_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_01_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_01_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_01_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_67_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_67_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_17_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_17_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_14_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_14_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_12_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_12_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_51_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_51_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_63_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_63_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_32_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_32_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_10_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_10_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_03_good();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_03_good();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_67_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_67_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_17_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_17_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_08_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_08_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_03_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_03_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_13_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_13_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_44_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_44_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_06_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_06_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_17_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_17_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_07_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_07_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_61_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_61_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_65_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_65_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_04_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_04_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_67_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_67_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_07_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_07_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_09_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_09_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_63_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_63_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_06_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_06_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_65_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_65_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_18_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_18_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_09_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_09_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_66_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_66_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_61_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_61_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_18_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_18_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_42_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_42_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_05_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_05_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_65_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_65_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_16_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_16_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_11_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_11_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_13_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_13_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_44_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_44_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_02_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_02_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_06_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_06_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_31_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_31_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_32_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_32_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_14_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_14_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_64_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_64_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_34_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_34_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_15_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_15_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_11_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_11_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_13_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_13_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_10_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_10_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_02_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_02_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_21_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_21_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_05_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_05_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_41_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_41_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_16_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_16_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_31_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_31_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_64_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_64_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_21_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_21_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_10_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_10_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_09_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_09_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_08_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_08_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_12_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_12_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_51_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_51_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_41_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_41_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_12_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_12_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_02_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_02_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_03_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_03_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_64_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_64_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_31_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_31_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_01_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_01_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_63_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_63_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_66_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_66_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_11_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_11_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_42_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_42_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_16_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_16_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_01_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_01_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_01_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_01_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_67_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_67_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_17_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_17_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_14_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_14_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_12_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_12_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_51_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_51_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_63_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_63_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_32_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_32_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_double_10_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_10_bad();
  printLine("Calling CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_03_bad();");
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_03_bad();
  return 0;
}
// 61617C: using guessed type int globalArgc;
// 616180: using guessed type __int64 globalArgv;

//----- (0000000000401D68) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_31_bad()
{
  unsigned int *v0; // [rsp+18h] [rbp-8h]

  v0 = (unsigned int *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  printStructLine(v0);
  free(v0);
}

//----- (0000000000401DD6) ----------------------------------------------------
void goodG2B()
{
  unsigned int *v0; // [rsp+18h] [rbp-8h]

  v0 = (unsigned int *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  printStructLine(v0);
  free(v0);
}

//----- (0000000000401E44) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_31_good()
{
  goodG2B();
}

//----- (0000000000401E54) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_06_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000401EC1) ----------------------------------------------------
void goodG2B1()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000401F3A) ----------------------------------------------------
void goodG2B2()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000401FA7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_06_good()
{
  goodG2B1();
  goodG2B2();
}

//----- (0000000000401FC1) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_65b_badSink(unsigned int *a1)
{
  printStructLine(a1);
  free(a1);
}

//----- (0000000000401FE7) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_65b_goodG2BSink(unsigned int *a1)
{
  printStructLine(a1);
  free(a1);
}

//----- (000000000040200D) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_67_bad()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_67b_badSink(v0);
}

//----- (0000000000402067) ----------------------------------------------------
void goodG2B_0()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_67b_goodG2BSink(v0);
}

//----- (00000000004020C1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_67_good()
{
  goodG2B_0();
}

//----- (00000000004020D1) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53c_badSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53d_badSink(a1);
}

//----- (00000000004020EB) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53c_goodG2BSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53d_goodG2BSink(a1);
}

//----- (0000000000402105) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_64b_badSink(__int64 **a1)
{
  __int64 *ptr; // [rsp+10h] [rbp-10h]

  ptr = *a1;
  printLongLongLine(**a1);
  free(ptr);
}

//----- (0000000000402141) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_64b_goodG2BSink(__int64 **a1)
{
  __int64 *ptr; // [rsp+10h] [rbp-10h]

  ptr = *a1;
  printLongLongLine(**a1);
  free(ptr);
}

//----- (000000000040217D) ----------------------------------------------------
_DWORD *__fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_badSource(_DWORD *a1)
{
  _DWORD *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_badGlobal )
  {
    v2 = malloc(8uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 1;
    v2[1] = 2;
  }
  return v2;
}
// 6160EC: using guessed type int CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_badGlobal;

//----- (00000000004021CD) ----------------------------------------------------
_DWORD *__fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B1Source(_DWORD *a1)
{
  _DWORD *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B1Global )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    v2 = malloc(8uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 1;
    v2[1] = 2;
  }
  return v2;
}
// 6160F0: using guessed type int CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B1Global;

//----- (0000000000402229) ----------------------------------------------------
_DWORD *__fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B2Source(_DWORD *a1)
{
  _DWORD *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B2Global )
  {
    v2 = malloc(8uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 1;
    v2[1] = 2;
  }
  return v2;
}
// 6160F4: using guessed type int CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B2Global;

//----- (0000000000402279) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_09_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}
// 40F214: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004022DA) ----------------------------------------------------
void goodG2B1_0()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FALSE )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}
// 40F218: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000402347) ----------------------------------------------------
void goodG2B2_0()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}
// 40F214: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004023A8) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_09_good()
{
  goodG2B1_0();
  goodG2B2_0();
}

//----- (00000000004023C2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_64_bad()
{
  _QWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_64b_badSink(&v0);
}

//----- (000000000040240C) ----------------------------------------------------
void goodG2B_1()
{
  _QWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_64b_goodG2BSink(&v0);
}

//----- (0000000000402456) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_64_good()
{
  goodG2B_1();
}

//----- (0000000000402466) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_14_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}
// 6160E0: using guessed type int globalFive;

//----- (00000000004024C8) ----------------------------------------------------
void goodG2B1_1()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  printLongLongLine(*ptr);
  free(ptr);
}
// 6160E0: using guessed type int globalFive;

//----- (0000000000402536) ----------------------------------------------------
void goodG2B2_1()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}
// 6160E0: using guessed type int globalFive;

//----- (0000000000402598) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_14_good()
{
  goodG2B1_1();
  goodG2B2_1();
}

//----- (00000000004025B2) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_65_bad()
{
  _DWORD *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 1;
  v1[1] = 2;
  return ((__int64 (__fastcall *)(_DWORD *))CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_65b_badSink)(v1);
}

//----- (000000000040260D) ----------------------------------------------------
__int64 goodG2B_2()
{
  _DWORD *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 1;
  v1[1] = 2;
  return ((__int64 (__fastcall *)(_DWORD *))CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_65b_goodG2BSink)(v1);
}

//----- (0000000000402668) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_65_good()
{
  return goodG2B_2();
}

//----- (0000000000402678) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}
// 6160E0: using guessed type int globalFive;

//----- (00000000004026E6) ----------------------------------------------------
void goodG2B1_2()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  printDoubleLine(*ptr);
  free(ptr);
}
// 6160E0: using guessed type int globalFive;

//----- (0000000000402760) ----------------------------------------------------
void goodG2B2_2()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}
// 6160E0: using guessed type int globalFive;

//----- (00000000004027CE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14_good()
{
  goodG2B1_2();
  goodG2B2_2();
}

//----- (00000000004027E8) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000402847) ----------------------------------------------------
void goodG2B1_3()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (00000000004028A6) ----------------------------------------------------
void goodG2B2_3()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000402905) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15_good()
{
  goodG2B1_3();
  goodG2B2_3();
}

//----- (000000000040291F) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_64b_badSink(unsigned int **a1)
{
  unsigned int *ptr; // [rsp+10h] [rbp-10h]

  ptr = *a1;
  printStructLine(*a1);
  free(ptr);
}

//----- (0000000000402958) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_64b_goodG2BSink(unsigned int **a1)
{
  unsigned int *ptr; // [rsp+10h] [rbp-10h]

  ptr = *a1;
  printStructLine(*a1);
  free(ptr);
}

//----- (0000000000402991) ----------------------------------------------------
_DWORD *badSource()
{
  _DWORD *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 1;
  v1[1] = 2;
  return v1;
}

//----- (00000000004029D7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = badSource();
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000402A11) ----------------------------------------------------
_DWORD *goodG2BSource()
{
  _DWORD *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 1;
  v1[1] = 2;
  return v1;
}

//----- (0000000000402A57) ----------------------------------------------------
void goodG2B_3()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = goodG2BSource();
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000402A91) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42_good()
{
  goodG2B_3();
}

//----- (0000000000402AA1) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_67b_badSink(__int64 *a1)
{
  printLongLongLine(*a1);
  free(a1);
}

//----- (0000000000402AD2) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_67b_goodG2BSink(__int64 *a1)
{
  printLongLongLine(*a1);
  free(a1);
}

//----- (0000000000402B03) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_31_bad()
{
  __int64 *v0; // [rsp+18h] [rbp-8h]

  v0 = (__int64 *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  printLongLongLine(*v0);
  free(v0);
}

//----- (0000000000402B6A) ----------------------------------------------------
void goodG2B_4()
{
  __int64 *v0; // [rsp+18h] [rbp-8h]

  v0 = (__int64 *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  printLongLongLine(*v0);
  free(v0);
}

//----- (0000000000402BD1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_31_good()
{
  goodG2B_4();
}

//----- (0000000000402BE1) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_67b_badSink(double *a1)
{
  printDoubleLine(*a1);
  free(a1);
}

//----- (0000000000402C18) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_67b_goodG2BSink(double *a1)
{
  printDoubleLine(*a1);
  free(a1);
}

//----- (0000000000402C4F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54_bad()
{
  double *v0; // [rsp+8h] [rbp-8h]

  v0 = (double *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1.7e300;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54b_badSink(v0);
}

//----- (0000000000402C9D) ----------------------------------------------------
void goodG2B_5()
{
  double *v0; // [rsp+8h] [rbp-8h]

  v0 = (double *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1.7e300;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54b_goodG2BSink(v0);
}

//----- (0000000000402CEB) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54_good()
{
  goodG2B_5();
}

//----- (0000000000402CFB) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_badGlobal = 1;
  ptr = CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_badSource(0LL);
  printStructLine(ptr);
  free(ptr);
}
// 6160EC: using guessed type int CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_badGlobal;

//----- (0000000000402D3F) ----------------------------------------------------
void goodG2B1_4()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B1Global = 0;
  ptr = CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B1Source(0LL);
  printStructLine(ptr);
  free(ptr);
}
// 6160F0: using guessed type int CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B1Global;

//----- (0000000000402D83) ----------------------------------------------------
void goodG2B2_4()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B2Global = 1;
  ptr = CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B2Source(0LL);
  printStructLine(ptr);
  free(ptr);
}
// 6160F4: using guessed type int CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B2Global;

//----- (0000000000402DC7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_good()
{
  goodG2B1_4();
  goodG2B2_4();
}

//----- (0000000000402DE1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68b_badSink()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = (void *)CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_badData;
  printStructLine((unsigned int *)CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_badData);
  free(ptr);
}
// 616188: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_badData;

//----- (0000000000402E0E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68b_goodG2BSink()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = (void *)CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_goodG2BData;
  printStructLine((unsigned int *)CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_goodG2BData);
  free(ptr);
}
// 616190: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_goodG2BData;

//----- (0000000000402E3B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_64_bad()
{
  _QWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 9098483789791991595LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_64b_badSink((double **)&v0);
}

//----- (0000000000402E8B) ----------------------------------------------------
void goodG2B_6()
{
  _QWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 9098483789791991595LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_64b_goodG2BSink((double **)&v0);
}

//----- (0000000000402EDB) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_64_good()
{
  goodG2B_6();
}

//----- (0000000000402EEB) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_15_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000402F43) ----------------------------------------------------
void goodG2B1_5()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000402F9B) ----------------------------------------------------
void goodG2B2_5()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000402FF3) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_15_good()
{
  goodG2B1_5();
  goodG2B2_5();
}

//----- (000000000040300D) ----------------------------------------------------
__int64 staticReturnsTrue()
{
  return 1LL;
}

//----- (0000000000403018) ----------------------------------------------------
__int64 staticReturnsFalse()
{
  return 0LL;
}

//----- (0000000000403023) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsTrue() )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000403088) ----------------------------------------------------
void goodG2B1_6()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (00000000004030F9) ----------------------------------------------------
void goodG2B2_6()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsTrue() )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (000000000040315E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08_good()
{
  goodG2B1_6();
  goodG2B2_6();
}

//----- (0000000000403178) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_04_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (00000000004031D8) ----------------------------------------------------
void goodG2B1_7()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000403244) ----------------------------------------------------
void goodG2B2_7()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (00000000004032A4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_04_good()
{
  goodG2B1_7();
  goodG2B2_7();
}

//----- (00000000004032BE) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_65b_badSink(__int64 *a1)
{
  printLongLongLine(*a1);
  free(a1);
}

//----- (00000000004032E7) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_65b_goodG2BSink(__int64 *a1)
{
  printLongLongLine(*a1);
  free(a1);
}

//----- (0000000000403310) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (000000000040337C) ----------------------------------------------------
void goodG2B1_8()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (00000000004033F4) ----------------------------------------------------
void goodG2B2_8()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000403460) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04_good()
{
  goodG2B1_8();
  goodG2B2_8();
}

//----- (000000000040347A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_31_bad()
{
  double *v0; // [rsp+28h] [rbp-8h]

  v0 = (double *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1.7e300;
  printDoubleLine(*v0);
  free(v0);
}

//----- (00000000004034ED) ----------------------------------------------------
void goodG2B_7()
{
  double *v0; // [rsp+28h] [rbp-8h]

  v0 = (double *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1.7e300;
  printDoubleLine(*v0);
  free(v0);
}

//----- (0000000000403560) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_31_good()
{
  goodG2B_7();
}

//----- (0000000000403570) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52c_badSink(double *a1)
{
  printDoubleLine(*a1);
  free(a1);
}

//----- (000000000040359F) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52c_goodG2BSink(double *a1)
{
  printDoubleLine(*a1);
  free(a1);
}

//----- (00000000004035CE) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54d_badSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54e_badSink(a1);
}

//----- (00000000004035E8) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54d_goodG2BSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54e_goodG2BSink(a1);
}

//----- (0000000000403602) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_65b_badSink(double *a1)
{
  printDoubleLine(*a1);
  free(a1);
}

//----- (0000000000403631) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_65b_goodG2BSink(double *a1)
{
  printDoubleLine(*a1);
  free(a1);
}

//----- (0000000000403660) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticTrue )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}
// 6160C4: using guessed type int staticTrue;

//----- (00000000004036C8) ----------------------------------------------------
void goodG2B1_9()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}
// 6160F8: using guessed type int staticFalse;

//----- (000000000040373C) ----------------------------------------------------
void goodG2B2_9()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticTrue )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}
// 6160C4: using guessed type int staticTrue;

//----- (00000000004037A4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05_good()
{
  goodG2B1_9();
  goodG2B2_9();
}

//----- (00000000004037BE) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_badSink(unsigned int *a1)
{
  printStructLine(a1);
  free(a1);
}

//----- (00000000004037E4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_bad()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_badSink(v0);
}

//----- (0000000000403836) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_goodG2BSink(unsigned int *a1)
{
  printStructLine(a1);
  free(a1);
}

//----- (000000000040385C) ----------------------------------------------------
void goodG2B_8()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_goodG2BSink(v0);
}

//----- (00000000004038AE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_good()
{
  goodG2B_8();
}

//----- (00000000004038BE) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53b_badSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53c_badSink(a1);
}

//----- (00000000004038D8) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53b_goodG2BSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53c_goodG2BSink(a1);
}

//----- (00000000004038F2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_67_bad()
{
  __int64 *v0; // [rsp+8h] [rbp-8h]

  v0 = (__int64 *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_67b_badSink(v0);
}

//----- (0000000000403942) ----------------------------------------------------
void goodG2B_9()
{
  __int64 *v0; // [rsp+8h] [rbp-8h]

  v0 = (__int64 *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_67b_goodG2BSink(v0);
}

//----- (0000000000403992) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_67_good()
{
  goodG2B_9();
}

//----- (00000000004039A2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_13_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}
// 40F21C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000403A0B) ----------------------------------------------------
void goodG2B1_10()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  printStructLine(ptr);
  free(ptr);
}
// 40F21C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000403A80) ----------------------------------------------------
void goodG2B2_10()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}
// 40F21C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000403AE9) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_13_good()
{
  goodG2B1_10();
  goodG2B2_10();
}

//----- (0000000000403B03) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52c_badSink(unsigned int *a1)
{
  printStructLine(a1);
  free(a1);
}

//----- (0000000000403B29) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52c_goodG2BSink(unsigned int *a1)
{
  printStructLine(a1);
  free(a1);
}

//----- (0000000000403B4F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_67_bad()
{
  double *v0; // [rsp+8h] [rbp-8h]

  v0 = (double *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1.7e300;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_67b_badSink(v0);
}

//----- (0000000000403BA5) ----------------------------------------------------
void goodG2B_10()
{
  double *v0; // [rsp+8h] [rbp-8h]

  v0 = (double *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1.7e300;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_67b_goodG2BSink(v0);
}

//----- (0000000000403BFB) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_67_good()
{
  goodG2B_10();
}

//----- (0000000000403C0B) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53c_badSink(__int64 *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53d_badSink(a1);
}

//----- (0000000000403C25) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53c_goodG2BSink(__int64 *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53d_goodG2BSink(a1);
}

//----- (0000000000403C3F) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_63b_badSink(unsigned int **a1)
{
  unsigned int *ptr; // [rsp+18h] [rbp-8h]

  ptr = *a1;
  printStructLine(*a1);
  free(ptr);
}

//----- (0000000000403C70) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_63b_goodG2BSink(unsigned int **a1)
{
  unsigned int *ptr; // [rsp+18h] [rbp-8h]

  ptr = *a1;
  printStructLine(*a1);
  free(ptr);
}

//----- (0000000000403CA1) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53c_badSink(double *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53d_badSink(a1);
}

//----- (0000000000403CBB) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53c_goodG2BSink(double *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53d_goodG2BSink(a1);
}

//----- (0000000000403CD5) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_bad()
{
  _DWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_badData = (__int64)v0;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68b_badSink();
}
// 616188: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_badData;

//----- (0000000000403D30) ----------------------------------------------------
void goodG2B_11()
{
  _DWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_goodG2BData = (__int64)v0;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68b_goodG2BSink();
}
// 616190: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_goodG2BData;

//----- (0000000000403D8B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_good()
{
  goodG2B_11();
}

//----- (0000000000403D9B) ----------------------------------------------------
_QWORD *__fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_badSource(_QWORD *a1)
{
  _QWORD *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_badGlobal )
  {
    v2 = malloc(8uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 2147483643LL;
  }
  return v2;
}
// 61616C: using guessed type int CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_badGlobal;

//----- (0000000000403DE1) ----------------------------------------------------
_QWORD *__fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B1Source(_QWORD *a1)
{
  _QWORD *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B1Global )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    v2 = malloc(8uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 2147483643LL;
  }
  return v2;
}
// 616170: using guessed type int CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B1Global;

//----- (0000000000403E33) ----------------------------------------------------
_QWORD *__fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B2Source(_QWORD *a1)
{
  _QWORD *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B2Global )
  {
    v2 = malloc(8uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 2147483643LL;
  }
  return v2;
}
// 616174: using guessed type int CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B2Global;

//----- (0000000000403E79) ----------------------------------------------------
_QWORD *__fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_badSource(_QWORD *a1)
{
  _QWORD *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_badGlobal )
  {
    v2 = malloc(8uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 9098483789791991595LL;
  }
  return v2;
}
// 616110: using guessed type int CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_badGlobal;

//----- (0000000000403EC5) ----------------------------------------------------
_QWORD *__fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_goodG2B1Source(_QWORD *a1)
{
  _QWORD *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_goodG2B1Global )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    v2 = malloc(8uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 9098483789791991595LL;
  }
  return v2;
}
// 616114: using guessed type int CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_goodG2B1Global;

//----- (0000000000403F1D) ----------------------------------------------------
_QWORD *__fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_goodG2B2Source(_QWORD *a1)
{
  _QWORD *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_goodG2B2Global )
  {
    v2 = malloc(8uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 9098483789791991595LL;
  }
  return v2;
}
// 616118: using guessed type int CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_goodG2B2Global;

//----- (0000000000403F69) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b_badSink(__int64 a1)
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = *(void **)(a1 + 16);
  printStructLine(*(unsigned int **)(a1 + 16));
  free(ptr);
}

//----- (0000000000403F9B) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b_goodG2BSink(__int64 a1)
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = *(void **)(a1 + 16);
  printStructLine(*(unsigned int **)(a1 + 16));
  free(ptr);
}

//----- (0000000000403FCD) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53d_badSink(__int64 *a1)
{
  printLongLongLine(*a1);
  free(a1);
}

//----- (0000000000403FF6) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53d_goodG2BSink(__int64 *a1)
{
  printLongLongLine(*a1);
  free(a1);
}

//----- (000000000040401F) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_65_bad()
{
  _QWORD *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 2147483643LL;
  return ((__int64 (__fastcall *)(_QWORD *))CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_65b_badSink)(v1);
}

//----- (0000000000404070) ----------------------------------------------------
__int64 goodG2B_12()
{
  _QWORD *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 2147483643LL;
  return ((__int64 (__fastcall *)(_QWORD *))CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_65b_goodG2BSink)(v1);
}

//----- (00000000004040C1) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_65_good()
{
  return goodG2B_12();
}

//----- (00000000004040D1) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_65_bad()
{
  _QWORD *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 9098483789791991595LL;
  return ((__int64 (__fastcall *)(_QWORD *))CWE122_Heap_Based_Buffer_Overflow__sizeof_double_65b_badSink)(v1);
}

//----- (0000000000404128) ----------------------------------------------------
__int64 goodG2B_13()
{
  _QWORD *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 9098483789791991595LL;
  return ((__int64 (__fastcall *)(_QWORD *))CWE122_Heap_Based_Buffer_Overflow__sizeof_double_65b_goodG2BSink)(v1);
}

//----- (000000000040417F) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_65_good()
{
  return goodG2B_13();
}

//----- (000000000040418F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_01_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (00000000004041F2) ----------------------------------------------------
void goodG2B_14()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000404255) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_01_good()
{
  goodG2B_14();
}

//----- (0000000000404265) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (00000000004042C9) ----------------------------------------------------
void goodG2B1_11()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (000000000040432D) ----------------------------------------------------
void goodG2B2_11()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000404391) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15_good()
{
  goodG2B1_11();
  goodG2B2_11();
}

//----- (00000000004043AB) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53_bad()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53b_badSink(v0);
}

//----- (00000000004043FD) ----------------------------------------------------
void goodG2B_15()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53b_goodG2BSink(v0);
}

//----- (000000000040444F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53_good()
{
  goodG2B_15();
}

//----- (000000000040445F) ----------------------------------------------------
void badSink()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = (void *)CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_badData;
  printLongLongLine(*(_QWORD *)CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_badData);
  free(ptr);
}
// 616100: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_badData;

//----- (000000000040448F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_bad()
{
  _QWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_badData = (__int64)v0;
  badSink();
}
// 616100: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_badData;

//----- (00000000004044E0) ----------------------------------------------------
void goodG2BSink()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = (void *)CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_goodG2BData;
  printLongLongLine(*(_QWORD *)CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_goodG2BData);
  free(ptr);
}
// 616108: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_goodG2BData;

//----- (0000000000404510) ----------------------------------------------------
void goodG2B_16()
{
  _QWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_goodG2BData = (__int64)v0;
  goodG2BSink();
}
// 616108: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_goodG2BData;

//----- (0000000000404561) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_45_good()
{
  goodG2B_16();
}

//----- (0000000000404571) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (00000000004045D0) ----------------------------------------------------
void goodG2B_17()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (000000000040462F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18_good()
{
  goodG2B_17();
}

//----- (000000000040463F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52_bad()
{
  __int64 *v0; // [rsp+8h] [rbp-8h]

  v0 = (__int64 *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52b_badSink(v0);
}

//----- (0000000000404687) ----------------------------------------------------
void goodG2B_18()
{
  __int64 *v0; // [rsp+8h] [rbp-8h]

  v0 = (__int64 *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52b_goodG2BSink(v0);
}

//----- (00000000004046CF) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52_good()
{
  goodG2B_18();
}

//----- (00000000004046DF) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_badGlobal = 1;
  ptr = (double *)CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_badSource(0LL);
  printDoubleLine(*ptr);
  free(ptr);
}
// 616110: using guessed type int CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_badGlobal;

//----- (000000000040472C) ----------------------------------------------------
void goodG2B1_12()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_goodG2B1Global = 0;
  ptr = (double *)CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_goodG2B1Source(0LL);
  printDoubleLine(*ptr);
  free(ptr);
}
// 616114: using guessed type int CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_goodG2B1Global;

//----- (0000000000404779) ----------------------------------------------------
void goodG2B2_12()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_goodG2B2Global = 1;
  ptr = (double *)CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_goodG2B2Source(0LL);
  printDoubleLine(*ptr);
  free(ptr);
}
// 616118: using guessed type int CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_goodG2B2Global;

//----- (00000000004047C6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_22_good()
{
  goodG2B1_12();
  goodG2B2_12();
}

//----- (00000000004047E0) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68b_badSink()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = (void *)CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_badData;
  printDoubleLine(*(double *)CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_badData);
  free(ptr);
}
// 616198: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_badData;

//----- (0000000000404816) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68b_goodG2BSink()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = (void *)CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_goodG2BData;
  printDoubleLine(*(double *)CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_goodG2BData);
  free(ptr);
}
// 6161A0: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_goodG2BData;

//----- (000000000040484C) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54e_badSink(unsigned int *a1)
{
  printStructLine(a1);
  free(a1);
}

//----- (0000000000404872) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54e_goodG2BSink(unsigned int *a1)
{
  printStructLine(a1);
  free(a1);
}

//----- (0000000000404898) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66_bad()
{
  char v0; // [rsp+0h] [rbp-30h]
  _DWORD *v1; // [rsp+10h] [rbp-20h]
  _DWORD *v2; // [rsp+28h] [rbp-8h]

  v2 = malloc(8uLL);
  if ( !v2 )
    exit(-1);
  *v2 = 1;
  v2[1] = 2;
  v1 = v2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b_badSink((__int64)&v0);
}

//----- (00000000004048F2) ----------------------------------------------------
void goodG2B_19()
{
  char v0; // [rsp+0h] [rbp-30h]
  _DWORD *v1; // [rsp+10h] [rbp-20h]
  _DWORD *v2; // [rsp+28h] [rbp-8h]

  v2 = malloc(8uLL);
  if ( !v2 )
    exit(-1);
  *v2 = 1;
  v2[1] = 2;
  v1 = v2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b_goodG2BSink((__int64)&v0);
}

//----- (000000000040494C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66_good()
{
  goodG2B_19();
}

//----- (000000000040495C) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54b_badSink(double *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54c_badSink(a1);
}

//----- (0000000000404976) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54b_goodG2BSink(double *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54c_goodG2BSink(a1);
}

//----- (0000000000404990) ----------------------------------------------------
_QWORD *badSource_0()
{
  _QWORD *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 2147483643LL;
  return v1;
}

//----- (00000000004049CC) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_42_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = badSource_0();
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000404A09) ----------------------------------------------------
_QWORD *goodG2BSource_0()
{
  _QWORD *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 2147483643LL;
  return v1;
}

//----- (0000000000404A45) ----------------------------------------------------
void goodG2B_20()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = goodG2BSource_0();
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000404A82) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_42_good()
{
  goodG2B_20();
}

//----- (0000000000404A92) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54d_badSink(__int64 *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54e_badSink(a1);
}

//----- (0000000000404AAC) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54d_goodG2BSink(__int64 *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54e_goodG2BSink(a1);
}

//----- (0000000000404AC6) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_64b_badSink(double **a1)
{
  double *ptr; // [rsp+10h] [rbp-10h]

  ptr = *a1;
  printDoubleLine(**a1);
  free(ptr);
}

//----- (0000000000404B08) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_64b_goodG2BSink(double **a1)
{
  double *ptr; // [rsp+10h] [rbp-10h]

  ptr = *a1;
  printDoubleLine(**a1);
  free(ptr);
}

//----- (0000000000404B4A) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54d_badSink(double *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54e_badSink(a1);
}

//----- (0000000000404B64) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54d_goodG2BSink(double *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54e_goodG2BSink(a1);
}

//----- (0000000000404B7E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_12_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  else
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000404C20) ----------------------------------------------------
void goodG2B_21()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  else
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000404CC2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_12_good()
{
  goodG2B_21();
}

//----- (0000000000404CD2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_05_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticTrue_0 )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}
// 6160C8: using guessed type int staticTrue_0;

//----- (0000000000404D33) ----------------------------------------------------
void goodG2B1_13()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFalse_0 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}
// 61611C: using guessed type int staticFalse_0;

//----- (0000000000404DA0) ----------------------------------------------------
void goodG2B2_13()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticTrue_0 )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}
// 6160C8: using guessed type int staticTrue_0;

//----- (0000000000404E01) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_05_good()
{
  goodG2B1_13();
  goodG2B2_13();
}

//----- (0000000000404E1B) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52b_badSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52c_badSink(a1);
}

//----- (0000000000404E35) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52b_goodG2BSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52c_goodG2BSink(a1);
}

//----- (0000000000404E4F) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_41_badSink(__int64 *a1)
{
  printLongLongLine(*a1);
  free(a1);
}

//----- (0000000000404E78) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_41_bad()
{
  __int64 *v0; // [rsp+8h] [rbp-8h]

  v0 = (__int64 *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_41_badSink(v0);
}

//----- (0000000000404EC0) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_41_goodG2BSink(__int64 *a1)
{
  printLongLongLine(*a1);
  free(a1);
}

//----- (0000000000404EE9) ----------------------------------------------------
void goodG2B_22()
{
  __int64 *v0; // [rsp+8h] [rbp-8h]

  v0 = (__int64 *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_41_goodG2BSink(v0);
}

//----- (0000000000404F31) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_41_good()
{
  goodG2B_22();
}

//----- (0000000000404F41) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53b_badSink(__int64 *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53c_badSink(a1);
}

//----- (0000000000404F5B) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53b_goodG2BSink(__int64 *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53c_goodG2BSink(a1);
}

//----- (0000000000404F75) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_05_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( staticTrue_1 )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}
// 6160CC: using guessed type int staticTrue_1;

//----- (0000000000404FE2) ----------------------------------------------------
void goodG2B1_14()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( staticFalse_1 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}
// 616120: using guessed type int staticFalse_1;

//----- (000000000040505B) ----------------------------------------------------
void goodG2B2_14()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( staticTrue_1 )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}
// 6160CC: using guessed type int staticTrue_1;

//----- (00000000004050C8) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_05_good()
{
  goodG2B1_14();
  goodG2B2_14();
}

//----- (00000000004050E2) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_41_badSink(double *a1)
{
  printDoubleLine(*a1);
  free(a1);
}

//----- (0000000000405111) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_41_bad()
{
  double *v0; // [rsp+8h] [rbp-8h]

  v0 = (double *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1.7e300;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_41_badSink(v0);
}

//----- (000000000040515F) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_41_goodG2BSink(double *a1)
{
  printDoubleLine(*a1);
  free(a1);
}

//----- (000000000040518E) ----------------------------------------------------
void goodG2B_23()
{
  double *v0; // [rsp+8h] [rbp-8h]

  v0 = (double *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1.7e300;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_41_goodG2BSink(v0);
}

//----- (00000000004051DC) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_41_good()
{
  goodG2B_23();
}

//----- (00000000004051EC) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68b_badSink()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = (void *)CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_badData;
  printLongLongLine(*(_QWORD *)CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_badData);
  free(ptr);
}
// 6161B0: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_badData;

//----- (000000000040521C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68b_goodG2BSink()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = (void *)CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_goodG2BData;
  printLongLongLine(*(_QWORD *)CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_goodG2BData);
  free(ptr);
}
// 6161A8: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_goodG2BData;

//----- (000000000040524C) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53b_badSink(double *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53c_badSink(a1);
}

//----- (0000000000405266) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53b_goodG2BSink(double *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53c_goodG2BSink(a1);
}

//----- (0000000000405280) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_13_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}
// 40F21C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004052E2) ----------------------------------------------------
void goodG2B1_15()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  printLongLongLine(*ptr);
  free(ptr);
}
// 40F21C: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000405350) ----------------------------------------------------
void goodG2B2_15()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}
// 40F21C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004053B2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_13_good()
{
  goodG2B1_15();
  goodG2B2_15();
}

//----- (00000000004053CC) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52c_badSink(__int64 *a1)
{
  printLongLongLine(*a1);
  free(a1);
}

//----- (00000000004053F5) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52c_goodG2BSink(__int64 *a1)
{
  printLongLongLine(*a1);
  free(a1);
}

//----- (000000000040541E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_01_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000405475) ----------------------------------------------------
void goodG2B_24()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (00000000004054CC) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_01_good()
{
  goodG2B_24();
}

//----- (00000000004054DC) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_63b_badSink(__int64 **a1)
{
  __int64 *ptr; // [rsp+18h] [rbp-8h]

  ptr = *a1;
  printLongLongLine(**a1);
  free(ptr);
}

//----- (0000000000405510) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_63b_goodG2BSink(__int64 **a1)
{
  __int64 *ptr; // [rsp+18h] [rbp-8h]

  ptr = *a1;
  printLongLongLine(**a1);
  free(ptr);
}

//----- (0000000000405544) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_13_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}
// 40F21C: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004055B2) ----------------------------------------------------
void goodG2B1_16()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  printDoubleLine(*ptr);
  free(ptr);
}
// 40F21C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040562C) ----------------------------------------------------
void goodG2B2_16()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}
// 40F21C: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040569A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_13_good()
{
  goodG2B1_16();
  goodG2B2_16();
}

//----- (00000000004056B4) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_63b_badSink(double **a1)
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = *a1;
  printDoubleLine(**a1);
  free(ptr);
}

//----- (00000000004056EE) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_63b_goodG2BSink(double **a1)
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = *a1;
  printDoubleLine(**a1);
  free(ptr);
}

//----- (0000000000405728) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_bad()
{
  __int64 *v0; // [rsp+18h] [rbp-8h]

  v0 = (__int64 *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  printLongLongLine(*v0);
  free(v0);
}

//----- (000000000040578F) ----------------------------------------------------
void goodG2B_25()
{
  __int64 *v0; // [rsp+18h] [rbp-8h]

  v0 = (__int64 *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  printLongLongLine(*v0);
  free(v0);
}

//----- (00000000004057F6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_good()
{
  goodG2B_25();
}

//----- (0000000000405806) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_bad()
{
  _QWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 9098483789791991595LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_badData = (__int64)v0;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68b_badSink();
}
// 616198: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_badData;

//----- (000000000040585D) ----------------------------------------------------
void goodG2B_26()
{
  _QWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 9098483789791991595LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_goodG2BData = (__int64)v0;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68b_goodG2BSink();
}
// 6161A0: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_goodG2BData;

//----- (00000000004058B4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_68_good()
{
  goodG2B_26();
}

//----- (00000000004058C4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_17_bad()
{
  unsigned int *ptr; // [rsp+0h] [rbp-10h]
  int i; // [rsp+Ch] [rbp-4h]

  ptr = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000405935) ----------------------------------------------------
void goodG2B_27()
{
  unsigned int *ptr; // [rsp+0h] [rbp-10h]
  int i; // [rsp+Ch] [rbp-4h]

  ptr = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}

//----- (00000000004059A6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_17_good()
{
  goodG2B_27();
}

//----- (00000000004059B6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_34_bad()
{
  double *v0; // [rsp+28h] [rbp-8h]

  v0 = (double *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1.7e300;
  printDoubleLine(*v0);
  free(v0);
}

//----- (0000000000405A29) ----------------------------------------------------
void goodG2B_28()
{
  double *v0; // [rsp+28h] [rbp-8h]

  v0 = (double *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1.7e300;
  printDoubleLine(*v0);
  free(v0);
}

//----- (0000000000405A9C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_34_good()
{
  goodG2B_28();
}

//----- (0000000000405AAC) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_66b_badSink(__int64 a1)
{
  __int64 *ptr; // [rsp+18h] [rbp-8h]

  ptr = *(__int64 **)(a1 + 16);
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000405AE1) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_66b_goodG2BSink(__int64 a1)
{
  __int64 *ptr; // [rsp+18h] [rbp-8h]

  ptr = *(__int64 **)(a1 + 16);
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000405B16) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_51_bad()
{
  __int64 *v0; // [rsp+8h] [rbp-8h]

  v0 = (__int64 *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_51b_badSink(v0);
}

//----- (0000000000405B5E) ----------------------------------------------------
void goodG2B_29()
{
  __int64 *v0; // [rsp+8h] [rbp-8h]

  v0 = (__int64 *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_51b_goodG2BSink(v0);
}

//----- (0000000000405BA6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_51_good()
{
  goodG2B_29();
}

//----- (0000000000405BB6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_32_bad()
{
  __int64 v0; // [rsp+18h] [rbp-28h]
  void *ptr; // [rsp+20h] [rbp-20h]
  _QWORD *v2; // [rsp+28h] [rbp-18h]
  void **v3; // [rsp+30h] [rbp-10h]
  __int64 *v4; // [rsp+38h] [rbp-8h]

  v4 = &v0;
  v3 = (void **)&v0;
  v0 = 0LL;
  v2 = 0LL;
  v2 = malloc(8uLL);
  if ( !v2 )
    exit(-1);
  *v2 = 9098483789791991595LL;
  *v4 = (__int64)v2;
  ptr = *v3;
  printDoubleLine(*(double *)ptr);
  free(ptr);
}

//----- (0000000000405C4A) ----------------------------------------------------
void goodG2B_30()
{
  __int64 v0; // [rsp+18h] [rbp-28h]
  void *ptr; // [rsp+20h] [rbp-20h]
  _QWORD *v2; // [rsp+28h] [rbp-18h]
  void **v3; // [rsp+30h] [rbp-10h]
  __int64 *v4; // [rsp+38h] [rbp-8h]

  v4 = &v0;
  v3 = (void **)&v0;
  v0 = 0LL;
  v2 = 0LL;
  v2 = malloc(8uLL);
  if ( !v2 )
    exit(-1);
  *v2 = 9098483789791991595LL;
  *v4 = (__int64)v2;
  ptr = *v3;
  printDoubleLine(*(double *)ptr);
  free(ptr);
}

//----- (0000000000405CDE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_32_good()
{
  goodG2B_30();
}

//----- (0000000000405CEE) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_66b_badSink(__int64 a1)
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = *(double **)(a1 + 16);
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000405D29) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_66b_goodG2BSink(__int64 a1)
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = *(double **)(a1 + 16);
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000405D64) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_11_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000405DD0) ----------------------------------------------------
void goodG2B1_17()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000405E48) ----------------------------------------------------
void goodG2B2_17()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000405EB4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_11_good()
{
  goodG2B1_17();
  goodG2B2_17();
}

//----- (0000000000405ECE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_02_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000405F2C) ----------------------------------------------------
void goodG2B1_18()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000405F8A) ----------------------------------------------------
void goodG2B2_18()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000405FE8) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_02_good()
{
  goodG2B1_18();
  goodG2B2_18();
}

//----- (0000000000406002) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54b_badSink(__int64 *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54c_badSink(a1);
}

//----- (000000000040601C) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54b_goodG2BSink(__int64 *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54c_goodG2BSink(a1);
}

//----- (0000000000406036) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52_bad()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52b_badSink(v0);
}

//----- (0000000000406088) ----------------------------------------------------
void goodG2B_31()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52b_goodG2BSink(v0);
}

//----- (00000000004060DA) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_52_good()
{
  goodG2B_31();
}

//----- (00000000004060EA) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_51b_badSink(unsigned int *a1)
{
  printStructLine(a1);
  free(a1);
}

//----- (0000000000406110) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_51b_goodG2BSink(unsigned int *a1)
{
  printStructLine(a1);
  free(a1);
}

//----- (0000000000406136) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53_bad()
{
  double *v0; // [rsp+8h] [rbp-8h]

  v0 = (double *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1.7e300;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53b_badSink(v0);
}

//----- (0000000000406184) ----------------------------------------------------
void goodG2B_32()
{
  double *v0; // [rsp+8h] [rbp-8h]

  v0 = (double *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1.7e300;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53b_goodG2BSink(v0);
}

//----- (00000000004061D2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53_good()
{
  goodG2B_32();
}

//----- (00000000004061E2) ----------------------------------------------------
_QWORD *__fastcall badSource_1(_QWORD *a1)
{
  _QWORD *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( badStatic )
  {
    v2 = malloc(8uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 2147483643LL;
  }
  return v2;
}
// 616124: using guessed type int badStatic;

//----- (0000000000406228) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_21_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  badStatic = 1;
  ptr = badSource_1(0LL);
  printLongLongLine(*ptr);
  free(ptr);
}
// 616124: using guessed type int badStatic;

//----- (000000000040626F) ----------------------------------------------------
_QWORD *__fastcall goodG2B1Source(_QWORD *a1)
{
  _QWORD *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( goodG2B1Static )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    v2 = malloc(8uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 2147483643LL;
  }
  return v2;
}
// 616128: using guessed type int goodG2B1Static;

//----- (00000000004062C1) ----------------------------------------------------
void goodG2B1_19()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  goodG2B1Static = 0;
  ptr = goodG2B1Source(0LL);
  printLongLongLine(*ptr);
  free(ptr);
}
// 616128: using guessed type int goodG2B1Static;

//----- (0000000000406308) ----------------------------------------------------
_QWORD *__fastcall goodG2B2Source(_QWORD *a1)
{
  _QWORD *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( goodG2B2Static )
  {
    v2 = malloc(8uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 2147483643LL;
  }
  return v2;
}
// 61612C: using guessed type int goodG2B2Static;

//----- (000000000040634E) ----------------------------------------------------
void goodG2B2_19()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  goodG2B2Static = 1;
  ptr = goodG2B2Source(0LL);
  printLongLongLine(*ptr);
  free(ptr);
}
// 61612C: using guessed type int goodG2B2Static;

//----- (0000000000406395) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_21_good()
{
  goodG2B1_19();
  goodG2B2_19();
}

//----- (00000000004063AF) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_03_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000406406) ----------------------------------------------------
void goodG2B1_20()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (000000000040645D) ----------------------------------------------------
void goodG2B2_20()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (00000000004064B4) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_03_good()
{
  goodG2B1_20();
  goodG2B2_20();
}

//----- (00000000004064CE) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_61_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_61b_badSource();
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (000000000040650B) ----------------------------------------------------
void goodG2B_33()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_61b_goodG2BSource();
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000406548) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_61_good()
{
  goodG2B_33();
}

//----- (0000000000406558) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_63_bad()
{
  _QWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_63b_badSink(&v0);
}

//----- (00000000004065A2) ----------------------------------------------------
void goodG2B_34()
{
  _QWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_63b_goodG2BSink(&v0);
}

//----- (00000000004065EC) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_63_good()
{
  goodG2B_34();
}

//----- (00000000004065FC) ----------------------------------------------------
_QWORD *__fastcall badSource_2(_QWORD *a1)
{
  _QWORD *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( badStatic_0 )
  {
    v2 = malloc(8uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 9098483789791991595LL;
  }
  return v2;
}
// 616130: using guessed type int badStatic_0;

//----- (0000000000406648) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_21_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  badStatic_0 = 1;
  ptr = (double *)badSource_2(0LL);
  printDoubleLine(*ptr);
  free(ptr);
}
// 616130: using guessed type int badStatic_0;

//----- (0000000000406695) ----------------------------------------------------
_QWORD *__fastcall goodG2B1Source_0(_QWORD *a1)
{
  _QWORD *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( goodG2B1Static_0 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    v2 = malloc(8uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 9098483789791991595LL;
  }
  return v2;
}
// 616134: using guessed type int goodG2B1Static_0;

//----- (00000000004066ED) ----------------------------------------------------
void goodG2B1_21()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  goodG2B1Static_0 = 0;
  ptr = (double *)goodG2B1Source_0(0LL);
  printDoubleLine(*ptr);
  free(ptr);
}
// 616134: using guessed type int goodG2B1Static_0;

//----- (000000000040673A) ----------------------------------------------------
_QWORD *__fastcall goodG2B2Source_0(_QWORD *a1)
{
  _QWORD *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( goodG2B2Static_0 )
  {
    v2 = malloc(8uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 9098483789791991595LL;
  }
  return v2;
}
// 616138: using guessed type int goodG2B2Static_0;

//----- (0000000000406786) ----------------------------------------------------
void goodG2B2_21()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  goodG2B2Static_0 = 1;
  ptr = (double *)goodG2B2Source_0(0LL);
  printDoubleLine(*ptr);
  free(ptr);
}
// 616138: using guessed type int goodG2B2Static_0;

//----- (00000000004067D3) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_21_good()
{
  goodG2B1_21();
  goodG2B2_21();
}

//----- (00000000004067ED) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_03_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000406850) ----------------------------------------------------
void goodG2B1_22()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (00000000004068B3) ----------------------------------------------------
void goodG2B2_22()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000406916) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_03_good()
{
  goodG2B1_22();
  goodG2B2_22();
}

//----- (0000000000406930) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_10_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalTrue )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}
// 6160DC: using guessed type int globalTrue;

//----- (0000000000406998) ----------------------------------------------------
void goodG2B1_23()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}
// 616178: using guessed type int globalFalse;

//----- (0000000000406A0C) ----------------------------------------------------
void goodG2B2_23()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalTrue )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}
// 6160DC: using guessed type int globalTrue;

//----- (0000000000406A74) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_10_good()
{
  goodG2B1_23();
  goodG2B2_23();
}

//----- (0000000000406A8E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_63_bad()
{
  _QWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 9098483789791991595LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_63b_badSink((double **)&v0);
}

//----- (0000000000406ADE) ----------------------------------------------------
void goodG2B_35()
{
  _QWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 9098483789791991595LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_63b_goodG2BSink((double **)&v0);
}

//----- (0000000000406B2E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_63_good()
{
  goodG2B_35();
}

//----- (0000000000406B3E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_06_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000406BA6) ----------------------------------------------------
void goodG2B1_24()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000406C1A) ----------------------------------------------------
void goodG2B2_24()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000406C82) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_06_good()
{
  goodG2B1_24();
  goodG2B2_24();
}

//----- (0000000000406C9C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_07_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive == 5 )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}
// 6160D0: using guessed type int staticFive;

//----- (0000000000406D05) ----------------------------------------------------
void goodG2B1_25()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive == 5 )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  printStructLine(ptr);
  free(ptr);
}
// 6160D0: using guessed type int staticFive;

//----- (0000000000406D7A) ----------------------------------------------------
void goodG2B2_25()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive == 5 )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}
// 6160D0: using guessed type int staticFive;

//----- (0000000000406DE3) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_07_good()
{
  goodG2B1_25();
  goodG2B2_25();
}

//----- (0000000000406DFD) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_18_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000406E55) ----------------------------------------------------
void goodG2B_36()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000406EAD) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_18_good()
{
  goodG2B_36();
}

//----- (0000000000406EBD) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_18_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000406F21) ----------------------------------------------------
void goodG2B_37()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000406F85) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_18_good()
{
  goodG2B_37();
}

//----- (0000000000406F95) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54c_badSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54d_badSink(a1);
}

//----- (0000000000406FAF) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54c_goodG2BSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54d_goodG2BSink(a1);
}

//----- (0000000000406FC9) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_66_bad()
{
  char v0; // [rsp+0h] [rbp-30h]
  _QWORD *v1; // [rsp+10h] [rbp-20h]
  _QWORD *v2; // [rsp+28h] [rbp-8h]

  v2 = malloc(8uLL);
  if ( !v2 )
    exit(-1);
  *v2 = 2147483643LL;
  v1 = v2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_66b_badSink((__int64)&v0);
}

//----- (0000000000407019) ----------------------------------------------------
void goodG2B_38()
{
  char v0; // [rsp+0h] [rbp-30h]
  _QWORD *v1; // [rsp+10h] [rbp-20h]
  _QWORD *v2; // [rsp+28h] [rbp-8h]

  v2 = malloc(8uLL);
  if ( !v2 )
    exit(-1);
  *v2 = 2147483643LL;
  v1 = v2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_66b_goodG2BSink((__int64)&v0);
}

//----- (0000000000407069) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_66_good()
{
  goodG2B_38();
}

//----- (0000000000407079) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_66_bad()
{
  char v0; // [rsp+0h] [rbp-30h]
  _QWORD *v1; // [rsp+10h] [rbp-20h]
  _QWORD *v2; // [rsp+28h] [rbp-8h]

  v2 = malloc(8uLL);
  if ( !v2 )
    exit(-1);
  *v2 = 9098483789791991595LL;
  v1 = v2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_66b_badSink((__int64)&v0);
}

//----- (00000000004070CF) ----------------------------------------------------
void goodG2B_39()
{
  char v0; // [rsp+0h] [rbp-30h]
  _QWORD *v1; // [rsp+10h] [rbp-20h]
  _QWORD *v2; // [rsp+28h] [rbp-8h]

  v2 = malloc(8uLL);
  if ( !v2 )
    exit(-1);
  *v2 = 9098483789791991595LL;
  v1 = v2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_66b_goodG2BSink((__int64)&v0);
}

//----- (0000000000407125) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_66_good()
{
  goodG2B_39();
}

//----- (0000000000407135) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_01_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000407193) ----------------------------------------------------
void goodG2B_40()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (00000000004071F1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_01_good()
{
  goodG2B_40();
}

//----- (0000000000407201) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53d_badSink(unsigned int *a1)
{
  printStructLine(a1);
  free(a1);
}

//----- (0000000000407227) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_53d_goodG2BSink(unsigned int *a1)
{
  printStructLine(a1);
  free(a1);
}

//----- (000000000040724D) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_51_bad()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_51b_badSink(v0);
}

//----- (000000000040729F) ----------------------------------------------------
void goodG2B_41()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_51b_goodG2BSink(v0);
}

//----- (00000000004072F1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_51_good()
{
  goodG2B_41();
}

//----- (0000000000407301) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_12_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  else
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000407392) ----------------------------------------------------
void goodG2B_42()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  else
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000407423) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_12_good()
{
  goodG2B_42();
}

//----- (0000000000407433) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52b_badSink(double *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52c_badSink(a1);
}

//----- (000000000040744D) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52b_goodG2BSink(double *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52c_goodG2BSink(a1);
}

//----- (0000000000407467) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52b_badSink(__int64 *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52c_badSink(a1);
}

//----- (0000000000407481) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52b_goodG2BSink(__int64 *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_52c_goodG2BSink(a1);
}

//----- (000000000040749B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_12_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  else
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (000000000040753E) ----------------------------------------------------
void goodG2B_43()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  else
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (00000000004075E1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_12_good()
{
  goodG2B_43();
}

//----- (00000000004075F1) ----------------------------------------------------
_DWORD *CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61b_badSource()
{
  _DWORD *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 1;
  v1[1] = 2;
  return v1;
}

//----- (0000000000407637) ----------------------------------------------------
_DWORD *CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61b_goodG2BSource()
{
  _DWORD *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 1;
  v1[1] = 2;
  return v1;
}

//----- (000000000040767D) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61b_badSource();
  printStructLine(ptr);
  free(ptr);
}

//----- (00000000004076B7) ----------------------------------------------------
void goodG2B_44()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61b_goodG2BSource();
  printStructLine(ptr);
  free(ptr);
}

//----- (00000000004076F1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_61_good()
{
  goodG2B_44();
}

//----- (0000000000407701) ----------------------------------------------------
void __fastcall badSink_0(double *a1)
{
  printDoubleLine(*a1);
  free(a1);
}

//----- (0000000000407730) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_44_bad()
{
  _QWORD *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 9098483789791991595LL;
  return ((__int64 (__fastcall *)(_QWORD *))badSink_0)(v1);
}

//----- (0000000000407787) ----------------------------------------------------
void __fastcall goodG2BSink_0(double *a1)
{
  printDoubleLine(*a1);
  free(a1);
}

//----- (00000000004077B6) ----------------------------------------------------
__int64 goodG2B_45()
{
  _QWORD *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 9098483789791991595LL;
  return ((__int64 (__fastcall *)(_QWORD *))goodG2BSink_0)(v1);
}

//----- (000000000040780D) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_44_good()
{
  return goodG2B_45();
}

//----- (000000000040781D) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_09_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}
// 40F214: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040788A) ----------------------------------------------------
void goodG2B1_26()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FALSE )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}
// 40F218: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000407903) ----------------------------------------------------
void goodG2B2_26()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}
// 40F214: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000407970) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_09_good()
{
  goodG2B1_26();
  goodG2B2_26();
}

//----- (000000000040798A) ----------------------------------------------------
void badSink_1()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = (void *)CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_badData;
  printStructLine((unsigned int *)CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_badData);
  free(ptr);
}
// 616140: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_badData;

//----- (00000000004079B7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_bad()
{
  _DWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_badData = (__int64)v0;
  badSink_1();
}
// 616140: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_badData;

//----- (0000000000407A12) ----------------------------------------------------
void goodG2BSink_1()
{
  void *ptr; // [rsp+8h] [rbp-8h]

  ptr = (void *)CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_goodG2BData;
  printStructLine((unsigned int *)CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_goodG2BData);
  free(ptr);
}
// 616148: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_goodG2BData;

//----- (0000000000407A3F) ----------------------------------------------------
void goodG2B_46()
{
  _DWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_goodG2BData = (__int64)v0;
  goodG2BSink_1();
}
// 616148: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_goodG2BData;

//----- (0000000000407A9A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_good()
{
  goodG2B_46();
}

//----- (0000000000407AAA) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_32_bad()
{
  __int64 v0; // [rsp+8h] [rbp-28h]
  void *ptr; // [rsp+10h] [rbp-20h]
  _QWORD *v2; // [rsp+18h] [rbp-18h]
  void **v3; // [rsp+20h] [rbp-10h]
  __int64 *v4; // [rsp+28h] [rbp-8h]

  v4 = &v0;
  v3 = (void **)&v0;
  v0 = 0LL;
  v2 = 0LL;
  v2 = malloc(8uLL);
  if ( !v2 )
    exit(-1);
  *v2 = 2147483643LL;
  *v4 = (__int64)v2;
  ptr = *v3;
  printLongLongLine(*(_QWORD *)ptr);
  free(ptr);
}

//----- (0000000000407B32) ----------------------------------------------------
void goodG2B_47()
{
  __int64 v0; // [rsp+8h] [rbp-28h]
  void *ptr; // [rsp+10h] [rbp-20h]
  _QWORD *v2; // [rsp+18h] [rbp-18h]
  void **v3; // [rsp+20h] [rbp-10h]
  __int64 *v4; // [rsp+28h] [rbp-8h]

  v4 = &v0;
  v3 = (void **)&v0;
  v0 = 0LL;
  v2 = 0LL;
  v2 = malloc(8uLL);
  if ( !v2 )
    exit(-1);
  *v2 = 2147483643LL;
  *v4 = (__int64)v2;
  ptr = *v3;
  printLongLongLine(*(_QWORD *)ptr);
  free(ptr);
}

//----- (0000000000407BBA) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_32_good()
{
  goodG2B_47();
}

//----- (0000000000407BCA) ----------------------------------------------------
__int64 staticReturnsTrue_0()
{
  return 1LL;
}

//----- (0000000000407BD5) ----------------------------------------------------
__int64 staticReturnsFalse_0()
{
  return 0LL;
}

//----- (0000000000407BE0) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_08_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000407C4C) ----------------------------------------------------
void goodG2B1_27()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsFalse_0() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000407CC4) ----------------------------------------------------
void goodG2B2_27()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000407D30) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_08_good()
{
  goodG2B1_27();
  goodG2B2_27();
}

//----- (0000000000407D4A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_17_bad()
{
  __int64 *ptr; // [rsp+0h] [rbp-10h]
  int i; // [rsp+Ch] [rbp-4h]

  ptr = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000407DB4) ----------------------------------------------------
void goodG2B_48()
{
  __int64 *ptr; // [rsp+0h] [rbp-10h]
  int i; // [rsp+Ch] [rbp-4h]

  ptr = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000407E1E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_17_good()
{
  goodG2B_48();
}

//----- (0000000000407E2E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_17_bad()
{
  double *ptr; // [rsp+10h] [rbp-10h]
  int i; // [rsp+1Ch] [rbp-4h]

  ptr = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000407EA4) ----------------------------------------------------
void goodG2B_49()
{
  double *ptr; // [rsp+10h] [rbp-10h]
  int i; // [rsp+1Ch] [rbp-4h]

  ptr = 0LL;
  for ( i = 0; i <= 0; ++i )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000407F1A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_17_good()
{
  goodG2B_49();
}

//----- (0000000000407F2A) ----------------------------------------------------
void __fastcall badSink_2(__int64 *a1)
{
  printLongLongLine(*a1);
  free(a1);
}

//----- (0000000000407F53) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_44_bad()
{
  _QWORD *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 2147483643LL;
  return ((__int64 (__fastcall *)(_QWORD *))badSink_2)(v1);
}

//----- (0000000000407FA4) ----------------------------------------------------
void __fastcall goodG2BSink_2(__int64 *a1)
{
  printLongLongLine(*a1);
  free(a1);
}

//----- (0000000000407FCD) ----------------------------------------------------
__int64 goodG2B_50()
{
  _QWORD *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 2147483643LL;
  return ((__int64 (__fastcall *)(_QWORD *))goodG2BSink_2)(v1);
}

//----- (000000000040801E) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_44_good()
{
  return goodG2B_50();
}

//----- (000000000040802E) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_11_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000408093) ----------------------------------------------------
void goodG2B1_28()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000408104) ----------------------------------------------------
void goodG2B2_28()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000408169) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_11_good()
{
  goodG2B1_28();
  goodG2B2_28();
}

//----- (0000000000408183) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_02_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (00000000004081DA) ----------------------------------------------------
void goodG2B1_29()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000408231) ----------------------------------------------------
void goodG2B2_29()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000408288) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_02_good()
{
  goodG2B1_29();
  goodG2B2_29();
}

//----- (00000000004082A2) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_11_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000408313) ----------------------------------------------------
void goodG2B1_30()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsFalse() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000408390) ----------------------------------------------------
void goodG2B2_30()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)globalReturnsTrue() )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000408401) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_11_good()
{
  goodG2B1_30();
  goodG2B2_30();
}

//----- (000000000040841B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_02_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (000000000040847E) ----------------------------------------------------
void goodG2B1_31()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (00000000004084E1) ----------------------------------------------------
void goodG2B2_31()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000408544) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_02_good()
{
  goodG2B1_31();
  goodG2B2_31();
}

//----- (000000000040855E) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_51b_badSink(__int64 *a1)
{
  printLongLongLine(*a1);
  free(a1);
}

//----- (0000000000408587) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_51b_goodG2BSink(__int64 *a1)
{
  printLongLongLine(*a1);
  free(a1);
}

//----- (00000000004085B0) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52_bad()
{
  double *v0; // [rsp+8h] [rbp-8h]

  v0 = (double *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1.7e300;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52b_badSink(v0);
}

//----- (00000000004085FE) ----------------------------------------------------
void goodG2B_51()
{
  double *v0; // [rsp+8h] [rbp-8h]

  v0 = (double *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1.7e300;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52b_goodG2BSink(v0);
}

//----- (000000000040864C) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_52_good()
{
  goodG2B_51();
}

//----- (000000000040865C) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51b_badSink(double *a1)
{
  printDoubleLine(*a1);
  free(a1);
}

//----- (000000000040868B) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51b_goodG2BSink(double *a1)
{
  printDoubleLine(*a1);
  free(a1);
}

//----- (00000000004086BA) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_16_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000408712) ----------------------------------------------------
void goodG2B_52()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (000000000040876A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_16_good()
{
  goodG2B_52();
}

//----- (000000000040877A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_16_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (00000000004087DE) ----------------------------------------------------
void goodG2B_53()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1.7e300;
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000408842) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_16_good()
{
  goodG2B_53();
}

//----- (0000000000408852) ----------------------------------------------------
_QWORD *CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_61b_badSource()
{
  _QWORD *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 2147483643LL;
  return v1;
}

//----- (000000000040888E) ----------------------------------------------------
_QWORD *CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_61b_goodG2BSource()
{
  _QWORD *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 2147483643LL;
  return v1;
}

//----- (00000000004088CA) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_10_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalTrue )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}
// 6160DC: using guessed type int globalTrue;

//----- (000000000040892B) ----------------------------------------------------
void goodG2B1_32()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}
// 616178: using guessed type int globalFalse;

//----- (0000000000408998) ----------------------------------------------------
void goodG2B2_32()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalTrue )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}
// 6160DC: using guessed type int globalTrue;

//----- (00000000004089F9) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_10_good()
{
  goodG2B1_32();
  goodG2B2_32();
}

//----- (0000000000408A13) ----------------------------------------------------
_QWORD *CWE122_Heap_Based_Buffer_Overflow__sizeof_double_61b_badSource()
{
  _QWORD *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 9098483789791991595LL;
  return v1;
}

//----- (0000000000408A55) ----------------------------------------------------
_QWORD *CWE122_Heap_Based_Buffer_Overflow__sizeof_double_61b_goodG2BSource()
{
  _QWORD *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 9098483789791991595LL;
  return v1;
}

//----- (0000000000408A97) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_10_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( globalTrue )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}
// 6160DC: using guessed type int globalTrue;

//----- (0000000000408B04) ----------------------------------------------------
void goodG2B1_33()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( globalFalse )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}
// 616178: using guessed type int globalFalse;

//----- (0000000000408B7D) ----------------------------------------------------
void goodG2B2_33()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( globalTrue )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}
// 6160DC: using guessed type int globalTrue;

//----- (0000000000408BEA) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_10_good()
{
  goodG2B1_33();
  goodG2B2_33();
}

//----- (0000000000408C04) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54b_badSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54c_badSink(a1);
}

//----- (0000000000408C1E) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54b_goodG2BSink(unsigned int *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54c_goodG2BSink(a1);
}

//----- (0000000000408C38) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54c_badSink(__int64 *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54d_badSink(a1);
}

//----- (0000000000408C52) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54c_goodG2BSink(__int64 *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54d_goodG2BSink(a1);
}

//----- (0000000000408C6C) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54c_badSink(double *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54d_badSink(a1);
}

//----- (0000000000408C86) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54c_goodG2BSink(double *a1)
{
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54d_goodG2BSink(a1);
}

//----- (0000000000408CA0) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_14_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}
// 6160E0: using guessed type int globalFive;

//----- (0000000000408D09) ----------------------------------------------------
void goodG2B1_34()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  printStructLine(ptr);
  free(ptr);
}
// 6160E0: using guessed type int globalFive;

//----- (0000000000408D7E) ----------------------------------------------------
void goodG2B2_34()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( globalFive == 5 )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}
// 6160E0: using guessed type int globalFive;

//----- (0000000000408DE7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_14_good()
{
  goodG2B1_34();
  goodG2B2_34();
}

//----- (0000000000408E01) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32_bad()
{
  __int64 v0; // [rsp+8h] [rbp-28h]
  void *ptr; // [rsp+10h] [rbp-20h]
  _DWORD *v2; // [rsp+18h] [rbp-18h]
  void **v3; // [rsp+20h] [rbp-10h]
  __int64 *v4; // [rsp+28h] [rbp-8h]

  v4 = &v0;
  v3 = (void **)&v0;
  v0 = 0LL;
  v2 = 0LL;
  v2 = malloc(8uLL);
  if ( !v2 )
    exit(-1);
  *v2 = 1;
  v2[1] = 2;
  *v4 = (__int64)v2;
  ptr = *v3;
  printStructLine((unsigned int *)ptr);
  free(ptr);
}

//----- (0000000000408E90) ----------------------------------------------------
void goodG2B_54()
{
  __int64 v0; // [rsp+8h] [rbp-28h]
  void *ptr; // [rsp+10h] [rbp-20h]
  _DWORD *v2; // [rsp+18h] [rbp-18h]
  void **v3; // [rsp+20h] [rbp-10h]
  __int64 *v4; // [rsp+28h] [rbp-8h]

  v4 = &v0;
  v3 = (void **)&v0;
  v0 = 0LL;
  v2 = 0LL;
  v2 = malloc(8uLL);
  if ( !v2 )
    exit(-1);
  *v2 = 1;
  v2[1] = 2;
  *v4 = (__int64)v2;
  ptr = *v3;
  printStructLine((unsigned int *)ptr);
  free(ptr);
}

//----- (0000000000408F1F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32_good()
{
  goodG2B_54();
}

//----- (0000000000408F2F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53_bad()
{
  __int64 *v0; // [rsp+8h] [rbp-8h]

  v0 = (__int64 *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53b_badSink(v0);
}

//----- (0000000000408F77) ----------------------------------------------------
void goodG2B_55()
{
  __int64 *v0; // [rsp+8h] [rbp-8h]

  v0 = (__int64 *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53b_goodG2BSink(v0);
}

//----- (0000000000408FBF) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_53_good()
{
  goodG2B_55();
}

//----- (0000000000408FCF) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_bad()
{
  unsigned int *v0; // [rsp+18h] [rbp-8h]

  v0 = (unsigned int *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  printStructLine(v0);
  free(v0);
}

//----- (000000000040903D) ----------------------------------------------------
void goodG2B_56()
{
  unsigned int *v0; // [rsp+18h] [rbp-8h]

  v0 = (unsigned int *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  printStructLine(v0);
  free(v0);
}

//----- (00000000004090AB) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_good()
{
  goodG2B_56();
}

//----- (00000000004090BB) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54e_badSink(__int64 *a1)
{
  printLongLongLine(*a1);
  free(a1);
}

//----- (00000000004090E4) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54e_goodG2BSink(__int64 *a1)
{
  printLongLongLine(*a1);
  free(a1);
}

//----- (000000000040910D) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_0 == 5 )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}
// 6160D4: using guessed type int staticFive_0;

//----- (000000000040917B) ----------------------------------------------------
void goodG2B1_35()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_0 == 5 )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  printDoubleLine(*ptr);
  free(ptr);
}
// 6160D4: using guessed type int staticFive_0;

//----- (00000000004091F5) ----------------------------------------------------
void goodG2B2_35()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_0 == 5 )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}
// 6160D4: using guessed type int staticFive_0;

//----- (0000000000409263) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07_good()
{
  goodG2B1_35();
  goodG2B2_35();
}

//----- (000000000040927D) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_61_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)CWE122_Heap_Based_Buffer_Overflow__sizeof_double_61b_badSource();
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (00000000004092C0) ----------------------------------------------------
void goodG2B_57()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)CWE122_Heap_Based_Buffer_Overflow__sizeof_double_61b_goodG2BSource();
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000409303) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_61_good()
{
  goodG2B_57();
}

//----- (0000000000409313) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_67b_badSink(unsigned int *a1)
{
  printStructLine(a1);
  free(a1);
}

//----- (0000000000409341) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_67b_goodG2BSink(unsigned int *a1)
{
  printStructLine(a1);
  free(a1);
}

//----- (000000000040936F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_bad()
{
  _QWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_badData = (__int64)v0;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68b_badSink();
}
// 6161B0: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_badData;

//----- (00000000004093C0) ----------------------------------------------------
void goodG2B_58()
{
  _QWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_goodG2BData = (__int64)v0;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68b_goodG2BSink();
}
// 6161A8: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_goodG2BData;

//----- (0000000000409411) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_68_good()
{
  goodG2B_58();
}

//----- (0000000000409421) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53d_badSink(double *a1)
{
  printDoubleLine(*a1);
  free(a1);
}

//----- (0000000000409450) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_53d_goodG2BSink(double *a1)
{
  printDoubleLine(*a1);
  free(a1);
}

//----- (000000000040947F) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54_bad()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54b_badSink(v0);
}

//----- (00000000004094D1) ----------------------------------------------------
void goodG2B_59()
{
  unsigned int *v0; // [rsp+8h] [rbp-8h]

  v0 = (unsigned int *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54b_goodG2BSink(v0);
}

//----- (0000000000409523) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_54_good()
{
  goodG2B_59();
}

//----- (0000000000409533) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_64_bad()
{
  _DWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_64b_badSink(&v0);
}

//----- (0000000000409587) ----------------------------------------------------
void goodG2B_60()
{
  _DWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_64b_goodG2BSink(&v0);
}

//----- (00000000004095DB) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_64_good()
{
  goodG2B_60();
}

//----- (00000000004095EB) ----------------------------------------------------
void badSink_3()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = (void *)CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_badData;
  printDoubleLine(*(double *)CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_badData);
  free(ptr);
}
// 616150: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_badData;

//----- (0000000000409621) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_bad()
{
  _QWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 9098483789791991595LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_badData = (__int64)v0;
  badSink_3();
}
// 616150: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_badData;

//----- (0000000000409678) ----------------------------------------------------
void goodG2BSink_3()
{
  void *ptr; // [rsp+18h] [rbp-8h]

  ptr = (void *)CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_goodG2BData;
  printDoubleLine(*(double *)CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_goodG2BData);
  free(ptr);
}
// 616158: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_goodG2BData;

//----- (00000000004096AE) ----------------------------------------------------
void goodG2B_61()
{
  _QWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 9098483789791991595LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_goodG2BData = (__int64)v0;
  goodG2BSink_3();
}
// 616158: using guessed type __int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_goodG2BData;

//----- (0000000000409705) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_45_good()
{
  goodG2B_61();
}

//----- (0000000000409715) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_07_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_1 == 5 )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}
// 6160D8: using guessed type int staticFive_1;

//----- (0000000000409777) ----------------------------------------------------
void goodG2B1_36()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_1 == 5 )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  else
  {
    printLine("Benign, fixed string");
  }
  printLongLongLine(*ptr);
  free(ptr);
}
// 6160D8: using guessed type int staticFive_1;

//----- (00000000004097E5) ----------------------------------------------------
void goodG2B2_36()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( staticFive_1 == 5 )
  {
    ptr = (__int64 *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 2147483643LL;
  }
  printLongLongLine(*ptr);
  free(ptr);
}
// 6160D8: using guessed type int staticFive_1;

//----- (0000000000409847) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_07_good()
{
  goodG2B1_36();
  goodG2B2_36();
}

//----- (0000000000409861) ----------------------------------------------------
__int64 staticReturnsTrue_1()
{
  return 1LL;
}

//----- (000000000040986C) ----------------------------------------------------
__int64 staticReturnsFalse_1()
{
  return 0LL;
}

//----- (0000000000409877) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_08_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (00000000004098E8) ----------------------------------------------------
void goodG2B1_37()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsFalse_1() )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (0000000000409965) ----------------------------------------------------
void goodG2B2_37()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = 0LL;
  if ( (unsigned int)staticReturnsTrue_1() )
  {
    ptr = (double *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1.7e300;
  }
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (00000000004099D6) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_08_good()
{
  goodG2B1_37();
  goodG2B2_37();
}

//----- (00000000004099F0) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54_bad()
{
  __int64 *v0; // [rsp+8h] [rbp-8h]

  v0 = (__int64 *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54b_badSink(v0);
}

//----- (0000000000409A38) ----------------------------------------------------
void goodG2B_62()
{
  __int64 *v0; // [rsp+8h] [rbp-8h]

  v0 = (__int64 *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 2147483643LL;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54b_goodG2BSink(v0);
}

//----- (0000000000409A80) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_54_good()
{
  goodG2B_62();
}

//----- (0000000000409A90) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000409AF7) ----------------------------------------------------
void goodG2B1_38()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000409B6A) ----------------------------------------------------
void goodG2B2_38()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000409BD1) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04_good()
{
  goodG2B1_38();
  goodG2B2_38();
}

//----- (0000000000409BEB) ----------------------------------------------------
_DWORD *__fastcall badSource_3(_DWORD *a1)
{
  _DWORD *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( badStatic_1 )
  {
    v2 = malloc(8uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 1;
    v2[1] = 2;
  }
  return v2;
}
// 616160: using guessed type int badStatic_1;

//----- (0000000000409C3B) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  badStatic_1 = 1;
  ptr = badSource_3(0LL);
  printStructLine(ptr);
  free(ptr);
}
// 616160: using guessed type int badStatic_1;

//----- (0000000000409C7F) ----------------------------------------------------
_DWORD *__fastcall goodG2B1Source_1(_DWORD *a1)
{
  _DWORD *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( goodG2B1Static_1 )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    v2 = malloc(8uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 1;
    v2[1] = 2;
  }
  return v2;
}
// 616164: using guessed type int goodG2B1Static_1;

//----- (0000000000409CDB) ----------------------------------------------------
void goodG2B1_39()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  goodG2B1Static_1 = 0;
  ptr = goodG2B1Source_1(0LL);
  printStructLine(ptr);
  free(ptr);
}
// 616164: using guessed type int goodG2B1Static_1;

//----- (0000000000409D1F) ----------------------------------------------------
_DWORD *__fastcall goodG2B2Source_1(_DWORD *a1)
{
  _DWORD *v2; // [rsp+8h] [rbp-8h]

  v2 = a1;
  if ( goodG2B2Static_1 )
  {
    v2 = malloc(8uLL);
    if ( !v2 )
      exit(-1);
    *v2 = 1;
    v2[1] = 2;
  }
  return v2;
}
// 616168: using guessed type int goodG2B2Static_1;

//----- (0000000000409D6F) ----------------------------------------------------
void goodG2B2_39()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  goodG2B2Static_1 = 1;
  ptr = goodG2B2Source_1(0LL);
  printStructLine(ptr);
  free(ptr);
}
// 616168: using guessed type int goodG2B2Static_1;

//----- (0000000000409DB3) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21_good()
{
  goodG2B1_39();
  goodG2B2_39();
}

//----- (0000000000409DCD) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_03_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000409E2B) ----------------------------------------------------
void goodG2B1_40()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000409E89) ----------------------------------------------------
void goodG2B2_40()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (0000000000409EE7) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_03_good()
{
  goodG2B1_40();
  goodG2B2_40();
}

//----- (0000000000409F01) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_06_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000409F62) ----------------------------------------------------
void goodG2B1_41()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (0000000000409FCF) ----------------------------------------------------
void goodG2B2_41()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  ptr = (__int64 *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 2147483643LL;
  printLongLongLine(*ptr);
  free(ptr);
}

//----- (000000000040A030) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_06_good()
{
  goodG2B1_41();
  goodG2B2_41();
}

//----- (000000000040A04A) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_16_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (000000000040A0A9) ----------------------------------------------------
void goodG2B_63()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = (unsigned int *)malloc(8uLL);
  if ( !ptr )
    exit(-1);
  *ptr = 1;
  ptr[1] = 2;
  printStructLine(ptr);
  free(ptr);
}

//----- (000000000040A108) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_16_good()
{
  goodG2B_63();
}

//----- (000000000040A118) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_63_bad()
{
  _DWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_63b_badSink(&v0);
}

//----- (000000000040A16C) ----------------------------------------------------
void goodG2B_64()
{
  _DWORD *v0; // [rsp+8h] [rbp-8h]

  v0 = malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1;
  v0[1] = 2;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_63b_goodG2BSink(&v0);
}

//----- (000000000040A1C0) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_63_good()
{
  goodG2B_64();
}

//----- (000000000040A1D0) ----------------------------------------------------
_QWORD *badSource_4()
{
  _QWORD *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 9098483789791991595LL;
  return v1;
}

//----- (000000000040A212) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_42_bad()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)badSource_4();
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (000000000040A255) ----------------------------------------------------
_QWORD *goodG2BSource_1()
{
  _QWORD *v1; // [rsp+18h] [rbp-8h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 9098483789791991595LL;
  return v1;
}

//----- (000000000040A297) ----------------------------------------------------
void goodG2B_65()
{
  double *ptr; // [rsp+18h] [rbp-8h]

  ptr = (double *)goodG2BSource_1();
  printDoubleLine(*ptr);
  free(ptr);
}

//----- (000000000040A2DA) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_42_good()
{
  goodG2B_65();
}

//----- (000000000040A2EA) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54e_badSink(double *a1)
{
  printDoubleLine(*a1);
  free(a1);
}

//----- (000000000040A319) ----------------------------------------------------
void __fastcall CWE122_Heap_Based_Buffer_Overflow__sizeof_double_54e_goodG2BSink(double *a1)
{
  printDoubleLine(*a1);
  free(a1);
}

//----- (000000000040A348) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_bad()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_badGlobal = 1;
  ptr = CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_badSource(0LL);
  printLongLongLine(*ptr);
  free(ptr);
}
// 61616C: using guessed type int CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_badGlobal;

//----- (000000000040A38F) ----------------------------------------------------
void goodG2B1_42()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B1Global = 0;
  ptr = CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B1Source(0LL);
  printLongLongLine(*ptr);
  free(ptr);
}
// 616170: using guessed type int CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B1Global;

//----- (000000000040A3D6) ----------------------------------------------------
void goodG2B2_42()
{
  __int64 *ptr; // [rsp+8h] [rbp-8h]

  CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B2Global = 1;
  ptr = CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B2Source(0LL);
  printLongLongLine(*ptr);
  free(ptr);
}
// 616174: using guessed type int CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_goodG2B2Global;

//----- (000000000040A41D) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_22_good()
{
  goodG2B1_42();
  goodG2B2_42();
}

//----- (000000000040A437) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51_bad()
{
  double *v0; // [rsp+8h] [rbp-8h]

  v0 = (double *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1.7e300;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51b_badSink(v0);
}

//----- (000000000040A485) ----------------------------------------------------
void goodG2B_66()
{
  double *v0; // [rsp+8h] [rbp-8h]

  v0 = (double *)malloc(8uLL);
  if ( !v0 )
    exit(-1);
  *v0 = 1.7e300;
  CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51b_goodG2BSink(v0);
}

//----- (000000000040A4D3) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_51_good()
{
  goodG2B_66();
}

//----- (000000000040A4E3) ----------------------------------------------------
void __fastcall badSink_4(unsigned int *a1)
{
  printStructLine(a1);
  free(a1);
}

//----- (000000000040A509) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44_bad()
{
  _DWORD *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 1;
  v1[1] = 2;
  return ((__int64 (__fastcall *)(_DWORD *))badSink_4)(v1);
}

//----- (000000000040A564) ----------------------------------------------------
void __fastcall goodG2BSink_4(unsigned int *a1)
{
  printStructLine(a1);
  free(a1);
}

//----- (000000000040A58A) ----------------------------------------------------
__int64 goodG2B_67()
{
  _DWORD *v1; // [rsp+0h] [rbp-10h]

  v1 = malloc(8uLL);
  if ( !v1 )
    exit(-1);
  *v1 = 1;
  v1[1] = 2;
  return ((__int64 (__fastcall *)(_DWORD *))goodG2BSink_4)(v1);
}

//----- (000000000040A5E5) ----------------------------------------------------
__int64 CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44_good()
{
  return goodG2B_67();
}

//----- (000000000040A5F5) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_09_bad()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}
// 40F214: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040A65D) ----------------------------------------------------
void goodG2B1_43()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_FALSE )
  {
    printLine("Benign, fixed string");
  }
  else
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}
// 40F218: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000040A6D1) ----------------------------------------------------
void goodG2B2_43()
{
  unsigned int *ptr; // [rsp+8h] [rbp-8h]

  ptr = 0LL;
  if ( GLOBAL_CONST_TRUE )
  {
    ptr = (unsigned int *)malloc(8uLL);
    if ( !ptr )
      exit(-1);
    *ptr = 1;
    ptr[1] = 2;
  }
  printStructLine(ptr);
  free(ptr);
}
// 40F214: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040A739) ----------------------------------------------------
void CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_09_good()
{
  goodG2B1_43();
  goodG2B2_43();
}

//----- (000000000040A753) ----------------------------------------------------
int __fastcall printLine(const char *a1)
{
  int result; // eax

  if ( a1 )
    result = puts(a1);
  return result;
}

//----- (000000000040A774) ----------------------------------------------------
int __fastcall printWLine(__int64 a1)
{
  int result; // eax

  if ( a1 )
    result = wprintf("%", a1);
  return result;
}

//----- (000000000040A79F) ----------------------------------------------------
int __fastcall printIntLine(unsigned int a1)
{
  return printf("%d\n", a1);
}

//----- (000000000040A7C0) ----------------------------------------------------
int __fastcall printShortLine(__int16 a1)
{
  return printf("%hd\n", (unsigned int)a1);
}

//----- (000000000040A7E5) ----------------------------------------------------
int __fastcall printFloatLine(float a1)
{
  return printf("%f\n", a1);
}

//----- (000000000040A80B) ----------------------------------------------------
int __fastcall printLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (000000000040A82F) ----------------------------------------------------
int __fastcall printLongLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (000000000040A853) ----------------------------------------------------
int __fastcall printSizeTLine(__int64 a1)
{
  return printf("%zu\n", a1);
}

//----- (000000000040A877) ----------------------------------------------------
int __fastcall printHexCharLine(char a1)
{
  return printf("%02x\n", (unsigned int)a1);
}

//----- (000000000040A89B) ----------------------------------------------------
int __fastcall printWcharLine(int a1)
{
  int v2; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+14h] [rbp-Ch]

  v2 = a1;
  v3 = 0;
  return printf("%ls\n", &v2);
}

//----- (000000000040A8CB) ----------------------------------------------------
int __fastcall printUnsignedLine(unsigned int a1)
{
  return printf("%u\n", a1);
}

//----- (000000000040A8EC) ----------------------------------------------------
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1)
{
  return printf("%02x\n", a1);
}

//----- (000000000040A910) ----------------------------------------------------
int __fastcall printDoubleLine(double a1)
{
  return printf("%g\n", a1);
}

//----- (000000000040A93B) ----------------------------------------------------
int __fastcall printStructLine(unsigned int *a1)
{
  return printf("%d -- %d\n", *a1, a1[1]);
}

//----- (000000000040A967) ----------------------------------------------------
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2)
{
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; i < a2; ++i )
    printf("%02x", *(unsigned __int8 *)(a1 + i));
  return puts(s);
}

//----- (000000000040A9BE) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL;
        i < a2
     && (*__ctype_b_loc())[*(char *)(2 * i + v4)] & 0x1000
     && (*__ctype_b_loc())[*(char *)(2 * i + 1 + v4)] & 0x1000;
        ++i )
  {
    __isoc99_sscanf(2 * i + v4, "%02x", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400930: using guessed type __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040AA97) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL; i < a2 && iswxdigit(*(_DWORD *)(8 * i + v4)) && iswxdigit(*(_DWORD *)(8 * i + 4 + v4)); ++i )
  {
    __isoc99_swscanf(8 * i + v4, "%", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 4009F0: using guessed type __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040AB4B) ----------------------------------------------------
__int64 globalReturnsTrue()
{
  return 1LL;
}

//----- (000000000040AB56) ----------------------------------------------------
__int64 globalReturnsFalse()
{
  return 0LL;
}

//----- (000000000040AB61) ----------------------------------------------------
__int64 globalReturnsTrueOrFalse()
{
  return (unsigned int)(rand() % 2);
}

//----- (000000000040AB77) ----------------------------------------------------
void good1()
{
  ;
}

//----- (000000000040AB7D) ----------------------------------------------------
void good2()
{
  ;
}

//----- (000000000040AB83) ----------------------------------------------------
void good3()
{
  ;
}

//----- (000000000040AB89) ----------------------------------------------------
void good4()
{
  ;
}

//----- (000000000040AB8F) ----------------------------------------------------
void good5()
{
  ;
}

//----- (000000000040AB95) ----------------------------------------------------
void good6()
{
  ;
}

//----- (000000000040AB9B) ----------------------------------------------------
void good7()
{
  ;
}

//----- (000000000040ABA1) ----------------------------------------------------
void good8()
{
  ;
}

//----- (000000000040ABA7) ----------------------------------------------------
void good9()
{
  ;
}

//----- (000000000040ABAD) ----------------------------------------------------
void bad1()
{
  ;
}

//----- (000000000040ABB3) ----------------------------------------------------
void bad2()
{
  ;
}

//----- (000000000040ABB9) ----------------------------------------------------
void bad3()
{
  ;
}

//----- (000000000040ABBF) ----------------------------------------------------
void bad4()
{
  ;
}

//----- (000000000040ABC5) ----------------------------------------------------
void bad5()
{
  ;
}

//----- (000000000040ABCB) ----------------------------------------------------
void bad6()
{
  ;
}

//----- (000000000040ABD1) ----------------------------------------------------
void bad7()
{
  ;
}

//----- (000000000040ABD7) ----------------------------------------------------
void bad8()
{
  ;
}

//----- (000000000040ABDD) ----------------------------------------------------
void bad9()
{
  ;
}

//----- (000000000040ABE3) ----------------------------------------------------
void __fastcall __noreturn internal_start(void *a1)
{
  (*((void (__fastcall **)(_QWORD))a1 + 1))(*((_QWORD *)a1 + 2));
  pthread_exit(0LL);
}

//----- (000000000040AC16) ----------------------------------------------------
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3)
{
  __int64 result; // rax
  void **v4; // [rsp+8h] [rbp-28h]
  pthread_t newthread; // [rsp+20h] [rbp-10h]
  void *arg; // [rsp+28h] [rbp-8h]

  v4 = a3;
  *a3 = 0LL;
  arg = malloc(0x18uLL);
  if ( !arg )
    return 0LL;
  *((_QWORD *)arg + 1) = a1;
  *((_QWORD *)arg + 2) = a2;
  if ( pthread_create(&newthread, 0LL, (void *(*)(void *))internal_start, arg) )
  {
    free(arg);
    result = 0LL;
  }
  else
  {
    *(_QWORD *)arg = newthread;
    *v4 = arg;
    result = 1LL;
  }
  return result;
}

//----- (000000000040ACBA) ----------------------------------------------------
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1)
{
  void *thread_return; // [rsp+18h] [rbp-8h]

  return pthread_join(*a1, &thread_return) == 0;
}

//----- (000000000040ACEE) ----------------------------------------------------
__int64 __fastcall stdThreadDestroy(void *a1)
{
  free(a1);
  return 1LL;
}

//----- (000000000040AD0D) ----------------------------------------------------
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1)
{
  __int64 result; // rax
  pthread_mutex_t *mutex; // [rsp+18h] [rbp-8h]

  *a1 = 0LL;
  mutex = (pthread_mutex_t *)malloc(0x28uLL);
  if ( !mutex )
    return 0LL;
  if ( pthread_mutex_init(mutex, 0LL) )
  {
    free(a1);
    result = 0LL;
  }
  else
  {
    *a1 = mutex;
    result = 1LL;
  }
  return result;
}

//----- (000000000040AD82) ----------------------------------------------------
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1)
{
  return pthread_mutex_lock(a1);
}

//----- (000000000040AD9C) ----------------------------------------------------
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1)
{
  return pthread_mutex_unlock(a1);
}

//----- (000000000040ADB6) ----------------------------------------------------
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1)
{
  pthread_mutex_destroy(a1);
  free(a1);
}

//----- (000000000040ADE0) ----------------------------------------------------
void _libc_csu_init(void)
{
  __int64 v0; // rbx
  signed __int64 v1; // rbp

  v0 = 0LL;
  v1 = &_do_global_dtors_aux_fini_array_entry - _frame_dummy_init_array_entry;
  init_proc();
  if ( v1 )
  {
    do
      _frame_dummy_init_array_entry[v0++]();
    while ( v0 != v1 );
  }
}
// 615DD0: using guessed type __int64 (__fastcall *_frame_dummy_init_array_entry[2])();
// 615DD8: using guessed type __int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)();

//----- (000000000040AE54) ----------------------------------------------------
void term_proc()
{
  ;
}

// ALL OK, 593 function(s) have been successfully decompiled
