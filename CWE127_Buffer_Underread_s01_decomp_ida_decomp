/* This file was generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2018 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

void *init_proc();
__int64 sub_400CE0();
// int printf(const char *format, ...);
// void *memset(void *s, int c, size_t n);
// int close(int fd);
// __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD); weak
// int puts(const char *s);
// uint16_t htons(uint16_t hostshort);
// __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD); weak
// void *malloc(size_t size);
// int __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end);
// ssize_t recv(int fd, void *buf, size_t n, int flags);
// int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr);
// char *fgets(char *s, int n, FILE *stream);
// int iswxdigit(wint_t wc);
// void free(void *ptr);
// size_t strlen(const char *s);
// int pthread_create(pthread_t *newthread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);
// int listen(int fd, int n);
// const unsigned __int16 **__ctype_b_loc(void);
// int pthread_join(pthread_t th, void **thread_return);
// void __noreturn pthread_exit(void *retval);
// int atoi(const char *nptr);
// int connect(int fd, const struct sockaddr *addr, socklen_t len);
// void *memmove(void *dest, const void *src, size_t n);
// int socket(int domain, int type, int protocol);
// int wprintf(const wchar_t *format, ...);
// __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD); weak
// char *strcpy(char *dest, const char *src);
// void srand(unsigned int seed);
// char *strncpy(char *dest, const char *src, size_t n);
// int bind(int fd, const struct sockaddr *addr, socklen_t len);
// int pthread_mutex_lock(pthread_mutex_t *mutex);
// int rand(void);
// int pthread_mutex_destroy(pthread_mutex_t *mutex);
// int accept(int fd, struct sockaddr *addr, socklen_t *addr_len);
// int pthread_mutex_unlock(pthread_mutex_t *mutex);
// time_t time(time_t *timer);
// in_addr_t inet_addr(const char *cp);
// __int64 _gmon_start__(void); weak
// void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>);
__int64 deregister_tm_clones();
__int64 register_tm_clones();
__int64 _do_global_dtors_aux();
__int64 frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
int CWE127_Buffer_Underread__CWE839_connect_socket_04_bad();
int goodB2G1();
int goodB2G2();
int goodG2B1();
int goodG2B2();
int CWE127_Buffer_Underread__CWE839_connect_socket_04_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_04_bad();
int goodG2B1_0();
int goodG2B2_0();
int CWE127_Buffer_Underread__char_alloca_memcpy_04_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_31_bad();
int goodG2B();
int CWE127_Buffer_Underread__char_alloca_memcpy_31_good();
__int64 staticReturnsTrue();
__int64 staticReturnsFalse();
int CWE127_Buffer_Underread__char_declare_ncpy_08_bad();
int goodG2B1_1();
int goodG2B2_1();
int CWE127_Buffer_Underread__char_declare_ncpy_08_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_10_bad();
int goodG2B1_2();
int goodG2B2_2();
int CWE127_Buffer_Underread__char_alloca_ncpy_10_good();
int CWE127_Buffer_Underread__char_declare_loop_09_bad();
int goodG2B1_3();
int goodG2B2_3();
int CWE127_Buffer_Underread__char_declare_loop_09_good();
int CWE127_Buffer_Underread__char_alloca_cpy_09_bad();
int goodG2B1_4();
int goodG2B2_4();
int CWE127_Buffer_Underread__char_alloca_cpy_09_good();
int CWE127_Buffer_Underread__char_declare_ncpy_68_bad();
int goodG2B_0();
int CWE127_Buffer_Underread__char_declare_ncpy_68_good();
int CWE127_Buffer_Underread__char_alloca_cpy_64_bad();
int goodG2B_1();
int CWE127_Buffer_Underread__char_alloca_cpy_64_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_54c_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_54c_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_declare_memcpy_32_bad();
int goodG2B_2();
int CWE127_Buffer_Underread__char_declare_memcpy_32_good();
__int64 staticReturnsTrue_0();
__int64 staticReturnsFalse_0();
int CWE127_Buffer_Underread__CWE839_connect_socket_08_bad();
int goodB2G1_0();
int goodB2G2_0();
int goodG2B1_5();
int goodG2B2_5();
int CWE127_Buffer_Underread__CWE839_connect_socket_08_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_67_bad();
int goodG2B_3();
int CWE127_Buffer_Underread__char_alloca_memcpy_67_good();
int CWE127_Buffer_Underread__char_declare_cpy_54_bad();
int goodG2B_4();
int CWE127_Buffer_Underread__char_declare_cpy_54_good();
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_54b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_54b_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_alloca_ncpy_01_bad();
int goodG2B_5();
int CWE127_Buffer_Underread__char_alloca_ncpy_01_good();
int badSink();
int CWE127_Buffer_Underread__char_alloca_memmove_45_bad();
int goodG2BSink();
int goodG2B_6();
int CWE127_Buffer_Underread__char_alloca_memmove_45_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_53d_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_53d_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_declare_memcpy_03_bad();
int goodG2B1_6();
int goodG2B2_6();
int CWE127_Buffer_Underread__char_declare_memcpy_03_good();
int CWE127_Buffer_Underread__char_alloca_cpy_11_bad();
int goodG2B1_7();
int goodG2B2_7();
int CWE127_Buffer_Underread__char_alloca_cpy_11_good();
int CWE127_Buffer_Underread__char_alloca_cpy_02_bad();
int goodG2B1_8();
int goodG2B2_8();
int CWE127_Buffer_Underread__char_alloca_cpy_02_good();
int CWE127_Buffer_Underread__CWE839_fgets_11_bad();
int goodB2G1_1();
int goodB2G2_1();
int goodG2B1_9();
int goodG2B2_9();
int CWE127_Buffer_Underread__CWE839_fgets_11_good();
int CWE127_Buffer_Underread__char_declare_memmove_03_bad();
int goodG2B1_10();
int goodG2B2_10();
int CWE127_Buffer_Underread__char_declare_memmove_03_good();
int CWE127_Buffer_Underread__char_declare_memcpy_18_bad();
int goodG2B_7();
int CWE127_Buffer_Underread__char_declare_memcpy_18_good();
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_65b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_65b_goodG2BSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54d_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54d_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54d_goodB2GSink(int a1);
int CWE127_Buffer_Underread__char_alloca_memcpy_11_bad();
int goodG2B1_11();
int goodG2B2_11();
int CWE127_Buffer_Underread__char_alloca_memcpy_11_good();
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_65b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_65b_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_alloca_cpy_10_bad();
int goodG2B1_12();
int goodG2B2_12();
int CWE127_Buffer_Underread__char_alloca_cpy_10_good();
void CWE127_Buffer_Underread__CWE839_connect_socket_17_bad();
void goodB2G();
int goodG2B_8();
int CWE127_Buffer_Underread__CWE839_connect_socket_17_good();
int CWE127_Buffer_Underread__char_alloca_loop_14_bad();
int goodG2B1_13();
int goodG2B2_13();
int CWE127_Buffer_Underread__char_alloca_loop_14_good();
int CWE127_Buffer_Underread__char_alloca_memmove_66_bad();
int goodG2B_9();
int CWE127_Buffer_Underread__char_alloca_memmove_66_good();
void CWE127_Buffer_Underread__CWE839_fgets_17_bad();
void goodB2G_0();
int goodG2B_10();
int CWE127_Buffer_Underread__CWE839_fgets_17_good();
int CWE127_Buffer_Underread__char_alloca_loop_32_bad();
int goodG2B_11();
int CWE127_Buffer_Underread__char_alloca_loop_32_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_09_bad();
int goodG2B1_14();
int goodG2B2_14();
int CWE127_Buffer_Underread__char_alloca_ncpy_09_good();
int __fastcall badSink_0(int a1);
__int64 CWE127_Buffer_Underread__CWE839_connect_socket_44_bad();
int __fastcall goodG2BSink_0(int a1);
int goodG2B_12();
int __fastcall goodB2GSink(int a1);
__int64 goodB2G_1();
__int64 CWE127_Buffer_Underread__CWE839_connect_socket_44_good();
int CWE127_Buffer_Underread__CWE839_fgets_14_bad();
int goodB2G1_2();
int goodB2G2_2();
int goodG2B1_15();
int goodG2B2_15();
int CWE127_Buffer_Underread__CWE839_fgets_14_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_54c_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_54c_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__CWE839_fgets_32_bad();
int goodG2B_13();
int goodB2G_2();
int CWE127_Buffer_Underread__CWE839_fgets_32_good();
int CWE127_Buffer_Underread__CWE839_fscanf_63_bad();
int goodG2B_14();
int goodB2G_3();
int CWE127_Buffer_Underread__CWE839_fscanf_63_good();
int CWE127_Buffer_Underread__char_alloca_cpy_01_bad();
int goodG2B_15();
int CWE127_Buffer_Underread__char_alloca_cpy_01_good();
int __fastcall CWE127_Buffer_Underread__char_declare_loop_54d_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_loop_54d_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_53d_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_53d_goodG2BSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_64b_badSink(void **a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_64b_goodG2BSink(void **a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_67b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_67b_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_67b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_67b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_67b_goodB2GSink(int a1);
__int64 CWE127_Buffer_Underread__char_declare_ncpy_65_bad();
__int64 goodG2B_16();
__int64 CWE127_Buffer_Underread__char_declare_ncpy_65_good();
int CWE127_Buffer_Underread__char_alloca_cpy_67_bad();
int goodG2B_17();
int CWE127_Buffer_Underread__char_alloca_cpy_67_good();
__int64 __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_61b_badSource(unsigned int a1);
__int64 CWE127_Buffer_Underread__CWE839_connect_socket_61b_goodG2BSource();
__int64 __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_61b_goodB2GSource(unsigned int a1);
int CWE127_Buffer_Underread__char_declare_loop_13_bad();
int goodG2B1_16();
int goodG2B2_16();
int CWE127_Buffer_Underread__char_declare_loop_13_good();
int CWE127_Buffer_Underread__char_declare_loop_11_bad();
int goodG2B1_17();
int goodG2B2_17();
int CWE127_Buffer_Underread__char_declare_loop_11_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_54d_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_54d_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_63b_badSink(int *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_63b_goodG2BSink(int *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_63b_goodB2GSink(int *a1);
int CWE127_Buffer_Underread__char_alloca_loop_04_bad();
int goodG2B1_18();
int goodG2B2_18();
int CWE127_Buffer_Underread__char_alloca_loop_04_good();
int CWE127_Buffer_Underread__char_alloca_loop_31_bad();
int goodG2B_18();
int CWE127_Buffer_Underread__char_alloca_loop_31_good();
int __fastcall badSink_1(int a1);
int CWE127_Buffer_Underread__CWE839_listen_socket_21_bad();
int __fastcall goodB2G1Sink(int a1);
int goodB2G1_3();
int __fastcall goodB2G2Sink(int a1);
int goodB2G2_3();
int __fastcall goodG2BSink_1(int a1);
int goodG2B_19();
int CWE127_Buffer_Underread__CWE839_listen_socket_21_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_03_bad();
int goodB2G1_4();
int goodB2G2_4();
int goodG2B1_19();
int goodG2B2_19();
int CWE127_Buffer_Underread__CWE839_listen_socket_03_good();
int CWE127_Buffer_Underread__char_declare_memcpy_11_bad();
int goodG2B1_20();
int goodG2B2_20();
int CWE127_Buffer_Underread__char_declare_memcpy_11_good();
int CWE127_Buffer_Underread__char_declare_memcpy_02_bad();
int goodG2B1_21();
int goodG2B2_21();
int CWE127_Buffer_Underread__char_declare_memcpy_02_good();
int CWE127_Buffer_Underread__CWE839_fgets_04_bad();
int goodB2G1_5();
int goodB2G2_5();
int goodG2B1_22();
int goodG2B2_22();
int CWE127_Buffer_Underread__CWE839_fgets_04_good();
int CWE127_Buffer_Underread__CWE839_fgets_31_bad();
int goodG2B_20();
int goodB2G_4();
int CWE127_Buffer_Underread__CWE839_fgets_31_good();
__int64 staticReturnsTrue_1();
__int64 staticReturnsFalse_1();
int CWE127_Buffer_Underread__char_alloca_cpy_08_bad();
int goodG2B1_23();
int goodG2B2_23();
int CWE127_Buffer_Underread__char_alloca_cpy_08_good();
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_53c_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_53c_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_alloca_memcpy_13_bad();
int goodG2B1_24();
int goodG2B2_24();
int CWE127_Buffer_Underread__char_alloca_memcpy_13_good();
int CWE127_Buffer_Underread__char_declare_loop_66_bad();
int goodG2B_21();
int CWE127_Buffer_Underread__char_declare_loop_66_good();
int CWE127_Buffer_Underread__char_declare_ncpy_13_bad();
int goodG2B1_25();
int goodG2B2_25();
int CWE127_Buffer_Underread__char_declare_ncpy_13_good();
int CWE127_Buffer_Underread__char_alloca_loop_15_bad();
int goodG2B1_26();
int goodG2B2_26();
int CWE127_Buffer_Underread__char_alloca_loop_15_good();
int CWE127_Buffer_Underread__char_declare_memmove_53_bad();
int goodG2B_22();
int CWE127_Buffer_Underread__char_declare_memmove_53_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_63b_badSink(void **a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_63b_goodG2BSink(void **a1);
int CWE127_Buffer_Underread__CWE839_connect_socket_06_bad();
int goodB2G1_6();
int goodB2G2_6();
int goodG2B1_27();
int goodG2B2_27();
int CWE127_Buffer_Underread__CWE839_connect_socket_06_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_53c_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_53c_goodG2BSink(const void *a1);
int CWE127_Buffer_Underread__CWE839_fgets_15_bad();
int goodB2G1_7();
int goodB2G2_7();
int goodG2B1_28();
int goodG2B2_28();
int CWE127_Buffer_Underread__CWE839_fgets_15_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_04_bad();
int goodG2B1_29();
int goodG2B2_29();
int CWE127_Buffer_Underread__char_alloca_ncpy_04_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_31_bad();
int goodG2B_23();
int CWE127_Buffer_Underread__char_alloca_ncpy_31_good();
int CWE127_Buffer_Underread__char_alloca_cpy_14_bad();
int goodG2B1_30();
int goodG2B2_30();
int CWE127_Buffer_Underread__char_alloca_cpy_14_good();
__int64 staticReturnsTrue_2();
__int64 staticReturnsFalse_2();
int CWE127_Buffer_Underread__CWE839_fscanf_08_bad();
int goodB2G1_8();
int goodB2G2_8();
int goodG2B1_31();
int goodG2B2_31();
int CWE127_Buffer_Underread__CWE839_fscanf_08_good();
int CWE127_Buffer_Underread__CWE839_fscanf_13_bad();
int goodB2G1_9();
int goodB2G2_9();
int goodG2B1_32();
int goodG2B2_32();
int CWE127_Buffer_Underread__CWE839_fscanf_13_good();
__int64 __fastcall badSource(unsigned int a1);
int CWE127_Buffer_Underread__CWE839_fgets_42_bad();
__int64 goodG2BSource();
int goodG2B_24();
__int64 __fastcall goodB2GSource(unsigned int a1);
int goodB2G_5();
int CWE127_Buffer_Underread__CWE839_fgets_42_good();
int CWE127_Buffer_Underread__char_alloca_cpy_32_bad();
int goodG2B_25();
int CWE127_Buffer_Underread__char_alloca_cpy_32_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_53c_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_53c_goodG2BSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_54e_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_54e_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_52b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_52b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_52b_goodB2GSink(int a1);
int CWE127_Buffer_Underread__char_alloca_memcpy_66_bad();
int goodG2B_26();
int CWE127_Buffer_Underread__char_alloca_memcpy_66_good();
__int64 CWE127_Buffer_Underread__char_alloca_memmove_65_bad();
__int64 goodG2B_27();
__int64 CWE127_Buffer_Underread__char_alloca_memmove_65_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_67_bad();
int goodG2B_28();
int CWE127_Buffer_Underread__char_alloca_ncpy_67_good();
int CWE127_Buffer_Underread__char_declare_loop_51_bad();
int goodG2B_29();
int CWE127_Buffer_Underread__char_declare_loop_51_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_67b_badSink(char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_67b_goodG2BSink(char *a1);
int CWE127_Buffer_Underread__char_declare_ncpy_03_bad();
int goodG2B1_33();
int goodG2B2_33();
int CWE127_Buffer_Underread__char_declare_ncpy_03_good();
int CWE127_Buffer_Underread__char_alloca_memmove_06_bad();
int goodG2B1_34();
int goodG2B2_34();
int CWE127_Buffer_Underread__char_alloca_memmove_06_good();
__int64 CWE127_Buffer_Underread__char_alloca_ncpy_65_bad();
__int64 goodG2B_30();
__int64 CWE127_Buffer_Underread__char_alloca_ncpy_65_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_52b_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_52b_goodG2BSink(const void *a1);
int CWE127_Buffer_Underread__char_alloca_loop_05_bad();
int goodG2B1_35();
int goodG2B2_35();
int CWE127_Buffer_Underread__char_alloca_loop_05_good();
int CWE127_Buffer_Underread__char_declare_ncpy_18_bad();
int goodG2B_31();
int CWE127_Buffer_Underread__char_declare_ncpy_18_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_41_badSink(__int64 a1);
int CWE127_Buffer_Underread__char_alloca_loop_41_bad();
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_41_goodG2BSink(__int64 a1);
int goodG2B_32();
int CWE127_Buffer_Underread__char_alloca_loop_41_good();
int CWE127_Buffer_Underread__char_declare_memmove_63_bad();
int goodG2B_33();
int CWE127_Buffer_Underread__char_declare_memmove_63_good();
int CWE127_Buffer_Underread__char_alloca_memmove_68b_badSink();
int CWE127_Buffer_Underread__char_alloca_memmove_68b_goodG2BSink();
int CWE127_Buffer_Underread__CWE839_fgets_05_bad();
int goodB2G1_10();
int goodB2G2_10();
int goodG2B1_36();
int goodG2B2_36();
int CWE127_Buffer_Underread__CWE839_fgets_05_good();
int CWE127_Buffer_Underread__char_alloca_cpy_04_bad();
int goodG2B1_37();
int goodG2B2_37();
int CWE127_Buffer_Underread__char_alloca_cpy_04_good();
int __fastcall badSink_2(int a1);
int CWE127_Buffer_Underread__CWE839_fgets_41_bad();
int __fastcall goodG2BSink_2(int a1);
int goodG2B_34();
int __fastcall goodB2GSink_0(int a1);
int goodB2G_6();
int CWE127_Buffer_Underread__CWE839_fgets_41_good();
int CWE127_Buffer_Underread__CWE839_fscanf_52_bad();
int goodG2B_35();
int goodB2G_7();
int CWE127_Buffer_Underread__CWE839_fscanf_52_good();
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_51b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_51b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_51b_goodB2GSink(int a1);
int CWE127_Buffer_Underread__char_alloca_cpy_13_bad();
int goodG2B1_38();
int goodG2B2_38();
int CWE127_Buffer_Underread__char_alloca_cpy_13_good();
int badSink_3();
int CWE127_Buffer_Underread__CWE839_fscanf_45_bad();
int goodG2BSink_3();
int goodG2B_36();
int goodB2GSink_1();
int goodB2G_8();
int CWE127_Buffer_Underread__CWE839_fscanf_45_good();
int CWE127_Buffer_Underread__CWE839_fscanf_16_bad();
int goodB2G_9();
int goodG2B_37();
int CWE127_Buffer_Underread__CWE839_fscanf_16_good();
int CWE127_Buffer_Underread__char_alloca_loop_34_bad();
int goodG2B_38();
int CWE127_Buffer_Underread__char_alloca_loop_34_good();
int CWE127_Buffer_Underread__char_declare_ncpy_12_bad();
int goodG2B_39();
int CWE127_Buffer_Underread__char_declare_ncpy_12_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_66b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_66b_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_66b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_66b_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_66b_goodB2GSink(__int64 a1);
int badSink_4();
int CWE127_Buffer_Underread__char_declare_ncpy_45_bad();
int goodG2BSink_4();
int goodG2B_40();
int CWE127_Buffer_Underread__char_declare_ncpy_45_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_53b_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_53b_goodG2BSink(const void *a1);
int CWE127_Buffer_Underread__char_declare_cpy_03_bad();
int goodG2B1_39();
int goodG2B2_39();
int CWE127_Buffer_Underread__char_declare_cpy_03_good();
int CWE127_Buffer_Underread__char_declare_memcpy_14_bad();
int goodG2B1_40();
int goodG2B2_40();
int CWE127_Buffer_Underread__char_declare_memcpy_14_good();
int CWE127_Buffer_Underread__char_declare_memmove_52_bad();
int goodG2B_41();
int CWE127_Buffer_Underread__char_declare_memmove_52_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_51b_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_51b_goodG2BSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_52c_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_52c_goodG2BSink(const void *a1);
__int64 CWE127_Buffer_Underread__char_declare_loop_65_bad();
__int64 goodG2B_42();
__int64 CWE127_Buffer_Underread__char_declare_loop_65_good();
int CWE127_Buffer_Underread__char_declare_memmove_16_bad();
int goodG2B_43();
int CWE127_Buffer_Underread__char_declare_memmove_16_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_54d_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_54d_goodG2BSink(const void *a1);
int CWE127_Buffer_Underread__char_declare_memmove_10_bad();
int goodG2B1_41();
int goodG2B2_41();
int CWE127_Buffer_Underread__char_declare_memmove_10_good();
int CWE127_Buffer_Underread__CWE839_fscanf_51_bad();
int goodG2B_44();
int goodB2G_10();
int CWE127_Buffer_Underread__CWE839_fscanf_51_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_54d_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_54d_goodG2BSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_67b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_67b_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_64b_badSink(char **a1);
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_64b_goodG2BSink(char **a1);
int CWE127_Buffer_Underread__char_declare_ncpy_11_bad();
int goodG2B1_42();
int goodG2B2_42();
int CWE127_Buffer_Underread__char_declare_ncpy_11_good();
int CWE127_Buffer_Underread__char_declare_ncpy_02_bad();
int goodG2B1_43();
int goodG2B2_43();
int CWE127_Buffer_Underread__char_declare_ncpy_02_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_54e_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_54e_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__char_alloca_loop_66_bad();
int goodG2B_45();
int CWE127_Buffer_Underread__char_alloca_loop_66_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_13_bad();
int goodG2B1_44();
int goodG2B2_44();
int CWE127_Buffer_Underread__char_alloca_ncpy_13_good();
int CWE127_Buffer_Underread__char_declare_cpy_12_bad();
int goodG2B_46();
int CWE127_Buffer_Underread__char_declare_cpy_12_good();
int CWE127_Buffer_Underread__char_alloca_memmove_53_bad();
int goodG2B_47();
int CWE127_Buffer_Underread__char_alloca_memmove_53_good();
int CWE127_Buffer_Underread__CWE839_fgets_66_bad();
int goodG2B_48();
int goodB2G_11();
int CWE127_Buffer_Underread__CWE839_fgets_66_good();
int CWE127_Buffer_Underread__char_declare_memmove_51_bad();
int goodG2B_49();
int CWE127_Buffer_Underread__char_declare_memmove_51_good();
int CWE127_Buffer_Underread__char_declare_memcpy_31_bad();
int goodG2B_50();
int CWE127_Buffer_Underread__char_declare_memcpy_31_good();
int CWE127_Buffer_Underread__CWE839_fscanf_06_bad();
int goodB2G1_11();
int goodB2G2_11();
int goodG2B1_45();
int goodG2B2_45();
int CWE127_Buffer_Underread__CWE839_fscanf_06_good();
int CWE127_Buffer_Underread__char_declare_ncpy_10_bad();
int goodG2B1_46();
int goodG2B2_46();
int CWE127_Buffer_Underread__char_declare_ncpy_10_good();
int CWE127_Buffer_Underread__CWE839_fscanf_01_bad();
int goodG2B_51();
int goodB2G_12();
int CWE127_Buffer_Underread__CWE839_fscanf_01_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_66_bad();
int goodG2B_52();
int goodB2G_13();
int CWE127_Buffer_Underread__CWE839_listen_socket_66_good();
int CWE127_Buffer_Underread__CWE839_fscanf_03_bad();
int goodB2G1_12();
int goodB2G2_12();
int goodG2B1_47();
int goodG2B2_47();
int CWE127_Buffer_Underread__CWE839_fscanf_03_good();
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_54c_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_54c_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_declare_memcpy_67_bad();
int goodG2B_53();
int CWE127_Buffer_Underread__char_declare_memcpy_67_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_54d_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_54d_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_declare_ncpy_01_bad();
int goodG2B_54();
int CWE127_Buffer_Underread__char_declare_ncpy_01_good();
int __fastcall CWE127_Buffer_Underread__char_declare_loop_64b_badSink(__int64 *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_loop_64b_goodG2BSink(__int64 *a1);
int CWE127_Buffer_Underread__CWE839_listen_socket_14_bad();
int goodB2G1_13();
int goodB2G2_13();
int goodG2B1_48();
int goodG2B2_48();
int CWE127_Buffer_Underread__CWE839_listen_socket_14_good();
int CWE127_Buffer_Underread__char_declare_cpy_11_bad();
int goodG2B1_49();
int goodG2B2_49();
int CWE127_Buffer_Underread__char_declare_cpy_11_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_03_bad();
int goodG2B1_50();
int goodG2B2_50();
int CWE127_Buffer_Underread__char_alloca_ncpy_03_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_32_bad();
int goodG2B_55();
int goodB2G_14();
int CWE127_Buffer_Underread__CWE839_listen_socket_32_good();
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_53d_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_53d_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_53d_goodB2GSink(int a1);
int CWE127_Buffer_Underread__char_alloca_ncpy_18_bad();
int goodG2B_56();
int CWE127_Buffer_Underread__char_alloca_ncpy_18_good();
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_64b_badSink(int *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_64b_goodG2BSink(int *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_64b_goodB2GSink(int *a1);
__int64 __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_61b_badSource(unsigned int a1);
__int64 CWE127_Buffer_Underread__CWE839_listen_socket_61b_goodG2BSource();
__int64 __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_61b_goodB2GSource(unsigned int a1);
int CWE127_Buffer_Underread__char_declare_memcpy_04_bad();
int goodG2B1_51();
int goodG2B2_51();
int CWE127_Buffer_Underread__char_declare_memcpy_04_good();
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_67b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_67b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_67b_goodB2GSink(int a1);
int CWE127_Buffer_Underread__char_declare_cpy_10_bad();
int goodG2B1_52();
int goodG2B2_52();
int CWE127_Buffer_Underread__char_declare_cpy_10_good();
int CWE127_Buffer_Underread__char_declare_loop_14_bad();
int goodG2B1_53();
int goodG2B2_53();
int CWE127_Buffer_Underread__char_declare_loop_14_good();
int CWE127_Buffer_Underread__char_alloca_loop_01_bad();
int goodG2B_57();
int CWE127_Buffer_Underread__char_alloca_loop_01_good();
int CWE127_Buffer_Underread__char_declare_loop_32_bad();
int goodG2B_58();
int CWE127_Buffer_Underread__char_declare_loop_32_good();
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_54c_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_54c_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_declare_cpy_18_bad();
int goodG2B_59();
int CWE127_Buffer_Underread__char_declare_cpy_18_good();
int CWE127_Buffer_Underread__char_declare_cpy_01_bad();
int goodG2B_60();
int CWE127_Buffer_Underread__char_declare_cpy_01_good();
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_53d_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_53d_goodG2BSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_64b_badSink(void **a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_64b_goodG2BSink(void **a1);
int CWE127_Buffer_Underread__CWE839_listen_socket_04_bad();
int goodB2G1_14();
int goodB2G2_14();
int goodG2B1_54();
int goodG2B2_54();
int CWE127_Buffer_Underread__CWE839_listen_socket_04_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_31_bad();
int goodG2B_61();
int goodB2G_15();
int CWE127_Buffer_Underread__CWE839_listen_socket_31_good();
int __fastcall CWE127_Buffer_Underread__char_declare_loop_67b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_loop_67b_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_63b_badSink(int *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_63b_goodG2BSink(int *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_63b_goodB2GSink(int *a1);
int CWE127_Buffer_Underread__char_alloca_cpy_03_bad();
int goodG2B1_55();
int goodG2B2_55();
int CWE127_Buffer_Underread__char_alloca_cpy_03_good();
int CWE127_Buffer_Underread__char_alloca_memmove_52_bad();
int goodG2B_62();
int CWE127_Buffer_Underread__char_alloca_memmove_52_good();
int CWE127_Buffer_Underread__char_declare_ncpy_09_bad();
int goodG2B1_56();
int goodG2B2_56();
int CWE127_Buffer_Underread__char_declare_ncpy_09_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_32_bad();
int goodG2B_63();
int CWE127_Buffer_Underread__char_alloca_memcpy_32_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_51b_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_51b_goodG2BSink(const void *a1);
int CWE127_Buffer_Underread__CWE839_fscanf_64_bad();
int goodG2B_64();
int goodB2G_16();
int CWE127_Buffer_Underread__CWE839_fscanf_64_good();
int CWE127_Buffer_Underread__char_alloca_memmove_16_bad();
int goodG2B_65();
int CWE127_Buffer_Underread__char_alloca_memmove_16_good();
int CWE127_Buffer_Underread__char_alloca_cpy_18_bad();
int goodG2B_66();
int CWE127_Buffer_Underread__char_alloca_cpy_18_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_67_bad();
int goodG2B_67();
int goodB2G_17();
int CWE127_Buffer_Underread__CWE839_listen_socket_67_good();
int __fastcall CWE127_Buffer_Underread__char_declare_loop_53b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_loop_53b_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_54d_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_54d_goodG2BSink(__int64 a1);
__int64 staticReturnsTrue_3();
__int64 staticReturnsFalse_3();
int CWE127_Buffer_Underread__CWE839_fgets_08_bad();
int goodB2G1_15();
int goodB2G2_15();
int goodG2B1_57();
int goodG2B2_57();
int CWE127_Buffer_Underread__CWE839_fgets_08_good();
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_54b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_54b_goodG2BSink(const char *a1);
__int64 staticReturnsTrue_4();
__int64 staticReturnsFalse_4();
int CWE127_Buffer_Underread__char_declare_memmove_08_bad();
int goodG2B1_58();
int goodG2B2_58();
int CWE127_Buffer_Underread__char_declare_memmove_08_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_67b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_67b_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__char_declare_loop_04_bad();
int goodG2B1_59();
int goodG2B2_59();
int CWE127_Buffer_Underread__char_declare_loop_04_good();
int CWE127_Buffer_Underread__char_declare_loop_31_bad();
int goodG2B_68();
int CWE127_Buffer_Underread__char_declare_loop_31_good();
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_22_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_22_goodB2G1Sink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_22_goodB2G2Sink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_22_goodG2BSink(int a1);
int CWE127_Buffer_Underread__char_alloca_ncpy_11_bad();
int goodG2B1_60();
int goodG2B2_60();
int CWE127_Buffer_Underread__char_alloca_ncpy_11_good();
__int64 staticReturnsTrue_5();
__int64 staticReturnsFalse_5();
int CWE127_Buffer_Underread__char_declare_cpy_08_bad();
int goodG2B1_61();
int goodG2B2_61();
int CWE127_Buffer_Underread__char_declare_cpy_08_good();
int CWE127_Buffer_Underread__char_declare_memcpy_13_bad();
int goodG2B1_62();
int goodG2B2_62();
int CWE127_Buffer_Underread__char_declare_memcpy_13_good();
int CWE127_Buffer_Underread__char_declare_loop_12_bad();
int goodG2B_69();
int CWE127_Buffer_Underread__char_declare_loop_12_good();
int CWE127_Buffer_Underread__char_declare_memmove_64_bad();
int goodG2B_70();
int CWE127_Buffer_Underread__char_declare_memmove_64_good();
int CWE127_Buffer_Underread__char_alloca_cpy_12_bad();
int goodG2B_71();
int CWE127_Buffer_Underread__char_alloca_cpy_12_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_63_bad();
int goodG2B_72();
int goodB2G_18();
int CWE127_Buffer_Underread__CWE839_connect_socket_63_good();
int CWE127_Buffer_Underread__char_declare_loop_67_bad();
int goodG2B_73();
int CWE127_Buffer_Underread__char_declare_loop_67_good();
int CWE127_Buffer_Underread__char_declare_ncpy_07_bad();
int goodG2B1_63();
int goodG2B2_63();
int CWE127_Buffer_Underread__char_declare_ncpy_07_good();
int CWE127_Buffer_Underread__CWE839_fscanf_32_bad();
int goodG2B_74();
int goodB2G_19();
int CWE127_Buffer_Underread__CWE839_fscanf_32_good();
int CWE127_Buffer_Underread__CWE839_fgets_16_bad();
int goodB2G_20();
int goodG2B_75();
int CWE127_Buffer_Underread__CWE839_fgets_16_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_64b_badSink(__int64 *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_64b_goodG2BSink(__int64 *a1);
int CWE127_Buffer_Underread__char_declare_ncpy_16_bad();
int goodG2B_76();
int CWE127_Buffer_Underread__char_declare_ncpy_16_good();
int CWE127_Buffer_Underread__CWE839_fgets_34_bad();
int goodG2B_77();
int goodB2G_21();
int CWE127_Buffer_Underread__CWE839_fgets_34_good();
int CWE127_Buffer_Underread__char_alloca_loop_67_bad();
int goodG2B_78();
int CWE127_Buffer_Underread__char_alloca_loop_67_good();
int CWE127_Buffer_Underread__char_declare_ncpy_54_bad();
int goodG2B_79();
int CWE127_Buffer_Underread__char_declare_ncpy_54_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_13_bad();
int goodB2G1_16();
int goodB2G2_16();
int goodG2B1_64();
int goodG2B2_64();
int CWE127_Buffer_Underread__CWE839_connect_socket_13_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_01_bad();
int goodG2B_80();
int CWE127_Buffer_Underread__char_alloca_memcpy_01_good();
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_67b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_67b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_67b_goodB2GSink(int a1);
int CWE127_Buffer_Underread__char_alloca_cpy_63_bad();
int goodG2B_81();
int CWE127_Buffer_Underread__char_alloca_cpy_63_good();
int CWE127_Buffer_Underread__char_declare_loop_64_bad();
int goodG2B_82();
int CWE127_Buffer_Underread__char_declare_loop_64_good();
int CWE127_Buffer_Underread__char_declare_ncpy_51_bad();
int goodG2B_83();
int CWE127_Buffer_Underread__char_declare_ncpy_51_good();
int CWE127_Buffer_Underread__char_declare_memmove_14_bad();
int goodG2B1_65();
int goodG2B2_65();
int CWE127_Buffer_Underread__char_declare_memmove_14_good();
int CWE127_Buffer_Underread__CWE839_fscanf_10_bad();
int goodB2G1_17();
int goodB2G2_17();
int goodG2B1_66();
int goodG2B2_66();
int CWE127_Buffer_Underread__CWE839_fscanf_10_good();
int CWE127_Buffer_Underread__char_declare_memmove_32_bad();
int goodG2B_84();
int CWE127_Buffer_Underread__char_declare_memmove_32_good();
int CWE127_Buffer_Underread__char_alloca_loop_51_bad();
int goodG2B_85();
int CWE127_Buffer_Underread__char_alloca_loop_51_good();
int CWE127_Buffer_Underread__char_alloca_memmove_51_bad();
int goodG2B_86();
int CWE127_Buffer_Underread__char_alloca_memmove_51_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_54c_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_54c_goodG2BSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_54e_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_54e_goodG2BSink(const void *a1);
int CWE127_Buffer_Underread__char_alloca_ncpy_17_bad();
int goodG2B_87();
int CWE127_Buffer_Underread__char_alloca_ncpy_17_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_64b_badSink(char **a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_64b_goodG2BSink(char **a1);
int CWE127_Buffer_Underread__CWE839_fgets_51_bad();
int goodG2B_88();
int goodB2G_22();
int CWE127_Buffer_Underread__CWE839_fgets_51_good();
int __fastcall badSink_5(const char *a1);
__int64 CWE127_Buffer_Underread__char_alloca_ncpy_44_bad();
int __fastcall goodG2BSink_5(const char *a1);
__int64 goodG2B_89();
__int64 CWE127_Buffer_Underread__char_alloca_ncpy_44_good();
int CWE127_Buffer_Underread__CWE839_fscanf_04_bad();
int goodB2G1_18();
int goodB2G2_18();
int goodG2B1_67();
int goodG2B2_67();
int CWE127_Buffer_Underread__CWE839_fscanf_04_good();
__int64 staticReturnsTrue_6();
__int64 staticReturnsFalse_6();
int CWE127_Buffer_Underread__char_alloca_ncpy_08_bad();
int goodG2B1_68();
int goodG2B2_68();
int CWE127_Buffer_Underread__char_alloca_ncpy_08_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_67b_badSink(void *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_67b_goodG2BSink(void *a1);
int CWE127_Buffer_Underread__char_alloca_memcpy_64_bad();
int goodG2B_90();
int CWE127_Buffer_Underread__char_alloca_memcpy_64_good();
int CWE127_Buffer_Underread__char_declare_cpy_07_bad();
int goodG2B1_69();
int goodG2B2_69();
int CWE127_Buffer_Underread__char_declare_cpy_07_good();
int CWE127_Buffer_Underread__char_alloca_loop_09_bad();
int goodG2B1_70();
int goodG2B2_70();
int CWE127_Buffer_Underread__char_alloca_loop_09_good();
int __fastcall badSink_6(int a1);
int CWE127_Buffer_Underread__CWE839_connect_socket_21_bad();
int __fastcall goodB2G1Sink_0(int a1);
int goodB2G1_19();
int __fastcall goodB2G2Sink_0(int a1);
int goodB2G2_19();
int __fastcall goodG2BSink_6(int a1);
int goodG2B_91();
int CWE127_Buffer_Underread__CWE839_connect_socket_21_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_03_bad();
int goodB2G1_20();
int goodB2G2_20();
int goodG2B1_71();
int goodG2B2_71();
int CWE127_Buffer_Underread__CWE839_connect_socket_03_good();
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_53c_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_53c_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_alloca_loop_06_bad();
int goodG2B1_72();
int goodG2B2_72();
int CWE127_Buffer_Underread__char_alloca_loop_06_good();
int CWE127_Buffer_Underread__CWE839_fscanf_67_bad();
int goodG2B_92();
int goodB2G_23();
int CWE127_Buffer_Underread__CWE839_fscanf_67_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_02_bad();
int goodG2B1_73();
int goodG2B2_73();
int CWE127_Buffer_Underread__char_alloca_ncpy_02_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_51_bad();
int goodG2B_93();
int goodB2G_24();
int CWE127_Buffer_Underread__CWE839_listen_socket_51_good();
int CWE127_Buffer_Underread__CWE839_fgets_06_bad();
int goodB2G1_21();
int goodB2G2_21();
int goodG2B1_74();
int goodG2B2_74();
int CWE127_Buffer_Underread__CWE839_fgets_06_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_18_bad();
int goodB2G_25();
int goodG2B_94();
int CWE127_Buffer_Underread__CWE839_connect_socket_18_good();
int CWE127_Buffer_Underread__char_declare_memmove_04_bad();
int goodG2B1_75();
int goodG2B2_75();
int CWE127_Buffer_Underread__char_declare_memmove_04_good();
int CWE127_Buffer_Underread__char_declare_memmove_31_bad();
int goodG2B_95();
int CWE127_Buffer_Underread__char_declare_memmove_31_good();
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_22_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_22_goodB2G1Sink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_22_goodB2G2Sink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_22_goodG2BSink(int a1);
int CWE127_Buffer_Underread__char_alloca_cpy_17_bad();
int goodG2B_96();
int CWE127_Buffer_Underread__char_alloca_cpy_17_good();
int __fastcall badSink_7(const char *a1);
__int64 CWE127_Buffer_Underread__char_alloca_cpy_44_bad();
int __fastcall goodG2BSink_7(const char *a1);
__int64 goodG2B_97();
__int64 CWE127_Buffer_Underread__char_alloca_cpy_44_good();
int CWE127_Buffer_Underread__char_declare_cpy_09_bad();
int goodG2B1_76();
int goodG2B2_76();
int CWE127_Buffer_Underread__char_declare_cpy_09_good();
int CWE127_Buffer_Underread__char_declare_memmove_67_bad();
int goodG2B_98();
int CWE127_Buffer_Underread__char_declare_memmove_67_good();
int CWE127_Buffer_Underread__char_declare_memcpy_63_bad();
int goodG2B_99();
int CWE127_Buffer_Underread__char_declare_memcpy_63_good();
int CWE127_Buffer_Underread__char_declare_cpy_64_bad();
int goodG2B_100();
int CWE127_Buffer_Underread__char_declare_cpy_64_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_13_bad();
int goodB2G1_22();
int goodB2G2_22();
int goodG2B1_77();
int goodG2B2_77();
int CWE127_Buffer_Underread__CWE839_listen_socket_13_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_64b_badSink(__int64 *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_64b_goodG2BSink(__int64 *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_64b_badSink(int *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_64b_goodG2BSink(int *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_64b_goodB2GSink(int *a1);
int CWE127_Buffer_Underread__CWE839_fscanf_22_bad();
int goodB2G1_23();
int goodB2G2_23();
int goodG2B_101();
int CWE127_Buffer_Underread__CWE839_fscanf_22_good();
int CWE127_Buffer_Underread__char_declare_cpy_51_bad();
int goodG2B_102();
int CWE127_Buffer_Underread__char_declare_cpy_51_good();
__int64 CWE127_Buffer_Underread__char_alloca_loop_65_bad();
__int64 goodG2B_103();
__int64 CWE127_Buffer_Underread__char_alloca_loop_65_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_07_bad();
int goodG2B1_78();
int goodG2B2_78();
int CWE127_Buffer_Underread__char_alloca_ncpy_07_good();
int CWE127_Buffer_Underread__char_declare_memmove_07_bad();
int goodG2B1_79();
int goodG2B2_79();
int CWE127_Buffer_Underread__char_declare_memmove_07_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_11_bad();
int goodB2G1_24();
int goodB2G2_24();
int goodG2B1_80();
int goodG2B2_80();
int CWE127_Buffer_Underread__CWE839_connect_socket_11_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_02_bad();
int goodB2G1_25();
int goodB2G2_25();
int goodG2B1_81();
int goodG2B2_81();
int CWE127_Buffer_Underread__CWE839_connect_socket_02_good();
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54d_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54d_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54d_goodB2GSink(int a1);
int CWE127_Buffer_Underread__char_alloca_loop_64_bad();
int goodG2B_104();
int CWE127_Buffer_Underread__char_alloca_loop_64_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_10_bad();
int goodB2G1_26();
int goodB2G2_26();
int goodG2B1_82();
int goodG2B2_82();
int CWE127_Buffer_Underread__CWE839_connect_socket_10_good();
int CWE127_Buffer_Underread__char_alloca_memmove_14_bad();
int goodG2B1_83();
int goodG2B2_83();
int CWE127_Buffer_Underread__char_alloca_memmove_14_good();
int CWE127_Buffer_Underread__char_declare_ncpy_15_bad();
int goodG2B1_84();
int goodG2B2_84();
int CWE127_Buffer_Underread__char_declare_ncpy_15_good();
int CWE127_Buffer_Underread__CWE839_fgets_64_bad();
int goodG2B_105();
int goodB2G_26();
int CWE127_Buffer_Underread__CWE839_fgets_64_good();
int CWE127_Buffer_Underread__char_declare_cpy_02_bad();
int goodG2B1_85();
int goodG2B2_85();
int CWE127_Buffer_Underread__char_declare_cpy_02_good();
int CWE127_Buffer_Underread__char_alloca_memmove_32_bad();
int goodG2B_106();
int CWE127_Buffer_Underread__char_alloca_memmove_32_good();
int __fastcall CWE127_Buffer_Underread__char_declare_loop_63b_badSink(__int64 *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_loop_63b_goodG2BSink(__int64 *a1);
int CWE127_Buffer_Underread__char_declare_memcpy_17_bad();
int goodG2B_107();
int CWE127_Buffer_Underread__char_declare_memcpy_17_good();
int __fastcall badSink_8(__int64 a1);
__int64 CWE127_Buffer_Underread__char_declare_memcpy_44_bad();
int __fastcall goodG2BSink_8(__int64 a1);
__int64 goodG2B_108();
__int64 CWE127_Buffer_Underread__char_declare_memcpy_44_good();
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54c_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54c_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54c_goodB2GSink(int a1);
int CWE127_Buffer_Underread__CWE839_connect_socket_01_bad();
int goodG2B_109();
int goodB2G_27();
int CWE127_Buffer_Underread__CWE839_connect_socket_01_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_63_bad();
int goodG2B_110();
int goodB2G_28();
int CWE127_Buffer_Underread__CWE839_listen_socket_63_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_67b_badSink(void *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_67b_goodG2BSink(void *a1);
int CWE127_Buffer_Underread__char_alloca_cpy_07_bad();
int goodG2B1_86();
int goodG2B2_86();
int CWE127_Buffer_Underread__char_alloca_cpy_07_good();
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_53d_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_53d_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_53d_goodB2GSink(int a1);
void CWE127_Buffer_Underread__CWE839_listen_socket_17_bad();
void goodB2G_29();
int goodG2B_111();
int CWE127_Buffer_Underread__CWE839_listen_socket_17_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_63b_badSink(__int64 *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_63b_goodG2BSink(__int64 *a1);
int CWE127_Buffer_Underread__char_declare_memmove_13_bad();
int goodG2B1_87();
int goodG2B2_87();
int CWE127_Buffer_Underread__char_declare_memmove_13_good();
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54c_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54c_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54c_goodB2GSink(int a1);
int badSink_9();
int CWE127_Buffer_Underread__char_declare_loop_45_bad();
int goodG2BSink_9();
int goodG2B_112();
int CWE127_Buffer_Underread__char_declare_loop_45_good();
int CWE127_Buffer_Underread__char_alloca_memmove_04_bad();
int goodG2B1_88();
int goodG2B2_88();
int CWE127_Buffer_Underread__char_alloca_memmove_04_good();
int __fastcall badSink_10(int a1);
int CWE127_Buffer_Underread__CWE839_fscanf_21_bad();
int __fastcall goodB2G1Sink_1(int a1);
int goodB2G1_27();
int __fastcall goodB2G2Sink_1(int a1);
int goodB2G2_27();
int __fastcall goodG2BSink_10(int a1);
int goodG2B_113();
int CWE127_Buffer_Underread__CWE839_fscanf_21_good();
int CWE127_Buffer_Underread__char_declare_loop_63_bad();
int goodG2B_114();
int CWE127_Buffer_Underread__char_declare_loop_63_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_54d_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_54d_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__CWE839_fgets_54_bad();
int goodG2B_115();
int goodB2G_30();
int CWE127_Buffer_Underread__CWE839_fgets_54_good();
int CWE127_Buffer_Underread__char_declare_ncpy_05_bad();
int goodG2B1_89();
int goodG2B2_89();
int CWE127_Buffer_Underread__char_declare_ncpy_05_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_09_bad();
int goodB2G1_28();
int goodB2G2_28();
int goodG2B1_90();
int goodG2B2_90();
int CWE127_Buffer_Underread__CWE839_connect_socket_09_good();
int CWE127_Buffer_Underread__CWE839_fscanf_18_bad();
int goodB2G_31();
int goodG2B_116();
int CWE127_Buffer_Underread__CWE839_fscanf_18_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_64_bad();
int goodG2B_117();
int CWE127_Buffer_Underread__char_alloca_ncpy_64_good();
int CWE127_Buffer_Underread__char_alloca_memmove_67_bad();
int goodG2B_118();
int CWE127_Buffer_Underread__char_alloca_memmove_67_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_63_bad();
int goodG2B_119();
int CWE127_Buffer_Underread__char_alloca_memcpy_63_good();
int CWE127_Buffer_Underread__char_declare_ncpy_34_bad();
int goodG2B_120();
int CWE127_Buffer_Underread__char_declare_ncpy_34_good();
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_66b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_66b_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__CWE839_fscanf_12_bad();
int goodB2G_32();
int goodG2B_121();
int CWE127_Buffer_Underread__CWE839_fscanf_12_good();
int __fastcall badSink_11(int a1);
__int64 CWE127_Buffer_Underread__CWE839_listen_socket_44_bad();
int __fastcall goodG2BSink_11(int a1);
int goodG2B_122();
int __fastcall goodB2GSink_2(int a1);
__int64 goodB2G_33();
__int64 CWE127_Buffer_Underread__CWE839_listen_socket_44_good();
int CWE127_Buffer_Underread__char_declare_memmove_18_bad();
int goodG2B_123();
int CWE127_Buffer_Underread__char_declare_memmove_18_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_09_bad();
int goodB2G1_29();
int goodB2G2_29();
int goodG2B1_91();
int goodG2B2_91();
int CWE127_Buffer_Underread__CWE839_listen_socket_09_good();
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_54d_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_54d_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_alloca_loop_13_bad();
int goodG2B1_92();
int goodG2B2_92();
int CWE127_Buffer_Underread__char_alloca_loop_13_good();
int CWE127_Buffer_Underread__char_declare_memcpy_07_bad();
int goodG2B1_93();
int goodG2B2_93();
int CWE127_Buffer_Underread__char_declare_memcpy_07_good();
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_53c_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_53c_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_53c_goodB2GSink(int a1);
int CWE127_Buffer_Underread__char_declare_cpy_05_bad();
int goodG2B1_94();
int goodG2B2_94();
int CWE127_Buffer_Underread__char_declare_cpy_05_good();
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_41_badSink(const char *a1);
int CWE127_Buffer_Underread__char_declare_cpy_41_bad();
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_41_goodG2BSink(const char *a1);
int goodG2B_124();
int CWE127_Buffer_Underread__char_declare_cpy_41_good();
int CWE127_Buffer_Underread__char_declare_loop_17_bad();
int goodG2B_125();
int CWE127_Buffer_Underread__char_declare_loop_17_good();
int CWE127_Buffer_Underread__char_declare_memmove_12_bad();
int goodG2B_126();
int CWE127_Buffer_Underread__char_declare_memmove_12_good();
int __fastcall badSink_12(__int64 a1);
__int64 CWE127_Buffer_Underread__char_declare_loop_44_bad();
int __fastcall goodG2BSink_12(__int64 a1);
__int64 goodG2B_127();
__int64 CWE127_Buffer_Underread__char_declare_loop_44_good();
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_53d_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_53d_goodG2BSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54c_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54c_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54c_goodB2GSink(int a1);
int CWE127_Buffer_Underread__char_declare_ncpy_66_bad();
int goodG2B_128();
int CWE127_Buffer_Underread__char_declare_ncpy_66_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_18_bad();
int goodG2B_129();
int CWE127_Buffer_Underread__char_alloca_memcpy_18_good();
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_63b_badSink(int *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_63b_goodG2BSink(int *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_63b_goodB2GSink(int *a1);
int __fastcall badSink_13(__int64 a1);
__int64 CWE127_Buffer_Underread__char_alloca_memcpy_44_bad();
int __fastcall goodG2BSink_13(__int64 a1);
__int64 goodG2B_130();
__int64 CWE127_Buffer_Underread__char_alloca_memcpy_44_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_54_bad();
int goodG2B_131();
int goodB2G_34();
int CWE127_Buffer_Underread__CWE839_connect_socket_54_good();
int CWE127_Buffer_Underread__char_declare_memmove_11_bad();
int goodG2B1_95();
int goodG2B2_95();
int CWE127_Buffer_Underread__char_declare_memmove_11_good();
int CWE127_Buffer_Underread__char_declare_memmove_02_bad();
int goodG2B1_96();
int goodG2B2_96();
int CWE127_Buffer_Underread__char_declare_memmove_02_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_61_bad();
int goodG2B_132();
int goodB2G_35();
int CWE127_Buffer_Underread__CWE839_listen_socket_61_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_63b_badSink(__int64 *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_63b_goodG2BSink(__int64 *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_65b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_65b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_65b_goodB2GSink(int a1);
int CWE127_Buffer_Underread__char_alloca_loop_63_bad();
int goodG2B_133();
int CWE127_Buffer_Underread__char_alloca_loop_63_good();
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_54e_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_54e_goodG2BSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_53b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_53b_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_declare_cpy_66_bad();
int goodG2B_134();
int CWE127_Buffer_Underread__char_declare_cpy_66_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_64_bad();
int goodG2B_135();
int goodB2G_36();
int CWE127_Buffer_Underread__CWE839_connect_socket_64_good();
int CWE127_Buffer_Underread__char_alloca_cpy_15_bad();
int goodG2B1_97();
int goodG2B2_97();
int CWE127_Buffer_Underread__char_alloca_cpy_15_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_05_bad();
int goodG2B1_98();
int goodG2B2_98();
int CWE127_Buffer_Underread__char_alloca_ncpy_05_good();
int CWE127_Buffer_Underread__char_alloca_loop_68_bad();
int goodG2B_136();
int CWE127_Buffer_Underread__char_alloca_loop_68_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_41_badSink(const char *a1);
int CWE127_Buffer_Underread__char_alloca_ncpy_41_bad();
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_41_goodG2BSink(const char *a1);
int goodG2B_137();
int CWE127_Buffer_Underread__char_alloca_ncpy_41_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_54c_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_54c_goodG2BSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_53c_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_53c_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_53c_goodB2GSink(int a1);
int badSink_14();
int CWE127_Buffer_Underread__CWE839_fgets_45_bad();
int goodG2BSink_14();
int goodG2B_138();
int goodB2GSink_3();
int goodB2G_37();
int CWE127_Buffer_Underread__CWE839_fgets_45_good();
int CWE127_Buffer_Underread__char_declare_memmove_01_bad();
int goodG2B_139();
int CWE127_Buffer_Underread__char_declare_memmove_01_good();
__int64 CWE127_Buffer_Underread__CWE839_fgets_65_bad();
int goodG2B_140();
__int64 goodB2G_38();
__int64 CWE127_Buffer_Underread__CWE839_fgets_65_good();
int CWE127_Buffer_Underread__char_declare_loop_07_bad();
int goodG2B1_99();
int goodG2B2_99();
int CWE127_Buffer_Underread__char_declare_loop_07_good();
int CWE127_Buffer_Underread__char_alloca_memmove_03_bad();
int goodG2B1_100();
int goodG2B2_100();
int CWE127_Buffer_Underread__char_alloca_memmove_03_good();
int CWE127_Buffer_Underread__CWE839_fscanf_09_bad();
int goodB2G1_30();
int goodB2G2_30();
int goodG2B1_101();
int goodG2B2_101();
int CWE127_Buffer_Underread__CWE839_fscanf_09_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_34_bad();
int goodG2B_141();
int CWE127_Buffer_Underread__char_alloca_ncpy_34_good();
int CWE127_Buffer_Underread__char_alloca_loop_54_bad();
int goodG2B_142();
int CWE127_Buffer_Underread__char_alloca_loop_54_good();
int CWE127_Buffer_Underread__char_declare_ncpy_53_bad();
int goodG2B_143();
int CWE127_Buffer_Underread__char_declare_ncpy_53_good();
int CWE127_Buffer_Underread__char_alloca_memmove_34_bad();
int goodG2B_144();
int CWE127_Buffer_Underread__char_alloca_memmove_34_good();
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_54e_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_54e_goodG2BSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_66b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_66b_goodG2BSink(__int64 a1);
__int64 CWE127_Buffer_Underread__CWE839_connect_socket_65_bad();
int goodG2B_145();
__int64 goodB2G_39();
__int64 CWE127_Buffer_Underread__CWE839_connect_socket_65_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_02_bad();
int goodB2G1_31();
int goodB2G2_31();
int goodG2B1_102();
int goodG2B2_102();
int CWE127_Buffer_Underread__CWE839_listen_socket_02_good();
int CWE127_Buffer_Underread__char_alloca_memmove_18_bad();
int goodG2B_146();
int CWE127_Buffer_Underread__char_alloca_memmove_18_good();
int CWE127_Buffer_Underread__char_declare_cpy_04_bad();
int goodG2B1_103();
int goodG2B2_103();
int CWE127_Buffer_Underread__char_declare_cpy_04_good();
int CWE127_Buffer_Underread__char_alloca_loop_03_bad();
int goodG2B1_104();
int goodG2B2_104();
int CWE127_Buffer_Underread__char_alloca_loop_03_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_07_bad();
int goodG2B1_105();
int goodG2B2_105();
int CWE127_Buffer_Underread__char_alloca_memcpy_07_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_17_bad();
int goodG2B_147();
int CWE127_Buffer_Underread__char_alloca_memcpy_17_good();
int CWE127_Buffer_Underread__char_alloca_cpy_05_bad();
int goodG2B1_106();
int goodG2B2_106();
int CWE127_Buffer_Underread__char_alloca_cpy_05_good();
int CWE127_Buffer_Underread__char_declare_memmove_09_bad();
int goodG2B1_107();
int goodG2B2_107();
int CWE127_Buffer_Underread__char_declare_memmove_09_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_41_badSink(const char *a1);
int CWE127_Buffer_Underread__char_alloca_cpy_41_bad();
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_41_goodG2BSink(const char *a1);
int goodG2B_148();
int CWE127_Buffer_Underread__char_alloca_cpy_41_good();
int CWE127_Buffer_Underread__char_alloca_loop_17_bad();
int goodG2B_149();
int CWE127_Buffer_Underread__char_alloca_loop_17_good();
int CWE127_Buffer_Underread__char_alloca_memmove_12_bad();
int goodG2B_150();
int CWE127_Buffer_Underread__char_alloca_memmove_12_good();
int __fastcall badSink_15(__int64 a1);
__int64 CWE127_Buffer_Underread__char_alloca_loop_44_bad();
int __fastcall goodG2BSink_15(__int64 a1);
__int64 goodG2B_151();
__int64 CWE127_Buffer_Underread__char_alloca_loop_44_good();
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54b_goodB2GSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54b_goodB2GSink(int a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_53c_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_53c_goodG2BSink(__int64 a1);
int __fastcall badSink_16(int a1);
__int64 CWE127_Buffer_Underread__CWE839_fgets_44_bad();
int __fastcall goodG2BSink_16(int a1);
int goodG2B_152();
int __fastcall goodB2GSink_4(int a1);
__int64 goodB2G_40();
__int64 CWE127_Buffer_Underread__CWE839_fgets_44_good();
int CWE127_Buffer_Underread__char_alloca_cpy_34_bad();
int goodG2B_153();
int CWE127_Buffer_Underread__char_alloca_cpy_34_good();
int CWE127_Buffer_Underread__char_declare_memcpy_15_bad();
int goodG2B1_108();
int goodG2B2_108();
int CWE127_Buffer_Underread__char_declare_memcpy_15_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_66b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_66b_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__CWE839_fscanf_31_bad();
int goodG2B_154();
int goodB2G_41();
int CWE127_Buffer_Underread__CWE839_fscanf_31_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_54b_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_54b_goodG2BSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_53b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_53b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_53b_goodB2GSink(int a1);
__int64 __fastcall CWE127_Buffer_Underread__CWE839_fgets_61b_badSource(unsigned int a1);
__int64 CWE127_Buffer_Underread__CWE839_fgets_61b_goodG2BSource();
__int64 __fastcall CWE127_Buffer_Underread__CWE839_fgets_61b_goodB2GSource(unsigned int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_52c_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_52c_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_52c_goodB2GSink(int a1);
int CWE127_Buffer_Underread__char_alloca_memmove_11_bad();
int goodG2B1_109();
int goodG2B2_109();
int CWE127_Buffer_Underread__char_alloca_memmove_11_good();
int CWE127_Buffer_Underread__char_alloca_memmove_02_bad();
int goodG2B1_110();
int goodG2B2_110();
int CWE127_Buffer_Underread__char_alloca_memmove_02_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_54b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_54b_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__CWE839_fscanf_54_bad();
int goodG2B_155();
int goodB2G_42();
int CWE127_Buffer_Underread__CWE839_fscanf_54_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_68_bad();
int goodG2B_156();
int goodB2G_43();
int CWE127_Buffer_Underread__CWE839_connect_socket_68_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_51b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_51b_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__char_declare_cpy_63_bad();
int goodG2B_157();
int CWE127_Buffer_Underread__char_declare_cpy_63_good();
int CWE127_Buffer_Underread__char_alloca_memmove_10_bad();
int goodG2B1_111();
int goodG2B2_111();
int CWE127_Buffer_Underread__char_alloca_memmove_10_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_54e_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_54e_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__CWE839_listen_socket_07_bad();
int goodB2G1_32();
int goodB2G2_32();
int goodG2B1_112();
int goodG2B2_112();
int CWE127_Buffer_Underread__CWE839_listen_socket_07_good();
int CWE127_Buffer_Underread__char_alloca_cpy_66_bad();
int goodG2B_158();
int CWE127_Buffer_Underread__char_alloca_cpy_66_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_15_bad();
int goodG2B1_113();
int goodG2B2_113();
int CWE127_Buffer_Underread__char_alloca_ncpy_15_good();
int CWE127_Buffer_Underread__char_declare_memcpy_05_bad();
int goodG2B1_114();
int goodG2B2_114();
int CWE127_Buffer_Underread__char_declare_memcpy_05_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_41_badSink(__int64 a1);
int CWE127_Buffer_Underread__char_declare_memcpy_41_bad();
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_41_goodG2BSink(__int64 a1);
int goodG2B_159();
int CWE127_Buffer_Underread__char_declare_memcpy_41_good();
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_41_badSink(const char *a1);
int CWE127_Buffer_Underread__char_declare_ncpy_41_bad();
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_41_goodG2BSink(const char *a1);
int goodG2B_160();
int CWE127_Buffer_Underread__char_declare_ncpy_41_good();
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_65b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_65b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_65b_goodB2GSink(int a1);
int CWE127_Buffer_Underread__char_declare_memmove_54_bad();
int goodG2B_161();
int CWE127_Buffer_Underread__char_declare_memmove_54_good();
int CWE127_Buffer_Underread__CWE839_fgets_61_bad();
int goodG2B_162();
int goodB2G_44();
int CWE127_Buffer_Underread__CWE839_fgets_61_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_01_bad();
int goodG2B_163();
int goodB2G_45();
int CWE127_Buffer_Underread__CWE839_listen_socket_01_good();
int CWE127_Buffer_Underread__char_alloca_memmove_01_bad();
int goodG2B_164();
int CWE127_Buffer_Underread__char_alloca_memmove_01_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_63b_badSink(void **a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_63b_goodG2BSink(void **a1);
int CWE127_Buffer_Underread__char_declare_ncpy_14_bad();
int goodG2B1_115();
int goodG2B2_115();
int CWE127_Buffer_Underread__char_declare_ncpy_14_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_53d_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_53d_goodG2BSink(const void *a1);
int CWE127_Buffer_Underread__char_declare_ncpy_32_bad();
int goodG2B_165();
int CWE127_Buffer_Underread__char_declare_ncpy_32_good();
int CWE127_Buffer_Underread__char_alloca_loop_07_bad();
int goodG2B1_116();
int goodG2B2_116();
int CWE127_Buffer_Underread__char_alloca_loop_07_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_53c_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_53c_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__CWE839_listen_socket_15_bad();
int goodB2G1_33();
int goodB2G2_33();
int goodG2B1_117();
int goodG2B2_117();
int CWE127_Buffer_Underread__CWE839_listen_socket_15_good();
int CWE127_Buffer_Underread__CWE839_fgets_07_bad();
int goodB2G1_34();
int goodB2G2_34();
int goodG2B1_118();
int goodG2B2_118();
int CWE127_Buffer_Underread__CWE839_fgets_07_good();
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_53c_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_53c_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_53c_goodB2GSink(int a1);
int CWE127_Buffer_Underread__CWE839_listen_socket_22_bad();
int goodB2G1_35();
int goodB2G2_35();
int goodG2B_166();
int CWE127_Buffer_Underread__CWE839_listen_socket_22_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_65b_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_65b_goodG2BSink(const void *a1);
__int64 __fastcall badSource_0(unsigned int a1);
int CWE127_Buffer_Underread__CWE839_listen_socket_42_bad();
__int64 goodG2BSource_0();
int goodG2B_167();
__int64 __fastcall goodB2GSource_0(unsigned int a1);
int goodB2G_46();
int CWE127_Buffer_Underread__CWE839_listen_socket_42_good();
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54e_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54e_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54e_goodB2GSink(int a1);
__int64 CWE127_Buffer_Underread__CWE839_fscanf_65_bad();
int goodG2B_168();
__int64 goodB2G_47();
__int64 CWE127_Buffer_Underread__CWE839_fscanf_65_good();
int CWE127_Buffer_Underread__char_declare_loop_15_bad();
int goodG2B1_119();
int goodG2B2_119();
int CWE127_Buffer_Underread__char_declare_loop_15_good();
__int64 staticReturnsTrue_7();
__int64 staticReturnsFalse_7();
int CWE127_Buffer_Underread__char_alloca_memmove_08_bad();
int goodG2B1_120();
int goodG2B2_120();
int CWE127_Buffer_Underread__char_alloca_memmove_08_good();
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_52b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_52b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_52b_goodB2GSink(int a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_53c_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_53c_goodG2BSink(const void *a1);
int CWE127_Buffer_Underread__char_declare_ncpy_04_bad();
int goodG2B1_121();
int goodG2B2_121();
int CWE127_Buffer_Underread__char_declare_ncpy_04_good();
int CWE127_Buffer_Underread__char_declare_ncpy_31_bad();
int goodG2B_169();
int CWE127_Buffer_Underread__char_declare_ncpy_31_good();
int CWE127_Buffer_Underread__char_declare_cpy_14_bad();
int goodG2B1_122();
int goodG2B2_122();
int CWE127_Buffer_Underread__char_declare_cpy_14_good();
int CWE127_Buffer_Underread__char_declare_cpy_32_bad();
int goodG2B_170();
int CWE127_Buffer_Underread__char_declare_cpy_32_good();
int CWE127_Buffer_Underread__char_alloca_cpy_31_bad();
int goodG2B_171();
int CWE127_Buffer_Underread__char_alloca_cpy_31_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_54e_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_54e_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__char_declare_memcpy_66_bad();
int goodG2B_172();
int CWE127_Buffer_Underread__char_declare_memcpy_66_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_15_bad();
int goodG2B1_123();
int goodG2B2_123();
int CWE127_Buffer_Underread__char_alloca_memcpy_15_good();
int CWE127_Buffer_Underread__char_declare_ncpy_52_bad();
int goodG2B_173();
int CWE127_Buffer_Underread__char_declare_ncpy_52_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_05_bad();
int goodB2G1_36();
int goodB2G2_36();
int goodG2B1_124();
int goodG2B2_124();
int CWE127_Buffer_Underread__CWE839_listen_socket_05_good();
__int64 CWE127_Buffer_Underread__char_declare_memmove_65_bad();
__int64 goodG2B_174();
__int64 CWE127_Buffer_Underread__char_declare_memmove_65_good();
int __fastcall badSink_17(int a1);
int CWE127_Buffer_Underread__CWE839_listen_socket_41_bad();
int __fastcall goodG2BSink_17(int a1);
int goodG2B_175();
int __fastcall goodB2GSink_5(int a1);
int goodB2G_48();
int CWE127_Buffer_Underread__CWE839_listen_socket_41_good();
int CWE127_Buffer_Underread__CWE839_fscanf_68b_badSink();
int CWE127_Buffer_Underread__CWE839_fscanf_68b_goodG2BSink();
int CWE127_Buffer_Underread__CWE839_fscanf_68b_goodB2GSink();
int CWE127_Buffer_Underread__char_declare_ncpy_67_bad();
int goodG2B_176();
int CWE127_Buffer_Underread__char_declare_ncpy_67_good();
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_67b_badSink(char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_67b_goodG2BSink(char *a1);
int CWE127_Buffer_Underread__char_declare_cpy_15_bad();
int goodG2B1_125();
int goodG2B2_125();
int CWE127_Buffer_Underread__char_declare_cpy_15_good();
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_63b_badSink(int *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_63b_goodG2BSink(int *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_63b_goodB2GSink(int *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_54b_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_54b_goodG2BSink(const void *a1);
int CWE127_Buffer_Underread__CWE839_listen_socket_34_bad();
int goodG2B_177();
int goodB2G_49();
int CWE127_Buffer_Underread__CWE839_listen_socket_34_good();
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_51b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_51b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_51b_goodB2GSink(int a1);
int CWE127_Buffer_Underread__char_declare_loop_05_bad();
int goodG2B1_126();
int goodG2B2_126();
int CWE127_Buffer_Underread__char_declare_loop_05_good();
int __fastcall CWE127_Buffer_Underread__char_declare_loop_41_badSink(__int64 a1);
int CWE127_Buffer_Underread__char_declare_loop_41_bad();
int __fastcall CWE127_Buffer_Underread__char_declare_loop_41_goodG2BSink(__int64 a1);
int goodG2B_178();
int CWE127_Buffer_Underread__char_declare_loop_41_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_16_bad();
int goodB2G_50();
int goodG2B_179();
int CWE127_Buffer_Underread__CWE839_connect_socket_16_good();
int CWE127_Buffer_Underread__char_declare_memmove_68b_badSink();
int CWE127_Buffer_Underread__char_declare_memmove_68b_goodG2BSink();
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_53b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_53b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_53b_goodB2GSink(int a1);
int CWE127_Buffer_Underread__char_declare_cpy_31_bad();
int goodG2B_180();
int CWE127_Buffer_Underread__char_declare_cpy_31_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_54c_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_54c_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__CWE839_fgets_13_bad();
int goodB2G1_37();
int goodB2G2_37();
int goodG2B1_127();
int goodG2B2_127();
int CWE127_Buffer_Underread__CWE839_fgets_13_good();
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_52c_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_52c_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_52c_goodB2GSink(int a1);
__int64 CWE127_Buffer_Underread__char_declare_memcpy_65_bad();
__int64 goodG2B_181();
__int64 CWE127_Buffer_Underread__char_declare_memcpy_65_good();
int __fastcall badSink_18(const void *a1);
__int64 CWE127_Buffer_Underread__char_declare_memmove_44_bad();
int __fastcall goodG2BSink_18(const void *a1);
__int64 goodG2B_182();
__int64 CWE127_Buffer_Underread__char_declare_memmove_44_good();
int CWE127_Buffer_Underread__char_declare_loop_34_bad();
int goodG2B_183();
int CWE127_Buffer_Underread__char_declare_loop_34_good();
int CWE127_Buffer_Underread__CWE839_fscanf_68_bad();
int goodG2B_184();
int goodB2G_51();
int CWE127_Buffer_Underread__CWE839_fscanf_68_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_05_bad();
int goodG2B1_128();
int goodG2B2_128();
int CWE127_Buffer_Underread__char_alloca_memcpy_05_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_41_badSink(__int64 a1);
int CWE127_Buffer_Underread__char_alloca_memcpy_41_bad();
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_41_goodG2BSink(__int64 a1);
int goodG2B_185();
int CWE127_Buffer_Underread__char_alloca_memcpy_41_good();
int CWE127_Buffer_Underread__char_declare_cpy_67_bad();
int goodG2B_186();
int CWE127_Buffer_Underread__char_declare_cpy_67_good();
int __fastcall CWE127_Buffer_Underread__char_declare_loop_66b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_loop_66b_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__char_alloca_memmove_54_bad();
int goodG2B_187();
int CWE127_Buffer_Underread__char_alloca_memmove_54_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_51_bad();
int goodG2B_188();
int goodB2G_52();
int CWE127_Buffer_Underread__CWE839_connect_socket_51_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_14_bad();
int goodG2B1_129();
int goodG2B2_129();
int CWE127_Buffer_Underread__char_alloca_ncpy_14_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_52c_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_52c_goodG2BSink(const void *a1);
int CWE127_Buffer_Underread__char_alloca_ncpy_32_bad();
int goodG2B_189();
int CWE127_Buffer_Underread__char_alloca_ncpy_32_good();
int CWE127_Buffer_Underread__CWE839_fscanf_53_bad();
int goodG2B_190();
int goodB2G_53();
int CWE127_Buffer_Underread__CWE839_fscanf_53_good();
int CWE127_Buffer_Underread__char_declare_memmove_68_bad();
int goodG2B_191();
int CWE127_Buffer_Underread__char_declare_memmove_68_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_66b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_66b_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_54d_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_54d_goodG2BSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_65b_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_65b_goodG2BSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_52b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_52b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_52b_goodB2GSink(int a1);
int badSink_19();
int CWE127_Buffer_Underread__CWE839_connect_socket_45_bad();
int goodG2BSink_19();
int goodG2B_192();
int goodB2GSink_6();
int goodB2G_54();
int CWE127_Buffer_Underread__CWE839_connect_socket_45_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_67b_badSink(char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_67b_goodG2BSink(char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_loop_54e_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_loop_54e_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__char_declare_ncpy_68b_badSink();
int CWE127_Buffer_Underread__char_declare_ncpy_68b_goodG2BSink();
int CWE127_Buffer_Underread__CWE839_listen_socket_18_bad();
int goodB2G_55();
int goodG2B_193();
int CWE127_Buffer_Underread__CWE839_listen_socket_18_good();
int CWE127_Buffer_Underread__char_alloca_memmove_31_bad();
int goodG2B_194();
int CWE127_Buffer_Underread__char_alloca_memmove_31_good();
int CWE127_Buffer_Underread__char_declare_memcpy_10_bad();
int goodG2B1_130();
int goodG2B2_130();
int CWE127_Buffer_Underread__char_declare_memcpy_10_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_61_bad();
int goodG2B_195();
int goodB2G_56();
int CWE127_Buffer_Underread__CWE839_connect_socket_61_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_53b_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_53b_goodG2BSink(const void *a1);
int CWE127_Buffer_Underread__char_declare_loop_03_bad();
int goodG2B1_131();
int goodG2B2_131();
int CWE127_Buffer_Underread__char_declare_loop_03_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_52_bad();
int goodG2B_196();
int goodB2G_57();
int CWE127_Buffer_Underread__CWE839_connect_socket_52_good();
__int64 CWE127_Buffer_Underread__char_declare_cpy_65_bad();
__int64 goodG2B_197();
__int64 CWE127_Buffer_Underread__char_declare_cpy_65_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_54c_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_54c_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_22_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_22_goodB2G1Sink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_22_goodB2G2Sink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_22_goodG2BSink(int a1);
int CWE127_Buffer_Underread__char_alloca_ncpy_54_bad();
int goodG2B_198();
int CWE127_Buffer_Underread__char_alloca_ncpy_54_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_12_bad();
int goodB2G_58();
int goodG2B_199();
int CWE127_Buffer_Underread__CWE839_listen_socket_12_good();
int CWE127_Buffer_Underread__char_declare_loop_18_bad();
int goodG2B_200();
int CWE127_Buffer_Underread__char_declare_loop_18_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_53d_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_53d_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__char_declare_memcpy_01_bad();
int goodG2B_201();
int CWE127_Buffer_Underread__char_declare_memcpy_01_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_07_bad();
int goodB2G1_38();
int goodB2G2_38();
int goodG2B1_132();
int goodG2B2_132();
int CWE127_Buffer_Underread__CWE839_connect_socket_07_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_53d_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_53d_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__CWE839_fgets_09_bad();
int goodB2G1_39();
int goodB2G2_39();
int goodG2B1_133();
int goodG2B2_133();
int CWE127_Buffer_Underread__CWE839_fgets_09_good();
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_52c_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_52c_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_alloca_memcpy_03_bad();
int goodG2B1_134();
int goodG2B2_134();
int CWE127_Buffer_Underread__char_alloca_memcpy_03_good();
int CWE127_Buffer_Underread__char_declare_loop_10_bad();
int goodG2B1_135();
int goodG2B2_135();
int CWE127_Buffer_Underread__char_declare_loop_10_good();
int CWE127_Buffer_Underread__char_declare_cpy_68b_badSink();
int CWE127_Buffer_Underread__char_declare_cpy_68b_goodG2BSink();
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_65b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_65b_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_declare_loop_01_bad();
int goodG2B_202();
int CWE127_Buffer_Underread__char_declare_loop_01_good();
int CWE127_Buffer_Underread__CWE839_fgets_22_bad();
int goodB2G1_40();
int goodB2G2_40();
int goodG2B_203();
int CWE127_Buffer_Underread__CWE839_fgets_22_good();
int CWE127_Buffer_Underread__char_alloca_cpy_54_bad();
int goodG2B_204();
int CWE127_Buffer_Underread__char_alloca_cpy_54_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_12_bad();
int goodG2B_205();
int CWE127_Buffer_Underread__char_alloca_memcpy_12_good();
int CWE127_Buffer_Underread__char_declare_memcpy_16_bad();
int goodG2B_206();
int CWE127_Buffer_Underread__char_declare_memcpy_16_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_53d_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_53d_goodG2BSink(const void *a1);
int CWE127_Buffer_Underread__CWE839_fscanf_17_bad();
int goodB2G_59();
int goodG2B_207();
int CWE127_Buffer_Underread__CWE839_fscanf_17_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_10_bad();
int goodB2G1_41();
int goodB2G2_41();
int goodG2B1_136();
int goodG2B2_136();
int CWE127_Buffer_Underread__CWE839_listen_socket_10_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_54b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_54b_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_alloca_memcpy_10_bad();
int goodG2B1_137();
int goodG2B2_137();
int CWE127_Buffer_Underread__char_alloca_memcpy_10_good();
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54d_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54d_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54d_goodB2GSink(int a1);
int __fastcall badSink_20(int a1);
__int64 CWE127_Buffer_Underread__CWE839_fscanf_44_bad();
int __fastcall goodG2BSink_20(int a1);
int goodG2B_208();
int __fastcall goodB2GSink_7(int a1);
__int64 goodB2G_60();
__int64 CWE127_Buffer_Underread__CWE839_fscanf_44_good();
int CWE127_Buffer_Underread__char_declare_loop_02_bad();
int goodG2B1_138();
int goodG2B2_138();
int CWE127_Buffer_Underread__char_declare_loop_02_good();
int CWE127_Buffer_Underread__char_declare_cpy_68_bad();
int goodG2B_209();
int CWE127_Buffer_Underread__char_declare_cpy_68_good();
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54c_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54c_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54c_goodB2GSink(int a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_65b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_65b_goodG2BSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_54e_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_54e_goodG2BSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_53d_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_53d_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_53d_goodB2GSink(int a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_54b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_54b_goodG2BSink(__int64 a1);
__int64 __fastcall CWE127_Buffer_Underread__CWE839_fscanf_61b_badSource(unsigned int a1);
__int64 CWE127_Buffer_Underread__CWE839_fscanf_61b_goodG2BSource();
__int64 __fastcall CWE127_Buffer_Underread__CWE839_fscanf_61b_goodB2GSource(unsigned int a1);
int CWE127_Buffer_Underread__CWE839_listen_socket_54_bad();
int goodG2B_210();
int goodB2G_61();
int CWE127_Buffer_Underread__CWE839_listen_socket_54_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_52b_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_52b_goodG2BSink(const void *a1);
int CWE127_Buffer_Underread__char_declare_memmove_17_bad();
int goodG2B_211();
int CWE127_Buffer_Underread__char_declare_memmove_17_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_02_bad();
int goodG2B1_139();
int goodG2B2_139();
int CWE127_Buffer_Underread__char_alloca_memcpy_02_good();
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_52b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_52b_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_declare_cpy_53_bad();
int goodG2B_212();
int CWE127_Buffer_Underread__char_declare_cpy_53_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_53c_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_53c_goodG2BSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_67b_badSink(char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_67b_goodG2BSink(char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_loop_54c_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_loop_54c_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_54d_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_54d_goodG2BSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_loop_53d_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_loop_53d_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_65b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_65b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_65b_goodB2GSink(int a1);
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_53b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_53b_goodG2BSink(const char *a1);
__int64 staticReturnsTrue_8();
__int64 staticReturnsFalse_8();
int CWE127_Buffer_Underread__CWE839_listen_socket_08_bad();
int goodB2G1_42();
int goodB2G2_42();
int goodG2B1_140();
int goodG2B2_140();
int CWE127_Buffer_Underread__CWE839_listen_socket_08_good();
__int64 CWE127_Buffer_Underread__char_alloca_cpy_65_bad();
__int64 goodG2B_213();
__int64 CWE127_Buffer_Underread__char_alloca_cpy_65_good();
int __fastcall badSink_21(int a1);
int CWE127_Buffer_Underread__CWE839_fgets_21_bad();
int __fastcall goodB2G1Sink_2(int a1);
int goodB2G1_43();
int __fastcall goodB2G2Sink_2(int a1);
int goodB2G2_43();
int __fastcall goodG2BSink_21(int a1);
int goodG2B_214();
int CWE127_Buffer_Underread__CWE839_fgets_21_good();
int CWE127_Buffer_Underread__CWE839_fgets_03_bad();
int goodB2G1_44();
int goodB2G2_44();
int goodG2B1_141();
int goodG2B2_141();
int CWE127_Buffer_Underread__CWE839_fgets_03_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_54c_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_54c_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__char_declare_cpy_34_bad();
int goodG2B_215();
int CWE127_Buffer_Underread__char_declare_cpy_34_good();
int CWE127_Buffer_Underread__char_alloca_loop_18_bad();
int goodG2B_216();
int CWE127_Buffer_Underread__char_alloca_loop_18_good();
int CWE127_Buffer_Underread__CWE839_fscanf_61_bad();
int goodG2B_217();
int goodB2G_62();
int CWE127_Buffer_Underread__CWE839_fscanf_61_good();
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_53c_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_53c_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_53c_goodB2GSink(int a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_64b_badSink(__int64 *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_64b_goodG2BSink(__int64 *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_53b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_53b_goodG2BSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_53d_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_53d_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__CWE839_fgets_18_bad();
int goodB2G_63();
int goodG2B_218();
int CWE127_Buffer_Underread__CWE839_fgets_18_good();
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_51b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_51b_goodG2BSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_52c_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_52c_goodG2BSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_52c_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_52c_goodG2BSink(const char *a1);
__int64 staticReturnsTrue_9();
__int64 staticReturnsFalse_9();
int CWE127_Buffer_Underread__char_declare_loop_08_bad();
int goodG2B1_142();
int goodG2B2_142();
int CWE127_Buffer_Underread__char_declare_loop_08_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_68_bad();
int goodG2B_219();
int CWE127_Buffer_Underread__char_alloca_ncpy_68_good();
int CWE127_Buffer_Underread__char_declare_memcpy_34_bad();
int goodG2B_220();
int CWE127_Buffer_Underread__char_declare_memcpy_34_good();
int CWE127_Buffer_Underread__CWE839_fscanf_07_bad();
int goodB2G1_45();
int goodB2G2_45();
int goodG2B1_143();
int goodG2B2_143();
int CWE127_Buffer_Underread__CWE839_fscanf_07_good();
int CWE127_Buffer_Underread__char_alloca_cpy_68b_badSink();
int CWE127_Buffer_Underread__char_alloca_cpy_68b_goodG2BSink();
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_65b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_65b_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__char_alloca_memmove_63_bad();
int goodG2B_221();
int CWE127_Buffer_Underread__char_alloca_memmove_63_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_66b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_66b_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__char_alloca_loop_12_bad();
int goodG2B_222();
int CWE127_Buffer_Underread__char_alloca_loop_12_good();
int CWE127_Buffer_Underread__char_alloca_memmove_13_bad();
int goodG2B1_144();
int goodG2B2_144();
int CWE127_Buffer_Underread__char_alloca_memmove_13_good();
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54b_goodB2GSink(int a1);
int CWE127_Buffer_Underread__CWE839_fgets_12_bad();
int goodB2G_64();
int goodG2B_223();
int CWE127_Buffer_Underread__CWE839_fgets_12_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_15_bad();
int goodB2G1_46();
int goodB2G2_46();
int goodG2B1_145();
int goodG2B2_145();
int CWE127_Buffer_Underread__CWE839_connect_socket_15_good();
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_66b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_66b_goodG2BSink(__int64 a1);
__int64 staticReturnsTrue_10();
__int64 staticReturnsFalse_10();
int CWE127_Buffer_Underread__char_alloca_memcpy_08_bad();
int goodG2B1_146();
int goodG2B2_146();
int CWE127_Buffer_Underread__char_alloca_memcpy_08_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_53_bad();
int goodG2B_224();
int CWE127_Buffer_Underread__char_alloca_ncpy_53_good();
__int64 __fastcall badSource_1(unsigned int a1);
int CWE127_Buffer_Underread__CWE839_connect_socket_42_bad();
__int64 goodG2BSource_1();
int goodG2B_225();
__int64 __fastcall goodB2GSource_1(unsigned int a1);
int goodB2G_65();
int CWE127_Buffer_Underread__CWE839_connect_socket_42_good();
int CWE127_Buffer_Underread__char_declare_memcpy_68b_badSink();
int CWE127_Buffer_Underread__char_declare_memcpy_68b_goodG2BSink();
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_52b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_52b_goodG2BSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_53b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_53b_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_alloca_loop_53_bad();
int goodG2B_226();
int CWE127_Buffer_Underread__char_alloca_loop_53_good();
int CWE127_Buffer_Underread__char_declare_cpy_52_bad();
int goodG2B_227();
int CWE127_Buffer_Underread__char_declare_cpy_52_good();
int __fastcall CWE127_Buffer_Underread__char_declare_loop_54b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_loop_54b_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_51b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_51b_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_alloca_ncpy_66_bad();
int goodG2B_228();
int CWE127_Buffer_Underread__char_alloca_ncpy_66_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_52c_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_52c_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_declare_cpy_16_bad();
int goodG2B_229();
int CWE127_Buffer_Underread__char_declare_cpy_16_good();
int CWE127_Buffer_Underread__char_alloca_loop_11_bad();
int goodG2B1_147();
int goodG2B2_147();
int CWE127_Buffer_Underread__char_alloca_loop_11_good();
int CWE127_Buffer_Underread__char_alloca_loop_02_bad();
int goodG2B1_148();
int goodG2B2_148();
int CWE127_Buffer_Underread__char_alloca_loop_02_good();
int CWE127_Buffer_Underread__char_alloca_cpy_68_bad();
int goodG2B_230();
int CWE127_Buffer_Underread__char_alloca_cpy_68_good();
int CWE127_Buffer_Underread__CWE839_fgets_02_bad();
int goodB2G1_47();
int goodB2G2_47();
int goodG2B1_149();
int goodG2B2_149();
int CWE127_Buffer_Underread__CWE839_fgets_02_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_16_bad();
int goodG2B_231();
int CWE127_Buffer_Underread__char_alloca_memcpy_16_good();
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_64b_badSink(int *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_64b_goodG2BSink(int *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_64b_goodB2GSink(int *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_54b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_54b_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__char_declare_ncpy_06_bad();
int goodG2B1_150();
int goodG2B2_150();
int CWE127_Buffer_Underread__char_declare_ncpy_06_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_54_bad();
int goodG2B_232();
int CWE127_Buffer_Underread__char_alloca_memcpy_54_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_05_bad();
int goodB2G1_48();
int goodB2G2_48();
int goodG2B1_151();
int goodG2B2_151();
int CWE127_Buffer_Underread__CWE839_connect_socket_05_good();
int CWE127_Buffer_Underread__char_alloca_loop_10_bad();
int goodG2B1_152();
int goodG2B2_152();
int CWE127_Buffer_Underread__char_alloca_loop_10_good();
int __fastcall badSink_22(int a1);
int CWE127_Buffer_Underread__CWE839_connect_socket_41_bad();
int __fastcall goodG2BSink_22(int a1);
int goodG2B_233();
int __fastcall goodB2GSink_8(int a1);
int goodB2G_66();
int CWE127_Buffer_Underread__CWE839_connect_socket_41_good();
int badSink_23();
int CWE127_Buffer_Underread__char_alloca_loop_45_bad();
int goodG2BSink_23();
int goodG2B_234();
int CWE127_Buffer_Underread__char_alloca_loop_45_good();
int __fastcall badSink_24(const void *a1);
__int64 CWE127_Buffer_Underread__char_alloca_memmove_44_bad();
int __fastcall goodG2BSink_24(const void *a1);
__int64 goodG2B_235();
__int64 CWE127_Buffer_Underread__char_alloca_memmove_44_good();
int CWE127_Buffer_Underread__CWE839_fgets_10_bad();
int goodB2G1_49();
int goodB2G2_49();
int goodG2B1_153();
int goodG2B2_153();
int CWE127_Buffer_Underread__CWE839_fgets_10_good();
int CWE127_Buffer_Underread__char_declare_memcpy_12_bad();
int goodG2B_236();
int CWE127_Buffer_Underread__char_declare_memcpy_12_good();
int CWE127_Buffer_Underread__char_alloca_cpy_53_bad();
int goodG2B_237();
int CWE127_Buffer_Underread__char_alloca_cpy_53_good();
int CWE127_Buffer_Underread__char_declare_loop_54_bad();
int goodG2B_238();
int CWE127_Buffer_Underread__char_declare_loop_54_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_34_bad();
int goodG2B_239();
int goodB2G_67();
int CWE127_Buffer_Underread__CWE839_connect_socket_34_good();
int CWE127_Buffer_Underread__char_declare_memcpy_09_bad();
int goodG2B1_154();
int goodG2B2_154();
int CWE127_Buffer_Underread__char_declare_memcpy_09_good();
int CWE127_Buffer_Underread__CWE839_fgets_01_bad();
int goodG2B_240();
int goodB2G_68();
int CWE127_Buffer_Underread__CWE839_fgets_01_good();
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_66b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_66b_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_66b_goodB2GSink(__int64 a1);
int CWE127_Buffer_Underread__CWE839_connect_socket_68b_badSink();
int CWE127_Buffer_Underread__CWE839_connect_socket_68b_goodG2BSink();
int CWE127_Buffer_Underread__CWE839_connect_socket_68b_goodB2GSink();
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_52b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_52b_goodG2BSink(__int64 a1);
int badSink_25();
int CWE127_Buffer_Underread__char_declare_cpy_45_bad();
int goodG2BSink_25();
int goodG2B_241();
int CWE127_Buffer_Underread__char_declare_cpy_45_good();
int __fastcall CWE127_Buffer_Underread__char_declare_loop_65b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_loop_65b_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_53b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_53b_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__char_declare_cpy_06_bad();
int goodG2B1_155();
int goodG2B2_155();
int CWE127_Buffer_Underread__char_declare_cpy_06_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_52_bad();
int goodG2B_242();
int CWE127_Buffer_Underread__char_alloca_ncpy_52_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_52c_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_52c_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__char_alloca_memcpy_09_bad();
int goodG2B1_156();
int goodG2B2_156();
int CWE127_Buffer_Underread__char_alloca_memcpy_09_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_51b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_51b_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_alloca_memmove_17_bad();
int goodG2B_243();
int CWE127_Buffer_Underread__char_alloca_memmove_17_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_52b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_52b_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__char_declare_memcpy_68_bad();
int goodG2B_244();
int CWE127_Buffer_Underread__char_declare_memcpy_68_good();
__int64 CWE127_Buffer_Underread__CWE839_listen_socket_65_bad();
int goodG2B_245();
__int64 goodB2G_69();
__int64 CWE127_Buffer_Underread__CWE839_listen_socket_65_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_16_bad();
int goodG2B_246();
int CWE127_Buffer_Underread__char_alloca_ncpy_16_good();
__int64 staticReturnsTrue_11();
__int64 staticReturnsFalse_11();
int CWE127_Buffer_Underread__char_alloca_loop_08_bad();
int goodG2B1_157();
int goodG2B2_157();
int CWE127_Buffer_Underread__char_alloca_loop_08_good();
int __fastcall CWE127_Buffer_Underread__char_declare_loop_53c_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_loop_53c_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_65b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_65b_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54e_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54e_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54e_goodB2GSink(int a1);
int CWE127_Buffer_Underread__CWE839_connect_socket_66_bad();
int goodG2B_247();
int goodB2G_70();
int CWE127_Buffer_Underread__CWE839_connect_socket_66_good();
int CWE127_Buffer_Underread__CWE839_fgets_67_bad();
int goodG2B_248();
int goodB2G_71();
int CWE127_Buffer_Underread__CWE839_fgets_67_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_63b_badSink(__int64 *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_63b_goodG2BSink(__int64 *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_52b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_52b_goodG2BSink(const char *a1);
int CWE127_Buffer_Underread__CWE839_connect_socket_12_bad();
int goodB2G_72();
int goodG2B_249();
int CWE127_Buffer_Underread__CWE839_connect_socket_12_good();
int CWE127_Buffer_Underread__char_declare_ncpy_64_bad();
int goodG2B_250();
int CWE127_Buffer_Underread__char_declare_ncpy_64_good();
int CWE127_Buffer_Underread__char_declare_memcpy_53_bad();
int goodG2B_251();
int CWE127_Buffer_Underread__char_declare_memcpy_53_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_53c_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_53c_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__CWE839_listen_socket_68b_badSink();
int CWE127_Buffer_Underread__CWE839_listen_socket_68b_goodG2BSink();
int CWE127_Buffer_Underread__CWE839_listen_socket_68b_goodB2GSink();
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_64b_badSink(char **a1);
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_64b_goodG2BSink(char **a1);
int CWE127_Buffer_Underread__char_alloca_ncpy_51_bad();
int goodG2B_252();
int CWE127_Buffer_Underread__char_alloca_ncpy_51_good();
int CWE127_Buffer_Underread__CWE839_fscanf_15_bad();
int goodB2G1_50();
int goodB2G2_50();
int goodG2B1_158();
int goodG2B2_158();
int CWE127_Buffer_Underread__CWE839_fscanf_15_good();
int CWE127_Buffer_Underread__char_alloca_cpy_52_bad();
int goodG2B_253();
int CWE127_Buffer_Underread__char_alloca_cpy_52_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_54b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_54b_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_51b_badSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_51b_goodG2BSink(const char *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54b_goodB2GSink(int a1);
__int64 __fastcall badSource_2(unsigned int a1);
int CWE127_Buffer_Underread__CWE839_fscanf_42_bad();
__int64 goodG2BSource_2();
int goodG2B_254();
__int64 __fastcall goodB2GSource_2(unsigned int a1);
int goodB2G_73();
int CWE127_Buffer_Underread__CWE839_fscanf_42_good();
int CWE127_Buffer_Underread__char_alloca_cpy_16_bad();
int goodG2B_255();
int CWE127_Buffer_Underread__char_alloca_cpy_16_good();
__int64 CWE127_Buffer_Underread__char_alloca_memcpy_65_bad();
__int64 goodG2B_256();
__int64 CWE127_Buffer_Underread__char_alloca_memcpy_65_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_11_bad();
int goodB2G1_51();
int goodB2G2_51();
int goodG2B1_159();
int goodG2B2_159();
int CWE127_Buffer_Underread__CWE839_listen_socket_11_good();
int CWE127_Buffer_Underread__char_declare_loop_68b_badSink();
int CWE127_Buffer_Underread__char_declare_loop_68b_goodG2BSink();
int badSink_26();
int CWE127_Buffer_Underread__char_alloca_ncpy_45_bad();
int goodG2BSink_26();
int goodG2B_257();
int CWE127_Buffer_Underread__char_alloca_ncpy_45_good();
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_53b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_53b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_53b_goodB2GSink(int a1);
int CWE127_Buffer_Underread__char_declare_memmove_15_bad();
int goodG2B1_160();
int goodG2B2_160();
int CWE127_Buffer_Underread__char_declare_memmove_15_good();
int CWE127_Buffer_Underread__char_declare_memcpy_54_bad();
int goodG2B_258();
int CWE127_Buffer_Underread__char_declare_memcpy_54_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_06_bad();
int goodG2B1_161();
int goodG2B2_161();
int CWE127_Buffer_Underread__char_alloca_ncpy_06_good();
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54e_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54e_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54e_goodB2GSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_52c_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_52c_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_52c_goodB2GSink(int a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_52b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_52b_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__CWE839_listen_socket_68_bad();
int goodG2B_259();
int goodB2G_74();
int CWE127_Buffer_Underread__CWE839_listen_socket_68_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_68b_badSink();
int CWE127_Buffer_Underread__char_alloca_memcpy_68b_goodG2BSink();
int CWE127_Buffer_Underread__char_alloca_cpy_51_bad();
int goodG2B_260();
int CWE127_Buffer_Underread__char_alloca_cpy_51_good();
int CWE127_Buffer_Underread__char_alloca_memmove_09_bad();
int goodG2B1_162();
int goodG2B2_162();
int CWE127_Buffer_Underread__char_alloca_memmove_09_good();
int CWE127_Buffer_Underread__CWE839_fscanf_05_bad();
int goodB2G1_52();
int goodB2G2_52();
int goodG2B1_163();
int goodG2B2_163();
int CWE127_Buffer_Underread__CWE839_fscanf_05_good();
int __fastcall badSink_27(int a1);
int CWE127_Buffer_Underread__CWE839_fscanf_41_bad();
int __fastcall goodG2BSink_27(int a1);
int goodG2B_261();
int __fastcall goodB2GSink_9(int a1);
int goodB2G_75();
int CWE127_Buffer_Underread__CWE839_fscanf_41_good();
int CWE127_Buffer_Underread__char_alloca_memmove_64_bad();
int goodG2B_262();
int CWE127_Buffer_Underread__char_alloca_memmove_64_good();
int __fastcall CWE127_Buffer_Underread__char_declare_loop_52c_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_loop_52c_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__CWE839_fgets_63_bad();
int goodG2B_263();
int goodB2G_76();
int CWE127_Buffer_Underread__CWE839_fgets_63_good();
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_66b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_66b_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_66b_goodB2GSink(__int64 a1);
int CWE127_Buffer_Underread__char_declare_loop_68_bad();
int goodG2B_264();
int CWE127_Buffer_Underread__char_declare_loop_68_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_53_bad();
int goodG2B_265();
int goodB2G_77();
int CWE127_Buffer_Underread__CWE839_listen_socket_53_good();
int badSink_28();
int CWE127_Buffer_Underread__char_alloca_cpy_45_bad();
int goodG2BSink_28();
int goodG2B_266();
int CWE127_Buffer_Underread__char_alloca_cpy_45_good();
int CWE127_Buffer_Underread__CWE839_fscanf_34_bad();
int goodG2B_267();
int goodB2G_78();
int CWE127_Buffer_Underread__CWE839_fscanf_34_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_65b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_65b_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_53b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_53b_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__char_declare_memcpy_52_bad();
int goodG2B_268();
int CWE127_Buffer_Underread__char_declare_memcpy_52_good();
int CWE127_Buffer_Underread__char_alloca_cpy_06_bad();
int goodG2B1_164();
int goodG2B2_164();
int CWE127_Buffer_Underread__char_alloca_cpy_06_good();
int CWE127_Buffer_Underread__char_declare_memmove_05_bad();
int goodG2B1_165();
int goodG2B2_165();
int CWE127_Buffer_Underread__char_declare_memmove_05_good();
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_66b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_66b_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_66b_goodB2GSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_65b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_65b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_65b_goodB2GSink(int a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_41_badSink(const void *a1);
int CWE127_Buffer_Underread__char_declare_memmove_41_bad();
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_41_goodG2BSink(const void *a1);
int goodG2B_269();
int CWE127_Buffer_Underread__char_declare_memmove_41_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_67_bad();
int goodG2B_270();
int goodB2G_79();
int CWE127_Buffer_Underread__CWE839_connect_socket_67_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_68_bad();
int goodG2B_271();
int CWE127_Buffer_Underread__char_alloca_memcpy_68_good();
int CWE127_Buffer_Underread__char_declare_loop_53_bad();
int goodG2B_272();
int CWE127_Buffer_Underread__char_declare_loop_53_good();
int CWE127_Buffer_Underread__char_declare_memmove_34_bad();
int goodG2B_273();
int CWE127_Buffer_Underread__char_declare_memmove_34_good();
int CWE127_Buffer_Underread__char_alloca_memmove_68_bad();
int goodG2B_274();
int CWE127_Buffer_Underread__char_alloca_memmove_68_good();
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_66b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_66b_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_52b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_52b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_52b_goodB2GSink(int a1);
int CWE127_Buffer_Underread__CWE839_fscanf_02_bad();
int goodB2G1_53();
int goodB2G2_53();
int goodG2B1_166();
int goodG2B2_166();
int CWE127_Buffer_Underread__CWE839_fscanf_02_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_53_bad();
int goodG2B_275();
int CWE127_Buffer_Underread__char_alloca_memcpy_53_good();
int CWE127_Buffer_Underread__char_declare_memcpy_51_bad();
int goodG2B_276();
int CWE127_Buffer_Underread__char_declare_memcpy_51_good();
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54e_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54e_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54e_goodB2GSink(int a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_64b_badSink(char **a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_64b_goodG2BSink(char **a1);
int CWE127_Buffer_Underread__CWE839_fscanf_66_bad();
int goodG2B_277();
int goodB2G_80();
int CWE127_Buffer_Underread__CWE839_fscanf_66_good();
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_63b_badSink(char **a1);
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_63b_goodG2BSink(char **a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_52c_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_52c_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_loop_52b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_loop_52b_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__char_alloca_memmove_07_bad();
int goodG2B1_167();
int goodG2B2_167();
int CWE127_Buffer_Underread__char_alloca_memmove_07_good();
int badSink_29();
int CWE127_Buffer_Underread__char_declare_memcpy_45_bad();
int goodG2BSink_29();
int goodG2B_278();
int CWE127_Buffer_Underread__char_declare_memcpy_45_good();
int CWE127_Buffer_Underread__char_alloca_loop_68b_badSink();
int CWE127_Buffer_Underread__char_alloca_loop_68b_goodG2BSink();
int CWE127_Buffer_Underread__char_declare_memmove_66_bad();
int goodG2B_279();
int CWE127_Buffer_Underread__char_declare_memmove_66_good();
int CWE127_Buffer_Underread__char_declare_memcpy_06_bad();
int goodG2B1_168();
int goodG2B2_168();
int CWE127_Buffer_Underread__char_declare_memcpy_06_good();
int CWE127_Buffer_Underread__CWE839_fgets_68b_badSink();
int CWE127_Buffer_Underread__CWE839_fgets_68b_goodG2BSink();
int CWE127_Buffer_Underread__CWE839_fgets_68b_goodB2GSink();
int CWE127_Buffer_Underread__char_alloca_memmove_15_bad();
int goodG2B1_169();
int goodG2B2_169();
int CWE127_Buffer_Underread__char_alloca_memmove_15_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_34_bad();
int goodG2B_280();
int CWE127_Buffer_Underread__char_alloca_memcpy_34_good();
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_51b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_51b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_51b_goodB2GSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54d_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54d_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54d_goodB2GSink(int a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_52b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_52b_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__CWE839_listen_socket_16_bad();
int goodB2G_81();
int goodG2B_281();
int CWE127_Buffer_Underread__CWE839_listen_socket_16_good();
int CWE127_Buffer_Underread__char_declare_ncpy_63_bad();
int goodG2B_282();
int CWE127_Buffer_Underread__char_declare_ncpy_63_good();
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_63b_badSink(char **a1);
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_63b_goodG2BSink(char **a1);
int CWE127_Buffer_Underread__CWE839_connect_socket_14_bad();
int goodB2G1_54();
int goodB2G2_54();
int goodG2B1_170();
int goodG2B2_170();
int CWE127_Buffer_Underread__CWE839_connect_socket_14_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_32_bad();
int goodG2B_283();
int goodB2G_82();
int CWE127_Buffer_Underread__CWE839_connect_socket_32_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_53b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_53b_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__char_declare_loop_52_bad();
int goodG2B_284();
int CWE127_Buffer_Underread__char_declare_loop_52_good();
int __fastcall CWE127_Buffer_Underread__char_declare_loop_51b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_declare_loop_51b_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_53b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_53b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_53b_goodB2GSink(int a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_52c_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_52c_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__char_declare_memmove_06_bad();
int goodG2B1_171();
int goodG2B2_171();
int CWE127_Buffer_Underread__char_declare_memmove_06_good();
int CWE127_Buffer_Underread__CWE839_fscanf_11_bad();
int goodB2G1_55();
int goodB2G2_55();
int goodG2B1_172();
int goodG2B2_172();
int CWE127_Buffer_Underread__CWE839_fscanf_11_good();
int CWE127_Buffer_Underread__char_declare_loop_16_bad();
int goodG2B_285();
int CWE127_Buffer_Underread__char_declare_loop_16_good();
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_52c_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_52c_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_52c_goodB2GSink(int a1);
int CWE127_Buffer_Underread__CWE839_connect_socket_22_bad();
int goodB2G1_56();
int goodB2G2_56();
int goodG2B_286();
int CWE127_Buffer_Underread__CWE839_connect_socket_22_good();
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_67b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_67b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_67b_goodB2GSink(int a1);
int CWE127_Buffer_Underread__char_alloca_memcpy_14_bad();
int goodG2B1_173();
int goodG2B2_173();
int CWE127_Buffer_Underread__char_alloca_memcpy_14_good();
int badSink_30();
int CWE127_Buffer_Underread__char_declare_memmove_45_bad();
int goodG2BSink_30();
int goodG2B_287();
int CWE127_Buffer_Underread__char_declare_memmove_45_good();
int CWE127_Buffer_Underread__CWE839_fgets_68_bad();
int goodG2B_288();
int goodB2G_83();
int CWE127_Buffer_Underread__CWE839_fgets_68_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_52_bad();
int goodG2B_289();
int CWE127_Buffer_Underread__char_alloca_memcpy_52_good();
int CWE127_Buffer_Underread__char_alloca_memmove_05_bad();
int goodG2B1_174();
int goodG2B2_174();
int CWE127_Buffer_Underread__char_alloca_memmove_05_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_51b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_51b_goodG2BSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_41_badSink(const void *a1);
int CWE127_Buffer_Underread__char_alloca_memmove_41_bad();
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_41_goodG2BSink(const void *a1);
int goodG2B_290();
int CWE127_Buffer_Underread__char_alloca_memmove_41_good();
int CWE127_Buffer_Underread__char_declare_cpy_13_bad();
int goodG2B1_175();
int goodG2B2_175();
int CWE127_Buffer_Underread__char_declare_cpy_13_good();
__int64 staticReturnsTrue_12();
__int64 staticReturnsFalse_12();
int CWE127_Buffer_Underread__char_declare_memcpy_08_bad();
int goodG2B1_176();
int goodG2B2_176();
int CWE127_Buffer_Underread__char_declare_memcpy_08_good();
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_53d_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_53d_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_53d_goodB2GSink(int a1);
int CWE127_Buffer_Underread__CWE839_connect_socket_31_bad();
int goodG2B_291();
int goodB2G_84();
int CWE127_Buffer_Underread__CWE839_connect_socket_31_good();
int badSink_31();
int CWE127_Buffer_Underread__CWE839_listen_socket_45_bad();
int goodG2BSink_31();
int goodG2B_292();
int goodB2GSink_10();
int goodB2G_85();
int CWE127_Buffer_Underread__CWE839_listen_socket_45_good();
int CWE127_Buffer_Underread__CWE839_fgets_53_bad();
int goodG2B_293();
int goodB2G_86();
int CWE127_Buffer_Underread__CWE839_fgets_53_good();
int CWE127_Buffer_Underread__char_declare_ncpy_17_bad();
int goodG2B_294();
int CWE127_Buffer_Underread__char_declare_ncpy_17_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_06_bad();
int goodB2G1_57();
int goodB2G2_57();
int goodG2B1_177();
int goodG2B2_177();
int CWE127_Buffer_Underread__CWE839_listen_socket_06_good();
int __fastcall badSink_32(const char *a1);
__int64 CWE127_Buffer_Underread__char_declare_ncpy_44_bad();
int __fastcall goodG2BSink_32(const char *a1);
__int64 goodG2B_295();
__int64 CWE127_Buffer_Underread__char_declare_ncpy_44_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_66b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_66b_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__char_declare_memcpy_64_bad();
int goodG2B_296();
int CWE127_Buffer_Underread__char_declare_memcpy_64_good();
int CWE127_Buffer_Underread__char_alloca_memcpy_51_bad();
int goodG2B_297();
int CWE127_Buffer_Underread__char_alloca_memcpy_51_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_63b_badSink(char **a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_63b_goodG2BSink(char **a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_22_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_22_goodB2G1Sink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_22_goodB2G2Sink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_22_goodG2BSink(int a1);
int CWE127_Buffer_Underread__char_declare_loop_06_bad();
int goodG2B1_178();
int goodG2B2_178();
int CWE127_Buffer_Underread__char_declare_loop_06_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_68b_badSink();
int CWE127_Buffer_Underread__char_alloca_ncpy_68b_goodG2BSink();
int badSink_33();
int CWE127_Buffer_Underread__char_alloca_memcpy_45_bad();
int goodG2BSink_33();
int goodG2B_298();
int CWE127_Buffer_Underread__char_alloca_memcpy_45_good();
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_64b_badSink(int *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_64b_goodG2BSink(int *a1);
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_64b_goodB2GSink(int *a1);
int CWE127_Buffer_Underread__char_declare_cpy_17_bad();
int goodG2B_299();
int CWE127_Buffer_Underread__char_declare_cpy_17_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_54e_badSink(const void *a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_54e_goodG2BSink(const void *a1);
int CWE127_Buffer_Underread__char_alloca_memcpy_06_bad();
int goodG2B1_179();
int goodG2B2_179();
int CWE127_Buffer_Underread__char_alloca_memcpy_06_good();
int __fastcall badSink_34(const char *a1);
__int64 CWE127_Buffer_Underread__char_declare_cpy_44_bad();
int __fastcall goodG2BSink_34(const char *a1);
__int64 goodG2B_300();
__int64 CWE127_Buffer_Underread__char_declare_cpy_44_good();
int CWE127_Buffer_Underread__CWE839_connect_socket_53_bad();
int goodG2B_301();
int goodB2G_87();
int CWE127_Buffer_Underread__CWE839_connect_socket_53_good();
int CWE127_Buffer_Underread__char_alloca_ncpy_63_bad();
int goodG2B_302();
int CWE127_Buffer_Underread__char_alloca_ncpy_63_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_52_bad();
int goodG2B_303();
int goodB2G_88();
int CWE127_Buffer_Underread__CWE839_listen_socket_52_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_63b_badSink(char **a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_63b_goodG2BSink(char **a1);
int CWE127_Buffer_Underread__char_alloca_ncpy_12_bad();
int goodG2B_304();
int CWE127_Buffer_Underread__char_alloca_ncpy_12_good();
int CWE127_Buffer_Underread__char_alloca_loop_52_bad();
int goodG2B_305();
int CWE127_Buffer_Underread__char_alloca_loop_52_good();
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_51b_badSink(__int64 a1);
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_51b_goodG2BSink(__int64 a1);
int CWE127_Buffer_Underread__CWE839_fgets_52_bad();
int goodG2B_306();
int goodB2G_89();
int CWE127_Buffer_Underread__CWE839_fgets_52_good();
int CWE127_Buffer_Underread__CWE839_listen_socket_64_bad();
int goodG2B_307();
int goodB2G_90();
int CWE127_Buffer_Underread__CWE839_listen_socket_64_good();
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_51b_badSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_51b_goodG2BSink(int a1);
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_51b_goodB2GSink(int a1);
int CWE127_Buffer_Underread__char_alloca_loop_16_bad();
int goodG2B_308();
int CWE127_Buffer_Underread__char_alloca_loop_16_good();
int CWE127_Buffer_Underread__CWE839_fscanf_14_bad();
int goodB2G1_58();
int goodB2G2_58();
int goodG2B1_180();
int goodG2B2_180();
int CWE127_Buffer_Underread__CWE839_fscanf_14_good();
int __fastcall printLine(const char *a1);
int __fastcall printWLine(__int64 a1);
int __fastcall printIntLine(unsigned int a1);
int __fastcall printShortLine(__int16 a1);
int __fastcall printFloatLine(float a1);
int __fastcall printLongLine(__int64 a1);
int __fastcall printLongLongLine(__int64 a1);
int __fastcall printSizeTLine(__int64 a1);
int __fastcall printHexCharLine(char a1);
int __fastcall printWcharLine(int a1);
int __fastcall printUnsignedLine(unsigned int a1);
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1);
int __fastcall printDoubleLine(double a1);
int __fastcall printStructLine(unsigned int *a1);
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2);
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3);
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3);
__int64 globalReturnsTrue();
__int64 globalReturnsFalse();
__int64 globalReturnsTrueOrFalse();
void good1();
void good2();
void good3();
void good4();
void good5();
void good6();
void good7();
void good8();
void good9();
void bad1();
void bad2();
void bad3();
void bad4();
void bad5();
void bad6();
void bad7();
void bad8();
void bad9();
void __fastcall __noreturn internal_start(void *a1);
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3);
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1);
__int64 __fastcall stdThreadDestroy(void *a1);
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1);
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1);
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1);
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1);
void _libc_csu_init(void); // idb
void _libc_csu_fini(void); // idb
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

_UNKNOWN unk_45FB94; // weak
_UNKNOWN unk_460358; // weak
char s[3] = { '\0', '\0', '\0' }; // idb
int GLOBAL_CONST_TRUE = 1; // weak
int GLOBAL_CONST_FALSE = 0; // weak
int GLOBAL_CONST_FIVE = 5; // weak
__int64 (__fastcall *_frame_dummy_init_array_entry[2])() = { &frame_dummy, &_do_global_dtors_aux }; // weak
__int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)() = &_do_global_dtors_aux; // weak
__int64 (*qword_67D010)(void) = NULL; // weak
int staticTrue = 1; // weak
int staticTrue_0 = 1; // weak
int staticFive = 5; // weak
int staticFive_0 = 5; // weak
int staticFive_1 = 5; // weak
int staticFive_2 = 5; // weak
int staticFive_3 = 5; // weak
int staticTrue_1 = 1; // weak
int staticFive_4 = 5; // weak
int staticTrue_2 = 1; // weak
int staticTrue_3 = 1; // weak
int staticFive_5 = 5; // weak
int staticFive_6 = 5; // weak
int staticTrue_4 = 1; // weak
int staticFive_7 = 5; // weak
int staticTrue_5 = 1; // weak
int staticFive_8 = 5; // weak
int staticFive_9 = 5; // weak
int staticTrue_6 = 1; // weak
int staticTrue_7 = 1; // weak
int staticTrue_8 = 1; // weak
int staticFive_10 = 5; // weak
int staticFive_11 = 5; // weak
int staticTrue_9 = 1; // weak
int staticTrue_10 = 1; // weak
int staticTrue_11 = 1; // weak
int staticFive_12 = 5; // weak
int staticTrue_12 = 1; // weak
int globalTrue = 1; // weak
int globalFive = 5; // weak
FILE *stdin; // idb
char completed_6355; // weak
__int64 CWE127_Buffer_Underread__char_alloca_memmove_45_badData; // weak
__int64 CWE127_Buffer_Underread__char_alloca_memmove_45_goodG2BData; // weak
int badStatic; // weak
int goodB2G1Static; // weak
int goodB2G2Static; // weak
int goodG2BStatic; // weak
int staticFalse; // weak
int staticFalse_0; // weak
int CWE127_Buffer_Underread__CWE839_fscanf_45_badData; // weak
int CWE127_Buffer_Underread__CWE839_fscanf_45_goodG2BData; // weak
int CWE127_Buffer_Underread__CWE839_fscanf_45_goodB2GData; // weak
__int64 CWE127_Buffer_Underread__char_declare_ncpy_45_badData; // weak
__int64 CWE127_Buffer_Underread__char_declare_ncpy_45_goodG2BData; // weak
int badStatic_0; // weak
int goodB2G1Static_0; // weak
int goodB2G2Static_0; // weak
int goodG2BStatic_0; // weak
int CWE127_Buffer_Underread__CWE839_fscanf_22_badGlobal; // weak
int CWE127_Buffer_Underread__CWE839_fscanf_22_goodB2G1Global; // weak
int CWE127_Buffer_Underread__CWE839_fscanf_22_goodB2G2Global; // weak
int CWE127_Buffer_Underread__CWE839_fscanf_22_goodG2BGlobal; // weak
__int64 CWE127_Buffer_Underread__char_declare_loop_45_badData; // weak
__int64 CWE127_Buffer_Underread__char_declare_loop_45_goodG2BData; // weak
int badStatic_1; // weak
int goodB2G1Static_1; // weak
int goodB2G2Static_1; // weak
int goodG2BStatic_1; // weak
int staticFalse_1; // weak
int staticFalse_2; // weak
int staticFalse_3; // weak
int CWE127_Buffer_Underread__CWE839_fgets_45_badData; // weak
int CWE127_Buffer_Underread__CWE839_fgets_45_goodG2BData; // weak
int CWE127_Buffer_Underread__CWE839_fgets_45_goodB2GData; // weak
int staticFalse_4; // weak
int staticFalse_5; // weak
int CWE127_Buffer_Underread__CWE839_listen_socket_22_badGlobal; // weak
int CWE127_Buffer_Underread__CWE839_listen_socket_22_goodB2G1Global; // weak
int CWE127_Buffer_Underread__CWE839_listen_socket_22_goodB2G2Global; // weak
int CWE127_Buffer_Underread__CWE839_listen_socket_22_goodG2BGlobal; // weak
int staticFalse_6; // weak
int staticFalse_7; // weak
int staticFalse_8; // weak
int CWE127_Buffer_Underread__CWE839_connect_socket_45_badData; // weak
int CWE127_Buffer_Underread__CWE839_connect_socket_45_goodG2BData; // weak
int CWE127_Buffer_Underread__CWE839_connect_socket_45_goodB2GData; // weak
int CWE127_Buffer_Underread__CWE839_fgets_22_badGlobal; // weak
int CWE127_Buffer_Underread__CWE839_fgets_22_goodB2G1Global; // weak
int CWE127_Buffer_Underread__CWE839_fgets_22_goodB2G2Global; // weak
int CWE127_Buffer_Underread__CWE839_fgets_22_goodG2BGlobal; // weak
int badStatic_2; // weak
int goodB2G1Static_2; // weak
int goodB2G2Static_2; // weak
int goodG2BStatic_2; // weak
int staticFalse_9; // weak
__int64 CWE127_Buffer_Underread__char_alloca_loop_45_badData; // weak
__int64 CWE127_Buffer_Underread__char_alloca_loop_45_goodG2BData; // weak
__int64 CWE127_Buffer_Underread__char_declare_cpy_45_badData; // weak
__int64 CWE127_Buffer_Underread__char_declare_cpy_45_goodG2BData; // weak
__int64 CWE127_Buffer_Underread__char_alloca_ncpy_45_badData; // weak
__int64 CWE127_Buffer_Underread__char_alloca_ncpy_45_goodG2BData; // weak
int staticFalse_10; // weak
__int64 CWE127_Buffer_Underread__char_alloca_cpy_45_badData; // weak
__int64 CWE127_Buffer_Underread__char_alloca_cpy_45_goodG2BData; // weak
int staticFalse_11; // weak
__int64 CWE127_Buffer_Underread__char_declare_memcpy_45_badData; // weak
__int64 CWE127_Buffer_Underread__char_declare_memcpy_45_goodG2BData; // weak
int CWE127_Buffer_Underread__CWE839_connect_socket_22_badGlobal; // weak
int CWE127_Buffer_Underread__CWE839_connect_socket_22_goodB2G1Global; // weak
int CWE127_Buffer_Underread__CWE839_connect_socket_22_goodB2G2Global; // weak
int CWE127_Buffer_Underread__CWE839_connect_socket_22_goodG2BGlobal; // weak
__int64 CWE127_Buffer_Underread__char_declare_memmove_45_badData; // weak
__int64 CWE127_Buffer_Underread__char_declare_memmove_45_goodG2BData; // weak
int staticFalse_12; // weak
int CWE127_Buffer_Underread__CWE839_listen_socket_45_badData; // weak
int CWE127_Buffer_Underread__CWE839_listen_socket_45_goodG2BData; // weak
int CWE127_Buffer_Underread__CWE839_listen_socket_45_goodB2GData; // weak
__int64 CWE127_Buffer_Underread__char_alloca_memcpy_45_badData; // weak
__int64 CWE127_Buffer_Underread__char_alloca_memcpy_45_goodG2BData; // weak
int globalFalse; // weak
int globalArgc; // weak
__int64 globalArgv; // weak
__int64 CWE127_Buffer_Underread__char_declare_ncpy_68_goodG2BData; // weak
__int64 CWE127_Buffer_Underread__char_declare_ncpy_68_badData; // weak
__int64 CWE127_Buffer_Underread__char_alloca_loop_68_badData; // weak
__int64 CWE127_Buffer_Underread__char_alloca_loop_68_goodG2BData; // weak
int CWE127_Buffer_Underread__CWE839_connect_socket_68_goodB2GData; // weak
int CWE127_Buffer_Underread__CWE839_connect_socket_68_goodG2BData; // weak
int CWE127_Buffer_Underread__CWE839_connect_socket_68_badData; // weak
int CWE127_Buffer_Underread__CWE839_fscanf_68_badData; // weak
int CWE127_Buffer_Underread__CWE839_fscanf_68_goodB2GData; // weak
int CWE127_Buffer_Underread__CWE839_fscanf_68_goodG2BData; // weak
__int64 CWE127_Buffer_Underread__char_declare_memmove_68_badData; // weak
__int64 CWE127_Buffer_Underread__char_declare_memmove_68_goodG2BData; // weak
__int64 CWE127_Buffer_Underread__char_declare_cpy_68_goodG2BData; // weak
__int64 CWE127_Buffer_Underread__char_declare_cpy_68_badData; // weak
__int64 CWE127_Buffer_Underread__char_alloca_ncpy_68_badData; // weak
__int64 CWE127_Buffer_Underread__char_alloca_ncpy_68_goodG2BData; // weak
__int64 CWE127_Buffer_Underread__char_alloca_cpy_68_goodG2BData; // weak
__int64 CWE127_Buffer_Underread__char_alloca_cpy_68_badData; // weak
__int64 CWE127_Buffer_Underread__char_declare_memcpy_68_badData; // weak
__int64 CWE127_Buffer_Underread__char_declare_memcpy_68_goodG2BData; // weak
int CWE127_Buffer_Underread__CWE839_listen_socket_68_goodG2BData; // weak
int CWE127_Buffer_Underread__CWE839_listen_socket_68_goodB2GData; // weak
int CWE127_Buffer_Underread__CWE839_listen_socket_68_badData; // weak
__int64 CWE127_Buffer_Underread__char_declare_loop_68_badData; // weak
__int64 CWE127_Buffer_Underread__char_declare_loop_68_goodG2BData; // weak
__int64 CWE127_Buffer_Underread__char_alloca_memcpy_68_badData; // weak
__int64 CWE127_Buffer_Underread__char_alloca_memcpy_68_goodG2BData; // weak
__int64 CWE127_Buffer_Underread__char_alloca_memmove_68_badData; // weak
__int64 CWE127_Buffer_Underread__char_alloca_memmove_68_goodG2BData; // weak
int CWE127_Buffer_Underread__CWE839_fgets_68_badData; // weak
int CWE127_Buffer_Underread__CWE839_fgets_68_goodB2GData; // weak
int CWE127_Buffer_Underread__CWE839_fgets_68_goodG2BData; // weak
// extern _UNKNOWN __gmon_start__; weak


//----- (0000000000400CB8) ----------------------------------------------------
void *init_proc()
{
  void *result; // rax

  result = &__gmon_start__;
  if ( &__gmon_start__ )
    result = (void *)_gmon_start__();
  return result;
}
// 400F40: using guessed type __int64 _gmon_start__(void);

//----- (0000000000400CE0) ----------------------------------------------------
__int64 sub_400CE0()
{
  return qword_67D010();
}
// 67D010: using guessed type __int64 (*qword_67D010)(void);

//----- (0000000000400F50) ----------------------------------------------------
// positive sp value has been detected, the output may be wrong!
void __usercall __noreturn start(__int64 a1@<rax>, void (*a2)(void)@<rdx>)
{
  int v2; // esi
  int v3; // [rsp-8h] [rbp-8h]
  __int64 _0; // [rsp+0h] [rbp+0h]

  v2 = v3;
  *(_QWORD *)&v3 = a1;
  __libc_start_main(
    (int (__fastcall *)(int, char **, char **))main,
    v2,
    (char **)&_0,
    _libc_csu_init,
    _libc_csu_fini,
    a2,
    &v3);
  __halt();
}
// 400F56: positive sp value 8 has been found

//----- (0000000000400F80) ----------------------------------------------------
__int64 deregister_tm_clones()
{
  __int64 result; // rax

  result = 6803911LL - (_QWORD)&stdin;
  if ( (unsigned __int64)(6803911LL - (_QWORD)&stdin) > 0xE )
    result = 0LL;
  return result;
}

//----- (0000000000400FB0) ----------------------------------------------------
__int64 register_tm_clones()
{
  return 0LL;
}

//----- (0000000000400FF0) ----------------------------------------------------
__int64 _do_global_dtors_aux()
{
  __int64 result; // rax

  if ( !completed_6355 )
  {
    result = deregister_tm_clones();
    completed_6355 = 1;
  }
  return result;
}
// 67D1C8: using guessed type char completed_6355;

//----- (0000000000401010) ----------------------------------------------------
__int64 frame_dummy()
{
  return register_tm_clones();
}
// 401010: could not find valid save-restore pair for rbp

//----- (000000000040103D) ----------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  unsigned int v3; // eax

  v3 = time(0LL);
  srand(v3);
  globalArgc = argc;
  globalArgv = (__int64)argv;
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_06_good();");
  CWE127_Buffer_Underread__CWE839_fgets_06_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_08_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_08_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_64_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_64_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_05_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_05_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_63_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_63_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_67_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_67_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_05_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_05_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_41_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_41_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_42_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_42_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_14_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_14_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_11_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_11_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_02_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_02_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_17_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_17_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_18_good();");
  CWE127_Buffer_Underread__CWE839_fgets_18_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_68_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_68_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_54_good();");
  CWE127_Buffer_Underread__char_declare_cpy_54_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_32_good();");
  CWE127_Buffer_Underread__char_alloca_loop_32_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_41_good();");
  CWE127_Buffer_Underread__char_declare_loop_41_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_53_good();");
  CWE127_Buffer_Underread__char_declare_memmove_53_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_14_good();");
  CWE127_Buffer_Underread__CWE839_fgets_14_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_04_good();");
  CWE127_Buffer_Underread__char_declare_cpy_04_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_02_good();");
  CWE127_Buffer_Underread__char_declare_cpy_02_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_52_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_52_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_01_good();");
  CWE127_Buffer_Underread__CWE839_fgets_01_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_09_good();");
  CWE127_Buffer_Underread__char_declare_memmove_09_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_44_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_44_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_53_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_53_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_66_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_66_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_07_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_07_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_02_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_02_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_31_good();");
  CWE127_Buffer_Underread__char_alloca_loop_31_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_03_good();");
  CWE127_Buffer_Underread__char_declare_cpy_03_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_07_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_07_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_64_good();");
  CWE127_Buffer_Underread__char_declare_cpy_64_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_18_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_18_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_52_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_52_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_17_good();");
  CWE127_Buffer_Underread__char_declare_cpy_17_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_32_good();");
  CWE127_Buffer_Underread__CWE839_fgets_32_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_14_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_14_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_65_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_65_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_44_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_44_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_02_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_02_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_03_good();");
  CWE127_Buffer_Underread__char_declare_memmove_03_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_51_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_51_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_17_good();");
  CWE127_Buffer_Underread__char_alloca_loop_17_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_42_good();");
  CWE127_Buffer_Underread__CWE839_fgets_42_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_51_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_51_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_66_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_66_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_31_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_31_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_66_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_66_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_11_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_11_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_15_good();");
  CWE127_Buffer_Underread__char_declare_loop_15_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_18_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_18_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_65_good();");
  CWE127_Buffer_Underread__char_alloca_loop_65_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_52_good();");
  CWE127_Buffer_Underread__char_declare_memmove_52_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_32_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_32_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_52_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_52_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_09_good();");
  CWE127_Buffer_Underread__char_alloca_loop_09_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_11_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_11_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_63_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_63_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_45_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_45_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_22_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_22_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_45_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_45_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_65_good();");
  CWE127_Buffer_Underread__CWE839_fgets_65_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_45_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_45_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_44_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_44_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_32_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_32_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_14_good();");
  CWE127_Buffer_Underread__char_declare_cpy_14_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_21_good();");
  CWE127_Buffer_Underread__CWE839_fgets_21_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_34_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_34_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_52_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_52_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_04_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_04_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_04_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_04_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_21_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_21_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_04_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_04_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_67_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_67_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_53_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_53_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_45_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_45_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_06_good();");
  CWE127_Buffer_Underread__char_alloca_loop_06_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_09_good();");
  CWE127_Buffer_Underread__char_declare_cpy_09_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_45_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_45_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_45_good();");
  CWE127_Buffer_Underread__char_declare_cpy_45_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_08_good();");
  CWE127_Buffer_Underread__CWE839_fgets_08_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_68_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_68_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_16_good();");
  CWE127_Buffer_Underread__CWE839_fgets_16_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_44_good();");
  CWE127_Buffer_Underread__char_declare_memmove_44_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_41_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_41_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_03_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_03_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_11_good();");
  CWE127_Buffer_Underread__char_declare_memmove_11_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_16_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_16_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_13_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_13_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_16_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_16_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_68_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_68_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_03_good();");
  CWE127_Buffer_Underread__CWE839_fgets_03_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_61_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_61_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_51_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_51_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_34_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_34_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_54_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_54_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_09_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_09_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_42_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_42_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_08_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_08_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_06_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_06_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_07_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_07_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_08_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_08_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_04_good();");
  CWE127_Buffer_Underread__char_declare_loop_04_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_41_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_41_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_66_good();");
  CWE127_Buffer_Underread__CWE839_fgets_66_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_03_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_03_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_01_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_01_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_41_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_41_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_34_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_34_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_02_good();");
  CWE127_Buffer_Underread__CWE839_fgets_02_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_32_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_32_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_66_good();");
  CWE127_Buffer_Underread__char_alloca_loop_66_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_14_good();");
  CWE127_Buffer_Underread__char_declare_loop_14_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_67_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_67_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_17_good();");
  CWE127_Buffer_Underread__CWE839_fgets_17_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_07_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_07_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_13_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_13_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_14_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_14_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_16_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_16_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_01_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_01_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_63_good();");
  CWE127_Buffer_Underread__CWE839_fgets_63_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_32_good();");
  CWE127_Buffer_Underread__char_declare_memmove_32_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_01_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_01_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_51_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_51_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_45_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_45_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_63_good();");
  CWE127_Buffer_Underread__char_declare_memmove_63_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_18_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_18_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_53_good();");
  CWE127_Buffer_Underread__char_declare_cpy_53_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_22_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_22_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_68_good();");
  CWE127_Buffer_Underread__char_alloca_loop_68_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_65_good();");
  CWE127_Buffer_Underread__char_declare_loop_65_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_02_good();");
  CWE127_Buffer_Underread__char_declare_memmove_02_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_51_good();");
  CWE127_Buffer_Underread__char_declare_cpy_51_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_08_good();");
  CWE127_Buffer_Underread__char_declare_loop_08_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_10_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_10_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_15_good();");
  CWE127_Buffer_Underread__char_alloca_loop_15_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_68_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_68_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_11_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_11_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_16_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_16_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_64_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_64_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_63_good();");
  CWE127_Buffer_Underread__char_declare_cpy_63_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_53_good();");
  CWE127_Buffer_Underread__char_declare_loop_53_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_67_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_67_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_05_good();");
  CWE127_Buffer_Underread__char_declare_loop_05_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_10_good();");
  CWE127_Buffer_Underread__char_declare_cpy_10_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_17_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_17_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_07_good();");
  CWE127_Buffer_Underread__char_alloca_loop_07_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_13_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_13_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_41_good();");
  CWE127_Buffer_Underread__char_declare_cpy_41_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_67_good();");
  CWE127_Buffer_Underread__CWE839_fgets_67_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_08_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_08_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_11_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_11_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_52_good();");
  CWE127_Buffer_Underread__char_declare_loop_52_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_12_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_12_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_17_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_17_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_32_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_32_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_34_good();");
  CWE127_Buffer_Underread__char_declare_cpy_34_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_68_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_68_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_31_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_31_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_67_good();");
  CWE127_Buffer_Underread__char_declare_loop_67_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_01_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_01_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_18_good();");
  CWE127_Buffer_Underread__char_declare_cpy_18_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_01_good();");
  CWE127_Buffer_Underread__char_declare_loop_01_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_61_good();");
  CWE127_Buffer_Underread__CWE839_fgets_61_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_15_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_15_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_45_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_45_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_22_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_22_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_09_good();");
  CWE127_Buffer_Underread__char_declare_loop_09_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_34_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_34_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_09_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_09_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_08_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_08_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_68_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_68_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_54_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_54_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_17_good();");
  CWE127_Buffer_Underread__char_declare_memmove_17_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_67_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_67_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_34_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_34_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_66_good();");
  CWE127_Buffer_Underread__char_declare_memmove_66_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_54_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_54_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_11_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_11_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_01_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_01_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_61_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_61_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_06_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_06_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_14_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_14_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_66_good();");
  CWE127_Buffer_Underread__char_declare_loop_66_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_68_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_68_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_41_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_41_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_17_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_17_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_63_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_63_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_06_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_06_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_09_good();");
  CWE127_Buffer_Underread__CWE839_fgets_09_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_54_good();");
  CWE127_Buffer_Underread__char_declare_memmove_54_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_02_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_02_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_15_good();");
  CWE127_Buffer_Underread__CWE839_fgets_15_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_12_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_12_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_02_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_02_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_08_good();");
  CWE127_Buffer_Underread__char_alloca_loop_08_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_52_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_52_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_11_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_11_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_52_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_52_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_45_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_45_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_31_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_31_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_09_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_09_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_07_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_07_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_68_good();");
  CWE127_Buffer_Underread__CWE839_fgets_68_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_03_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_03_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_66_good();");
  CWE127_Buffer_Underread__char_declare_cpy_66_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_32_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_32_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_32_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_32_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_31_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_31_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_44_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_44_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_08_good();");
  CWE127_Buffer_Underread__char_declare_cpy_08_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_65_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_65_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_65_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_65_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_12_good();");
  CWE127_Buffer_Underread__char_alloca_loop_12_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_54_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_54_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_16_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_16_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_06_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_06_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_64_good();");
  CWE127_Buffer_Underread__char_alloca_loop_64_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_45_good();");
  CWE127_Buffer_Underread__char_declare_memmove_45_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_05_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_05_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_54_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_54_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_13_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_13_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_12_good();");
  CWE127_Buffer_Underread__char_declare_cpy_12_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_07_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_07_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_03_good();");
  CWE127_Buffer_Underread__char_alloca_loop_03_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_08_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_08_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_02_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_02_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_12_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_12_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_51_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_51_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_03_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_03_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_31_good();");
  CWE127_Buffer_Underread__char_declare_loop_31_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_15_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_15_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_15_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_15_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_67_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_67_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_02_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_02_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_05_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_05_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_14_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_14_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_53_good();");
  CWE127_Buffer_Underread__char_alloca_loop_53_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_16_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_16_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_07_good();");
  CWE127_Buffer_Underread__CWE839_fgets_07_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_12_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_12_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_03_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_03_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_18_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_18_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_34_good();");
  CWE127_Buffer_Underread__CWE839_fgets_34_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_06_good();");
  CWE127_Buffer_Underread__char_declare_cpy_06_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_64_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_64_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_06_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_06_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_08_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_08_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_05_good();");
  CWE127_Buffer_Underread__char_alloca_loop_05_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_10_good();");
  CWE127_Buffer_Underread__CWE839_fgets_10_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_52_good();");
  CWE127_Buffer_Underread__CWE839_fgets_52_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_18_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_18_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_66_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_66_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_15_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_15_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_13_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_13_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_63_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_63_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_15_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_15_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_54_good();");
  CWE127_Buffer_Underread__char_declare_loop_54_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_16_good();");
  CWE127_Buffer_Underread__char_alloca_loop_16_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_12_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_12_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_10_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_10_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_04_good();");
  CWE127_Buffer_Underread__char_declare_memmove_04_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_31_good();");
  CWE127_Buffer_Underread__CWE839_fgets_31_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_67_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_67_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_10_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_10_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_06_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_06_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_02_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_02_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_41_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_41_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_08_good();");
  CWE127_Buffer_Underread__char_declare_memmove_08_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_54_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_54_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_03_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_03_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_05_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_05_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_68_good();");
  CWE127_Buffer_Underread__char_declare_loop_68_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_14_good();");
  CWE127_Buffer_Underread__char_declare_memmove_14_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_64_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_64_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_64_good();");
  CWE127_Buffer_Underread__char_declare_loop_64_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_13_good();");
  CWE127_Buffer_Underread__char_declare_cpy_13_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_44_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_44_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_12_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_12_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_10_good();");
  CWE127_Buffer_Underread__char_declare_loop_10_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_10_good();");
  CWE127_Buffer_Underread__char_declare_memmove_10_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_45_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_45_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_66_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_66_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_03_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_03_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_04_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_04_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_08_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_08_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_05_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_05_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_06_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_06_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_13_good();");
  CWE127_Buffer_Underread__CWE839_fgets_13_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_17_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_17_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_15_good();");
  CWE127_Buffer_Underread__char_declare_memmove_15_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_14_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_14_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_64_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_64_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_11_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_11_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_14_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_14_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_41_good();");
  CWE127_Buffer_Underread__char_alloca_loop_41_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_65_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_65_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_31_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_31_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_05_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_05_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_15_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_15_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_03_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_03_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_66_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_66_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_13_good();");
  CWE127_Buffer_Underread__char_declare_memmove_13_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_04_good();");
  CWE127_Buffer_Underread__CWE839_fgets_04_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_21_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_21_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_04_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_04_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_41_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_41_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_44_good();");
  CWE127_Buffer_Underread__char_declare_loop_44_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_68_good();");
  CWE127_Buffer_Underread__char_declare_cpy_68_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_65_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_65_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_07_good();");
  CWE127_Buffer_Underread__char_declare_cpy_07_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_34_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_34_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_01_good();");
  CWE127_Buffer_Underread__char_declare_memmove_01_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_14_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_14_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_44_good();");
  CWE127_Buffer_Underread__char_alloca_loop_44_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_05_good();");
  CWE127_Buffer_Underread__CWE839_fgets_05_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_17_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_17_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_09_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_09_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_61_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_61_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_12_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_12_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_32_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_32_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_68_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_68_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_63_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_63_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_12_good();");
  CWE127_Buffer_Underread__char_declare_loop_12_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_21_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_21_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_67_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_67_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_18_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_18_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_32_good();");
  CWE127_Buffer_Underread__char_declare_cpy_32_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_41_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_41_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_51_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_51_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_13_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_13_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_63_good();");
  CWE127_Buffer_Underread__char_declare_loop_63_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_51_good();");
  CWE127_Buffer_Underread__char_declare_memmove_51_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_10_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_10_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_10_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_10_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_54_good();");
  CWE127_Buffer_Underread__CWE839_fgets_54_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_53_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_53_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_11_good();");
  CWE127_Buffer_Underread__char_alloca_loop_11_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_04_good();");
  CWE127_Buffer_Underread__char_alloca_loop_04_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_65_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_65_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_64_good();");
  CWE127_Buffer_Underread__CWE839_fgets_64_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_53_good();");
  CWE127_Buffer_Underread__CWE839_fgets_53_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_13_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_13_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_03_good();");
  CWE127_Buffer_Underread__char_declare_loop_03_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_67_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_67_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_64_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_64_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_11_good();");
  CWE127_Buffer_Underread__char_declare_loop_11_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_10_good();");
  CWE127_Buffer_Underread__char_alloca_loop_10_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_51_good();");
  CWE127_Buffer_Underread__CWE839_fgets_51_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_10_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_10_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_65_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_65_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_12_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_12_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_34_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_34_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_42_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_42_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_45_good();");
  CWE127_Buffer_Underread__char_alloca_loop_45_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_52_good();");
  CWE127_Buffer_Underread__char_declare_cpy_52_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_05_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_05_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_32_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_32_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_01_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_01_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_04_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_04_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_63_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_63_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_65_good();");
  CWE127_Buffer_Underread__char_declare_cpy_65_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_13_good();");
  CWE127_Buffer_Underread__char_alloca_loop_13_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_54_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_54_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_53_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_53_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_31_good();");
  CWE127_Buffer_Underread__char_declare_memmove_31_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_04_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_04_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_15_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_15_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_13_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_13_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_16_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_16_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_16_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_16_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_03_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_03_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_53_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_53_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_09_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_09_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_63_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_63_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_05_good();");
  CWE127_Buffer_Underread__char_declare_cpy_05_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_01_good();");
  CWE127_Buffer_Underread__char_declare_cpy_01_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_32_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_32_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_65_good();");
  CWE127_Buffer_Underread__char_declare_memmove_65_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_18_good();");
  CWE127_Buffer_Underread__char_alloca_loop_18_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_18_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_18_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_51_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_51_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_63_good();");
  CWE127_Buffer_Underread__char_alloca_loop_63_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_44_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_44_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_17_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_17_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_41_good();");
  CWE127_Buffer_Underread__char_declare_memmove_41_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_34_good();");
  CWE127_Buffer_Underread__char_declare_memmove_34_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_01_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_01_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_52_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_52_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_31_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_31_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_44_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_44_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_06_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_06_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_53_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_53_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_34_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_34_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_14_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_14_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_67_good();");
  CWE127_Buffer_Underread__char_declare_memmove_67_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_44_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_44_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_05_good();");
  CWE127_Buffer_Underread__char_declare_memmove_05_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_64_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_64_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_52_good();");
  CWE127_Buffer_Underread__char_alloca_loop_52_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_52_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_52_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_09_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_09_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_63_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_63_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_07_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_07_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_12_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_12_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_52_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_52_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_45_good();");
  CWE127_Buffer_Underread__CWE839_fgets_45_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_31_good();");
  CWE127_Buffer_Underread__char_declare_cpy_31_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_09_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_09_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_51_good();");
  CWE127_Buffer_Underread__char_declare_loop_51_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_34_good();");
  CWE127_Buffer_Underread__char_alloca_loop_34_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_06_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_06_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_08_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_08_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_66_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_66_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_31_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_31_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_53_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_53_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_67_good();");
  CWE127_Buffer_Underread__char_declare_cpy_67_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_09_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_09_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_05_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_05_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_15_good();");
  CWE127_Buffer_Underread__char_declare_cpy_15_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_66_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_66_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_16_good();");
  CWE127_Buffer_Underread__char_declare_memmove_16_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_16_good();");
  CWE127_Buffer_Underread__char_declare_loop_16_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_65_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_65_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_34_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_34_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_01_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_01_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_11_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_11_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_02_good();");
  CWE127_Buffer_Underread__char_declare_loop_02_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_02_good();");
  CWE127_Buffer_Underread__char_alloca_loop_02_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_68_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_68_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_53_good();");
  CWE127_Buffer_Underread__CWE839_fscanf_53_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_44_good();");
  CWE127_Buffer_Underread__char_declare_cpy_44_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_10_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_10_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_14_good();");
  CWE127_Buffer_Underread__char_alloca_loop_14_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_68_good();");
  CWE127_Buffer_Underread__char_declare_memmove_68_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_44_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_44_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_31_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_31_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_17_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_17_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_63_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_63_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_11_good();");
  CWE127_Buffer_Underread__CWE839_fgets_11_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_15_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_15_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_54_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_54_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_65_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_65_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_66_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_66_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_10_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_10_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_17_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_17_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_06_good();");
  CWE127_Buffer_Underread__char_declare_memmove_06_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_09_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_09_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_10_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_10_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_53_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_53_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_07_good();");
  CWE127_Buffer_Underread__char_declare_memmove_07_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_51_good();");
  CWE127_Buffer_Underread__char_alloca_loop_51_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_41_good();");
  CWE127_Buffer_Underread__CWE839_fgets_41_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_18_good();");
  CWE127_Buffer_Underread__char_declare_memmove_18_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_16_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_16_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_67_good();");
  CWE127_Buffer_Underread__char_alloca_loop_67_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_15_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_15_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_64_good();");
  CWE127_Buffer_Underread__char_declare_memmove_64_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_64_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_64_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_04_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_04_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_54_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_54_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_18_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_18_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_13_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_13_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_64_good();");
  CWE127_Buffer_Underread__char_alloca_memmove_64_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_44_good();");
  CWE127_Buffer_Underread__CWE839_fgets_44_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_07_good();");
  CWE127_Buffer_Underread__char_alloca_cpy_07_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_07_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_07_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_11_good();");
  CWE127_Buffer_Underread__char_declare_cpy_11_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_16_good();");
  CWE127_Buffer_Underread__char_declare_cpy_16_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_51_good();");
  CWE127_Buffer_Underread__char_declare_memcpy_51_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_18_good();");
  CWE127_Buffer_Underread__char_alloca_memcpy_18_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_18_good();");
  CWE127_Buffer_Underread__char_declare_loop_18_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_31_good();");
  CWE127_Buffer_Underread__CWE839_listen_socket_31_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_34_good();");
  CWE127_Buffer_Underread__char_declare_loop_34_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_54_good();");
  CWE127_Buffer_Underread__char_alloca_loop_54_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_41_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_41_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_12_good();");
  CWE127_Buffer_Underread__CWE839_fgets_12_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_01_good();");
  CWE127_Buffer_Underread__char_alloca_ncpy_01_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_22_good();");
  CWE127_Buffer_Underread__CWE839_fgets_22_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_12_good();");
  CWE127_Buffer_Underread__char_declare_memmove_12_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_04_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_04_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_51_good();");
  CWE127_Buffer_Underread__CWE839_connect_socket_51_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_06_good();");
  CWE127_Buffer_Underread__char_declare_loop_06_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_17_good();");
  CWE127_Buffer_Underread__char_declare_loop_17_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_02_good();");
  CWE127_Buffer_Underread__char_declare_ncpy_02_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_32_good();");
  CWE127_Buffer_Underread__char_declare_loop_32_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_13_good();");
  CWE127_Buffer_Underread__char_declare_loop_13_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_07_good();");
  CWE127_Buffer_Underread__char_declare_loop_07_good();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_01_good();");
  CWE127_Buffer_Underread__char_alloca_loop_01_good();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_45_good();");
  CWE127_Buffer_Underread__char_declare_loop_45_good();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_06_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_06_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_08_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_08_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_64_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_64_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_05_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_05_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_63_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_63_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_67_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_67_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_05_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_05_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_41_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_41_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_42_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_42_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_14_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_14_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_11_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_11_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_02_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_02_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_17_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_17_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_18_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_18_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_68_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_68_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_54_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_54_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_32_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_32_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_41_bad();");
  CWE127_Buffer_Underread__char_declare_loop_41_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_53_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_53_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_14_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_14_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_04_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_04_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_02_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_02_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_52_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_52_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_01_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_01_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_09_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_09_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_44_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_44_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_53_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_53_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_66_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_66_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_07_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_07_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_02_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_02_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_31_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_31_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_03_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_03_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_07_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_07_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_64_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_64_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_18_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_18_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_52_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_52_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_17_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_17_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_32_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_32_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_14_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_14_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_65_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_65_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_44_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_44_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_02_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_02_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_03_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_03_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_51_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_51_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_17_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_17_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_42_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_42_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_51_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_51_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_66_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_66_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_31_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_31_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_66_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_66_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_11_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_11_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_15_bad();");
  CWE127_Buffer_Underread__char_declare_loop_15_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_18_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_18_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_65_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_65_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_52_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_52_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_32_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_32_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_52_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_52_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_09_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_09_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_11_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_11_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_63_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_63_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_45_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_45_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_22_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_22_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_45_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_45_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_65_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_65_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_45_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_45_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_44_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_44_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_32_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_32_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_14_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_14_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_21_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_21_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_34_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_34_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_52_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_52_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_04_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_04_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_04_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_04_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_21_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_21_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_04_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_04_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_67_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_67_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_53_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_53_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_45_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_45_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_06_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_06_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_09_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_09_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_45_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_45_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_45_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_45_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_08_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_08_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_68_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_68_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_16_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_16_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_44_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_44_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_41_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_41_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_03_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_03_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_11_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_11_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_16_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_16_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_13_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_13_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_16_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_16_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_68_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_68_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_03_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_03_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_61_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_61_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_51_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_51_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_34_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_34_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_54_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_54_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_09_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_09_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_42_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_42_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_08_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_08_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_06_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_06_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_07_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_07_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_08_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_08_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_04_bad();");
  CWE127_Buffer_Underread__char_declare_loop_04_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_41_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_41_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_66_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_66_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_03_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_03_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_01_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_01_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_41_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_41_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_34_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_34_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_02_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_02_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_32_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_32_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_66_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_66_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_14_bad();");
  CWE127_Buffer_Underread__char_declare_loop_14_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_67_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_67_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_17_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_17_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_07_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_07_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_13_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_13_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_14_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_14_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_16_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_16_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_01_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_01_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_63_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_63_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_32_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_32_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_01_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_01_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_51_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_51_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_45_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_45_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_63_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_63_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_18_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_18_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_53_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_53_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_22_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_22_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_68_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_68_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_65_bad();");
  CWE127_Buffer_Underread__char_declare_loop_65_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_02_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_02_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_51_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_51_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_08_bad();");
  CWE127_Buffer_Underread__char_declare_loop_08_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_10_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_10_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_15_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_15_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_68_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_68_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_11_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_11_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_16_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_16_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_64_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_64_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_63_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_63_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_53_bad();");
  CWE127_Buffer_Underread__char_declare_loop_53_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_67_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_67_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_05_bad();");
  CWE127_Buffer_Underread__char_declare_loop_05_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_10_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_10_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_17_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_17_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_07_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_07_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_13_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_13_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_41_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_41_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_67_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_67_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_08_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_08_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_11_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_11_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_52_bad();");
  CWE127_Buffer_Underread__char_declare_loop_52_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_12_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_12_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_17_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_17_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_32_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_32_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_34_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_34_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_68_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_68_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_31_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_31_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_67_bad();");
  CWE127_Buffer_Underread__char_declare_loop_67_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_01_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_01_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_18_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_18_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_01_bad();");
  CWE127_Buffer_Underread__char_declare_loop_01_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_61_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_61_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_15_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_15_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_45_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_45_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_22_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_22_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_09_bad();");
  CWE127_Buffer_Underread__char_declare_loop_09_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_34_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_34_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_09_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_09_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_08_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_08_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_68_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_68_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_54_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_54_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_17_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_17_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_67_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_67_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_34_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_34_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_66_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_66_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_54_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_54_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_11_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_11_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_01_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_01_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_61_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_61_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_06_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_06_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_14_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_14_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_66_bad();");
  CWE127_Buffer_Underread__char_declare_loop_66_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_68_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_68_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_41_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_41_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_17_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_17_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_63_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_63_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_06_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_06_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_09_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_09_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_54_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_54_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_02_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_02_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_15_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_15_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_12_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_12_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_02_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_02_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_08_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_08_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_52_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_52_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_11_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_11_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_52_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_52_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_45_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_45_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_31_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_31_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_09_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_09_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_07_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_07_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_68_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_68_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_03_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_03_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_66_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_66_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_32_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_32_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_32_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_32_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_31_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_31_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_44_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_44_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_08_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_08_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_65_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_65_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_65_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_65_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_12_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_12_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_54_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_54_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_16_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_16_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_06_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_06_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_64_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_64_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_45_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_45_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_05_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_05_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_54_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_54_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_13_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_13_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_12_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_12_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_07_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_07_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_03_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_03_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_08_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_08_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_02_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_02_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_12_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_12_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_51_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_51_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_03_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_03_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_31_bad();");
  CWE127_Buffer_Underread__char_declare_loop_31_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_15_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_15_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_15_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_15_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_67_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_67_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_02_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_02_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_05_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_05_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_14_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_14_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_53_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_53_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_16_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_16_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_07_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_07_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_12_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_12_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_03_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_03_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_18_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_18_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_34_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_34_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_06_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_06_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_64_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_64_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_06_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_06_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_08_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_08_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_05_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_05_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_10_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_10_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_52_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_52_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_18_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_18_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_66_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_66_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_15_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_15_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_13_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_13_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_63_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_63_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_15_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_15_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_54_bad();");
  CWE127_Buffer_Underread__char_declare_loop_54_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_16_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_16_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_12_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_12_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_10_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_10_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_04_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_04_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_31_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_31_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_67_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_67_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_10_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_10_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_06_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_06_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_02_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_02_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_41_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_41_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_08_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_08_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_54_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_54_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_03_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_03_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_05_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_05_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_68_bad();");
  CWE127_Buffer_Underread__char_declare_loop_68_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_14_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_14_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_64_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_64_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_64_bad();");
  CWE127_Buffer_Underread__char_declare_loop_64_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_13_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_13_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_44_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_44_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_12_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_12_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_10_bad();");
  CWE127_Buffer_Underread__char_declare_loop_10_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_10_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_10_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_45_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_45_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_66_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_66_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_03_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_03_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_04_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_04_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_08_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_08_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_05_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_05_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_06_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_06_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_13_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_13_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_17_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_17_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_15_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_15_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_14_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_14_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_64_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_64_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_11_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_11_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_14_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_14_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_41_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_41_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_65_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_65_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_31_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_31_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_05_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_05_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_15_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_15_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_03_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_03_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_66_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_66_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_13_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_13_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_04_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_04_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_21_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_21_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_04_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_04_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_41_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_41_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_44_bad();");
  CWE127_Buffer_Underread__char_declare_loop_44_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_68_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_68_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_65_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_65_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_07_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_07_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_34_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_34_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_01_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_01_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_14_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_14_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_44_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_44_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_05_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_05_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_17_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_17_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_09_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_09_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_61_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_61_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_12_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_12_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_32_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_32_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_68_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_68_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_63_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_63_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_12_bad();");
  CWE127_Buffer_Underread__char_declare_loop_12_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_21_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_21_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_67_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_67_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_18_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_18_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_32_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_32_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_41_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_41_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_51_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_51_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_13_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_13_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_63_bad();");
  CWE127_Buffer_Underread__char_declare_loop_63_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_51_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_51_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_10_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_10_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_10_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_10_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_54_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_54_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_53_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_53_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_11_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_11_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_04_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_04_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_65_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_65_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_64_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_64_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_53_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_53_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_13_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_13_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_03_bad();");
  CWE127_Buffer_Underread__char_declare_loop_03_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_67_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_67_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_64_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_64_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_11_bad();");
  CWE127_Buffer_Underread__char_declare_loop_11_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_10_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_10_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_51_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_51_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_10_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_10_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_65_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_65_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_12_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_12_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_34_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_34_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_42_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_42_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_45_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_45_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_52_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_52_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_05_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_05_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_32_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_32_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_01_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_01_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_04_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_04_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_63_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_63_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_65_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_65_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_13_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_13_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_54_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_54_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_53_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_53_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_31_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_31_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_04_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_04_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_15_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_15_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_13_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_13_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_16_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_16_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_16_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_16_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_03_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_03_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_53_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_53_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_09_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_09_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_63_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_63_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_05_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_05_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_01_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_01_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_32_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_32_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_65_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_65_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_18_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_18_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_18_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_18_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_51_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_51_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_63_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_63_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_44_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_44_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_17_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_17_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_41_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_41_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_34_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_34_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_01_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_01_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_52_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_52_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_31_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_31_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_44_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_44_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_06_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_06_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_53_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_53_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_34_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_34_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_14_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_14_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_67_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_67_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_44_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_44_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_05_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_05_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_64_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_64_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_52_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_52_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_52_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_52_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_09_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_09_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_63_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_63_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_07_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_07_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_12_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_12_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_52_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_52_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_45_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_45_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_31_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_31_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_09_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_09_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_51_bad();");
  CWE127_Buffer_Underread__char_declare_loop_51_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_34_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_34_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_06_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_06_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_08_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_08_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_66_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_66_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_31_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_31_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_53_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_53_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_67_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_67_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_09_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_09_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_05_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_05_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_15_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_15_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_66_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_66_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_16_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_16_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_16_bad();");
  CWE127_Buffer_Underread__char_declare_loop_16_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_65_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_65_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_34_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_34_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_01_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_01_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_11_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_11_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_02_bad();");
  CWE127_Buffer_Underread__char_declare_loop_02_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_02_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_02_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_68_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_68_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fscanf_53_bad();");
  CWE127_Buffer_Underread__CWE839_fscanf_53_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_44_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_44_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_10_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_10_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_14_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_14_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_68_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_68_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_44_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_44_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_31_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_31_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_17_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_17_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_63_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_63_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_11_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_11_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_15_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_15_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_54_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_54_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_65_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_65_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_66_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_66_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_10_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_10_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_17_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_17_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_06_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_06_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_09_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_09_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_10_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_10_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_53_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_53_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_07_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_07_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_51_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_51_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_41_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_41_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_18_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_18_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_16_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_16_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_67_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_67_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_15_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_15_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_64_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_64_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_64_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_64_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_04_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_04_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_54_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_54_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_18_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_18_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_13_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_13_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memmove_64_bad();");
  CWE127_Buffer_Underread__char_alloca_memmove_64_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_44_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_44_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_cpy_07_bad();");
  CWE127_Buffer_Underread__char_alloca_cpy_07_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_07_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_07_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_11_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_11_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_cpy_16_bad();");
  CWE127_Buffer_Underread__char_declare_cpy_16_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memcpy_51_bad();");
  CWE127_Buffer_Underread__char_declare_memcpy_51_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_memcpy_18_bad();");
  CWE127_Buffer_Underread__char_alloca_memcpy_18_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_18_bad();");
  CWE127_Buffer_Underread__char_declare_loop_18_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_listen_socket_31_bad();");
  CWE127_Buffer_Underread__CWE839_listen_socket_31_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_34_bad();");
  CWE127_Buffer_Underread__char_declare_loop_34_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_54_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_54_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_41_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_41_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_12_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_12_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_ncpy_01_bad();");
  CWE127_Buffer_Underread__char_alloca_ncpy_01_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_fgets_22_bad();");
  CWE127_Buffer_Underread__CWE839_fgets_22_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_memmove_12_bad();");
  CWE127_Buffer_Underread__char_declare_memmove_12_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_04_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_04_bad();
  printLine("Calling CWE127_Buffer_Underread__CWE839_connect_socket_51_bad();");
  CWE127_Buffer_Underread__CWE839_connect_socket_51_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_06_bad();");
  CWE127_Buffer_Underread__char_declare_loop_06_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_17_bad();");
  CWE127_Buffer_Underread__char_declare_loop_17_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_ncpy_02_bad();");
  CWE127_Buffer_Underread__char_declare_ncpy_02_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_32_bad();");
  CWE127_Buffer_Underread__char_declare_loop_32_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_13_bad();");
  CWE127_Buffer_Underread__char_declare_loop_13_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_07_bad();");
  CWE127_Buffer_Underread__char_declare_loop_07_bad();
  printLine("Calling CWE127_Buffer_Underread__char_alloca_loop_01_bad();");
  CWE127_Buffer_Underread__char_alloca_loop_01_bad();
  printLine("Calling CWE127_Buffer_Underread__char_declare_loop_45_bad();");
  CWE127_Buffer_Underread__char_declare_loop_45_bad();
  return 0;
}
// 67D36C: using guessed type int globalArgc;
// 67D370: using guessed type __int64 globalArgv;

//----- (0000000000405D58) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_04_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 405D58: using guessed type char buf[16];

//----- (0000000000405E96) ----------------------------------------------------
int goodB2G1()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 405E96: using guessed type char buf[16];

//----- (0000000000405FE6) ----------------------------------------------------
int goodB2G2()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 405FE6: using guessed type char buf[16];

//----- (000000000040612A) ----------------------------------------------------
int goodG2B1()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (00000000004061AA) ----------------------------------------------------
int goodG2B2()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000040621E) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_04_good()
{
  goodB2G1();
  goodB2G2();
  goodG2B1();
  return goodG2B2();
}

//----- (000000000040624C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_04_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v16;
  v3 = *((_QWORD *)v16 + 1);
  v4 = *((_QWORD *)v16 + 2);
  v5 = *((_QWORD *)v16 + 3);
  v6 = *((_QWORD *)v16 + 4);
  v7 = *((_QWORD *)v16 + 5);
  v8 = *((_QWORD *)v16 + 6);
  v9 = *((_QWORD *)v16 + 7);
  v10 = *((_QWORD *)v16 + 8);
  v11 = *((_QWORD *)v16 + 9);
  v12 = *((_QWORD *)v16 + 10);
  v13 = *((_QWORD *)v16 + 11);
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (0000000000406353) ----------------------------------------------------
int goodG2B1_0()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (0000000000406462) ----------------------------------------------------
int goodG2B2_0()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (0000000000406565) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_04_good()
{
  goodG2B1_0();
  return goodG2B2_0();
}

//----- (000000000040657F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_31_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-90h]
  __int64 v3; // [rsp+8h] [rbp-88h]
  __int64 v4; // [rsp+10h] [rbp-80h]
  __int64 v5; // [rsp+18h] [rbp-78h]
  __int64 v6; // [rsp+20h] [rbp-70h]
  __int64 v7; // [rsp+28h] [rbp-68h]
  __int64 v8; // [rsp+30h] [rbp-60h]
  __int64 v9; // [rsp+38h] [rbp-58h]
  __int64 v10; // [rsp+40h] [rbp-50h]
  __int64 v11; // [rsp+48h] [rbp-48h]
  __int64 v12; // [rsp+50h] [rbp-40h]
  __int64 v13; // [rsp+58h] [rbp-38h]
  int v14; // [rsp+60h] [rbp-30h]
  char *v15; // [rsp+70h] [rbp-20h]
  char *v16; // [rsp+78h] [rbp-18h]
  char *v17; // [rsp+80h] [rbp-10h]
  void *s; // [rsp+88h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v17 = (char *)s - 8;
  v16 = (char *)s - 8;
  v15 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v15;
  v3 = *((_QWORD *)v15 + 1);
  v4 = *((_QWORD *)v15 + 2);
  v5 = *((_QWORD *)v15 + 3);
  v6 = *((_QWORD *)v15 + 4);
  v7 = *((_QWORD *)v15 + 5);
  v8 = *((_QWORD *)v15 + 6);
  v9 = *((_QWORD *)v15 + 7);
  v10 = *((_QWORD *)v15 + 8);
  v11 = *((_QWORD *)v15 + 9);
  v12 = *((_QWORD *)v15 + 10);
  v13 = *((_QWORD *)v15 + 11);
  v14 = *((_DWORD *)v15 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (000000000040669C) ----------------------------------------------------
int goodG2B()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-90h]
  __int64 v3; // [rsp+8h] [rbp-88h]
  __int64 v4; // [rsp+10h] [rbp-80h]
  __int64 v5; // [rsp+18h] [rbp-78h]
  __int64 v6; // [rsp+20h] [rbp-70h]
  __int64 v7; // [rsp+28h] [rbp-68h]
  __int64 v8; // [rsp+30h] [rbp-60h]
  __int64 v9; // [rsp+38h] [rbp-58h]
  __int64 v10; // [rsp+40h] [rbp-50h]
  __int64 v11; // [rsp+48h] [rbp-48h]
  __int64 v12; // [rsp+50h] [rbp-40h]
  __int64 v13; // [rsp+58h] [rbp-38h]
  int v14; // [rsp+60h] [rbp-30h]
  _QWORD *v15; // [rsp+70h] [rbp-20h]
  void *v16; // [rsp+78h] [rbp-18h]
  void *v17; // [rsp+80h] [rbp-10h]
  void *s; // [rsp+88h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v17 = s;
  v16 = s;
  v15 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v15;
  v3 = v15[1];
  v4 = v15[2];
  v5 = v15[3];
  v6 = v15[4];
  v7 = v15[5];
  v8 = v15[6];
  v9 = v15[7];
  v10 = v15[8];
  v11 = v15[9];
  v12 = v15[10];
  v13 = v15[11];
  v14 = *((_DWORD *)v15 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (00000000004067B5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_31_good()
{
  return goodG2B();
}

//----- (00000000004067C5) ----------------------------------------------------
__int64 staticReturnsTrue()
{
  return 1LL;
}

//----- (00000000004067D0) ----------------------------------------------------
__int64 staticReturnsFalse()
{
  return 0LL;
}

//----- (00000000004067DB) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_08_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  __int64 v4; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v6; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  if ( (unsigned int)staticReturnsTrue() )
    src = (char *)&v4;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (0000000000406874) ----------------------------------------------------
int goodG2B1_1()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( (unsigned int)staticReturnsFalse() )
    printLine("Benign, fixed string");
  else
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (0000000000406915) ----------------------------------------------------
int goodG2B2_1()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( (unsigned int)staticReturnsTrue() )
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (00000000004069AA) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_08_good()
{
  goodG2B1_1();
  return goodG2B2_1();
}

//----- (00000000004069C4) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_10_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalTrue )
    src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}
// 67D1B4: using guessed type int globalTrue;

//----- (0000000000406A99) ----------------------------------------------------
int goodG2B1_2()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}
// 67D368: using guessed type int globalFalse;

//----- (0000000000406B76) ----------------------------------------------------
int goodG2B2_2()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalTrue )
    src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}
// 67D1B4: using guessed type int globalTrue;

//----- (0000000000406C47) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_10_good()
{
  goodG2B1_2();
  return goodG2B2_2();
}

//----- (0000000000406C61) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_09_bad()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  __int64 *v7; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( GLOBAL_CONST_TRUE )
    v7 = &v3;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *((_BYTE *)v7 + i);
  v2 = 0;
  return printLine(v1);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;
// 406C61: using guessed type char var_F0[99];

//----- (0000000000406D08) ----------------------------------------------------
int goodG2B1_3()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 462E04: using guessed type int GLOBAL_CONST_FALSE;
// 406D08: using guessed type char var_F0[99];

//----- (0000000000406DB7) ----------------------------------------------------
int goodG2B2_3()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
    v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;
// 406DB7: using guessed type char var_F0[99];

//----- (0000000000406E5A) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_09_good()
{
  goodG2B1_3();
  return goodG2B2_3();
}

//----- (0000000000406E74) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_09_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_TRUE )
    src = (char *)s - 8;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000406F2E) ----------------------------------------------------
int goodG2B1_4()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 462E04: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000406FF0) ----------------------------------------------------
int goodG2B2_4()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_TRUE )
    src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004070A6) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_09_good()
{
  goodG2B1_4();
  return goodG2B2_4();
}

//----- (00000000004070C0) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_68_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  CWE127_Buffer_Underread__char_declare_ncpy_68_badData = (__int64)(&savedregs - 15);
  return CWE127_Buffer_Underread__char_declare_ncpy_68b_badSink();
}
// 67D380: using guessed type __int64 CWE127_Buffer_Underread__char_declare_ncpy_68_badData;

//----- (0000000000407105) ----------------------------------------------------
int goodG2B_0()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  CWE127_Buffer_Underread__char_declare_ncpy_68_goodG2BData = (__int64)&s;
  return CWE127_Buffer_Underread__char_declare_ncpy_68b_goodG2BSink();
}
// 67D378: using guessed type __int64 CWE127_Buffer_Underread__char_declare_ncpy_68_goodG2BData;

//----- (0000000000407146) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_68_good()
{
  return goodG2B_0();
}

//----- (0000000000407156) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_64_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_cpy_64b_badSink(&v2);
}

//----- (00000000004071CD) ----------------------------------------------------
int goodG2B_1()
{
  void *v0; // rsp
  void *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = s;
  return CWE127_Buffer_Underread__char_alloca_cpy_64b_goodG2BSink((char **)&v2);
}

//----- (0000000000407240) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_64_good()
{
  return goodG2B_1();
}

//----- (0000000000407250) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_54c_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_ncpy_54d_badSink(a1);
}

//----- (000000000040726A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_54c_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_ncpy_54d_goodG2BSink(a1);
}

//----- (0000000000407284) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_32_bad()
{
  __int64 v1; // [rsp+0h] [rbp-100h]
  __int64 v2; // [rsp+8h] [rbp-F8h]
  __int64 v3; // [rsp+10h] [rbp-F0h]
  __int64 v4; // [rsp+18h] [rbp-E8h]
  __int64 v5; // [rsp+20h] [rbp-E0h]
  __int64 v6; // [rsp+28h] [rbp-D8h]
  __int64 v7; // [rsp+30h] [rbp-D0h]
  __int64 v8; // [rsp+38h] [rbp-C8h]
  __int64 v9; // [rsp+40h] [rbp-C0h]
  __int64 v10; // [rsp+48h] [rbp-B8h]
  __int64 v11; // [rsp+50h] [rbp-B0h]
  __int64 v12; // [rsp+58h] [rbp-A8h]
  int v13; // [rsp+60h] [rbp-A0h]
  __int64 v14; // [rsp+68h] [rbp-98h]
  char s; // [rsp+70h] [rbp-90h]
  char v16; // [rsp+D3h] [rbp-2Dh]
  char v17; // [rsp+D8h] [rbp-28h]
  __int64 v18; // [rsp+E0h] [rbp-20h]
  __int64 *v19; // [rsp+E8h] [rbp-18h]
  __int64 *v20; // [rsp+F0h] [rbp-10h]
  char *v21; // [rsp+F8h] [rbp-8h]

  v21 = &v17;
  v20 = (__int64 *)&v17;
  memset(&s, 65, 0x63uLL);
  v16 = 0;
  v19 = &v14;
  *(_QWORD *)v21 = &v14;
  v18 = *v20;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v18;
  v2 = *(_QWORD *)(v18 + 8);
  v3 = *(_QWORD *)(v18 + 16);
  v4 = *(_QWORD *)(v18 + 24);
  v5 = *(_QWORD *)(v18 + 32);
  v6 = *(_QWORD *)(v18 + 40);
  v7 = *(_QWORD *)(v18 + 48);
  v8 = *(_QWORD *)(v18 + 56);
  v9 = *(_QWORD *)(v18 + 64);
  v10 = *(_QWORD *)(v18 + 72);
  v11 = *(_QWORD *)(v18 + 80);
  v12 = *(_QWORD *)(v18 + 88);
  v13 = *(_DWORD *)(v18 + 96);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (00000000004073B4) ----------------------------------------------------
int goodG2B_2()
{
  __int64 v1; // [rsp+0h] [rbp-100h]
  __int64 v2; // [rsp+8h] [rbp-F8h]
  __int64 v3; // [rsp+10h] [rbp-F0h]
  __int64 v4; // [rsp+18h] [rbp-E8h]
  __int64 v5; // [rsp+20h] [rbp-E0h]
  __int64 v6; // [rsp+28h] [rbp-D8h]
  __int64 v7; // [rsp+30h] [rbp-D0h]
  __int64 v8; // [rsp+38h] [rbp-C8h]
  __int64 v9; // [rsp+40h] [rbp-C0h]
  __int64 v10; // [rsp+48h] [rbp-B8h]
  __int64 v11; // [rsp+50h] [rbp-B0h]
  __int64 v12; // [rsp+58h] [rbp-A8h]
  int v13; // [rsp+60h] [rbp-A0h]
  char s; // [rsp+70h] [rbp-90h]
  char v15; // [rsp+D3h] [rbp-2Dh]
  char v16; // [rsp+D8h] [rbp-28h]
  __int64 v17; // [rsp+E0h] [rbp-20h]
  char *v18; // [rsp+E8h] [rbp-18h]
  __int64 *v19; // [rsp+F0h] [rbp-10h]
  char *v20; // [rsp+F8h] [rbp-8h]

  v20 = &v16;
  v19 = (__int64 *)&v16;
  memset(&s, 65, 0x63uLL);
  v15 = 0;
  v18 = &s;
  *(_QWORD *)v20 = &s;
  v17 = *v19;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v17;
  v2 = *(_QWORD *)(v17 + 8);
  v3 = *(_QWORD *)(v17 + 16);
  v4 = *(_QWORD *)(v17 + 24);
  v5 = *(_QWORD *)(v17 + 32);
  v6 = *(_QWORD *)(v17 + 40);
  v7 = *(_QWORD *)(v17 + 48);
  v8 = *(_QWORD *)(v17 + 56);
  v9 = *(_QWORD *)(v17 + 64);
  v10 = *(_QWORD *)(v17 + 72);
  v11 = *(_QWORD *)(v17 + 80);
  v12 = *(_QWORD *)(v17 + 88);
  v13 = *(_DWORD *)(v17 + 96);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (00000000004074E0) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_32_good()
{
  return goodG2B_2();
}

//----- (00000000004074F0) ----------------------------------------------------
__int64 staticReturnsTrue_0()
{
  return 1LL;
}

//----- (00000000004074FB) ----------------------------------------------------
__int64 staticReturnsFalse_0()
{
  return 0LL;
}

//----- (0000000000407506) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_08_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue_0();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  return result;
}
// 407506: using guessed type char buf[16];

//----- (000000000040764E) ----------------------------------------------------
int goodB2G1_0()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( (unsigned int)staticReturnsFalse_0() )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 40764E: using guessed type char buf[16];

//----- (00000000004077A8) ----------------------------------------------------
int goodB2G2_0()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( (unsigned int)staticReturnsTrue_0() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticReturnsTrue_0();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 < 0 || v12 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  return result;
}
// 4077A8: using guessed type char buf[16];

//----- (00000000004078F6) ----------------------------------------------------
int goodG2B1_5()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)staticReturnsFalse_0() )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = staticReturnsTrue_0();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (0000000000407980) ----------------------------------------------------
int goodG2B2_5()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)staticReturnsTrue_0() )
    v6 = 7;
  result = staticReturnsTrue_0();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (00000000004079FE) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_08_good()
{
  goodB2G1_0();
  goodB2G2_0();
  goodG2B1_5();
  return goodG2B2_5();
}

//----- (0000000000407A2C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_67_bad()
{
  void *v0; // rsp
  char v2; // [rsp+Fh] [rbp-11h]
  char *v3; // [rsp+10h] [rbp-10h]
  void *s; // [rsp+18h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v2 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v2 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v3 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_memcpy_67b_badSink((__int64)s - 8);
}

//----- (0000000000407AAB) ----------------------------------------------------
int goodG2B_3()
{
  void *v0; // rsp
  char v2; // [rsp+Fh] [rbp-11h]
  void *v3; // [rsp+10h] [rbp-10h]
  void *s; // [rsp+18h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v2 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v2 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v3 = s;
  return CWE127_Buffer_Underread__char_alloca_memcpy_67b_goodG2BSink((__int64)s);
}

//----- (0000000000407B26) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_67_good()
{
  return goodG2B_3();
}

//----- (0000000000407B36) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_54_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_cpy_54b_badSink((const char *)&savedregs - 120);
}

//----- (0000000000407B72) ----------------------------------------------------
int goodG2B_4()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_cpy_54b_goodG2BSink(&s);
}

//----- (0000000000407BAA) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_54_good()
{
  return goodG2B_4();
}

//----- (0000000000407BBA) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_54b_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_cpy_54c_badSink(a1);
}

//----- (0000000000407BD4) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_54b_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_cpy_54c_goodG2BSink(a1);
}

//----- (0000000000407BEE) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_01_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  char *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (0000000000407CB9) ----------------------------------------------------
int goodG2B_5()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  char *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (0000000000407D80) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_01_good()
{
  return goodG2B_5();
}

//----- (0000000000407D90) ----------------------------------------------------
int badSink()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *src; // [rsp+68h] [rbp-8h]

  src = (void *)CWE127_Buffer_Underread__char_alloca_memmove_45_badData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(&s, src, 0x64uLL);
  v2 = 0;
  return printLine(&s);
}
// 67D1D0: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_memmove_45_badData;

//----- (0000000000407DE7) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_45_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_memmove_45_badData = (__int64)s - 8;
  return badSink();
}
// 67D1D0: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_memmove_45_badData;

//----- (0000000000407E67) ----------------------------------------------------
int goodG2BSink()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *src; // [rsp+68h] [rbp-8h]

  src = (void *)CWE127_Buffer_Underread__char_alloca_memmove_45_goodG2BData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(&s, src, 0x64uLL);
  v2 = 0;
  return printLine(&s);
}
// 67D1D8: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_memmove_45_goodG2BData;

//----- (0000000000407EBE) ----------------------------------------------------
int goodG2B_6()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_memmove_45_goodG2BData = (__int64)s;
  return goodG2BSink();
}
// 67D1D8: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_memmove_45_goodG2BData;

//----- (0000000000407F3A) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_45_good()
{
  return goodG2B_6();
}

//----- (0000000000407F4A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_53d_badSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000407FA4) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_53d_goodG2BSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000407FFE) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_03_bad()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  __int64 v14; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v16; // [rsp+D3h] [rbp-Dh]
  __int64 *v17; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  v17 = &v14;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *v17;
  v2 = v17[1];
  v3 = v17[2];
  v4 = v17[3];
  v5 = v17[4];
  v6 = v17[5];
  v7 = v17[6];
  v8 = v17[7];
  v9 = v17[8];
  v10 = v17[9];
  v11 = v17[10];
  v12 = v17[11];
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (00000000004080EE) ----------------------------------------------------
int goodG2B1_6()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (00000000004081DA) ----------------------------------------------------
int goodG2B2_6()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (00000000004082C6) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_03_good()
{
  goodG2B1_6();
  return goodG2B2_6();
}

//----- (00000000004082E0) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_11_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsTrue() )
    src = (char *)s - 8;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000040839E) ----------------------------------------------------
int goodG2B1_7()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000408464) ----------------------------------------------------
int goodG2B2_7()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsTrue() )
    src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000040851E) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_11_good()
{
  goodG2B1_7();
  return goodG2B2_7();
}

//----- (0000000000408538) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_02_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  char *src; // [rsp+D0h] [rbp-10h]
  void *s; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (00000000004085E8) ----------------------------------------------------
int goodG2B1_8()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  char *src; // [rsp+D0h] [rbp-10h]
  void *s; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000408694) ----------------------------------------------------
int goodG2B2_8()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  char *src; // [rsp+D0h] [rbp-10h]
  void *s; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000408740) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_02_good()
{
  goodG2B1_8();
  return goodG2B2_8();
}

//----- (000000000040875A) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_11_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v9 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v9));
  }
  return result;
}

//----- (000000000040881E) ----------------------------------------------------
int goodB2G1_1()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (00000000004088F4) ----------------------------------------------------
int goodB2G2_1()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v9 < 0 || v9 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v9));
  }
  return result;
}

//----- (00000000004089BE) ----------------------------------------------------
int goodG2B1_9()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (0000000000408A48) ----------------------------------------------------
int goodG2B2_9()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    v6 = 7;
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (0000000000408AC6) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_11_good()
{
  goodB2G1_1();
  goodB2G2_1();
  goodG2B1_9();
  return goodG2B2_9();
}

//----- (0000000000408AF4) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_03_bad()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  __int64 v3; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &v3;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (0000000000408B72) ----------------------------------------------------
int goodG2B1_10()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (0000000000408BEC) ----------------------------------------------------
int goodG2B2_10()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (0000000000408C66) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_03_good()
{
  goodG2B1_10();
  return goodG2B2_10();
}

//----- (0000000000408C80) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_18_bad()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  __int64 v14; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v16; // [rsp+D3h] [rbp-Dh]
  __int64 *v17; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  v17 = &v14;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *v17;
  v2 = v17[1];
  v3 = v17[2];
  v4 = v17[3];
  v5 = v17[4];
  v6 = v17[5];
  v7 = v17[6];
  v8 = v17[7];
  v9 = v17[8];
  v10 = v17[9];
  v11 = v17[10];
  v12 = v17[11];
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (0000000000408D71) ----------------------------------------------------
int goodG2B_7()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (0000000000408E5E) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_18_good()
{
  return goodG2B_7();
}

//----- (0000000000408E6E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_65b_badSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000408EC8) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_65b_goodG2BSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000408F22) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54d_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_54e_badSink(a1);
}

//----- (0000000000408F39) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54d_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_54e_goodG2BSink(a1);
}

//----- (0000000000408F50) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54d_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_54e_goodB2GSink(a1);
}

//----- (0000000000408F67) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_11_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v16;
  v3 = *((_QWORD *)v16 + 1);
  v4 = *((_QWORD *)v16 + 2);
  v5 = *((_QWORD *)v16 + 3);
  v6 = *((_QWORD *)v16 + 4);
  v7 = *((_QWORD *)v16 + 5);
  v8 = *((_QWORD *)v16 + 6);
  v9 = *((_QWORD *)v16 + 7);
  v10 = *((_QWORD *)v16 + 8);
  v11 = *((_QWORD *)v16 + 9);
  v12 = *((_QWORD *)v16 + 10);
  v13 = *((_QWORD *)v16 + 11);
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (0000000000409073) ----------------------------------------------------
int goodG2B1_11()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (0000000000409187) ----------------------------------------------------
int goodG2B2_11()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (000000000040928F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_11_good()
{
  goodG2B1_11();
  return goodG2B2_11();
}

//----- (00000000004092A9) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_65b_badSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (0000000000409302) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_65b_goodG2BSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (000000000040935B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_10_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalTrue )
    src = (char *)s - 8;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D1B4: using guessed type int globalTrue;

//----- (0000000000409415) ----------------------------------------------------
int goodG2B1_12()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D368: using guessed type int globalFalse;

//----- (00000000004094D7) ----------------------------------------------------
int goodG2B2_12()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalTrue )
    src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D1B4: using guessed type int globalTrue;

//----- (000000000040958D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_10_good()
{
  goodG2B1_12();
  return goodG2B2_12();
}

//----- (00000000004095A7) ----------------------------------------------------
void CWE127_Buffer_Underread__CWE839_connect_socket_17_bad()
{
  __int64 v0; // [rsp+0h] [rbp-70h]
  __int64 v1; // [rsp+8h] [rbp-68h]
  __int64 v2; // [rsp+10h] [rbp-60h]
  __int64 v3; // [rsp+18h] [rbp-58h]
  __int64 v4; // [rsp+20h] [rbp-50h]
  char buf[16]; // [rsp+30h] [rbp-40h]
  __int16 s; // [rsp+40h] [rbp-30h]
  uint16_t v7; // [rsp+42h] [rbp-2Eh]
  in_addr_t v8; // [rsp+44h] [rbp-2Ch]
  int v9; // [rsp+5Ch] [rbp-14h]
  int fd; // [rsp+60h] [rbp-10h]
  int v11; // [rsp+64h] [rbp-Ch]
  int j; // [rsp+68h] [rbp-8h]
  int i; // [rsp+6Ch] [rbp-4h]

  v11 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v8 = inet_addr("127.0.0.1");
      v7 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v9 = recv(fd, buf, 0xDuLL, 0);
        if ( v9 != -1 )
        {
          if ( v9 )
          {
            buf[v9] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    v0 = 0LL;
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    if ( v11 > 9 )
      printLine("ERROR: Array index is too big.");
    else
      printIntLine(*((_DWORD *)&v0 + v11));
  }
}
// 4095A7: using guessed type char buf[16];

//----- (00000000004096FC) ----------------------------------------------------
void goodB2G()
{
  __int64 v0; // [rsp+0h] [rbp-70h]
  __int64 v1; // [rsp+8h] [rbp-68h]
  __int64 v2; // [rsp+10h] [rbp-60h]
  __int64 v3; // [rsp+18h] [rbp-58h]
  __int64 v4; // [rsp+20h] [rbp-50h]
  char buf[16]; // [rsp+30h] [rbp-40h]
  __int16 s; // [rsp+40h] [rbp-30h]
  uint16_t v7; // [rsp+42h] [rbp-2Eh]
  in_addr_t v8; // [rsp+44h] [rbp-2Ch]
  int v9; // [rsp+5Ch] [rbp-14h]
  int fd; // [rsp+60h] [rbp-10h]
  int v11; // [rsp+64h] [rbp-Ch]
  int j; // [rsp+68h] [rbp-8h]
  int i; // [rsp+6Ch] [rbp-4h]

  v11 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v8 = inet_addr("127.0.0.1");
      v7 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v9 = recv(fd, buf, 0xDuLL, 0);
        if ( v9 != -1 )
        {
          if ( v9 )
          {
            buf[v9] = 0;
            v11 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  for ( j = 0; j <= 0; ++j )
  {
    v0 = 0LL;
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    if ( v11 < 0 || v11 > 9 )
      printLine("ERROR: Array index is out-of-bounds");
    else
      printIntLine(*((_DWORD *)&v0 + v11));
  }
}
// 4096FC: using guessed type char buf[16];

//----- (0000000000409857) ----------------------------------------------------
int goodG2B_8()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v6 = -1;
  for ( i = 0; i <= 0; ++i )
    v6 = 7;
  for ( j = 0; j <= 0; ++j )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (00000000004098DF) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_17_good()
{
  goodB2G();
  return goodG2B_8();
}

//----- (00000000004098F9) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_14_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  char *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFive == 5 )
    v7 = (char *)s - 8;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 67D1B8: using guessed type int globalFive;
// 4098F9: using guessed type char var_90[99];

//----- (00000000004099DB) ----------------------------------------------------
int goodG2B1_13()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFive == 5 )
    v7 = s;
  else
    printLine("Benign, fixed string");
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 67D1B8: using guessed type int globalFive;
// 4099DB: using guessed type char var_90[99];

//----- (0000000000409AC5) ----------------------------------------------------
int goodG2B2_13()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFive == 5 )
    v7 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 67D1B8: using guessed type int globalFive;
// 409AC5: using guessed type char var_90[99];

//----- (0000000000409BA3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_14_good()
{
  goodG2B1_13();
  return goodG2B2_13();
}

//----- (0000000000409BBD) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_66_bad()
{
  void *v0; // rsp
  char v2; // [rsp+0h] [rbp-40h]
  char v3; // [rsp+Fh] [rbp-31h]
  char *v4; // [rsp+10h] [rbp-30h]
  char *v5; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = (char *)s - 8;
  v4 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_memmove_66b_badSink((__int64)&v2);
}

//----- (0000000000409C3C) ----------------------------------------------------
int goodG2B_9()
{
  void *v0; // rsp
  char v2; // [rsp+0h] [rbp-40h]
  char v3; // [rsp+Fh] [rbp-31h]
  void *v4; // [rsp+10h] [rbp-30h]
  void *v5; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = s;
  v4 = s;
  return CWE127_Buffer_Underread__char_alloca_memmove_66b_goodG2BSink((__int64)&v2);
}

//----- (0000000000409CB7) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_66_good()
{
  return goodG2B_9();
}

//----- (0000000000409CC7) ----------------------------------------------------
void CWE127_Buffer_Underread__CWE839_fgets_17_bad()
{
  __int64 v0; // [rsp+0h] [rbp-50h]
  __int64 v1; // [rsp+8h] [rbp-48h]
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v6; // [rsp+38h] [rbp-18h]
  __int16 v7; // [rsp+3Ch] [rbp-14h]
  int v8; // [rsp+44h] [rbp-Ch]
  int j; // [rsp+48h] [rbp-8h]
  int i; // [rsp+4Ch] [rbp-4h]

  v8 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v6 = 0;
    v7 = 0;
    if ( fgets(s, 14, stdin) )
      v8 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    v0 = 0LL;
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    if ( v8 > 9 )
      printLine("ERROR: Array index is too big.");
    else
      printIntLine(*((_DWORD *)&v0 + v8));
  }
}

//----- (0000000000409D95) ----------------------------------------------------
void goodB2G_0()
{
  __int64 v0; // [rsp+0h] [rbp-50h]
  __int64 v1; // [rsp+8h] [rbp-48h]
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v6; // [rsp+38h] [rbp-18h]
  __int16 v7; // [rsp+3Ch] [rbp-14h]
  int v8; // [rsp+44h] [rbp-Ch]
  int j; // [rsp+48h] [rbp-8h]
  int i; // [rsp+4Ch] [rbp-4h]

  v8 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    *(_QWORD *)s = 0LL;
    v6 = 0;
    v7 = 0;
    if ( fgets(s, 14, stdin) )
      v8 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  for ( j = 0; j <= 0; ++j )
  {
    v0 = 0LL;
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    if ( v8 < 0 || v8 > 9 )
      printLine("ERROR: Array index is out-of-bounds");
    else
      printIntLine(*((_DWORD *)&v0 + v8));
  }
}

//----- (0000000000409E69) ----------------------------------------------------
int goodG2B_10()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v6 = -1;
  for ( i = 0; i <= 0; ++i )
    v6 = 7;
  for ( j = 0; j <= 0; ++j )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (0000000000409EF1) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_17_good()
{
  goodB2G_0();
  return goodG2B_10();
}

//----- (0000000000409F0B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_32_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-B0h]
  char v3[99]; // [rsp+Fh] [rbp-A1h]
  char v4; // [rsp+63h] [rbp-4Dh]
  char v5; // [rsp+68h] [rbp-48h]
  __int64 v6; // [rsp+70h] [rbp-40h]
  char *v7; // [rsp+78h] [rbp-38h]
  void *s; // [rsp+80h] [rbp-30h]
  __int64 *v9; // [rsp+88h] [rbp-28h]
  char *v10; // [rsp+90h] [rbp-20h]
  unsigned __int64 i; // [rsp+98h] [rbp-18h]

  v10 = &v5;
  v9 = (__int64 *)&v5;
  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = (char *)s - 8;
  *(_QWORD *)v10 = (char *)s - 8;
  v6 = *v9;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = *(_BYTE *)(v6 + i);
  v4 = 0;
  return printLine(v2);
}
// 409F0B: using guessed type char var_B0[99];

//----- (000000000040A013) ----------------------------------------------------
int goodG2B_11()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-B0h]
  char v3[99]; // [rsp+Fh] [rbp-A1h]
  char v4; // [rsp+63h] [rbp-4Dh]
  char v5; // [rsp+68h] [rbp-48h]
  __int64 v6; // [rsp+70h] [rbp-40h]
  void *v7; // [rsp+78h] [rbp-38h]
  void *s; // [rsp+80h] [rbp-30h]
  __int64 *v9; // [rsp+88h] [rbp-28h]
  char *v10; // [rsp+90h] [rbp-20h]
  unsigned __int64 i; // [rsp+98h] [rbp-18h]

  v10 = &v5;
  v9 = (__int64 *)&v5;
  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = s;
  *(_QWORD *)v10 = s;
  v6 = *v9;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = *(_BYTE *)(v6 + i);
  v4 = 0;
  return printLine(v2);
}
// 40A013: using guessed type char var_B0[99];

//----- (000000000040A117) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_32_good()
{
  return goodG2B_11();
}

//----- (000000000040A127) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_09_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_TRUE )
    src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040A1FC) ----------------------------------------------------
int goodG2B1_14()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}
// 462E04: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000040A2D9) ----------------------------------------------------
int goodG2B2_14()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_TRUE )
    src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000040A3AA) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_09_good()
{
  goodG2B1_14();
  return goodG2B2_14();
}

//----- (000000000040A3C4) ----------------------------------------------------
int __fastcall badSink_0(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000040A41B) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_connect_socket_44_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = badSink_0;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 40A41B: using guessed type char buf[16];

//----- (000000000040A50C) ----------------------------------------------------
int __fastcall goodG2BSink_0(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000040A563) ----------------------------------------------------
int goodG2B_12()
{
  return goodG2BSink_0(7);
}

//----- (000000000040A58E) ----------------------------------------------------
int __fastcall goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000040A5EB) ----------------------------------------------------
__int64 goodB2G_1()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = goodB2GSink;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 40A5EB: using guessed type char buf[16];

//----- (000000000040A6DC) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_connect_socket_44_good()
{
  goodG2B_12();
  return goodB2G_1();
}

//----- (000000000040A6F6) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_14_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v9 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v9));
  }
  return result;
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000040A7B4) ----------------------------------------------------
int goodB2G1_2()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000040A884) ----------------------------------------------------
int goodB2G2_2()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( globalFive == 5 )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v9 < 0 || v9 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v9));
  }
  return result;
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000040A948) ----------------------------------------------------
int goodG2B1_15()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalFive == 5 )
    v6 = 7;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000040A9CC) ----------------------------------------------------
int goodG2B2_15()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalFive == 5 )
    v6 = 7;
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000040AA44) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_14_good()
{
  goodB2G1_2();
  goodB2G2_2();
  goodG2B1_15();
  return goodG2B2_15();
}

//----- (000000000040AA72) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_54c_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_cpy_54d_badSink(a1);
}

//----- (000000000040AA8C) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_54c_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_cpy_54d_goodG2BSink(a1);
}

//----- (000000000040AAA6) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_32_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char s[8]; // [rsp+30h] [rbp-30h]
  int v7; // [rsp+38h] [rbp-28h]
  __int16 v8; // [rsp+3Ch] [rbp-24h]
  int v9; // [rsp+40h] [rbp-20h]
  int v10; // [rsp+44h] [rbp-1Ch]
  int *v11; // [rsp+48h] [rbp-18h]
  int *v12; // [rsp+50h] [rbp-10h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v12 = &v9;
  v11 = &v9;
  v9 = -1;
  v13 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v13 = atoi(s);
  else
    printLine("fgets() failed.");
  *v12 = v13;
  v10 = *v11;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v10 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v10));
  return result;
}

//----- (000000000040AB79) ----------------------------------------------------
int goodG2B_13()
{
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  int v5; // [rsp+34h] [rbp-1Ch]
  int v6; // [rsp+3Ch] [rbp-14h]
  int *v7; // [rsp+40h] [rbp-10h]
  int *v8; // [rsp+48h] [rbp-8h]

  v8 = &v5;
  v7 = &v5;
  v6 = 7;
  v5 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000040AC06) ----------------------------------------------------
int goodB2G_2()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char s[8]; // [rsp+30h] [rbp-30h]
  int v7; // [rsp+38h] [rbp-28h]
  __int16 v8; // [rsp+3Ch] [rbp-24h]
  int v9; // [rsp+40h] [rbp-20h]
  int v10; // [rsp+44h] [rbp-1Ch]
  int *v11; // [rsp+48h] [rbp-18h]
  int *v12; // [rsp+50h] [rbp-10h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v12 = &v9;
  v11 = &v9;
  v9 = -1;
  v13 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v13 = atoi(s);
  else
    printLine("fgets() failed.");
  *v12 = v13;
  v10 = *v11;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v10 < 0 || v10 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v10));
  return result;
}

//----- (000000000040ACDF) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_32_good()
{
  goodG2B_13();
  return goodB2G_2();
}

//----- (000000000040ACF9) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_63_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE127_Buffer_Underread__CWE839_fscanf_63b_badSink(&v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040AD33) ----------------------------------------------------
int goodG2B_14()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 7;
  return CWE127_Buffer_Underread__CWE839_fscanf_63b_goodG2BSink(&v1);
}

//----- (000000000040AD57) ----------------------------------------------------
int goodB2G_3()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE127_Buffer_Underread__CWE839_fscanf_63b_goodB2GSink(&v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040AD91) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_63_good()
{
  goodG2B_14();
  return goodB2G_3();
}

//----- (000000000040ADAB) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_01_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  char *src; // [rsp+D0h] [rbp-10h]
  void *s; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000040AE5B) ----------------------------------------------------
int goodG2B_15()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  char *src; // [rsp+D0h] [rbp-10h]
  void *s; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000040AF07) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_01_good()
{
  return goodG2B_15();
}

//----- (000000000040AF17) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_54d_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_loop_54e_badSink(a1);
}

//----- (000000000040AF31) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_54d_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_loop_54e_goodG2BSink(a1);
}

//----- (000000000040AF4B) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_53d_badSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (000000000040AFA4) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_53d_goodG2BSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (000000000040AFFD) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_64b_badSink(void **a1)
{
  char s; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  void *src; // [rsp+80h] [rbp-10h]
  void **v5; // [rsp+88h] [rbp-8h]

  v5 = a1;
  src = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, src, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000040B069) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_64b_goodG2BSink(void **a1)
{
  char s; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  void *src; // [rsp+80h] [rbp-10h]
  void **v5; // [rsp+88h] [rbp-8h]

  v5 = a1;
  src = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, src, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000040B0D5) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_67b_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v4 = a1;
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v4 + i);
  v3 = 0;
  return printLine(s);
}
// 40B0D5: using guessed type char s[99];

//----- (000000000040B14F) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_67b_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v4 = a1;
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v4 + i);
  v3 = 0;
  return printLine(s);
}
// 40B14F: using guessed type char s[99];

//----- (000000000040B1C9) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_67b_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000040B226) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_67b_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000040B283) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_67b_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || v7 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000040B2E6) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_ncpy_65_bad()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(const char *); // [rsp+78h] [rbp-8h]
  __int64 savedregs; // [rsp+80h] [rbp+0h]

  v4 = CWE127_Buffer_Underread__char_declare_ncpy_65b_badSink;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 17;
  return ((__int64 (__fastcall *)(__int64 *))v4)(&savedregs - 17);
}

//----- (000000000040B32B) ----------------------------------------------------
__int64 goodG2B_16()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  char *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(const char *); // [rsp+78h] [rbp-8h]

  v4 = CWE127_Buffer_Underread__char_declare_ncpy_65b_goodG2BSink;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return ((__int64 (__fastcall *)(char *))v4)(&s);
}

//----- (000000000040B36C) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_ncpy_65_good()
{
  return goodG2B_16();
}

//----- (000000000040B37C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_67_bad()
{
  void *v0; // rsp
  char v2; // [rsp+Fh] [rbp-11h]
  char *v3; // [rsp+10h] [rbp-10h]
  void *s; // [rsp+18h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v2 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v2 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v3 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_cpy_67b_badSink((char *)s - 8);
}

//----- (000000000040B3FB) ----------------------------------------------------
int goodG2B_17()
{
  void *v0; // rsp
  char v2; // [rsp+Fh] [rbp-11h]
  void *v3; // [rsp+10h] [rbp-10h]
  void *s; // [rsp+18h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v2 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v2 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v3 = s;
  return CWE127_Buffer_Underread__char_alloca_cpy_67b_goodG2BSink((char *)s);
}

//----- (000000000040B476) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_67_good()
{
  return goodG2B_17();
}

//----- (000000000040B486) ----------------------------------------------------
__int64 __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 40B486: using guessed type char buf[16];

//----- (000000000040B563) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_connect_socket_61b_goodG2BSource()
{
  return 7LL;
}

//----- (000000000040B576) ----------------------------------------------------
__int64 __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 40B576: using guessed type char buf[16];

//----- (000000000040B653) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_13_bad()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  __int64 *v7; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v7 = &v3;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *((_BYTE *)v7 + i);
  v2 = 0;
  return printLine(v1);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;
// 40B653: using guessed type char var_F0[99];

//----- (000000000040B6FB) ----------------------------------------------------
int goodG2B1_16()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v6 = &s;
  else
    printLine("Benign, fixed string");
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;
// 40B6FB: using guessed type char var_F0[99];

//----- (000000000040B7AB) ----------------------------------------------------
int goodG2B2_16()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;
// 40B7AB: using guessed type char var_F0[99];

//----- (000000000040B84F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_13_good()
{
  goodG2B1_16();
  return goodG2B2_16();
}

//----- (000000000040B869) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_11_bad()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  __int64 *v7; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v7 = &v3;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *((_BYTE *)v7 + i);
  v2 = 0;
  return printLine(v1);
}
// 40B869: using guessed type char var_F0[99];

//----- (000000000040B914) ----------------------------------------------------
int goodG2B1_17()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 40B914: using guessed type char var_F0[99];

//----- (000000000040B9C7) ----------------------------------------------------
int goodG2B2_17()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 40B9C7: using guessed type char var_F0[99];

//----- (000000000040BA6E) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_11_good()
{
  goodG2B1_17();
  return goodG2B2_17();
}

//----- (000000000040BA88) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_54d_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_memcpy_54e_badSink(a1);
}

//----- (000000000040BAA2) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_54d_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_memcpy_54e_goodG2BSink(a1);
}

//----- (000000000040BABC) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_63b_badSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000040BB1D) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_63b_goodG2BSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000040BB7E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_63b_goodB2GSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000040BBE5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_04_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  char *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = (char *)s - 8;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 40BBE5: using guessed type char var_90[99];

//----- (000000000040BCC5) ----------------------------------------------------
int goodG2B1_18()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 40BCC5: using guessed type char var_90[99];

//----- (000000000040BDAD) ----------------------------------------------------
int goodG2B2_18()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 40BDAD: using guessed type char var_90[99];

//----- (000000000040BE89) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_04_good()
{
  goodG2B1_18();
  return goodG2B2_18();
}

//----- (000000000040BEA3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_31_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-A0h]
  char v3[99]; // [rsp+Fh] [rbp-91h]
  char v4; // [rsp+63h] [rbp-3Dh]
  char *v5; // [rsp+68h] [rbp-38h]
  char *v6; // [rsp+70h] [rbp-30h]
  char *v7; // [rsp+78h] [rbp-28h]
  void *s; // [rsp+80h] [rbp-20h]
  unsigned __int64 i; // [rsp+88h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = (char *)s - 8;
  v6 = (char *)s - 8;
  v5 = (char *)s - 8;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v5[i];
  v4 = 0;
  return printLine(v2);
}
// 40BEA3: using guessed type char var_A0[99];

//----- (000000000040BF8A) ----------------------------------------------------
int goodG2B_18()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-A0h]
  char v3[99]; // [rsp+Fh] [rbp-91h]
  char v4; // [rsp+63h] [rbp-3Dh]
  _BYTE *v5; // [rsp+68h] [rbp-38h]
  void *v6; // [rsp+70h] [rbp-30h]
  void *v7; // [rsp+78h] [rbp-28h]
  void *s; // [rsp+80h] [rbp-20h]
  unsigned __int64 i; // [rsp+88h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = s;
  v6 = s;
  v5 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v5[i];
  v4 = 0;
  return printLine(v2);
}
// 40BF8A: using guessed type char var_A0[99];

//----- (000000000040C06D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_31_good()
{
  return goodG2B_18();
}

//----- (000000000040C07D) ----------------------------------------------------
int __fastcall badSink_1(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = badStatic;
  if ( badStatic )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D1E0: using guessed type int badStatic;

//----- (000000000040C0DE) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_21_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  badStatic = 1;
  return badSink_1(v8);
}
// 67D1E0: using guessed type int badStatic;
// 40C0DE: using guessed type char buf[16];

//----- (000000000040C216) ----------------------------------------------------
int __fastcall goodB2G1Sink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  if ( goodB2G1Static )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}
// 67D1E4: using guessed type int goodB2G1Static;

//----- (000000000040C289) ----------------------------------------------------
int goodB2G1_3()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  goodB2G1Static = 0;
  return goodB2G1Sink(v8);
}
// 67D1E4: using guessed type int goodB2G1Static;
// 40C289: using guessed type char buf[16];

//----- (000000000040C3C1) ----------------------------------------------------
int __fastcall goodB2G2Sink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = goodB2G2Static;
  if ( goodB2G2Static )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 < 0 || a1 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D1E8: using guessed type int goodB2G2Static;

//----- (000000000040C428) ----------------------------------------------------
int goodB2G2_3()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  goodB2G2Static = 1;
  return goodB2G2Sink(v8);
}
// 67D1E8: using guessed type int goodB2G2Static;
// 40C428: using guessed type char buf[16];

//----- (000000000040C560) ----------------------------------------------------
int __fastcall goodG2BSink_1(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = goodG2BStatic;
  if ( goodG2BStatic )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D1EC: using guessed type int goodG2BStatic;

//----- (000000000040C5C1) ----------------------------------------------------
int goodG2B_19()
{
  goodG2BStatic = 1;
  return goodG2BSink_1(7);
}
// 67D1EC: using guessed type int goodG2BStatic;

//----- (000000000040C5ED) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_21_good()
{
  goodB2G1_3();
  goodB2G2_3();
  return goodG2B_19();
}

//----- (000000000040C611) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_03_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 40C611: using guessed type char buf[16];

//----- (000000000040C77F) ----------------------------------------------------
int goodB2G1_4()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 40C77F: using guessed type char buf[16];

//----- (000000000040C8F3) ----------------------------------------------------
int goodB2G2_4()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 40C8F3: using guessed type char buf[16];

//----- (000000000040CA67) ----------------------------------------------------
int goodG2B1_19()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000040CAC9) ----------------------------------------------------
int goodG2B2_19()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000040CB2B) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_03_good()
{
  goodB2G1_4();
  goodB2G2_4();
  goodG2B1_19();
  return goodG2B2_19();
}

//----- (000000000040CB59) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_11_bad()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  __int64 v14; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v16; // [rsp+D3h] [rbp-Dh]
  __int64 *v17; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v17 = &v14;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *v17;
  v2 = v17[1];
  v3 = v17[2];
  v4 = v17[3];
  v5 = v17[4];
  v6 = v17[5];
  v7 = v17[6];
  v8 = v17[7];
  v9 = v17[8];
  v10 = v17[9];
  v11 = v17[10];
  v12 = v17[11];
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (000000000040CC57) ----------------------------------------------------
int goodG2B1_20()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (000000000040CD5D) ----------------------------------------------------
int goodG2B2_20()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (000000000040CE57) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_11_good()
{
  goodG2B1_20();
  return goodG2B2_20();
}

//----- (000000000040CE71) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_02_bad()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  __int64 v14; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v16; // [rsp+D3h] [rbp-Dh]
  __int64 *v17; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  v17 = &v14;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *v17;
  v2 = v17[1];
  v3 = v17[2];
  v4 = v17[3];
  v5 = v17[4];
  v6 = v17[5];
  v7 = v17[6];
  v8 = v17[7];
  v9 = v17[8];
  v10 = v17[9];
  v11 = v17[10];
  v12 = v17[11];
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (000000000040CF61) ----------------------------------------------------
int goodG2B1_21()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (000000000040D04D) ----------------------------------------------------
int goodG2B2_21()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (000000000040D139) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_02_good()
{
  goodG2B1_21();
  return goodG2B2_21();
}

//----- (000000000040D153) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_04_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000040D20D) ----------------------------------------------------
int goodB2G1_5()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000040D2D9) ----------------------------------------------------
int goodB2G2_5()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000040D399) ----------------------------------------------------
int goodG2B1_22()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000040D419) ----------------------------------------------------
int goodG2B2_22()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000040D48D) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_04_good()
{
  goodB2G1_5();
  goodB2G2_5();
  goodG2B1_22();
  return goodG2B2_22();
}

//----- (000000000040D4BB) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_31_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+44h] [rbp-Ch]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v11 = atoi(s);
  else
    printLine("fgets() failed.");
  v10 = v11;
  v9 = v11;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v11 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000040D56F) ----------------------------------------------------
int goodG2B_20()
{
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  int v5; // [rsp+38h] [rbp-8h]
  int v6; // [rsp+3Ch] [rbp-4h]

  v6 = 7;
  v5 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000040D5DD) ----------------------------------------------------
int goodB2G_4()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+44h] [rbp-Ch]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v11 = atoi(s);
  else
    printLine("fgets() failed.");
  v10 = v11;
  v9 = v11;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v11 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000040D697) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_31_good()
{
  goodG2B_20();
  return goodB2G_4();
}

//----- (000000000040D6B1) ----------------------------------------------------
__int64 staticReturnsTrue_1()
{
  return 1LL;
}

//----- (000000000040D6BC) ----------------------------------------------------
__int64 staticReturnsFalse_1()
{
  return 0LL;
}

//----- (000000000040D6C7) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_08_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
    src = (char *)s - 8;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000040D785) ----------------------------------------------------
int goodG2B1_23()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)staticReturnsFalse_1() )
    printLine("Benign, fixed string");
  else
    src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000040D84B) ----------------------------------------------------
int goodG2B2_23()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)staticReturnsTrue_1() )
    src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000040D905) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_08_good()
{
  goodG2B1_23();
  return goodG2B2_23();
}

//----- (000000000040D91F) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_53c_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_cpy_53d_badSink(a1);
}

//----- (000000000040D939) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_53c_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_cpy_53d_goodG2BSink(a1);
}

//----- (000000000040D953) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_13_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v16;
  v3 = *((_QWORD *)v16 + 1);
  v4 = *((_QWORD *)v16 + 2);
  v5 = *((_QWORD *)v16 + 3);
  v6 = *((_QWORD *)v16 + 4);
  v7 = *((_QWORD *)v16 + 5);
  v8 = *((_QWORD *)v16 + 6);
  v9 = *((_QWORD *)v16 + 7);
  v10 = *((_QWORD *)v16 + 8);
  v11 = *((_QWORD *)v16 + 9);
  v12 = *((_QWORD *)v16 + 10);
  v13 = *((_QWORD *)v16 + 11);
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040DA5C) ----------------------------------------------------
int goodG2B1_24()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v16 = s;
  else
    printLine("Benign, fixed string");
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040DB6D) ----------------------------------------------------
int goodG2B2_24()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040DC72) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_13_good()
{
  goodG2B1_24();
  return goodG2B2_24();
}

//----- (000000000040DC8C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_66_bad()
{
  char s; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  char v3; // [rsp+70h] [rbp-30h]
  __int64 *v4; // [rsp+80h] [rbp-20h]
  __int64 *v5; // [rsp+98h] [rbp-8h]
  __int64 savedregs; // [rsp+A0h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v5 = &savedregs - 21;
  v4 = &savedregs - 21;
  return CWE127_Buffer_Underread__char_declare_loop_66b_badSink((__int64)&v3);
}

//----- (000000000040DCD9) ----------------------------------------------------
int goodG2B_21()
{
  char s; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  char v3; // [rsp+70h] [rbp-30h]
  char *v4; // [rsp+80h] [rbp-20h]
  char *v5; // [rsp+98h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v5 = &s;
  v4 = &s;
  return CWE127_Buffer_Underread__char_declare_loop_66b_goodG2BSink((__int64)&v3);
}

//----- (000000000040DD22) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_66_good()
{
  return goodG2B_21();
}

//----- (000000000040DD32) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_13_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  __int64 v4; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v6; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    src = (char *)&v4;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040DDC8) ----------------------------------------------------
int goodG2B1_25()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    src = &s;
  else
    printLine("Benign, fixed string");
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040DE66) ----------------------------------------------------
int goodG2B2_25()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040DEF8) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_13_good()
{
  goodG2B1_25();
  return goodG2B2_25();
}

//----- (000000000040DF12) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_15_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  char *v5; // [rsp+68h] [rbp-28h]
  void *s; // [rsp+70h] [rbp-20h]
  unsigned __int64 i; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = (char *)s - 8;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v5[i];
  v4 = 0;
  return printLine(v2);
}
// 40DF12: using guessed type char var_90[99];

//----- (000000000040DFEA) ----------------------------------------------------
int goodG2B1_26()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  _BYTE *v5; // [rsp+68h] [rbp-28h]
  void *s; // [rsp+70h] [rbp-20h]
  unsigned __int64 i; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v5[i];
  v4 = 0;
  return printLine(v2);
}
// 40DFEA: using guessed type char var_90[99];

//----- (000000000040E0BE) ----------------------------------------------------
int goodG2B2_26()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  _BYTE *v5; // [rsp+68h] [rbp-28h]
  void *s; // [rsp+70h] [rbp-20h]
  unsigned __int64 i; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v5[i];
  v4 = 0;
  return printLine(v2);
}
// 40E0BE: using guessed type char var_90[99];

//----- (000000000040E192) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_15_good()
{
  goodG2B1_26();
  return goodG2B2_26();
}

//----- (000000000040E1AC) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_53_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_memmove_53b_badSink(&savedregs - 15);
}

//----- (000000000040E1E8) ----------------------------------------------------
int goodG2B_22()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_memmove_53b_goodG2BSink(&s);
}

//----- (000000000040E220) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_53_good()
{
  return goodG2B_22();
}

//----- (000000000040E230) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_63b_badSink(void **a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  void *src; // [rsp+78h] [rbp-8h]

  src = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, src, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000040E28B) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_63b_goodG2BSink(void **a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  void *src; // [rsp+78h] [rbp-8h]

  src = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, src, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000040E2E6) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_06_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 40E2E6: using guessed type char buf[16];

//----- (000000000040E426) ----------------------------------------------------
int goodB2G1_6()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 40E426: using guessed type char buf[16];

//----- (000000000040E578) ----------------------------------------------------
int goodB2G2_6()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 40E578: using guessed type char buf[16];

//----- (000000000040E6BE) ----------------------------------------------------
int goodG2B1_27()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000040E740) ----------------------------------------------------
int goodG2B2_27()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000040E7B6) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_06_good()
{
  goodB2G1_6();
  goodB2G2_6();
  goodG2B1_27();
  return goodG2B2_27();
}

//----- (000000000040E7E4) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_53c_badSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_alloca_memmove_53d_badSink(a1);
}

//----- (000000000040E7FE) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_53c_goodG2BSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_alloca_memmove_53d_goodG2BSink(a1);
}

//----- (000000000040E818) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_15_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000040E8C2) ----------------------------------------------------
int goodB2G1_7()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000040E972) ----------------------------------------------------
int goodB2G2_7()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000040EA22) ----------------------------------------------------
int goodG2B1_28()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000040EA86) ----------------------------------------------------
int goodG2B2_28()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000040EAEA) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_15_good()
{
  goodB2G1_7();
  goodB2G2_7();
  goodG2B1_28();
  return goodG2B2_28();
}

//----- (000000000040EB18) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_04_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000040EBEC) ----------------------------------------------------
int goodG2B1_29()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000040ECC8) ----------------------------------------------------
int goodG2B2_29()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000040ED98) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_04_good()
{
  goodG2B1_29();
  return goodG2B2_29();
}

//----- (000000000040EDB2) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_31_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-A0h]
  char v4; // [rsp+Fh] [rbp-91h]
  char v5; // [rsp+63h] [rbp-3Dh]
  char *src; // [rsp+70h] [rbp-30h]
  char *v7; // [rsp+78h] [rbp-28h]
  char *v8; // [rsp+80h] [rbp-20h]
  void *s; // [rsp+88h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v8 = (char *)s - 8;
  v7 = (char *)s - 8;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000040EE8D) ----------------------------------------------------
int goodG2B_23()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-A0h]
  char v4; // [rsp+Fh] [rbp-91h]
  char v5; // [rsp+63h] [rbp-3Dh]
  char *src; // [rsp+70h] [rbp-30h]
  void *v7; // [rsp+78h] [rbp-28h]
  void *v8; // [rsp+80h] [rbp-20h]
  void *s; // [rsp+88h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v8 = s;
  v7 = s;
  src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000040EF64) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_31_good()
{
  return goodG2B_23();
}

//----- (000000000040EF74) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_14_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFive == 5 )
    src = (char *)s - 8;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000040F02F) ----------------------------------------------------
int goodG2B1_30()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFive == 5 )
    src = (char *)s;
  else
    printLine("Benign, fixed string");
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000040F0F2) ----------------------------------------------------
int goodG2B2_30()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFive == 5 )
    src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000040F1A9) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_14_good()
{
  goodG2B1_30();
  return goodG2B2_30();
}

//----- (000000000040F1C3) ----------------------------------------------------
__int64 staticReturnsTrue_2()
{
  return 1LL;
}

//----- (000000000040F1CE) ----------------------------------------------------
__int64 staticReturnsFalse_2()
{
  return 0LL;
}

//----- (000000000040F1D9) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_08_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)staticReturnsTrue_2() )
    __isoc99_fscanf(stdin, "%d", &v6);
  result = staticReturnsTrue_2();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040F26F) ----------------------------------------------------
int goodB2G1_8()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)staticReturnsTrue_2() )
    __isoc99_fscanf(stdin, "%d", &v6);
  if ( (unsigned int)staticReturnsFalse_2() )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040F318) ----------------------------------------------------
int goodB2G2_8()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)staticReturnsTrue_2() )
    __isoc99_fscanf(stdin, "%d", &v6);
  result = staticReturnsTrue_2();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 < 0 || v6 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000040F3B5) ----------------------------------------------------
int goodG2B1_31()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)staticReturnsFalse_2() )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = staticReturnsTrue_2();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (000000000040F43F) ----------------------------------------------------
int goodG2B2_31()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)staticReturnsTrue_2() )
    v6 = 7;
  result = staticReturnsTrue_2();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (000000000040F4BD) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_08_good()
{
  goodB2G1_8();
  goodB2G2_8();
  goodG2B1_31();
  return goodG2B2_31();
}

//----- (000000000040F4EB) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_13_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v6);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040F57B) ----------------------------------------------------
int goodB2G1_9()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v6);
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040F61E) ----------------------------------------------------
int goodB2G2_9()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    __isoc99_fscanf(stdin, "%d", &v6);
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 < 0 || v6 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040F6B5) ----------------------------------------------------
int goodG2B1_32()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v6 = 7;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040F739) ----------------------------------------------------
int goodG2B2_32()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v6 = 7;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000040F7B1) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_13_good()
{
  goodB2G1_9();
  goodB2G2_9();
  goodG2B1_32();
  return goodG2B2_32();
}

//----- (000000000040F7DF) ----------------------------------------------------
__int64 __fastcall badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (000000000040F83C) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_42_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = badSource(0xFFFFFFFF);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (000000000040F8A4) ----------------------------------------------------
__int64 goodG2BSource()
{
  return 7LL;
}

//----- (000000000040F8B7) ----------------------------------------------------
int goodG2B_24()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = goodG2BSource();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (000000000040F91F) ----------------------------------------------------
__int64 __fastcall goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (000000000040F97C) ----------------------------------------------------
int goodB2G_5()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = goodB2GSource(0xFFFFFFFF);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (000000000040F9EA) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_42_good()
{
  goodB2G_5();
  return goodG2B_24();
}

//----- (000000000040FA04) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_32_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-100h]
  char v3; // [rsp+Fh] [rbp-F1h]
  char v4; // [rsp+C7h] [rbp-39h]
  char v5; // [rsp+D0h] [rbp-30h]
  char *src; // [rsp+D8h] [rbp-28h]
  char *v7; // [rsp+E0h] [rbp-20h]
  void *s; // [rsp+E8h] [rbp-18h]
  char **v9; // [rsp+F0h] [rbp-10h]
  char *v10; // [rsp+F8h] [rbp-8h]

  v10 = &v5;
  v9 = (char **)&v5;
  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = (char *)s - 8;
  *(_QWORD *)v10 = (char *)s - 8;
  src = *v9;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000040FAE5) ----------------------------------------------------
int goodG2B_25()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-100h]
  char v3; // [rsp+Fh] [rbp-F1h]
  char v4; // [rsp+C7h] [rbp-39h]
  char v5; // [rsp+D0h] [rbp-30h]
  char *src; // [rsp+D8h] [rbp-28h]
  void *v7; // [rsp+E0h] [rbp-20h]
  void *s; // [rsp+E8h] [rbp-18h]
  char **v9; // [rsp+F0h] [rbp-10h]
  char *v10; // [rsp+F8h] [rbp-8h]

  v10 = &v5;
  v9 = (char **)&v5;
  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = s;
  *(_QWORD *)v10 = s;
  src = *v9;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000040FBC2) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_32_good()
{
  return goodG2B_25();
}

//----- (000000000040FBD2) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_53c_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_ncpy_53d_badSink(a1);
}

//----- (000000000040FBEC) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_53c_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_ncpy_53d_goodG2BSink(a1);
}

//----- (000000000040FC06) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_54e_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000040FCA7) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_54e_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000040FD48) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_52b_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fscanf_52c_badSink(a1);
}

//----- (000000000040FD5F) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_52b_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fscanf_52c_goodG2BSink(a1);
}

//----- (000000000040FD76) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_52b_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fscanf_52c_goodB2GSink(a1);
}

//----- (000000000040FD8D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_66_bad()
{
  void *v0; // rsp
  char v2; // [rsp+0h] [rbp-40h]
  char v3; // [rsp+Fh] [rbp-31h]
  char *v4; // [rsp+10h] [rbp-30h]
  char *v5; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = (char *)s - 8;
  v4 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_memcpy_66b_badSink((__int64)&v2);
}

//----- (000000000040FE0C) ----------------------------------------------------
int goodG2B_26()
{
  void *v0; // rsp
  char v2; // [rsp+0h] [rbp-40h]
  char v3; // [rsp+Fh] [rbp-31h]
  void *v4; // [rsp+10h] [rbp-30h]
  void *v5; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = s;
  v4 = s;
  return CWE127_Buffer_Underread__char_alloca_memcpy_66b_goodG2BSink((__int64)&v2);
}

//----- (000000000040FE87) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_66_good()
{
  return goodG2B_26();
}

//----- (000000000040FE97) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_memmove_65_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(const void *); // [rsp+18h] [rbp-8h]

  v4 = CWE127_Buffer_Underread__char_alloca_memmove_65b_badSink;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return ((__int64 (__fastcall *)(char *))v4)((char *)s - 8);
}

//----- (000000000040FF17) ----------------------------------------------------
__int64 goodG2B_27()
{
  void *v0; // rsp
  __int64 v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(const void *); // [rsp+18h] [rbp-8h]

  v4 = CWE127_Buffer_Underread__char_alloca_memmove_65b_goodG2BSink;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  HIBYTE(v2) = HIBYTE(s);
  return ((__int64 (__fastcall *)(void *))v4)(s);
}

//----- (000000000040FF93) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_memmove_65_good()
{
  return goodG2B_27();
}

//----- (000000000040FFA3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_67_bad()
{
  void *v0; // rsp
  char v2; // [rsp+Fh] [rbp-11h]
  char *v3; // [rsp+10h] [rbp-10h]
  void *s; // [rsp+18h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v2 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v2 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v3 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_ncpy_67b_badSink((char *)s - 8);
}

//----- (0000000000410022) ----------------------------------------------------
int goodG2B_28()
{
  void *v0; // rsp
  char v2; // [rsp+Fh] [rbp-11h]
  void *v3; // [rsp+10h] [rbp-10h]
  void *s; // [rsp+18h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v2 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v2 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v3 = s;
  return CWE127_Buffer_Underread__char_alloca_ncpy_67b_goodG2BSink((char *)s);
}

//----- (000000000041009D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_67_good()
{
  return goodG2B_28();
}

//----- (00000000004100AD) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_51_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_loop_51b_badSink((__int64)(&savedregs - 15));
}

//----- (00000000004100E9) ----------------------------------------------------
int goodG2B_29()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_loop_51b_goodG2BSink((__int64)&s);
}

//----- (0000000000410121) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_51_good()
{
  return goodG2B_29();
}

//----- (0000000000410131) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_67b_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]
  char *src; // [rsp+D8h] [rbp-8h]

  src = a1;
  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, src);
  return printLine(&s);
}

//----- (0000000000410192) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_67b_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]
  char *src; // [rsp+D8h] [rbp-8h]

  src = a1;
  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, src);
  return printLine(&s);
}

//----- (00000000004101F3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_03_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  __int64 v4; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v6; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  src = (char *)&v4;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (000000000041027E) ----------------------------------------------------
int goodG2B1_33()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (0000000000410305) ----------------------------------------------------
int goodG2B2_33()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (000000000041038C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_03_good()
{
  goodG2B1_33();
  return goodG2B2_33();
}

//----- (00000000004103A6) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_06_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (000000000041046E) ----------------------------------------------------
int goodG2B1_34()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (000000000041053E) ----------------------------------------------------
int goodG2B2_34()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (0000000000410602) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_06_good()
{
  goodG2B1_34();
  return goodG2B2_34();
}

//----- (000000000041061C) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_ncpy_65_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(const char *); // [rsp+18h] [rbp-8h]

  v4 = CWE127_Buffer_Underread__char_alloca_ncpy_65b_badSink;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return ((__int64 (__fastcall *)(char *))v4)((char *)s - 8);
}

//----- (000000000041069C) ----------------------------------------------------
__int64 goodG2B_30()
{
  void *v0; // rsp
  __int64 v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(const char *); // [rsp+18h] [rbp-8h]

  v4 = CWE127_Buffer_Underread__char_alloca_ncpy_65b_goodG2BSink;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  HIBYTE(v2) = HIBYTE(s);
  return ((__int64 (__fastcall *)(void *))v4)(s);
}

//----- (0000000000410718) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_ncpy_65_good()
{
  return goodG2B_30();
}

//----- (0000000000410728) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_52b_badSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_declare_memmove_52c_badSink(a1);
}

//----- (0000000000410742) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_52b_goodG2BSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_declare_memmove_52c_goodG2BSink(a1);
}

//----- (000000000041075C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_05_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  char *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticTrue )
    v7 = (char *)s - 8;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 67D144: using guessed type int staticTrue;
// 41075C: using guessed type char var_90[99];

//----- (000000000041083D) ----------------------------------------------------
int goodG2B1_35()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFalse )
    printLine("Benign, fixed string");
  else
    v7 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 67D1F0: using guessed type int staticFalse;
// 41083D: using guessed type char var_90[99];

//----- (0000000000410926) ----------------------------------------------------
int goodG2B2_35()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticTrue )
    v7 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 67D144: using guessed type int staticTrue;
// 410926: using guessed type char var_90[99];

//----- (0000000000410A03) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_05_good()
{
  goodG2B1_35();
  return goodG2B2_35();
}

//----- (0000000000410A1D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_18_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  __int64 v4; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v6; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  src = (char *)&v4;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (0000000000410AA9) ----------------------------------------------------
int goodG2B_31()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (0000000000410B31) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_18_good()
{
  return goodG2B_31();
}

//----- (0000000000410B41) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_41_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 410B41: using guessed type char s[99];

//----- (0000000000410BAA) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_41_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_loop_41_badSink((__int64)s - 8);
}

//----- (0000000000410C21) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_41_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 410C21: using guessed type char s[99];

//----- (0000000000410C8A) ----------------------------------------------------
int goodG2B_32()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_loop_41_goodG2BSink((__int64)s);
}

//----- (0000000000410CFD) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_41_good()
{
  return goodG2B_32();
}

//----- (0000000000410D0D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_63_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_memmove_63b_badSink((void **)&v3);
}

//----- (0000000000410D49) ----------------------------------------------------
int goodG2B_33()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_memmove_63b_goodG2BSink((void **)&v3);
}

//----- (0000000000410D81) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_63_good()
{
  return goodG2B_33();
}

//----- (0000000000410D91) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_68b_badSink()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *src; // [rsp+68h] [rbp-8h]

  src = (void *)CWE127_Buffer_Underread__char_alloca_memmove_68_badData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(&s, src, 0x64uLL);
  v2 = 0;
  return printLine(&s);
}
// 67D430: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_memmove_68_badData;

//----- (0000000000410DE8) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_68b_goodG2BSink()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *src; // [rsp+68h] [rbp-8h]

  src = (void *)CWE127_Buffer_Underread__char_alloca_memmove_68_goodG2BData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(&s, src, 0x64uLL);
  v2 = 0;
  return printLine(&s);
}
// 67D438: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_memmove_68_goodG2BData;

//----- (0000000000410E3F) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_05_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( staticTrue_0 )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v9 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v9));
  }
  return result;
}
// 67D148: using guessed type int staticTrue_0;

//----- (0000000000410EFB) ----------------------------------------------------
int goodB2G1_10()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( staticTrue_0 )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( staticFalse_0 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}
// 67D148: using guessed type int staticTrue_0;
// 67D1F4: using guessed type int staticFalse_0;

//----- (0000000000410FC9) ----------------------------------------------------
int goodB2G2_10()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( staticTrue_0 )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v9 < 0 || v9 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v9));
  }
  return result;
}
// 67D148: using guessed type int staticTrue_0;

//----- (000000000041108B) ----------------------------------------------------
int goodG2B1_36()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticFalse_0 )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D148: using guessed type int staticTrue_0;
// 67D1F4: using guessed type int staticFalse_0;

//----- (000000000041110D) ----------------------------------------------------
int goodG2B2_36()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticTrue_0 )
    v6 = 7;
  result = staticTrue_0;
  if ( staticTrue_0 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D148: using guessed type int staticTrue_0;

//----- (0000000000411183) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_05_good()
{
  goodB2G1_10();
  goodB2G2_10();
  goodG2B1_36();
  return goodG2B2_36();
}

//----- (00000000004111B1) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_04_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000041126A) ----------------------------------------------------
int goodG2B1_37()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000041132B) ----------------------------------------------------
int goodG2B2_37()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (00000000004113E0) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_04_good()
{
  goodG2B1_37();
  return goodG2B2_37();
}

//----- (00000000004113FA) ----------------------------------------------------
int __fastcall badSink_2(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000411451) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_41_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return badSink_2(v4);
}

//----- (00000000004114B9) ----------------------------------------------------
int __fastcall goodG2BSink_2(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000411510) ----------------------------------------------------
int goodG2B_34()
{
  return goodG2BSink_2(7);
}

//----- (0000000000411532) ----------------------------------------------------
int __fastcall goodB2GSink_0(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000041158F) ----------------------------------------------------
int goodB2G_6()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return goodB2GSink_0(v4);
}

//----- (00000000004115F7) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_41_good()
{
  goodB2G_6();
  return goodG2B_34();
}

//----- (0000000000411611) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_52_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE127_Buffer_Underread__CWE839_fscanf_52b_badSink(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000411649) ----------------------------------------------------
int goodG2B_35()
{
  return CWE127_Buffer_Underread__CWE839_fscanf_52b_goodG2BSink(7);
}

//----- (000000000041166B) ----------------------------------------------------
int goodB2G_7()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE127_Buffer_Underread__CWE839_fscanf_52b_goodB2GSink(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004116A3) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_52_good()
{
  goodG2B_35();
  return goodB2G_7();
}

//----- (00000000004116BD) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_51b_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000411714) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_51b_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000041176B) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_51b_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (00000000004117C8) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_13_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    src = (char *)s - 8;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000411883) ----------------------------------------------------
int goodG2B1_38()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    src = (char *)s;
  else
    printLine("Benign, fixed string");
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000411946) ----------------------------------------------------
int goodG2B2_38()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004119FD) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_13_good()
{
  goodG2B1_38();
  return goodG2B2_38();
}

//----- (0000000000411A17) ----------------------------------------------------
int badSink_3()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_fscanf_45_badData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_fscanf_45_badData > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D1F8: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_45_badData;

//----- (0000000000411A74) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_45_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE127_Buffer_Underread__CWE839_fscanf_45_badData = v1;
  return badSink_3();
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D1F8: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_45_badData;

//----- (0000000000411AB5) ----------------------------------------------------
int goodG2BSink_3()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_fscanf_45_goodG2BData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_fscanf_45_goodG2BData > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D1FC: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_45_goodG2BData;

//----- (0000000000411B12) ----------------------------------------------------
int goodG2B_36()
{
  CWE127_Buffer_Underread__CWE839_fscanf_45_goodG2BData = 7;
  return goodG2BSink_3();
}
// 67D1FC: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_45_goodG2BData;

//----- (0000000000411B3D) ----------------------------------------------------
int goodB2GSink_1()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_fscanf_45_goodB2GData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_fscanf_45_goodB2GData < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D200: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_45_goodB2GData;

//----- (0000000000411BA0) ----------------------------------------------------
int goodB2G_8()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE127_Buffer_Underread__CWE839_fscanf_45_goodB2GData = v1;
  return goodB2GSink_1();
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D200: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_45_goodB2GData;

//----- (0000000000411BE1) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_45_good()
{
  goodG2B_36();
  return goodB2G_8();
}

//----- (0000000000411BFB) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_16_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, "%d", &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000411C77) ----------------------------------------------------
int goodB2G_9()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, "%d", &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000411CFA) ----------------------------------------------------
int goodG2B_37()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (0000000000411D5E) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_16_good()
{
  goodB2G_9();
  return goodG2B_37();
}

//----- (0000000000411D78) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_34_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-B0h]
  char v3[99]; // [rsp+Fh] [rbp-A1h]
  char v4; // [rsp+63h] [rbp-4Dh]
  char *v5; // [rsp+70h] [rbp-40h]
  char *v6; // [rsp+80h] [rbp-30h]
  char *v7; // [rsp+88h] [rbp-28h]
  void *s; // [rsp+90h] [rbp-20h]
  unsigned __int64 i; // [rsp+98h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = (char *)s - 8;
  v5 = (char *)s - 8;
  v6 = (char *)s - 8;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v6[i];
  v4 = 0;
  return printLine(v2);
}
// 411D78: using guessed type char var_B0[99];

//----- (0000000000411E5F) ----------------------------------------------------
int goodG2B_38()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-B0h]
  char v3[99]; // [rsp+Fh] [rbp-A1h]
  char v4; // [rsp+63h] [rbp-4Dh]
  void *v5; // [rsp+70h] [rbp-40h]
  _BYTE *v6; // [rsp+80h] [rbp-30h]
  void *v7; // [rsp+88h] [rbp-28h]
  void *s; // [rsp+90h] [rbp-20h]
  unsigned __int64 i; // [rsp+98h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = s;
  v5 = s;
  v6 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v6[i];
  v4 = 0;
  return printLine(v2);
}
// 411E5F: using guessed type char var_B0[99];

//----- (0000000000411F42) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_34_good()
{
  return goodG2B_38();
}

//----- (0000000000411F52) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_12_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  __int64 v4; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v6; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    src = (char *)&v4;
  else
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (0000000000411FF5) ----------------------------------------------------
int goodG2B_39()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  globalReturnsTrueOrFalse();
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (0000000000412094) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_12_good()
{
  return goodG2B_39();
}

//----- (00000000004120A4) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_66b_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v4 = *(_QWORD *)(a1 + 16);
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v4 + i);
  v3 = 0;
  return printLine(s);
}
// 4120A4: using guessed type char s[99];

//----- (0000000000412122) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_66b_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v4 = *(_QWORD *)(a1 + 16);
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v4 + i);
  v3 = 0;
  return printLine(s);
}
// 412122: using guessed type char s[99];

//----- (00000000004121A0) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_66b_badSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *(_DWORD *)(a1 + 8);
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000412202) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_66b_goodG2BSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *(_DWORD *)(a1 + 8);
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000412264) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *(_DWORD *)(a1 + 8);
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (00000000004122CC) ----------------------------------------------------
int badSink_4()
{
  size_t v0; // rax
  char s; // [rsp+0h] [rbp-70h]
  char v3; // [rsp+63h] [rbp-Dh]
  char *src; // [rsp+68h] [rbp-8h]

  src = (char *)CWE127_Buffer_Underread__char_declare_ncpy_45_badData;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&s);
  strncpy(&s, src, v0);
  v3 = 0;
  return printLine(&s);
}
// 67D208: using guessed type __int64 CWE127_Buffer_Underread__char_declare_ncpy_45_badData;

//----- (000000000041232D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_45_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  CWE127_Buffer_Underread__char_declare_ncpy_45_badData = (__int64)(&savedregs - 15);
  return badSink_4();
}
// 67D208: using guessed type __int64 CWE127_Buffer_Underread__char_declare_ncpy_45_badData;

//----- (0000000000412372) ----------------------------------------------------
int goodG2BSink_4()
{
  size_t v0; // rax
  char s; // [rsp+0h] [rbp-70h]
  char v3; // [rsp+63h] [rbp-Dh]
  char *src; // [rsp+68h] [rbp-8h]

  src = (char *)CWE127_Buffer_Underread__char_declare_ncpy_45_goodG2BData;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&s);
  strncpy(&s, src, v0);
  v3 = 0;
  return printLine(&s);
}
// 67D210: using guessed type __int64 CWE127_Buffer_Underread__char_declare_ncpy_45_goodG2BData;

//----- (00000000004123D3) ----------------------------------------------------
int goodG2B_40()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  CWE127_Buffer_Underread__char_declare_ncpy_45_goodG2BData = (__int64)&s;
  return goodG2BSink_4();
}
// 67D210: using guessed type __int64 CWE127_Buffer_Underread__char_declare_ncpy_45_goodG2BData;

//----- (0000000000412414) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_45_good()
{
  return goodG2B_40();
}

//----- (0000000000412424) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_53b_badSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_alloca_memmove_53c_badSink(a1);
}

//----- (000000000041243E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_53b_goodG2BSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_alloca_memmove_53c_goodG2BSink(a1);
}

//----- (0000000000412458) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_03_bad()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  __int64 v3; // [rsp+C8h] [rbp-78h]
  char s; // [rsp+D0h] [rbp-70h]
  char v5; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = (char *)&v3;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (00000000004124CD) ----------------------------------------------------
int goodG2B1_39()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000041253E) ----------------------------------------------------
int goodG2B2_39()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (00000000004125AF) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_03_good()
{
  goodG2B1_39();
  return goodG2B2_39();
}

//----- (00000000004125C9) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_14_bad()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  __int64 v14; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v16; // [rsp+D3h] [rbp-Dh]
  __int64 *v17; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  if ( globalFive == 5 )
    v17 = &v14;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *v17;
  v2 = v17[1];
  v3 = v17[2];
  v4 = v17[3];
  v5 = v17[4];
  v6 = v17[5];
  v7 = v17[6];
  v8 = v17[7];
  v9 = v17[8];
  v10 = v17[9];
  v11 = v17[10];
  v12 = v17[11];
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}
// 67D1B8: using guessed type int globalFive;

//----- (00000000004126C4) ----------------------------------------------------
int goodG2B1_40()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  if ( globalFive == 5 )
    v16 = &s;
  else
    printLine("Benign, fixed string");
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}
// 67D1B8: using guessed type int globalFive;

//----- (00000000004127C7) ----------------------------------------------------
int goodG2B2_40()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  if ( globalFive == 5 )
    v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}
// 67D1B8: using guessed type int globalFive;

//----- (00000000004128BE) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_14_good()
{
  goodG2B1_40();
  return goodG2B2_40();
}

//----- (00000000004128D8) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_52_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_memmove_52b_badSink(&savedregs - 15);
}

//----- (0000000000412914) ----------------------------------------------------
int goodG2B_41()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_memmove_52b_goodG2BSink(&s);
}

//----- (000000000041294C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_52_good()
{
  return goodG2B_41();
}

//----- (000000000041295C) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_51b_badSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (00000000004129AC) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_51b_goodG2BSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (00000000004129FC) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_52c_badSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (0000000000412A4C) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_52c_goodG2BSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (0000000000412A9C) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_loop_65_bad()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(__int64); // [rsp+78h] [rbp-8h]
  __int64 savedregs; // [rsp+80h] [rbp+0h]

  v4 = CWE127_Buffer_Underread__char_declare_loop_65b_badSink;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 17;
  return ((__int64 (__fastcall *)(__int64 *))v4)(&savedregs - 17);
}

//----- (0000000000412AE1) ----------------------------------------------------
__int64 goodG2B_42()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  char *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(__int64); // [rsp+78h] [rbp-8h]

  v4 = CWE127_Buffer_Underread__char_declare_loop_65b_goodG2BSink;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return ((__int64 (__fastcall *)(char *))v4)(&s);
}

//----- (0000000000412B22) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_loop_65_good()
{
  return goodG2B_42();
}

//----- (0000000000412B32) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_16_bad()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  __int64 v3; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &v3;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (0000000000412BB1) ----------------------------------------------------
int goodG2B_43()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (0000000000412C2C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_16_good()
{
  return goodG2B_43();
}

//----- (0000000000412C3C) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_54d_badSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_declare_memmove_54e_badSink(a1);
}

//----- (0000000000412C56) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_54d_goodG2BSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_declare_memmove_54e_goodG2BSink(a1);
}

//----- (0000000000412C70) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_10_bad()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  __int64 v3; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( globalTrue )
    src = &v3;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}
// 67D1B4: using guessed type int globalTrue;

//----- (0000000000412CF8) ----------------------------------------------------
int goodG2B1_41()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}
// 67D368: using guessed type int globalFalse;

//----- (0000000000412D88) ----------------------------------------------------
int goodG2B2_41()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( globalTrue )
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}
// 67D1B4: using guessed type int globalTrue;

//----- (0000000000412E0C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_10_good()
{
  goodG2B1_41();
  return goodG2B2_41();
}

//----- (0000000000412E26) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_51_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE127_Buffer_Underread__CWE839_fscanf_51b_badSink(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412E5E) ----------------------------------------------------
int goodG2B_44()
{
  return CWE127_Buffer_Underread__CWE839_fscanf_51b_goodG2BSink(7);
}

//----- (0000000000412E80) ----------------------------------------------------
int goodB2G_10()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE127_Buffer_Underread__CWE839_fscanf_51b_goodB2GSink(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000412EB8) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_51_good()
{
  goodG2B_44();
  return goodB2G_10();
}

//----- (0000000000412ED2) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_54d_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_ncpy_54e_badSink(a1);
}

//----- (0000000000412EEC) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_54d_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_ncpy_54e_goodG2BSink(a1);
}

//----- (0000000000412F06) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_67b_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]
  __int64 v15; // [rsp+78h] [rbp-8h]

  v15 = a1;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)v15;
  v3 = *(_QWORD *)(v15 + 8);
  v4 = *(_QWORD *)(v15 + 16);
  v5 = *(_QWORD *)(v15 + 24);
  v6 = *(_QWORD *)(v15 + 32);
  v7 = *(_QWORD *)(v15 + 40);
  v8 = *(_QWORD *)(v15 + 48);
  v9 = *(_QWORD *)(v15 + 56);
  v10 = *(_QWORD *)(v15 + 64);
  v11 = *(_QWORD *)(v15 + 72);
  v12 = *(_QWORD *)(v15 + 80);
  v13 = *(_QWORD *)(v15 + 88);
  v14 = *(_DWORD *)(v15 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (0000000000412FAF) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_67b_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]
  __int64 v15; // [rsp+78h] [rbp-8h]

  v15 = a1;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)v15;
  v3 = *(_QWORD *)(v15 + 8);
  v4 = *(_QWORD *)(v15 + 16);
  v5 = *(_QWORD *)(v15 + 24);
  v6 = *(_QWORD *)(v15 + 32);
  v7 = *(_QWORD *)(v15 + 40);
  v8 = *(_QWORD *)(v15 + 48);
  v9 = *(_QWORD *)(v15 + 56);
  v10 = *(_QWORD *)(v15 + 64);
  v11 = *(_QWORD *)(v15 + 72);
  v12 = *(_QWORD *)(v15 + 80);
  v13 = *(_QWORD *)(v15 + 88);
  v14 = *(_DWORD *)(v15 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (0000000000413058) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_64b_badSink(char **a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-80h]
  char v4; // [rsp+73h] [rbp-1Dh]
  char *src; // [rsp+80h] [rbp-10h]
  char **v6; // [rsp+88h] [rbp-8h]

  v6 = a1;
  src = *a1;
  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, src, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (00000000004130CE) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_64b_goodG2BSink(char **a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-80h]
  char v4; // [rsp+73h] [rbp-1Dh]
  char *src; // [rsp+80h] [rbp-10h]
  char **v6; // [rsp+88h] [rbp-8h]

  v6 = a1;
  src = *a1;
  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, src, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000413144) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_11_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  __int64 v4; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v6; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    src = (char *)&v4;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (00000000004131DD) ----------------------------------------------------
int goodG2B1_42()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (000000000041327E) ----------------------------------------------------
int goodG2B2_42()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (0000000000413313) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_11_good()
{
  goodG2B1_42();
  return goodG2B2_42();
}

//----- (000000000041332D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_02_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  __int64 v4; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v6; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  src = (char *)&v4;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (00000000004133B8) ----------------------------------------------------
int goodG2B1_43()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (000000000041343F) ----------------------------------------------------
int goodG2B2_43()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (00000000004134C6) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_02_good()
{
  goodG2B1_43();
  return goodG2B2_43();
}

//----- (00000000004134E0) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_54e_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 4134E0: using guessed type char s[99];

//----- (0000000000413549) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_54e_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 413549: using guessed type char s[99];

//----- (00000000004135B2) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_66_bad()
{
  void *v0; // rsp
  char v2; // [rsp+0h] [rbp-40h]
  char v3; // [rsp+Fh] [rbp-31h]
  char *v4; // [rsp+10h] [rbp-30h]
  char *v5; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = (char *)s - 8;
  v4 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_loop_66b_badSink((__int64)&v2);
}

//----- (0000000000413631) ----------------------------------------------------
int goodG2B_45()
{
  void *v0; // rsp
  char v2; // [rsp+0h] [rbp-40h]
  char v3; // [rsp+Fh] [rbp-31h]
  void *v4; // [rsp+10h] [rbp-30h]
  void *v5; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = s;
  v4 = s;
  return CWE127_Buffer_Underread__char_alloca_loop_66b_goodG2BSink((__int64)&v2);
}

//----- (00000000004136AC) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_66_good()
{
  return goodG2B_45();
}

//----- (00000000004136BC) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_13_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000413792) ----------------------------------------------------
int goodG2B1_44()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    src = (char *)s;
  else
    printLine("Benign, fixed string");
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000413870) ----------------------------------------------------
int goodG2B2_44()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000413942) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_13_good()
{
  goodG2B1_44();
  return goodG2B2_44();
}

//----- (000000000041395C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_12_bad()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  __int64 v3; // [rsp+C8h] [rbp-78h]
  char s; // [rsp+D0h] [rbp-70h]
  char v5; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    src = (char *)&v3;
  else
    src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (00000000004139E9) ----------------------------------------------------
int goodG2B_46()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  globalReturnsTrueOrFalse();
  src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000413A72) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_12_good()
{
  return goodG2B_46();
}

//----- (0000000000413A82) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_53_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memmove_53b_badSink((char *)s - 8);
}

//----- (0000000000413AF9) ----------------------------------------------------
int goodG2B_47()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memmove_53b_goodG2BSink(s);
}

//----- (0000000000413B6C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_53_good()
{
  return goodG2B_47();
}

//----- (0000000000413B7C) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_66_bad()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE127_Buffer_Underread__CWE839_fgets_66b_badSink((__int64)&v4);
}

//----- (0000000000413BEC) ----------------------------------------------------
int goodG2B_48()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 7;
  v2 = 7;
  return CWE127_Buffer_Underread__CWE839_fgets_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000413C16) ----------------------------------------------------
int goodB2G_11()
{
  char s[8]; // [rsp+0h] [rbp-30h]
  int v2; // [rsp+8h] [rbp-28h]
  __int16 v3; // [rsp+Ch] [rbp-24h]
  char v4; // [rsp+10h] [rbp-20h]
  int v5; // [rsp+18h] [rbp-18h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v6 = atoi(s);
  else
    printLine("fgets() failed.");
  v5 = v6;
  return CWE127_Buffer_Underread__CWE839_fgets_66b_goodB2GSink((__int64)&v4);
}

//----- (0000000000413C86) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_66_good()
{
  goodG2B_48();
  return goodB2G_11();
}

//----- (0000000000413CA0) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_51_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_memmove_51b_badSink(&savedregs - 15);
}

//----- (0000000000413CDC) ----------------------------------------------------
int goodG2B_49()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_memmove_51b_goodG2BSink(&s);
}

//----- (0000000000413D14) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_51_good()
{
  return goodG2B_49();
}

//----- (0000000000413D24) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_31_bad()
{
  __int64 v1; // [rsp+0h] [rbp-F0h]
  __int64 v2; // [rsp+8h] [rbp-E8h]
  __int64 v3; // [rsp+10h] [rbp-E0h]
  __int64 v4; // [rsp+18h] [rbp-D8h]
  __int64 v5; // [rsp+20h] [rbp-D0h]
  __int64 v6; // [rsp+28h] [rbp-C8h]
  __int64 v7; // [rsp+30h] [rbp-C0h]
  __int64 v8; // [rsp+38h] [rbp-B8h]
  __int64 v9; // [rsp+40h] [rbp-B0h]
  __int64 v10; // [rsp+48h] [rbp-A8h]
  __int64 v11; // [rsp+50h] [rbp-A0h]
  __int64 v12; // [rsp+58h] [rbp-98h]
  int v13; // [rsp+60h] [rbp-90h]
  __int64 v14; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v16; // [rsp+D3h] [rbp-1Dh]
  __int64 *v17; // [rsp+D8h] [rbp-18h]
  __int64 *v18; // [rsp+E0h] [rbp-10h]
  __int64 *v19; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  v19 = &v14;
  v18 = &v14;
  v17 = &v14;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *v17;
  v2 = v17[1];
  v3 = v17[2];
  v4 = v17[3];
  v5 = v17[4];
  v6 = v17[5];
  v7 = v17[6];
  v8 = v17[7];
  v9 = v17[8];
  v10 = v17[9];
  v11 = v17[10];
  v12 = v17[11];
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (0000000000413E2D) ----------------------------------------------------
int goodG2B_50()
{
  __int64 v1; // [rsp+0h] [rbp-F0h]
  __int64 v2; // [rsp+8h] [rbp-E8h]
  __int64 v3; // [rsp+10h] [rbp-E0h]
  __int64 v4; // [rsp+18h] [rbp-D8h]
  __int64 v5; // [rsp+20h] [rbp-D0h]
  __int64 v6; // [rsp+28h] [rbp-C8h]
  __int64 v7; // [rsp+30h] [rbp-C0h]
  __int64 v8; // [rsp+38h] [rbp-B8h]
  __int64 v9; // [rsp+40h] [rbp-B0h]
  __int64 v10; // [rsp+48h] [rbp-A8h]
  __int64 v11; // [rsp+50h] [rbp-A0h]
  __int64 v12; // [rsp+58h] [rbp-98h]
  int v13; // [rsp+60h] [rbp-90h]
  char s; // [rsp+70h] [rbp-80h]
  char v15; // [rsp+D3h] [rbp-1Dh]
  char *v16; // [rsp+D8h] [rbp-18h]
  char *v17; // [rsp+E0h] [rbp-10h]
  char *v18; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  v18 = &s;
  v17 = &s;
  v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (0000000000413F32) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_31_good()
{
  return goodG2B_50();
}

//----- (0000000000413F42) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_06_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, &unk_45FB94, &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000413FD0) ----------------------------------------------------
int goodB2G1_11()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, &unk_45FB94, &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000414071) ----------------------------------------------------
int goodB2G2_11()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, &unk_45FB94, &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000414106) ----------------------------------------------------
int goodG2B1_45()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (0000000000414188) ----------------------------------------------------
int goodG2B2_45()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (00000000004141FE) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_06_good()
{
  goodB2G1_11();
  goodB2G2_11();
  goodG2B1_45();
  return goodG2B2_45();
}

//----- (000000000041422C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_10_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  __int64 v4; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v6; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  if ( globalTrue )
    src = (char *)&v4;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}
// 67D1B4: using guessed type int globalTrue;

//----- (00000000004142C1) ----------------------------------------------------
int goodG2B1_46()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}
// 67D368: using guessed type int globalFalse;

//----- (000000000041435E) ----------------------------------------------------
int goodG2B2_46()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( globalTrue )
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}
// 67D1B4: using guessed type int globalTrue;

//----- (00000000004143EF) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_10_good()
{
  goodG2B1_46();
  return goodG2B2_46();
}

//----- (0000000000414409) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_01_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, "%d", &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000414483) ----------------------------------------------------
int goodG2B_51()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (00000000004144E5) ----------------------------------------------------
int goodB2G_12()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, "%d", &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000414566) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_01_good()
{
  goodG2B_51();
  return goodB2G_12();
}

//----- (0000000000414580) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_66_bad()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+40h] [rbp-10h]
  int fd; // [rsp+44h] [rbp-Ch]
  int v9; // [rsp+48h] [rbp-8h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  return CWE127_Buffer_Underread__CWE839_listen_socket_66b_badSink((__int64)&v5);
}
// 414580: using guessed type char buf[16];

//----- (00000000004146B6) ----------------------------------------------------
int goodG2B_52()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 7;
  v2 = 7;
  return CWE127_Buffer_Underread__CWE839_listen_socket_66b_goodG2BSink((__int64)&v1);
}

//----- (00000000004146E0) ----------------------------------------------------
int goodB2G_13()
{
  char buf[16]; // [rsp+0h] [rbp-50h]
  __int16 s; // [rsp+10h] [rbp-40h]
  uint16_t v3; // [rsp+12h] [rbp-3Eh]
  int v4; // [rsp+14h] [rbp-3Ch]
  char v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+28h] [rbp-28h]
  int v7; // [rsp+40h] [rbp-10h]
  int fd; // [rsp+44h] [rbp-Ch]
  int v9; // [rsp+48h] [rbp-8h]
  int v10; // [rsp+4Ch] [rbp-4h]

  v10 = -1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v10 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  v6 = v10;
  return CWE127_Buffer_Underread__CWE839_listen_socket_66b_goodB2GSink((__int64)&v5);
}
// 4146E0: using guessed type char buf[16];

//----- (0000000000414816) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_66_good()
{
  goodG2B_52();
  return goodB2G_13();
}

//----- (0000000000414830) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_03_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, "%d", &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004148AA) ----------------------------------------------------
int goodB2G1_12()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, "%d", &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041492B) ----------------------------------------------------
int goodB2G2_12()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, "%d", &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004149AC) ----------------------------------------------------
int goodG2B1_47()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (0000000000414A0E) ----------------------------------------------------
int goodG2B2_47()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (0000000000414A70) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_03_good()
{
  goodB2G1_12();
  goodB2G2_12();
  goodG2B1_47();
  return goodG2B2_47();
}

//----- (0000000000414A9E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_54c_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_ncpy_54d_badSink(a1);
}

//----- (0000000000414AB8) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_54c_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_ncpy_54d_goodG2BSink(a1);
}

//----- (0000000000414AD2) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_67_bad()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 *v3; // [rsp+70h] [rbp-10h]
  __int64 *v4; // [rsp+78h] [rbp-8h]
  __int64 savedregs; // [rsp+80h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v4 = &savedregs - 17;
  v3 = &savedregs - 17;
  return CWE127_Buffer_Underread__char_declare_memcpy_67b_badSink((__int64)(&savedregs - 17));
}

//----- (0000000000414B16) ----------------------------------------------------
int goodG2B_53()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  char *v3; // [rsp+70h] [rbp-10h]
  char *v4; // [rsp+78h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v4 = &s;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_memcpy_67b_goodG2BSink((__int64)&s);
}

//----- (0000000000414B56) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_67_good()
{
  return goodG2B_53();
}

//----- (0000000000414B66) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_54d_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_cpy_54e_badSink(a1);
}

//----- (0000000000414B80) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_54d_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_cpy_54e_goodG2BSink(a1);
}

//----- (0000000000414B9A) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_01_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  __int64 v4; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v6; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  src = (char *)&v4;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (0000000000414C25) ----------------------------------------------------
int goodG2B_54()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (0000000000414CAC) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_01_good()
{
  return goodG2B_54();
}

//----- (0000000000414CBC) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_64b_badSink(__int64 *a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+78h] [rbp-18h]
  __int64 *v5; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v5 = a1;
  v4 = *a1;
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v4 + i);
  v3 = 0;
  return printLine(s);
}
// 414CBC: using guessed type char s[99];

//----- (0000000000414D41) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_64b_goodG2BSink(__int64 *a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+78h] [rbp-18h]
  __int64 *v5; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v5 = a1;
  v4 = *a1;
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v4 + i);
  v3 = 0;
  return printLine(s);
}
// 414D41: using guessed type char s[99];

//----- (0000000000414DC6) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_14_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( globalFive == 5 )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v13 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v13));
  }
  return result;
}
// 67D1B8: using guessed type int globalFive;
// 414DC6: using guessed type char buf[16];

//----- (0000000000414F4E) ----------------------------------------------------
int goodB2G1_13()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( globalFive == 5 )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 67D1B8: using guessed type int globalFive;
// 414F4E: using guessed type char buf[16];

//----- (00000000004150E8) ----------------------------------------------------
int goodB2G2_13()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( globalFive == 5 )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v13 < 0 || v13 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v13));
  }
  return result;
}
// 67D1B8: using guessed type int globalFive;
// 4150E8: using guessed type char buf[16];

//----- (0000000000415276) ----------------------------------------------------
int goodG2B1_48()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalFive == 5 )
    v6 = 7;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1B8: using guessed type int globalFive;

//----- (00000000004152FA) ----------------------------------------------------
int goodG2B2_48()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalFive == 5 )
    v6 = 7;
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1B8: using guessed type int globalFive;

//----- (0000000000415372) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_14_good()
{
  goodB2G1_13();
  goodB2G2_13();
  goodG2B1_48();
  return goodG2B2_48();
}

//----- (00000000004153A0) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_11_bad()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  __int64 v3; // [rsp+C8h] [rbp-78h]
  char s; // [rsp+D0h] [rbp-70h]
  char v5; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    src = (char *)&v3;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000415423) ----------------------------------------------------
int goodG2B1_49()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (00000000004154AE) ----------------------------------------------------
int goodG2B2_49()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000041552D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_11_good()
{
  goodG2B1_49();
  return goodG2B2_49();
}

//----- (0000000000415547) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_03_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  char *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (0000000000415612) ----------------------------------------------------
int goodG2B1_50()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  char *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (00000000004156D9) ----------------------------------------------------
int goodG2B2_50()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  char *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (00000000004157A0) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_03_good()
{
  goodG2B1_50();
  return goodG2B2_50();
}

//----- (00000000004157BA) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_32_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-80h]
  __int64 v2; // [rsp+8h] [rbp-78h]
  __int64 v3; // [rsp+10h] [rbp-70h]
  __int64 v4; // [rsp+18h] [rbp-68h]
  __int64 v5; // [rsp+20h] [rbp-60h]
  char buf[16]; // [rsp+30h] [rbp-50h]
  __int16 s; // [rsp+40h] [rbp-40h]
  uint16_t v8; // [rsp+42h] [rbp-3Eh]
  int v9; // [rsp+44h] [rbp-3Ch]
  int v10; // [rsp+58h] [rbp-28h]
  int v11; // [rsp+5Ch] [rbp-24h]
  int v12; // [rsp+60h] [rbp-20h]
  int fd; // [rsp+64h] [rbp-1Ch]
  int *v14; // [rsp+68h] [rbp-18h]
  int *v15; // [rsp+70h] [rbp-10h]
  int v16; // [rsp+78h] [rbp-8h]
  int v17; // [rsp+7Ch] [rbp-4h]

  v15 = &v10;
  v14 = &v10;
  v10 = -1;
  v17 = -1;
  fd = -1;
  v16 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v16 = accept(fd, 0LL, 0LL);
      if ( v16 != -1 )
      {
        v12 = recv(v16, buf, 0xDuLL, 0);
        if ( v12 != -1 )
        {
          if ( v12 )
          {
            buf[v12] = 0;
            v17 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v16 != -1 )
    close(v16);
  *v15 = v17;
  v11 = *v14;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v11 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v11));
  return result;
}
// 4157BA: using guessed type char buf[16];

//----- (0000000000415953) ----------------------------------------------------
int goodG2B_55()
{
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  int v5; // [rsp+34h] [rbp-1Ch]
  int v6; // [rsp+3Ch] [rbp-14h]
  int *v7; // [rsp+40h] [rbp-10h]
  int *v8; // [rsp+48h] [rbp-8h]

  v8 = &v5;
  v7 = &v5;
  v6 = 7;
  v5 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (00000000004159E0) ----------------------------------------------------
int goodB2G_14()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-80h]
  __int64 v2; // [rsp+8h] [rbp-78h]
  __int64 v3; // [rsp+10h] [rbp-70h]
  __int64 v4; // [rsp+18h] [rbp-68h]
  __int64 v5; // [rsp+20h] [rbp-60h]
  char buf[16]; // [rsp+30h] [rbp-50h]
  __int16 s; // [rsp+40h] [rbp-40h]
  uint16_t v8; // [rsp+42h] [rbp-3Eh]
  int v9; // [rsp+44h] [rbp-3Ch]
  int v10; // [rsp+58h] [rbp-28h]
  int v11; // [rsp+5Ch] [rbp-24h]
  int v12; // [rsp+60h] [rbp-20h]
  int fd; // [rsp+64h] [rbp-1Ch]
  int *v14; // [rsp+68h] [rbp-18h]
  int *v15; // [rsp+70h] [rbp-10h]
  int v16; // [rsp+78h] [rbp-8h]
  int v17; // [rsp+7Ch] [rbp-4h]

  v15 = &v10;
  v14 = &v10;
  v10 = -1;
  v17 = -1;
  fd = -1;
  v16 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v16 = accept(fd, 0LL, 0LL);
      if ( v16 != -1 )
      {
        v12 = recv(v16, buf, 0xDuLL, 0);
        if ( v12 != -1 )
        {
          if ( v12 )
          {
            buf[v12] = 0;
            v17 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v16 != -1 )
    close(v16);
  *v15 = v17;
  v11 = *v14;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v11 < 0 || v11 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v11));
  return result;
}
// 4159E0: using guessed type char buf[16];

//----- (0000000000415B7F) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_32_good()
{
  goodG2B_55();
  return goodB2G_14();
}

//----- (0000000000415B99) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_53d_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000415BF0) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_53d_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000415C47) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_53d_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000415CA4) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_18_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  char *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (0000000000415D70) ----------------------------------------------------
int goodG2B_56()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  char *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (0000000000415E38) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_18_good()
{
  return goodG2B_56();
}

//----- (0000000000415E48) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_64b_badSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  __int64 v6; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+44h] [rbp-Ch]
  int *v8; // [rsp+48h] [rbp-8h]

  v8 = a1;
  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000415EB1) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_64b_goodG2BSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  __int64 v6; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+44h] [rbp-Ch]
  int *v8; // [rsp+48h] [rbp-8h]

  v8 = a1;
  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000415F1A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_64b_goodB2GSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  __int64 v6; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+44h] [rbp-Ch]
  int *v8; // [rsp+48h] [rbp-8h]

  v8 = a1;
  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000415F89) ----------------------------------------------------
__int64 __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 415F89: using guessed type char buf[16];

//----- (00000000004160AC) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_listen_socket_61b_goodG2BSource()
{
  return 7LL;
}

//----- (00000000004160BF) ----------------------------------------------------
__int64 __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 4160BF: using guessed type char buf[16];

//----- (00000000004161E2) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_04_bad()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  __int64 v14; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v16; // [rsp+D3h] [rbp-Dh]
  __int64 *v17; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  v17 = &v14;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *v17;
  v2 = v17[1];
  v3 = v17[2];
  v4 = v17[3];
  v5 = v17[4];
  v6 = v17[5];
  v7 = v17[6];
  v8 = v17[7];
  v9 = v17[8];
  v10 = v17[9];
  v11 = v17[10];
  v12 = v17[11];
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (00000000004162DB) ----------------------------------------------------
int goodG2B1_51()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (00000000004163DC) ----------------------------------------------------
int goodG2B2_51()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (00000000004164D1) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_04_good()
{
  goodG2B1_51();
  return goodG2B2_51();
}

//----- (00000000004164EB) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_67b_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000416548) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_67b_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (00000000004165A5) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_67b_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || v7 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000416608) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_10_bad()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  __int64 v3; // [rsp+C8h] [rbp-78h]
  char s; // [rsp+D0h] [rbp-70h]
  char v5; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( globalTrue )
    src = (char *)&v3;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D1B4: using guessed type int globalTrue;

//----- (0000000000416687) ----------------------------------------------------
int goodG2B1_52()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D368: using guessed type int globalFalse;

//----- (000000000041670E) ----------------------------------------------------
int goodG2B2_52()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( globalTrue )
    src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D1B4: using guessed type int globalTrue;

//----- (0000000000416789) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_10_good()
{
  goodG2B1_52();
  return goodG2B2_52();
}

//----- (00000000004167A3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_14_bad()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  __int64 *v7; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( globalFive == 5 )
    v7 = &v3;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *((_BYTE *)v7 + i);
  v2 = 0;
  return printLine(v1);
}
// 67D1B8: using guessed type int globalFive;
// 4167A3: using guessed type char var_F0[99];

//----- (000000000041684B) ----------------------------------------------------
int goodG2B1_53()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( globalFive == 5 )
    v6 = &s;
  else
    printLine("Benign, fixed string");
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 67D1B8: using guessed type int globalFive;
// 41684B: using guessed type char var_F0[99];

//----- (00000000004168FB) ----------------------------------------------------
int goodG2B2_53()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( globalFive == 5 )
    v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 67D1B8: using guessed type int globalFive;
// 4168FB: using guessed type char var_F0[99];

//----- (000000000041699F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_14_good()
{
  goodG2B1_53();
  return goodG2B2_53();
}

//----- (00000000004169B9) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_01_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  char *v5; // [rsp+68h] [rbp-28h]
  void *s; // [rsp+70h] [rbp-20h]
  unsigned __int64 i; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = (char *)s - 8;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v5[i];
  v4 = 0;
  return printLine(v2);
}
// 4169B9: using guessed type char var_90[99];

//----- (0000000000416A90) ----------------------------------------------------
int goodG2B_57()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  _BYTE *v5; // [rsp+68h] [rbp-28h]
  void *s; // [rsp+70h] [rbp-20h]
  unsigned __int64 i; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v5[i];
  v4 = 0;
  return printLine(v2);
}
// 416A90: using guessed type char var_90[99];

//----- (0000000000416B63) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_01_good()
{
  return goodG2B_57();
}

//----- (0000000000416B73) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_32_bad()
{
  char v1[99]; // [rsp+0h] [rbp-110h]
  char v2; // [rsp+63h] [rbp-ADh]
  __int64 v3; // [rsp+68h] [rbp-A8h]
  char s; // [rsp+70h] [rbp-A0h]
  char v5; // [rsp+D3h] [rbp-3Dh]
  char v6; // [rsp+E0h] [rbp-30h]
  __int64 v7; // [rsp+E8h] [rbp-28h]
  __int64 *v8; // [rsp+F0h] [rbp-20h]
  __int64 *v9; // [rsp+F8h] [rbp-18h]
  char *v10; // [rsp+100h] [rbp-10h]
  unsigned __int64 i; // [rsp+108h] [rbp-8h]

  v10 = &v6;
  v9 = (__int64 *)&v6;
  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v8 = &v3;
  *(_QWORD *)v10 = &v3;
  v7 = *v9;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *(_BYTE *)(v7 + i);
  v2 = 0;
  return printLine(v1);
}
// 416B73: using guessed type char var_110[99];

//----- (0000000000416C47) ----------------------------------------------------
int goodG2B_58()
{
  char v1[99]; // [rsp+0h] [rbp-110h]
  char v2; // [rsp+63h] [rbp-ADh]
  char s; // [rsp+70h] [rbp-A0h]
  char v4; // [rsp+D3h] [rbp-3Dh]
  char v5; // [rsp+E0h] [rbp-30h]
  __int64 v6; // [rsp+E8h] [rbp-28h]
  char *v7; // [rsp+F0h] [rbp-20h]
  __int64 *v8; // [rsp+F8h] [rbp-18h]
  char *v9; // [rsp+100h] [rbp-10h]
  unsigned __int64 i; // [rsp+108h] [rbp-8h]

  v9 = &v5;
  v8 = (__int64 *)&v5;
  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v7 = &s;
  *(_QWORD *)v9 = &s;
  v6 = *v8;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *(_BYTE *)(v6 + i);
  v2 = 0;
  return printLine(v1);
}
// 416C47: using guessed type char var_110[99];

//----- (0000000000416D17) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_32_good()
{
  return goodG2B_58();
}

//----- (0000000000416D27) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_54c_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_cpy_54d_badSink(a1);
}

//----- (0000000000416D41) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_54c_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_cpy_54d_goodG2BSink(a1);
}

//----- (0000000000416D5B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_18_bad()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  __int64 v3; // [rsp+C8h] [rbp-78h]
  char s; // [rsp+D0h] [rbp-70h]
  char v5; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = (char *)&v3;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000416DD1) ----------------------------------------------------
int goodG2B_59()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000416E43) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_18_good()
{
  return goodG2B_59();
}

//----- (0000000000416E53) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_01_bad()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  __int64 v3; // [rsp+C8h] [rbp-78h]
  char s; // [rsp+D0h] [rbp-70h]
  char v5; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = (char *)&v3;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000416EC8) ----------------------------------------------------
int goodG2B_60()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000416F39) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_01_good()
{
  return goodG2B_60();
}

//----- (0000000000416F49) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_53d_badSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (0000000000416FA2) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_53d_goodG2BSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (0000000000416FFB) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_64b_badSink(void **a1)
{
  char s; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  void *src; // [rsp+80h] [rbp-10h]
  void **v5; // [rsp+88h] [rbp-8h]

  v5 = a1;
  src = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, src, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (0000000000417067) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_64b_goodG2BSink(void **a1)
{
  char s; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  void *src; // [rsp+80h] [rbp-10h]
  void **v5; // [rsp+88h] [rbp-8h]

  v5 = a1;
  src = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, src, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (00000000004170D3) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_04_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 4170D3: using guessed type char buf[16];

//----- (0000000000417257) ----------------------------------------------------
int goodB2G1_14()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 417257: using guessed type char buf[16];

//----- (00000000004173ED) ----------------------------------------------------
int goodB2G2_14()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 4173ED: using guessed type char buf[16];

//----- (0000000000417577) ----------------------------------------------------
int goodG2B1_54()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (00000000004175F7) ----------------------------------------------------
int goodG2B2_54()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000041766B) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_04_good()
{
  goodB2G1_14();
  goodB2G2_14();
  goodG2B1_54();
  return goodG2B2_54();
}

//----- (0000000000417699) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_31_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-70h]
  __int64 v2; // [rsp+8h] [rbp-68h]
  __int64 v3; // [rsp+10h] [rbp-60h]
  __int64 v4; // [rsp+18h] [rbp-58h]
  __int64 v5; // [rsp+20h] [rbp-50h]
  char buf[16]; // [rsp+30h] [rbp-40h]
  __int16 s; // [rsp+40h] [rbp-30h]
  uint16_t v8; // [rsp+42h] [rbp-2Eh]
  int v9; // [rsp+44h] [rbp-2Ch]
  int v10; // [rsp+58h] [rbp-18h]
  int v11; // [rsp+5Ch] [rbp-14h]
  int v12; // [rsp+60h] [rbp-10h]
  int fd; // [rsp+64h] [rbp-Ch]
  int v14; // [rsp+68h] [rbp-8h]
  int v15; // [rsp+6Ch] [rbp-4h]

  v15 = -1;
  v14 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v14 = accept(fd, 0LL, 0LL);
      if ( v14 != -1 )
      {
        v12 = recv(v14, buf, 0xDuLL, 0);
        if ( v12 != -1 )
        {
          if ( v12 )
          {
            buf[v12] = 0;
            v15 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v14 != -1 )
    close(v14);
  v11 = v15;
  v10 = v15;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v15 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v10));
  return result;
}
// 417699: using guessed type char buf[16];

//----- (0000000000417813) ----------------------------------------------------
int goodG2B_61()
{
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  int v5; // [rsp+38h] [rbp-8h]
  int v6; // [rsp+3Ch] [rbp-4h]

  v6 = 7;
  v5 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (0000000000417881) ----------------------------------------------------
int goodB2G_15()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-70h]
  __int64 v2; // [rsp+8h] [rbp-68h]
  __int64 v3; // [rsp+10h] [rbp-60h]
  __int64 v4; // [rsp+18h] [rbp-58h]
  __int64 v5; // [rsp+20h] [rbp-50h]
  char buf[16]; // [rsp+30h] [rbp-40h]
  __int16 s; // [rsp+40h] [rbp-30h]
  uint16_t v8; // [rsp+42h] [rbp-2Eh]
  int v9; // [rsp+44h] [rbp-2Ch]
  int v10; // [rsp+58h] [rbp-18h]
  int v11; // [rsp+5Ch] [rbp-14h]
  int v12; // [rsp+60h] [rbp-10h]
  int fd; // [rsp+64h] [rbp-Ch]
  int v14; // [rsp+68h] [rbp-8h]
  int v15; // [rsp+6Ch] [rbp-4h]

  v15 = -1;
  v14 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v14 = accept(fd, 0LL, 0LL);
      if ( v14 != -1 )
      {
        v12 = recv(v14, buf, 0xDuLL, 0);
        if ( v12 != -1 )
        {
          if ( v12 )
          {
            buf[v12] = 0;
            v15 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v14 != -1 )
    close(v14);
  v11 = v15;
  v10 = v15;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v15 < 0 || v10 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v10));
  return result;
}
// 417881: using guessed type char buf[16];

//----- (0000000000417A01) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_31_good()
{
  goodG2B_61();
  return goodB2G_15();
}

//----- (0000000000417A1B) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_67b_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v4 = a1;
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v4 + i);
  v3 = 0;
  return printLine(s);
}
// 417A1B: using guessed type char s[99];

//----- (0000000000417A95) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_67b_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v4 = a1;
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v4 + i);
  v3 = 0;
  return printLine(s);
}
// 417A95: using guessed type char s[99];

//----- (0000000000417B0F) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_63b_badSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000417B70) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_63b_goodG2BSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000417BD1) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_63b_goodB2GSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000417C38) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_03_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  char *src; // [rsp+D0h] [rbp-10h]
  void *s; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000417CE8) ----------------------------------------------------
int goodG2B1_55()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  char *src; // [rsp+D0h] [rbp-10h]
  void *s; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000417D94) ----------------------------------------------------
int goodG2B2_55()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  char *src; // [rsp+D0h] [rbp-10h]
  void *s; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000417E40) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_03_good()
{
  goodG2B1_55();
  return goodG2B2_55();
}

//----- (0000000000417E5A) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_52_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memmove_52b_badSink((char *)s - 8);
}

//----- (0000000000417ED1) ----------------------------------------------------
int goodG2B_62()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memmove_52b_goodG2BSink(s);
}

//----- (0000000000417F44) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_52_good()
{
  return goodG2B_62();
}

//----- (0000000000417F54) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_09_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  __int64 v4; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v6; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  if ( GLOBAL_CONST_TRUE )
    src = (char *)&v4;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000417FE9) ----------------------------------------------------
int goodG2B1_56()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}
// 462E04: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000418086) ----------------------------------------------------
int goodG2B2_56()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( GLOBAL_CONST_TRUE )
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000418117) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_09_good()
{
  goodG2B1_56();
  return goodG2B2_56();
}

//----- (0000000000418131) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_32_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-A0h]
  __int64 v3; // [rsp+8h] [rbp-98h]
  __int64 v4; // [rsp+10h] [rbp-90h]
  __int64 v5; // [rsp+18h] [rbp-88h]
  __int64 v6; // [rsp+20h] [rbp-80h]
  __int64 v7; // [rsp+28h] [rbp-78h]
  __int64 v8; // [rsp+30h] [rbp-70h]
  __int64 v9; // [rsp+38h] [rbp-68h]
  __int64 v10; // [rsp+40h] [rbp-60h]
  __int64 v11; // [rsp+48h] [rbp-58h]
  __int64 v12; // [rsp+50h] [rbp-50h]
  __int64 v13; // [rsp+58h] [rbp-48h]
  int v14; // [rsp+60h] [rbp-40h]
  char v15; // [rsp+70h] [rbp-30h]
  __int64 v16; // [rsp+78h] [rbp-28h]
  char *v17; // [rsp+80h] [rbp-20h]
  void *s; // [rsp+88h] [rbp-18h]
  __int64 *v19; // [rsp+90h] [rbp-10h]
  char *v20; // [rsp+98h] [rbp-8h]

  v20 = &v15;
  v19 = (__int64 *)&v15;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v17 = (char *)s - 8;
  *(_QWORD *)v20 = (char *)s - 8;
  v16 = *v19;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v16;
  v3 = *(_QWORD *)(v16 + 8);
  v4 = *(_QWORD *)(v16 + 16);
  v5 = *(_QWORD *)(v16 + 24);
  v6 = *(_QWORD *)(v16 + 32);
  v7 = *(_QWORD *)(v16 + 40);
  v8 = *(_QWORD *)(v16 + 48);
  v9 = *(_QWORD *)(v16 + 56);
  v10 = *(_QWORD *)(v16 + 64);
  v11 = *(_QWORD *)(v16 + 72);
  v12 = *(_QWORD *)(v16 + 80);
  v13 = *(_QWORD *)(v16 + 88);
  v14 = *(_DWORD *)(v16 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (0000000000418275) ----------------------------------------------------
int goodG2B_63()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-A0h]
  __int64 v3; // [rsp+8h] [rbp-98h]
  __int64 v4; // [rsp+10h] [rbp-90h]
  __int64 v5; // [rsp+18h] [rbp-88h]
  __int64 v6; // [rsp+20h] [rbp-80h]
  __int64 v7; // [rsp+28h] [rbp-78h]
  __int64 v8; // [rsp+30h] [rbp-70h]
  __int64 v9; // [rsp+38h] [rbp-68h]
  __int64 v10; // [rsp+40h] [rbp-60h]
  __int64 v11; // [rsp+48h] [rbp-58h]
  __int64 v12; // [rsp+50h] [rbp-50h]
  __int64 v13; // [rsp+58h] [rbp-48h]
  int v14; // [rsp+60h] [rbp-40h]
  char v15; // [rsp+70h] [rbp-30h]
  __int64 v16; // [rsp+78h] [rbp-28h]
  void *v17; // [rsp+80h] [rbp-20h]
  void *s; // [rsp+88h] [rbp-18h]
  __int64 *v19; // [rsp+90h] [rbp-10h]
  char *v20; // [rsp+98h] [rbp-8h]

  v20 = &v15;
  v19 = (__int64 *)&v15;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v17 = s;
  *(_QWORD *)v20 = s;
  v16 = *v19;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v16;
  v3 = *(_QWORD *)(v16 + 8);
  v4 = *(_QWORD *)(v16 + 16);
  v5 = *(_QWORD *)(v16 + 24);
  v6 = *(_QWORD *)(v16 + 32);
  v7 = *(_QWORD *)(v16 + 40);
  v8 = *(_QWORD *)(v16 + 48);
  v9 = *(_QWORD *)(v16 + 56);
  v10 = *(_QWORD *)(v16 + 64);
  v11 = *(_QWORD *)(v16 + 72);
  v12 = *(_QWORD *)(v16 + 80);
  v13 = *(_QWORD *)(v16 + 88);
  v14 = *(_DWORD *)(v16 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (00000000004183B5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_32_good()
{
  return goodG2B_63();
}

//----- (00000000004183C5) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_51b_badSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (0000000000418415) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_51b_goodG2BSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (0000000000418465) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_64_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE127_Buffer_Underread__CWE839_fscanf_64b_badSink(&v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041849F) ----------------------------------------------------
int goodG2B_64()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 7;
  return CWE127_Buffer_Underread__CWE839_fscanf_64b_goodG2BSink(&v1);
}

//----- (00000000004184C3) ----------------------------------------------------
int goodB2G_16()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE127_Buffer_Underread__CWE839_fscanf_64b_goodB2GSink(&v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004184FD) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_64_good()
{
  goodG2B_64();
  return goodB2G_16();
}

//----- (0000000000418517) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_16_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (00000000004185D6) ----------------------------------------------------
int goodG2B_65()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (0000000000418691) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_16_good()
{
  return goodG2B_65();
}

//----- (00000000004186A1) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_18_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  char *src; // [rsp+D0h] [rbp-10h]
  void *s; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000418752) ----------------------------------------------------
int goodG2B_66()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  char *src; // [rsp+D0h] [rbp-10h]
  void *s; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (00000000004187FF) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_18_good()
{
  return goodG2B_66();
}

//----- (000000000041880F) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_67_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9;
  return CWE127_Buffer_Underread__CWE839_listen_socket_67b_badSink(v9);
}
// 41880F: using guessed type char buf[16];

//----- (0000000000418943) ----------------------------------------------------
int goodG2B_67()
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_67b_goodG2BSink(7);
}

//----- (000000000041896B) ----------------------------------------------------
int goodB2G_17()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int fd; // [rsp+34h] [rbp-Ch]
  int v8; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  v5 = v9;
  return CWE127_Buffer_Underread__CWE839_listen_socket_67b_goodB2GSink(v9);
}
// 41896B: using guessed type char buf[16];

//----- (0000000000418A9F) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_67_good()
{
  goodG2B_67();
  return goodB2G_17();
}

//----- (0000000000418AB9) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_53b_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_loop_53c_badSink(a1);
}

//----- (0000000000418AD3) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_53b_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_loop_53c_goodG2BSink(a1);
}

//----- (0000000000418AED) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_54d_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_memcpy_54e_badSink(a1);
}

//----- (0000000000418B07) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_54d_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_memcpy_54e_goodG2BSink(a1);
}

//----- (0000000000418B21) ----------------------------------------------------
__int64 staticReturnsTrue_3()
{
  return 1LL;
}

//----- (0000000000418B2C) ----------------------------------------------------
__int64 staticReturnsFalse_3()
{
  return 0LL;
}

//----- (0000000000418B37) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_08_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( (unsigned int)staticReturnsTrue_3() )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_3();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v9 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v9));
  }
  return result;
}

//----- (0000000000418BFB) ----------------------------------------------------
int goodB2G1_15()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( (unsigned int)staticReturnsTrue_3() )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)staticReturnsFalse_3() )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (0000000000418CD1) ----------------------------------------------------
int goodB2G2_15()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( (unsigned int)staticReturnsTrue_3() )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticReturnsTrue_3();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v9 < 0 || v9 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v9));
  }
  return result;
}

//----- (0000000000418D9B) ----------------------------------------------------
int goodG2B1_57()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)staticReturnsFalse_3() )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = staticReturnsTrue_3();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (0000000000418E25) ----------------------------------------------------
int goodG2B2_57()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)staticReturnsTrue_3() )
    v6 = 7;
  result = staticReturnsTrue_3();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (0000000000418EA3) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_08_good()
{
  goodB2G1_15();
  goodB2G2_15();
  goodG2B1_57();
  return goodG2B2_57();
}

//----- (0000000000418ED1) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_54b_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_ncpy_54c_badSink(a1);
}

//----- (0000000000418EEB) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_54b_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_ncpy_54c_goodG2BSink(a1);
}

//----- (0000000000418F05) ----------------------------------------------------
__int64 staticReturnsTrue_4()
{
  return 1LL;
}

//----- (0000000000418F10) ----------------------------------------------------
__int64 staticReturnsFalse_4()
{
  return 0LL;
}

//----- (0000000000418F1B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_08_bad()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  __int64 v3; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( (unsigned int)staticReturnsTrue_4() )
    src = &v3;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (0000000000418FA7) ----------------------------------------------------
int goodG2B1_58()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( (unsigned int)staticReturnsFalse_4() )
    printLine("Benign, fixed string");
  else
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (000000000041903B) ----------------------------------------------------
int goodG2B2_58()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_4() )
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (00000000004190C3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_08_good()
{
  goodG2B1_58();
  return goodG2B2_58();
}

//----- (00000000004190DD) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_67b_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]
  __int64 v15; // [rsp+78h] [rbp-8h]

  v15 = a1;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)v15;
  v3 = *(_QWORD *)(v15 + 8);
  v4 = *(_QWORD *)(v15 + 16);
  v5 = *(_QWORD *)(v15 + 24);
  v6 = *(_QWORD *)(v15 + 32);
  v7 = *(_QWORD *)(v15 + 40);
  v8 = *(_QWORD *)(v15 + 48);
  v9 = *(_QWORD *)(v15 + 56);
  v10 = *(_QWORD *)(v15 + 64);
  v11 = *(_QWORD *)(v15 + 72);
  v12 = *(_QWORD *)(v15 + 80);
  v13 = *(_QWORD *)(v15 + 88);
  v14 = *(_DWORD *)(v15 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (0000000000419186) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_67b_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]
  __int64 v15; // [rsp+78h] [rbp-8h]

  v15 = a1;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)v15;
  v3 = *(_QWORD *)(v15 + 8);
  v4 = *(_QWORD *)(v15 + 16);
  v5 = *(_QWORD *)(v15 + 24);
  v6 = *(_QWORD *)(v15 + 32);
  v7 = *(_QWORD *)(v15 + 40);
  v8 = *(_QWORD *)(v15 + 48);
  v9 = *(_QWORD *)(v15 + 56);
  v10 = *(_QWORD *)(v15 + 64);
  v11 = *(_QWORD *)(v15 + 72);
  v12 = *(_QWORD *)(v15 + 80);
  v13 = *(_QWORD *)(v15 + 88);
  v14 = *(_DWORD *)(v15 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000041922F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_04_bad()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  __int64 *v7; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v7 = &v3;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *((_BYTE *)v7 + i);
  v2 = 0;
  return printLine(v1);
}
// 41922F: using guessed type char var_F0[99];

//----- (00000000004192D5) ----------------------------------------------------
int goodG2B1_59()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 4192D5: using guessed type char var_F0[99];

//----- (0000000000419383) ----------------------------------------------------
int goodG2B2_59()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 419383: using guessed type char var_F0[99];

//----- (0000000000419425) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_04_good()
{
  goodG2B1_59();
  return goodG2B2_59();
}

//----- (000000000041943F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_31_bad()
{
  char v1[99]; // [rsp+0h] [rbp-100h]
  char v2; // [rsp+63h] [rbp-9Dh]
  __int64 v3; // [rsp+68h] [rbp-98h]
  char s; // [rsp+70h] [rbp-90h]
  char v5; // [rsp+D3h] [rbp-2Dh]
  __int64 *v6; // [rsp+E0h] [rbp-20h]
  __int64 *v7; // [rsp+E8h] [rbp-18h]
  __int64 *v8; // [rsp+F0h] [rbp-10h]
  unsigned __int64 i; // [rsp+F8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v8 = &v3;
  v7 = &v3;
  v6 = &v3;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *((_BYTE *)v6 + i);
  v2 = 0;
  return printLine(v1);
}
// 41943F: using guessed type char var_100[99];

//----- (00000000004194F2) ----------------------------------------------------
int goodG2B_68()
{
  char v1[99]; // [rsp+0h] [rbp-100h]
  char v2; // [rsp+63h] [rbp-9Dh]
  char s; // [rsp+70h] [rbp-90h]
  char v4; // [rsp+D3h] [rbp-2Dh]
  char *v5; // [rsp+E0h] [rbp-20h]
  char *v6; // [rsp+E8h] [rbp-18h]
  char *v7; // [rsp+F0h] [rbp-10h]
  unsigned __int64 i; // [rsp+F8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v7 = &s;
  v6 = &s;
  v5 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v5[i];
  v2 = 0;
  return printLine(v1);
}
// 4194F2: using guessed type char var_100[99];

//----- (00000000004195A1) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_31_good()
{
  return goodG2B_68();
}

//----- (00000000004195B1) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_22_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = CWE127_Buffer_Underread__CWE839_listen_socket_22_badGlobal;
  if ( CWE127_Buffer_Underread__CWE839_listen_socket_22_badGlobal )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D278: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_22_badGlobal;

//----- (0000000000419612) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_22_goodB2G1Sink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  if ( CWE127_Buffer_Underread__CWE839_listen_socket_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}
// 67D27C: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_22_goodB2G1Global;

//----- (0000000000419685) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_22_goodB2G2Sink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = CWE127_Buffer_Underread__CWE839_listen_socket_22_goodB2G2Global;
  if ( CWE127_Buffer_Underread__CWE839_listen_socket_22_goodB2G2Global )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 < 0 || a1 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D280: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_22_goodB2G2Global;

//----- (00000000004196EC) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_22_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = CWE127_Buffer_Underread__CWE839_listen_socket_22_goodG2BGlobal;
  if ( CWE127_Buffer_Underread__CWE839_listen_socket_22_goodG2BGlobal )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D284: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_22_goodG2BGlobal;

//----- (000000000041974D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_11_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsTrue() )
    src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (0000000000419826) ----------------------------------------------------
int goodG2B1_60()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (0000000000419907) ----------------------------------------------------
int goodG2B2_60()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsTrue() )
    src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (00000000004199DC) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_11_good()
{
  goodG2B1_60();
  return goodG2B2_60();
}

//----- (00000000004199F6) ----------------------------------------------------
__int64 staticReturnsTrue_5()
{
  return 1LL;
}

//----- (0000000000419A01) ----------------------------------------------------
__int64 staticReturnsFalse_5()
{
  return 0LL;
}

//----- (0000000000419A0C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_08_bad()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  __int64 v3; // [rsp+C8h] [rbp-78h]
  char s; // [rsp+D0h] [rbp-70h]
  char v5; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( (unsigned int)staticReturnsTrue_5() )
    src = (char *)&v3;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000419A8F) ----------------------------------------------------
int goodG2B1_61()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( (unsigned int)staticReturnsFalse_5() )
    printLine("Benign, fixed string");
  else
    src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000419B1A) ----------------------------------------------------
int goodG2B2_61()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_5() )
    src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000419B99) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_08_good()
{
  goodG2B1_61();
  return goodG2B2_61();
}

//----- (0000000000419BB3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_13_bad()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  __int64 v14; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v16; // [rsp+D3h] [rbp-Dh]
  __int64 *v17; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v17 = &v14;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *v17;
  v2 = v17[1];
  v3 = v17[2];
  v4 = v17[3];
  v5 = v17[4];
  v6 = v17[5];
  v7 = v17[6];
  v8 = v17[7];
  v9 = v17[8];
  v10 = v17[9];
  v11 = v17[10];
  v12 = v17[11];
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000419CAE) ----------------------------------------------------
int goodG2B1_62()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v16 = &s;
  else
    printLine("Benign, fixed string");
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000419DB1) ----------------------------------------------------
int goodG2B2_62()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000419EA8) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_13_good()
{
  goodG2B1_62();
  return goodG2B2_62();
}

//----- (0000000000419EC2) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_12_bad()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v7; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v7 = (char *)&v3;
  else
    v7 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v7[i];
  v2 = 0;
  return printLine(v1);
}
// 419EC2: using guessed type char var_F0[99];

//----- (0000000000419F77) ----------------------------------------------------
int goodG2B_69()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  globalReturnsTrueOrFalse();
  v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 419F77: using guessed type char var_F0[99];

//----- (000000000041A028) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_12_good()
{
  return goodG2B_69();
}

//----- (000000000041A038) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_64_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_memmove_64b_badSink((void **)&v3);
}

//----- (000000000041A074) ----------------------------------------------------
int goodG2B_70()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_memmove_64b_goodG2BSink((void **)&v3);
}

//----- (000000000041A0AC) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_64_good()
{
  return goodG2B_70();
}

//----- (000000000041A0BC) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_12_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    src = (char *)s - 8;
  else
    src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000041A184) ----------------------------------------------------
int goodG2B_71()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  globalReturnsTrueOrFalse();
  src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000041A248) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_12_good()
{
  return goodG2B_71();
}

//----- (000000000041A258) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_63_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE127_Buffer_Underread__CWE839_connect_socket_63b_badSink(&v5);
}
// 41A258: using guessed type char buf[16];

//----- (000000000041A342) ----------------------------------------------------
int goodG2B_72()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 7;
  return CWE127_Buffer_Underread__CWE839_connect_socket_63b_goodG2BSink(&v1);
}

//----- (000000000041A366) ----------------------------------------------------
int goodB2G_18()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE127_Buffer_Underread__CWE839_connect_socket_63b_goodB2GSink(&v5);
}
// 41A366: using guessed type char buf[16];

//----- (000000000041A450) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_63_good()
{
  goodG2B_72();
  return goodB2G_18();
}

//----- (000000000041A46A) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_67_bad()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 *v3; // [rsp+70h] [rbp-10h]
  __int64 *v4; // [rsp+78h] [rbp-8h]
  __int64 savedregs; // [rsp+80h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v4 = &savedregs - 17;
  v3 = &savedregs - 17;
  return CWE127_Buffer_Underread__char_declare_loop_67b_badSink((__int64)(&savedregs - 17));
}

//----- (000000000041A4AE) ----------------------------------------------------
int goodG2B_73()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  char *v3; // [rsp+70h] [rbp-10h]
  char *v4; // [rsp+78h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v4 = &s;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_loop_67b_goodG2BSink((__int64)&s);
}

//----- (000000000041A4EE) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_67_good()
{
  return goodG2B_73();
}

//----- (000000000041A4FE) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_07_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  __int64 v4; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v6; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  if ( staticFive == 5 )
    src = (char *)&v4;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}
// 67D14C: using guessed type int staticFive;

//----- (000000000041A594) ----------------------------------------------------
int goodG2B1_63()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( staticFive == 5 )
    src = &s;
  else
    printLine("Benign, fixed string");
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}
// 67D14C: using guessed type int staticFive;

//----- (000000000041A632) ----------------------------------------------------
int goodG2B2_63()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( staticFive == 5 )
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}
// 67D14C: using guessed type int staticFive;

//----- (000000000041A6C4) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_07_good()
{
  goodG2B1_63();
  return goodG2B2_63();
}

//----- (000000000041A6DE) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_32_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+34h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-18h]
  int v8; // [rsp+3Ch] [rbp-14h]
  int *v9; // [rsp+40h] [rbp-10h]
  int *v10; // [rsp+48h] [rbp-8h]

  v10 = &v7;
  v9 = &v7;
  v7 = -1;
  v6 = -1;
  __isoc99_fscanf(stdin, "%d", &v6);
  *v10 = v6;
  v8 = *v9;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v8 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v8));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041A781) ----------------------------------------------------
int goodG2B_74()
{
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  int v5; // [rsp+34h] [rbp-1Ch]
  int v6; // [rsp+3Ch] [rbp-14h]
  int *v7; // [rsp+40h] [rbp-10h]
  int *v8; // [rsp+48h] [rbp-8h]

  v8 = &v5;
  v7 = &v5;
  v6 = 7;
  v5 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000041A80E) ----------------------------------------------------
int goodB2G_19()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  int v6; // [rsp+34h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-18h]
  int v8; // [rsp+3Ch] [rbp-14h]
  int *v9; // [rsp+40h] [rbp-10h]
  int *v10; // [rsp+48h] [rbp-8h]

  v10 = &v7;
  v9 = &v7;
  v7 = -1;
  v6 = -1;
  __isoc99_fscanf(stdin, "%d", &v6);
  *v10 = v6;
  v8 = *v9;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v8 < 0 || v8 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v8));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041A8B7) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_32_good()
{
  goodG2B_74();
  return goodB2G_19();
}

//----- (000000000041A8D1) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_16_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000041A97B) ----------------------------------------------------
int goodB2G_20()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000041AA2B) ----------------------------------------------------
int goodG2B_75()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000041AA8F) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_16_good()
{
  goodB2G_20();
  return goodG2B_75();
}

//----- (000000000041AAA9) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_64b_badSink(__int64 *a1)
{
  __int64 s; // [rsp+10h] [rbp-80h]
  __int64 v3; // [rsp+18h] [rbp-78h]
  __int64 v4; // [rsp+20h] [rbp-70h]
  __int64 v5; // [rsp+28h] [rbp-68h]
  __int64 v6; // [rsp+30h] [rbp-60h]
  __int64 v7; // [rsp+38h] [rbp-58h]
  __int64 v8; // [rsp+40h] [rbp-50h]
  __int64 v9; // [rsp+48h] [rbp-48h]
  __int64 v10; // [rsp+50h] [rbp-40h]
  __int64 v11; // [rsp+58h] [rbp-38h]
  __int64 v12; // [rsp+60h] [rbp-30h]
  __int64 v13; // [rsp+68h] [rbp-28h]
  int v14; // [rsp+70h] [rbp-20h]
  __int64 v15; // [rsp+80h] [rbp-10h]
  __int64 *v16; // [rsp+88h] [rbp-8h]

  v16 = a1;
  v15 = *a1;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)v15;
  v3 = *(_QWORD *)(v15 + 8);
  v4 = *(_QWORD *)(v15 + 16);
  v5 = *(_QWORD *)(v15 + 24);
  v6 = *(_QWORD *)(v15 + 32);
  v7 = *(_QWORD *)(v15 + 40);
  v8 = *(_QWORD *)(v15 + 48);
  v9 = *(_QWORD *)(v15 + 56);
  v10 = *(_QWORD *)(v15 + 64);
  v11 = *(_QWORD *)(v15 + 72);
  v12 = *(_QWORD *)(v15 + 80);
  v13 = *(_QWORD *)(v15 + 88);
  v14 = *(_DWORD *)(v15 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000041AB66) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_64b_goodG2BSink(__int64 *a1)
{
  __int64 s; // [rsp+10h] [rbp-80h]
  __int64 v3; // [rsp+18h] [rbp-78h]
  __int64 v4; // [rsp+20h] [rbp-70h]
  __int64 v5; // [rsp+28h] [rbp-68h]
  __int64 v6; // [rsp+30h] [rbp-60h]
  __int64 v7; // [rsp+38h] [rbp-58h]
  __int64 v8; // [rsp+40h] [rbp-50h]
  __int64 v9; // [rsp+48h] [rbp-48h]
  __int64 v10; // [rsp+50h] [rbp-40h]
  __int64 v11; // [rsp+58h] [rbp-38h]
  __int64 v12; // [rsp+60h] [rbp-30h]
  __int64 v13; // [rsp+68h] [rbp-28h]
  int v14; // [rsp+70h] [rbp-20h]
  __int64 v15; // [rsp+80h] [rbp-10h]
  __int64 *v16; // [rsp+88h] [rbp-8h]

  v16 = a1;
  v15 = *a1;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)v15;
  v3 = *(_QWORD *)(v15 + 8);
  v4 = *(_QWORD *)(v15 + 16);
  v5 = *(_QWORD *)(v15 + 24);
  v6 = *(_QWORD *)(v15 + 32);
  v7 = *(_QWORD *)(v15 + 40);
  v8 = *(_QWORD *)(v15 + 48);
  v9 = *(_QWORD *)(v15 + 56);
  v10 = *(_QWORD *)(v15 + 64);
  v11 = *(_QWORD *)(v15 + 72);
  v12 = *(_QWORD *)(v15 + 80);
  v13 = *(_QWORD *)(v15 + 88);
  v14 = *(_DWORD *)(v15 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000041AC23) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_16_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  __int64 v4; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v6; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  src = (char *)&v4;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (000000000041ACAF) ----------------------------------------------------
int goodG2B_76()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (000000000041AD37) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_16_good()
{
  return goodG2B_76();
}

//----- (000000000041AD47) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_34_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v11 = atoi(s);
  else
    printLine("fgets() failed.");
  v9 = v11;
  v10 = v11;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v11 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v10));
  return result;
}

//----- (000000000041ADFB) ----------------------------------------------------
int goodG2B_77()
{
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  int v5; // [rsp+30h] [rbp-10h]
  int v6; // [rsp+3Ch] [rbp-4h]

  v6 = 7;
  v5 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000041AE69) ----------------------------------------------------
int goodB2G_21()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+40h] [rbp-10h]
  int v10; // [rsp+48h] [rbp-8h]
  int v11; // [rsp+4Ch] [rbp-4h]

  v11 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v11 = atoi(s);
  else
    printLine("fgets() failed.");
  v9 = v11;
  v10 = v11;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v11 < 0 || v10 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v10));
  return result;
}

//----- (000000000041AF23) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_34_good()
{
  goodG2B_77();
  return goodB2G_21();
}

//----- (000000000041AF3D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_67_bad()
{
  void *v0; // rsp
  char v2; // [rsp+Fh] [rbp-11h]
  char *v3; // [rsp+10h] [rbp-10h]
  void *s; // [rsp+18h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v2 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v2 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v3 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_loop_67b_badSink((__int64)s - 8);
}

//----- (000000000041AFBC) ----------------------------------------------------
int goodG2B_78()
{
  void *v0; // rsp
  char v2; // [rsp+Fh] [rbp-11h]
  void *v3; // [rsp+10h] [rbp-10h]
  void *s; // [rsp+18h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v2 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v2 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v3 = s;
  return CWE127_Buffer_Underread__char_alloca_loop_67b_goodG2BSink((__int64)s);
}

//----- (000000000041B037) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_67_good()
{
  return goodG2B_78();
}

//----- (000000000041B047) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_54_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_ncpy_54b_badSink((const char *)&savedregs - 120);
}

//----- (000000000041B083) ----------------------------------------------------
int goodG2B_79()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_ncpy_54b_goodG2BSink(&s);
}

//----- (000000000041B0BB) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_54_good()
{
  return goodG2B_79();
}

//----- (000000000041B0CB) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_13_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  return result;
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;
// 41B0CB: using guessed type char buf[16];

//----- (000000000041B20D) ----------------------------------------------------
int goodB2G1_16()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;
// 41B20D: using guessed type char buf[16];

//----- (000000000041B361) ----------------------------------------------------
int goodB2G2_16()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 < 0 || v12 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  return result;
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;
// 41B361: using guessed type char buf[16];

//----- (000000000041B4A9) ----------------------------------------------------
int goodG2B1_64()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v6 = 7;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041B52D) ----------------------------------------------------
int goodG2B2_64()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v6 = 7;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041B5A5) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_13_good()
{
  goodB2G1_16();
  goodB2G2_16();
  goodG2B1_64();
  return goodG2B2_64();
}

//----- (000000000041B5D3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_01_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  char *v15; // [rsp+70h] [rbp-10h]
  void *s; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v15 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v15;
  v3 = *((_QWORD *)v15 + 1);
  v4 = *((_QWORD *)v15 + 2);
  v5 = *((_QWORD *)v15 + 3);
  v6 = *((_QWORD *)v15 + 4);
  v7 = *((_QWORD *)v15 + 5);
  v8 = *((_QWORD *)v15 + 6);
  v9 = *((_QWORD *)v15 + 7);
  v10 = *((_QWORD *)v15 + 8);
  v11 = *((_QWORD *)v15 + 9);
  v12 = *((_QWORD *)v15 + 10);
  v13 = *((_QWORD *)v15 + 11);
  v14 = *((_DWORD *)v15 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (000000000041B6D1) ----------------------------------------------------
int goodG2B_80()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  _QWORD *v15; // [rsp+70h] [rbp-10h]
  void *s; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v15 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v15;
  v3 = v15[1];
  v4 = v15[2];
  v5 = v15[3];
  v6 = v15[4];
  v7 = v15[5];
  v8 = v15[6];
  v9 = v15[7];
  v10 = v15[8];
  v11 = v15[9];
  v12 = v15[10];
  v13 = v15[11];
  v14 = *((_DWORD *)v15 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (000000000041B7CB) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_01_good()
{
  return goodG2B_80();
}

//----- (000000000041B7DB) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_67b_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000041B838) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_67b_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000041B895) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_67b_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || v7 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000041B8F8) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_63_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_cpy_63b_badSink(&v2);
}

//----- (000000000041B96F) ----------------------------------------------------
int goodG2B_81()
{
  void *v0; // rsp
  void *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = s;
  return CWE127_Buffer_Underread__char_alloca_cpy_63b_goodG2BSink((char **)&v2);
}

//----- (000000000041B9E2) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_63_good()
{
  return goodG2B_81();
}

//----- (000000000041B9F2) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_64_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_loop_64b_badSink((__int64 *)&v3);
}

//----- (000000000041BA2E) ----------------------------------------------------
int goodG2B_82()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_loop_64b_goodG2BSink((__int64 *)&v3);
}

//----- (000000000041BA66) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_64_good()
{
  return goodG2B_82();
}

//----- (000000000041BA76) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_51_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_ncpy_51b_badSink((const char *)&savedregs - 120);
}

//----- (000000000041BAB2) ----------------------------------------------------
int goodG2B_83()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_ncpy_51b_goodG2BSink(&s);
}

//----- (000000000041BAEA) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_51_good()
{
  return goodG2B_83();
}

//----- (000000000041BAFA) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_14_bad()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  __int64 v3; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( globalFive == 5 )
    src = &v3;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000041BB83) ----------------------------------------------------
int goodG2B1_65()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( globalFive == 5 )
    src = &s;
  else
    printLine("Benign, fixed string");
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000041BC14) ----------------------------------------------------
int goodG2B2_65()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( globalFive == 5 )
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000041BC99) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_14_good()
{
  goodG2B1_65();
  return goodG2B2_65();
}

//----- (000000000041BCB3) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_10_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v6);
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D1B4: using guessed type int globalTrue;

//----- (000000000041BD41) ----------------------------------------------------
int goodB2G1_17()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v6);
  if ( globalFalse )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D1B4: using guessed type int globalTrue;
// 67D368: using guessed type int globalFalse;

//----- (000000000041BDE2) ----------------------------------------------------
int goodB2G2_17()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalTrue )
    __isoc99_fscanf(stdin, "%d", &v6);
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 < 0 || v6 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D1B4: using guessed type int globalTrue;

//----- (000000000041BE77) ----------------------------------------------------
int goodG2B1_66()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1B4: using guessed type int globalTrue;
// 67D368: using guessed type int globalFalse;

//----- (000000000041BEF9) ----------------------------------------------------
int goodG2B2_66()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalTrue )
    v6 = 7;
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1B4: using guessed type int globalTrue;

//----- (000000000041BF6F) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_10_good()
{
  goodB2G1_17();
  goodB2G2_17();
  goodG2B1_66();
  return goodG2B2_66();
}

//----- (000000000041BF9D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_32_bad()
{
  char dest; // [rsp+0h] [rbp-100h]
  char v2; // [rsp+63h] [rbp-9Dh]
  __int64 v3; // [rsp+68h] [rbp-98h]
  char s; // [rsp+70h] [rbp-90h]
  char v5; // [rsp+D3h] [rbp-2Dh]
  char v6; // [rsp+D8h] [rbp-28h]
  void *src; // [rsp+E0h] [rbp-20h]
  __int64 *v8; // [rsp+E8h] [rbp-18h]
  void **v9; // [rsp+F0h] [rbp-10h]
  char *v10; // [rsp+F8h] [rbp-8h]

  v10 = &v6;
  v9 = (void **)&v6;
  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v8 = &v3;
  *(_QWORD *)v10 = &v3;
  src = *v9;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (000000000041C058) ----------------------------------------------------
int goodG2B_84()
{
  char dest; // [rsp+0h] [rbp-100h]
  char v2; // [rsp+63h] [rbp-9Dh]
  char s; // [rsp+70h] [rbp-90h]
  char v4; // [rsp+D3h] [rbp-2Dh]
  char v5; // [rsp+D8h] [rbp-28h]
  void *src; // [rsp+E0h] [rbp-20h]
  char *v7; // [rsp+E8h] [rbp-18h]
  void **v8; // [rsp+F0h] [rbp-10h]
  char *v9; // [rsp+F8h] [rbp-8h]

  v9 = &v5;
  v8 = (void **)&v5;
  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v7 = &s;
  *(_QWORD *)v9 = &s;
  src = *v8;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (000000000041C10F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_32_good()
{
  return goodG2B_84();
}

//----- (000000000041C11F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_51_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_loop_51b_badSink((__int64)s - 8);
}

//----- (000000000041C196) ----------------------------------------------------
int goodG2B_85()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_loop_51b_goodG2BSink((__int64)s);
}

//----- (000000000041C209) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_51_good()
{
  return goodG2B_85();
}

//----- (000000000041C219) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_51_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memmove_51b_badSink((char *)s - 8);
}

//----- (000000000041C290) ----------------------------------------------------
int goodG2B_86()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memmove_51b_goodG2BSink(s);
}

//----- (000000000041C303) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_51_good()
{
  return goodG2B_86();
}

//----- (000000000041C313) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_54c_badSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_alloca_memmove_54d_badSink(a1);
}

//----- (000000000041C32D) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_54c_goodG2BSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_alloca_memmove_54d_goodG2BSink(a1);
}

//----- (000000000041C347) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_54e_badSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000041C397) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_54e_goodG2BSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000041C3E7) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_17_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  char *src; // [rsp+70h] [rbp-20h]
  int i; // [rsp+7Ch] [rbp-14h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  for ( i = 0; i <= 0; ++i )
    src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000041C4C5) ----------------------------------------------------
int goodG2B_87()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  char *src; // [rsp+70h] [rbp-20h]
  int i; // [rsp+7Ch] [rbp-14h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  for ( i = 0; i <= 0; ++i )
    src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000041C59F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_17_good()
{
  return goodG2B_87();
}

//----- (000000000041C5AF) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_64b_badSink(char **a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-80h]
  char v4; // [rsp+73h] [rbp-1Dh]
  char *src; // [rsp+80h] [rbp-10h]
  char **v6; // [rsp+88h] [rbp-8h]

  v6 = a1;
  src = *a1;
  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, src, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (000000000041C625) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_64b_goodG2BSink(char **a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-80h]
  char v4; // [rsp+73h] [rbp-1Dh]
  char *src; // [rsp+80h] [rbp-10h]
  char **v6; // [rsp+88h] [rbp-8h]

  v6 = a1;
  src = *a1;
  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, src, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (000000000041C69B) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_51_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE127_Buffer_Underread__CWE839_fgets_51b_badSink(v4);
}

//----- (000000000041C703) ----------------------------------------------------
int goodG2B_88()
{
  return CWE127_Buffer_Underread__CWE839_fgets_51b_goodG2BSink(7);
}

//----- (000000000041C725) ----------------------------------------------------
int goodB2G_22()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE127_Buffer_Underread__CWE839_fgets_51b_goodB2GSink(v4);
}

//----- (000000000041C78D) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_51_good()
{
  goodG2B_88();
  return goodB2G_22();
}

//----- (000000000041C7A7) ----------------------------------------------------
int __fastcall badSink_5(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (000000000041C801) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_ncpy_44_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(const char *); // [rsp+18h] [rbp-8h]

  v4 = badSink_5;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return ((__int64 (__fastcall *)(char *))v4)((char *)s - 8);
}

//----- (000000000041C881) ----------------------------------------------------
int __fastcall goodG2BSink_5(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (000000000041C8DB) ----------------------------------------------------
__int64 goodG2B_89()
{
  void *v0; // rsp
  __int64 v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(const char *); // [rsp+18h] [rbp-8h]

  v4 = goodG2BSink_5;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  HIBYTE(v2) = HIBYTE(s);
  return ((__int64 (__fastcall *)(void *))v4)(s);
}

//----- (000000000041C957) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_ncpy_44_good()
{
  return goodG2B_89();
}

//----- (000000000041C967) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_04_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, &unk_460358, &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041C9F3) ----------------------------------------------------
int goodB2G1_18()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, &unk_460358, &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041CA92) ----------------------------------------------------
int goodB2G2_18()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, &unk_460358, &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041CB25) ----------------------------------------------------
int goodG2B1_67()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000041CBA5) ----------------------------------------------------
int goodG2B2_67()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000041CC19) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_04_good()
{
  goodB2G1_18();
  goodB2G2_18();
  goodG2B1_67();
  return goodG2B2_67();
}

//----- (000000000041CC47) ----------------------------------------------------
__int64 staticReturnsTrue_6()
{
  return 1LL;
}

//----- (000000000041CC52) ----------------------------------------------------
__int64 staticReturnsFalse_6()
{
  return 0LL;
}

//----- (000000000041CC5D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_08_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)staticReturnsTrue_6() )
    src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000041CD36) ----------------------------------------------------
int goodG2B1_68()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)staticReturnsFalse_6() )
    printLine("Benign, fixed string");
  else
    src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000041CE17) ----------------------------------------------------
int goodG2B2_68()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)staticReturnsTrue_6() )
    src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000041CEEC) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_08_good()
{
  goodG2B1_68();
  return goodG2B2_68();
}

//----- (000000000041CF06) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_67b_badSink(void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  void *src; // [rsp+78h] [rbp-8h]

  src = a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, src, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000041CF5E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_67b_goodG2BSink(void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  void *src; // [rsp+78h] [rbp-8h]

  src = a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, src, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000041CFB6) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_64_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_memcpy_64b_badSink((__int64 *)&v2);
}

//----- (000000000041D02D) ----------------------------------------------------
int goodG2B_90()
{
  void *v0; // rsp
  void *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = s;
  return CWE127_Buffer_Underread__char_alloca_memcpy_64b_goodG2BSink((__int64 *)&v2);
}

//----- (000000000041D0A0) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_64_good()
{
  return goodG2B_90();
}

//----- (000000000041D0B0) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_07_bad()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  __int64 v3; // [rsp+C8h] [rbp-78h]
  char s; // [rsp+D0h] [rbp-70h]
  char v5; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( staticFive_0 == 5 )
    src = (char *)&v3;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D150: using guessed type int staticFive_0;

//----- (000000000041D130) ----------------------------------------------------
int goodG2B1_69()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( staticFive_0 == 5 )
    src = &s;
  else
    printLine("Benign, fixed string");
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D150: using guessed type int staticFive_0;

//----- (000000000041D1B8) ----------------------------------------------------
int goodG2B2_69()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( staticFive_0 == 5 )
    src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D150: using guessed type int staticFive_0;

//----- (000000000041D234) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_07_good()
{
  goodG2B1_69();
  return goodG2B2_69();
}

//----- (000000000041D24E) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_09_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  char *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_TRUE )
    v7 = (char *)s - 8;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;
// 41D24E: using guessed type char var_90[99];

//----- (000000000041D32F) ----------------------------------------------------
int goodG2B1_70()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v7 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 462E04: using guessed type int GLOBAL_CONST_FALSE;
// 41D32F: using guessed type char var_90[99];

//----- (000000000041D418) ----------------------------------------------------
int goodG2B2_70()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_TRUE )
    v7 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;
// 41D418: using guessed type char var_90[99];

//----- (000000000041D4F5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_09_good()
{
  goodG2B1_70();
  return goodG2B2_70();
}

//----- (000000000041D50F) ----------------------------------------------------
int __fastcall badSink_6(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = badStatic_0;
  if ( badStatic_0 )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D218: using guessed type int badStatic_0;

//----- (000000000041D570) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_21_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  badStatic_0 = 1;
  return badSink_6(v7);
}
// 67D218: using guessed type int badStatic_0;
// 41D570: using guessed type char buf[16];

//----- (000000000041D662) ----------------------------------------------------
int __fastcall goodB2G1Sink_0(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  if ( goodB2G1Static_0 )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}
// 67D21C: using guessed type int goodB2G1Static_0;

//----- (000000000041D6D5) ----------------------------------------------------
int goodB2G1_19()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G1Static_0 = 0;
  return goodB2G1Sink_0(v7);
}
// 67D21C: using guessed type int goodB2G1Static_0;
// 41D6D5: using guessed type char buf[16];

//----- (000000000041D7C7) ----------------------------------------------------
int __fastcall goodB2G2Sink_0(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = goodB2G2Static_0;
  if ( goodB2G2Static_0 )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 < 0 || a1 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D220: using guessed type int goodB2G2Static_0;

//----- (000000000041D82E) ----------------------------------------------------
int goodB2G2_19()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  goodB2G2Static_0 = 1;
  return goodB2G2Sink_0(v7);
}
// 67D220: using guessed type int goodB2G2Static_0;
// 41D82E: using guessed type char buf[16];

//----- (000000000041D920) ----------------------------------------------------
int __fastcall goodG2BSink_6(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = goodG2BStatic_0;
  if ( goodG2BStatic_0 )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D224: using guessed type int goodG2BStatic_0;

//----- (000000000041D981) ----------------------------------------------------
int goodG2B_91()
{
  goodG2BStatic_0 = 1;
  return goodG2BSink_6(7);
}
// 67D224: using guessed type int goodG2BStatic_0;

//----- (000000000041D9AD) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_21_good()
{
  goodB2G1_19();
  goodB2G2_19();
  return goodG2B_91();
}

//----- (000000000041D9D1) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_03_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 41D9D1: using guessed type char buf[16];

//----- (000000000041DAF9) ----------------------------------------------------
int goodB2G1_20()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 41DAF9: using guessed type char buf[16];

//----- (000000000041DC27) ----------------------------------------------------
int goodB2G2_20()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 41DC27: using guessed type char buf[16];

//----- (000000000041DD55) ----------------------------------------------------
int goodG2B1_71()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000041DDB7) ----------------------------------------------------
int goodG2B2_71()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000041DE19) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_03_good()
{
  goodB2G1_20();
  goodB2G2_20();
  goodG2B1_71();
  return goodG2B2_71();
}

//----- (000000000041DE47) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_53c_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_ncpy_53d_badSink(a1);
}

//----- (000000000041DE61) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_53c_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_ncpy_53d_goodG2BSink(a1);
}

//----- (000000000041DE7B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_06_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  char *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = (char *)s - 8;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 41DE7B: using guessed type char var_90[99];

//----- (000000000041DF5C) ----------------------------------------------------
int goodG2B1_72()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 41DF5C: using guessed type char var_90[99];

//----- (000000000041E045) ----------------------------------------------------
int goodG2B2_72()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 41E045: using guessed type char var_90[99];

//----- (000000000041E122) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_06_good()
{
  goodG2B1_72();
  return goodG2B2_72();
}

//----- (000000000041E13C) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_67_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE127_Buffer_Underread__CWE839_fscanf_67b_badSink(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041E17A) ----------------------------------------------------
int goodG2B_92()
{
  return CWE127_Buffer_Underread__CWE839_fscanf_67b_goodG2BSink(7);
}

//----- (000000000041E1A2) ----------------------------------------------------
int goodB2G_23()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE127_Buffer_Underread__CWE839_fscanf_67b_goodB2GSink(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000041E1E0) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_67_good()
{
  goodG2B_92();
  return goodB2G_23();
}

//----- (000000000041E1FA) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_02_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  char *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000041E2C5) ----------------------------------------------------
int goodG2B1_73()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  char *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000041E38C) ----------------------------------------------------
int goodG2B2_73()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  char *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000041E453) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_02_good()
{
  goodG2B1_73();
  return goodG2B2_73();
}

//----- (000000000041E46D) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_51_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE127_Buffer_Underread__CWE839_listen_socket_51b_badSink(v8);
}
// 41E46D: using guessed type char buf[16];

//----- (000000000041E59B) ----------------------------------------------------
int goodG2B_93()
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_51b_goodG2BSink(7);
}

//----- (000000000041E5BD) ----------------------------------------------------
int goodB2G_24()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE127_Buffer_Underread__CWE839_listen_socket_51b_goodB2GSink(v8);
}
// 41E5BD: using guessed type char buf[16];

//----- (000000000041E6EB) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_51_good()
{
  goodG2B_93();
  return goodB2G_24();
}

//----- (000000000041E705) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_06_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000041E7C1) ----------------------------------------------------
int goodB2G1_21()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000041E88F) ----------------------------------------------------
int goodB2G2_21()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000041E951) ----------------------------------------------------
int goodG2B1_74()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000041E9D3) ----------------------------------------------------
int goodG2B2_74()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000041EA49) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_06_good()
{
  goodB2G1_21();
  goodB2G2_21();
  goodG2B1_74();
  return goodG2B2_74();
}

//----- (000000000041EA77) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_18_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 41EA77: using guessed type char buf[16];

//----- (000000000041EBA1) ----------------------------------------------------
int goodB2G_25()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 41EBA1: using guessed type char buf[16];

//----- (000000000041ECD1) ----------------------------------------------------
int goodG2B_94()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000041ED35) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_18_good()
{
  goodB2G_25();
  return goodG2B_94();
}

//----- (000000000041ED4F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_04_bad()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  __int64 v3; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &v3;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (000000000041EDD6) ----------------------------------------------------
int goodG2B1_75()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (000000000041EE65) ----------------------------------------------------
int goodG2B2_75()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (000000000041EEE8) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_04_good()
{
  goodG2B1_75();
  return goodG2B2_75();
}

//----- (000000000041EF02) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_31_bad()
{
  char dest; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  void *src; // [rsp+D8h] [rbp-18h]
  __int64 *v7; // [rsp+E0h] [rbp-10h]
  __int64 *v8; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v8 = &v3;
  v7 = &v3;
  src = &v3;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (000000000041EF96) ----------------------------------------------------
int goodG2B_95()
{
  char dest; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  void *src; // [rsp+D8h] [rbp-18h]
  char *v6; // [rsp+E0h] [rbp-10h]
  char *v7; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v7 = &s;
  v6 = &s;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (000000000041F026) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_31_good()
{
  return goodG2B_95();
}

//----- (000000000041F036) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_22_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = CWE127_Buffer_Underread__CWE839_fscanf_22_badGlobal;
  if ( CWE127_Buffer_Underread__CWE839_fscanf_22_badGlobal )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D228: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_22_badGlobal;

//----- (000000000041F097) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_22_goodB2G1Sink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  if ( CWE127_Buffer_Underread__CWE839_fscanf_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}
// 67D22C: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_22_goodB2G1Global;

//----- (000000000041F10A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_22_goodB2G2Sink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = CWE127_Buffer_Underread__CWE839_fscanf_22_goodB2G2Global;
  if ( CWE127_Buffer_Underread__CWE839_fscanf_22_goodB2G2Global )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 < 0 || a1 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D230: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_22_goodB2G2Global;

//----- (000000000041F171) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_22_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = CWE127_Buffer_Underread__CWE839_fscanf_22_goodG2BGlobal;
  if ( CWE127_Buffer_Underread__CWE839_fscanf_22_goodG2BGlobal )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D234: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_22_goodG2BGlobal;

//----- (000000000041F1D2) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_17_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+C8h] [rbp-18h]
  char *src; // [rsp+D0h] [rbp-10h]
  int i; // [rsp+DCh] [rbp-4h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  for ( i = 0; i <= 0; ++i )
    src = (char *)s - 8;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000041F295) ----------------------------------------------------
int goodG2B_96()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+C8h] [rbp-18h]
  char *src; // [rsp+D0h] [rbp-10h]
  int i; // [rsp+DCh] [rbp-4h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  for ( i = 0; i <= 0; ++i )
    src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000041F354) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_17_good()
{
  return goodG2B_96();
}

//----- (000000000041F364) ----------------------------------------------------
int __fastcall badSink_7(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (000000000041F3BD) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_cpy_44_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(const char *); // [rsp+18h] [rbp-8h]

  v4 = badSink_7;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return ((__int64 (__fastcall *)(char *))v4)((char *)s - 8);
}

//----- (000000000041F43D) ----------------------------------------------------
int __fastcall goodG2BSink_7(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (000000000041F496) ----------------------------------------------------
__int64 goodG2B_97()
{
  void *v0; // rsp
  __int64 v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(const char *); // [rsp+18h] [rbp-8h]

  v4 = goodG2BSink_7;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  HIBYTE(v2) = HIBYTE(s);
  return ((__int64 (__fastcall *)(void *))v4)(s);
}

//----- (000000000041F512) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_cpy_44_good()
{
  return goodG2B_97();
}

//----- (000000000041F522) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_09_bad()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  __int64 v3; // [rsp+C8h] [rbp-78h]
  char s; // [rsp+D0h] [rbp-70h]
  char v5; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( GLOBAL_CONST_TRUE )
    src = (char *)&v3;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041F5A1) ----------------------------------------------------
int goodG2B1_76()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 462E04: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000041F628) ----------------------------------------------------
int goodG2B2_76()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
    src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000041F6A3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_09_good()
{
  goodG2B1_76();
  return goodG2B2_76();
}

//----- (000000000041F6BD) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_67_bad()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 *v3; // [rsp+70h] [rbp-10h]
  __int64 *v4; // [rsp+78h] [rbp-8h]
  __int64 savedregs; // [rsp+80h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v4 = &savedregs - 17;
  v3 = &savedregs - 17;
  return CWE127_Buffer_Underread__char_declare_memmove_67b_badSink(&savedregs - 17);
}

//----- (000000000041F701) ----------------------------------------------------
int goodG2B_98()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  char *v3; // [rsp+70h] [rbp-10h]
  char *v4; // [rsp+78h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v4 = &s;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_memmove_67b_goodG2BSink(&s);
}

//----- (000000000041F741) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_67_good()
{
  return goodG2B_98();
}

//----- (000000000041F751) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_63_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_memcpy_63b_badSink((__int64 *)&v3);
}

//----- (000000000041F78D) ----------------------------------------------------
int goodG2B_99()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_memcpy_63b_goodG2BSink((__int64 *)&v3);
}

//----- (000000000041F7C5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_63_good()
{
  return goodG2B_99();
}

//----- (000000000041F7D5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_64_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_cpy_64b_badSink((char **)&v3);
}

//----- (000000000041F811) ----------------------------------------------------
int goodG2B_100()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_cpy_64b_goodG2BSink(&v3);
}

//----- (000000000041F849) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_64_good()
{
  return goodG2B_100();
}

//----- (000000000041F859) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_13_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v13 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v13));
  }
  return result;
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;
// 41F859: using guessed type char buf[16];

//----- (000000000041F9E1) ----------------------------------------------------
int goodB2G1_22()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;
// 41F9E1: using guessed type char buf[16];

//----- (000000000041FB7B) ----------------------------------------------------
int goodB2G2_22()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v13 < 0 || v13 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v13));
  }
  return result;
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;
// 41FB7B: using guessed type char buf[16];

//----- (000000000041FD09) ----------------------------------------------------
int goodG2B1_77()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v6 = 7;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041FD8D) ----------------------------------------------------
int goodG2B2_77()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v6 = 7;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000041FE05) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_13_good()
{
  goodB2G1_22();
  goodB2G2_22();
  goodG2B1_77();
  return goodG2B2_77();
}

//----- (000000000041FE33) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_64b_badSink(__int64 *a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+78h] [rbp-18h]
  __int64 *v5; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v5 = a1;
  v4 = *a1;
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v4 + i);
  v3 = 0;
  return printLine(s);
}
// 41FE33: using guessed type char s[99];

//----- (000000000041FEB8) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_64b_goodG2BSink(__int64 *a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+78h] [rbp-18h]
  __int64 *v5; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v5 = a1;
  v4 = *a1;
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v4 + i);
  v3 = 0;
  return printLine(s);
}
// 41FEB8: using guessed type char s[99];

//----- (000000000041FF3D) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_64b_badSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  __int64 v6; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+44h] [rbp-Ch]
  int *v8; // [rsp+48h] [rbp-8h]

  v8 = a1;
  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000041FFA6) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_64b_goodG2BSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  __int64 v6; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+44h] [rbp-Ch]
  int *v8; // [rsp+48h] [rbp-8h]

  v8 = a1;
  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000042000F) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_64b_goodB2GSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  __int64 v6; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+44h] [rbp-Ch]
  int *v8; // [rsp+48h] [rbp-8h]

  v8 = a1;
  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000042007E) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_22_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE127_Buffer_Underread__CWE839_fscanf_22_badGlobal = 1;
  return CWE127_Buffer_Underread__CWE839_fscanf_22_badSink(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D228: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_22_badGlobal;

//----- (00000000004200C0) ----------------------------------------------------
int goodB2G1_23()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE127_Buffer_Underread__CWE839_fscanf_22_goodB2G1Global = 0;
  return CWE127_Buffer_Underread__CWE839_fscanf_22_goodB2G1Sink(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D22C: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_22_goodB2G1Global;

//----- (0000000000420102) ----------------------------------------------------
int goodB2G2_23()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE127_Buffer_Underread__CWE839_fscanf_22_goodB2G2Global = 1;
  return CWE127_Buffer_Underread__CWE839_fscanf_22_goodB2G2Sink(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D230: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_22_goodB2G2Global;

//----- (0000000000420144) ----------------------------------------------------
int goodG2B_101()
{
  CWE127_Buffer_Underread__CWE839_fscanf_22_goodG2BGlobal = 1;
  return CWE127_Buffer_Underread__CWE839_fscanf_22_goodG2BSink(7);
}
// 67D234: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_22_goodG2BGlobal;

//----- (0000000000420170) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_22_good()
{
  goodB2G1_23();
  goodB2G2_23();
  return goodG2B_101();
}

//----- (0000000000420194) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_51_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_cpy_51b_badSink((const char *)&savedregs - 120);
}

//----- (00000000004201D0) ----------------------------------------------------
int goodG2B_102()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_cpy_51b_goodG2BSink(&s);
}

//----- (0000000000420208) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_51_good()
{
  return goodG2B_102();
}

//----- (0000000000420218) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_loop_65_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(__int64); // [rsp+18h] [rbp-8h]

  v4 = CWE127_Buffer_Underread__char_alloca_loop_65b_badSink;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return ((__int64 (__fastcall *)(char *))v4)((char *)s - 8);
}

//----- (0000000000420298) ----------------------------------------------------
__int64 goodG2B_103()
{
  void *v0; // rsp
  __int64 v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(__int64); // [rsp+18h] [rbp-8h]

  v4 = CWE127_Buffer_Underread__char_alloca_loop_65b_goodG2BSink;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  HIBYTE(v2) = HIBYTE(s);
  return ((__int64 (__fastcall *)(void *))v4)(s);
}

//----- (0000000000420314) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_loop_65_good()
{
  return goodG2B_103();
}

//----- (0000000000420324) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_07_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFive_1 == 5 )
    src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}
// 67D154: using guessed type int staticFive_1;

//----- (00000000004203FA) ----------------------------------------------------
int goodG2B1_78()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFive_1 == 5 )
    src = (char *)s;
  else
    printLine("Benign, fixed string");
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}
// 67D154: using guessed type int staticFive_1;

//----- (00000000004204D8) ----------------------------------------------------
int goodG2B2_78()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFive_1 == 5 )
    src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}
// 67D154: using guessed type int staticFive_1;

//----- (00000000004205AA) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_07_good()
{
  goodG2B1_78();
  return goodG2B2_78();
}

//----- (00000000004205C4) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_07_bad()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  __int64 v3; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( staticFive_2 == 5 )
    src = &v3;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}
// 67D158: using guessed type int staticFive_2;

//----- (000000000042064D) ----------------------------------------------------
int goodG2B1_79()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( staticFive_2 == 5 )
    src = &s;
  else
    printLine("Benign, fixed string");
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}
// 67D158: using guessed type int staticFive_2;

//----- (00000000004206DE) ----------------------------------------------------
int goodG2B2_79()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( staticFive_2 == 5 )
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}
// 67D158: using guessed type int staticFive_2;

//----- (0000000000420763) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_07_good()
{
  goodG2B1_79();
  return goodG2B2_79();
}

//----- (000000000042077D) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_11_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  return result;
}
// 42077D: using guessed type char buf[16];

//----- (00000000004208C5) ----------------------------------------------------
int goodB2G1_24()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 4208C5: using guessed type char buf[16];

//----- (0000000000420A1F) ----------------------------------------------------
int goodB2G2_24()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 < 0 || v12 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  return result;
}
// 420A1F: using guessed type char buf[16];

//----- (0000000000420B6D) ----------------------------------------------------
int goodG2B1_80()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (0000000000420BF7) ----------------------------------------------------
int goodG2B2_80()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    v6 = 7;
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (0000000000420C75) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_11_good()
{
  goodB2G1_24();
  goodB2G2_24();
  goodG2B1_80();
  return goodG2B2_80();
}

//----- (0000000000420CA3) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_02_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 420CA3: using guessed type char buf[16];

//----- (0000000000420DCB) ----------------------------------------------------
int goodB2G1_25()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 420DCB: using guessed type char buf[16];

//----- (0000000000420EF9) ----------------------------------------------------
int goodB2G2_25()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 420EF9: using guessed type char buf[16];

//----- (0000000000421027) ----------------------------------------------------
int goodG2B1_81()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (0000000000421089) ----------------------------------------------------
int goodG2B2_81()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (00000000004210EB) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_02_good()
{
  goodB2G1_25();
  goodB2G2_25();
  goodG2B1_81();
  return goodG2B2_81();
}

//----- (0000000000421119) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54d_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fscanf_54e_badSink(a1);
}

//----- (0000000000421130) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54d_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fscanf_54e_goodG2BSink(a1);
}

//----- (0000000000421147) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54d_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fscanf_54e_goodB2GSink(a1);
}

//----- (000000000042115E) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_64_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_loop_64b_badSink((__int64 *)&v2);
}

//----- (00000000004211D5) ----------------------------------------------------
int goodG2B_104()
{
  void *v0; // rsp
  void *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = s;
  return CWE127_Buffer_Underread__char_alloca_loop_64b_goodG2BSink((__int64 *)&v2);
}

//----- (0000000000421248) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_64_good()
{
  return goodG2B_104();
}

//----- (0000000000421258) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_10_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  return result;
}
// 67D1B4: using guessed type int globalTrue;
// 421258: using guessed type char buf[16];

//----- (0000000000421398) ----------------------------------------------------
int goodB2G1_26()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 67D1B4: using guessed type int globalTrue;
// 67D368: using guessed type int globalFalse;
// 421398: using guessed type char buf[16];

//----- (00000000004214EA) ----------------------------------------------------
int goodB2G2_26()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( globalTrue )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 < 0 || v12 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  return result;
}
// 67D1B4: using guessed type int globalTrue;
// 4214EA: using guessed type char buf[16];

//----- (0000000000421630) ----------------------------------------------------
int goodG2B1_82()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1B4: using guessed type int globalTrue;
// 67D368: using guessed type int globalFalse;

//----- (00000000004216B2) ----------------------------------------------------
int goodG2B2_82()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalTrue )
    v6 = 7;
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1B4: using guessed type int globalTrue;

//----- (0000000000421728) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_10_good()
{
  goodB2G1_26();
  goodB2G2_26();
  goodG2B1_82();
  return goodG2B2_82();
}

//----- (0000000000421756) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_14_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFive == 5 )
    src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000042181F) ----------------------------------------------------
int goodG2B1_83()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFive == 5 )
    src = s;
  else
    printLine("Benign, fixed string");
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}
// 67D1B8: using guessed type int globalFive;

//----- (00000000004218F0) ----------------------------------------------------
int goodG2B2_83()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFive == 5 )
    src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}
// 67D1B8: using guessed type int globalFive;

//----- (00000000004219B5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_14_good()
{
  goodG2B1_83();
  return goodG2B2_83();
}

//----- (00000000004219CF) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_15_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  __int64 v4; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v6; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  src = (char *)&v4;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (0000000000421A5B) ----------------------------------------------------
int goodG2B1_84()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (0000000000421AE3) ----------------------------------------------------
int goodG2B2_84()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (0000000000421B6B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_15_good()
{
  goodG2B1_84();
  return goodG2B2_84();
}

//----- (0000000000421B85) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_64_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE127_Buffer_Underread__CWE839_fgets_64b_badSink(&v4);
}

//----- (0000000000421BEF) ----------------------------------------------------
int goodG2B_105()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 7;
  return CWE127_Buffer_Underread__CWE839_fgets_64b_goodG2BSink(&v1);
}

//----- (0000000000421C13) ----------------------------------------------------
int goodB2G_26()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE127_Buffer_Underread__CWE839_fgets_64b_goodB2GSink(&v4);
}

//----- (0000000000421C7D) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_64_good()
{
  goodG2B_105();
  return goodB2G_26();
}

//----- (0000000000421C97) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_02_bad()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  __int64 v3; // [rsp+C8h] [rbp-78h]
  char s; // [rsp+D0h] [rbp-70h]
  char v5; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = (char *)&v3;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000421D0C) ----------------------------------------------------
int goodG2B1_85()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000421D7D) ----------------------------------------------------
int goodG2B2_85()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000421DEE) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_02_good()
{
  goodG2B1_85();
  return goodG2B2_85();
}

//----- (0000000000421E08) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_32_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-B0h]
  char v3; // [rsp+Fh] [rbp-A1h]
  char v4; // [rsp+63h] [rbp-4Dh]
  char v5; // [rsp+70h] [rbp-40h]
  void *src; // [rsp+78h] [rbp-38h]
  char *v7; // [rsp+80h] [rbp-30h]
  void *s; // [rsp+88h] [rbp-28h]
  void **v9; // [rsp+90h] [rbp-20h]
  char *v10; // [rsp+98h] [rbp-18h]

  v10 = &v5;
  v9 = (void **)&v5;
  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = (char *)s - 8;
  *(_QWORD *)v10 = (char *)s - 8;
  src = *v9;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (0000000000421EF7) ----------------------------------------------------
int goodG2B_106()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-B0h]
  char v3; // [rsp+Fh] [rbp-A1h]
  char v4; // [rsp+63h] [rbp-4Dh]
  char v5; // [rsp+70h] [rbp-40h]
  void *src; // [rsp+78h] [rbp-38h]
  void *v7; // [rsp+80h] [rbp-30h]
  void *s; // [rsp+88h] [rbp-28h]
  void **v9; // [rsp+90h] [rbp-20h]
  char *v10; // [rsp+98h] [rbp-18h]

  v10 = &v5;
  v9 = (void **)&v5;
  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = s;
  *(_QWORD *)v10 = s;
  src = *v9;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (0000000000421FE2) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_32_good()
{
  return goodG2B_106();
}

//----- (0000000000421FF2) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_63b_badSink(__int64 *a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v4 = *a1;
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v4 + i);
  v3 = 0;
  return printLine(s);
}
// 421FF2: using guessed type char s[99];

//----- (000000000042206F) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_63b_goodG2BSink(__int64 *a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v4 = *a1;
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v4 + i);
  v3 = 0;
  return printLine(s);
}
// 42206F: using guessed type char s[99];

//----- (00000000004220EC) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_17_bad()
{
  __int64 v1; // [rsp+0h] [rbp-F0h]
  __int64 v2; // [rsp+8h] [rbp-E8h]
  __int64 v3; // [rsp+10h] [rbp-E0h]
  __int64 v4; // [rsp+18h] [rbp-D8h]
  __int64 v5; // [rsp+20h] [rbp-D0h]
  __int64 v6; // [rsp+28h] [rbp-C8h]
  __int64 v7; // [rsp+30h] [rbp-C0h]
  __int64 v8; // [rsp+38h] [rbp-B8h]
  __int64 v9; // [rsp+40h] [rbp-B0h]
  __int64 v10; // [rsp+48h] [rbp-A8h]
  __int64 v11; // [rsp+50h] [rbp-A0h]
  __int64 v12; // [rsp+58h] [rbp-98h]
  int v13; // [rsp+60h] [rbp-90h]
  __int64 v14; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v16; // [rsp+D3h] [rbp-1Dh]
  __int64 *v17; // [rsp+E0h] [rbp-10h]
  int i; // [rsp+ECh] [rbp-4h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  for ( i = 0; i <= 0; ++i )
    v17 = &v14;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *v17;
  v2 = v17[1];
  v3 = v17[2];
  v4 = v17[3];
  v5 = v17[4];
  v6 = v17[5];
  v7 = v17[6];
  v8 = v17[7];
  v9 = v17[8];
  v10 = v17[9];
  v11 = v17[10];
  v12 = v17[11];
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (00000000004221F8) ----------------------------------------------------
int goodG2B_107()
{
  __int64 v1; // [rsp+0h] [rbp-F0h]
  __int64 v2; // [rsp+8h] [rbp-E8h]
  __int64 v3; // [rsp+10h] [rbp-E0h]
  __int64 v4; // [rsp+18h] [rbp-D8h]
  __int64 v5; // [rsp+20h] [rbp-D0h]
  __int64 v6; // [rsp+28h] [rbp-C8h]
  __int64 v7; // [rsp+30h] [rbp-C0h]
  __int64 v8; // [rsp+38h] [rbp-B8h]
  __int64 v9; // [rsp+40h] [rbp-B0h]
  __int64 v10; // [rsp+48h] [rbp-A8h]
  __int64 v11; // [rsp+50h] [rbp-A0h]
  __int64 v12; // [rsp+58h] [rbp-98h]
  int v13; // [rsp+60h] [rbp-90h]
  char s; // [rsp+70h] [rbp-80h]
  char v15; // [rsp+D3h] [rbp-1Dh]
  char *v16; // [rsp+E0h] [rbp-10h]
  int i; // [rsp+ECh] [rbp-4h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  for ( i = 0; i <= 0; ++i )
    v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (0000000000422300) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_17_good()
{
  return goodG2B_107();
}

//----- (0000000000422310) ----------------------------------------------------
int __fastcall badSink_8(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (00000000004223B1) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_memcpy_44_bad()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(__int64); // [rsp+78h] [rbp-8h]
  __int64 savedregs; // [rsp+80h] [rbp+0h]

  v4 = badSink_8;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 17;
  return ((__int64 (__fastcall *)(__int64 *))v4)(&savedregs - 17);
}

//----- (00000000004223F6) ----------------------------------------------------
int __fastcall goodG2BSink_8(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (0000000000422497) ----------------------------------------------------
__int64 goodG2B_108()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  char *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(__int64); // [rsp+78h] [rbp-8h]

  v4 = goodG2BSink_8;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return ((__int64 (__fastcall *)(char *))v4)(&s);
}

//----- (00000000004224D8) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_memcpy_44_good()
{
  return goodG2B_108();
}

//----- (00000000004224E8) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54c_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_54d_badSink(a1);
}

//----- (00000000004224FF) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54c_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_54d_goodG2BSink(a1);
}

//----- (0000000000422516) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54c_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_54d_goodB2GSink(a1);
}

//----- (000000000042252D) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_01_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 42252D: using guessed type char buf[16];

//----- (0000000000422655) ----------------------------------------------------
int goodG2B_109()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (00000000004226B7) ----------------------------------------------------
int goodB2G_27()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 4226B7: using guessed type char buf[16];

//----- (00000000004227E5) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_01_good()
{
  goodG2B_109();
  return goodB2G_27();
}

//----- (00000000004227FF) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_63_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE127_Buffer_Underread__CWE839_listen_socket_63b_badSink(&v5);
}
// 4227FF: using guessed type char buf[16];

//----- (000000000042292F) ----------------------------------------------------
int goodG2B_110()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 7;
  return CWE127_Buffer_Underread__CWE839_listen_socket_63b_goodG2BSink(&v1);
}

//----- (0000000000422953) ----------------------------------------------------
int goodB2G_28()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE127_Buffer_Underread__CWE839_listen_socket_63b_goodB2GSink(&v5);
}
// 422953: using guessed type char buf[16];

//----- (0000000000422A83) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_63_good()
{
  goodG2B_110();
  return goodB2G_28();
}

//----- (0000000000422A9D) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_67b_badSink(void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  void *src; // [rsp+78h] [rbp-8h]

  src = a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, src, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (0000000000422AF5) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_67b_goodG2BSink(void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  void *src; // [rsp+78h] [rbp-8h]

  src = a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, src, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (0000000000422B4D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_07_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFive_3 == 5 )
    src = (char *)s - 8;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D15C: using guessed type int staticFive_3;

//----- (0000000000422C08) ----------------------------------------------------
int goodG2B1_86()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFive_3 == 5 )
    src = (char *)s;
  else
    printLine("Benign, fixed string");
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D15C: using guessed type int staticFive_3;

//----- (0000000000422CCB) ----------------------------------------------------
int goodG2B2_86()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFive_3 == 5 )
    src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D15C: using guessed type int staticFive_3;

//----- (0000000000422D82) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_07_good()
{
  goodG2B1_86();
  return goodG2B2_86();
}

//----- (0000000000422D9C) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_53d_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000422DF3) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_53d_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000422E4A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_53d_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000422EA7) ----------------------------------------------------
void CWE127_Buffer_Underread__CWE839_listen_socket_17_bad()
{
  __int64 v0; // [rsp+0h] [rbp-70h]
  __int64 v1; // [rsp+8h] [rbp-68h]
  __int64 v2; // [rsp+10h] [rbp-60h]
  __int64 v3; // [rsp+18h] [rbp-58h]
  __int64 v4; // [rsp+20h] [rbp-50h]
  char buf[16]; // [rsp+30h] [rbp-40h]
  __int16 s; // [rsp+40h] [rbp-30h]
  uint16_t v7; // [rsp+42h] [rbp-2Eh]
  int v8; // [rsp+44h] [rbp-2Ch]
  int v9; // [rsp+58h] [rbp-18h]
  int fd; // [rsp+5Ch] [rbp-14h]
  int v11; // [rsp+60h] [rbp-10h]
  int v12; // [rsp+64h] [rbp-Ch]
  int j; // [rsp+68h] [rbp-8h]
  int i; // [rsp+6Ch] [rbp-4h]

  v12 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    v11 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v8 = 0;
      v7 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v11 = accept(fd, 0LL, 0LL);
        if ( v11 != -1 )
        {
          v9 = recv(v11, buf, 0xDuLL, 0);
          if ( v9 != -1 )
          {
            if ( v9 )
            {
              buf[v9] = 0;
              v12 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v11 != -1 )
      close(v11);
  }
  for ( j = 0; j <= 0; ++j )
  {
    v0 = 0LL;
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    if ( v12 > 9 )
      printLine("ERROR: Array index is too big.");
    else
      printIntLine(*((_DWORD *)&v0 + v12));
  }
}
// 422EA7: using guessed type char buf[16];

//----- (0000000000423042) ----------------------------------------------------
void goodB2G_29()
{
  __int64 v0; // [rsp+0h] [rbp-70h]
  __int64 v1; // [rsp+8h] [rbp-68h]
  __int64 v2; // [rsp+10h] [rbp-60h]
  __int64 v3; // [rsp+18h] [rbp-58h]
  __int64 v4; // [rsp+20h] [rbp-50h]
  char buf[16]; // [rsp+30h] [rbp-40h]
  __int16 s; // [rsp+40h] [rbp-30h]
  uint16_t v7; // [rsp+42h] [rbp-2Eh]
  int v8; // [rsp+44h] [rbp-2Ch]
  int v9; // [rsp+58h] [rbp-18h]
  int fd; // [rsp+5Ch] [rbp-14h]
  int v11; // [rsp+60h] [rbp-10h]
  int v12; // [rsp+64h] [rbp-Ch]
  int j; // [rsp+68h] [rbp-8h]
  int i; // [rsp+6Ch] [rbp-4h]

  v12 = -1;
  for ( i = 0; i <= 0; ++i )
  {
    fd = -1;
    v11 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v8 = 0;
      v7 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v11 = accept(fd, 0LL, 0LL);
        if ( v11 != -1 )
        {
          v9 = recv(v11, buf, 0xDuLL, 0);
          if ( v9 != -1 )
          {
            if ( v9 )
            {
              buf[v9] = 0;
              v12 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v11 != -1 )
      close(v11);
  }
  for ( j = 0; j <= 0; ++j )
  {
    v0 = 0LL;
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    if ( v12 < 0 || v12 > 9 )
      printLine("ERROR: Array index is out-of-bounds");
    else
      printIntLine(*((_DWORD *)&v0 + v12));
  }
}
// 423042: using guessed type char buf[16];

//----- (00000000004231E3) ----------------------------------------------------
int goodG2B_111()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v6 = -1;
  for ( i = 0; i <= 0; ++i )
    v6 = 7;
  for ( j = 0; j <= 0; ++j )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (000000000042326B) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_17_good()
{
  goodB2G_29();
  return goodG2B_111();
}

//----- (0000000000423285) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_63b_badSink(__int64 *a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]
  __int64 v15; // [rsp+78h] [rbp-8h]

  v15 = *a1;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)v15;
  v3 = *(_QWORD *)(v15 + 8);
  v4 = *(_QWORD *)(v15 + 16);
  v5 = *(_QWORD *)(v15 + 24);
  v6 = *(_QWORD *)(v15 + 32);
  v7 = *(_QWORD *)(v15 + 40);
  v8 = *(_QWORD *)(v15 + 48);
  v9 = *(_QWORD *)(v15 + 56);
  v10 = *(_QWORD *)(v15 + 64);
  v11 = *(_QWORD *)(v15 + 72);
  v12 = *(_QWORD *)(v15 + 80);
  v13 = *(_QWORD *)(v15 + 88);
  v14 = *(_DWORD *)(v15 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (0000000000423331) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_63b_goodG2BSink(__int64 *a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]
  __int64 v15; // [rsp+78h] [rbp-8h]

  v15 = *a1;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)v15;
  v3 = *(_QWORD *)(v15 + 8);
  v4 = *(_QWORD *)(v15 + 16);
  v5 = *(_QWORD *)(v15 + 24);
  v6 = *(_QWORD *)(v15 + 32);
  v7 = *(_QWORD *)(v15 + 40);
  v8 = *(_QWORD *)(v15 + 48);
  v9 = *(_QWORD *)(v15 + 56);
  v10 = *(_QWORD *)(v15 + 64);
  v11 = *(_QWORD *)(v15 + 72);
  v12 = *(_QWORD *)(v15 + 80);
  v13 = *(_QWORD *)(v15 + 88);
  v14 = *(_DWORD *)(v15 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (00000000004233DD) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_13_bad()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  __int64 v3; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    src = &v3;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000423466) ----------------------------------------------------
int goodG2B1_87()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    src = &s;
  else
    printLine("Benign, fixed string");
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (00000000004234F7) ----------------------------------------------------
int goodG2B2_87()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000042357C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_13_good()
{
  goodG2B1_87();
  return goodG2B2_87();
}

//----- (0000000000423596) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54c_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fgets_54d_badSink(a1);
}

//----- (00000000004235AD) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54c_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fgets_54d_goodG2BSink(a1);
}

//----- (00000000004235C4) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54c_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fgets_54d_goodB2GSink(a1);
}

//----- (00000000004235DB) ----------------------------------------------------
int badSink_9()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v3 = CWE127_Buffer_Underread__char_declare_loop_45_badData;
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v3 + i);
  v2 = 0;
  return printLine(s);
}
// 67D238: using guessed type __int64 CWE127_Buffer_Underread__char_declare_loop_45_badData;
// 4235DB: using guessed type char s[99];

//----- (000000000042364B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_45_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  CWE127_Buffer_Underread__char_declare_loop_45_badData = (__int64)(&savedregs - 15);
  return badSink_9();
}
// 67D238: using guessed type __int64 CWE127_Buffer_Underread__char_declare_loop_45_badData;

//----- (0000000000423690) ----------------------------------------------------
int goodG2BSink_9()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v3 = CWE127_Buffer_Underread__char_declare_loop_45_goodG2BData;
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v3 + i);
  v2 = 0;
  return printLine(s);
}
// 67D240: using guessed type __int64 CWE127_Buffer_Underread__char_declare_loop_45_goodG2BData;
// 423690: using guessed type char s[99];

//----- (0000000000423700) ----------------------------------------------------
int goodG2B_112()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  CWE127_Buffer_Underread__char_declare_loop_45_goodG2BData = (__int64)&s;
  return goodG2BSink_9();
}
// 67D240: using guessed type __int64 CWE127_Buffer_Underread__char_declare_loop_45_goodG2BData;

//----- (0000000000423741) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_45_good()
{
  return goodG2B_112();
}

//----- (0000000000423751) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_04_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (0000000000423818) ----------------------------------------------------
int goodG2B1_88()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (00000000004238E7) ----------------------------------------------------
int goodG2B2_88()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (00000000004239AA) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_04_good()
{
  goodG2B1_88();
  return goodG2B2_88();
}

//----- (00000000004239C4) ----------------------------------------------------
int __fastcall badSink_10(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = badStatic_1;
  if ( badStatic_1 )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D248: using guessed type int badStatic_1;

//----- (0000000000423A25) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_21_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  badStatic_1 = 1;
  return badSink_10(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D248: using guessed type int badStatic_1;

//----- (0000000000423A67) ----------------------------------------------------
int __fastcall goodB2G1Sink_1(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  if ( goodB2G1Static_1 )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}
// 67D24C: using guessed type int goodB2G1Static_1;

//----- (0000000000423ADA) ----------------------------------------------------
int goodB2G1_27()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G1Static_1 = 0;
  return goodB2G1Sink_1(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D24C: using guessed type int goodB2G1Static_1;

//----- (0000000000423B1C) ----------------------------------------------------
int __fastcall goodB2G2Sink_1(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = goodB2G2Static_1;
  if ( goodB2G2Static_1 )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 < 0 || a1 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D250: using guessed type int goodB2G2Static_1;

//----- (0000000000423B83) ----------------------------------------------------
int goodB2G2_27()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  goodB2G2Static_1 = 1;
  return goodB2G2Sink_1(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D250: using guessed type int goodB2G2Static_1;

//----- (0000000000423BC5) ----------------------------------------------------
int __fastcall goodG2BSink_10(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = goodG2BStatic_1;
  if ( goodG2BStatic_1 )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D254: using guessed type int goodG2BStatic_1;

//----- (0000000000423C26) ----------------------------------------------------
int goodG2B_113()
{
  goodG2BStatic_1 = 1;
  return goodG2BSink_10(7);
}
// 67D254: using guessed type int goodG2BStatic_1;

//----- (0000000000423C52) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_21_good()
{
  goodB2G1_27();
  goodB2G2_27();
  return goodG2B_113();
}

//----- (0000000000423C76) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_63_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_loop_63b_badSink((__int64 *)&v3);
}

//----- (0000000000423CB2) ----------------------------------------------------
int goodG2B_114()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_loop_63b_goodG2BSink((__int64 *)&v3);
}

//----- (0000000000423CEA) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_63_good()
{
  return goodG2B_114();
}

//----- (0000000000423CFA) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_54d_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_loop_54e_badSink(a1);
}

//----- (0000000000423D14) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_54d_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_loop_54e_goodG2BSink(a1);
}

//----- (0000000000423D2E) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_54_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE127_Buffer_Underread__CWE839_fgets_54b_badSink(v4);
}

//----- (0000000000423D96) ----------------------------------------------------
int goodG2B_115()
{
  return CWE127_Buffer_Underread__CWE839_fgets_54b_goodG2BSink(7);
}

//----- (0000000000423DB8) ----------------------------------------------------
int goodB2G_30()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE127_Buffer_Underread__CWE839_fgets_54b_goodB2GSink(v4);
}

//----- (0000000000423E20) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_54_good()
{
  goodG2B_115();
  return goodB2G_30();
}

//----- (0000000000423E3A) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_05_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  __int64 v4; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v6; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  if ( staticTrue_1 )
    src = (char *)&v4;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}
// 67D160: using guessed type int staticTrue_1;

//----- (0000000000423ECF) ----------------------------------------------------
int goodG2B1_89()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( staticFalse_1 )
    printLine("Benign, fixed string");
  else
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}
// 67D258: using guessed type int staticFalse_1;

//----- (0000000000423F6C) ----------------------------------------------------
int goodG2B2_89()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( staticTrue_1 )
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}
// 67D160: using guessed type int staticTrue_1;

//----- (0000000000423FFD) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_05_good()
{
  goodG2B1_89();
  return goodG2B2_89();
}

//----- (0000000000424017) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_09_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  return result;
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;
// 424017: using guessed type char buf[16];

//----- (0000000000424157) ----------------------------------------------------
int goodB2G1_28()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;
// 462E04: using guessed type int GLOBAL_CONST_FALSE;
// 424157: using guessed type char buf[16];

//----- (00000000004242A9) ----------------------------------------------------
int goodB2G2_28()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 < 0 || v12 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  return result;
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;
// 4242A9: using guessed type char buf[16];

//----- (00000000004243EF) ----------------------------------------------------
int goodG2B1_90()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;
// 462E04: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000424471) ----------------------------------------------------
int goodG2B2_90()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_TRUE )
    v6 = 7;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004244E7) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_09_good()
{
  goodB2G1_28();
  goodB2G2_28();
  goodG2B1_90();
  return goodG2B2_90();
}

//----- (0000000000424515) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_18_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, "%d", &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000424591) ----------------------------------------------------
int goodB2G_31()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, "%d", &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000424614) ----------------------------------------------------
int goodG2B_116()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (0000000000424678) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_18_good()
{
  goodB2G_31();
  return goodG2B_116();
}

//----- (0000000000424692) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_64_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_ncpy_64b_badSink(&v2);
}

//----- (0000000000424709) ----------------------------------------------------
int goodG2B_117()
{
  void *v0; // rsp
  void *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = s;
  return CWE127_Buffer_Underread__char_alloca_ncpy_64b_goodG2BSink((char **)&v2);
}

//----- (000000000042477C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_64_good()
{
  return goodG2B_117();
}

//----- (000000000042478C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_67_bad()
{
  void *v0; // rsp
  char v2; // [rsp+Fh] [rbp-11h]
  char *v3; // [rsp+10h] [rbp-10h]
  void *s; // [rsp+18h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v2 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v2 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v3 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_memmove_67b_badSink((char *)s - 8);
}

//----- (000000000042480B) ----------------------------------------------------
int goodG2B_118()
{
  void *v0; // rsp
  char v2; // [rsp+Fh] [rbp-11h]
  void *v3; // [rsp+10h] [rbp-10h]
  void *s; // [rsp+18h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v2 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v2 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v3 = s;
  return CWE127_Buffer_Underread__char_alloca_memmove_67b_goodG2BSink(s);
}

//----- (0000000000424886) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_67_good()
{
  return goodG2B_118();
}

//----- (0000000000424896) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_63_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_memcpy_63b_badSink((__int64 *)&v2);
}

//----- (000000000042490D) ----------------------------------------------------
int goodG2B_119()
{
  void *v0; // rsp
  void *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = s;
  return CWE127_Buffer_Underread__char_alloca_memcpy_63b_goodG2BSink((__int64 *)&v2);
}

//----- (0000000000424980) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_63_good()
{
  return goodG2B_119();
}

//----- (0000000000424990) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_34_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-100h]
  char v3; // [rsp+63h] [rbp-9Dh]
  __int64 v4; // [rsp+68h] [rbp-98h]
  char s; // [rsp+70h] [rbp-90h]
  char v6; // [rsp+D3h] [rbp-2Dh]
  __int64 *v7; // [rsp+E0h] [rbp-20h]
  char *src; // [rsp+F0h] [rbp-10h]
  __int64 *v9; // [rsp+F8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  v9 = &v4;
  v7 = &v4;
  src = (char *)&v4;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (0000000000424A37) ----------------------------------------------------
int goodG2B_120()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-100h]
  char v3; // [rsp+63h] [rbp-9Dh]
  char s; // [rsp+70h] [rbp-90h]
  char v5; // [rsp+D3h] [rbp-2Dh]
  char *v6; // [rsp+E0h] [rbp-20h]
  char *src; // [rsp+F0h] [rbp-10h]
  char *v8; // [rsp+F8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v8 = &s;
  v6 = &s;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (0000000000424ADA) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_34_good()
{
  return goodG2B_120();
}

//----- (0000000000424AEA) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_66b_badSink(__int64 a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]
  char *src; // [rsp+78h] [rbp-8h]

  src = *(char **)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, src, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000424B50) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_66b_goodG2BSink(__int64 a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]
  char *src; // [rsp+78h] [rbp-8h]

  src = *(char **)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, src, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000424BB6) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_12_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    __isoc99_fscanf(stdin, "%d", &v6);
  else
    v6 = 7;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  else
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 < 0 || v6 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000424CAA) ----------------------------------------------------
int goodB2G_32()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  globalReturnsTrueOrFalse();
  __isoc99_fscanf(stdin, "%d", &v6);
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 < 0 || v6 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  else
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 < 0 || v6 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000424DBB) ----------------------------------------------------
int goodG2B_121()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  globalReturnsTrueOrFalse();
  v6 = 7;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  else
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (0000000000424E8E) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_12_good()
{
  goodB2G_32();
  return goodG2B_121();
}

//----- (0000000000424EA8) ----------------------------------------------------
int __fastcall badSink_11(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000424EFF) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_listen_socket_44_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = badSink_11;
  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 424EFF: using guessed type char buf[16];

//----- (0000000000425036) ----------------------------------------------------
int __fastcall goodG2BSink_11(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000042508D) ----------------------------------------------------
int goodG2B_122()
{
  return goodG2BSink_11(7);
}

//----- (00000000004250B8) ----------------------------------------------------
int __fastcall goodB2GSink_2(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000425115) ----------------------------------------------------
__int64 goodB2G_33()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = goodB2GSink_2;
  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 425115: using guessed type char buf[16];

//----- (000000000042524C) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_listen_socket_44_good()
{
  goodG2B_122();
  return goodB2G_33();
}

//----- (0000000000425266) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_18_bad()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  __int64 v3; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &v3;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (00000000004252E5) ----------------------------------------------------
int goodG2B_123()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (0000000000425360) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_18_good()
{
  return goodG2B_123();
}

//----- (0000000000425370) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_09_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v13 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v13));
  }
  return result;
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;
// 425370: using guessed type char buf[16];

//----- (00000000004254F6) ----------------------------------------------------
int goodB2G1_29()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;
// 462E04: using guessed type int GLOBAL_CONST_FALSE;
// 4254F6: using guessed type char buf[16];

//----- (000000000042568E) ----------------------------------------------------
int goodB2G2_29()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v13 < 0 || v13 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v13));
  }
  return result;
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;
// 42568E: using guessed type char buf[16];

//----- (000000000042581A) ----------------------------------------------------
int goodG2B1_91()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;
// 462E04: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000042589C) ----------------------------------------------------
int goodG2B2_91()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_TRUE )
    v6 = 7;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000425912) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_09_good()
{
  goodB2G1_29();
  goodB2G2_29();
  goodG2B1_91();
  return goodG2B2_91();
}

//----- (0000000000425940) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_54d_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_cpy_54e_badSink(a1);
}

//----- (000000000042595A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_54d_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_cpy_54e_goodG2BSink(a1);
}

//----- (0000000000425974) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_13_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  char *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v7 = (char *)s - 8;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;
// 425974: using guessed type char var_90[99];

//----- (0000000000425A56) ----------------------------------------------------
int goodG2B1_92()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v7 = s;
  else
    printLine("Benign, fixed string");
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;
// 425A56: using guessed type char var_90[99];

//----- (0000000000425B40) ----------------------------------------------------
int goodG2B2_92()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    v7 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;
// 425B40: using guessed type char var_90[99];

//----- (0000000000425C1E) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_13_good()
{
  goodG2B1_92();
  return goodG2B2_92();
}

//----- (0000000000425C38) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_07_bad()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  __int64 v14; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v16; // [rsp+D3h] [rbp-Dh]
  __int64 *v17; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  if ( staticFive_4 == 5 )
    v17 = &v14;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *v17;
  v2 = v17[1];
  v3 = v17[2];
  v4 = v17[3];
  v5 = v17[4];
  v6 = v17[5];
  v7 = v17[6];
  v8 = v17[7];
  v9 = v17[8];
  v10 = v17[9];
  v11 = v17[10];
  v12 = v17[11];
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}
// 67D164: using guessed type int staticFive_4;

//----- (0000000000425D33) ----------------------------------------------------
int goodG2B1_93()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  if ( staticFive_4 == 5 )
    v16 = &s;
  else
    printLine("Benign, fixed string");
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}
// 67D164: using guessed type int staticFive_4;

//----- (0000000000425E36) ----------------------------------------------------
int goodG2B2_93()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  if ( staticFive_4 == 5 )
    v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}
// 67D164: using guessed type int staticFive_4;

//----- (0000000000425F2D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_07_good()
{
  goodG2B1_93();
  return goodG2B2_93();
}

//----- (0000000000425F47) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_53c_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fgets_53d_badSink(a1);
}

//----- (0000000000425F5E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_53c_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fgets_53d_goodG2BSink(a1);
}

//----- (0000000000425F75) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_53c_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fgets_53d_goodB2GSink(a1);
}

//----- (0000000000425F8C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_05_bad()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  __int64 v3; // [rsp+C8h] [rbp-78h]
  char s; // [rsp+D0h] [rbp-70h]
  char v5; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( staticTrue_2 )
    src = (char *)&v3;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D168: using guessed type int staticTrue_2;

//----- (000000000042600B) ----------------------------------------------------
int goodG2B1_94()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( staticFalse_2 )
    printLine("Benign, fixed string");
  else
    src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D25C: using guessed type int staticFalse_2;

//----- (0000000000426092) ----------------------------------------------------
int goodG2B2_94()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( staticTrue_2 )
    src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D168: using guessed type int staticTrue_2;

//----- (000000000042610D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_05_good()
{
  goodG2B1_94();
  return goodG2B2_94();
}

//----- (0000000000426127) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_41_badSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (0000000000426180) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_41_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_cpy_41_badSink((const char *)&savedregs - 120);
}

//----- (00000000004261BC) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_41_goodG2BSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (0000000000426215) ----------------------------------------------------
int goodG2B_124()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_cpy_41_goodG2BSink(&s);
}

//----- (000000000042624D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_41_good()
{
  return goodG2B_124();
}

//----- (000000000042625D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_17_bad()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 j; // [rsp+D8h] [rbp-18h]
  __int64 *v7; // [rsp+E0h] [rbp-10h]
  int i; // [rsp+ECh] [rbp-4h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  for ( i = 0; i <= 0; ++i )
    v7 = &v3;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( j = 0LL; j <= 0x63; ++j )
    v1[j] = *((_BYTE *)v7 + j);
  v2 = 0;
  return printLine(v1);
}
// 42625D: using guessed type char var_F0[99];

//----- (000000000042630D) ----------------------------------------------------
int goodG2B_125()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 j; // [rsp+D8h] [rbp-18h]
  char *v6; // [rsp+E0h] [rbp-10h]
  int i; // [rsp+ECh] [rbp-4h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  for ( i = 0; i <= 0; ++i )
    v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( j = 0LL; j <= 0x63; ++j )
    v1[j] = v6[j];
  v2 = 0;
  return printLine(v1);
}
// 42630D: using guessed type char var_F0[99];

//----- (00000000004263B9) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_17_good()
{
  return goodG2B_125();
}

//----- (00000000004263C9) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_12_bad()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  __int64 v3; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    src = &v3;
  else
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (000000000042645F) ----------------------------------------------------
int goodG2B_126()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  globalReturnsTrueOrFalse();
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (00000000004264F1) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_12_good()
{
  return goodG2B_126();
}

//----- (0000000000426501) ----------------------------------------------------
int __fastcall badSink_12(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 426501: using guessed type char s[99];

//----- (000000000042656A) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_loop_44_bad()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(__int64); // [rsp+78h] [rbp-8h]
  __int64 savedregs; // [rsp+80h] [rbp+0h]

  v4 = badSink_12;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 17;
  return ((__int64 (__fastcall *)(__int64 *))v4)(&savedregs - 17);
}

//----- (00000000004265AF) ----------------------------------------------------
int __fastcall goodG2BSink_12(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 4265AF: using guessed type char s[99];

//----- (0000000000426618) ----------------------------------------------------
__int64 goodG2B_127()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  char *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(__int64); // [rsp+78h] [rbp-8h]

  v4 = goodG2BSink_12;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return ((__int64 (__fastcall *)(char *))v4)(&s);
}

//----- (0000000000426659) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_loop_44_good()
{
  return goodG2B_127();
}

//----- (0000000000426669) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_53d_badSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (00000000004266C3) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_53d_goodG2BSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (000000000042671D) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54c_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fscanf_54d_badSink(a1);
}

//----- (0000000000426734) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54c_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fscanf_54d_goodG2BSink(a1);
}

//----- (000000000042674B) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54c_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fscanf_54d_goodB2GSink(a1);
}

//----- (0000000000426762) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_66_bad()
{
  char s; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  char v3; // [rsp+70h] [rbp-30h]
  __int64 *v4; // [rsp+80h] [rbp-20h]
  __int64 *v5; // [rsp+98h] [rbp-8h]
  __int64 savedregs; // [rsp+A0h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v5 = &savedregs - 21;
  v4 = &savedregs - 21;
  return CWE127_Buffer_Underread__char_declare_ncpy_66b_badSink((__int64)&v3);
}

//----- (00000000004267AF) ----------------------------------------------------
int goodG2B_128()
{
  char s; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  char v3; // [rsp+70h] [rbp-30h]
  char *v4; // [rsp+80h] [rbp-20h]
  char *v5; // [rsp+98h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v5 = &s;
  v4 = &s;
  return CWE127_Buffer_Underread__char_declare_ncpy_66b_goodG2BSink((__int64)&v3);
}

//----- (00000000004267F8) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_66_good()
{
  return goodG2B_128();
}

//----- (0000000000426808) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_18_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  char *v15; // [rsp+70h] [rbp-10h]
  void *s; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v15 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v15;
  v3 = *((_QWORD *)v15 + 1);
  v4 = *((_QWORD *)v15 + 2);
  v5 = *((_QWORD *)v15 + 3);
  v6 = *((_QWORD *)v15 + 4);
  v7 = *((_QWORD *)v15 + 5);
  v8 = *((_QWORD *)v15 + 6);
  v9 = *((_QWORD *)v15 + 7);
  v10 = *((_QWORD *)v15 + 8);
  v11 = *((_QWORD *)v15 + 9);
  v12 = *((_QWORD *)v15 + 10);
  v13 = *((_QWORD *)v15 + 11);
  v14 = *((_DWORD *)v15 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (0000000000426907) ----------------------------------------------------
int goodG2B_129()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  _QWORD *v15; // [rsp+70h] [rbp-10h]
  void *s; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v15 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v15;
  v3 = v15[1];
  v4 = v15[2];
  v5 = v15[3];
  v6 = v15[4];
  v7 = v15[5];
  v8 = v15[6];
  v9 = v15[7];
  v10 = v15[8];
  v11 = v15[9];
  v12 = v15[10];
  v13 = v15[11];
  v14 = *((_DWORD *)v15 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (0000000000426A02) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_18_good()
{
  return goodG2B_129();
}

//----- (0000000000426A12) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_63b_badSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000426A73) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_63b_goodG2BSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000426AD4) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_63b_goodB2GSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000426B3B) ----------------------------------------------------
int __fastcall badSink_13(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (0000000000426BDC) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_memcpy_44_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(__int64); // [rsp+18h] [rbp-8h]

  v4 = badSink_13;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return ((__int64 (__fastcall *)(char *))v4)((char *)s - 8);
}

//----- (0000000000426C5C) ----------------------------------------------------
int __fastcall goodG2BSink_13(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (0000000000426CFD) ----------------------------------------------------
__int64 goodG2B_130()
{
  void *v0; // rsp
  __int64 v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(__int64); // [rsp+18h] [rbp-8h]

  v4 = goodG2BSink_13;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  HIBYTE(v2) = HIBYTE(s);
  return ((__int64 (__fastcall *)(void *))v4)(s);
}

//----- (0000000000426D79) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_memcpy_44_good()
{
  return goodG2B_130();
}

//----- (0000000000426D89) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_54_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE127_Buffer_Underread__CWE839_connect_socket_54b_badSink(v7);
}
// 426D89: using guessed type char buf[16];

//----- (0000000000426E71) ----------------------------------------------------
int goodG2B_131()
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_54b_goodG2BSink(7);
}

//----- (0000000000426E93) ----------------------------------------------------
int goodB2G_34()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE127_Buffer_Underread__CWE839_connect_socket_54b_goodB2GSink(v7);
}
// 426E93: using guessed type char buf[16];

//----- (0000000000426F7B) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_54_good()
{
  goodG2B_131();
  return goodB2G_34();
}

//----- (0000000000426F95) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_11_bad()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  __int64 v3; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    src = &v3;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (0000000000427021) ----------------------------------------------------
int goodG2B1_95()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (00000000004270B5) ----------------------------------------------------
int goodG2B2_95()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( (unsigned int)globalReturnsTrue() )
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (000000000042713D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_11_good()
{
  goodG2B1_95();
  return goodG2B2_95();
}

//----- (0000000000427157) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_02_bad()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  __int64 v3; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &v3;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (00000000004271D5) ----------------------------------------------------
int goodG2B1_96()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (000000000042724F) ----------------------------------------------------
int goodG2B2_96()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (00000000004272C9) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_02_good()
{
  goodG2B1_96();
  return goodG2B2_96();
}

//----- (00000000004272E3) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_61_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_listen_socket_61b_badSource(0xFFFFFFFF);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (000000000042734B) ----------------------------------------------------
int goodG2B_132()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_listen_socket_61b_goodG2BSource();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (00000000004273B3) ----------------------------------------------------
int goodB2G_35()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_listen_socket_61b_goodB2GSource(0xFFFFFFFF);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (0000000000427421) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_61_good()
{
  goodG2B_132();
  return goodB2G_35();
}

//----- (000000000042743B) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_63b_badSink(__int64 *a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v4 = *a1;
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v4 + i);
  v3 = 0;
  return printLine(s);
}
// 42743B: using guessed type char s[99];

//----- (00000000004274B8) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_63b_goodG2BSink(__int64 *a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v4 = *a1;
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v4 + i);
  v3 = 0;
  return printLine(s);
}
// 4274B8: using guessed type char s[99];

//----- (0000000000427535) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_65b_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000042758C) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_65b_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (00000000004275E3) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_65b_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000427640) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_63_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_loop_63b_badSink((__int64 *)&v2);
}

//----- (00000000004276B7) ----------------------------------------------------
int goodG2B_133()
{
  void *v0; // rsp
  void *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = s;
  return CWE127_Buffer_Underread__char_alloca_loop_63b_goodG2BSink((__int64 *)&v2);
}

//----- (000000000042772A) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_63_good()
{
  return goodG2B_133();
}

//----- (000000000042773A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_54e_badSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (0000000000427793) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_54e_goodG2BSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (00000000004277EC) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_53b_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_ncpy_53c_badSink(a1);
}

//----- (0000000000427806) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_53b_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_ncpy_53c_goodG2BSink(a1);
}

//----- (0000000000427820) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_66_bad()
{
  char s; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  char v3; // [rsp+70h] [rbp-30h]
  __int64 *v4; // [rsp+80h] [rbp-20h]
  __int64 *v5; // [rsp+98h] [rbp-8h]
  __int64 savedregs; // [rsp+A0h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v5 = &savedregs - 21;
  v4 = &savedregs - 21;
  return CWE127_Buffer_Underread__char_declare_cpy_66b_badSink((__int64)&v3);
}

//----- (000000000042786D) ----------------------------------------------------
int goodG2B_134()
{
  char s; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  char v3; // [rsp+70h] [rbp-30h]
  char *v4; // [rsp+80h] [rbp-20h]
  char *v5; // [rsp+98h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v5 = &s;
  v4 = &s;
  return CWE127_Buffer_Underread__char_declare_cpy_66b_goodG2BSink((__int64)&v3);
}

//----- (00000000004278B6) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_66_good()
{
  return goodG2B_134();
}

//----- (00000000004278C6) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_64_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE127_Buffer_Underread__CWE839_connect_socket_64b_badSink(&v5);
}
// 4278C6: using guessed type char buf[16];

//----- (00000000004279B0) ----------------------------------------------------
int goodG2B_135()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 7;
  return CWE127_Buffer_Underread__CWE839_connect_socket_64b_goodG2BSink(&v1);
}

//----- (00000000004279D4) ----------------------------------------------------
int goodB2G_36()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int v6; // [rsp+28h] [rbp-8h]
  int fd; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v5 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE127_Buffer_Underread__CWE839_connect_socket_64b_goodB2GSink(&v5);
}
// 4279D4: using guessed type char buf[16];

//----- (0000000000427ABE) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_64_good()
{
  goodG2B_135();
  return goodB2G_36();
}

//----- (0000000000427AD8) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_15_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  char *src; // [rsp+D0h] [rbp-10h]
  void *s; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000427B89) ----------------------------------------------------
int goodG2B1_97()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  char *src; // [rsp+D0h] [rbp-10h]
  void *s; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000427C36) ----------------------------------------------------
int goodG2B2_97()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  char *src; // [rsp+D0h] [rbp-10h]
  void *s; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000427CE3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_15_good()
{
  goodG2B1_97();
  return goodG2B2_97();
}

//----- (0000000000427CFD) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_05_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticTrue_3 )
    src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}
// 67D16C: using guessed type int staticTrue_3;

//----- (0000000000427DD2) ----------------------------------------------------
int goodG2B1_98()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFalse_3 )
    printLine("Benign, fixed string");
  else
    src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}
// 67D260: using guessed type int staticFalse_3;

//----- (0000000000427EAF) ----------------------------------------------------
int goodG2B2_98()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticTrue_3 )
    src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}
// 67D16C: using guessed type int staticTrue_3;

//----- (0000000000427F80) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_05_good()
{
  goodG2B1_98();
  return goodG2B2_98();
}

//----- (0000000000427F9A) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_68_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_loop_68_badData = (__int64)s - 8;
  return CWE127_Buffer_Underread__char_alloca_loop_68b_badSink();
}
// 67D388: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_loop_68_badData;

//----- (000000000042801A) ----------------------------------------------------
int goodG2B_136()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_loop_68_goodG2BData = (__int64)s;
  return CWE127_Buffer_Underread__char_alloca_loop_68b_goodG2BSink();
}
// 67D390: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_loop_68_goodG2BData;

//----- (0000000000428096) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_68_good()
{
  return goodG2B_136();
}

//----- (00000000004280A6) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_41_badSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000428100) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_41_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_ncpy_41_badSink((char *)s - 8);
}

//----- (0000000000428177) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_41_goodG2BSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (00000000004281D1) ----------------------------------------------------
int goodG2B_137()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_ncpy_41_goodG2BSink((const char *)s);
}

//----- (0000000000428244) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_41_good()
{
  return goodG2B_137();
}

//----- (0000000000428254) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_54c_badSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_declare_memmove_54d_badSink(a1);
}

//----- (000000000042826E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_54c_goodG2BSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_declare_memmove_54d_goodG2BSink(a1);
}

//----- (0000000000428288) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_53c_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_53d_badSink(a1);
}

//----- (000000000042829F) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_53c_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_53d_goodG2BSink(a1);
}

//----- (00000000004282B6) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_53c_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_53d_goodB2GSink(a1);
}

//----- (00000000004282CD) ----------------------------------------------------
int badSink_14()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_fgets_45_badData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_fgets_45_badData > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D264: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_45_badData;

//----- (000000000042832A) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_45_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE127_Buffer_Underread__CWE839_fgets_45_badData = v4;
  return badSink_14();
}
// 67D264: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_45_badData;

//----- (000000000042839B) ----------------------------------------------------
int goodG2BSink_14()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_fgets_45_goodG2BData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_fgets_45_goodG2BData > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D268: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_45_goodG2BData;

//----- (00000000004283F8) ----------------------------------------------------
int goodG2B_138()
{
  CWE127_Buffer_Underread__CWE839_fgets_45_goodG2BData = 7;
  return goodG2BSink_14();
}
// 67D268: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_45_goodG2BData;

//----- (0000000000428423) ----------------------------------------------------
int goodB2GSink_3()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_fgets_45_goodB2GData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_fgets_45_goodB2GData < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D26C: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_45_goodB2GData;

//----- (0000000000428486) ----------------------------------------------------
int goodB2G_37()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE127_Buffer_Underread__CWE839_fgets_45_goodB2GData = v4;
  return goodB2GSink_3();
}
// 67D26C: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_45_goodB2GData;

//----- (00000000004284F7) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_45_good()
{
  goodG2B_138();
  return goodB2G_37();
}

//----- (0000000000428511) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_01_bad()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  __int64 v3; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &v3;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (000000000042858F) ----------------------------------------------------
int goodG2B_139()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (0000000000428609) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_01_good()
{
  return goodG2B_139();
}

//----- (0000000000428619) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_fgets_65_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE127_Buffer_Underread__CWE839_fgets_65b_badSink;
  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000042868A) ----------------------------------------------------
int goodG2B_140()
{
  return CWE127_Buffer_Underread__CWE839_fgets_65b_goodG2BSink(7);
}

//----- (00000000004286B5) ----------------------------------------------------
__int64 goodB2G_38()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = CWE127_Buffer_Underread__CWE839_fgets_65b_goodB2GSink;
  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (0000000000428726) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_fgets_65_good()
{
  goodG2B_140();
  return goodB2G_38();
}

//----- (0000000000428740) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_07_bad()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  __int64 *v7; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( staticFive_5 == 5 )
    v7 = &v3;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *((_BYTE *)v7 + i);
  v2 = 0;
  return printLine(v1);
}
// 67D170: using guessed type int staticFive_5;
// 428740: using guessed type char var_F0[99];

//----- (00000000004287E8) ----------------------------------------------------
int goodG2B1_99()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( staticFive_5 == 5 )
    v6 = &s;
  else
    printLine("Benign, fixed string");
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 67D170: using guessed type int staticFive_5;
// 4287E8: using guessed type char var_F0[99];

//----- (0000000000428898) ----------------------------------------------------
int goodG2B2_99()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( staticFive_5 == 5 )
    v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 67D170: using guessed type int staticFive_5;
// 428898: using guessed type char var_F0[99];

//----- (000000000042893C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_07_good()
{
  goodG2B1_99();
  return goodG2B2_99();
}

//----- (0000000000428956) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_03_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (0000000000428A14) ----------------------------------------------------
int goodG2B1_100()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (0000000000428ACE) ----------------------------------------------------
int goodG2B2_100()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (0000000000428B88) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_03_good()
{
  goodG2B1_100();
  return goodG2B2_100();
}

//----- (0000000000428BA2) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_09_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v6);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000428C30) ----------------------------------------------------
int goodB2G1_30()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v6);
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 462E00: using guessed type int GLOBAL_CONST_TRUE;
// 462E04: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000428CD1) ----------------------------------------------------
int goodB2G2_30()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_TRUE )
    __isoc99_fscanf(stdin, "%d", &v6);
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 < 0 || v6 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000428D66) ----------------------------------------------------
int goodG2B1_101()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;
// 462E04: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000428DE8) ----------------------------------------------------
int goodG2B2_101()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_TRUE )
    v6 = 7;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000428E5E) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_09_good()
{
  goodB2G1_30();
  goodB2G2_30();
  goodG2B1_101();
  return goodG2B2_101();
}

//----- (0000000000428E8C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_34_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-A0h]
  char v4; // [rsp+Fh] [rbp-91h]
  char v5; // [rsp+63h] [rbp-3Dh]
  char *v6; // [rsp+70h] [rbp-30h]
  char *src; // [rsp+78h] [rbp-28h]
  char *v8; // [rsp+80h] [rbp-20h]
  void *s; // [rsp+88h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v8 = (char *)s - 8;
  v6 = (char *)s - 8;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (0000000000428F67) ----------------------------------------------------
int goodG2B_141()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-A0h]
  char v4; // [rsp+Fh] [rbp-91h]
  char v5; // [rsp+63h] [rbp-3Dh]
  void *v6; // [rsp+70h] [rbp-30h]
  char *src; // [rsp+78h] [rbp-28h]
  void *v8; // [rsp+80h] [rbp-20h]
  void *s; // [rsp+88h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v8 = s;
  v6 = s;
  src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000042903E) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_34_good()
{
  return goodG2B_141();
}

//----- (000000000042904E) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_54_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_loop_54b_badSink((__int64)s - 8);
}

//----- (00000000004290C5) ----------------------------------------------------
int goodG2B_142()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_loop_54b_goodG2BSink((__int64)s);
}

//----- (0000000000429138) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_54_good()
{
  return goodG2B_142();
}

//----- (0000000000429148) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_53_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_ncpy_53b_badSink((const char *)&savedregs - 120);
}

//----- (0000000000429184) ----------------------------------------------------
int goodG2B_143()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_ncpy_53b_goodG2BSink(&s);
}

//----- (00000000004291BC) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_53_good()
{
  return goodG2B_143();
}

//----- (00000000004291CC) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_34_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-A0h]
  char v3; // [rsp+Fh] [rbp-91h]
  char v4; // [rsp+63h] [rbp-3Dh]
  char *v5; // [rsp+70h] [rbp-30h]
  void *src; // [rsp+78h] [rbp-28h]
  char *v7; // [rsp+80h] [rbp-20h]
  void *s; // [rsp+88h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = (char *)s - 8;
  v5 = (char *)s - 8;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (000000000042929A) ----------------------------------------------------
int goodG2B_144()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-A0h]
  char v3; // [rsp+Fh] [rbp-91h]
  char v4; // [rsp+63h] [rbp-3Dh]
  void *v5; // [rsp+70h] [rbp-30h]
  void *src; // [rsp+78h] [rbp-28h]
  void *v7; // [rsp+80h] [rbp-20h]
  void *s; // [rsp+88h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = s;
  v5 = s;
  src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (0000000000429364) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_34_good()
{
  return goodG2B_144();
}

//----- (0000000000429374) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_54e_badSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (00000000004293CE) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_54e_goodG2BSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000429428) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_66b_badSink(__int64 a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]
  char *src; // [rsp+78h] [rbp-8h]

  src = *(char **)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, src, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (000000000042948E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_66b_goodG2BSink(__int64 a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]
  char *src; // [rsp+78h] [rbp-8h]

  src = *(char **)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, src, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (00000000004294F4) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_connect_socket_65_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE127_Buffer_Underread__CWE839_connect_socket_65b_badSink;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 4294F4: using guessed type char buf[16];

//----- (00000000004295E5) ----------------------------------------------------
int goodG2B_145()
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_65b_goodG2BSink(7);
}

//----- (0000000000429610) ----------------------------------------------------
__int64 goodB2G_39()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  unsigned int v8; // [rsp+3Ch] [rbp-4h]

  v7 = CWE127_Buffer_Underread__CWE839_connect_socket_65b_goodB2GSink;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v8);
}
// 429610: using guessed type char buf[16];

//----- (0000000000429701) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_connect_socket_65_good()
{
  goodG2B_145();
  return goodB2G_39();
}

//----- (000000000042971B) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_02_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 42971B: using guessed type char buf[16];

//----- (0000000000429889) ----------------------------------------------------
int goodB2G1_31()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 429889: using guessed type char buf[16];

//----- (00000000004299FD) ----------------------------------------------------
int goodB2G2_31()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 4299FD: using guessed type char buf[16];

//----- (0000000000429B71) ----------------------------------------------------
int goodG2B1_102()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (0000000000429BD3) ----------------------------------------------------
int goodG2B2_102()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (0000000000429C35) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_02_good()
{
  goodB2G1_31();
  goodB2G2_31();
  goodG2B1_102();
  return goodG2B2_102();
}

//----- (0000000000429C63) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_18_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (0000000000429D22) ----------------------------------------------------
int goodG2B_146()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (0000000000429DDD) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_18_good()
{
  return goodG2B_146();
}

//----- (0000000000429DED) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_04_bad()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  __int64 v3; // [rsp+C8h] [rbp-78h]
  char s; // [rsp+D0h] [rbp-70h]
  char v5; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = (char *)&v3;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000429E6B) ----------------------------------------------------
int goodG2B1_103()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000429EF1) ----------------------------------------------------
int goodG2B2_103()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000429F6B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_04_good()
{
  goodG2B1_103();
  return goodG2B2_103();
}

//----- (0000000000429F85) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_03_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  char *v5; // [rsp+68h] [rbp-28h]
  void *s; // [rsp+70h] [rbp-20h]
  unsigned __int64 i; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = (char *)s - 8;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v5[i];
  v4 = 0;
  return printLine(v2);
}
// 429F85: using guessed type char var_90[99];

//----- (000000000042A05C) ----------------------------------------------------
int goodG2B1_104()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  _BYTE *v5; // [rsp+68h] [rbp-28h]
  void *s; // [rsp+70h] [rbp-20h]
  unsigned __int64 i; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v5[i];
  v4 = 0;
  return printLine(v2);
}
// 42A05C: using guessed type char var_90[99];

//----- (000000000042A12F) ----------------------------------------------------
int goodG2B2_104()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  _BYTE *v5; // [rsp+68h] [rbp-28h]
  void *s; // [rsp+70h] [rbp-20h]
  unsigned __int64 i; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v5[i];
  v4 = 0;
  return printLine(v2);
}
// 42A12F: using guessed type char var_90[99];

//----- (000000000042A202) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_03_good()
{
  goodG2B1_104();
  return goodG2B2_104();
}

//----- (000000000042A21C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_07_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFive_6 == 5 )
    v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v16;
  v3 = *((_QWORD *)v16 + 1);
  v4 = *((_QWORD *)v16 + 2);
  v5 = *((_QWORD *)v16 + 3);
  v6 = *((_QWORD *)v16 + 4);
  v7 = *((_QWORD *)v16 + 5);
  v8 = *((_QWORD *)v16 + 6);
  v9 = *((_QWORD *)v16 + 7);
  v10 = *((_QWORD *)v16 + 8);
  v11 = *((_QWORD *)v16 + 9);
  v12 = *((_QWORD *)v16 + 10);
  v13 = *((_QWORD *)v16 + 11);
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}
// 67D174: using guessed type int staticFive_6;

//----- (000000000042A325) ----------------------------------------------------
int goodG2B1_105()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFive_6 == 5 )
    v16 = s;
  else
    printLine("Benign, fixed string");
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}
// 67D174: using guessed type int staticFive_6;

//----- (000000000042A436) ----------------------------------------------------
int goodG2B2_105()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFive_6 == 5 )
    v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}
// 67D174: using guessed type int staticFive_6;

//----- (000000000042A53B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_07_good()
{
  goodG2B1_105();
  return goodG2B2_105();
}

//----- (000000000042A555) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_17_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+68h] [rbp-18h]
  char *v16; // [rsp+70h] [rbp-10h]
  int i; // [rsp+7Ch] [rbp-4h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  for ( i = 0; i <= 0; ++i )
    v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v16;
  v3 = *((_QWORD *)v16 + 1);
  v4 = *((_QWORD *)v16 + 2);
  v5 = *((_QWORD *)v16 + 3);
  v6 = *((_QWORD *)v16 + 4);
  v7 = *((_QWORD *)v16 + 5);
  v8 = *((_QWORD *)v16 + 6);
  v9 = *((_QWORD *)v16 + 7);
  v10 = *((_QWORD *)v16 + 8);
  v11 = *((_QWORD *)v16 + 9);
  v12 = *((_QWORD *)v16 + 10);
  v13 = *((_QWORD *)v16 + 11);
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (000000000042A666) ----------------------------------------------------
int goodG2B_147()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+68h] [rbp-18h]
  _QWORD *v16; // [rsp+70h] [rbp-10h]
  int i; // [rsp+7Ch] [rbp-4h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  for ( i = 0; i <= 0; ++i )
    v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (000000000042A773) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_17_good()
{
  return goodG2B_147();
}

//----- (000000000042A783) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_05_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticTrue_4 )
    src = (char *)s - 8;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D178: using guessed type int staticTrue_4;

//----- (000000000042A83D) ----------------------------------------------------
int goodG2B1_106()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFalse_4 )
    printLine("Benign, fixed string");
  else
    src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D270: using guessed type int staticFalse_4;

//----- (000000000042A8FF) ----------------------------------------------------
int goodG2B2_106()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticTrue_4 )
    src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D178: using guessed type int staticTrue_4;

//----- (000000000042A9B5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_05_good()
{
  goodG2B1_106();
  return goodG2B2_106();
}

//----- (000000000042A9CF) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_09_bad()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  __int64 v3; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( GLOBAL_CONST_TRUE )
    src = &v3;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000042AA57) ----------------------------------------------------
int goodG2B1_107()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}
// 462E04: using guessed type int GLOBAL_CONST_FALSE;

//----- (000000000042AAE7) ----------------------------------------------------
int goodG2B2_107()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( GLOBAL_CONST_TRUE )
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000042AB6B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_09_good()
{
  goodG2B1_107();
  return goodG2B2_107();
}

//----- (000000000042AB85) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_41_badSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (000000000042ABDE) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_41_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_cpy_41_badSink((char *)s - 8);
}

//----- (000000000042AC55) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_41_goodG2BSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (000000000042ACAE) ----------------------------------------------------
int goodG2B_148()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_cpy_41_goodG2BSink((const char *)s);
}

//----- (000000000042AD21) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_41_good()
{
  return goodG2B_148();
}

//----- (000000000042AD31) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_17_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-A0h]
  char v3[99]; // [rsp+Fh] [rbp-91h]
  char v4; // [rsp+63h] [rbp-3Dh]
  void *s; // [rsp+70h] [rbp-30h]
  unsigned __int64 j; // [rsp+78h] [rbp-28h]
  char *v7; // [rsp+80h] [rbp-20h]
  int i; // [rsp+8Ch] [rbp-14h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  for ( i = 0; i <= 0; ++i )
    v7 = (char *)s - 8;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( j = 0LL; j <= 0x63; ++j )
    v2[j] = v7[j];
  v4 = 0;
  return printLine(v2);
}
// 42AD31: using guessed type char var_A0[99];

//----- (000000000042AE1B) ----------------------------------------------------
int goodG2B_149()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-A0h]
  char v3[99]; // [rsp+Fh] [rbp-91h]
  char v4; // [rsp+63h] [rbp-3Dh]
  void *s; // [rsp+70h] [rbp-30h]
  unsigned __int64 j; // [rsp+78h] [rbp-28h]
  _BYTE *v7; // [rsp+80h] [rbp-20h]
  int i; // [rsp+8Ch] [rbp-14h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  for ( i = 0; i <= 0; ++i )
    v7 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( j = 0LL; j <= 0x63; ++j )
    v2[j] = v7[j];
  v4 = 0;
  return printLine(v2);
}
// 42AE1B: using guessed type char var_A0[99];

//----- (000000000042AF01) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_17_good()
{
  return goodG2B_149();
}

//----- (000000000042AF11) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_12_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    src = (char *)s - 8;
  else
    src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (000000000042AFE7) ----------------------------------------------------
int goodG2B_150()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  globalReturnsTrueOrFalse();
  src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (000000000042B0B9) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_12_good()
{
  return goodG2B_150();
}

//----- (000000000042B0C9) ----------------------------------------------------
int __fastcall badSink_15(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 42B0C9: using guessed type char s[99];

//----- (000000000042B132) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_loop_44_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(__int64); // [rsp+18h] [rbp-8h]

  v4 = badSink_15;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return ((__int64 (__fastcall *)(char *))v4)((char *)s - 8);
}

//----- (000000000042B1B2) ----------------------------------------------------
int __fastcall goodG2BSink_15(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 42B1B2: using guessed type char s[99];

//----- (000000000042B21B) ----------------------------------------------------
__int64 goodG2B_151()
{
  void *v0; // rsp
  __int64 v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(__int64); // [rsp+18h] [rbp-8h]

  v4 = goodG2BSink_15;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  HIBYTE(v2) = HIBYTE(s);
  return ((__int64 (__fastcall *)(void *))v4)(s);
}

//----- (000000000042B297) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_loop_44_good()
{
  return goodG2B_151();
}

//----- (000000000042B2A7) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54b_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fscanf_54c_badSink(a1);
}

//----- (000000000042B2BE) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54b_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fscanf_54c_goodG2BSink(a1);
}

//----- (000000000042B2D5) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54b_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fscanf_54c_goodB2GSink(a1);
}

//----- (000000000042B2EC) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54b_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_54c_badSink(a1);
}

//----- (000000000042B303) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54b_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_54c_goodG2BSink(a1);
}

//----- (000000000042B31A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54b_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_54c_goodB2GSink(a1);
}

//----- (000000000042B331) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_53c_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_loop_53d_badSink(a1);
}

//----- (000000000042B34B) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_53c_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_loop_53d_goodG2BSink(a1);
}

//----- (000000000042B365) ----------------------------------------------------
int __fastcall badSink_16(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000042B3BC) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_fgets_44_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = badSink_16;
  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000042B42D) ----------------------------------------------------
int __fastcall goodG2BSink_16(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000042B484) ----------------------------------------------------
int goodG2B_152()
{
  return goodG2BSink_16(7);
}

//----- (000000000042B4AF) ----------------------------------------------------
int __fastcall goodB2GSink_4(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000042B50C) ----------------------------------------------------
__int64 goodB2G_40()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int (__fastcall *v4)(int); // [rsp+10h] [rbp-10h]
  unsigned int v5; // [rsp+1Ch] [rbp-4h]

  v4 = goodB2GSink_4;
  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  return ((__int64 (__fastcall *)(_QWORD))v4)(v5);
}

//----- (000000000042B57D) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_fgets_44_good()
{
  goodG2B_152();
  return goodB2G_40();
}

//----- (000000000042B597) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_34_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-F0h]
  char v3; // [rsp+Fh] [rbp-E1h]
  char v4; // [rsp+C7h] [rbp-29h]
  char *v5; // [rsp+D0h] [rbp-20h]
  char *src; // [rsp+D8h] [rbp-18h]
  char *v7; // [rsp+E0h] [rbp-10h]
  void *s; // [rsp+E8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = (char *)s - 8;
  v5 = (char *)s - 8;
  src = (char *)s - 8;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000042B657) ----------------------------------------------------
int goodG2B_153()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-F0h]
  char v3; // [rsp+Fh] [rbp-E1h]
  char v4; // [rsp+C7h] [rbp-29h]
  void *v5; // [rsp+D0h] [rbp-20h]
  char *src; // [rsp+D8h] [rbp-18h]
  void *v7; // [rsp+E0h] [rbp-10h]
  void *s; // [rsp+E8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = s;
  v5 = s;
  src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000042B713) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_34_good()
{
  return goodG2B_153();
}

//----- (000000000042B723) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_15_bad()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  __int64 v14; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v16; // [rsp+D3h] [rbp-Dh]
  __int64 *v17; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  v17 = &v14;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *v17;
  v2 = v17[1];
  v3 = v17[2];
  v4 = v17[3];
  v5 = v17[4];
  v6 = v17[5];
  v7 = v17[6];
  v8 = v17[7];
  v9 = v17[8];
  v10 = v17[9];
  v11 = v17[10];
  v12 = v17[11];
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (000000000042B814) ----------------------------------------------------
int goodG2B1_108()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (000000000042B901) ----------------------------------------------------
int goodG2B2_108()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (000000000042B9EE) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_15_good()
{
  goodG2B1_108();
  return goodG2B2_108();
}

//----- (000000000042BA08) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_66b_badSink(__int64 a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]
  char *src; // [rsp+D8h] [rbp-8h]

  src = *(char **)(a1 + 16);
  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, src);
  return printLine(&s);
}

//----- (000000000042BA6D) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_66b_goodG2BSink(__int64 a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]
  char *src; // [rsp+D8h] [rbp-8h]

  src = *(char **)(a1 + 16);
  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, src);
  return printLine(&s);
}

//----- (000000000042BAD2) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_31_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, "%d", &v6);
  v8 = v6;
  v7 = v6;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v7));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042BB56) ----------------------------------------------------
int goodG2B_154()
{
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  int v5; // [rsp+38h] [rbp-8h]
  int v6; // [rsp+3Ch] [rbp-4h]

  v6 = 7;
  v5 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000042BBC4) ----------------------------------------------------
int goodB2G_41()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+34h] [rbp-Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, "%d", &v6);
  v8 = v6;
  v7 = v6;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v7 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v7));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042BC4E) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_31_good()
{
  goodG2B_154();
  return goodB2G_41();
}

//----- (000000000042BC68) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_54b_badSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_declare_memmove_54c_badSink(a1);
}

//----- (000000000042BC82) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_54b_goodG2BSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_declare_memmove_54c_goodG2BSink(a1);
}

//----- (000000000042BC9C) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_53b_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_53c_badSink(a1);
}

//----- (000000000042BCB3) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_53b_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_53c_goodG2BSink(a1);
}

//----- (000000000042BCCA) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_53b_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_53c_goodB2GSink(a1);
}

//----- (000000000042BCE1) ----------------------------------------------------
__int64 __fastcall CWE127_Buffer_Underread__CWE839_fgets_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (000000000042BD3E) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_fgets_61b_goodG2BSource()
{
  return 7LL;
}

//----- (000000000042BD51) ----------------------------------------------------
__int64 __fastcall CWE127_Buffer_Underread__CWE839_fgets_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-14h]
  char s[8]; // [rsp+10h] [rbp-10h]
  int v4; // [rsp+18h] [rbp-8h]
  __int16 v5; // [rsp+1Ch] [rbp-4h]

  v2 = a1;
  *(_QWORD *)s = 0LL;
  v4 = 0;
  v5 = 0;
  if ( fgets(s, 14, stdin) )
    v2 = atoi(s);
  else
    printLine("fgets() failed.");
  return v2;
}

//----- (000000000042BDAE) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_52c_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000042BE05) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_52c_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000042BE5C) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_52c_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000042BEB9) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_11_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsTrue() )
    src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (000000000042BF85) ----------------------------------------------------
int goodG2B1_109()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (000000000042C059) ----------------------------------------------------
int goodG2B2_109()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsTrue() )
    src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (000000000042C121) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_11_good()
{
  goodG2B1_109();
  return goodG2B2_109();
}

//----- (000000000042C13B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_02_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (000000000042C1F9) ----------------------------------------------------
int goodG2B1_110()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (000000000042C2B3) ----------------------------------------------------
int goodG2B2_110()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (000000000042C36D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_02_good()
{
  goodG2B1_110();
  return goodG2B2_110();
}

//----- (000000000042C387) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_54b_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_ncpy_54c_badSink(a1);
}

//----- (000000000042C3A1) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_54b_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_ncpy_54c_goodG2BSink(a1);
}

//----- (000000000042C3BB) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_54_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE127_Buffer_Underread__CWE839_fscanf_54b_badSink(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C3F3) ----------------------------------------------------
int goodG2B_155()
{
  return CWE127_Buffer_Underread__CWE839_fscanf_54b_goodG2BSink(7);
}

//----- (000000000042C415) ----------------------------------------------------
int goodB2G_42()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE127_Buffer_Underread__CWE839_fscanf_54b_goodB2GSink(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042C44D) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_54_good()
{
  goodG2B_155();
  return goodB2G_42();
}

//----- (000000000042C467) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_68_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE127_Buffer_Underread__CWE839_connect_socket_68_badData = v7;
  return CWE127_Buffer_Underread__CWE839_connect_socket_68b_badSink();
}
// 67D3A0: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_68_badData;
// 42C467: using guessed type char buf[16];

//----- (000000000042C558) ----------------------------------------------------
int goodG2B_156()
{
  CWE127_Buffer_Underread__CWE839_connect_socket_68_goodG2BData = 7;
  return CWE127_Buffer_Underread__CWE839_connect_socket_68b_goodG2BSink();
}
// 67D39C: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_68_goodG2BData;

//----- (000000000042C583) ----------------------------------------------------
int goodB2G_43()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE127_Buffer_Underread__CWE839_connect_socket_68_goodB2GData = v7;
  return CWE127_Buffer_Underread__CWE839_connect_socket_68b_goodB2GSink();
}
// 67D398: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_68_goodB2GData;
// 42C583: using guessed type char buf[16];

//----- (000000000042C674) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_68_good()
{
  goodG2B_156();
  return goodB2G_43();
}

//----- (000000000042C68E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_51b_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000042C72F) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_51b_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000042C7D0) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_63_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_cpy_63b_badSink((char **)&v3);
}

//----- (000000000042C80C) ----------------------------------------------------
int goodG2B_157()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_cpy_63b_goodG2BSink(&v3);
}

//----- (000000000042C844) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_63_good()
{
  return goodG2B_157();
}

//----- (000000000042C854) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_10_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalTrue )
    src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}
// 67D1B4: using guessed type int globalTrue;

//----- (000000000042C91C) ----------------------------------------------------
int goodG2B1_111()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}
// 67D368: using guessed type int globalFalse;

//----- (000000000042C9EC) ----------------------------------------------------
int goodG2B2_111()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalTrue )
    src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}
// 67D1B4: using guessed type int globalTrue;

//----- (000000000042CAB0) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_10_good()
{
  goodG2B1_111();
  return goodG2B2_111();
}

//----- (000000000042CACA) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_54e_badSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (000000000042CB23) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_54e_goodG2BSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (000000000042CB7C) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_07_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( staticFive_7 == 5 )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  result = staticFive_7;
  if ( staticFive_7 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v13 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v13));
  }
  return result;
}
// 67D17C: using guessed type int staticFive_7;
// 42CB7C: using guessed type char buf[16];

//----- (000000000042CD04) ----------------------------------------------------
int goodB2G1_32()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( staticFive_7 == 5 )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  if ( staticFive_7 != 5 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 67D17C: using guessed type int staticFive_7;
// 42CD04: using guessed type char buf[16];

//----- (000000000042CE9E) ----------------------------------------------------
int goodB2G2_32()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( staticFive_7 == 5 )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  result = staticFive_7;
  if ( staticFive_7 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v13 < 0 || v13 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v13));
  }
  return result;
}
// 67D17C: using guessed type int staticFive_7;
// 42CE9E: using guessed type char buf[16];

//----- (000000000042D02C) ----------------------------------------------------
int goodG2B1_112()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticFive_7 == 5 )
    v6 = 7;
  else
    printLine("Benign, fixed string");
  result = staticFive_7;
  if ( staticFive_7 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D17C: using guessed type int staticFive_7;

//----- (000000000042D0B0) ----------------------------------------------------
int goodG2B2_112()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticFive_7 == 5 )
    v6 = 7;
  result = staticFive_7;
  if ( staticFive_7 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D17C: using guessed type int staticFive_7;

//----- (000000000042D128) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_07_good()
{
  goodB2G1_32();
  goodB2G2_32();
  goodG2B1_112();
  return goodG2B2_112();
}

//----- (000000000042D156) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_66_bad()
{
  void *v0; // rsp
  char v2; // [rsp+0h] [rbp-40h]
  char v3; // [rsp+Fh] [rbp-31h]
  char *v4; // [rsp+10h] [rbp-30h]
  char *v5; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = (char *)s - 8;
  v4 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_cpy_66b_badSink((__int64)&v2);
}

//----- (000000000042D1D5) ----------------------------------------------------
int goodG2B_158()
{
  void *v0; // rsp
  char v2; // [rsp+0h] [rbp-40h]
  char v3; // [rsp+Fh] [rbp-31h]
  void *v4; // [rsp+10h] [rbp-30h]
  void *v5; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = s;
  v4 = s;
  return CWE127_Buffer_Underread__char_alloca_cpy_66b_goodG2BSink((__int64)&v2);
}

//----- (000000000042D250) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_66_good()
{
  return goodG2B_158();
}

//----- (000000000042D260) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_15_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  char *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000042D32C) ----------------------------------------------------
int goodG2B1_113()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  char *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000042D3F4) ----------------------------------------------------
int goodG2B2_113()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  char *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000042D4BC) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_15_good()
{
  goodG2B1_113();
  return goodG2B2_113();
}

//----- (000000000042D4D6) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_05_bad()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  __int64 v14; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v16; // [rsp+D3h] [rbp-Dh]
  __int64 *v17; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  if ( staticTrue_5 )
    v17 = &v14;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *v17;
  v2 = v17[1];
  v3 = v17[2];
  v4 = v17[3];
  v5 = v17[4];
  v6 = v17[5];
  v7 = v17[6];
  v8 = v17[7];
  v9 = v17[8];
  v10 = v17[9];
  v11 = v17[10];
  v12 = v17[11];
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}
// 67D180: using guessed type int staticTrue_5;

//----- (000000000042D5D0) ----------------------------------------------------
int goodG2B1_114()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  if ( staticFalse_5 )
    printLine("Benign, fixed string");
  else
    v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}
// 67D274: using guessed type int staticFalse_5;

//----- (000000000042D6D2) ----------------------------------------------------
int goodG2B2_114()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  if ( staticTrue_5 )
    v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}
// 67D180: using guessed type int staticTrue_5;

//----- (000000000042D7C8) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_05_good()
{
  goodG2B1_114();
  return goodG2B2_114();
}

//----- (000000000042D7E2) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_41_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000042D883) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_41_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_memcpy_41_badSink((__int64)(&savedregs - 15));
}

//----- (000000000042D8BF) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_41_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000042D960) ----------------------------------------------------
int goodG2B_159()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_memcpy_41_goodG2BSink((__int64)&s);
}

//----- (000000000042D998) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_41_good()
{
  return goodG2B_159();
}

//----- (000000000042D9A8) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_41_badSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (000000000042DA02) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_41_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_ncpy_41_badSink((const char *)&savedregs - 120);
}

//----- (000000000042DA3E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_41_goodG2BSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (000000000042DA98) ----------------------------------------------------
int goodG2B_160()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_ncpy_41_goodG2BSink(&s);
}

//----- (000000000042DAD0) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_41_good()
{
  return goodG2B_160();
}

//----- (000000000042DAE0) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_65b_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000042DB37) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_65b_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000042DB8E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_65b_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000042DBEB) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_54_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_memmove_54b_badSink(&savedregs - 15);
}

//----- (000000000042DC27) ----------------------------------------------------
int goodG2B_161()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_memmove_54b_goodG2BSink(&s);
}

//----- (000000000042DC5F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_54_good()
{
  return goodG2B_161();
}

//----- (000000000042DC6F) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_61_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_fgets_61b_badSource(0xFFFFFFFF);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (000000000042DCD7) ----------------------------------------------------
int goodG2B_162()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_fgets_61b_goodG2BSource();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (000000000042DD3F) ----------------------------------------------------
int goodB2G_44()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_fgets_61b_goodB2GSource(0xFFFFFFFF);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (000000000042DDAD) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_61_good()
{
  goodG2B_162();
  return goodB2G_44();
}

//----- (000000000042DDC7) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_01_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 42DDC7: using guessed type char buf[16];

//----- (000000000042DF35) ----------------------------------------------------
int goodG2B_163()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000042DF97) ----------------------------------------------------
int goodB2G_45()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 42DF97: using guessed type char buf[16];

//----- (000000000042E10B) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_01_good()
{
  goodG2B_163();
  return goodB2G_45();
}

//----- (000000000042E125) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_01_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (000000000042E1E3) ----------------------------------------------------
int goodG2B_164()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (000000000042E29D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_01_good()
{
  return goodG2B_164();
}

//----- (000000000042E2AD) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_63b_badSink(void **a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  void *src; // [rsp+78h] [rbp-8h]

  src = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, src, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000042E308) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_63b_goodG2BSink(void **a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  void *src; // [rsp+78h] [rbp-8h]

  src = *a1;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, src, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000042E363) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_14_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  __int64 v4; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v6; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  if ( globalFive == 5 )
    src = (char *)&v4;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000042E3F9) ----------------------------------------------------
int goodG2B1_115()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( globalFive == 5 )
    src = &s;
  else
    printLine("Benign, fixed string");
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000042E497) ----------------------------------------------------
int goodG2B2_115()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( globalFive == 5 )
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000042E529) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_14_good()
{
  goodG2B1_115();
  return goodG2B2_115();
}

//----- (000000000042E543) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_53d_badSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000042E593) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_53d_goodG2BSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000042E5E3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_32_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-100h]
  char v3; // [rsp+63h] [rbp-9Dh]
  __int64 v4; // [rsp+68h] [rbp-98h]
  char s; // [rsp+70h] [rbp-90h]
  char v6; // [rsp+D3h] [rbp-2Dh]
  char v7; // [rsp+D8h] [rbp-28h]
  char *src; // [rsp+E0h] [rbp-20h]
  __int64 *v9; // [rsp+E8h] [rbp-18h]
  char **v10; // [rsp+F0h] [rbp-10h]
  char *v11; // [rsp+F8h] [rbp-8h]

  v11 = &v7;
  v10 = (char **)&v7;
  memset(&s, 65, 0x63uLL);
  v6 = 0;
  v9 = &v4;
  *(_QWORD *)v11 = &v4;
  src = *v10;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (000000000042E6AB) ----------------------------------------------------
int goodG2B_165()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-100h]
  char v3; // [rsp+63h] [rbp-9Dh]
  char s; // [rsp+70h] [rbp-90h]
  char v5; // [rsp+D3h] [rbp-2Dh]
  char v6; // [rsp+D8h] [rbp-28h]
  char *src; // [rsp+E0h] [rbp-20h]
  char *v8; // [rsp+E8h] [rbp-18h]
  char **v9; // [rsp+F0h] [rbp-10h]
  char *v10; // [rsp+F8h] [rbp-8h]

  v10 = &v6;
  v9 = (char **)&v6;
  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v8 = &s;
  *(_QWORD *)v10 = &s;
  src = *v9;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (000000000042E76F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_32_good()
{
  return goodG2B_165();
}

//----- (000000000042E77F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_07_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  char *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFive_8 == 5 )
    v7 = (char *)s - 8;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 67D184: using guessed type int staticFive_8;
// 42E77F: using guessed type char var_90[99];

//----- (000000000042E861) ----------------------------------------------------
int goodG2B1_116()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFive_8 == 5 )
    v7 = s;
  else
    printLine("Benign, fixed string");
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 67D184: using guessed type int staticFive_8;
// 42E861: using guessed type char var_90[99];

//----- (000000000042E94B) ----------------------------------------------------
int goodG2B2_116()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFive_8 == 5 )
    v7 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 67D184: using guessed type int staticFive_8;
// 42E94B: using guessed type char var_90[99];

//----- (000000000042EA29) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_07_good()
{
  goodG2B1_116();
  return goodG2B2_116();
}

//----- (000000000042EA43) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_53c_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_memcpy_53d_badSink(a1);
}

//----- (000000000042EA5D) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_53c_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_memcpy_53d_goodG2BSink(a1);
}

//----- (000000000042EA77) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_15_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 42EA77: using guessed type char buf[16];

//----- (000000000042EBE7) ----------------------------------------------------
int goodB2G1_33()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 42EBE7: using guessed type char buf[16];

//----- (000000000042ED5D) ----------------------------------------------------
int goodB2G2_33()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 42ED5D: using guessed type char buf[16];

//----- (000000000042EED3) ----------------------------------------------------
int goodG2B1_117()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000042EF37) ----------------------------------------------------
int goodG2B2_117()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000042EF9B) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_15_good()
{
  goodB2G1_33();
  goodB2G2_33();
  goodG2B1_117();
  return goodG2B2_117();
}

//----- (000000000042EFC9) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_07_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( staticFive_9 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_9;
  if ( staticFive_9 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v9 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v9));
  }
  return result;
}
// 67D188: using guessed type int staticFive_9;

//----- (000000000042F087) ----------------------------------------------------
int goodB2G1_34()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( staticFive_9 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( staticFive_9 != 5 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}
// 67D188: using guessed type int staticFive_9;

//----- (000000000042F157) ----------------------------------------------------
int goodB2G2_34()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( staticFive_9 == 5 )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = staticFive_9;
  if ( staticFive_9 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v9 < 0 || v9 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v9));
  }
  return result;
}
// 67D188: using guessed type int staticFive_9;

//----- (000000000042F21B) ----------------------------------------------------
int goodG2B1_118()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticFive_9 == 5 )
    v6 = 7;
  else
    printLine("Benign, fixed string");
  result = staticFive_9;
  if ( staticFive_9 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D188: using guessed type int staticFive_9;

//----- (000000000042F29F) ----------------------------------------------------
int goodG2B2_118()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticFive_9 == 5 )
    v6 = 7;
  result = staticFive_9;
  if ( staticFive_9 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D188: using guessed type int staticFive_9;

//----- (000000000042F317) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_07_good()
{
  goodB2G1_34();
  goodB2G2_34();
  goodG2B1_118();
  return goodG2B2_118();
}

//----- (000000000042F345) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_53c_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fscanf_53d_badSink(a1);
}

//----- (000000000042F35C) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_53c_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fscanf_53d_goodG2BSink(a1);
}

//----- (000000000042F373) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_53c_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fscanf_53d_goodB2GSink(a1);
}

//----- (000000000042F38A) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_22_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE127_Buffer_Underread__CWE839_listen_socket_22_badGlobal = 1;
  return CWE127_Buffer_Underread__CWE839_listen_socket_22_badSink(v8);
}
// 67D278: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_22_badGlobal;
// 42F38A: using guessed type char buf[16];

//----- (000000000042F4C2) ----------------------------------------------------
int goodB2G1_35()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE127_Buffer_Underread__CWE839_listen_socket_22_goodB2G1Global = 0;
  return CWE127_Buffer_Underread__CWE839_listen_socket_22_goodB2G1Sink(v8);
}
// 67D27C: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_22_goodB2G1Global;
// 42F4C2: using guessed type char buf[16];

//----- (000000000042F5FA) ----------------------------------------------------
int goodB2G2_35()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE127_Buffer_Underread__CWE839_listen_socket_22_goodB2G2Global = 1;
  return CWE127_Buffer_Underread__CWE839_listen_socket_22_goodB2G2Sink(v8);
}
// 67D280: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_22_goodB2G2Global;
// 42F5FA: using guessed type char buf[16];

//----- (000000000042F732) ----------------------------------------------------
int goodG2B_166()
{
  CWE127_Buffer_Underread__CWE839_listen_socket_22_goodG2BGlobal = 1;
  return CWE127_Buffer_Underread__CWE839_listen_socket_22_goodG2BSink(7);
}
// 67D284: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_22_goodG2BGlobal;

//----- (000000000042F75E) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_22_good()
{
  goodB2G1_35();
  goodB2G2_35();
  return goodG2B_166();
}

//----- (000000000042F782) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_65b_badSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000042F7D2) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_65b_goodG2BSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000042F822) ----------------------------------------------------
__int64 __fastcall badSource_0(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 42F822: using guessed type char buf[16];

//----- (000000000042F945) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_42_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = badSource_0(0xFFFFFFFF);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (000000000042F9AD) ----------------------------------------------------
__int64 goodG2BSource_0()
{
  return 7LL;
}

//----- (000000000042F9C0) ----------------------------------------------------
int goodG2B_167()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = goodG2BSource_0();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (000000000042FA28) ----------------------------------------------------
__int64 __fastcall goodB2GSource_0(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  int v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = 0;
    v5 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v9 = accept(fd, 0LL, 0LL);
      if ( v9 != -1 )
      {
        v7 = recv(v9, buf, 0xDuLL, 0);
        if ( v7 != -1 )
        {
          if ( v7 )
          {
            buf[v7] = 0;
            v2 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v9 != -1 )
    close(v9);
  return v2;
}
// 42FA28: using guessed type char buf[16];

//----- (000000000042FB4B) ----------------------------------------------------
int goodB2G_46()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = goodB2GSource_0(0xFFFFFFFF);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (000000000042FBB9) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_42_good()
{
  goodB2G_46();
  return goodG2B_167();
}

//----- (000000000042FBD3) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54e_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000042FC2A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54e_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000042FC81) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54e_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000042FCDE) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_fscanf_65_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE127_Buffer_Underread__CWE839_fscanf_65b_badSink;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042FD1F) ----------------------------------------------------
int goodG2B_168()
{
  return CWE127_Buffer_Underread__CWE839_fscanf_65b_goodG2BSink(7);
}

//----- (000000000042FD4A) ----------------------------------------------------
__int64 goodB2G_47()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = CWE127_Buffer_Underread__CWE839_fscanf_65b_goodB2GSink;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000042FD8B) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_fscanf_65_good()
{
  goodG2B_168();
  return goodB2G_47();
}

//----- (000000000042FDA5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_15_bad()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  __int64 *v6; // [rsp+E0h] [rbp-10h]
  unsigned __int64 i; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v6 = &v3;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *((_BYTE *)v6 + i);
  v2 = 0;
  return printLine(v1);
}
// 42FDA5: using guessed type char var_F0[99];

//----- (000000000042FE43) ----------------------------------------------------
int goodG2B1_119()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  char *v5; // [rsp+E0h] [rbp-10h]
  unsigned __int64 i; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v5 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v5[i];
  v2 = 0;
  return printLine(v1);
}
// 42FE43: using guessed type char var_F0[99];

//----- (000000000042FEDD) ----------------------------------------------------
int goodG2B2_119()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  char *v5; // [rsp+E0h] [rbp-10h]
  unsigned __int64 i; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v5 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v5[i];
  v2 = 0;
  return printLine(v1);
}
// 42FEDD: using guessed type char var_F0[99];

//----- (000000000042FF77) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_15_good()
{
  goodG2B1_119();
  return goodG2B2_119();
}

//----- (000000000042FF91) ----------------------------------------------------
__int64 staticReturnsTrue_7()
{
  return 1LL;
}

//----- (000000000042FF9C) ----------------------------------------------------
__int64 staticReturnsFalse_7()
{
  return 0LL;
}

//----- (000000000042FFA7) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_08_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)staticReturnsTrue_7() )
    src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (0000000000430073) ----------------------------------------------------
int goodG2B1_120()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)staticReturnsFalse_7() )
    printLine("Benign, fixed string");
  else
    src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (0000000000430147) ----------------------------------------------------
int goodG2B2_120()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)staticReturnsTrue_7() )
    src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (000000000043020F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_08_good()
{
  goodG2B1_120();
  return goodG2B2_120();
}

//----- (0000000000430229) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_52b_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_52c_badSink(a1);
}

//----- (0000000000430240) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_52b_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_52c_goodG2BSink(a1);
}

//----- (0000000000430257) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_52b_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_52c_goodB2GSink(a1);
}

//----- (000000000043026E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_53c_badSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_declare_memmove_53d_badSink(a1);
}

//----- (0000000000430288) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_53c_goodG2BSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_declare_memmove_53d_goodG2BSink(a1);
}

//----- (00000000004302A2) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_04_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  __int64 v4; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v6; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  src = (char *)&v4;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (0000000000430336) ----------------------------------------------------
int goodG2B1_121()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (00000000004303D2) ----------------------------------------------------
int goodG2B2_121()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (0000000000430462) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_04_good()
{
  goodG2B1_121();
  return goodG2B2_121();
}

//----- (000000000043047C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_31_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-F0h]
  char v3; // [rsp+63h] [rbp-8Dh]
  __int64 v4; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v6; // [rsp+D3h] [rbp-1Dh]
  char *src; // [rsp+D8h] [rbp-18h]
  __int64 *v8; // [rsp+E0h] [rbp-10h]
  __int64 *v9; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  v9 = &v4;
  v8 = &v4;
  src = (char *)&v4;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (000000000043051D) ----------------------------------------------------
int goodG2B_169()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-F0h]
  char v3; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  char *src; // [rsp+D8h] [rbp-18h]
  char *v7; // [rsp+E0h] [rbp-10h]
  char *v8; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v8 = &s;
  v7 = &s;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (00000000004305BA) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_31_good()
{
  return goodG2B_169();
}

//----- (00000000004305CA) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_14_bad()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  __int64 v3; // [rsp+C8h] [rbp-78h]
  char s; // [rsp+D0h] [rbp-70h]
  char v5; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( globalFive == 5 )
    src = (char *)&v3;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000043064A) ----------------------------------------------------
int goodG2B1_122()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( globalFive == 5 )
    src = &s;
  else
    printLine("Benign, fixed string");
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D1B8: using guessed type int globalFive;

//----- (00000000004306D2) ----------------------------------------------------
int goodG2B2_122()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( globalFive == 5 )
    src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000043074E) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_14_good()
{
  goodG2B1_122();
  return goodG2B2_122();
}

//----- (0000000000430768) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_32_bad()
{
  char dest; // [rsp+0h] [rbp-160h]
  char v2; // [rsp+C7h] [rbp-99h]
  __int64 v3; // [rsp+C8h] [rbp-98h]
  char s; // [rsp+D0h] [rbp-90h]
  char v5; // [rsp+133h] [rbp-2Dh]
  char v6; // [rsp+138h] [rbp-28h]
  char *src; // [rsp+140h] [rbp-20h]
  __int64 *v8; // [rsp+148h] [rbp-18h]
  char **v9; // [rsp+150h] [rbp-10h]
  char *v10; // [rsp+158h] [rbp-8h]

  v10 = &v6;
  v9 = (char **)&v6;
  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v8 = &v3;
  *(_QWORD *)v10 = &v3;
  src = *v9;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000430817) ----------------------------------------------------
int goodG2B_170()
{
  char dest; // [rsp+0h] [rbp-160h]
  char v2; // [rsp+C7h] [rbp-99h]
  char s; // [rsp+D0h] [rbp-90h]
  char v4; // [rsp+133h] [rbp-2Dh]
  char v5; // [rsp+138h] [rbp-28h]
  char *src; // [rsp+140h] [rbp-20h]
  char *v7; // [rsp+148h] [rbp-18h]
  char **v8; // [rsp+150h] [rbp-10h]
  char *v9; // [rsp+158h] [rbp-8h]

  v9 = &v5;
  v8 = (char **)&v5;
  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v7 = &s;
  *(_QWORD *)v9 = &s;
  src = *v8;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (00000000004308C2) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_32_good()
{
  return goodG2B_170();
}

//----- (00000000004308D2) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_31_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-F0h]
  char v3; // [rsp+Fh] [rbp-E1h]
  char v4; // [rsp+C7h] [rbp-29h]
  char *src; // [rsp+D0h] [rbp-20h]
  char *v6; // [rsp+D8h] [rbp-18h]
  char *v7; // [rsp+E0h] [rbp-10h]
  void *s; // [rsp+E8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = (char *)s - 8;
  v6 = (char *)s - 8;
  src = (char *)s - 8;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000430992) ----------------------------------------------------
int goodG2B_171()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-F0h]
  char v3; // [rsp+Fh] [rbp-E1h]
  char v4; // [rsp+C7h] [rbp-29h]
  char *src; // [rsp+D0h] [rbp-20h]
  void *v6; // [rsp+D8h] [rbp-18h]
  void *v7; // [rsp+E0h] [rbp-10h]
  void *s; // [rsp+E8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = s;
  v6 = s;
  src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000430A4E) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_31_good()
{
  return goodG2B_171();
}

//----- (0000000000430A5E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_54e_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (0000000000430AFF) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_54e_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (0000000000430BA0) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_66_bad()
{
  char s; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  char v3; // [rsp+70h] [rbp-30h]
  __int64 *v4; // [rsp+80h] [rbp-20h]
  __int64 *v5; // [rsp+98h] [rbp-8h]
  __int64 savedregs; // [rsp+A0h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v5 = &savedregs - 21;
  v4 = &savedregs - 21;
  return CWE127_Buffer_Underread__char_declare_memcpy_66b_badSink((__int64)&v3);
}

//----- (0000000000430BED) ----------------------------------------------------
int goodG2B_172()
{
  char s; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  char v3; // [rsp+70h] [rbp-30h]
  char *v4; // [rsp+80h] [rbp-20h]
  char *v5; // [rsp+98h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v5 = &s;
  v4 = &s;
  return CWE127_Buffer_Underread__char_declare_memcpy_66b_goodG2BSink((__int64)&v3);
}

//----- (0000000000430C36) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_66_good()
{
  return goodG2B_172();
}

//----- (0000000000430C46) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_15_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  char *v15; // [rsp+70h] [rbp-10h]
  void *s; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v15 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v15;
  v3 = *((_QWORD *)v15 + 1);
  v4 = *((_QWORD *)v15 + 2);
  v5 = *((_QWORD *)v15 + 3);
  v6 = *((_QWORD *)v15 + 4);
  v7 = *((_QWORD *)v15 + 5);
  v8 = *((_QWORD *)v15 + 6);
  v9 = *((_QWORD *)v15 + 7);
  v10 = *((_QWORD *)v15 + 8);
  v11 = *((_QWORD *)v15 + 9);
  v12 = *((_QWORD *)v15 + 10);
  v13 = *((_QWORD *)v15 + 11);
  v14 = *((_DWORD *)v15 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (0000000000430D45) ----------------------------------------------------
int goodG2B1_123()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  _QWORD *v15; // [rsp+70h] [rbp-10h]
  void *s; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v15 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v15;
  v3 = v15[1];
  v4 = v15[2];
  v5 = v15[3];
  v6 = v15[4];
  v7 = v15[5];
  v8 = v15[6];
  v9 = v15[7];
  v10 = v15[8];
  v11 = v15[9];
  v12 = v15[10];
  v13 = v15[11];
  v14 = *((_DWORD *)v15 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (0000000000430E40) ----------------------------------------------------
int goodG2B2_123()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  _QWORD *v15; // [rsp+70h] [rbp-10h]
  void *s; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v15 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v15;
  v3 = v15[1];
  v4 = v15[2];
  v5 = v15[3];
  v6 = v15[4];
  v7 = v15[5];
  v8 = v15[6];
  v9 = v15[7];
  v10 = v15[8];
  v11 = v15[9];
  v12 = v15[10];
  v13 = v15[11];
  v14 = *((_DWORD *)v15 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (0000000000430F3B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_15_good()
{
  goodG2B1_123();
  return goodG2B2_123();
}

//----- (0000000000430F55) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_52_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_ncpy_52b_badSink((const char *)&savedregs - 120);
}

//----- (0000000000430F91) ----------------------------------------------------
int goodG2B_173()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_ncpy_52b_goodG2BSink(&s);
}

//----- (0000000000430FC9) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_52_good()
{
  return goodG2B_173();
}

//----- (0000000000430FD9) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_05_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( staticTrue_6 )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  result = staticTrue_6;
  if ( staticTrue_6 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v13 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v13));
  }
  return result;
}
// 67D18C: using guessed type int staticTrue_6;
// 430FD9: using guessed type char buf[16];

//----- (000000000043115F) ----------------------------------------------------
int goodB2G1_36()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( staticTrue_6 )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  if ( staticFalse_6 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 67D18C: using guessed type int staticTrue_6;
// 67D288: using guessed type int staticFalse_6;
// 43115F: using guessed type char buf[16];

//----- (00000000004312F7) ----------------------------------------------------
int goodB2G2_36()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( staticTrue_6 )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  result = staticTrue_6;
  if ( staticTrue_6 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v13 < 0 || v13 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v13));
  }
  return result;
}
// 67D18C: using guessed type int staticTrue_6;
// 4312F7: using guessed type char buf[16];

//----- (0000000000431483) ----------------------------------------------------
int goodG2B1_124()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticFalse_6 )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = staticTrue_6;
  if ( staticTrue_6 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D18C: using guessed type int staticTrue_6;
// 67D288: using guessed type int staticFalse_6;

//----- (0000000000431505) ----------------------------------------------------
int goodG2B2_124()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticTrue_6 )
    v6 = 7;
  result = staticTrue_6;
  if ( staticTrue_6 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D18C: using guessed type int staticTrue_6;

//----- (000000000043157B) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_05_good()
{
  goodB2G1_36();
  goodB2G2_36();
  goodG2B1_124();
  return goodG2B2_124();
}

//----- (00000000004315A9) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_memmove_65_bad()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(const void *); // [rsp+78h] [rbp-8h]
  __int64 savedregs; // [rsp+80h] [rbp+0h]

  v4 = CWE127_Buffer_Underread__char_declare_memmove_65b_badSink;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 17;
  return ((__int64 (__fastcall *)(__int64 *))v4)(&savedregs - 17);
}

//----- (00000000004315EE) ----------------------------------------------------
__int64 goodG2B_174()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  char *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(const void *); // [rsp+78h] [rbp-8h]

  v4 = CWE127_Buffer_Underread__char_declare_memmove_65b_goodG2BSink;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return ((__int64 (__fastcall *)(char *))v4)(&s);
}

//----- (000000000043162F) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_memmove_65_good()
{
  return goodG2B_174();
}

//----- (000000000043163F) ----------------------------------------------------
int __fastcall badSink_17(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000431696) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_41_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return badSink_17(v8);
}
// 431696: using guessed type char buf[16];

//----- (00000000004317C4) ----------------------------------------------------
int __fastcall goodG2BSink_17(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000043181B) ----------------------------------------------------
int goodG2B_175()
{
  return goodG2BSink_17(7);
}

//----- (000000000043183D) ----------------------------------------------------
int __fastcall goodB2GSink_5(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000043189A) ----------------------------------------------------
int goodB2G_48()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return goodB2GSink_5(v8);
}
// 43189A: using guessed type char buf[16];

//----- (00000000004319C8) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_41_good()
{
  goodB2G_48();
  return goodG2B_175();
}

//----- (00000000004319E2) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_68b_badSink()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_fscanf_68_badData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_fscanf_68_badData > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D3A4: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_68_badData;

//----- (0000000000431A3F) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_68b_goodG2BSink()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_fscanf_68_goodG2BData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_fscanf_68_goodG2BData > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D3AC: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_68_goodG2BData;

//----- (0000000000431A9C) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_68b_goodB2GSink()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_fscanf_68_goodB2GData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_fscanf_68_goodB2GData < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D3A8: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_68_goodB2GData;

//----- (0000000000431AFF) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_67_bad()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 *v3; // [rsp+70h] [rbp-10h]
  __int64 *v4; // [rsp+78h] [rbp-8h]
  __int64 savedregs; // [rsp+80h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v4 = &savedregs - 17;
  v3 = &savedregs - 17;
  return CWE127_Buffer_Underread__char_declare_ncpy_67b_badSink((char *)&savedregs - 136);
}

//----- (0000000000431B43) ----------------------------------------------------
int goodG2B_176()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  char *v3; // [rsp+70h] [rbp-10h]
  char *v4; // [rsp+78h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v4 = &s;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_ncpy_67b_goodG2BSink(&s);
}

//----- (0000000000431B83) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_67_good()
{
  return goodG2B_176();
}

//----- (0000000000431B93) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_67b_badSink(char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]
  char *src; // [rsp+D8h] [rbp-8h]

  src = a1;
  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, src);
  return printLine(&s);
}

//----- (0000000000431BF4) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_67b_goodG2BSink(char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]
  char *src; // [rsp+D8h] [rbp-8h]

  src = a1;
  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, src);
  return printLine(&s);
}

//----- (0000000000431C55) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_15_bad()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  __int64 v3; // [rsp+C8h] [rbp-78h]
  char s; // [rsp+D0h] [rbp-70h]
  char v5; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = (char *)&v3;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000431CCB) ----------------------------------------------------
int goodG2B1_125()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000431D3D) ----------------------------------------------------
int goodG2B2_125()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000431DAF) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_15_good()
{
  goodG2B1_125();
  return goodG2B2_125();
}

//----- (0000000000431DC9) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_63b_badSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000431E2A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_63b_goodG2BSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000431E8B) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_63b_goodB2GSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000431EF2) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_54b_badSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_alloca_memmove_54c_badSink(a1);
}

//----- (0000000000431F0C) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_54b_goodG2BSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_alloca_memmove_54c_goodG2BSink(a1);
}

//----- (0000000000431F26) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_34_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-70h]
  __int64 v2; // [rsp+8h] [rbp-68h]
  __int64 v3; // [rsp+10h] [rbp-60h]
  __int64 v4; // [rsp+18h] [rbp-58h]
  __int64 v5; // [rsp+20h] [rbp-50h]
  char buf[16]; // [rsp+30h] [rbp-40h]
  __int16 s; // [rsp+40h] [rbp-30h]
  uint16_t v8; // [rsp+42h] [rbp-2Eh]
  int v9; // [rsp+44h] [rbp-2Ch]
  int v10; // [rsp+50h] [rbp-20h]
  int v11; // [rsp+5Ch] [rbp-14h]
  int v12; // [rsp+60h] [rbp-10h]
  int fd; // [rsp+64h] [rbp-Ch]
  int v14; // [rsp+68h] [rbp-8h]
  int v15; // [rsp+6Ch] [rbp-4h]

  v15 = -1;
  v14 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v14 = accept(fd, 0LL, 0LL);
      if ( v14 != -1 )
      {
        v12 = recv(v14, buf, 0xDuLL, 0);
        if ( v12 != -1 )
        {
          if ( v12 )
          {
            buf[v12] = 0;
            v15 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v14 != -1 )
    close(v14);
  v10 = v15;
  v11 = v15;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v15 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v11));
  return result;
}
// 431F26: using guessed type char buf[16];

//----- (00000000004320A0) ----------------------------------------------------
int goodG2B_177()
{
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  int v5; // [rsp+30h] [rbp-10h]
  int v6; // [rsp+3Ch] [rbp-4h]

  v6 = 7;
  v5 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000043210E) ----------------------------------------------------
int goodB2G_49()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-70h]
  __int64 v2; // [rsp+8h] [rbp-68h]
  __int64 v3; // [rsp+10h] [rbp-60h]
  __int64 v4; // [rsp+18h] [rbp-58h]
  __int64 v5; // [rsp+20h] [rbp-50h]
  char buf[16]; // [rsp+30h] [rbp-40h]
  __int16 s; // [rsp+40h] [rbp-30h]
  uint16_t v8; // [rsp+42h] [rbp-2Eh]
  int v9; // [rsp+44h] [rbp-2Ch]
  int v10; // [rsp+50h] [rbp-20h]
  int v11; // [rsp+5Ch] [rbp-14h]
  int v12; // [rsp+60h] [rbp-10h]
  int fd; // [rsp+64h] [rbp-Ch]
  int v14; // [rsp+68h] [rbp-8h]
  int v15; // [rsp+6Ch] [rbp-4h]

  v15 = -1;
  v14 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v14 = accept(fd, 0LL, 0LL);
      if ( v14 != -1 )
      {
        v12 = recv(v14, buf, 0xDuLL, 0);
        if ( v12 != -1 )
        {
          if ( v12 )
          {
            buf[v12] = 0;
            v15 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v14 != -1 )
    close(v14);
  v10 = v15;
  v11 = v15;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v15 < 0 || v11 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v11));
  return result;
}
// 43210E: using guessed type char buf[16];

//----- (000000000043228E) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_34_good()
{
  goodG2B_177();
  return goodB2G_49();
}

//----- (00000000004322A8) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_51b_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (00000000004322FF) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_51b_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000432356) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_51b_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (00000000004323B3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_05_bad()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  __int64 *v7; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( staticTrue_7 )
    v7 = &v3;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *((_BYTE *)v7 + i);
  v2 = 0;
  return printLine(v1);
}
// 67D190: using guessed type int staticTrue_7;
// 4323B3: using guessed type char var_F0[99];

//----- (000000000043245A) ----------------------------------------------------
int goodG2B1_126()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( staticFalse_7 )
    printLine("Benign, fixed string");
  else
    v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 67D28C: using guessed type int staticFalse_7;
// 43245A: using guessed type char var_F0[99];

//----- (0000000000432509) ----------------------------------------------------
int goodG2B2_126()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( staticTrue_7 )
    v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 67D190: using guessed type int staticTrue_7;
// 432509: using guessed type char var_F0[99];

//----- (00000000004325AC) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_05_good()
{
  goodG2B1_126();
  return goodG2B2_126();
}

//----- (00000000004325C6) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_41_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 4325C6: using guessed type char s[99];

//----- (000000000043262F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_41_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_loop_41_badSink((__int64)(&savedregs - 15));
}

//----- (000000000043266B) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_41_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 43266B: using guessed type char s[99];

//----- (00000000004326D4) ----------------------------------------------------
int goodG2B_178()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_loop_41_goodG2BSink((__int64)&s);
}

//----- (000000000043270C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_41_good()
{
  return goodG2B_178();
}

//----- (000000000043271C) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_16_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 43271C: using guessed type char buf[16];

//----- (0000000000432846) ----------------------------------------------------
int goodB2G_50()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 432846: using guessed type char buf[16];

//----- (0000000000432976) ----------------------------------------------------
int goodG2B_179()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (00000000004329DA) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_16_good()
{
  goodB2G_50();
  return goodG2B_179();
}

//----- (00000000004329F4) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_68b_badSink()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *src; // [rsp+68h] [rbp-8h]

  src = (void *)CWE127_Buffer_Underread__char_declare_memmove_68_badData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(&s, src, 0x64uLL);
  v2 = 0;
  return printLine(&s);
}
// 67D3B0: using guessed type __int64 CWE127_Buffer_Underread__char_declare_memmove_68_badData;

//----- (0000000000432A4B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_68b_goodG2BSink()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *src; // [rsp+68h] [rbp-8h]

  src = (void *)CWE127_Buffer_Underread__char_declare_memmove_68_goodG2BData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(&s, src, 0x64uLL);
  v2 = 0;
  return printLine(&s);
}
// 67D3B8: using guessed type __int64 CWE127_Buffer_Underread__char_declare_memmove_68_goodG2BData;

//----- (0000000000432AA2) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_53b_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fscanf_53c_badSink(a1);
}

//----- (0000000000432AB9) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_53b_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fscanf_53c_goodG2BSink(a1);
}

//----- (0000000000432AD0) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_53b_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fscanf_53c_goodB2GSink(a1);
}

//----- (0000000000432AE7) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_31_bad()
{
  char dest; // [rsp+0h] [rbp-150h]
  char v2; // [rsp+C7h] [rbp-89h]
  __int64 v3; // [rsp+C8h] [rbp-88h]
  char s; // [rsp+D0h] [rbp-80h]
  char v5; // [rsp+133h] [rbp-1Dh]
  char *src; // [rsp+138h] [rbp-18h]
  __int64 *v7; // [rsp+140h] [rbp-10h]
  __int64 *v8; // [rsp+148h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v8 = &v3;
  v7 = &v3;
  src = (char *)&v3;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000432B6F) ----------------------------------------------------
int goodG2B_180()
{
  char dest; // [rsp+0h] [rbp-150h]
  char v2; // [rsp+C7h] [rbp-89h]
  char s; // [rsp+D0h] [rbp-80h]
  char v4; // [rsp+133h] [rbp-1Dh]
  char *src; // [rsp+138h] [rbp-18h]
  char *v6; // [rsp+140h] [rbp-10h]
  char *v7; // [rsp+148h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v7 = &s;
  v6 = &s;
  src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000432BF3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_31_good()
{
  return goodG2B_180();
}

//----- (0000000000432C03) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_54c_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_loop_54d_badSink(a1);
}

//----- (0000000000432C1D) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_54c_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_loop_54d_goodG2BSink(a1);
}

//----- (0000000000432C37) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_13_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v9 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v9));
  }
  return result;
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000432CF5) ----------------------------------------------------
int goodB2G1_37()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( GLOBAL_CONST_FIVE != 5 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000432DC5) ----------------------------------------------------
int goodB2G2_37()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v9 < 0 || v9 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v9));
  }
  return result;
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000432E89) ----------------------------------------------------
int goodG2B1_127()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v6 = 7;
  else
    printLine("Benign, fixed string");
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000432F0D) ----------------------------------------------------
int goodG2B2_127()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_FIVE == 5 )
    v6 = 7;
  result = GLOBAL_CONST_FIVE;
  if ( GLOBAL_CONST_FIVE == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (0000000000432F85) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_13_good()
{
  goodB2G1_37();
  goodB2G2_37();
  goodG2B1_127();
  return goodG2B2_127();
}

//----- (0000000000432FB3) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_52c_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000043300A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_52c_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000433061) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_52c_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (00000000004330BE) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_memcpy_65_bad()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(__int64); // [rsp+78h] [rbp-8h]
  __int64 savedregs; // [rsp+80h] [rbp+0h]

  v4 = CWE127_Buffer_Underread__char_declare_memcpy_65b_badSink;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 17;
  return ((__int64 (__fastcall *)(__int64 *))v4)(&savedregs - 17);
}

//----- (0000000000433103) ----------------------------------------------------
__int64 goodG2B_181()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  char *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(__int64); // [rsp+78h] [rbp-8h]

  v4 = CWE127_Buffer_Underread__char_declare_memcpy_65b_goodG2BSink;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return ((__int64 (__fastcall *)(char *))v4)(&s);
}

//----- (0000000000433144) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_memcpy_65_good()
{
  return goodG2B_181();
}

//----- (0000000000433154) ----------------------------------------------------
int __fastcall badSink_18(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (00000000004331A4) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_memmove_44_bad()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(const void *); // [rsp+78h] [rbp-8h]
  __int64 savedregs; // [rsp+80h] [rbp+0h]

  v4 = badSink_18;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 17;
  return ((__int64 (__fastcall *)(__int64 *))v4)(&savedregs - 17);
}

//----- (00000000004331E9) ----------------------------------------------------
int __fastcall goodG2BSink_18(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (0000000000433239) ----------------------------------------------------
__int64 goodG2B_182()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  char *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(const void *); // [rsp+78h] [rbp-8h]

  v4 = goodG2BSink_18;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return ((__int64 (__fastcall *)(char *))v4)(&s);
}

//----- (000000000043327A) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_memmove_44_good()
{
  return goodG2B_182();
}

//----- (000000000043328A) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_34_bad()
{
  char v1[99]; // [rsp+0h] [rbp-100h]
  char v2; // [rsp+63h] [rbp-9Dh]
  __int64 v3; // [rsp+68h] [rbp-98h]
  char s; // [rsp+70h] [rbp-90h]
  char v5; // [rsp+D3h] [rbp-2Dh]
  __int64 *v6; // [rsp+E0h] [rbp-20h]
  __int64 *v7; // [rsp+E8h] [rbp-18h]
  __int64 *v8; // [rsp+F0h] [rbp-10h]
  unsigned __int64 i; // [rsp+F8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v8 = &v3;
  v6 = &v3;
  v7 = &v3;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *((_BYTE *)v7 + i);
  v2 = 0;
  return printLine(v1);
}
// 43328A: using guessed type char var_100[99];

//----- (000000000043333D) ----------------------------------------------------
int goodG2B_183()
{
  char v1[99]; // [rsp+0h] [rbp-100h]
  char v2; // [rsp+63h] [rbp-9Dh]
  char s; // [rsp+70h] [rbp-90h]
  char v4; // [rsp+D3h] [rbp-2Dh]
  char *v5; // [rsp+E0h] [rbp-20h]
  char *v6; // [rsp+E8h] [rbp-18h]
  char *v7; // [rsp+F0h] [rbp-10h]
  unsigned __int64 i; // [rsp+F8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v7 = &s;
  v5 = &s;
  v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 43333D: using guessed type char var_100[99];

//----- (00000000004333EC) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_34_good()
{
  return goodG2B_183();
}

//----- (00000000004333FC) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_68_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE127_Buffer_Underread__CWE839_fscanf_68_badData = v1;
  return CWE127_Buffer_Underread__CWE839_fscanf_68b_badSink();
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D3A4: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_68_badData;

//----- (000000000043343D) ----------------------------------------------------
int goodG2B_184()
{
  CWE127_Buffer_Underread__CWE839_fscanf_68_goodG2BData = 7;
  return CWE127_Buffer_Underread__CWE839_fscanf_68b_goodG2BSink();
}
// 67D3AC: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_68_goodG2BData;

//----- (0000000000433468) ----------------------------------------------------
int goodB2G_51()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  CWE127_Buffer_Underread__CWE839_fscanf_68_goodB2GData = v1;
  return CWE127_Buffer_Underread__CWE839_fscanf_68b_goodB2GSink();
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D3A8: using guessed type int CWE127_Buffer_Underread__CWE839_fscanf_68_goodB2GData;

//----- (00000000004334A9) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_68_good()
{
  goodG2B_184();
  return goodB2G_51();
}

//----- (00000000004334C3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_05_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticTrue_8 )
    v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v16;
  v3 = *((_QWORD *)v16 + 1);
  v4 = *((_QWORD *)v16 + 2);
  v5 = *((_QWORD *)v16 + 3);
  v6 = *((_QWORD *)v16 + 4);
  v7 = *((_QWORD *)v16 + 5);
  v8 = *((_QWORD *)v16 + 6);
  v9 = *((_QWORD *)v16 + 7);
  v10 = *((_QWORD *)v16 + 8);
  v11 = *((_QWORD *)v16 + 9);
  v12 = *((_QWORD *)v16 + 10);
  v13 = *((_QWORD *)v16 + 11);
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}
// 67D194: using guessed type int staticTrue_8;

//----- (00000000004335CB) ----------------------------------------------------
int goodG2B1_128()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFalse_8 )
    printLine("Benign, fixed string");
  else
    v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}
// 67D290: using guessed type int staticFalse_8;

//----- (00000000004336DB) ----------------------------------------------------
int goodG2B2_128()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticTrue_8 )
    v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}
// 67D194: using guessed type int staticTrue_8;

//----- (00000000004337DF) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_05_good()
{
  goodG2B1_128();
  return goodG2B2_128();
}

//----- (00000000004337F9) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_41_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000043389A) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_41_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memcpy_41_badSink((__int64)s - 8);
}

//----- (0000000000433911) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_41_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (00000000004339B2) ----------------------------------------------------
int goodG2B_185()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memcpy_41_goodG2BSink((__int64)s);
}

//----- (0000000000433A25) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_41_good()
{
  return goodG2B_185();
}

//----- (0000000000433A35) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_67_bad()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 *v3; // [rsp+70h] [rbp-10h]
  __int64 *v4; // [rsp+78h] [rbp-8h]
  __int64 savedregs; // [rsp+80h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v4 = &savedregs - 17;
  v3 = &savedregs - 17;
  return CWE127_Buffer_Underread__char_declare_cpy_67b_badSink((char *)&savedregs - 136);
}

//----- (0000000000433A79) ----------------------------------------------------
int goodG2B_186()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  char *v3; // [rsp+70h] [rbp-10h]
  char *v4; // [rsp+78h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v4 = &s;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_cpy_67b_goodG2BSink(&s);
}

//----- (0000000000433AB9) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_67_good()
{
  return goodG2B_186();
}

//----- (0000000000433AC9) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_66b_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v4 = *(_QWORD *)(a1 + 16);
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v4 + i);
  v3 = 0;
  return printLine(s);
}
// 433AC9: using guessed type char s[99];

//----- (0000000000433B47) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_66b_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-80h]
  char v3; // [rsp+73h] [rbp-1Dh]
  __int64 v4; // [rsp+80h] [rbp-10h]
  unsigned __int64 i; // [rsp+88h] [rbp-8h]

  v4 = *(_QWORD *)(a1 + 16);
  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v4 + i);
  v3 = 0;
  return printLine(s);
}
// 433B47: using guessed type char s[99];

//----- (0000000000433BC5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_54_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memmove_54b_badSink((char *)s - 8);
}

//----- (0000000000433C3C) ----------------------------------------------------
int goodG2B_187()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memmove_54b_goodG2BSink(s);
}

//----- (0000000000433CAF) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_54_good()
{
  return goodG2B_187();
}

//----- (0000000000433CBF) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_51_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE127_Buffer_Underread__CWE839_connect_socket_51b_badSink(v7);
}
// 433CBF: using guessed type char buf[16];

//----- (0000000000433DA7) ----------------------------------------------------
int goodG2B_188()
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_51b_goodG2BSink(7);
}

//----- (0000000000433DC9) ----------------------------------------------------
int goodB2G_52()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE127_Buffer_Underread__CWE839_connect_socket_51b_goodB2GSink(v7);
}
// 433DC9: using guessed type char buf[16];

//----- (0000000000433EB1) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_51_good()
{
  goodG2B_188();
  return goodB2G_52();
}

//----- (0000000000433ECB) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_14_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFive == 5 )
    src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}
// 67D1B8: using guessed type int globalFive;

//----- (0000000000433FA1) ----------------------------------------------------
int goodG2B1_129()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFive == 5 )
    src = (char *)s;
  else
    printLine("Benign, fixed string");
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000043407F) ----------------------------------------------------
int goodG2B2_129()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFive == 5 )
    src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}
// 67D1B8: using guessed type int globalFive;

//----- (0000000000434151) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_14_good()
{
  goodG2B1_129();
  return goodG2B2_129();
}

//----- (000000000043416B) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_52c_badSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (00000000004341BB) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_52c_goodG2BSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000043420B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_32_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-B0h]
  char v4; // [rsp+Fh] [rbp-A1h]
  char v5; // [rsp+63h] [rbp-4Dh]
  char v6; // [rsp+70h] [rbp-40h]
  char *src; // [rsp+78h] [rbp-38h]
  char *v8; // [rsp+80h] [rbp-30h]
  void *s; // [rsp+88h] [rbp-28h]
  char **v10; // [rsp+90h] [rbp-20h]
  char *v11; // [rsp+98h] [rbp-18h]

  v11 = &v6;
  v10 = (char **)&v6;
  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v8 = (char *)s - 8;
  *(_QWORD *)v11 = (char *)s - 8;
  src = *v10;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (0000000000434307) ----------------------------------------------------
int goodG2B_189()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-B0h]
  char v4; // [rsp+Fh] [rbp-A1h]
  char v5; // [rsp+63h] [rbp-4Dh]
  char v6; // [rsp+70h] [rbp-40h]
  char *src; // [rsp+78h] [rbp-38h]
  void *v8; // [rsp+80h] [rbp-30h]
  void *s; // [rsp+88h] [rbp-28h]
  char **v10; // [rsp+90h] [rbp-20h]
  char *v11; // [rsp+98h] [rbp-18h]

  v11 = &v6;
  v10 = (char **)&v6;
  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v8 = s;
  *(_QWORD *)v11 = s;
  src = *v10;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (00000000004343FF) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_32_good()
{
  return goodG2B_189();
}

//----- (000000000043440F) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_53_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE127_Buffer_Underread__CWE839_fscanf_53b_badSink(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000434447) ----------------------------------------------------
int goodG2B_190()
{
  return CWE127_Buffer_Underread__CWE839_fscanf_53b_goodG2BSink(7);
}

//----- (0000000000434469) ----------------------------------------------------
int goodB2G_53()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return CWE127_Buffer_Underread__CWE839_fscanf_53b_goodB2GSink(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004344A1) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_53_good()
{
  goodG2B_190();
  return goodB2G_53();
}

//----- (00000000004344BB) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_68_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  CWE127_Buffer_Underread__char_declare_memmove_68_badData = (__int64)(&savedregs - 15);
  return CWE127_Buffer_Underread__char_declare_memmove_68b_badSink();
}
// 67D3B0: using guessed type __int64 CWE127_Buffer_Underread__char_declare_memmove_68_badData;

//----- (0000000000434500) ----------------------------------------------------
int goodG2B_191()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  CWE127_Buffer_Underread__char_declare_memmove_68_goodG2BData = (__int64)&s;
  return CWE127_Buffer_Underread__char_declare_memmove_68b_goodG2BSink();
}
// 67D3B8: using guessed type __int64 CWE127_Buffer_Underread__char_declare_memmove_68_goodG2BData;

//----- (0000000000434541) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_68_good()
{
  return goodG2B_191();
}

//----- (0000000000434551) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_66b_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]
  __int64 v15; // [rsp+78h] [rbp-8h]

  v15 = *(_QWORD *)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)v15;
  v3 = *(_QWORD *)(v15 + 8);
  v4 = *(_QWORD *)(v15 + 16);
  v5 = *(_QWORD *)(v15 + 24);
  v6 = *(_QWORD *)(v15 + 32);
  v7 = *(_QWORD *)(v15 + 40);
  v8 = *(_QWORD *)(v15 + 48);
  v9 = *(_QWORD *)(v15 + 56);
  v10 = *(_QWORD *)(v15 + 64);
  v11 = *(_QWORD *)(v15 + 72);
  v12 = *(_QWORD *)(v15 + 80);
  v13 = *(_QWORD *)(v15 + 88);
  v14 = *(_DWORD *)(v15 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (00000000004345FE) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_66b_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]
  __int64 v15; // [rsp+78h] [rbp-8h]

  v15 = *(_QWORD *)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)v15;
  v3 = *(_QWORD *)(v15 + 8);
  v4 = *(_QWORD *)(v15 + 16);
  v5 = *(_QWORD *)(v15 + 24);
  v6 = *(_QWORD *)(v15 + 32);
  v7 = *(_QWORD *)(v15 + 40);
  v8 = *(_QWORD *)(v15 + 48);
  v9 = *(_QWORD *)(v15 + 56);
  v10 = *(_QWORD *)(v15 + 64);
  v11 = *(_QWORD *)(v15 + 72);
  v12 = *(_QWORD *)(v15 + 80);
  v13 = *(_QWORD *)(v15 + 88);
  v14 = *(_DWORD *)(v15 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (00000000004346AB) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_54d_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_ncpy_54e_badSink(a1);
}

//----- (00000000004346C5) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_54d_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_ncpy_54e_goodG2BSink(a1);
}

//----- (00000000004346DF) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_65b_badSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000043472F) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_65b_goodG2BSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000043477F) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_52b_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fgets_52c_badSink(a1);
}

//----- (0000000000434796) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_52b_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fgets_52c_goodG2BSink(a1);
}

//----- (00000000004347AD) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_52b_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fgets_52c_goodB2GSink(a1);
}

//----- (00000000004347C4) ----------------------------------------------------
int badSink_19()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_connect_socket_45_badData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_connect_socket_45_badData > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D294: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_45_badData;

//----- (0000000000434821) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_45_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE127_Buffer_Underread__CWE839_connect_socket_45_badData = v7;
  return badSink_19();
}
// 67D294: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_45_badData;
// 434821: using guessed type char buf[16];

//----- (0000000000434912) ----------------------------------------------------
int goodG2BSink_19()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_connect_socket_45_goodG2BData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_connect_socket_45_goodG2BData > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D298: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_45_goodG2BData;

//----- (000000000043496F) ----------------------------------------------------
int goodG2B_192()
{
  CWE127_Buffer_Underread__CWE839_connect_socket_45_goodG2BData = 7;
  return goodG2BSink_19();
}
// 67D298: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_45_goodG2BData;

//----- (000000000043499A) ----------------------------------------------------
int goodB2GSink_6()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_connect_socket_45_goodB2GData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_connect_socket_45_goodB2GData < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D29C: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_45_goodB2GData;

//----- (00000000004349FD) ----------------------------------------------------
int goodB2G_54()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE127_Buffer_Underread__CWE839_connect_socket_45_goodB2GData = v7;
  return goodB2GSink_6();
}
// 67D29C: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_45_goodB2GData;
// 4349FD: using guessed type char buf[16];

//----- (0000000000434AEE) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_45_good()
{
  goodG2B_192();
  return goodB2G_54();
}

//----- (0000000000434B08) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_67b_badSink(char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]
  char *src; // [rsp+78h] [rbp-8h]

  src = a1;
  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, src, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000434B6A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_67b_goodG2BSink(char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]
  char *src; // [rsp+78h] [rbp-8h]

  src = a1;
  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, src, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000434BCC) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_54e_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 434BCC: using guessed type char s[99];

//----- (0000000000434C35) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_54e_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 434C35: using guessed type char s[99];

//----- (0000000000434C9E) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_68b_badSink()
{
  size_t v0; // rax
  char s; // [rsp+0h] [rbp-70h]
  char v3; // [rsp+63h] [rbp-Dh]
  char *src; // [rsp+68h] [rbp-8h]

  src = (char *)CWE127_Buffer_Underread__char_declare_ncpy_68_badData;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&s);
  strncpy(&s, src, v0);
  v3 = 0;
  return printLine(&s);
}
// 67D380: using guessed type __int64 CWE127_Buffer_Underread__char_declare_ncpy_68_badData;

//----- (0000000000434CFF) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_68b_goodG2BSink()
{
  size_t v0; // rax
  char s; // [rsp+0h] [rbp-70h]
  char v3; // [rsp+63h] [rbp-Dh]
  char *src; // [rsp+68h] [rbp-8h]

  src = (char *)CWE127_Buffer_Underread__char_declare_ncpy_68_goodG2BData;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&s);
  strncpy(&s, src, v0);
  v3 = 0;
  return printLine(&s);
}
// 67D378: using guessed type __int64 CWE127_Buffer_Underread__char_declare_ncpy_68_goodG2BData;

//----- (0000000000434D60) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_18_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 434D60: using guessed type char buf[16];

//----- (0000000000434ED0) ----------------------------------------------------
int goodB2G_55()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 434ED0: using guessed type char buf[16];

//----- (0000000000435046) ----------------------------------------------------
int goodG2B_193()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (00000000004350AA) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_18_good()
{
  goodB2G_55();
  return goodG2B_193();
}

//----- (00000000004350C4) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_31_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-A0h]
  char v3; // [rsp+Fh] [rbp-91h]
  char v4; // [rsp+63h] [rbp-3Dh]
  void *src; // [rsp+70h] [rbp-30h]
  char *v6; // [rsp+78h] [rbp-28h]
  char *v7; // [rsp+80h] [rbp-20h]
  void *s; // [rsp+88h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = (char *)s - 8;
  v6 = (char *)s - 8;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (0000000000435192) ----------------------------------------------------
int goodG2B_194()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-A0h]
  char v3; // [rsp+Fh] [rbp-91h]
  char v4; // [rsp+63h] [rbp-3Dh]
  void *src; // [rsp+70h] [rbp-30h]
  void *v6; // [rsp+78h] [rbp-28h]
  void *v7; // [rsp+80h] [rbp-20h]
  void *s; // [rsp+88h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v7 = s;
  v6 = s;
  src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (000000000043525C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_31_good()
{
  return goodG2B_194();
}

//----- (000000000043526C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_10_bad()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  __int64 v14; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v16; // [rsp+D3h] [rbp-Dh]
  __int64 *v17; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  if ( globalTrue )
    v17 = &v14;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *v17;
  v2 = v17[1];
  v3 = v17[2];
  v4 = v17[3];
  v5 = v17[4];
  v6 = v17[5];
  v7 = v17[6];
  v8 = v17[7];
  v9 = v17[8];
  v10 = v17[9];
  v11 = v17[10];
  v12 = v17[11];
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}
// 67D1B4: using guessed type int globalTrue;

//----- (0000000000435366) ----------------------------------------------------
int goodG2B1_130()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}
// 67D368: using guessed type int globalFalse;

//----- (0000000000435468) ----------------------------------------------------
int goodG2B2_130()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  if ( globalTrue )
    v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}
// 67D1B4: using guessed type int globalTrue;

//----- (000000000043555E) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_10_good()
{
  goodG2B1_130();
  return goodG2B2_130();
}

//----- (0000000000435578) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_61_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_connect_socket_61b_badSource(0xFFFFFFFF);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (00000000004355E0) ----------------------------------------------------
int goodG2B_195()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_connect_socket_61b_goodG2BSource();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (0000000000435648) ----------------------------------------------------
int goodB2G_56()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_connect_socket_61b_goodB2GSource(0xFFFFFFFF);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (00000000004356B6) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_61_good()
{
  goodG2B_195();
  return goodB2G_56();
}

//----- (00000000004356D0) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_53b_badSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_declare_memmove_53c_badSink(a1);
}

//----- (00000000004356EA) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_53b_goodG2BSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_declare_memmove_53c_goodG2BSink(a1);
}

//----- (0000000000435704) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_03_bad()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  __int64 *v6; // [rsp+E0h] [rbp-10h]
  unsigned __int64 i; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v6 = &v3;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *((_BYTE *)v6 + i);
  v2 = 0;
  return printLine(v1);
}
// 435704: using guessed type char var_F0[99];

//----- (00000000004357A1) ----------------------------------------------------
int goodG2B1_131()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  char *v5; // [rsp+E0h] [rbp-10h]
  unsigned __int64 i; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v5 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v5[i];
  v2 = 0;
  return printLine(v1);
}
// 4357A1: using guessed type char var_F0[99];

//----- (000000000043583A) ----------------------------------------------------
int goodG2B2_131()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  char *v5; // [rsp+E0h] [rbp-10h]
  unsigned __int64 i; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v5 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v5[i];
  v2 = 0;
  return printLine(v1);
}
// 43583A: using guessed type char var_F0[99];

//----- (00000000004358D3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_03_good()
{
  goodG2B1_131();
  return goodG2B2_131();
}

//----- (00000000004358ED) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_52_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE127_Buffer_Underread__CWE839_connect_socket_52b_badSink(v7);
}
// 4358ED: using guessed type char buf[16];

//----- (00000000004359D5) ----------------------------------------------------
int goodG2B_196()
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_52b_goodG2BSink(7);
}

//----- (00000000004359F7) ----------------------------------------------------
int goodB2G_57()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE127_Buffer_Underread__CWE839_connect_socket_52b_goodB2GSink(v7);
}
// 4359F7: using guessed type char buf[16];

//----- (0000000000435ADF) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_52_good()
{
  goodG2B_196();
  return goodB2G_57();
}

//----- (0000000000435AF9) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_cpy_65_bad()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(const char *); // [rsp+78h] [rbp-8h]
  __int64 savedregs; // [rsp+80h] [rbp+0h]

  v4 = CWE127_Buffer_Underread__char_declare_cpy_65b_badSink;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 17;
  return ((__int64 (__fastcall *)(__int64 *))v4)(&savedregs - 17);
}

//----- (0000000000435B3E) ----------------------------------------------------
__int64 goodG2B_197()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  char *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(const char *); // [rsp+78h] [rbp-8h]

  v4 = CWE127_Buffer_Underread__char_declare_cpy_65b_goodG2BSink;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return ((__int64 (__fastcall *)(char *))v4)(&s);
}

//----- (0000000000435B7F) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_cpy_65_good()
{
  return goodG2B_197();
}

//----- (0000000000435B8F) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_54c_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_memcpy_54d_badSink(a1);
}

//----- (0000000000435BA9) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_54c_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_memcpy_54d_goodG2BSink(a1);
}

//----- (0000000000435BC3) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_22_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = CWE127_Buffer_Underread__CWE839_fgets_22_badGlobal;
  if ( CWE127_Buffer_Underread__CWE839_fgets_22_badGlobal )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D2A0: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_22_badGlobal;

//----- (0000000000435C24) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_22_goodB2G1Sink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  if ( CWE127_Buffer_Underread__CWE839_fgets_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}
// 67D2A4: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_22_goodB2G1Global;

//----- (0000000000435C97) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_22_goodB2G2Sink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = CWE127_Buffer_Underread__CWE839_fgets_22_goodB2G2Global;
  if ( CWE127_Buffer_Underread__CWE839_fgets_22_goodB2G2Global )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 < 0 || a1 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D2A8: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_22_goodB2G2Global;

//----- (0000000000435CFE) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_22_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = CWE127_Buffer_Underread__CWE839_fgets_22_goodG2BGlobal;
  if ( CWE127_Buffer_Underread__CWE839_fgets_22_goodG2BGlobal )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D2AC: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_22_goodG2BGlobal;

//----- (0000000000435D5F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_54_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_ncpy_54b_badSink((char *)s - 8);
}

//----- (0000000000435DD6) ----------------------------------------------------
int goodG2B_198()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_ncpy_54b_goodG2BSink((const char *)s);
}

//----- (0000000000435E49) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_54_good()
{
  return goodG2B_198();
}

//----- (0000000000435E59) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_12_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  else
  {
    v13 = 7;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v13 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v13));
  }
  else
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v13 < 0 || v13 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v13));
  }
  return result;
}
// 435E59: using guessed type char buf[16];

//----- (0000000000436044) ----------------------------------------------------
int goodB2G_58()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-90h]
  __int64 v2; // [rsp+8h] [rbp-88h]
  __int64 v3; // [rsp+10h] [rbp-80h]
  __int64 v4; // [rsp+18h] [rbp-78h]
  __int64 v5; // [rsp+20h] [rbp-70h]
  char nptr[16]; // [rsp+30h] [rbp-60h]
  struct sockaddr addr; // [rsp+40h] [rbp-50h]
  char buf[16]; // [rsp+50h] [rbp-40h]
  __int16 s; // [rsp+60h] [rbp-30h]
  uint16_t v10; // [rsp+62h] [rbp-2Eh]
  int v11; // [rsp+64h] [rbp-2Ch]
  int v12; // [rsp+74h] [rbp-1Ch]
  int v13; // [rsp+78h] [rbp-18h]
  int v14; // [rsp+7Ch] [rbp-14h]
  int fd; // [rsp+80h] [rbp-10h]
  int v16; // [rsp+84h] [rbp-Ch]
  int v17; // [rsp+88h] [rbp-8h]
  int v18; // [rsp+8Ch] [rbp-4h]

  v18 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v17 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v11 = 0;
      v10 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v17 = accept(fd, 0LL, 0LL);
        if ( v17 != -1 )
        {
          v14 = recv(v17, buf, 0xDuLL, 0);
          if ( v14 != -1 )
          {
            if ( v14 )
            {
              buf[v14] = 0;
              v18 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v17 != -1 )
      close(v17);
  }
  else
  {
    v16 = -1;
    v13 = socket(2, 1, 6);
    if ( v13 != -1 )
    {
      memset(&addr, 0, 0x10uLL);
      addr.sa_family = 2;
      *(_DWORD *)&addr.sa_data[2] = 0;
      *(_WORD *)addr.sa_data = htons(0x6987u);
      if ( bind(v13, &addr, 0x10u) != -1 && listen(v13, 5) != -1 )
      {
        v16 = accept(v13, 0LL, 0LL);
        if ( v16 != -1 )
        {
          v12 = recv(v16, nptr, 0xDuLL, 0);
          if ( v12 != -1 )
          {
            if ( v12 )
            {
              nptr[v12] = 0;
              v18 = atoi(nptr);
            }
          }
        }
      }
    }
    if ( v13 != -1 )
      close(v13);
    if ( v16 != -1 )
      close(v16);
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v18 < 0 || v18 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v18));
  }
  else
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v18 < 0 || v18 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v18));
  }
  return result;
}
// 436044: using guessed type char buf[16];
// 436044: using guessed type char nptr[16];

//----- (000000000043635C) ----------------------------------------------------
int goodG2B_199()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  globalReturnsTrueOrFalse();
  v6 = 7;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  else
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (000000000043642F) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_12_good()
{
  goodB2G_58();
  return goodG2B_199();
}

//----- (0000000000436449) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_18_bad()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  __int64 *v6; // [rsp+E0h] [rbp-10h]
  unsigned __int64 i; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v6 = &v3;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *((_BYTE *)v6 + i);
  v2 = 0;
  return printLine(v1);
}
// 436449: using guessed type char var_F0[99];

//----- (00000000004364E7) ----------------------------------------------------
int goodG2B_200()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  char *v5; // [rsp+E0h] [rbp-10h]
  unsigned __int64 i; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v5 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v5[i];
  v2 = 0;
  return printLine(v1);
}
// 4364E7: using guessed type char var_F0[99];

//----- (0000000000436581) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_18_good()
{
  return goodG2B_200();
}

//----- (0000000000436591) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_53d_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 436591: using guessed type char s[99];

//----- (00000000004365FA) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_53d_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 4365FA: using guessed type char s[99];

//----- (0000000000436663) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_01_bad()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  __int64 v14; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v16; // [rsp+D3h] [rbp-Dh]
  __int64 *v17; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  v17 = &v14;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *v17;
  v2 = v17[1];
  v3 = v17[2];
  v4 = v17[3];
  v5 = v17[4];
  v6 = v17[5];
  v7 = v17[6];
  v8 = v17[7];
  v9 = v17[8];
  v10 = v17[9];
  v11 = v17[10];
  v12 = v17[11];
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (0000000000436753) ----------------------------------------------------
int goodG2B_201()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (000000000043683F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_01_good()
{
  return goodG2B_201();
}

//----- (000000000043684F) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_07_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( staticFive_10 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive_10;
  if ( staticFive_10 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  return result;
}
// 67D198: using guessed type int staticFive_10;
// 43684F: using guessed type char buf[16];

//----- (0000000000436991) ----------------------------------------------------
int goodB2G1_38()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( staticFive_10 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( staticFive_10 != 5 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 67D198: using guessed type int staticFive_10;
// 436991: using guessed type char buf[16];

//----- (0000000000436AE5) ----------------------------------------------------
int goodB2G2_38()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( staticFive_10 == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticFive_10;
  if ( staticFive_10 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 < 0 || v12 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  return result;
}
// 67D198: using guessed type int staticFive_10;
// 436AE5: using guessed type char buf[16];

//----- (0000000000436C2D) ----------------------------------------------------
int goodG2B1_132()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticFive_10 == 5 )
    v6 = 7;
  else
    printLine("Benign, fixed string");
  result = staticFive_10;
  if ( staticFive_10 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D198: using guessed type int staticFive_10;

//----- (0000000000436CB1) ----------------------------------------------------
int goodG2B2_132()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticFive_10 == 5 )
    v6 = 7;
  result = staticFive_10;
  if ( staticFive_10 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D198: using guessed type int staticFive_10;

//----- (0000000000436D29) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_07_good()
{
  goodB2G1_38();
  goodB2G2_38();
  goodG2B1_132();
  return goodG2B2_132();
}

//----- (0000000000436D57) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_53d_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (0000000000436DF8) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_53d_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (0000000000436E99) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_09_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v9 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v9));
  }
  return result;
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000436F55) ----------------------------------------------------
int goodB2G1_39()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( GLOBAL_CONST_FALSE )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;
// 462E04: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000437023) ----------------------------------------------------
int goodB2G2_39()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( GLOBAL_CONST_TRUE )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v9 < 0 || v9 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v9));
  }
  return result;
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004370E5) ----------------------------------------------------
int goodG2B1_133()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;
// 462E04: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000437167) ----------------------------------------------------
int goodG2B2_133()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( GLOBAL_CONST_TRUE )
    v6 = 7;
  result = GLOBAL_CONST_TRUE;
  if ( GLOBAL_CONST_TRUE )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004371DD) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_09_good()
{
  goodB2G1_39();
  goodB2G2_39();
  goodG2B1_133();
  return goodG2B2_133();
}

//----- (000000000043720B) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_52c_badSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000437265) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_52c_goodG2BSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (00000000004372BF) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_03_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  char *v15; // [rsp+70h] [rbp-10h]
  void *s; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v15 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v15;
  v3 = *((_QWORD *)v15 + 1);
  v4 = *((_QWORD *)v15 + 2);
  v5 = *((_QWORD *)v15 + 3);
  v6 = *((_QWORD *)v15 + 4);
  v7 = *((_QWORD *)v15 + 5);
  v8 = *((_QWORD *)v15 + 6);
  v9 = *((_QWORD *)v15 + 7);
  v10 = *((_QWORD *)v15 + 8);
  v11 = *((_QWORD *)v15 + 9);
  v12 = *((_QWORD *)v15 + 10);
  v13 = *((_QWORD *)v15 + 11);
  v14 = *((_DWORD *)v15 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (00000000004373BD) ----------------------------------------------------
int goodG2B1_134()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  _QWORD *v15; // [rsp+70h] [rbp-10h]
  void *s; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v15 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v15;
  v3 = v15[1];
  v4 = v15[2];
  v5 = v15[3];
  v6 = v15[4];
  v7 = v15[5];
  v8 = v15[6];
  v9 = v15[7];
  v10 = v15[8];
  v11 = v15[9];
  v12 = v15[10];
  v13 = v15[11];
  v14 = *((_DWORD *)v15 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (00000000004374B7) ----------------------------------------------------
int goodG2B2_134()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  _QWORD *v15; // [rsp+70h] [rbp-10h]
  void *s; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v15 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v15;
  v3 = v15[1];
  v4 = v15[2];
  v5 = v15[3];
  v6 = v15[4];
  v7 = v15[5];
  v8 = v15[6];
  v9 = v15[7];
  v10 = v15[8];
  v11 = v15[9];
  v12 = v15[10];
  v13 = v15[11];
  v14 = *((_DWORD *)v15 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (00000000004375B1) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_03_good()
{
  goodG2B1_134();
  return goodG2B2_134();
}

//----- (00000000004375CB) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_10_bad()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  __int64 *v7; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( globalTrue )
    v7 = &v3;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *((_BYTE *)v7 + i);
  v2 = 0;
  return printLine(v1);
}
// 67D1B4: using guessed type int globalTrue;
// 4375CB: using guessed type char var_F0[99];

//----- (0000000000437672) ----------------------------------------------------
int goodG2B1_135()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 67D368: using guessed type int globalFalse;
// 437672: using guessed type char var_F0[99];

//----- (0000000000437721) ----------------------------------------------------
int goodG2B2_135()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( globalTrue )
    v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 67D1B4: using guessed type int globalTrue;
// 437721: using guessed type char var_F0[99];

//----- (00000000004377C4) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_10_good()
{
  goodG2B1_135();
  return goodG2B2_135();
}

//----- (00000000004377DE) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_68b_badSink()
{
  char s; // [rsp+0h] [rbp-D0h]
  char v2; // [rsp+C7h] [rbp-9h]
  char *src; // [rsp+C8h] [rbp-8h]

  src = (char *)CWE127_Buffer_Underread__char_declare_cpy_68_badData;
  memset(&s, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&s, src);
  return printLine(&s);
}
// 67D3C8: using guessed type __int64 CWE127_Buffer_Underread__char_declare_cpy_68_badData;

//----- (0000000000437838) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_68b_goodG2BSink()
{
  char s; // [rsp+0h] [rbp-D0h]
  char v2; // [rsp+C7h] [rbp-9h]
  char *src; // [rsp+C8h] [rbp-8h]

  src = (char *)CWE127_Buffer_Underread__char_declare_cpy_68_goodG2BData;
  memset(&s, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&s, src);
  return printLine(&s);
}
// 67D3C0: using guessed type __int64 CWE127_Buffer_Underread__char_declare_cpy_68_goodG2BData;

//----- (0000000000437892) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_65b_badSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (00000000004378EC) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_65b_goodG2BSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000437946) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_01_bad()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  __int64 *v6; // [rsp+E0h] [rbp-10h]
  unsigned __int64 i; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v6 = &v3;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *((_BYTE *)v6 + i);
  v2 = 0;
  return printLine(v1);
}
// 437946: using guessed type char var_F0[99];

//----- (00000000004379E3) ----------------------------------------------------
int goodG2B_202()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  char *v5; // [rsp+E0h] [rbp-10h]
  unsigned __int64 i; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v5 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v5[i];
  v2 = 0;
  return printLine(v1);
}
// 4379E3: using guessed type char var_F0[99];

//----- (0000000000437A7C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_01_good()
{
  return goodG2B_202();
}

//----- (0000000000437A8C) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_22_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE127_Buffer_Underread__CWE839_fgets_22_badGlobal = 1;
  return CWE127_Buffer_Underread__CWE839_fgets_22_badSink(v4);
}
// 67D2A0: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_22_badGlobal;

//----- (0000000000437AFE) ----------------------------------------------------
int goodB2G1_40()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE127_Buffer_Underread__CWE839_fgets_22_goodB2G1Global = 0;
  return CWE127_Buffer_Underread__CWE839_fgets_22_goodB2G1Sink(v4);
}
// 67D2A4: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_22_goodB2G1Global;

//----- (0000000000437B70) ----------------------------------------------------
int goodB2G2_40()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE127_Buffer_Underread__CWE839_fgets_22_goodB2G2Global = 1;
  return CWE127_Buffer_Underread__CWE839_fgets_22_goodB2G2Sink(v4);
}
// 67D2A8: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_22_goodB2G2Global;

//----- (0000000000437BE2) ----------------------------------------------------
int goodG2B_203()
{
  CWE127_Buffer_Underread__CWE839_fgets_22_goodG2BGlobal = 1;
  return CWE127_Buffer_Underread__CWE839_fgets_22_goodG2BSink(7);
}
// 67D2AC: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_22_goodG2BGlobal;

//----- (0000000000437C0E) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_22_good()
{
  goodB2G1_40();
  goodB2G2_40();
  return goodG2B_203();
}

//----- (0000000000437C32) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_54_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_cpy_54b_badSink((char *)s - 8);
}

//----- (0000000000437CA9) ----------------------------------------------------
int goodG2B_204()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_cpy_54b_goodG2BSink((const char *)s);
}

//----- (0000000000437D1C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_54_good()
{
  return goodG2B_204();
}

//----- (0000000000437D2C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_12_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v16 = (char *)s - 8;
  else
    v16 = (char *)s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v16;
  v3 = *((_QWORD *)v16 + 1);
  v4 = *((_QWORD *)v16 + 2);
  v5 = *((_QWORD *)v16 + 3);
  v6 = *((_QWORD *)v16 + 4);
  v7 = *((_QWORD *)v16 + 5);
  v8 = *((_QWORD *)v16 + 6);
  v9 = *((_QWORD *)v16 + 7);
  v10 = *((_QWORD *)v16 + 8);
  v11 = *((_QWORD *)v16 + 9);
  v12 = *((_QWORD *)v16 + 10);
  v13 = *((_QWORD *)v16 + 11);
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (0000000000437E42) ----------------------------------------------------
int goodG2B_205()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  globalReturnsTrueOrFalse();
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (0000000000437F54) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_12_good()
{
  return goodG2B_205();
}

//----- (0000000000437F64) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_16_bad()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  __int64 v14; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v16; // [rsp+D3h] [rbp-Dh]
  __int64 *v17; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  v17 = &v14;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *v17;
  v2 = v17[1];
  v3 = v17[2];
  v4 = v17[3];
  v5 = v17[4];
  v6 = v17[5];
  v7 = v17[6];
  v8 = v17[7];
  v9 = v17[8];
  v10 = v17[9];
  v11 = v17[10];
  v12 = v17[11];
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (0000000000438055) ----------------------------------------------------
int goodG2B_206()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (0000000000438142) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_16_good()
{
  return goodG2B_206();
}

//----- (0000000000438152) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_53d_badSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (00000000004381A2) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_53d_goodG2BSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (00000000004381F2) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_17_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v6 = -1;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%d", &v6);
  for ( j = 0; j <= 0; ++j )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000438292) ----------------------------------------------------
int goodB2G_59()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v6 = -1;
  for ( i = 0; i <= 0; ++i )
    result = __isoc99_fscanf(stdin, "%d", &v6);
  for ( j = 0; j <= 0; ++j )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 < 0 || v6 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000438339) ----------------------------------------------------
int goodG2B_207()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+34h] [rbp-Ch]
  int j; // [rsp+38h] [rbp-8h]
  int i; // [rsp+3Ch] [rbp-4h]

  v6 = -1;
  for ( i = 0; i <= 0; ++i )
    v6 = 7;
  for ( j = 0; j <= 0; ++j )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (00000000004383C1) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_17_good()
{
  goodB2G_59();
  return goodG2B_207();
}

//----- (00000000004383DB) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_10_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( globalTrue )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v13 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v13));
  }
  return result;
}
// 67D1B4: using guessed type int globalTrue;
// 4383DB: using guessed type char buf[16];

//----- (0000000000438561) ----------------------------------------------------
int goodB2G1_41()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( globalTrue )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 67D1B4: using guessed type int globalTrue;
// 67D368: using guessed type int globalFalse;
// 438561: using guessed type char buf[16];

//----- (00000000004386F9) ----------------------------------------------------
int goodB2G2_41()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( globalTrue )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v13 < 0 || v13 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v13));
  }
  return result;
}
// 67D1B4: using guessed type int globalTrue;
// 4386F9: using guessed type char buf[16];

//----- (0000000000438885) ----------------------------------------------------
int goodG2B1_136()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1B4: using guessed type int globalTrue;
// 67D368: using guessed type int globalFalse;

//----- (0000000000438907) ----------------------------------------------------
int goodG2B2_136()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalTrue )
    v6 = 7;
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1B4: using guessed type int globalTrue;

//----- (000000000043897D) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_10_good()
{
  goodB2G1_41();
  goodB2G2_41();
  goodG2B1_136();
  return goodG2B2_136();
}

//----- (00000000004389AB) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_54b_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_cpy_54c_badSink(a1);
}

//----- (00000000004389C5) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_54b_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_cpy_54c_goodG2BSink(a1);
}

//----- (00000000004389DF) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_10_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalTrue )
    v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v16;
  v3 = *((_QWORD *)v16 + 1);
  v4 = *((_QWORD *)v16 + 2);
  v5 = *((_QWORD *)v16 + 3);
  v6 = *((_QWORD *)v16 + 4);
  v7 = *((_QWORD *)v16 + 5);
  v8 = *((_QWORD *)v16 + 6);
  v9 = *((_QWORD *)v16 + 7);
  v10 = *((_QWORD *)v16 + 8);
  v11 = *((_QWORD *)v16 + 9);
  v12 = *((_QWORD *)v16 + 10);
  v13 = *((_QWORD *)v16 + 11);
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}
// 67D1B4: using guessed type int globalTrue;

//----- (0000000000438AE7) ----------------------------------------------------
int goodG2B1_137()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}
// 67D368: using guessed type int globalFalse;

//----- (0000000000438BF7) ----------------------------------------------------
int goodG2B2_137()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalTrue )
    v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}
// 67D1B4: using guessed type int globalTrue;

//----- (0000000000438CFB) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_10_good()
{
  goodG2B1_137();
  return goodG2B2_137();
}

//----- (0000000000438D15) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54d_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fgets_54e_badSink(a1);
}

//----- (0000000000438D2C) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54d_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fgets_54e_goodG2BSink(a1);
}

//----- (0000000000438D43) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54d_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fgets_54e_goodB2GSink(a1);
}

//----- (0000000000438D5A) ----------------------------------------------------
int __fastcall badSink_20(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000438DB1) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_fscanf_44_bad()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = badSink_20;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000438DF2) ----------------------------------------------------
int __fastcall goodG2BSink_20(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000438E49) ----------------------------------------------------
int goodG2B_208()
{
  return goodG2BSink_20(7);
}

//----- (0000000000438E74) ----------------------------------------------------
int __fastcall goodB2GSink_7(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000438ED1) ----------------------------------------------------
__int64 goodB2G_60()
{
  unsigned int v1; // [rsp+4h] [rbp-Ch]
  int (__fastcall *v2)(int); // [rsp+8h] [rbp-8h]

  v2 = goodB2GSink_7;
  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return ((__int64 (__fastcall *)(_QWORD))v2)(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000438F12) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_fscanf_44_good()
{
  goodG2B_208();
  return goodB2G_60();
}

//----- (0000000000438F2C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_02_bad()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  __int64 *v6; // [rsp+E0h] [rbp-10h]
  unsigned __int64 i; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v6 = &v3;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *((_BYTE *)v6 + i);
  v2 = 0;
  return printLine(v1);
}
// 438F2C: using guessed type char var_F0[99];

//----- (0000000000438FC9) ----------------------------------------------------
int goodG2B1_138()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  char *v5; // [rsp+E0h] [rbp-10h]
  unsigned __int64 i; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v5 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v5[i];
  v2 = 0;
  return printLine(v1);
}
// 438FC9: using guessed type char var_F0[99];

//----- (0000000000439062) ----------------------------------------------------
int goodG2B2_138()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  char *v5; // [rsp+E0h] [rbp-10h]
  unsigned __int64 i; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v5 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v5[i];
  v2 = 0;
  return printLine(v1);
}
// 439062: using guessed type char var_F0[99];

//----- (00000000004390FB) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_02_good()
{
  goodG2B1_138();
  return goodG2B2_138();
}

//----- (0000000000439115) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_68_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  CWE127_Buffer_Underread__char_declare_cpy_68_badData = (__int64)(&savedregs - 15);
  return CWE127_Buffer_Underread__char_declare_cpy_68b_badSink();
}
// 67D3C8: using guessed type __int64 CWE127_Buffer_Underread__char_declare_cpy_68_badData;

//----- (000000000043915A) ----------------------------------------------------
int goodG2B_209()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  CWE127_Buffer_Underread__char_declare_cpy_68_goodG2BData = (__int64)&s;
  return CWE127_Buffer_Underread__char_declare_cpy_68b_goodG2BSink();
}
// 67D3C0: using guessed type __int64 CWE127_Buffer_Underread__char_declare_cpy_68_goodG2BData;

//----- (000000000043919B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_68_good()
{
  return goodG2B_209();
}

//----- (00000000004391AB) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54c_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_54d_badSink(a1);
}

//----- (00000000004391C2) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54c_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_54d_goodG2BSink(a1);
}

//----- (00000000004391D9) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54c_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_54d_goodB2GSink(a1);
}

//----- (00000000004391F0) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_65b_badSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (0000000000439249) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_65b_goodG2BSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (00000000004392A2) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_54e_badSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (00000000004392FC) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_54e_goodG2BSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000439356) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_53d_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (00000000004393AD) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_53d_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000439404) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_53d_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000439461) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_54b_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_memcpy_54c_badSink(a1);
}

//----- (000000000043947B) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_54b_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_memcpy_54c_goodG2BSink(a1);
}

//----- (0000000000439495) ----------------------------------------------------
__int64 __fastcall CWE127_Buffer_Underread__CWE839_fscanf_61b_badSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004394C2) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_fscanf_61b_goodG2BSource()
{
  return 7LL;
}

//----- (00000000004394D5) ----------------------------------------------------
__int64 __fastcall CWE127_Buffer_Underread__CWE839_fscanf_61b_goodB2GSource(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000439502) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_54_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE127_Buffer_Underread__CWE839_listen_socket_54b_badSink(v8);
}
// 439502: using guessed type char buf[16];

//----- (0000000000439630) ----------------------------------------------------
int goodG2B_210()
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_54b_goodG2BSink(7);
}

//----- (0000000000439652) ----------------------------------------------------
int goodB2G_61()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE127_Buffer_Underread__CWE839_listen_socket_54b_goodB2GSink(v8);
}
// 439652: using guessed type char buf[16];

//----- (0000000000439780) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_54_good()
{
  goodG2B_210();
  return goodB2G_61();
}

//----- (000000000043979A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_52b_badSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_alloca_memmove_52c_badSink(a1);
}

//----- (00000000004397B4) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_52b_goodG2BSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_alloca_memmove_52c_goodG2BSink(a1);
}

//----- (00000000004397CE) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_17_bad()
{
  char dest; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  void *src; // [rsp+E0h] [rbp-10h]
  int i; // [rsp+ECh] [rbp-4h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  for ( i = 0; i <= 0; ++i )
    src = &v3;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (0000000000439865) ----------------------------------------------------
int goodG2B_211()
{
  char dest; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  void *src; // [rsp+E0h] [rbp-10h]
  int i; // [rsp+ECh] [rbp-4h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  for ( i = 0; i <= 0; ++i )
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (00000000004398F8) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_17_good()
{
  return goodG2B_211();
}

//----- (0000000000439908) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_02_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  char *v15; // [rsp+70h] [rbp-10h]
  void *s; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v15 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v15;
  v3 = *((_QWORD *)v15 + 1);
  v4 = *((_QWORD *)v15 + 2);
  v5 = *((_QWORD *)v15 + 3);
  v6 = *((_QWORD *)v15 + 4);
  v7 = *((_QWORD *)v15 + 5);
  v8 = *((_QWORD *)v15 + 6);
  v9 = *((_QWORD *)v15 + 7);
  v10 = *((_QWORD *)v15 + 8);
  v11 = *((_QWORD *)v15 + 9);
  v12 = *((_QWORD *)v15 + 10);
  v13 = *((_QWORD *)v15 + 11);
  v14 = *((_DWORD *)v15 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (0000000000439A06) ----------------------------------------------------
int goodG2B1_139()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  _QWORD *v15; // [rsp+70h] [rbp-10h]
  void *s; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v15 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v15;
  v3 = v15[1];
  v4 = v15[2];
  v5 = v15[3];
  v6 = v15[4];
  v7 = v15[5];
  v8 = v15[6];
  v9 = v15[7];
  v10 = v15[8];
  v11 = v15[9];
  v12 = v15[10];
  v13 = v15[11];
  v14 = *((_DWORD *)v15 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (0000000000439B00) ----------------------------------------------------
int goodG2B2_139()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  _QWORD *v15; // [rsp+70h] [rbp-10h]
  void *s; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v15 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v15;
  v3 = v15[1];
  v4 = v15[2];
  v5 = v15[3];
  v6 = v15[4];
  v7 = v15[5];
  v8 = v15[6];
  v9 = v15[7];
  v10 = v15[8];
  v11 = v15[9];
  v12 = v15[10];
  v13 = v15[11];
  v14 = *((_DWORD *)v15 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (0000000000439BFA) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_02_good()
{
  goodG2B1_139();
  return goodG2B2_139();
}

//----- (0000000000439C14) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_52b_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_ncpy_52c_badSink(a1);
}

//----- (0000000000439C2E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_52b_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_ncpy_52c_goodG2BSink(a1);
}

//----- (0000000000439C48) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_53_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_cpy_53b_badSink((const char *)&savedregs - 120);
}

//----- (0000000000439C84) ----------------------------------------------------
int goodG2B_212()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_cpy_53b_goodG2BSink(&s);
}

//----- (0000000000439CBC) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_53_good()
{
  return goodG2B_212();
}

//----- (0000000000439CCC) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_53c_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_cpy_53d_badSink(a1);
}

//----- (0000000000439CE6) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_53c_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_cpy_53d_goodG2BSink(a1);
}

//----- (0000000000439D00) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_67b_badSink(char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]
  char *src; // [rsp+78h] [rbp-8h]

  src = a1;
  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, src, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000439D62) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_67b_goodG2BSink(char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]
  char *src; // [rsp+78h] [rbp-8h]

  src = a1;
  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, src, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000439DC4) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_54c_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_loop_54d_badSink(a1);
}

//----- (0000000000439DDE) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_54c_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_loop_54d_goodG2BSink(a1);
}

//----- (0000000000439DF8) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_54d_badSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_alloca_memmove_54e_badSink(a1);
}

//----- (0000000000439E12) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_54d_goodG2BSink(const void *a1)
{
  return CWE127_Buffer_Underread__char_alloca_memmove_54e_goodG2BSink(a1);
}

//----- (0000000000439E2C) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_53d_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 439E2C: using guessed type char s[99];

//----- (0000000000439E95) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_53d_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 439E95: using guessed type char s[99];

//----- (0000000000439EFE) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_65b_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000439F55) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_65b_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000439FAC) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_65b_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000043A009) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_53b_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_cpy_53c_badSink(a1);
}

//----- (000000000043A023) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_53b_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_cpy_53c_goodG2BSink(a1);
}

//----- (000000000043A03D) ----------------------------------------------------
__int64 staticReturnsTrue_8()
{
  return 1LL;
}

//----- (000000000043A048) ----------------------------------------------------
__int64 staticReturnsFalse_8()
{
  return 0LL;
}

//----- (000000000043A053) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_08_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( (unsigned int)staticReturnsTrue_8() )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  result = staticReturnsTrue_8();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v13 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v13));
  }
  return result;
}
// 43A053: using guessed type char buf[16];

//----- (000000000043A1E1) ----------------------------------------------------
int goodB2G1_42()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( (unsigned int)staticReturnsTrue_8() )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  if ( (unsigned int)staticReturnsFalse_8() )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 43A1E1: using guessed type char buf[16];

//----- (000000000043A381) ----------------------------------------------------
int goodB2G2_42()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( (unsigned int)staticReturnsTrue_8() )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  result = staticReturnsTrue_8();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v13 < 0 || v13 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v13));
  }
  return result;
}
// 43A381: using guessed type char buf[16];

//----- (000000000043A515) ----------------------------------------------------
int goodG2B1_140()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)staticReturnsFalse_8() )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = staticReturnsTrue_8();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (000000000043A59F) ----------------------------------------------------
int goodG2B2_140()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)staticReturnsTrue_8() )
    v6 = 7;
  result = staticReturnsTrue_8();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (000000000043A61D) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_08_good()
{
  goodB2G1_42();
  goodB2G2_42();
  goodG2B1_140();
  return goodG2B2_140();
}

//----- (000000000043A64B) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_cpy_65_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(const char *); // [rsp+18h] [rbp-8h]

  v4 = CWE127_Buffer_Underread__char_alloca_cpy_65b_badSink;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return ((__int64 (__fastcall *)(char *))v4)((char *)s - 8);
}

//----- (000000000043A6CB) ----------------------------------------------------
__int64 goodG2B_213()
{
  void *v0; // rsp
  __int64 v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(const char *); // [rsp+18h] [rbp-8h]

  v4 = CWE127_Buffer_Underread__char_alloca_cpy_65b_goodG2BSink;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  HIBYTE(v2) = HIBYTE(s);
  return ((__int64 (__fastcall *)(void *))v4)(s);
}

//----- (000000000043A747) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_cpy_65_good()
{
  return goodG2B_213();
}

//----- (000000000043A757) ----------------------------------------------------
int __fastcall badSink_21(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = badStatic_2;
  if ( badStatic_2 )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D2B0: using guessed type int badStatic_2;

//----- (000000000043A7B8) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_21_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  badStatic_2 = 1;
  return badSink_21(v4);
}
// 67D2B0: using guessed type int badStatic_2;

//----- (000000000043A82A) ----------------------------------------------------
int __fastcall goodB2G1Sink_2(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  if ( goodB2G1Static_2 )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}
// 67D2B4: using guessed type int goodB2G1Static_2;

//----- (000000000043A89D) ----------------------------------------------------
int goodB2G1_43()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G1Static_2 = 0;
  return goodB2G1Sink_2(v4);
}
// 67D2B4: using guessed type int goodB2G1Static_2;

//----- (000000000043A90F) ----------------------------------------------------
int __fastcall goodB2G2Sink_2(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = goodB2G2Static_2;
  if ( goodB2G2Static_2 )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 < 0 || a1 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D2B8: using guessed type int goodB2G2Static_2;

//----- (000000000043A976) ----------------------------------------------------
int goodB2G2_43()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  goodB2G2Static_2 = 1;
  return goodB2G2Sink_2(v4);
}
// 67D2B8: using guessed type int goodB2G2Static_2;

//----- (000000000043A9E8) ----------------------------------------------------
int __fastcall goodG2BSink_21(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = goodG2BStatic_2;
  if ( goodG2BStatic_2 )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D2BC: using guessed type int goodG2BStatic_2;

//----- (000000000043AA49) ----------------------------------------------------
int goodG2B_214()
{
  goodG2BStatic_2 = 1;
  return goodG2BSink_21(7);
}
// 67D2BC: using guessed type int goodG2BStatic_2;

//----- (000000000043AA75) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_21_good()
{
  goodB2G1_43();
  goodB2G2_43();
  return goodG2B_214();
}

//----- (000000000043AA99) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_03_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000043AB41) ----------------------------------------------------
int goodB2G1_44()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000043ABEF) ----------------------------------------------------
int goodB2G2_44()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000043AC9D) ----------------------------------------------------
int goodG2B1_141()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000043ACFF) ----------------------------------------------------
int goodG2B2_141()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000043AD61) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_03_good()
{
  goodB2G1_44();
  goodB2G2_44();
  goodG2B1_141();
  return goodG2B2_141();
}

//----- (000000000043AD8F) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_54c_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_memcpy_54d_badSink(a1);
}

//----- (000000000043ADA9) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_54c_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_memcpy_54d_goodG2BSink(a1);
}

//----- (000000000043ADC3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_34_bad()
{
  char dest; // [rsp+0h] [rbp-160h]
  char v2; // [rsp+C7h] [rbp-99h]
  __int64 v3; // [rsp+C8h] [rbp-98h]
  char s; // [rsp+D0h] [rbp-90h]
  char v5; // [rsp+133h] [rbp-2Dh]
  __int64 *v6; // [rsp+140h] [rbp-20h]
  char *src; // [rsp+150h] [rbp-10h]
  __int64 *v8; // [rsp+158h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v8 = &v3;
  v6 = &v3;
  src = (char *)&v3;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000043AE51) ----------------------------------------------------
int goodG2B_215()
{
  char dest; // [rsp+0h] [rbp-160h]
  char v2; // [rsp+C7h] [rbp-99h]
  char s; // [rsp+D0h] [rbp-90h]
  char v4; // [rsp+133h] [rbp-2Dh]
  char *v5; // [rsp+140h] [rbp-20h]
  char *src; // [rsp+150h] [rbp-10h]
  char *v7; // [rsp+158h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v7 = &s;
  v5 = &s;
  src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000043AEDB) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_34_good()
{
  return goodG2B_215();
}

//----- (000000000043AEEB) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_18_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  char *v5; // [rsp+68h] [rbp-28h]
  void *s; // [rsp+70h] [rbp-20h]
  unsigned __int64 i; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = (char *)s - 8;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v5[i];
  v4 = 0;
  return printLine(v2);
}
// 43AEEB: using guessed type char var_90[99];

//----- (000000000043AFC3) ----------------------------------------------------
int goodG2B_216()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  _BYTE *v5; // [rsp+68h] [rbp-28h]
  void *s; // [rsp+70h] [rbp-20h]
  unsigned __int64 i; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v5[i];
  v4 = 0;
  return printLine(v2);
}
// 43AFC3: using guessed type char var_90[99];

//----- (000000000043B097) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_18_good()
{
  return goodG2B_216();
}

//----- (000000000043B0A7) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_61_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_fscanf_61b_badSource(0xFFFFFFFF);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (000000000043B10F) ----------------------------------------------------
int goodG2B_217()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_fscanf_61b_goodG2BSource();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (000000000043B177) ----------------------------------------------------
int goodB2G_62()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_fscanf_61b_goodB2GSource(0xFFFFFFFF);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (000000000043B1E5) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_61_good()
{
  goodG2B_217();
  return goodB2G_62();
}

//----- (000000000043B1FF) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_53c_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_53d_badSink(a1);
}

//----- (000000000043B216) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_53c_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_53d_goodG2BSink(a1);
}

//----- (000000000043B22D) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_53c_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_53d_goodB2GSink(a1);
}

//----- (000000000043B244) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_64b_badSink(__int64 *a1)
{
  __int64 s; // [rsp+10h] [rbp-80h]
  __int64 v3; // [rsp+18h] [rbp-78h]
  __int64 v4; // [rsp+20h] [rbp-70h]
  __int64 v5; // [rsp+28h] [rbp-68h]
  __int64 v6; // [rsp+30h] [rbp-60h]
  __int64 v7; // [rsp+38h] [rbp-58h]
  __int64 v8; // [rsp+40h] [rbp-50h]
  __int64 v9; // [rsp+48h] [rbp-48h]
  __int64 v10; // [rsp+50h] [rbp-40h]
  __int64 v11; // [rsp+58h] [rbp-38h]
  __int64 v12; // [rsp+60h] [rbp-30h]
  __int64 v13; // [rsp+68h] [rbp-28h]
  int v14; // [rsp+70h] [rbp-20h]
  __int64 v15; // [rsp+80h] [rbp-10h]
  __int64 *v16; // [rsp+88h] [rbp-8h]

  v16 = a1;
  v15 = *a1;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)v15;
  v3 = *(_QWORD *)(v15 + 8);
  v4 = *(_QWORD *)(v15 + 16);
  v5 = *(_QWORD *)(v15 + 24);
  v6 = *(_QWORD *)(v15 + 32);
  v7 = *(_QWORD *)(v15 + 40);
  v8 = *(_QWORD *)(v15 + 48);
  v9 = *(_QWORD *)(v15 + 56);
  v10 = *(_QWORD *)(v15 + 64);
  v11 = *(_QWORD *)(v15 + 72);
  v12 = *(_QWORD *)(v15 + 80);
  v13 = *(_QWORD *)(v15 + 88);
  v14 = *(_DWORD *)(v15 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000043B301) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_64b_goodG2BSink(__int64 *a1)
{
  __int64 s; // [rsp+10h] [rbp-80h]
  __int64 v3; // [rsp+18h] [rbp-78h]
  __int64 v4; // [rsp+20h] [rbp-70h]
  __int64 v5; // [rsp+28h] [rbp-68h]
  __int64 v6; // [rsp+30h] [rbp-60h]
  __int64 v7; // [rsp+38h] [rbp-58h]
  __int64 v8; // [rsp+40h] [rbp-50h]
  __int64 v9; // [rsp+48h] [rbp-48h]
  __int64 v10; // [rsp+50h] [rbp-40h]
  __int64 v11; // [rsp+58h] [rbp-38h]
  __int64 v12; // [rsp+60h] [rbp-30h]
  __int64 v13; // [rsp+68h] [rbp-28h]
  int v14; // [rsp+70h] [rbp-20h]
  __int64 v15; // [rsp+80h] [rbp-10h]
  __int64 *v16; // [rsp+88h] [rbp-8h]

  v16 = a1;
  v15 = *a1;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)v15;
  v3 = *(_QWORD *)(v15 + 8);
  v4 = *(_QWORD *)(v15 + 16);
  v5 = *(_QWORD *)(v15 + 24);
  v6 = *(_QWORD *)(v15 + 32);
  v7 = *(_QWORD *)(v15 + 40);
  v8 = *(_QWORD *)(v15 + 48);
  v9 = *(_QWORD *)(v15 + 56);
  v10 = *(_QWORD *)(v15 + 64);
  v11 = *(_QWORD *)(v15 + 72);
  v12 = *(_QWORD *)(v15 + 80);
  v13 = *(_QWORD *)(v15 + 88);
  v14 = *(_DWORD *)(v15 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000043B3BE) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_53b_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_ncpy_53c_badSink(a1);
}

//----- (000000000043B3D8) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_53b_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_ncpy_53c_goodG2BSink(a1);
}

//----- (000000000043B3F2) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_53d_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000043B493) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_53d_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000043B534) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_18_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000043B5DE) ----------------------------------------------------
int goodB2G_63()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000043B68E) ----------------------------------------------------
int goodG2B_218()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000043B6F2) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_18_good()
{
  goodB2G_63();
  return goodG2B_218();
}

//----- (000000000043B70C) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_51b_badSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (000000000043B766) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_51b_goodG2BSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (000000000043B7C0) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_52c_badSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (000000000043B81A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_52c_goodG2BSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (000000000043B874) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_52c_badSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (000000000043B8CD) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_52c_goodG2BSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (000000000043B926) ----------------------------------------------------
__int64 staticReturnsTrue_9()
{
  return 1LL;
}

//----- (000000000043B931) ----------------------------------------------------
__int64 staticReturnsFalse_9()
{
  return 0LL;
}

//----- (000000000043B93C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_08_bad()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  __int64 *v7; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( (unsigned int)staticReturnsTrue_9() )
    v7 = &v3;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *((_BYTE *)v7 + i);
  v2 = 0;
  return printLine(v1);
}
// 43B93C: using guessed type char var_F0[99];

//----- (000000000043B9E7) ----------------------------------------------------
int goodG2B1_142()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( (unsigned int)staticReturnsFalse_9() )
    printLine("Benign, fixed string");
  else
    v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 43B9E7: using guessed type char var_F0[99];

//----- (000000000043BA9A) ----------------------------------------------------
int goodG2B2_142()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( (unsigned int)staticReturnsTrue_9() )
    v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 43BA9A: using guessed type char var_F0[99];

//----- (000000000043BB41) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_08_good()
{
  goodG2B1_142();
  return goodG2B2_142();
}

//----- (000000000043BB5B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_68_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_ncpy_68_badData = (__int64)s - 8;
  return CWE127_Buffer_Underread__char_alloca_ncpy_68b_badSink();
}
// 67D3D0: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_ncpy_68_badData;

//----- (000000000043BBDB) ----------------------------------------------------
int goodG2B_219()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_ncpy_68_goodG2BData = (__int64)s;
  return CWE127_Buffer_Underread__char_alloca_ncpy_68b_goodG2BSink();
}
// 67D3D8: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_ncpy_68_goodG2BData;

//----- (000000000043BC57) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_68_good()
{
  return goodG2B_219();
}

//----- (000000000043BC67) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_34_bad()
{
  __int64 v1; // [rsp+0h] [rbp-100h]
  __int64 v2; // [rsp+8h] [rbp-F8h]
  __int64 v3; // [rsp+10h] [rbp-F0h]
  __int64 v4; // [rsp+18h] [rbp-E8h]
  __int64 v5; // [rsp+20h] [rbp-E0h]
  __int64 v6; // [rsp+28h] [rbp-D8h]
  __int64 v7; // [rsp+30h] [rbp-D0h]
  __int64 v8; // [rsp+38h] [rbp-C8h]
  __int64 v9; // [rsp+40h] [rbp-C0h]
  __int64 v10; // [rsp+48h] [rbp-B8h]
  __int64 v11; // [rsp+50h] [rbp-B0h]
  __int64 v12; // [rsp+58h] [rbp-A8h]
  int v13; // [rsp+60h] [rbp-A0h]
  __int64 v14; // [rsp+68h] [rbp-98h]
  char s; // [rsp+70h] [rbp-90h]
  char v16; // [rsp+D3h] [rbp-2Dh]
  __int64 *v17; // [rsp+E0h] [rbp-20h]
  __int64 *v18; // [rsp+F0h] [rbp-10h]
  __int64 *v19; // [rsp+F8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  v19 = &v14;
  v17 = &v14;
  v18 = &v14;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *v18;
  v2 = v18[1];
  v3 = v18[2];
  v4 = v18[3];
  v5 = v18[4];
  v6 = v18[5];
  v7 = v18[6];
  v8 = v18[7];
  v9 = v18[8];
  v10 = v18[9];
  v11 = v18[10];
  v12 = v18[11];
  v13 = *((_DWORD *)v18 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (000000000043BD76) ----------------------------------------------------
int goodG2B_220()
{
  __int64 v1; // [rsp+0h] [rbp-100h]
  __int64 v2; // [rsp+8h] [rbp-F8h]
  __int64 v3; // [rsp+10h] [rbp-F0h]
  __int64 v4; // [rsp+18h] [rbp-E8h]
  __int64 v5; // [rsp+20h] [rbp-E0h]
  __int64 v6; // [rsp+28h] [rbp-D8h]
  __int64 v7; // [rsp+30h] [rbp-D0h]
  __int64 v8; // [rsp+38h] [rbp-C8h]
  __int64 v9; // [rsp+40h] [rbp-C0h]
  __int64 v10; // [rsp+48h] [rbp-B8h]
  __int64 v11; // [rsp+50h] [rbp-B0h]
  __int64 v12; // [rsp+58h] [rbp-A8h]
  int v13; // [rsp+60h] [rbp-A0h]
  char s; // [rsp+70h] [rbp-90h]
  char v15; // [rsp+D3h] [rbp-2Dh]
  char *v16; // [rsp+E0h] [rbp-20h]
  char *v17; // [rsp+F0h] [rbp-10h]
  char *v18; // [rsp+F8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  v18 = &s;
  v16 = &s;
  v17 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v17;
  v2 = *((_QWORD *)v17 + 1);
  v3 = *((_QWORD *)v17 + 2);
  v4 = *((_QWORD *)v17 + 3);
  v5 = *((_QWORD *)v17 + 4);
  v6 = *((_QWORD *)v17 + 5);
  v7 = *((_QWORD *)v17 + 6);
  v8 = *((_QWORD *)v17 + 7);
  v9 = *((_QWORD *)v17 + 8);
  v10 = *((_QWORD *)v17 + 9);
  v11 = *((_QWORD *)v17 + 10);
  v12 = *((_QWORD *)v17 + 11);
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (000000000043BE81) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_34_good()
{
  return goodG2B_220();
}

//----- (000000000043BE91) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_07_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticFive_11 == 5 )
    __isoc99_fscanf(stdin, "%d", &v6);
  result = staticFive_11;
  if ( staticFive_11 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D19C: using guessed type int staticFive_11;

//----- (000000000043BF21) ----------------------------------------------------
int goodB2G1_45()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticFive_11 == 5 )
    __isoc99_fscanf(stdin, "%d", &v6);
  if ( staticFive_11 != 5 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D19C: using guessed type int staticFive_11;

//----- (000000000043BFC4) ----------------------------------------------------
int goodB2G2_45()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticFive_11 == 5 )
    __isoc99_fscanf(stdin, "%d", &v6);
  result = staticFive_11;
  if ( staticFive_11 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 < 0 || v6 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D19C: using guessed type int staticFive_11;

//----- (000000000043C05B) ----------------------------------------------------
int goodG2B1_143()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticFive_11 == 5 )
    v6 = 7;
  else
    printLine("Benign, fixed string");
  result = staticFive_11;
  if ( staticFive_11 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D19C: using guessed type int staticFive_11;

//----- (000000000043C0DF) ----------------------------------------------------
int goodG2B2_143()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticFive_11 == 5 )
    v6 = 7;
  result = staticFive_11;
  if ( staticFive_11 == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D19C: using guessed type int staticFive_11;

//----- (000000000043C157) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_07_good()
{
  goodB2G1_45();
  goodB2G2_45();
  goodG2B1_143();
  return goodG2B2_143();
}

//----- (000000000043C185) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_68b_badSink()
{
  char s; // [rsp+0h] [rbp-D0h]
  char v2; // [rsp+C7h] [rbp-9h]
  char *src; // [rsp+C8h] [rbp-8h]

  src = (char *)CWE127_Buffer_Underread__char_alloca_cpy_68_badData;
  memset(&s, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&s, src);
  return printLine(&s);
}
// 67D3E8: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_cpy_68_badData;

//----- (000000000043C1DF) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_68b_goodG2BSink()
{
  char s; // [rsp+0h] [rbp-D0h]
  char v2; // [rsp+C7h] [rbp-9h]
  char *src; // [rsp+C8h] [rbp-8h]

  src = (char *)CWE127_Buffer_Underread__char_alloca_cpy_68_goodG2BData;
  memset(&s, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&s, src);
  return printLine(&s);
}
// 67D3E0: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_cpy_68_goodG2BData;

//----- (000000000043C239) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_65b_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000043C2DA) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_65b_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000043C37B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_63_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_memmove_63b_badSink((void **)&v2);
}

//----- (000000000043C3F2) ----------------------------------------------------
int goodG2B_221()
{
  void *v0; // rsp
  void *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = s;
  return CWE127_Buffer_Underread__char_alloca_memmove_63b_goodG2BSink(&v2);
}

//----- (000000000043C465) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_63_good()
{
  return goodG2B_221();
}

//----- (000000000043C475) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_66b_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]
  __int64 v15; // [rsp+78h] [rbp-8h]

  v15 = *(_QWORD *)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)v15;
  v3 = *(_QWORD *)(v15 + 8);
  v4 = *(_QWORD *)(v15 + 16);
  v5 = *(_QWORD *)(v15 + 24);
  v6 = *(_QWORD *)(v15 + 32);
  v7 = *(_QWORD *)(v15 + 40);
  v8 = *(_QWORD *)(v15 + 48);
  v9 = *(_QWORD *)(v15 + 56);
  v10 = *(_QWORD *)(v15 + 64);
  v11 = *(_QWORD *)(v15 + 72);
  v12 = *(_QWORD *)(v15 + 80);
  v13 = *(_QWORD *)(v15 + 88);
  v14 = *(_DWORD *)(v15 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000043C522) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_66b_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]
  __int64 v15; // [rsp+78h] [rbp-8h]

  v15 = *(_QWORD *)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)v15;
  v3 = *(_QWORD *)(v15 + 8);
  v4 = *(_QWORD *)(v15 + 16);
  v5 = *(_QWORD *)(v15 + 24);
  v6 = *(_QWORD *)(v15 + 32);
  v7 = *(_QWORD *)(v15 + 40);
  v8 = *(_QWORD *)(v15 + 48);
  v9 = *(_QWORD *)(v15 + 56);
  v10 = *(_QWORD *)(v15 + 64);
  v11 = *(_QWORD *)(v15 + 72);
  v12 = *(_QWORD *)(v15 + 80);
  v13 = *(_QWORD *)(v15 + 88);
  v14 = *(_DWORD *)(v15 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000043C5CF) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_12_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  char *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v7 = (char *)s - 8;
  else
    v7 = (char *)s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 43C5CF: using guessed type char var_90[99];

//----- (000000000043C6BE) ----------------------------------------------------
int goodG2B_222()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  globalReturnsTrueOrFalse();
  v7 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 43C6BE: using guessed type char var_90[99];

//----- (000000000043C7A9) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_12_good()
{
  return goodG2B_222();
}

//----- (000000000043C7B9) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_13_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043C882) ----------------------------------------------------
int goodG2B1_144()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    src = s;
  else
    printLine("Benign, fixed string");
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043C953) ----------------------------------------------------
int goodG2B2_144()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000043CA18) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_13_good()
{
  goodG2B1_144();
  return goodG2B2_144();
}

//----- (000000000043CA32) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54b_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_54c_badSink(a1);
}

//----- (000000000043CA49) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54b_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_54c_goodG2BSink(a1);
}

//----- (000000000043CA60) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54b_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_54c_goodB2GSink(a1);
}

//----- (000000000043CA77) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_12_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    v9 = 7;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v9 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v9));
  }
  else
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v9 < 0 || v9 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v9));
  }
  return result;
}

//----- (000000000043CB96) ----------------------------------------------------
int goodB2G_64()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char nptr[8]; // [rsp+30h] [rbp-30h]
  int v7; // [rsp+38h] [rbp-28h]
  __int16 v8; // [rsp+3Ch] [rbp-24h]
  char s[8]; // [rsp+40h] [rbp-20h]
  int v10; // [rsp+48h] [rbp-18h]
  __int16 v11; // [rsp+4Ch] [rbp-14h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    *(_QWORD *)s = 0LL;
    v10 = 0;
    v11 = 0;
    if ( fgets(s, 14, stdin) )
      v12 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  else
  {
    *(_QWORD *)nptr = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(nptr, 14, stdin) )
      v12 = atoi(nptr);
    else
      printLine("fgets() failed.");
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 < 0 || v12 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  else
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 < 0 || v12 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  return result;
}

//----- (000000000043CD01) ----------------------------------------------------
int goodG2B_223()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  globalReturnsTrueOrFalse();
  v6 = 7;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  else
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (000000000043CDD4) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_12_good()
{
  goodB2G_64();
  return goodG2B_223();
}

//----- (000000000043CDEE) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_15_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 43CDEE: using guessed type char buf[16];

//----- (000000000043CF18) ----------------------------------------------------
int goodB2G1_46()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 43CF18: using guessed type char buf[16];

//----- (000000000043D048) ----------------------------------------------------
int goodB2G2_46()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v10 = recv(fd, buf, 0xDuLL, 0);
      if ( v10 != -1 )
      {
        if ( v10 )
        {
          buf[v10] = 0;
          v12 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 43D048: using guessed type char buf[16];

//----- (000000000043D178) ----------------------------------------------------
int goodG2B1_145()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000043D1DC) ----------------------------------------------------
int goodG2B2_145()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000043D240) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_15_good()
{
  goodB2G1_46();
  goodB2G2_46();
  goodG2B1_145();
  return goodG2B2_145();
}

//----- (000000000043D26E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_66b_badSink(__int64 a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]
  char *src; // [rsp+D8h] [rbp-8h]

  src = *(char **)(a1 + 16);
  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, src);
  return printLine(&s);
}

//----- (000000000043D2D3) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_66b_goodG2BSink(__int64 a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]
  char *src; // [rsp+D8h] [rbp-8h]

  src = *(char **)(a1 + 16);
  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, src);
  return printLine(&s);
}

//----- (000000000043D338) ----------------------------------------------------
__int64 staticReturnsTrue_10()
{
  return 1LL;
}

//----- (000000000043D343) ----------------------------------------------------
__int64 staticReturnsFalse_10()
{
  return 0LL;
}

//----- (000000000043D34E) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_08_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)staticReturnsTrue_10() )
    v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v16;
  v3 = *((_QWORD *)v16 + 1);
  v4 = *((_QWORD *)v16 + 2);
  v5 = *((_QWORD *)v16 + 3);
  v6 = *((_QWORD *)v16 + 4);
  v7 = *((_QWORD *)v16 + 5);
  v8 = *((_QWORD *)v16 + 6);
  v9 = *((_QWORD *)v16 + 7);
  v10 = *((_QWORD *)v16 + 8);
  v11 = *((_QWORD *)v16 + 9);
  v12 = *((_QWORD *)v16 + 10);
  v13 = *((_QWORD *)v16 + 11);
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (000000000043D45A) ----------------------------------------------------
int goodG2B1_146()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)staticReturnsFalse_10() )
    printLine("Benign, fixed string");
  else
    v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (000000000043D56E) ----------------------------------------------------
int goodG2B2_146()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)staticReturnsTrue_10() )
    v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (000000000043D676) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_08_good()
{
  goodG2B1_146();
  return goodG2B2_146();
}

//----- (000000000043D690) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_53_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_ncpy_53b_badSink((char *)s - 8);
}

//----- (000000000043D707) ----------------------------------------------------
int goodG2B_224()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_ncpy_53b_goodG2BSink((const char *)s);
}

//----- (000000000043D77A) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_53_good()
{
  return goodG2B_224();
}

//----- (000000000043D78A) ----------------------------------------------------
__int64 __fastcall badSource_1(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 43D78A: using guessed type char buf[16];

//----- (000000000043D867) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_42_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = badSource_1(0xFFFFFFFF);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (000000000043D8CF) ----------------------------------------------------
__int64 goodG2BSource_1()
{
  return 7LL;
}

//----- (000000000043D8E2) ----------------------------------------------------
int goodG2B_225()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = goodG2BSource_1();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (000000000043D94A) ----------------------------------------------------
__int64 __fastcall goodB2GSource_1(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-34h]
  char buf[16]; // [rsp+10h] [rbp-30h]
  __int16 s; // [rsp+20h] [rbp-20h]
  uint16_t v5; // [rsp+22h] [rbp-1Eh]
  in_addr_t v6; // [rsp+24h] [rbp-1Ch]
  int v7; // [rsp+38h] [rbp-8h]
  int fd; // [rsp+3Ch] [rbp-4h]

  v2 = a1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v6 = inet_addr("127.0.0.1");
    v5 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v2 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return v2;
}
// 43D94A: using guessed type char buf[16];

//----- (000000000043DA27) ----------------------------------------------------
int goodB2G_65()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = goodB2GSource_1(0xFFFFFFFF);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (000000000043DA95) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_42_good()
{
  goodB2G_65();
  return goodG2B_225();
}

//----- (000000000043DAAF) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_68b_badSink()
{
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v2; // [rsp+8h] [rbp-68h]
  __int64 v3; // [rsp+10h] [rbp-60h]
  __int64 v4; // [rsp+18h] [rbp-58h]
  __int64 v5; // [rsp+20h] [rbp-50h]
  __int64 v6; // [rsp+28h] [rbp-48h]
  __int64 v7; // [rsp+30h] [rbp-40h]
  __int64 v8; // [rsp+38h] [rbp-38h]
  __int64 v9; // [rsp+40h] [rbp-30h]
  __int64 v10; // [rsp+48h] [rbp-28h]
  __int64 v11; // [rsp+50h] [rbp-20h]
  __int64 v12; // [rsp+58h] [rbp-18h]
  int v13; // [rsp+60h] [rbp-10h]
  __int64 v14; // [rsp+68h] [rbp-8h]

  v14 = CWE127_Buffer_Underread__char_declare_memcpy_68_badData;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  s = *(_QWORD *)v14;
  v2 = *(_QWORD *)(v14 + 8);
  v3 = *(_QWORD *)(v14 + 16);
  v4 = *(_QWORD *)(v14 + 24);
  v5 = *(_QWORD *)(v14 + 32);
  v6 = *(_QWORD *)(v14 + 40);
  v7 = *(_QWORD *)(v14 + 48);
  v8 = *(_QWORD *)(v14 + 56);
  v9 = *(_QWORD *)(v14 + 64);
  v10 = *(_QWORD *)(v14 + 72);
  v11 = *(_QWORD *)(v14 + 80);
  v12 = *(_QWORD *)(v14 + 88);
  v13 = *(_DWORD *)(v14 + 96);
  HIBYTE(v13) = 0;
  return printLine((const char *)&s);
}
// 67D3F0: using guessed type __int64 CWE127_Buffer_Underread__char_declare_memcpy_68_badData;

//----- (000000000043DB57) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_68b_goodG2BSink()
{
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v2; // [rsp+8h] [rbp-68h]
  __int64 v3; // [rsp+10h] [rbp-60h]
  __int64 v4; // [rsp+18h] [rbp-58h]
  __int64 v5; // [rsp+20h] [rbp-50h]
  __int64 v6; // [rsp+28h] [rbp-48h]
  __int64 v7; // [rsp+30h] [rbp-40h]
  __int64 v8; // [rsp+38h] [rbp-38h]
  __int64 v9; // [rsp+40h] [rbp-30h]
  __int64 v10; // [rsp+48h] [rbp-28h]
  __int64 v11; // [rsp+50h] [rbp-20h]
  __int64 v12; // [rsp+58h] [rbp-18h]
  int v13; // [rsp+60h] [rbp-10h]
  __int64 v14; // [rsp+68h] [rbp-8h]

  v14 = CWE127_Buffer_Underread__char_declare_memcpy_68_goodG2BData;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  s = *(_QWORD *)v14;
  v2 = *(_QWORD *)(v14 + 8);
  v3 = *(_QWORD *)(v14 + 16);
  v4 = *(_QWORD *)(v14 + 24);
  v5 = *(_QWORD *)(v14 + 32);
  v6 = *(_QWORD *)(v14 + 40);
  v7 = *(_QWORD *)(v14 + 48);
  v8 = *(_QWORD *)(v14 + 56);
  v9 = *(_QWORD *)(v14 + 64);
  v10 = *(_QWORD *)(v14 + 72);
  v11 = *(_QWORD *)(v14 + 80);
  v12 = *(_QWORD *)(v14 + 88);
  v13 = *(_DWORD *)(v14 + 96);
  HIBYTE(v13) = 0;
  return printLine((const char *)&s);
}
// 67D3F8: using guessed type __int64 CWE127_Buffer_Underread__char_declare_memcpy_68_goodG2BData;

//----- (000000000043DBFF) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_52b_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_ncpy_52c_badSink(a1);
}

//----- (000000000043DC19) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_52b_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_ncpy_52c_goodG2BSink(a1);
}

//----- (000000000043DC33) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_53b_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_cpy_53c_badSink(a1);
}

//----- (000000000043DC4D) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_53b_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_cpy_53c_goodG2BSink(a1);
}

//----- (000000000043DC67) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_53_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_loop_53b_badSink((__int64)s - 8);
}

//----- (000000000043DCDE) ----------------------------------------------------
int goodG2B_226()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_loop_53b_goodG2BSink((__int64)s);
}

//----- (000000000043DD51) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_53_good()
{
  return goodG2B_226();
}

//----- (000000000043DD61) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_52_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_cpy_52b_badSink((const char *)&savedregs - 120);
}

//----- (000000000043DD9D) ----------------------------------------------------
int goodG2B_227()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_cpy_52b_goodG2BSink(&s);
}

//----- (000000000043DDD5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_52_good()
{
  return goodG2B_227();
}

//----- (000000000043DDE5) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_54b_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_loop_54c_badSink(a1);
}

//----- (000000000043DDFF) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_54b_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_loop_54c_goodG2BSink(a1);
}

//----- (000000000043DE19) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_51b_badSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (000000000043DE72) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_51b_goodG2BSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (000000000043DECB) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_66_bad()
{
  void *v0; // rsp
  char v2; // [rsp+0h] [rbp-40h]
  char v3; // [rsp+Fh] [rbp-31h]
  char *v4; // [rsp+10h] [rbp-30h]
  char *v5; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = (char *)s - 8;
  v4 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_ncpy_66b_badSink((__int64)&v2);
}

//----- (000000000043DF4A) ----------------------------------------------------
int goodG2B_228()
{
  void *v0; // rsp
  char v2; // [rsp+0h] [rbp-40h]
  char v3; // [rsp+Fh] [rbp-31h]
  void *v4; // [rsp+10h] [rbp-30h]
  void *v5; // [rsp+30h] [rbp-10h]
  void *s; // [rsp+38h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = s;
  v4 = s;
  return CWE127_Buffer_Underread__char_alloca_ncpy_66b_goodG2BSink((__int64)&v2);
}

//----- (000000000043DFC5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_66_good()
{
  return goodG2B_228();
}

//----- (000000000043DFD5) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_52c_badSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (000000000043E02E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_52c_goodG2BSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (000000000043E087) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_16_bad()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  __int64 v3; // [rsp+C8h] [rbp-78h]
  char s; // [rsp+D0h] [rbp-70h]
  char v5; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = (char *)&v3;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000043E0FD) ----------------------------------------------------
int goodG2B_229()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000043E16F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_16_good()
{
  return goodG2B_229();
}

//----- (000000000043E17F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_11_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  char *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v7 = (char *)s - 8;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 43E17F: using guessed type char var_90[99];

//----- (000000000043E264) ----------------------------------------------------
int goodG2B1_147()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v7 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 43E264: using guessed type char var_90[99];

//----- (000000000043E351) ----------------------------------------------------
int goodG2B2_147()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsTrue() )
    v7 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 43E351: using guessed type char var_90[99];

//----- (000000000043E432) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_11_good()
{
  goodG2B1_147();
  return goodG2B2_147();
}

//----- (000000000043E44C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_02_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  char *v5; // [rsp+68h] [rbp-28h]
  void *s; // [rsp+70h] [rbp-20h]
  unsigned __int64 i; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = (char *)s - 8;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v5[i];
  v4 = 0;
  return printLine(v2);
}
// 43E44C: using guessed type char var_90[99];

//----- (000000000043E523) ----------------------------------------------------
int goodG2B1_148()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  _BYTE *v5; // [rsp+68h] [rbp-28h]
  void *s; // [rsp+70h] [rbp-20h]
  unsigned __int64 i; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v5[i];
  v4 = 0;
  return printLine(v2);
}
// 43E523: using guessed type char var_90[99];

//----- (000000000043E5F6) ----------------------------------------------------
int goodG2B2_148()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  _BYTE *v5; // [rsp+68h] [rbp-28h]
  void *s; // [rsp+70h] [rbp-20h]
  unsigned __int64 i; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v5[i];
  v4 = 0;
  return printLine(v2);
}
// 43E5F6: using guessed type char var_90[99];

//----- (000000000043E6C9) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_02_good()
{
  goodG2B1_148();
  return goodG2B2_148();
}

//----- (000000000043E6E3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_68_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_cpy_68_badData = (__int64)s - 8;
  return CWE127_Buffer_Underread__char_alloca_cpy_68b_badSink();
}
// 67D3E8: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_cpy_68_badData;

//----- (000000000043E763) ----------------------------------------------------
int goodG2B_230()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_cpy_68_goodG2BData = (__int64)s;
  return CWE127_Buffer_Underread__char_alloca_cpy_68b_goodG2BSink();
}
// 67D3E0: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_cpy_68_goodG2BData;

//----- (000000000043E7DF) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_68_good()
{
  return goodG2B_230();
}

//----- (000000000043E7EF) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_02_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000043E897) ----------------------------------------------------
int goodB2G1_47()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000043E945) ----------------------------------------------------
int goodB2G2_47()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (000000000043E9F3) ----------------------------------------------------
int goodG2B1_149()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000043EA55) ----------------------------------------------------
int goodG2B2_149()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000043EAB7) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_02_good()
{
  goodB2G1_47();
  goodB2G2_47();
  goodG2B1_149();
  return goodG2B2_149();
}

//----- (000000000043EAE5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_16_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  char *v15; // [rsp+70h] [rbp-10h]
  void *s; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v15 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v15;
  v3 = *((_QWORD *)v15 + 1);
  v4 = *((_QWORD *)v15 + 2);
  v5 = *((_QWORD *)v15 + 3);
  v6 = *((_QWORD *)v15 + 4);
  v7 = *((_QWORD *)v15 + 5);
  v8 = *((_QWORD *)v15 + 6);
  v9 = *((_QWORD *)v15 + 7);
  v10 = *((_QWORD *)v15 + 8);
  v11 = *((_QWORD *)v15 + 9);
  v12 = *((_QWORD *)v15 + 10);
  v13 = *((_QWORD *)v15 + 11);
  v14 = *((_DWORD *)v15 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (000000000043EBE4) ----------------------------------------------------
int goodG2B_231()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  _QWORD *v15; // [rsp+70h] [rbp-10h]
  void *s; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v15 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v15;
  v3 = v15[1];
  v4 = v15[2];
  v5 = v15[3];
  v6 = v15[4];
  v7 = v15[5];
  v8 = v15[6];
  v9 = v15[7];
  v10 = v15[8];
  v11 = v15[9];
  v12 = v15[10];
  v13 = v15[11];
  v14 = *((_DWORD *)v15 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (000000000043ECDF) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_16_good()
{
  return goodG2B_231();
}

//----- (000000000043ECEF) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_64b_badSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  __int64 v6; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+44h] [rbp-Ch]
  int *v8; // [rsp+48h] [rbp-8h]

  v8 = a1;
  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000043ED58) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_64b_goodG2BSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  __int64 v6; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+44h] [rbp-Ch]
  int *v8; // [rsp+48h] [rbp-8h]

  v8 = a1;
  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000043EDC1) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_64b_goodB2GSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  __int64 v6; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+44h] [rbp-Ch]
  int *v8; // [rsp+48h] [rbp-8h]

  v8 = a1;
  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000043EE30) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_54b_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_memcpy_54c_badSink(a1);
}

//----- (000000000043EE4A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_54b_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_memcpy_54c_goodG2BSink(a1);
}

//----- (000000000043EE64) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_06_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  __int64 v4; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v6; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  src = (char *)&v4;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (000000000043EEF9) ----------------------------------------------------
int goodG2B1_150()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (000000000043EF96) ----------------------------------------------------
int goodG2B2_150()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  char *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (000000000043F027) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_06_good()
{
  goodG2B1_150();
  return goodG2B2_150();
}

//----- (000000000043F041) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_54_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memcpy_54b_badSink((__int64)s - 8);
}

//----- (000000000043F0B8) ----------------------------------------------------
int goodG2B_232()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memcpy_54b_goodG2BSink((__int64)s);
}

//----- (000000000043F12B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_54_good()
{
  return goodG2B_232();
}

//----- (000000000043F13B) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_05_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( staticTrue_9 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticTrue_9;
  if ( staticTrue_9 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  return result;
}
// 67D1A0: using guessed type int staticTrue_9;
// 43F13B: using guessed type char buf[16];

//----- (000000000043F27B) ----------------------------------------------------
int goodB2G1_48()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( staticTrue_9 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( staticFalse_9 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 67D1A0: using guessed type int staticTrue_9;
// 67D2C0: using guessed type int staticFalse_9;
// 43F27B: using guessed type char buf[16];

//----- (000000000043F3CD) ----------------------------------------------------
int goodB2G2_48()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( staticTrue_9 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = staticTrue_9;
  if ( staticTrue_9 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 < 0 || v12 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  return result;
}
// 67D1A0: using guessed type int staticTrue_9;
// 43F3CD: using guessed type char buf[16];

//----- (000000000043F513) ----------------------------------------------------
int goodG2B1_151()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticFalse_9 )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = staticTrue_9;
  if ( staticTrue_9 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1A0: using guessed type int staticTrue_9;
// 67D2C0: using guessed type int staticFalse_9;

//----- (000000000043F595) ----------------------------------------------------
int goodG2B2_151()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticTrue_9 )
    v6 = 7;
  result = staticTrue_9;
  if ( staticTrue_9 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1A0: using guessed type int staticTrue_9;

//----- (000000000043F60B) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_05_good()
{
  goodB2G1_48();
  goodB2G2_48();
  goodG2B1_151();
  return goodG2B2_151();
}

//----- (000000000043F639) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_10_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  char *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalTrue )
    v7 = (char *)s - 8;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 67D1B4: using guessed type int globalTrue;
// 43F639: using guessed type char var_90[99];

//----- (000000000043F71A) ----------------------------------------------------
int goodG2B1_152()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v7 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 67D368: using guessed type int globalFalse;
// 43F71A: using guessed type char var_90[99];

//----- (000000000043F803) ----------------------------------------------------
int goodG2B2_152()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalTrue )
    v7 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 67D1B4: using guessed type int globalTrue;
// 43F803: using guessed type char var_90[99];

//----- (000000000043F8E0) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_10_good()
{
  goodG2B1_152();
  return goodG2B2_152();
}

//----- (000000000043F8FA) ----------------------------------------------------
int __fastcall badSink_22(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000043F951) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_41_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return badSink_22(v7);
}
// 43F951: using guessed type char buf[16];

//----- (000000000043FA39) ----------------------------------------------------
int __fastcall goodG2BSink_22(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000043FA90) ----------------------------------------------------
int goodG2B_233()
{
  return goodG2BSink_22(7);
}

//----- (000000000043FAB2) ----------------------------------------------------
int __fastcall goodB2GSink_8(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000043FB0F) ----------------------------------------------------
int goodB2G_66()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return goodB2GSink_8(v7);
}
// 43FB0F: using guessed type char buf[16];

//----- (000000000043FBF7) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_41_good()
{
  goodB2G_66();
  return goodG2B_233();
}

//----- (000000000043FC11) ----------------------------------------------------
int badSink_23()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v3 = CWE127_Buffer_Underread__char_alloca_loop_45_badData;
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v3 + i);
  v2 = 0;
  return printLine(s);
}
// 67D2C8: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_loop_45_badData;
// 43FC11: using guessed type char s[99];

//----- (000000000043FC81) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_45_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_loop_45_badData = (__int64)s - 8;
  return badSink_23();
}
// 67D2C8: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_loop_45_badData;

//----- (000000000043FD01) ----------------------------------------------------
int goodG2BSink_23()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v3 = CWE127_Buffer_Underread__char_alloca_loop_45_goodG2BData;
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v3 + i);
  v2 = 0;
  return printLine(s);
}
// 67D2D0: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_loop_45_goodG2BData;
// 43FD01: using guessed type char s[99];

//----- (000000000043FD71) ----------------------------------------------------
int goodG2B_234()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_loop_45_goodG2BData = (__int64)s;
  return goodG2BSink_23();
}
// 67D2D0: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_loop_45_goodG2BData;

//----- (000000000043FDED) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_45_good()
{
  return goodG2B_234();
}

//----- (000000000043FDFD) ----------------------------------------------------
int __fastcall badSink_24(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000043FE4D) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_memmove_44_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(const void *); // [rsp+18h] [rbp-8h]

  v4 = badSink_24;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return ((__int64 (__fastcall *)(char *))v4)((char *)s - 8);
}

//----- (000000000043FECD) ----------------------------------------------------
int __fastcall goodG2BSink_24(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000043FF1D) ----------------------------------------------------
__int64 goodG2B_235()
{
  void *v0; // rsp
  __int64 v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(const void *); // [rsp+18h] [rbp-8h]

  v4 = goodG2BSink_24;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  HIBYTE(v2) = HIBYTE(s);
  return ((__int64 (__fastcall *)(void *))v4)(s);
}

//----- (000000000043FF99) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_memmove_44_good()
{
  return goodG2B_235();
}

//----- (000000000043FFA9) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_10_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v9 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v9));
  }
  return result;
}
// 67D1B4: using guessed type int globalTrue;

//----- (0000000000440065) ----------------------------------------------------
int goodB2G1_49()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  if ( globalFalse )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}
// 67D1B4: using guessed type int globalTrue;
// 67D368: using guessed type int globalFalse;

//----- (0000000000440133) ----------------------------------------------------
int goodB2G2_49()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  if ( globalTrue )
  {
    *(_QWORD *)s = 0LL;
    v7 = 0;
    v8 = 0;
    if ( fgets(s, 14, stdin) )
      v9 = atoi(s);
    else
      printLine("fgets() failed.");
  }
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v9 < 0 || v9 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v9));
  }
  return result;
}
// 67D1B4: using guessed type int globalTrue;

//----- (00000000004401F5) ----------------------------------------------------
int goodG2B1_153()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalFalse )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1B4: using guessed type int globalTrue;
// 67D368: using guessed type int globalFalse;

//----- (0000000000440277) ----------------------------------------------------
int goodG2B2_153()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalTrue )
    v6 = 7;
  result = globalTrue;
  if ( globalTrue )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1B4: using guessed type int globalTrue;

//----- (00000000004402ED) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_10_good()
{
  goodB2G1_49();
  goodB2G2_49();
  goodG2B1_153();
  return goodG2B2_153();
}

//----- (000000000044031B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_12_bad()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  __int64 v14; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v16; // [rsp+D3h] [rbp-Dh]
  char *v17; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    v17 = (char *)&v14;
  else
    v17 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v17;
  v2 = *((_QWORD *)v17 + 1);
  v3 = *((_QWORD *)v17 + 2);
  v4 = *((_QWORD *)v17 + 3);
  v5 = *((_QWORD *)v17 + 4);
  v6 = *((_QWORD *)v17 + 5);
  v7 = *((_QWORD *)v17 + 6);
  v8 = *((_QWORD *)v17 + 7);
  v9 = *((_QWORD *)v17 + 8);
  v10 = *((_QWORD *)v17 + 9);
  v11 = *((_QWORD *)v17 + 10);
  v12 = *((_QWORD *)v17 + 11);
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (0000000000440423) ----------------------------------------------------
int goodG2B_236()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  globalReturnsTrueOrFalse();
  v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (0000000000440527) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_12_good()
{
  return goodG2B_236();
}

//----- (0000000000440537) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_53_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_cpy_53b_badSink((char *)s - 8);
}

//----- (00000000004405AE) ----------------------------------------------------
int goodG2B_237()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_cpy_53b_goodG2BSink((const char *)s);
}

//----- (0000000000440621) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_53_good()
{
  return goodG2B_237();
}

//----- (0000000000440631) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_54_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_loop_54b_badSink((__int64)(&savedregs - 15));
}

//----- (000000000044066D) ----------------------------------------------------
int goodG2B_238()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_loop_54b_goodG2BSink((__int64)&s);
}

//----- (00000000004406A5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_54_good()
{
  return goodG2B_238();
}

//----- (00000000004406B5) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_34_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-70h]
  __int64 v2; // [rsp+8h] [rbp-68h]
  __int64 v3; // [rsp+10h] [rbp-60h]
  __int64 v4; // [rsp+18h] [rbp-58h]
  __int64 v5; // [rsp+20h] [rbp-50h]
  char buf[16]; // [rsp+30h] [rbp-40h]
  __int16 s; // [rsp+40h] [rbp-30h]
  uint16_t v8; // [rsp+42h] [rbp-2Eh]
  in_addr_t v9; // [rsp+44h] [rbp-2Ch]
  int v10; // [rsp+50h] [rbp-20h]
  int v11; // [rsp+60h] [rbp-10h]
  int v12; // [rsp+64h] [rbp-Ch]
  int fd; // [rsp+68h] [rbp-8h]
  int v14; // [rsp+6Ch] [rbp-4h]

  v14 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v12 = recv(fd, buf, 0xDuLL, 0);
      if ( v12 != -1 )
      {
        if ( v12 )
        {
          buf[v12] = 0;
          v14 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v10 = v14;
  v11 = v14;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v14 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v11));
  return result;
}
// 4406B5: using guessed type char buf[16];

//----- (00000000004407E9) ----------------------------------------------------
int goodG2B_239()
{
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  int v5; // [rsp+30h] [rbp-10h]
  int v6; // [rsp+3Ch] [rbp-4h]

  v6 = 7;
  v5 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (0000000000440857) ----------------------------------------------------
int goodB2G_67()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-70h]
  __int64 v2; // [rsp+8h] [rbp-68h]
  __int64 v3; // [rsp+10h] [rbp-60h]
  __int64 v4; // [rsp+18h] [rbp-58h]
  __int64 v5; // [rsp+20h] [rbp-50h]
  char buf[16]; // [rsp+30h] [rbp-40h]
  __int16 s; // [rsp+40h] [rbp-30h]
  uint16_t v8; // [rsp+42h] [rbp-2Eh]
  in_addr_t v9; // [rsp+44h] [rbp-2Ch]
  int v10; // [rsp+50h] [rbp-20h]
  int v11; // [rsp+60h] [rbp-10h]
  int v12; // [rsp+64h] [rbp-Ch]
  int fd; // [rsp+68h] [rbp-8h]
  int v14; // [rsp+6Ch] [rbp-4h]

  v14 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v12 = recv(fd, buf, 0xDuLL, 0);
      if ( v12 != -1 )
      {
        if ( v12 )
        {
          buf[v12] = 0;
          v14 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v10 = v14;
  v11 = v14;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v14 < 0 || v11 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v11));
  return result;
}
// 440857: using guessed type char buf[16];

//----- (0000000000440991) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_34_good()
{
  goodG2B_239();
  return goodB2G_67();
}

//----- (00000000004409AB) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_09_bad()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  __int64 v14; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v16; // [rsp+D3h] [rbp-Dh]
  __int64 *v17; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  if ( GLOBAL_CONST_TRUE )
    v17 = &v14;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *v17;
  v2 = v17[1];
  v3 = v17[2];
  v4 = v17[3];
  v5 = v17[4];
  v6 = v17[5];
  v7 = v17[6];
  v8 = v17[7];
  v9 = v17[8];
  v10 = v17[9];
  v11 = v17[10];
  v12 = v17[11];
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000440AA5) ----------------------------------------------------
int goodG2B1_154()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}
// 462E04: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000440BA7) ----------------------------------------------------
int goodG2B2_154()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  if ( GLOBAL_CONST_TRUE )
    v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000440C9D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_09_good()
{
  goodG2B1_154();
  return goodG2B2_154();
}

//----- (0000000000440CB7) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_01_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (0000000000440D5F) ----------------------------------------------------
int goodG2B_240()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (0000000000440DC1) ----------------------------------------------------
int goodB2G_68()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+18h] [rbp-38h]
  __int64 v5; // [rsp+20h] [rbp-30h]
  char s[8]; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+38h] [rbp-18h]
  __int16 v8; // [rsp+3Ch] [rbp-14h]
  int v9; // [rsp+4Ch] [rbp-4h]

  v9 = -1;
  *(_QWORD *)s = 0LL;
  v7 = 0;
  v8 = 0;
  if ( fgets(s, 14, stdin) )
    v9 = atoi(s);
  else
    printLine("fgets() failed.");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v9 < 0 || v9 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v9));
  return result;
}

//----- (0000000000440E6F) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_01_good()
{
  goodG2B_240();
  return goodB2G_68();
}

//----- (0000000000440E89) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_66b_badSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *(_DWORD *)(a1 + 8);
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000440EEB) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_66b_goodG2BSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *(_DWORD *)(a1 + 8);
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000440F4D) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *(_DWORD *)(a1 + 8);
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000440FB5) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_68b_badSink()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_connect_socket_68_badData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_connect_socket_68_badData > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D3A0: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_68_badData;

//----- (0000000000441012) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_68b_goodG2BSink()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_connect_socket_68_goodG2BData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_connect_socket_68_goodG2BData > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D39C: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_68_goodG2BData;

//----- (000000000044106F) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_68b_goodB2GSink()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_connect_socket_68_goodB2GData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_connect_socket_68_goodB2GData < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D398: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_68_goodB2GData;

//----- (00000000004410D2) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_52b_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_loop_52c_badSink(a1);
}

//----- (00000000004410EC) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_52b_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_loop_52c_goodG2BSink(a1);
}

//----- (0000000000441106) ----------------------------------------------------
int badSink_25()
{
  char s; // [rsp+0h] [rbp-D0h]
  char v2; // [rsp+C7h] [rbp-9h]
  char *src; // [rsp+C8h] [rbp-8h]

  src = (char *)CWE127_Buffer_Underread__char_declare_cpy_45_badData;
  memset(&s, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&s, src);
  return printLine(&s);
}
// 67D2D8: using guessed type __int64 CWE127_Buffer_Underread__char_declare_cpy_45_badData;

//----- (0000000000441160) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_45_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  CWE127_Buffer_Underread__char_declare_cpy_45_badData = (__int64)(&savedregs - 15);
  return badSink_25();
}
// 67D2D8: using guessed type __int64 CWE127_Buffer_Underread__char_declare_cpy_45_badData;

//----- (00000000004411A5) ----------------------------------------------------
int goodG2BSink_25()
{
  char s; // [rsp+0h] [rbp-D0h]
  char v2; // [rsp+C7h] [rbp-9h]
  char *src; // [rsp+C8h] [rbp-8h]

  src = (char *)CWE127_Buffer_Underread__char_declare_cpy_45_goodG2BData;
  memset(&s, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&s, src);
  return printLine(&s);
}
// 67D2E0: using guessed type __int64 CWE127_Buffer_Underread__char_declare_cpy_45_goodG2BData;

//----- (00000000004411FF) ----------------------------------------------------
int goodG2B_241()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  CWE127_Buffer_Underread__char_declare_cpy_45_goodG2BData = (__int64)&s;
  return goodG2BSink_25();
}
// 67D2E0: using guessed type __int64 CWE127_Buffer_Underread__char_declare_cpy_45_goodG2BData;

//----- (0000000000441240) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_45_good()
{
  return goodG2B_241();
}

//----- (0000000000441250) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_65b_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 441250: using guessed type char s[99];

//----- (00000000004412B9) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_65b_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 4412B9: using guessed type char s[99];

//----- (0000000000441322) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_53b_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_memcpy_53c_badSink(a1);
}

//----- (000000000044133C) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_53b_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_memcpy_53c_goodG2BSink(a1);
}

//----- (0000000000441356) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_06_bad()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  __int64 v3; // [rsp+C8h] [rbp-78h]
  char s; // [rsp+D0h] [rbp-70h]
  char v5; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = (char *)&v3;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (00000000004413D5) ----------------------------------------------------
int goodG2B1_155()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000044145C) ----------------------------------------------------
int goodG2B2_155()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (00000000004414D7) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_06_good()
{
  goodG2B1_155();
  return goodG2B2_155();
}

//----- (00000000004414F1) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_52_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_ncpy_52b_badSink((char *)s - 8);
}

//----- (0000000000441568) ----------------------------------------------------
int goodG2B_242()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_ncpy_52b_goodG2BSink((const char *)s);
}

//----- (00000000004415DB) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_52_good()
{
  return goodG2B_242();
}

//----- (00000000004415EB) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_52c_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000044168C) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_52c_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000044172D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_09_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_TRUE )
    v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v16;
  v3 = *((_QWORD *)v16 + 1);
  v4 = *((_QWORD *)v16 + 2);
  v5 = *((_QWORD *)v16 + 3);
  v6 = *((_QWORD *)v16 + 4);
  v7 = *((_QWORD *)v16 + 5);
  v8 = *((_QWORD *)v16 + 6);
  v9 = *((_QWORD *)v16 + 7);
  v10 = *((_QWORD *)v16 + 8);
  v11 = *((_QWORD *)v16 + 9);
  v12 = *((_QWORD *)v16 + 10);
  v13 = *((_QWORD *)v16 + 11);
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000441835) ----------------------------------------------------
int goodG2B1_156()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}
// 462E04: using guessed type int GLOBAL_CONST_FALSE;

//----- (0000000000441945) ----------------------------------------------------
int goodG2B2_156()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_TRUE )
    v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (0000000000441A49) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_09_good()
{
  goodG2B1_156();
  return goodG2B2_156();
}

//----- (0000000000441A63) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_51b_badSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000441ABD) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_51b_goodG2BSink(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000441B17) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_17_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  void *src; // [rsp+70h] [rbp-20h]
  int i; // [rsp+7Ch] [rbp-14h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  for ( i = 0; i <= 0; ++i )
    src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (0000000000441BE8) ----------------------------------------------------
int goodG2B_243()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  void *src; // [rsp+70h] [rbp-20h]
  int i; // [rsp+7Ch] [rbp-14h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  for ( i = 0; i <= 0; ++i )
    src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (0000000000441CB5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_17_good()
{
  return goodG2B_243();
}

//----- (0000000000441CC5) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_52b_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_cpy_52c_badSink(a1);
}

//----- (0000000000441CDF) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_52b_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_alloca_cpy_52c_goodG2BSink(a1);
}

//----- (0000000000441CF9) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_68_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  CWE127_Buffer_Underread__char_declare_memcpy_68_badData = (__int64)(&savedregs - 15);
  return CWE127_Buffer_Underread__char_declare_memcpy_68b_badSink();
}
// 67D3F0: using guessed type __int64 CWE127_Buffer_Underread__char_declare_memcpy_68_badData;

//----- (0000000000441D3E) ----------------------------------------------------
int goodG2B_244()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  CWE127_Buffer_Underread__char_declare_memcpy_68_goodG2BData = (__int64)&s;
  return CWE127_Buffer_Underread__char_declare_memcpy_68b_goodG2BSink();
}
// 67D3F8: using guessed type __int64 CWE127_Buffer_Underread__char_declare_memcpy_68_goodG2BData;

//----- (0000000000441D7F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_68_good()
{
  return goodG2B_244();
}

//----- (0000000000441D8F) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_listen_socket_65_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = CWE127_Buffer_Underread__CWE839_listen_socket_65b_badSink;
  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 441D8F: using guessed type char buf[16];

//----- (0000000000441EC6) ----------------------------------------------------
int goodG2B_245()
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_65b_goodG2BSink(7);
}

//----- (0000000000441EF1) ----------------------------------------------------
__int64 goodB2G_69()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  int v4; // [rsp+14h] [rbp-2Ch]
  int v5; // [rsp+28h] [rbp-18h]
  int fd; // [rsp+2Ch] [rbp-14h]
  int (__fastcall *v7)(int); // [rsp+30h] [rbp-10h]
  int v8; // [rsp+38h] [rbp-8h]
  unsigned int v9; // [rsp+3Ch] [rbp-4h]

  v7 = CWE127_Buffer_Underread__CWE839_listen_socket_65b_goodB2GSink;
  v9 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v5 = recv(v8, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v9 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return ((__int64 (__fastcall *)(_QWORD))v7)(v9);
}
// 441EF1: using guessed type char buf[16];

//----- (0000000000442028) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__CWE839_listen_socket_65_good()
{
  goodG2B_245();
  return goodB2G_69();
}

//----- (0000000000442042) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_16_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  char *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000044210E) ----------------------------------------------------
int goodG2B_246()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  char *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (00000000004421D6) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_16_good()
{
  return goodG2B_246();
}

//----- (00000000004421E6) ----------------------------------------------------
__int64 staticReturnsTrue_11()
{
  return 1LL;
}

//----- (00000000004421F1) ----------------------------------------------------
__int64 staticReturnsFalse_11()
{
  return 0LL;
}

//----- (00000000004421FC) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_08_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  char *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)staticReturnsTrue_11() )
    v7 = (char *)s - 8;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 4421FC: using guessed type char var_90[99];

//----- (00000000004422E1) ----------------------------------------------------
int goodG2B1_157()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)staticReturnsFalse_11() )
    printLine("Benign, fixed string");
  else
    v7 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 4422E1: using guessed type char var_90[99];

//----- (00000000004423CE) ----------------------------------------------------
int goodG2B2_157()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+68h] [rbp-28h]
  unsigned __int64 i; // [rsp+70h] [rbp-20h]
  _BYTE *v7; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)staticReturnsTrue_11() )
    v7 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v7[i];
  v4 = 0;
  return printLine(v2);
}
// 4423CE: using guessed type char var_90[99];

//----- (00000000004424AF) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_08_good()
{
  goodG2B1_157();
  return goodG2B2_157();
}

//----- (00000000004424C9) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_53c_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_loop_53d_badSink(a1);
}

//----- (00000000004424E3) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_53c_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_loop_53d_goodG2BSink(a1);
}

//----- (00000000004424FD) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_65b_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000044259E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_65b_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000044263F) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54e_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000442696) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54e_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (00000000004426ED) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54e_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000044274A) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_66_bad()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE127_Buffer_Underread__CWE839_connect_socket_66b_badSink((__int64)&v5);
}
// 44274A: using guessed type char buf[16];

//----- (000000000044283A) ----------------------------------------------------
int goodG2B_247()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 7;
  v2 = 7;
  return CWE127_Buffer_Underread__CWE839_connect_socket_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000442864) ----------------------------------------------------
int goodB2G_70()
{
  char buf[16]; // [rsp+0h] [rbp-40h]
  __int16 s; // [rsp+10h] [rbp-30h]
  uint16_t v3; // [rsp+12h] [rbp-2Eh]
  in_addr_t v4; // [rsp+14h] [rbp-2Ch]
  char v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+28h] [rbp-18h]
  int v7; // [rsp+34h] [rbp-Ch]
  int fd; // [rsp+38h] [rbp-8h]
  int v9; // [rsp+3Ch] [rbp-4h]

  v9 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v7 = recv(fd, buf, 0xDuLL, 0);
      if ( v7 != -1 )
      {
        if ( v7 )
        {
          buf[v7] = 0;
          v9 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v6 = v9;
  return CWE127_Buffer_Underread__CWE839_connect_socket_66b_goodB2GSink((__int64)&v5);
}
// 442864: using guessed type char buf[16];

//----- (0000000000442954) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_66_good()
{
  goodG2B_247();
  return goodB2G_70();
}

//----- (000000000044296E) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_67_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE127_Buffer_Underread__CWE839_fgets_67b_badSink(v5);
}

//----- (00000000004429DC) ----------------------------------------------------
int goodG2B_248()
{
  return CWE127_Buffer_Underread__CWE839_fgets_67b_goodG2BSink(7);
}

//----- (0000000000442A04) ----------------------------------------------------
int goodB2G_71()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+10h] [rbp-10h]
  int v5; // [rsp+1Ch] [rbp-4h]

  v5 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v5 = atoi(s);
  else
    printLine("fgets() failed.");
  v4 = v5;
  return CWE127_Buffer_Underread__CWE839_fgets_67b_goodB2GSink(v5);
}

//----- (0000000000442A72) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_67_good()
{
  goodG2B_248();
  return goodB2G_71();
}

//----- (0000000000442A8C) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_63b_badSink(__int64 *a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]
  __int64 v15; // [rsp+78h] [rbp-8h]

  v15 = *a1;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)v15;
  v3 = *(_QWORD *)(v15 + 8);
  v4 = *(_QWORD *)(v15 + 16);
  v5 = *(_QWORD *)(v15 + 24);
  v6 = *(_QWORD *)(v15 + 32);
  v7 = *(_QWORD *)(v15 + 40);
  v8 = *(_QWORD *)(v15 + 48);
  v9 = *(_QWORD *)(v15 + 56);
  v10 = *(_QWORD *)(v15 + 64);
  v11 = *(_QWORD *)(v15 + 72);
  v12 = *(_QWORD *)(v15 + 80);
  v13 = *(_QWORD *)(v15 + 88);
  v14 = *(_DWORD *)(v15 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (0000000000442B38) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_63b_goodG2BSink(__int64 *a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]
  __int64 v15; // [rsp+78h] [rbp-8h]

  v15 = *a1;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)v15;
  v3 = *(_QWORD *)(v15 + 8);
  v4 = *(_QWORD *)(v15 + 16);
  v5 = *(_QWORD *)(v15 + 24);
  v6 = *(_QWORD *)(v15 + 32);
  v7 = *(_QWORD *)(v15 + 40);
  v8 = *(_QWORD *)(v15 + 48);
  v9 = *(_QWORD *)(v15 + 56);
  v10 = *(_QWORD *)(v15 + 64);
  v11 = *(_QWORD *)(v15 + 72);
  v12 = *(_QWORD *)(v15 + 80);
  v13 = *(_QWORD *)(v15 + 88);
  v14 = *(_DWORD *)(v15 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (0000000000442BE4) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_52b_badSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_cpy_52c_badSink(a1);
}

//----- (0000000000442BFE) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_52b_goodG2BSink(const char *a1)
{
  return CWE127_Buffer_Underread__char_declare_cpy_52c_goodG2BSink(a1);
}

//----- (0000000000442C18) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_12_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    v12 = 7;
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  else
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 < 0 || v12 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  return result;
}
// 442C18: using guessed type char buf[16];

//----- (0000000000442DBD) ----------------------------------------------------
int goodB2G_72()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-90h]
  __int64 v2; // [rsp+8h] [rbp-88h]
  __int64 v3; // [rsp+10h] [rbp-80h]
  __int64 v4; // [rsp+18h] [rbp-78h]
  __int64 v5; // [rsp+20h] [rbp-70h]
  char nptr[16]; // [rsp+30h] [rbp-60h]
  struct sockaddr addr; // [rsp+40h] [rbp-50h]
  char buf[16]; // [rsp+50h] [rbp-40h]
  __int16 s; // [rsp+60h] [rbp-30h]
  uint16_t v10; // [rsp+62h] [rbp-2Eh]
  in_addr_t v11; // [rsp+64h] [rbp-2Ch]
  int v12; // [rsp+7Ch] [rbp-14h]
  int v13; // [rsp+80h] [rbp-10h]
  int v14; // [rsp+84h] [rbp-Ch]
  int fd; // [rsp+88h] [rbp-8h]
  int v16; // [rsp+8Ch] [rbp-4h]

  v16 = -1;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v11 = inet_addr("127.0.0.1");
      v10 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v14 = recv(fd, buf, 0xDuLL, 0);
        if ( v14 != -1 )
        {
          if ( v14 )
          {
            buf[v14] = 0;
            v16 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  else
  {
    v13 = socket(2, 1, 6);
    if ( v13 != -1 )
    {
      memset(&addr, 0, 0x10uLL);
      addr.sa_family = 2;
      *(_DWORD *)&addr.sa_data[2] = inet_addr("127.0.0.1");
      *(_WORD *)addr.sa_data = htons(0x6987u);
      if ( connect(v13, &addr, 0x10u) != -1 )
      {
        v12 = recv(v13, nptr, 0xDuLL, 0);
        if ( v12 != -1 )
        {
          if ( v12 )
          {
            nptr[v12] = 0;
            v16 = atoi(nptr);
          }
        }
      }
    }
    if ( v13 != -1 )
      close(v13);
  }
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v16 < 0 || v16 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v16));
  }
  else
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v16 < 0 || v16 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v16));
  }
  return result;
}
// 442DBD: using guessed type char buf[16];
// 442DBD: using guessed type char nptr[16];

//----- (0000000000443049) ----------------------------------------------------
int goodG2B_249()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  globalReturnsTrueOrFalse();
  v6 = 7;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  else
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (000000000044311C) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_12_good()
{
  goodB2G_72();
  return goodG2B_249();
}

//----- (0000000000443136) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_64_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_ncpy_64b_badSink((char **)&v3);
}

//----- (0000000000443172) ----------------------------------------------------
int goodG2B_250()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_ncpy_64b_goodG2BSink(&v3);
}

//----- (00000000004431AA) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_64_good()
{
  return goodG2B_250();
}

//----- (00000000004431BA) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_53_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_memcpy_53b_badSink((__int64)(&savedregs - 15));
}

//----- (00000000004431F6) ----------------------------------------------------
int goodG2B_251()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_memcpy_53b_goodG2BSink((__int64)&s);
}

//----- (000000000044322E) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_53_good()
{
  return goodG2B_251();
}

//----- (000000000044323E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_53c_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_memcpy_53d_badSink(a1);
}

//----- (0000000000443258) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_53c_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_memcpy_53d_goodG2BSink(a1);
}

//----- (0000000000443272) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_68b_badSink()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_listen_socket_68_badData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_listen_socket_68_badData > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D408: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_68_badData;

//----- (00000000004432CF) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_68b_goodG2BSink()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_listen_socket_68_goodG2BData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_listen_socket_68_goodG2BData > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D400: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_68_goodG2BData;

//----- (000000000044332C) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_68b_goodB2GSink()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_listen_socket_68_goodB2GData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_listen_socket_68_goodB2GData < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D404: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_68_goodB2GData;

//----- (000000000044338F) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_64b_badSink(char **a1)
{
  char s; // [rsp+10h] [rbp-E0h]
  char v3; // [rsp+D7h] [rbp-19h]
  char *src; // [rsp+E0h] [rbp-10h]
  char **v5; // [rsp+E8h] [rbp-8h]

  v5 = a1;
  src = *a1;
  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, src);
  return printLine(&s);
}

//----- (00000000004433FB) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_64b_goodG2BSink(char **a1)
{
  char s; // [rsp+10h] [rbp-E0h]
  char v3; // [rsp+D7h] [rbp-19h]
  char *src; // [rsp+E0h] [rbp-10h]
  char **v5; // [rsp+E8h] [rbp-8h]

  v5 = a1;
  src = *a1;
  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, src);
  return printLine(&s);
}

//----- (0000000000443467) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_51_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_ncpy_51b_badSink((char *)s - 8);
}

//----- (00000000004434DE) ----------------------------------------------------
int goodG2B_252()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_ncpy_51b_goodG2BSink((const char *)s);
}

//----- (0000000000443551) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_51_good()
{
  return goodG2B_252();
}

//----- (0000000000443561) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_15_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, "%d", &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004435DD) ----------------------------------------------------
int goodB2G1_50()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, "%d", &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000443660) ----------------------------------------------------
int goodB2G2_50()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, "%d", &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004436E3) ----------------------------------------------------
int goodG2B1_158()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (0000000000443747) ----------------------------------------------------
int goodG2B2_158()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (00000000004437AB) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_15_good()
{
  goodB2G1_50();
  goodB2G2_50();
  goodG2B1_158();
  return goodG2B2_158();
}

//----- (00000000004437D9) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_52_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_cpy_52b_badSink((char *)s - 8);
}

//----- (0000000000443850) ----------------------------------------------------
int goodG2B_253()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_cpy_52b_goodG2BSink((const char *)s);
}

//----- (00000000004438C3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_52_good()
{
  return goodG2B_253();
}

//----- (00000000004438D3) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_54b_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_loop_54c_badSink(a1);
}

//----- (00000000004438ED) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_54b_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_loop_54c_goodG2BSink(a1);
}

//----- (0000000000443907) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_51b_badSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (0000000000443960) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_51b_goodG2BSink(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (00000000004439B9) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54b_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fgets_54c_badSink(a1);
}

//----- (00000000004439D0) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54b_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fgets_54c_goodG2BSink(a1);
}

//----- (00000000004439E7) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_54b_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fgets_54c_goodB2GSink(a1);
}

//----- (00000000004439FE) ----------------------------------------------------
__int64 __fastcall badSource_2(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000443A2B) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_42_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = badSource_2(0xFFFFFFFF);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (0000000000443A93) ----------------------------------------------------
__int64 goodG2BSource_2()
{
  return 7LL;
}

//----- (0000000000443AA6) ----------------------------------------------------
int goodG2B_254()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = goodG2BSource_2();
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (0000000000443B0E) ----------------------------------------------------
__int64 __fastcall goodB2GSource_2(unsigned int a1)
{
  unsigned int v2; // [rsp+Ch] [rbp-4h]

  v2 = a1;
  __isoc99_fscanf(stdin, "%d", &v2);
  return v2;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000443B3B) ----------------------------------------------------
int goodB2G_73()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = goodB2GSource_2(0xFFFFFFFF);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}

//----- (0000000000443BA9) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_42_good()
{
  goodB2G_73();
  return goodG2B_254();
}

//----- (0000000000443BC3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_16_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  char *src; // [rsp+D0h] [rbp-10h]
  void *s; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000443C74) ----------------------------------------------------
int goodG2B_255()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  char *src; // [rsp+D0h] [rbp-10h]
  void *s; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000443D21) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_16_good()
{
  return goodG2B_255();
}

//----- (0000000000443D31) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_memcpy_65_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(__int64); // [rsp+18h] [rbp-8h]

  v4 = CWE127_Buffer_Underread__char_alloca_memcpy_65b_badSink;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return ((__int64 (__fastcall *)(char *))v4)((char *)s - 8);
}

//----- (0000000000443DB1) ----------------------------------------------------
__int64 goodG2B_256()
{
  void *v0; // rsp
  __int64 v2; // [rsp+8h] [rbp-18h]
  void *s; // [rsp+10h] [rbp-10h]
  int (__fastcall *v4)(__int64); // [rsp+18h] [rbp-8h]

  v4 = CWE127_Buffer_Underread__char_alloca_memcpy_65b_goodG2BSink;
  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v2 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v2 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  HIBYTE(v2) = HIBYTE(s);
  return ((__int64 (__fastcall *)(void *))v4)(s);
}

//----- (0000000000443E2D) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_alloca_memcpy_65_good()
{
  return goodG2B_256();
}

//----- (0000000000443E3D) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_11_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v13 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v13));
  }
  return result;
}
// 443E3D: using guessed type char buf[16];

//----- (0000000000443FCB) ----------------------------------------------------
int goodB2G1_51()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 443FCB: using guessed type char buf[16];

//----- (000000000044416B) ----------------------------------------------------
int goodB2G2_51()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  if ( (unsigned int)globalReturnsTrue() )
  {
    v12 = -1;
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = 0;
      v8 = htons(0x6987u);
      if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
      {
        v12 = accept(fd, 0LL, 0LL);
        if ( v12 != -1 )
        {
          v10 = recv(v12, buf, 0xDuLL, 0);
          if ( v10 != -1 )
          {
            if ( v10 )
            {
              buf[v10] = 0;
              v13 = atoi(buf);
            }
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
    if ( v12 != -1 )
      close(v12);
  }
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v13 < 0 || v13 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v13));
  }
  return result;
}
// 44416B: using guessed type char buf[16];

//----- (00000000004442FF) ----------------------------------------------------
int goodG2B1_159()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (0000000000444389) ----------------------------------------------------
int goodG2B2_159()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    v6 = 7;
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (0000000000444407) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_11_good()
{
  goodB2G1_51();
  goodB2G2_51();
  goodG2B1_159();
  return goodG2B2_159();
}

//----- (0000000000444435) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_68b_badSink()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v3 = CWE127_Buffer_Underread__char_declare_loop_68_badData;
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v3 + i);
  v2 = 0;
  return printLine(s);
}
// 67D410: using guessed type __int64 CWE127_Buffer_Underread__char_declare_loop_68_badData;
// 444435: using guessed type char s[99];

//----- (00000000004444A5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_68b_goodG2BSink()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v3 = CWE127_Buffer_Underread__char_declare_loop_68_goodG2BData;
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v3 + i);
  v2 = 0;
  return printLine(s);
}
// 67D418: using guessed type __int64 CWE127_Buffer_Underread__char_declare_loop_68_goodG2BData;
// 4444A5: using guessed type char s[99];

//----- (0000000000444515) ----------------------------------------------------
int badSink_26()
{
  size_t v0; // rax
  char s; // [rsp+0h] [rbp-70h]
  char v3; // [rsp+63h] [rbp-Dh]
  char *src; // [rsp+68h] [rbp-8h]

  src = (char *)CWE127_Buffer_Underread__char_alloca_ncpy_45_badData;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&s);
  strncpy(&s, src, v0);
  v3 = 0;
  return printLine(&s);
}
// 67D2E8: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_ncpy_45_badData;

//----- (0000000000444576) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_45_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_ncpy_45_badData = (__int64)s - 8;
  return badSink_26();
}
// 67D2E8: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_ncpy_45_badData;

//----- (00000000004445F6) ----------------------------------------------------
int goodG2BSink_26()
{
  size_t v0; // rax
  char s; // [rsp+0h] [rbp-70h]
  char v3; // [rsp+63h] [rbp-Dh]
  char *src; // [rsp+68h] [rbp-8h]

  src = (char *)CWE127_Buffer_Underread__char_alloca_ncpy_45_goodG2BData;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&s);
  strncpy(&s, src, v0);
  v3 = 0;
  return printLine(&s);
}
// 67D2F0: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_ncpy_45_goodG2BData;

//----- (0000000000444657) ----------------------------------------------------
int goodG2B_257()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_ncpy_45_goodG2BData = (__int64)s;
  return goodG2BSink_26();
}
// 67D2F0: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_ncpy_45_goodG2BData;

//----- (00000000004446D3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_45_good()
{
  return goodG2B_257();
}

//----- (00000000004446E3) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_53b_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_53c_badSink(a1);
}

//----- (00000000004446FA) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_53b_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_53c_goodG2BSink(a1);
}

//----- (0000000000444711) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_53b_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_53c_goodB2GSink(a1);
}

//----- (0000000000444728) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_15_bad()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  __int64 v3; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &v3;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (00000000004447A7) ----------------------------------------------------
int goodG2B1_160()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (0000000000444822) ----------------------------------------------------
int goodG2B2_160()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (000000000044489D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_15_good()
{
  goodG2B1_160();
  return goodG2B2_160();
}

//----- (00000000004448B7) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_54_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_memcpy_54b_badSink((__int64)(&savedregs - 15));
}

//----- (00000000004448F3) ----------------------------------------------------
int goodG2B_258()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_memcpy_54b_goodG2BSink((__int64)&s);
}

//----- (000000000044492B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_54_good()
{
  return goodG2B_258();
}

//----- (000000000044493B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_06_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (0000000000444A10) ----------------------------------------------------
int goodG2B1_161()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (0000000000444AED) ----------------------------------------------------
int goodG2B2_161()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (0000000000444BBE) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_06_good()
{
  goodG2B1_161();
  return goodG2B2_161();
}

//----- (0000000000444BD8) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54e_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000444C2F) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54e_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000444C86) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_54e_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000444CE3) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_52c_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000444D3A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_52c_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000444D91) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_52c_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000444DEE) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_52b_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_memcpy_52c_badSink(a1);
}

//----- (0000000000444E08) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memcpy_52b_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_memcpy_52c_goodG2BSink(a1);
}

//----- (0000000000444E22) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_68_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE127_Buffer_Underread__CWE839_listen_socket_68_badData = v8;
  return CWE127_Buffer_Underread__CWE839_listen_socket_68b_badSink();
}
// 67D408: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_68_badData;
// 444E22: using guessed type char buf[16];

//----- (0000000000444F59) ----------------------------------------------------
int goodG2B_259()
{
  CWE127_Buffer_Underread__CWE839_listen_socket_68_goodG2BData = 7;
  return CWE127_Buffer_Underread__CWE839_listen_socket_68b_goodG2BSink();
}
// 67D400: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_68_goodG2BData;

//----- (0000000000444F84) ----------------------------------------------------
int goodB2G_74()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE127_Buffer_Underread__CWE839_listen_socket_68_goodB2GData = v8;
  return CWE127_Buffer_Underread__CWE839_listen_socket_68b_goodB2GSink();
}
// 67D404: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_68_goodB2GData;
// 444F84: using guessed type char buf[16];

//----- (00000000004450BB) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_68_good()
{
  goodG2B_259();
  return goodB2G_74();
}

//----- (00000000004450D5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_68b_badSink()
{
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v2; // [rsp+8h] [rbp-68h]
  __int64 v3; // [rsp+10h] [rbp-60h]
  __int64 v4; // [rsp+18h] [rbp-58h]
  __int64 v5; // [rsp+20h] [rbp-50h]
  __int64 v6; // [rsp+28h] [rbp-48h]
  __int64 v7; // [rsp+30h] [rbp-40h]
  __int64 v8; // [rsp+38h] [rbp-38h]
  __int64 v9; // [rsp+40h] [rbp-30h]
  __int64 v10; // [rsp+48h] [rbp-28h]
  __int64 v11; // [rsp+50h] [rbp-20h]
  __int64 v12; // [rsp+58h] [rbp-18h]
  int v13; // [rsp+60h] [rbp-10h]
  __int64 v14; // [rsp+68h] [rbp-8h]

  v14 = CWE127_Buffer_Underread__char_alloca_memcpy_68_badData;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  s = *(_QWORD *)v14;
  v2 = *(_QWORD *)(v14 + 8);
  v3 = *(_QWORD *)(v14 + 16);
  v4 = *(_QWORD *)(v14 + 24);
  v5 = *(_QWORD *)(v14 + 32);
  v6 = *(_QWORD *)(v14 + 40);
  v7 = *(_QWORD *)(v14 + 48);
  v8 = *(_QWORD *)(v14 + 56);
  v9 = *(_QWORD *)(v14 + 64);
  v10 = *(_QWORD *)(v14 + 72);
  v11 = *(_QWORD *)(v14 + 80);
  v12 = *(_QWORD *)(v14 + 88);
  v13 = *(_DWORD *)(v14 + 96);
  HIBYTE(v13) = 0;
  return printLine((const char *)&s);
}
// 67D420: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_memcpy_68_badData;

//----- (000000000044517D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_68b_goodG2BSink()
{
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v2; // [rsp+8h] [rbp-68h]
  __int64 v3; // [rsp+10h] [rbp-60h]
  __int64 v4; // [rsp+18h] [rbp-58h]
  __int64 v5; // [rsp+20h] [rbp-50h]
  __int64 v6; // [rsp+28h] [rbp-48h]
  __int64 v7; // [rsp+30h] [rbp-40h]
  __int64 v8; // [rsp+38h] [rbp-38h]
  __int64 v9; // [rsp+40h] [rbp-30h]
  __int64 v10; // [rsp+48h] [rbp-28h]
  __int64 v11; // [rsp+50h] [rbp-20h]
  __int64 v12; // [rsp+58h] [rbp-18h]
  int v13; // [rsp+60h] [rbp-10h]
  __int64 v14; // [rsp+68h] [rbp-8h]

  v14 = CWE127_Buffer_Underread__char_alloca_memcpy_68_goodG2BData;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  s = *(_QWORD *)v14;
  v2 = *(_QWORD *)(v14 + 8);
  v3 = *(_QWORD *)(v14 + 16);
  v4 = *(_QWORD *)(v14 + 24);
  v5 = *(_QWORD *)(v14 + 32);
  v6 = *(_QWORD *)(v14 + 40);
  v7 = *(_QWORD *)(v14 + 48);
  v8 = *(_QWORD *)(v14 + 56);
  v9 = *(_QWORD *)(v14 + 64);
  v10 = *(_QWORD *)(v14 + 72);
  v11 = *(_QWORD *)(v14 + 80);
  v12 = *(_QWORD *)(v14 + 88);
  v13 = *(_DWORD *)(v14 + 96);
  HIBYTE(v13) = 0;
  return printLine((const char *)&s);
}
// 67D428: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_memcpy_68_goodG2BData;

//----- (0000000000445225) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_51_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_cpy_51b_badSink((char *)s - 8);
}

//----- (000000000044529C) ----------------------------------------------------
int goodG2B_260()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_cpy_51b_goodG2BSink((const char *)s);
}

//----- (000000000044530F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_51_good()
{
  return goodG2B_260();
}

//----- (000000000044531F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_09_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_TRUE )
    src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (00000000004453E7) ----------------------------------------------------
int goodG2B1_162()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_FALSE )
    printLine("Benign, fixed string");
  else
    src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}
// 462E04: using guessed type int GLOBAL_CONST_FALSE;

//----- (00000000004454B7) ----------------------------------------------------
int goodG2B2_162()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( GLOBAL_CONST_TRUE )
    src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}
// 462E00: using guessed type int GLOBAL_CONST_TRUE;

//----- (000000000044557B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_09_good()
{
  goodG2B1_162();
  return goodG2B2_162();
}

//----- (0000000000445595) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_05_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticTrue_10 )
    __isoc99_fscanf(stdin, "%d", &v6);
  result = staticTrue_10;
  if ( staticTrue_10 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D1A4: using guessed type int staticTrue_10;

//----- (0000000000445623) ----------------------------------------------------
int goodB2G1_52()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticTrue_10 )
    __isoc99_fscanf(stdin, "%d", &v6);
  if ( staticFalse_10 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D1A4: using guessed type int staticTrue_10;
// 67D2F8: using guessed type int staticFalse_10;

//----- (00000000004456C4) ----------------------------------------------------
int goodB2G2_52()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticTrue_10 )
    __isoc99_fscanf(stdin, "%d", &v6);
  result = staticTrue_10;
  if ( staticTrue_10 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 < 0 || v6 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D1A4: using guessed type int staticTrue_10;

//----- (0000000000445759) ----------------------------------------------------
int goodG2B1_163()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticFalse_10 )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = staticTrue_10;
  if ( staticTrue_10 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1A4: using guessed type int staticTrue_10;
// 67D2F8: using guessed type int staticFalse_10;

//----- (00000000004457DB) ----------------------------------------------------
int goodG2B2_163()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( staticTrue_10 )
    v6 = 7;
  result = staticTrue_10;
  if ( staticTrue_10 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1A4: using guessed type int staticTrue_10;

//----- (0000000000445851) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_05_good()
{
  goodB2G1_52();
  goodB2G2_52();
  goodG2B1_163();
  return goodG2B2_163();
}

//----- (000000000044587F) ----------------------------------------------------
int __fastcall badSink_27(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (00000000004458D6) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_41_bad()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return badSink_27(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044590E) ----------------------------------------------------
int __fastcall goodG2BSink_27(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000445965) ----------------------------------------------------
int goodG2B_261()
{
  return goodG2BSink_27(7);
}

//----- (0000000000445987) ----------------------------------------------------
int __fastcall goodB2GSink_9(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (00000000004459E4) ----------------------------------------------------
int goodB2G_75()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = -1;
  __isoc99_fscanf(stdin, "%d", &v1);
  return goodB2GSink_9(v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000445A1C) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_41_good()
{
  goodB2G_75();
  return goodG2B_261();
}

//----- (0000000000445A36) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_64_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_memmove_64b_badSink((void **)&v2);
}

//----- (0000000000445AAD) ----------------------------------------------------
int goodG2B_262()
{
  void *v0; // rsp
  void *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = s;
  return CWE127_Buffer_Underread__char_alloca_memmove_64b_goodG2BSink(&v2);
}

//----- (0000000000445B20) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_64_good()
{
  return goodG2B_262();
}

//----- (0000000000445B30) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_52c_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 445B30: using guessed type char s[99];

//----- (0000000000445B99) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_52c_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 445B99: using guessed type char s[99];

//----- (0000000000445C02) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_63_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE127_Buffer_Underread__CWE839_fgets_63b_badSink(&v4);
}

//----- (0000000000445C6C) ----------------------------------------------------
int goodG2B_263()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 7;
  return CWE127_Buffer_Underread__CWE839_fgets_63b_goodG2BSink(&v1);
}

//----- (0000000000445C90) ----------------------------------------------------
int goodB2G_76()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE127_Buffer_Underread__CWE839_fgets_63b_goodB2GSink(&v4);
}

//----- (0000000000445CFA) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_63_good()
{
  goodG2B_263();
  return goodB2G_76();
}

//----- (0000000000445D14) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_66b_badSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *(_DWORD *)(a1 + 8);
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000445D76) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_66b_goodG2BSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *(_DWORD *)(a1 + 8);
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000445DD8) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *(_DWORD *)(a1 + 8);
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000445E40) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_68_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  CWE127_Buffer_Underread__char_declare_loop_68_badData = (__int64)(&savedregs - 15);
  return CWE127_Buffer_Underread__char_declare_loop_68b_badSink();
}
// 67D410: using guessed type __int64 CWE127_Buffer_Underread__char_declare_loop_68_badData;

//----- (0000000000445E85) ----------------------------------------------------
int goodG2B_264()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  CWE127_Buffer_Underread__char_declare_loop_68_goodG2BData = (__int64)&s;
  return CWE127_Buffer_Underread__char_declare_loop_68b_goodG2BSink();
}
// 67D418: using guessed type __int64 CWE127_Buffer_Underread__char_declare_loop_68_goodG2BData;

//----- (0000000000445EC6) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_68_good()
{
  return goodG2B_264();
}

//----- (0000000000445ED6) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_53_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE127_Buffer_Underread__CWE839_listen_socket_53b_badSink(v8);
}
// 445ED6: using guessed type char buf[16];

//----- (0000000000446004) ----------------------------------------------------
int goodG2B_265()
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_53b_goodG2BSink(7);
}

//----- (0000000000446026) ----------------------------------------------------
int goodB2G_77()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE127_Buffer_Underread__CWE839_listen_socket_53b_goodB2GSink(v8);
}
// 446026: using guessed type char buf[16];

//----- (0000000000446154) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_53_good()
{
  goodG2B_265();
  return goodB2G_77();
}

//----- (000000000044616E) ----------------------------------------------------
int badSink_28()
{
  char s; // [rsp+0h] [rbp-D0h]
  char v2; // [rsp+C7h] [rbp-9h]
  char *src; // [rsp+C8h] [rbp-8h]

  src = (char *)CWE127_Buffer_Underread__char_alloca_cpy_45_badData;
  memset(&s, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&s, src);
  return printLine(&s);
}
// 67D300: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_cpy_45_badData;

//----- (00000000004461C8) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_45_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_cpy_45_badData = (__int64)s - 8;
  return badSink_28();
}
// 67D300: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_cpy_45_badData;

//----- (0000000000446248) ----------------------------------------------------
int goodG2BSink_28()
{
  char s; // [rsp+0h] [rbp-D0h]
  char v2; // [rsp+C7h] [rbp-9h]
  char *src; // [rsp+C8h] [rbp-8h]

  src = (char *)CWE127_Buffer_Underread__char_alloca_cpy_45_goodG2BData;
  memset(&s, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&s, src);
  return printLine(&s);
}
// 67D308: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_cpy_45_goodG2BData;

//----- (00000000004462A2) ----------------------------------------------------
int goodG2B_266()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_cpy_45_goodG2BData = (__int64)s;
  return goodG2BSink_28();
}
// 67D308: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_cpy_45_goodG2BData;

//----- (000000000044631E) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_45_good()
{
  return goodG2B_266();
}

//----- (000000000044632E) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_34_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v7 = -1;
  __isoc99_fscanf(stdin, "%d", &v7);
  v6 = v7;
  v8 = v7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v8));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004463B2) ----------------------------------------------------
int goodG2B_267()
{
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  int v5; // [rsp+30h] [rbp-10h]
  int v6; // [rsp+3Ch] [rbp-4h]

  v6 = 7;
  v5 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (0000000000446420) ----------------------------------------------------
int goodB2G_78()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+18h] [rbp-28h]
  __int64 v5; // [rsp+20h] [rbp-20h]
  int v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+38h] [rbp-8h]
  int v8; // [rsp+3Ch] [rbp-4h]

  v7 = -1;
  __isoc99_fscanf(stdin, "%d", &v7);
  v6 = v7;
  v8 = v7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v7 < 0 || v8 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v8));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (00000000004464AA) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_34_good()
{
  goodG2B_267();
  return goodB2G_78();
}

//----- (00000000004464C4) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_65b_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 4464C4: using guessed type char s[99];

//----- (000000000044652D) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_65b_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 44652D: using guessed type char s[99];

//----- (0000000000446596) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_53b_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_memcpy_53c_badSink(a1);
}

//----- (00000000004465B0) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_53b_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_memcpy_53c_goodG2BSink(a1);
}

//----- (00000000004465CA) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_52_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_memcpy_52b_badSink((__int64)(&savedregs - 15));
}

//----- (0000000000446606) ----------------------------------------------------
int goodG2B_268()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_memcpy_52b_goodG2BSink((__int64)&s);
}

//----- (000000000044663E) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_52_good()
{
  return goodG2B_268();
}

//----- (000000000044664E) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_06_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000446708) ----------------------------------------------------
int goodG2B1_164()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (00000000004467CA) ----------------------------------------------------
int goodG2B2_164()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-E0h]
  char v3; // [rsp+Fh] [rbp-D1h]
  char v4; // [rsp+C7h] [rbp-19h]
  void *s; // [rsp+D0h] [rbp-10h]
  char *src; // [rsp+D8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s;
  memset(&dest, 67, 0xC7uLL);
  v4 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (0000000000446880) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_cpy_06_good()
{
  goodG2B1_164();
  return goodG2B2_164();
}

//----- (000000000044689A) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_05_bad()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  __int64 v3; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( staticTrue_11 )
    src = &v3;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}
// 67D1A8: using guessed type int staticTrue_11;

//----- (0000000000446922) ----------------------------------------------------
int goodG2B1_165()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( staticFalse_11 )
    printLine("Benign, fixed string");
  else
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}
// 67D310: using guessed type int staticFalse_11;

//----- (00000000004469B2) ----------------------------------------------------
int goodG2B2_165()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( staticTrue_11 )
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}
// 67D1A8: using guessed type int staticTrue_11;

//----- (0000000000446A36) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_05_good()
{
  goodG2B1_165();
  return goodG2B2_165();
}

//----- (0000000000446A50) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_66b_badSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *(_DWORD *)(a1 + 8);
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000446AB2) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_66b_goodG2BSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *(_DWORD *)(a1 + 8);
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000446B14) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_66b_goodB2GSink(__int64 a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = *(_DWORD *)(a1 + 8);
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (0000000000446B7C) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_65b_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000446BD3) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_65b_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000446C2A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_65b_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000446C87) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_41_badSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (0000000000446CD7) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_41_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_memmove_41_badSink(&savedregs - 15);
}

//----- (0000000000446D13) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_41_goodG2BSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (0000000000446D63) ----------------------------------------------------
int goodG2B_269()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_memmove_41_goodG2BSink(&s);
}

//----- (0000000000446D9B) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_41_good()
{
  return goodG2B_269();
}

//----- (0000000000446DAB) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_67_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE127_Buffer_Underread__CWE839_connect_socket_67b_badSink(v8);
}
// 446DAB: using guessed type char buf[16];

//----- (0000000000446E99) ----------------------------------------------------
int goodG2B_270()
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_67b_goodG2BSink(7);
}

//----- (0000000000446EC1) ----------------------------------------------------
int goodB2G_79()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v6 = recv(fd, buf, 0xDuLL, 0);
      if ( v6 != -1 )
      {
        if ( v6 )
        {
          buf[v6] = 0;
          v8 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v5 = v8;
  return CWE127_Buffer_Underread__CWE839_connect_socket_67b_goodB2GSink(v8);
}
// 446EC1: using guessed type char buf[16];

//----- (0000000000446FAF) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_67_good()
{
  goodG2B_270();
  return goodB2G_79();
}

//----- (0000000000446FC9) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_68_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_memcpy_68_badData = (__int64)s - 8;
  return CWE127_Buffer_Underread__char_alloca_memcpy_68b_badSink();
}
// 67D420: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_memcpy_68_badData;

//----- (0000000000447049) ----------------------------------------------------
int goodG2B_271()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_memcpy_68_goodG2BData = (__int64)s;
  return CWE127_Buffer_Underread__char_alloca_memcpy_68b_goodG2BSink();
}
// 67D428: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_memcpy_68_goodG2BData;

//----- (00000000004470C5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_68_good()
{
  return goodG2B_271();
}

//----- (00000000004470D5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_53_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_loop_53b_badSink((__int64)(&savedregs - 15));
}

//----- (0000000000447111) ----------------------------------------------------
int goodG2B_272()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_loop_53b_goodG2BSink((__int64)&s);
}

//----- (0000000000447149) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_53_good()
{
  return goodG2B_272();
}

//----- (0000000000447159) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_34_bad()
{
  char dest; // [rsp+0h] [rbp-100h]
  char v2; // [rsp+63h] [rbp-9Dh]
  __int64 v3; // [rsp+68h] [rbp-98h]
  char s; // [rsp+70h] [rbp-90h]
  char v5; // [rsp+D3h] [rbp-2Dh]
  __int64 *v6; // [rsp+E0h] [rbp-20h]
  void *src; // [rsp+F0h] [rbp-10h]
  __int64 *v8; // [rsp+F8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v8 = &v3;
  v6 = &v3;
  src = &v3;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (00000000004471F3) ----------------------------------------------------
int goodG2B_273()
{
  char dest; // [rsp+0h] [rbp-100h]
  char v2; // [rsp+63h] [rbp-9Dh]
  char s; // [rsp+70h] [rbp-90h]
  char v4; // [rsp+D3h] [rbp-2Dh]
  char *v5; // [rsp+E0h] [rbp-20h]
  void *src; // [rsp+F0h] [rbp-10h]
  char *v7; // [rsp+F8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v7 = &s;
  v5 = &s;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (0000000000447289) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_34_good()
{
  return goodG2B_273();
}

//----- (0000000000447299) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_68_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_memmove_68_badData = (__int64)s - 8;
  return CWE127_Buffer_Underread__char_alloca_memmove_68b_badSink();
}
// 67D430: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_memmove_68_badData;

//----- (0000000000447319) ----------------------------------------------------
int goodG2B_274()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_memmove_68_goodG2BData = (__int64)s;
  return CWE127_Buffer_Underread__char_alloca_memmove_68b_goodG2BSink();
}
// 67D438: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_memmove_68_goodG2BData;

//----- (0000000000447395) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_68_good()
{
  return goodG2B_274();
}

//----- (00000000004473A5) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_66b_badSink(__int64 a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  void *src; // [rsp+78h] [rbp-8h]

  src = *(void **)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, src, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (0000000000447401) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_memmove_66b_goodG2BSink(__int64 a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  void *src; // [rsp+78h] [rbp-8h]

  src = *(void **)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, src, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000044745D) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_52b_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_52c_badSink(a1);
}

//----- (0000000000447474) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_52b_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_52c_goodG2BSink(a1);
}

//----- (000000000044748B) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_52b_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_52c_goodB2GSink(a1);
}

//----- (00000000004474A2) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_02_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, "%d", &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044751C) ----------------------------------------------------
int goodB2G1_53()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, "%d", &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044759D) ----------------------------------------------------
int goodB2G2_53()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  __isoc99_fscanf(stdin, "%d", &v6);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044761E) ----------------------------------------------------
int goodG2B1_166()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (0000000000447680) ----------------------------------------------------
int goodG2B2_166()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (00000000004476E2) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_02_good()
{
  goodB2G1_53();
  goodB2G2_53();
  goodG2B1_166();
  return goodG2B2_166();
}

//----- (0000000000447710) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_53_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memcpy_53b_badSink((__int64)s - 8);
}

//----- (0000000000447787) ----------------------------------------------------
int goodG2B_275()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memcpy_53b_goodG2BSink((__int64)s);
}

//----- (00000000004477FA) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_53_good()
{
  return goodG2B_275();
}

//----- (000000000044780A) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_51_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_memcpy_51b_badSink((__int64)(&savedregs - 15));
}

//----- (0000000000447846) ----------------------------------------------------
int goodG2B_276()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_memcpy_51b_goodG2BSink((__int64)&s);
}

//----- (000000000044787E) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_51_good()
{
  return goodG2B_276();
}

//----- (000000000044788E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54e_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (00000000004478E5) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54e_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000044793C) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fscanf_54e_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000447999) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_64b_badSink(char **a1)
{
  char s; // [rsp+10h] [rbp-E0h]
  char v3; // [rsp+D7h] [rbp-19h]
  char *src; // [rsp+E0h] [rbp-10h]
  char **v5; // [rsp+E8h] [rbp-8h]

  v5 = a1;
  src = *a1;
  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, src);
  return printLine(&s);
}

//----- (0000000000447A05) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_64b_goodG2BSink(char **a1)
{
  char s; // [rsp+10h] [rbp-E0h]
  char v3; // [rsp+D7h] [rbp-19h]
  char *src; // [rsp+E0h] [rbp-10h]
  char **v5; // [rsp+E8h] [rbp-8h]

  v5 = a1;
  src = *a1;
  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, src);
  return printLine(&s);
}

//----- (0000000000447A71) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_66_bad()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE127_Buffer_Underread__CWE839_fscanf_66b_badSink((__int64)&v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000447AB1) ----------------------------------------------------
int goodG2B_277()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = 7;
  v2 = 7;
  return CWE127_Buffer_Underread__CWE839_fscanf_66b_goodG2BSink((__int64)&v1);
}

//----- (0000000000447ADB) ----------------------------------------------------
int goodB2G_80()
{
  char v1; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  int v3; // [rsp+1Ch] [rbp-4h]

  v3 = -1;
  __isoc99_fscanf(stdin, "%d", &v3);
  v2 = v3;
  return CWE127_Buffer_Underread__CWE839_fscanf_66b_goodB2GSink((__int64)&v1);
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000447B1B) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_66_good()
{
  goodG2B_277();
  return goodB2G_80();
}

//----- (0000000000447B35) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_63b_badSink(char **a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]
  char *src; // [rsp+78h] [rbp-8h]

  src = *a1;
  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, src, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000447B9A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_ncpy_63b_goodG2BSink(char **a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]
  char *src; // [rsp+78h] [rbp-8h]

  src = *a1;
  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, src, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (0000000000447BFF) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_52c_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (0000000000447CA0) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_52c_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (0000000000447D41) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_52b_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_loop_52c_badSink(a1);
}

//----- (0000000000447D5B) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_52b_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_declare_loop_52c_goodG2BSink(a1);
}

//----- (0000000000447D75) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_07_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFive_12 == 5 )
    src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}
// 67D1AC: using guessed type int staticFive_12;

//----- (0000000000447E3E) ----------------------------------------------------
int goodG2B1_167()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFive_12 == 5 )
    src = s;
  else
    printLine("Benign, fixed string");
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}
// 67D1AC: using guessed type int staticFive_12;

//----- (0000000000447F0F) ----------------------------------------------------
int goodG2B2_167()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFive_12 == 5 )
    src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}
// 67D1AC: using guessed type int staticFive_12;

//----- (0000000000447FD4) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_07_good()
{
  goodG2B1_167();
  return goodG2B2_167();
}

//----- (0000000000447FEE) ----------------------------------------------------
int badSink_29()
{
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v2; // [rsp+8h] [rbp-68h]
  __int64 v3; // [rsp+10h] [rbp-60h]
  __int64 v4; // [rsp+18h] [rbp-58h]
  __int64 v5; // [rsp+20h] [rbp-50h]
  __int64 v6; // [rsp+28h] [rbp-48h]
  __int64 v7; // [rsp+30h] [rbp-40h]
  __int64 v8; // [rsp+38h] [rbp-38h]
  __int64 v9; // [rsp+40h] [rbp-30h]
  __int64 v10; // [rsp+48h] [rbp-28h]
  __int64 v11; // [rsp+50h] [rbp-20h]
  __int64 v12; // [rsp+58h] [rbp-18h]
  int v13; // [rsp+60h] [rbp-10h]
  __int64 v14; // [rsp+68h] [rbp-8h]

  v14 = CWE127_Buffer_Underread__char_declare_memcpy_45_badData;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  s = *(_QWORD *)v14;
  v2 = *(_QWORD *)(v14 + 8);
  v3 = *(_QWORD *)(v14 + 16);
  v4 = *(_QWORD *)(v14 + 24);
  v5 = *(_QWORD *)(v14 + 32);
  v6 = *(_QWORD *)(v14 + 40);
  v7 = *(_QWORD *)(v14 + 48);
  v8 = *(_QWORD *)(v14 + 56);
  v9 = *(_QWORD *)(v14 + 64);
  v10 = *(_QWORD *)(v14 + 72);
  v11 = *(_QWORD *)(v14 + 80);
  v12 = *(_QWORD *)(v14 + 88);
  v13 = *(_DWORD *)(v14 + 96);
  HIBYTE(v13) = 0;
  return printLine((const char *)&s);
}
// 67D318: using guessed type __int64 CWE127_Buffer_Underread__char_declare_memcpy_45_badData;

//----- (0000000000448096) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_45_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  CWE127_Buffer_Underread__char_declare_memcpy_45_badData = (__int64)(&savedregs - 15);
  return badSink_29();
}
// 67D318: using guessed type __int64 CWE127_Buffer_Underread__char_declare_memcpy_45_badData;

//----- (00000000004480DB) ----------------------------------------------------
int goodG2BSink_29()
{
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v2; // [rsp+8h] [rbp-68h]
  __int64 v3; // [rsp+10h] [rbp-60h]
  __int64 v4; // [rsp+18h] [rbp-58h]
  __int64 v5; // [rsp+20h] [rbp-50h]
  __int64 v6; // [rsp+28h] [rbp-48h]
  __int64 v7; // [rsp+30h] [rbp-40h]
  __int64 v8; // [rsp+38h] [rbp-38h]
  __int64 v9; // [rsp+40h] [rbp-30h]
  __int64 v10; // [rsp+48h] [rbp-28h]
  __int64 v11; // [rsp+50h] [rbp-20h]
  __int64 v12; // [rsp+58h] [rbp-18h]
  int v13; // [rsp+60h] [rbp-10h]
  __int64 v14; // [rsp+68h] [rbp-8h]

  v14 = CWE127_Buffer_Underread__char_declare_memcpy_45_goodG2BData;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  s = *(_QWORD *)v14;
  v2 = *(_QWORD *)(v14 + 8);
  v3 = *(_QWORD *)(v14 + 16);
  v4 = *(_QWORD *)(v14 + 24);
  v5 = *(_QWORD *)(v14 + 32);
  v6 = *(_QWORD *)(v14 + 40);
  v7 = *(_QWORD *)(v14 + 48);
  v8 = *(_QWORD *)(v14 + 56);
  v9 = *(_QWORD *)(v14 + 64);
  v10 = *(_QWORD *)(v14 + 72);
  v11 = *(_QWORD *)(v14 + 80);
  v12 = *(_QWORD *)(v14 + 88);
  v13 = *(_DWORD *)(v14 + 96);
  HIBYTE(v13) = 0;
  return printLine((const char *)&s);
}
// 67D320: using guessed type __int64 CWE127_Buffer_Underread__char_declare_memcpy_45_goodG2BData;

//----- (0000000000448183) ----------------------------------------------------
int goodG2B_278()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  CWE127_Buffer_Underread__char_declare_memcpy_45_goodG2BData = (__int64)&s;
  return goodG2BSink_29();
}
// 67D320: using guessed type __int64 CWE127_Buffer_Underread__char_declare_memcpy_45_goodG2BData;

//----- (00000000004481C4) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_45_good()
{
  return goodG2B_278();
}

//----- (00000000004481D4) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_68b_badSink()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v3 = CWE127_Buffer_Underread__char_alloca_loop_68_badData;
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v3 + i);
  v2 = 0;
  return printLine(s);
}
// 67D388: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_loop_68_badData;
// 4481D4: using guessed type char s[99];

//----- (0000000000448244) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_68b_goodG2BSink()
{
  char s[99]; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 v3; // [rsp+70h] [rbp-10h]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  v3 = CWE127_Buffer_Underread__char_alloca_loop_68_goodG2BData;
  memset(s, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(v3 + i);
  v2 = 0;
  return printLine(s);
}
// 67D390: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_loop_68_goodG2BData;
// 448244: using guessed type char s[99];

//----- (00000000004482B4) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_66_bad()
{
  char s; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  char v3; // [rsp+70h] [rbp-30h]
  __int64 *v4; // [rsp+80h] [rbp-20h]
  __int64 *v5; // [rsp+98h] [rbp-8h]
  __int64 savedregs; // [rsp+A0h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v5 = &savedregs - 21;
  v4 = &savedregs - 21;
  return CWE127_Buffer_Underread__char_declare_memmove_66b_badSink((__int64)&v3);
}

//----- (0000000000448301) ----------------------------------------------------
int goodG2B_279()
{
  char s; // [rsp+0h] [rbp-A0h]
  char v2; // [rsp+63h] [rbp-3Dh]
  char v3; // [rsp+70h] [rbp-30h]
  char *v4; // [rsp+80h] [rbp-20h]
  char *v5; // [rsp+98h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v5 = &s;
  v4 = &s;
  return CWE127_Buffer_Underread__char_declare_memmove_66b_goodG2BSink((__int64)&v3);
}

//----- (000000000044834A) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_66_good()
{
  return goodG2B_279();
}

//----- (000000000044835A) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_06_bad()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  __int64 v14; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v16; // [rsp+D3h] [rbp-Dh]
  __int64 *v17; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  v17 = &v14;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *v17;
  v2 = v17[1];
  v3 = v17[2];
  v4 = v17[3];
  v5 = v17[4];
  v6 = v17[5];
  v7 = v17[6];
  v8 = v17[7];
  v9 = v17[8];
  v10 = v17[9];
  v11 = v17[10];
  v12 = v17[11];
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (0000000000448454) ----------------------------------------------------
int goodG2B1_168()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (0000000000448556) ----------------------------------------------------
int goodG2B2_168()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (000000000044864C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_06_good()
{
  goodG2B1_168();
  return goodG2B2_168();
}

//----- (0000000000448666) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_68b_badSink()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_fgets_68_badData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_fgets_68_badData > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D440: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_68_badData;

//----- (00000000004486C3) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_68b_goodG2BSink()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_fgets_68_goodG2BData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_fgets_68_goodG2BData > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D448: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_68_goodG2BData;

//----- (0000000000448720) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_68b_goodB2GSink()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_fgets_68_goodB2GData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_fgets_68_goodB2GData < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D444: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_68_goodB2GData;

//----- (0000000000448783) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_15_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (0000000000448842) ----------------------------------------------------
int goodG2B1_169()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (00000000004488FD) ----------------------------------------------------
int goodG2B2_169()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *src; // [rsp+70h] [rbp-20h]
  void *s; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}

//----- (00000000004489B8) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_15_good()
{
  goodG2B1_169();
  return goodG2B2_169();
}

//----- (00000000004489D2) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_34_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-90h]
  __int64 v3; // [rsp+8h] [rbp-88h]
  __int64 v4; // [rsp+10h] [rbp-80h]
  __int64 v5; // [rsp+18h] [rbp-78h]
  __int64 v6; // [rsp+20h] [rbp-70h]
  __int64 v7; // [rsp+28h] [rbp-68h]
  __int64 v8; // [rsp+30h] [rbp-60h]
  __int64 v9; // [rsp+38h] [rbp-58h]
  __int64 v10; // [rsp+40h] [rbp-50h]
  __int64 v11; // [rsp+48h] [rbp-48h]
  __int64 v12; // [rsp+50h] [rbp-40h]
  __int64 v13; // [rsp+58h] [rbp-38h]
  int v14; // [rsp+60h] [rbp-30h]
  char *v15; // [rsp+70h] [rbp-20h]
  char *v16; // [rsp+78h] [rbp-18h]
  char *v17; // [rsp+80h] [rbp-10h]
  void *s; // [rsp+88h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v17 = (char *)s - 8;
  v15 = (char *)s - 8;
  v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v16;
  v3 = *((_QWORD *)v16 + 1);
  v4 = *((_QWORD *)v16 + 2);
  v5 = *((_QWORD *)v16 + 3);
  v6 = *((_QWORD *)v16 + 4);
  v7 = *((_QWORD *)v16 + 5);
  v8 = *((_QWORD *)v16 + 6);
  v9 = *((_QWORD *)v16 + 7);
  v10 = *((_QWORD *)v16 + 8);
  v11 = *((_QWORD *)v16 + 9);
  v12 = *((_QWORD *)v16 + 10);
  v13 = *((_QWORD *)v16 + 11);
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (0000000000448AEF) ----------------------------------------------------
int goodG2B_280()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-90h]
  __int64 v3; // [rsp+8h] [rbp-88h]
  __int64 v4; // [rsp+10h] [rbp-80h]
  __int64 v5; // [rsp+18h] [rbp-78h]
  __int64 v6; // [rsp+20h] [rbp-70h]
  __int64 v7; // [rsp+28h] [rbp-68h]
  __int64 v8; // [rsp+30h] [rbp-60h]
  __int64 v9; // [rsp+38h] [rbp-58h]
  __int64 v10; // [rsp+40h] [rbp-50h]
  __int64 v11; // [rsp+48h] [rbp-48h]
  __int64 v12; // [rsp+50h] [rbp-40h]
  __int64 v13; // [rsp+58h] [rbp-38h]
  int v14; // [rsp+60h] [rbp-30h]
  void *v15; // [rsp+70h] [rbp-20h]
  _QWORD *v16; // [rsp+78h] [rbp-18h]
  void *v17; // [rsp+80h] [rbp-10h]
  void *s; // [rsp+88h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v17 = s;
  v15 = s;
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (0000000000448C08) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_34_good()
{
  return goodG2B_280();
}

//----- (0000000000448C18) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_51b_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000448C6F) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_51b_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000448CC6) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_51b_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (0000000000448D23) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54d_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_54e_badSink(a1);
}

//----- (0000000000448D3A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54d_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_54e_goodG2BSink(a1);
}

//----- (0000000000448D51) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_54d_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_54e_goodB2GSink(a1);
}

//----- (0000000000448D68) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_52b_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_memcpy_52c_badSink(a1);
}

//----- (0000000000448D82) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_52b_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_memcpy_52c_goodG2BSink(a1);
}

//----- (0000000000448D9C) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_16_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 448D9C: using guessed type char buf[16];

//----- (0000000000448F0C) ----------------------------------------------------
int goodB2G_81()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 448F0C: using guessed type char buf[16];

//----- (0000000000449082) ----------------------------------------------------
int goodG2B_281()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (00000000004490E6) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_16_good()
{
  goodB2G_81();
  return goodG2B_281();
}

//----- (0000000000449100) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_63_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_ncpy_63b_badSink((char **)&v3);
}

//----- (000000000044913C) ----------------------------------------------------
int goodG2B_282()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_ncpy_63b_goodG2BSink(&v3);
}

//----- (0000000000449174) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_63_good()
{
  return goodG2B_282();
}

//----- (0000000000449184) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_63b_badSink(char **a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]
  char *src; // [rsp+D8h] [rbp-8h]

  src = *a1;
  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, src);
  return printLine(&s);
}

//----- (00000000004491E8) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_cpy_63b_goodG2BSink(char **a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]
  char *src; // [rsp+D8h] [rbp-8h]

  src = *a1;
  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, src);
  return printLine(&s);
}

//----- (000000000044924C) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_14_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  return result;
}
// 67D1B8: using guessed type int globalFive;
// 44924C: using guessed type char buf[16];

//----- (000000000044938E) ----------------------------------------------------
int goodB2G1_54()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v12 < 0 || v12 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v12));
  return result;
}
// 67D1B8: using guessed type int globalFive;
// 44938E: using guessed type char buf[16];

//----- (00000000004494E2) ----------------------------------------------------
int goodB2G2_54()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  in_addr_t v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+54h] [rbp-Ch]
  int fd; // [rsp+58h] [rbp-8h]
  int v12; // [rsp+5Ch] [rbp-4h]

  v12 = -1;
  if ( globalFive == 5 )
  {
    fd = socket(2, 1, 6);
    if ( fd != -1 )
    {
      memset(&s, 0, 0x10uLL);
      s = 2;
      v9 = inet_addr("127.0.0.1");
      v8 = htons(0x6987u);
      if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
      {
        v10 = recv(fd, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v12 = atoi(buf);
          }
        }
      }
    }
    if ( fd != -1 )
      close(fd);
  }
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v12 < 0 || v12 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v12));
  }
  return result;
}
// 67D1B8: using guessed type int globalFive;
// 4494E2: using guessed type char buf[16];

//----- (000000000044962A) ----------------------------------------------------
int goodG2B1_170()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalFive == 5 )
    v6 = 7;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1B8: using guessed type int globalFive;

//----- (00000000004496AE) ----------------------------------------------------
int goodG2B2_170()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalFive == 5 )
    v6 = 7;
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1B8: using guessed type int globalFive;

//----- (0000000000449726) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_14_good()
{
  goodB2G1_54();
  goodB2G2_54();
  goodG2B1_170();
  return goodG2B2_170();
}

//----- (0000000000449754) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_32_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-80h]
  __int64 v2; // [rsp+8h] [rbp-78h]
  __int64 v3; // [rsp+10h] [rbp-70h]
  __int64 v4; // [rsp+18h] [rbp-68h]
  __int64 v5; // [rsp+20h] [rbp-60h]
  char buf[16]; // [rsp+30h] [rbp-50h]
  __int16 s; // [rsp+40h] [rbp-40h]
  uint16_t v8; // [rsp+42h] [rbp-3Eh]
  in_addr_t v9; // [rsp+44h] [rbp-3Ch]
  int v10; // [rsp+58h] [rbp-28h]
  int v11; // [rsp+5Ch] [rbp-24h]
  int v12; // [rsp+60h] [rbp-20h]
  int fd; // [rsp+64h] [rbp-1Ch]
  int *v14; // [rsp+68h] [rbp-18h]
  int *v15; // [rsp+70h] [rbp-10h]
  int v16; // [rsp+7Ch] [rbp-4h]

  v15 = &v10;
  v14 = &v10;
  v10 = -1;
  v16 = -1;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v12 = recv(fd, buf, 0xDuLL, 0);
      if ( v12 != -1 )
      {
        if ( v12 )
        {
          buf[v12] = 0;
          v16 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v15 = v16;
  v11 = *v14;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v11 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v11));
  return result;
}
// 449754: using guessed type char buf[16];

//----- (00000000004498A7) ----------------------------------------------------
int goodG2B_283()
{
  __int64 v1; // [rsp+0h] [rbp-50h]
  __int64 v2; // [rsp+8h] [rbp-48h]
  __int64 v3; // [rsp+10h] [rbp-40h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  int v5; // [rsp+34h] [rbp-1Ch]
  int v6; // [rsp+3Ch] [rbp-14h]
  int *v7; // [rsp+40h] [rbp-10h]
  int *v8; // [rsp+48h] [rbp-8h]

  v8 = &v5;
  v7 = &v5;
  v6 = 7;
  v5 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (0000000000449934) ----------------------------------------------------
int goodB2G_82()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-80h]
  __int64 v2; // [rsp+8h] [rbp-78h]
  __int64 v3; // [rsp+10h] [rbp-70h]
  __int64 v4; // [rsp+18h] [rbp-68h]
  __int64 v5; // [rsp+20h] [rbp-60h]
  char buf[16]; // [rsp+30h] [rbp-50h]
  __int16 s; // [rsp+40h] [rbp-40h]
  uint16_t v8; // [rsp+42h] [rbp-3Eh]
  in_addr_t v9; // [rsp+44h] [rbp-3Ch]
  int v10; // [rsp+58h] [rbp-28h]
  int v11; // [rsp+5Ch] [rbp-24h]
  int v12; // [rsp+60h] [rbp-20h]
  int fd; // [rsp+64h] [rbp-1Ch]
  int *v14; // [rsp+68h] [rbp-18h]
  int *v15; // [rsp+70h] [rbp-10h]
  int v16; // [rsp+7Ch] [rbp-4h]

  v15 = &v10;
  v14 = &v10;
  v10 = -1;
  v16 = -1;
  fd = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v12 = recv(fd, buf, 0xDuLL, 0);
      if ( v12 != -1 )
      {
        if ( v12 )
        {
          buf[v12] = 0;
          v16 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  *v15 = v16;
  v11 = *v14;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v11 < 0 || v11 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v11));
  return result;
}
// 449934: using guessed type char buf[16];

//----- (0000000000449A8D) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_32_good()
{
  goodG2B_283();
  return goodB2G_82();
}

//----- (0000000000449AA7) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_53b_badSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_loop_53c_badSink(a1);
}

//----- (0000000000449AC1) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_53b_goodG2BSink(__int64 a1)
{
  return CWE127_Buffer_Underread__char_alloca_loop_53c_goodG2BSink(a1);
}

//----- (0000000000449ADB) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_52_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_loop_52b_badSink((__int64)(&savedregs - 15));
}

//----- (0000000000449B17) ----------------------------------------------------
int goodG2B_284()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_loop_52b_goodG2BSink((__int64)&s);
}

//----- (0000000000449B4F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_52_good()
{
  return goodG2B_284();
}

//----- (0000000000449B5F) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_51b_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 449B5F: using guessed type char s[99];

//----- (0000000000449BC8) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_declare_loop_51b_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 449BC8: using guessed type char s[99];

//----- (0000000000449C31) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_53b_badSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fgets_53c_badSink(a1);
}

//----- (0000000000449C48) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_53b_goodG2BSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fgets_53c_goodG2BSink(a1);
}

//----- (0000000000449C5F) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_53b_goodB2GSink(int a1)
{
  return CWE127_Buffer_Underread__CWE839_fgets_53c_goodB2GSink(a1);
}

//----- (0000000000449C76) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_52c_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 449C76: using guessed type char s[99];

//----- (0000000000449CDF) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_52c_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 449CDF: using guessed type char s[99];

//----- (0000000000449D48) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_06_bad()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  __int64 v3; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v5; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  src = &v3;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (0000000000449DD0) ----------------------------------------------------
int goodG2B1_171()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (0000000000449E60) ----------------------------------------------------
int goodG2B2_171()
{
  char dest; // [rsp+0h] [rbp-E0h]
  char v2; // [rsp+63h] [rbp-7Dh]
  char s; // [rsp+70h] [rbp-70h]
  char v4; // [rsp+D3h] [rbp-Dh]
  void *src; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  src = &s;
  memset(&dest, 67, 0x63uLL);
  v2 = 0;
  memmove(&dest, src, 0x64uLL);
  v2 = 0;
  return printLine(&dest);
}

//----- (0000000000449EE4) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_06_good()
{
  goodG2B1_171();
  return goodG2B2_171();
}

//----- (0000000000449EFE) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_11_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v6);
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (0000000000449F94) ----------------------------------------------------
int goodB2G1_55()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v6);
  if ( (unsigned int)globalReturnsFalse() )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A03D) ----------------------------------------------------
int goodB2G2_55()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    __isoc99_fscanf(stdin, "%d", &v6);
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 < 0 || v6 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044A0DA) ----------------------------------------------------
int goodG2B1_172()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)globalReturnsFalse() )
    printLine("Benign, fixed string");
  else
    v6 = 7;
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (000000000044A164) ----------------------------------------------------
int goodG2B2_172()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( (unsigned int)globalReturnsTrue() )
    v6 = 7;
  result = globalReturnsTrue();
  if ( result )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}

//----- (000000000044A1E2) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_11_good()
{
  goodB2G1_55();
  goodB2G2_55();
  goodG2B1_172();
  return goodG2B2_172();
}

//----- (000000000044A210) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_16_bad()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  __int64 *v6; // [rsp+E0h] [rbp-10h]
  unsigned __int64 i; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v6 = &v3;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *((_BYTE *)v6 + i);
  v2 = 0;
  return printLine(v1);
}
// 44A210: using guessed type char var_F0[99];

//----- (000000000044A2AE) ----------------------------------------------------
int goodG2B_285()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  char *v5; // [rsp+E0h] [rbp-10h]
  unsigned __int64 i; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v5 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v5[i];
  v2 = 0;
  return printLine(v1);
}
// 44A2AE: using guessed type char var_F0[99];

//----- (000000000044A348) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_16_good()
{
  return goodG2B_285();
}

//----- (000000000044A358) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_52c_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000044A3AF) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_52c_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000044A406) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_52c_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000044A463) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_22_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE127_Buffer_Underread__CWE839_connect_socket_22_badGlobal = 1;
  return CWE127_Buffer_Underread__CWE839_connect_socket_22_badSink(v7);
}
// 67D328: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_22_badGlobal;
// 44A463: using guessed type char buf[16];

//----- (000000000044A555) ----------------------------------------------------
int goodB2G1_56()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE127_Buffer_Underread__CWE839_connect_socket_22_goodB2G1Global = 0;
  return CWE127_Buffer_Underread__CWE839_connect_socket_22_goodB2G1Sink(v7);
}
// 67D32C: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_22_goodB2G1Global;
// 44A555: using guessed type char buf[16];

//----- (000000000044A647) ----------------------------------------------------
int goodB2G2_56()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  CWE127_Buffer_Underread__CWE839_connect_socket_22_goodB2G2Global = 1;
  return CWE127_Buffer_Underread__CWE839_connect_socket_22_goodB2G2Sink(v7);
}
// 67D330: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_22_goodB2G2Global;
// 44A647: using guessed type char buf[16];

//----- (000000000044A739) ----------------------------------------------------
int goodG2B_286()
{
  CWE127_Buffer_Underread__CWE839_connect_socket_22_goodG2BGlobal = 1;
  return CWE127_Buffer_Underread__CWE839_connect_socket_22_goodG2BSink(7);
}
// 67D334: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_22_goodG2BGlobal;

//----- (000000000044A765) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_22_good()
{
  goodB2G1_56();
  goodB2G2_56();
  return goodG2B_286();
}

//----- (000000000044A789) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_67b_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000044A7E6) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_67b_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000044A843) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_67b_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]
  int v7; // [rsp+3Ch] [rbp-4h]

  v7 = a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || v7 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000044A8A6) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_14_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFive == 5 )
    v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v16;
  v3 = *((_QWORD *)v16 + 1);
  v4 = *((_QWORD *)v16 + 2);
  v5 = *((_QWORD *)v16 + 3);
  v6 = *((_QWORD *)v16 + 4);
  v7 = *((_QWORD *)v16 + 5);
  v8 = *((_QWORD *)v16 + 6);
  v9 = *((_QWORD *)v16 + 7);
  v10 = *((_QWORD *)v16 + 8);
  v11 = *((_QWORD *)v16 + 9);
  v12 = *((_QWORD *)v16 + 10);
  v13 = *((_QWORD *)v16 + 11);
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000044A9AF) ----------------------------------------------------
int goodG2B1_173()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFive == 5 )
    v16 = s;
  else
    printLine("Benign, fixed string");
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000044AAC0) ----------------------------------------------------
int goodG2B2_173()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( globalFive == 5 )
    v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000044ABC5) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_14_good()
{
  goodG2B1_173();
  return goodG2B2_173();
}

//----- (000000000044ABDF) ----------------------------------------------------
int badSink_30()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *src; // [rsp+68h] [rbp-8h]

  src = (void *)CWE127_Buffer_Underread__char_declare_memmove_45_badData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(&s, src, 0x64uLL);
  v2 = 0;
  return printLine(&s);
}
// 67D338: using guessed type __int64 CWE127_Buffer_Underread__char_declare_memmove_45_badData;

//----- (000000000044AC36) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_45_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  CWE127_Buffer_Underread__char_declare_memmove_45_badData = (__int64)(&savedregs - 15);
  return badSink_30();
}
// 67D338: using guessed type __int64 CWE127_Buffer_Underread__char_declare_memmove_45_badData;

//----- (000000000044AC7B) ----------------------------------------------------
int goodG2BSink_30()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  void *src; // [rsp+68h] [rbp-8h]

  src = (void *)CWE127_Buffer_Underread__char_declare_memmove_45_goodG2BData;
  memset(&s, 67, 0x63uLL);
  v2 = 0;
  memmove(&s, src, 0x64uLL);
  v2 = 0;
  return printLine(&s);
}
// 67D340: using guessed type __int64 CWE127_Buffer_Underread__char_declare_memmove_45_goodG2BData;

//----- (000000000044ACD2) ----------------------------------------------------
int goodG2B_287()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  CWE127_Buffer_Underread__char_declare_memmove_45_goodG2BData = (__int64)&s;
  return goodG2BSink_30();
}
// 67D340: using guessed type __int64 CWE127_Buffer_Underread__char_declare_memmove_45_goodG2BData;

//----- (000000000044AD13) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memmove_45_good()
{
  return goodG2B_287();
}

//----- (000000000044AD23) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_68_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE127_Buffer_Underread__CWE839_fgets_68_badData = v4;
  return CWE127_Buffer_Underread__CWE839_fgets_68b_badSink();
}
// 67D440: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_68_badData;

//----- (000000000044AD94) ----------------------------------------------------
int goodG2B_288()
{
  CWE127_Buffer_Underread__CWE839_fgets_68_goodG2BData = 7;
  return CWE127_Buffer_Underread__CWE839_fgets_68b_goodG2BSink();
}
// 67D448: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_68_goodG2BData;

//----- (000000000044ADBF) ----------------------------------------------------
int goodB2G_83()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  CWE127_Buffer_Underread__CWE839_fgets_68_goodB2GData = v4;
  return CWE127_Buffer_Underread__CWE839_fgets_68b_goodB2GSink();
}
// 67D444: using guessed type int CWE127_Buffer_Underread__CWE839_fgets_68_goodB2GData;

//----- (000000000044AE30) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_68_good()
{
  goodG2B_288();
  return goodB2G_83();
}

//----- (000000000044AE4A) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_52_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memcpy_52b_badSink((__int64)s - 8);
}

//----- (000000000044AEC1) ----------------------------------------------------
int goodG2B_289()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memcpy_52b_goodG2BSink((__int64)s);
}

//----- (000000000044AF34) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_52_good()
{
  return goodG2B_289();
}

//----- (000000000044AF44) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_05_bad()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticTrue_12 )
    src = (char *)s - 8;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}
// 67D1B0: using guessed type int staticTrue_12;

//----- (000000000044B00C) ----------------------------------------------------
int goodG2B1_174()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticFalse_12 )
    printLine("Benign, fixed string");
  else
    src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}
// 67D348: using guessed type int staticFalse_12;

//----- (000000000044B0DC) ----------------------------------------------------
int goodG2B2_174()
{
  void *v0; // rsp
  char dest; // [rsp+0h] [rbp-90h]
  char v3; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  void *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( staticTrue_12 )
    src = s;
  memset(&dest, 67, 0x63uLL);
  v4 = 0;
  memmove(&dest, src, 0x64uLL);
  v4 = 0;
  return printLine(&dest);
}
// 67D1B0: using guessed type int staticTrue_12;

//----- (000000000044B1A0) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_05_good()
{
  goodG2B1_174();
  return goodG2B2_174();
}

//----- (000000000044B1BA) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_51b_badSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000044B25B) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memcpy_51b_goodG2BSink(__int64 a1)
{
  __int64 s; // [rsp+10h] [rbp-70h]
  __int64 v3; // [rsp+18h] [rbp-68h]
  __int64 v4; // [rsp+20h] [rbp-60h]
  __int64 v5; // [rsp+28h] [rbp-58h]
  __int64 v6; // [rsp+30h] [rbp-50h]
  __int64 v7; // [rsp+38h] [rbp-48h]
  __int64 v8; // [rsp+40h] [rbp-40h]
  __int64 v9; // [rsp+48h] [rbp-38h]
  __int64 v10; // [rsp+50h] [rbp-30h]
  __int64 v11; // [rsp+58h] [rbp-28h]
  __int64 v12; // [rsp+60h] [rbp-20h]
  __int64 v13; // [rsp+68h] [rbp-18h]
  int v14; // [rsp+70h] [rbp-10h]

  memset(&s, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  s = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_DWORD *)(a1 + 96);
  HIBYTE(v14) = 0;
  return printLine((const char *)&s);
}

//----- (000000000044B2FC) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_41_badSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000044B34C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_41_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memmove_41_badSink((char *)s - 8);
}

//----- (000000000044B3C3) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_41_goodG2BSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000044B413) ----------------------------------------------------
int goodG2B_290()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memmove_41_goodG2BSink(s);
}

//----- (000000000044B486) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memmove_41_good()
{
  return goodG2B_290();
}

//----- (000000000044B496) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_13_bad()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  __int64 v3; // [rsp+C8h] [rbp-78h]
  char s; // [rsp+D0h] [rbp-70h]
  char v5; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    src = (char *)&v3;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044B516) ----------------------------------------------------
int goodG2B1_175()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    src = &s;
  else
    printLine("Benign, fixed string");
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044B59E) ----------------------------------------------------
int goodG2B2_175()
{
  char dest; // [rsp+0h] [rbp-140h]
  char v2; // [rsp+C7h] [rbp-79h]
  char s; // [rsp+D0h] [rbp-70h]
  char v4; // [rsp+133h] [rbp-Dh]
  char *src; // [rsp+138h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  if ( GLOBAL_CONST_FIVE == 5 )
    src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}
// 462E08: using guessed type int GLOBAL_CONST_FIVE;

//----- (000000000044B61A) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_13_good()
{
  goodG2B1_175();
  return goodG2B2_175();
}

//----- (000000000044B634) ----------------------------------------------------
__int64 staticReturnsTrue_12()
{
  return 1LL;
}

//----- (000000000044B63F) ----------------------------------------------------
__int64 staticReturnsFalse_12()
{
  return 0LL;
}

//----- (000000000044B64A) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_08_bad()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  __int64 v14; // [rsp+68h] [rbp-78h]
  char s; // [rsp+70h] [rbp-70h]
  char v16; // [rsp+D3h] [rbp-Dh]
  __int64 *v17; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v16 = 0;
  if ( (unsigned int)staticReturnsTrue_12() )
    v17 = &v14;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *v17;
  v2 = v17[1];
  v3 = v17[2];
  v4 = v17[3];
  v5 = v17[4];
  v6 = v17[5];
  v7 = v17[6];
  v8 = v17[7];
  v9 = v17[8];
  v10 = v17[9];
  v11 = v17[10];
  v12 = v17[11];
  v13 = *((_DWORD *)v17 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (000000000044B748) ----------------------------------------------------
int goodG2B1_176()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  if ( (unsigned int)staticReturnsFalse_12() )
    printLine("Benign, fixed string");
  else
    v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (000000000044B84E) ----------------------------------------------------
int goodG2B2_176()
{
  __int64 v1; // [rsp+0h] [rbp-E0h]
  __int64 v2; // [rsp+8h] [rbp-D8h]
  __int64 v3; // [rsp+10h] [rbp-D0h]
  __int64 v4; // [rsp+18h] [rbp-C8h]
  __int64 v5; // [rsp+20h] [rbp-C0h]
  __int64 v6; // [rsp+28h] [rbp-B8h]
  __int64 v7; // [rsp+30h] [rbp-B0h]
  __int64 v8; // [rsp+38h] [rbp-A8h]
  __int64 v9; // [rsp+40h] [rbp-A0h]
  __int64 v10; // [rsp+48h] [rbp-98h]
  __int64 v11; // [rsp+50h] [rbp-90h]
  __int64 v12; // [rsp+58h] [rbp-88h]
  int v13; // [rsp+60h] [rbp-80h]
  char s; // [rsp+70h] [rbp-70h]
  char v15; // [rsp+D3h] [rbp-Dh]
  char *v16; // [rsp+D8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v15 = 0;
  if ( (unsigned int)staticReturnsTrue_12() )
    v16 = &s;
  memset(&v1, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  v1 = *(_QWORD *)v16;
  v2 = *((_QWORD *)v16 + 1);
  v3 = *((_QWORD *)v16 + 2);
  v4 = *((_QWORD *)v16 + 3);
  v5 = *((_QWORD *)v16 + 4);
  v6 = *((_QWORD *)v16 + 5);
  v7 = *((_QWORD *)v16 + 6);
  v8 = *((_QWORD *)v16 + 7);
  v9 = *((_QWORD *)v16 + 8);
  v10 = *((_QWORD *)v16 + 9);
  v11 = *((_QWORD *)v16 + 10);
  v12 = *((_QWORD *)v16 + 11);
  v13 = *((_DWORD *)v16 + 24);
  HIBYTE(v13) = 0;
  return printLine((const char *)&v1);
}

//----- (000000000044B948) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_08_good()
{
  goodG2B1_176();
  return goodG2B2_176();
}

//----- (000000000044B962) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_53d_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000044B9B9) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_53d_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000044BA10) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_53d_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000044BA6D) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_31_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-70h]
  __int64 v2; // [rsp+8h] [rbp-68h]
  __int64 v3; // [rsp+10h] [rbp-60h]
  __int64 v4; // [rsp+18h] [rbp-58h]
  __int64 v5; // [rsp+20h] [rbp-50h]
  char buf[16]; // [rsp+30h] [rbp-40h]
  __int16 s; // [rsp+40h] [rbp-30h]
  uint16_t v8; // [rsp+42h] [rbp-2Eh]
  in_addr_t v9; // [rsp+44h] [rbp-2Ch]
  int v10; // [rsp+5Ch] [rbp-14h]
  int v11; // [rsp+60h] [rbp-10h]
  int v12; // [rsp+64h] [rbp-Ch]
  int fd; // [rsp+68h] [rbp-8h]
  int v14; // [rsp+6Ch] [rbp-4h]

  v14 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v12 = recv(fd, buf, 0xDuLL, 0);
      if ( v12 != -1 )
      {
        if ( v12 )
        {
          buf[v12] = 0;
          v14 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v11 = v14;
  v10 = v14;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v14 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v10));
  return result;
}
// 44BA6D: using guessed type char buf[16];

//----- (000000000044BBA1) ----------------------------------------------------
int goodG2B_291()
{
  __int64 v1; // [rsp+0h] [rbp-40h]
  __int64 v2; // [rsp+8h] [rbp-38h]
  __int64 v3; // [rsp+10h] [rbp-30h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  int v5; // [rsp+38h] [rbp-8h]
  int v6; // [rsp+3Ch] [rbp-4h]

  v6 = 7;
  v5 = 7;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000044BC0F) ----------------------------------------------------
int goodB2G_84()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-70h]
  __int64 v2; // [rsp+8h] [rbp-68h]
  __int64 v3; // [rsp+10h] [rbp-60h]
  __int64 v4; // [rsp+18h] [rbp-58h]
  __int64 v5; // [rsp+20h] [rbp-50h]
  char buf[16]; // [rsp+30h] [rbp-40h]
  __int16 s; // [rsp+40h] [rbp-30h]
  uint16_t v8; // [rsp+42h] [rbp-2Eh]
  in_addr_t v9; // [rsp+44h] [rbp-2Ch]
  int v10; // [rsp+5Ch] [rbp-14h]
  int v11; // [rsp+60h] [rbp-10h]
  int v12; // [rsp+64h] [rbp-Ch]
  int fd; // [rsp+68h] [rbp-8h]
  int v14; // [rsp+6Ch] [rbp-4h]

  v14 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = inet_addr("127.0.0.1");
    v8 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v12 = recv(fd, buf, 0xDuLL, 0);
      if ( v12 != -1 )
      {
        if ( v12 )
        {
          buf[v12] = 0;
          v14 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  v11 = v14;
  v10 = v14;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v14 < 0 || v10 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v10));
  return result;
}
// 44BC0F: using guessed type char buf[16];

//----- (000000000044BD49) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_31_good()
{
  goodG2B_291();
  return goodB2G_84();
}

//----- (000000000044BD63) ----------------------------------------------------
int badSink_31()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_listen_socket_45_badData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_listen_socket_45_badData > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D34C: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_45_badData;

//----- (000000000044BDC0) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_45_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE127_Buffer_Underread__CWE839_listen_socket_45_badData = v8;
  return badSink_31();
}
// 67D34C: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_45_badData;
// 44BDC0: using guessed type char buf[16];

//----- (000000000044BEF7) ----------------------------------------------------
int goodG2BSink_31()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_listen_socket_45_goodG2BData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_listen_socket_45_goodG2BData > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D350: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_45_goodG2BData;

//----- (000000000044BF54) ----------------------------------------------------
int goodG2B_292()
{
  CWE127_Buffer_Underread__CWE839_listen_socket_45_goodG2BData = 7;
  return goodG2BSink_31();
}
// 67D350: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_45_goodG2BData;

//----- (000000000044BF7F) ----------------------------------------------------
int goodB2GSink_10()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = CWE127_Buffer_Underread__CWE839_listen_socket_45_goodB2GData;
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( CWE127_Buffer_Underread__CWE839_listen_socket_45_goodB2GData < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 67D354: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_45_goodB2GData;

//----- (000000000044BFE2) ----------------------------------------------------
int goodB2G_85()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  CWE127_Buffer_Underread__CWE839_listen_socket_45_goodB2GData = v8;
  return goodB2GSink_10();
}
// 67D354: using guessed type int CWE127_Buffer_Underread__CWE839_listen_socket_45_goodB2GData;
// 44BFE2: using guessed type char buf[16];

//----- (000000000044C119) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_45_good()
{
  goodG2B_292();
  return goodB2G_85();
}

//----- (000000000044C133) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_53_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE127_Buffer_Underread__CWE839_fgets_53b_badSink(v4);
}

//----- (000000000044C19B) ----------------------------------------------------
int goodG2B_293()
{
  return CWE127_Buffer_Underread__CWE839_fgets_53b_goodG2BSink(7);
}

//----- (000000000044C1BD) ----------------------------------------------------
int goodB2G_86()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE127_Buffer_Underread__CWE839_fgets_53b_goodB2GSink(v4);
}

//----- (000000000044C225) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_53_good()
{
  goodG2B_293();
  return goodB2G_86();
}

//----- (000000000044C23F) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_17_bad()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-F0h]
  char v3; // [rsp+63h] [rbp-8Dh]
  __int64 v4; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v6; // [rsp+D3h] [rbp-1Dh]
  char *src; // [rsp+E0h] [rbp-10h]
  int i; // [rsp+ECh] [rbp-4h]

  memset(&s, 65, 0x63uLL);
  v6 = 0;
  for ( i = 0; i <= 0; ++i )
    src = (char *)&v4;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (000000000044C2E3) ----------------------------------------------------
int goodG2B_294()
{
  size_t v0; // rax
  char dest; // [rsp+0h] [rbp-F0h]
  char v3; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  char *src; // [rsp+E0h] [rbp-10h]
  int i; // [rsp+ECh] [rbp-4h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  for ( i = 0; i <= 0; ++i )
    src = &s;
  memset(&dest, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&dest);
  strncpy(&dest, src, v0);
  v3 = 0;
  return printLine(&dest);
}

//----- (000000000044C383) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_ncpy_17_good()
{
  return goodG2B_294();
}

//----- (000000000044C393) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_06_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 44C393: using guessed type char buf[16];

//----- (000000000044C519) ----------------------------------------------------
int goodB2G1_57()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 44C519: using guessed type char buf[16];

//----- (000000000044C6B1) ----------------------------------------------------
int goodB2G2_57()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-60h]
  __int64 v2; // [rsp+8h] [rbp-58h]
  __int64 v3; // [rsp+10h] [rbp-50h]
  __int64 v4; // [rsp+18h] [rbp-48h]
  __int64 v5; // [rsp+20h] [rbp-40h]
  char buf[16]; // [rsp+30h] [rbp-30h]
  __int16 s; // [rsp+40h] [rbp-20h]
  uint16_t v8; // [rsp+42h] [rbp-1Eh]
  int v9; // [rsp+44h] [rbp-1Ch]
  int v10; // [rsp+50h] [rbp-10h]
  int fd; // [rsp+54h] [rbp-Ch]
  int v12; // [rsp+58h] [rbp-8h]
  int v13; // [rsp+5Ch] [rbp-4h]

  v13 = -1;
  v12 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v9 = 0;
    v8 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v12 = accept(fd, 0LL, 0LL);
      if ( v12 != -1 )
      {
        v10 = recv(v12, buf, 0xDuLL, 0);
        if ( v10 != -1 )
        {
          if ( v10 )
          {
            buf[v10] = 0;
            v13 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v12 != -1 )
    close(v12);
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v13 < 0 || v13 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v13));
  return result;
}
// 44C6B1: using guessed type char buf[16];

//----- (000000000044C83D) ----------------------------------------------------
int goodG2B1_177()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000044C8BF) ----------------------------------------------------
int goodG2B2_177()
{
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+20h] [rbp-10h]

  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  return printIntLine(0);
}

//----- (000000000044C935) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_06_good()
{
  goodB2G1_57();
  goodB2G2_57();
  goodG2B1_177();
  return goodG2B2_177();
}

//----- (000000000044C963) ----------------------------------------------------
int __fastcall badSink_32(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (000000000044C9BD) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_ncpy_44_bad()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(const char *); // [rsp+78h] [rbp-8h]
  __int64 savedregs; // [rsp+80h] [rbp+0h]

  v4 = badSink_32;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 17;
  return ((__int64 (__fastcall *)(__int64 *))v4)(&savedregs - 17);
}

//----- (000000000044CA02) ----------------------------------------------------
int __fastcall goodG2BSink_32(const char *a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, a1, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (000000000044CA5C) ----------------------------------------------------
__int64 goodG2B_295()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  char *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(const char *); // [rsp+78h] [rbp-8h]

  v4 = goodG2BSink_32;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return ((__int64 (__fastcall *)(char *))v4)(&s);
}

//----- (000000000044CA9D) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_ncpy_44_good()
{
  return goodG2B_295();
}

//----- (000000000044CAAD) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_66b_badSink(__int64 a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  void *src; // [rsp+78h] [rbp-8h]

  src = *(void **)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, src, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000044CB09) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_66b_goodG2BSink(__int64 a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  void *src; // [rsp+78h] [rbp-8h]

  src = *(void **)(a1 + 16);
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, src, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000044CB65) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_64_bad()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  __int64 *v3; // [rsp+68h] [rbp-8h]
  __int64 savedregs; // [rsp+70h] [rbp+0h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 15;
  return CWE127_Buffer_Underread__char_declare_memcpy_64b_badSink((__int64 *)&v3);
}

//----- (000000000044CBA1) ----------------------------------------------------
int goodG2B_296()
{
  char s; // [rsp+0h] [rbp-70h]
  char v2; // [rsp+63h] [rbp-Dh]
  char *v3; // [rsp+68h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return CWE127_Buffer_Underread__char_declare_memcpy_64b_goodG2BSink((__int64 *)&v3);
}

//----- (000000000044CBD9) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_memcpy_64_good()
{
  return goodG2B_296();
}

//----- (000000000044CBE9) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_51_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memcpy_51b_badSink((__int64)s - 8);
}

//----- (000000000044CC60) ----------------------------------------------------
int goodG2B_297()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_memcpy_51b_goodG2BSink((__int64)s);
}

//----- (000000000044CCD3) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_51_good()
{
  return goodG2B_297();
}

//----- (000000000044CCE3) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_63b_badSink(char **a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]
  char *src; // [rsp+78h] [rbp-8h]

  src = *a1;
  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, src, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (000000000044CD48) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_ncpy_63b_goodG2BSink(char **a1)
{
  size_t v1; // rax
  char s; // [rsp+10h] [rbp-70h]
  char v4; // [rsp+73h] [rbp-Dh]
  char *src; // [rsp+78h] [rbp-8h]

  src = *a1;
  memset(&s, 67, 0x63uLL);
  v4 = 0;
  v1 = strlen(&s);
  strncpy(&s, src, v1);
  v4 = 0;
  return printLine(&s);
}

//----- (000000000044CDAD) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_22_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = CWE127_Buffer_Underread__CWE839_connect_socket_22_badGlobal;
  if ( CWE127_Buffer_Underread__CWE839_connect_socket_22_badGlobal )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D328: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_22_badGlobal;

//----- (000000000044CE0E) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_22_goodB2G1Sink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  if ( CWE127_Buffer_Underread__CWE839_connect_socket_22_goodB2G1Global )
    return printLine("Benign, fixed string");
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}
// 67D32C: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_22_goodB2G1Global;

//----- (000000000044CE81) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_22_goodB2G2Sink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = CWE127_Buffer_Underread__CWE839_connect_socket_22_goodB2G2Global;
  if ( CWE127_Buffer_Underread__CWE839_connect_socket_22_goodB2G2Global )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 < 0 || a1 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D330: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_22_goodB2G2Global;

//----- (000000000044CEE8) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_connect_socket_22_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  result = CWE127_Buffer_Underread__CWE839_connect_socket_22_goodG2BGlobal;
  if ( CWE127_Buffer_Underread__CWE839_connect_socket_22_goodG2BGlobal )
  {
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    v6 = 0LL;
    if ( a1 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v2 + a1));
  }
  return result;
}
// 67D334: using guessed type int CWE127_Buffer_Underread__CWE839_connect_socket_22_goodG2BGlobal;

//----- (000000000044CF49) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_06_bad()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  __int64 v3; // [rsp+68h] [rbp-88h]
  char s; // [rsp+70h] [rbp-80h]
  char v5; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  __int64 *v7; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  v7 = &v3;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = *((_BYTE *)v7 + i);
  v2 = 0;
  return printLine(v1);
}
// 44CF49: using guessed type char var_F0[99];

//----- (000000000044CFF0) ----------------------------------------------------
int goodG2B1_178()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 44CFF0: using guessed type char var_F0[99];

//----- (000000000044D09F) ----------------------------------------------------
int goodG2B2_178()
{
  char v1[99]; // [rsp+0h] [rbp-F0h]
  char v2; // [rsp+63h] [rbp-8Dh]
  char s; // [rsp+70h] [rbp-80h]
  char v4; // [rsp+D3h] [rbp-1Dh]
  unsigned __int64 i; // [rsp+E0h] [rbp-10h]
  char *v6; // [rsp+E8h] [rbp-8h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  v6 = &s;
  memset(v1, 67, 0x63uLL);
  v2 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v1[i] = v6[i];
  v2 = 0;
  return printLine(v1);
}
// 44D09F: using guessed type char var_F0[99];

//----- (000000000044D142) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_loop_06_good()
{
  goodG2B1_178();
  return goodG2B2_178();
}

//----- (000000000044D15C) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_68b_badSink()
{
  size_t v0; // rax
  char s; // [rsp+0h] [rbp-70h]
  char v3; // [rsp+63h] [rbp-Dh]
  char *src; // [rsp+68h] [rbp-8h]

  src = (char *)CWE127_Buffer_Underread__char_alloca_ncpy_68_badData;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&s);
  strncpy(&s, src, v0);
  v3 = 0;
  return printLine(&s);
}
// 67D3D0: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_ncpy_68_badData;

//----- (000000000044D1BD) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_68b_goodG2BSink()
{
  size_t v0; // rax
  char s; // [rsp+0h] [rbp-70h]
  char v3; // [rsp+63h] [rbp-Dh]
  char *src; // [rsp+68h] [rbp-8h]

  src = (char *)CWE127_Buffer_Underread__char_alloca_ncpy_68_goodG2BData;
  memset(&s, 67, 0x63uLL);
  v3 = 0;
  v0 = strlen(&s);
  strncpy(&s, src, v0);
  v3 = 0;
  return printLine(&s);
}
// 67D3D8: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_ncpy_68_goodG2BData;

//----- (000000000044D21E) ----------------------------------------------------
int badSink_33()
{
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v2; // [rsp+8h] [rbp-68h]
  __int64 v3; // [rsp+10h] [rbp-60h]
  __int64 v4; // [rsp+18h] [rbp-58h]
  __int64 v5; // [rsp+20h] [rbp-50h]
  __int64 v6; // [rsp+28h] [rbp-48h]
  __int64 v7; // [rsp+30h] [rbp-40h]
  __int64 v8; // [rsp+38h] [rbp-38h]
  __int64 v9; // [rsp+40h] [rbp-30h]
  __int64 v10; // [rsp+48h] [rbp-28h]
  __int64 v11; // [rsp+50h] [rbp-20h]
  __int64 v12; // [rsp+58h] [rbp-18h]
  int v13; // [rsp+60h] [rbp-10h]
  __int64 v14; // [rsp+68h] [rbp-8h]

  v14 = CWE127_Buffer_Underread__char_alloca_memcpy_45_badData;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  s = *(_QWORD *)v14;
  v2 = *(_QWORD *)(v14 + 8);
  v3 = *(_QWORD *)(v14 + 16);
  v4 = *(_QWORD *)(v14 + 24);
  v5 = *(_QWORD *)(v14 + 32);
  v6 = *(_QWORD *)(v14 + 40);
  v7 = *(_QWORD *)(v14 + 48);
  v8 = *(_QWORD *)(v14 + 56);
  v9 = *(_QWORD *)(v14 + 64);
  v10 = *(_QWORD *)(v14 + 72);
  v11 = *(_QWORD *)(v14 + 80);
  v12 = *(_QWORD *)(v14 + 88);
  v13 = *(_DWORD *)(v14 + 96);
  HIBYTE(v13) = 0;
  return printLine((const char *)&s);
}
// 67D358: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_memcpy_45_badData;

//----- (000000000044D2C6) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_45_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_memcpy_45_badData = (__int64)s - 8;
  return badSink_33();
}
// 67D358: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_memcpy_45_badData;

//----- (000000000044D346) ----------------------------------------------------
int goodG2BSink_33()
{
  __int64 s; // [rsp+0h] [rbp-70h]
  __int64 v2; // [rsp+8h] [rbp-68h]
  __int64 v3; // [rsp+10h] [rbp-60h]
  __int64 v4; // [rsp+18h] [rbp-58h]
  __int64 v5; // [rsp+20h] [rbp-50h]
  __int64 v6; // [rsp+28h] [rbp-48h]
  __int64 v7; // [rsp+30h] [rbp-40h]
  __int64 v8; // [rsp+38h] [rbp-38h]
  __int64 v9; // [rsp+40h] [rbp-30h]
  __int64 v10; // [rsp+48h] [rbp-28h]
  __int64 v11; // [rsp+50h] [rbp-20h]
  __int64 v12; // [rsp+58h] [rbp-18h]
  int v13; // [rsp+60h] [rbp-10h]
  __int64 v14; // [rsp+68h] [rbp-8h]

  v14 = CWE127_Buffer_Underread__char_alloca_memcpy_45_goodG2BData;
  memset(&s, 67, 0x63uLL);
  HIBYTE(v13) = 0;
  s = *(_QWORD *)v14;
  v2 = *(_QWORD *)(v14 + 8);
  v3 = *(_QWORD *)(v14 + 16);
  v4 = *(_QWORD *)(v14 + 24);
  v5 = *(_QWORD *)(v14 + 32);
  v6 = *(_QWORD *)(v14 + 40);
  v7 = *(_QWORD *)(v14 + 48);
  v8 = *(_QWORD *)(v14 + 56);
  v9 = *(_QWORD *)(v14 + 64);
  v10 = *(_QWORD *)(v14 + 72);
  v11 = *(_QWORD *)(v14 + 80);
  v12 = *(_QWORD *)(v14 + 88);
  v13 = *(_DWORD *)(v14 + 96);
  HIBYTE(v13) = 0;
  return printLine((const char *)&s);
}
// 67D360: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_memcpy_45_goodG2BData;

//----- (000000000044D3EE) ----------------------------------------------------
int goodG2B_298()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  CWE127_Buffer_Underread__char_alloca_memcpy_45_goodG2BData = (__int64)s;
  return goodG2BSink_33();
}
// 67D360: using guessed type __int64 CWE127_Buffer_Underread__char_alloca_memcpy_45_goodG2BData;

//----- (000000000044D46A) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_45_good()
{
  return goodG2B_298();
}

//----- (000000000044D47A) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_64b_badSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  __int64 v6; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+44h] [rbp-Ch]
  int *v8; // [rsp+48h] [rbp-8h]

  v8 = a1;
  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000044D4E3) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_64b_goodG2BSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  __int64 v6; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+44h] [rbp-Ch]
  int *v8; // [rsp+48h] [rbp-8h]

  v8 = a1;
  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000044D54C) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_listen_socket_64b_goodB2GSink(int *a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-40h]
  __int64 v3; // [rsp+18h] [rbp-38h]
  __int64 v4; // [rsp+20h] [rbp-30h]
  __int64 v5; // [rsp+28h] [rbp-28h]
  __int64 v6; // [rsp+30h] [rbp-20h]
  int v7; // [rsp+44h] [rbp-Ch]
  int *v8; // [rsp+48h] [rbp-8h]

  v8 = a1;
  v7 = *a1;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( v7 < 0 || v7 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + v7));
  return result;
}

//----- (000000000044D5BB) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_17_bad()
{
  char dest; // [rsp+0h] [rbp-150h]
  char v2; // [rsp+C7h] [rbp-89h]
  __int64 v3; // [rsp+C8h] [rbp-88h]
  char s; // [rsp+D0h] [rbp-80h]
  char v5; // [rsp+133h] [rbp-1Dh]
  char *src; // [rsp+140h] [rbp-10h]
  int i; // [rsp+14Ch] [rbp-4h]

  memset(&s, 65, 0x63uLL);
  v5 = 0;
  for ( i = 0; i <= 0; ++i )
    src = (char *)&v3;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000044D646) ----------------------------------------------------
int goodG2B_299()
{
  char dest; // [rsp+0h] [rbp-150h]
  char v2; // [rsp+C7h] [rbp-89h]
  char s; // [rsp+D0h] [rbp-80h]
  char v4; // [rsp+133h] [rbp-1Dh]
  char *src; // [rsp+140h] [rbp-10h]
  int i; // [rsp+14Ch] [rbp-4h]

  memset(&s, 65, 0x63uLL);
  v4 = 0;
  for ( i = 0; i <= 0; ++i )
    src = &s;
  memset(&dest, 67, 0xC7uLL);
  v2 = 0;
  strcpy(&dest, src);
  return printLine(&dest);
}

//----- (000000000044D6CD) ----------------------------------------------------
int CWE127_Buffer_Underread__char_declare_cpy_17_good()
{
  return goodG2B_299();
}

//----- (000000000044D6DD) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_54e_badSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000044D72D) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_memmove_54e_goodG2BSink(const void *a1)
{
  char s; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]

  memset(&s, 67, 0x63uLL);
  v3 = 0;
  memmove(&s, a1, 0x64uLL);
  v3 = 0;
  return printLine(&s);
}

//----- (000000000044D77D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_06_bad()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  char *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = (char *)s - 8;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *(_QWORD *)v16;
  v3 = *((_QWORD *)v16 + 1);
  v4 = *((_QWORD *)v16 + 2);
  v5 = *((_QWORD *)v16 + 3);
  v6 = *((_QWORD *)v16 + 4);
  v7 = *((_QWORD *)v16 + 5);
  v8 = *((_QWORD *)v16 + 6);
  v9 = *((_QWORD *)v16 + 7);
  v10 = *((_QWORD *)v16 + 8);
  v11 = *((_QWORD *)v16 + 9);
  v12 = *((_QWORD *)v16 + 10);
  v13 = *((_QWORD *)v16 + 11);
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (000000000044D885) ----------------------------------------------------
int goodG2B1_179()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (000000000044D995) ----------------------------------------------------
int goodG2B2_179()
{
  void *v0; // rsp
  __int64 v2; // [rsp+0h] [rbp-80h]
  __int64 v3; // [rsp+8h] [rbp-78h]
  __int64 v4; // [rsp+10h] [rbp-70h]
  __int64 v5; // [rsp+18h] [rbp-68h]
  __int64 v6; // [rsp+20h] [rbp-60h]
  __int64 v7; // [rsp+28h] [rbp-58h]
  __int64 v8; // [rsp+30h] [rbp-50h]
  __int64 v9; // [rsp+38h] [rbp-48h]
  __int64 v10; // [rsp+40h] [rbp-40h]
  __int64 v11; // [rsp+48h] [rbp-38h]
  __int64 v12; // [rsp+50h] [rbp-30h]
  __int64 v13; // [rsp+58h] [rbp-28h]
  int v14; // [rsp+60h] [rbp-20h]
  void *s; // [rsp+70h] [rbp-10h]
  _QWORD *v16; // [rsp+78h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&v3 + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&v3 + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v16 = s;
  memset(&v2, 67, 0x63uLL);
  HIBYTE(v14) = 0;
  v2 = *v16;
  v3 = v16[1];
  v4 = v16[2];
  v5 = v16[3];
  v6 = v16[4];
  v7 = v16[5];
  v8 = v16[6];
  v9 = v16[7];
  v10 = v16[8];
  v11 = v16[9];
  v12 = v16[10];
  v13 = v16[11];
  v14 = *((_DWORD *)v16 + 24);
  HIBYTE(v14) = 0;
  return printLine((const char *)&v2);
}

//----- (000000000044DA99) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_memcpy_06_good()
{
  goodG2B1_179();
  return goodG2B2_179();
}

//----- (000000000044DAB3) ----------------------------------------------------
int __fastcall badSink_34(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (000000000044DB0C) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_cpy_44_bad()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  __int64 *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(const char *); // [rsp+78h] [rbp-8h]
  __int64 savedregs; // [rsp+80h] [rbp+0h]

  v4 = badSink_34;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &savedregs - 17;
  return ((__int64 (__fastcall *)(__int64 *))v4)(&savedregs - 17);
}

//----- (000000000044DB51) ----------------------------------------------------
int __fastcall goodG2BSink_34(const char *a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]

  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, a1);
  return printLine(&s);
}

//----- (000000000044DBAA) ----------------------------------------------------
__int64 goodG2B_300()
{
  char s; // [rsp+0h] [rbp-80h]
  char v2; // [rsp+63h] [rbp-1Dh]
  char *v3; // [rsp+70h] [rbp-10h]
  int (__fastcall *v4)(const char *); // [rsp+78h] [rbp-8h]

  v4 = goodG2BSink_34;
  memset(&s, 65, 0x63uLL);
  v2 = 0;
  v3 = &s;
  return ((__int64 (__fastcall *)(char *))v4)(&s);
}

//----- (000000000044DBEB) ----------------------------------------------------
__int64 CWE127_Buffer_Underread__char_declare_cpy_44_good()
{
  return goodG2B_300();
}

//----- (000000000044DBFB) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_53_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE127_Buffer_Underread__CWE839_connect_socket_53b_badSink(v7);
}
// 44DBFB: using guessed type char buf[16];

//----- (000000000044DCE3) ----------------------------------------------------
int goodG2B_301()
{
  return CWE127_Buffer_Underread__CWE839_connect_socket_53b_goodG2BSink(7);
}

//----- (000000000044DD05) ----------------------------------------------------
int goodB2G_87()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  in_addr_t v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v7; // [rsp+2Ch] [rbp-4h]

  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = inet_addr("127.0.0.1");
    v3 = htons(0x6987u);
    if ( connect(fd, (const struct sockaddr *)&s, 0x10u) != -1 )
    {
      v5 = recv(fd, buf, 0xDuLL, 0);
      if ( v5 != -1 )
      {
        if ( v5 )
        {
          buf[v5] = 0;
          v7 = atoi(buf);
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  return CWE127_Buffer_Underread__CWE839_connect_socket_53b_goodB2GSink(v7);
}
// 44DD05: using guessed type char buf[16];

//----- (000000000044DDED) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_connect_socket_53_good()
{
  goodG2B_301();
  return goodB2G_87();
}

//----- (000000000044DE07) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_63_bad()
{
  void *v0; // rsp
  char *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = (char *)s - 8;
  return CWE127_Buffer_Underread__char_alloca_ncpy_63b_badSink(&v2);
}

//----- (000000000044DE7E) ----------------------------------------------------
int goodG2B_302()
{
  void *v0; // rsp
  void *v2; // [rsp+0h] [rbp-10h]
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v2 = s;
  return CWE127_Buffer_Underread__char_alloca_ncpy_63b_goodG2BSink((char **)&v2);
}

//----- (000000000044DEF1) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_63_good()
{
  return goodG2B_302();
}

//----- (000000000044DF01) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_52_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE127_Buffer_Underread__CWE839_listen_socket_52b_badSink(v8);
}
// 44DF01: using guessed type char buf[16];

//----- (000000000044E02F) ----------------------------------------------------
int goodG2B_303()
{
  return CWE127_Buffer_Underread__CWE839_listen_socket_52b_goodG2BSink(7);
}

//----- (000000000044E051) ----------------------------------------------------
int goodB2G_88()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int fd; // [rsp+24h] [rbp-Ch]
  int v7; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v8 = -1;
  v7 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v7 = accept(fd, 0LL, 0LL);
      if ( v7 != -1 )
      {
        v5 = recv(v7, buf, 0xDuLL, 0);
        if ( v5 != -1 )
        {
          if ( v5 )
          {
            buf[v5] = 0;
            v8 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v7 != -1 )
    close(v7);
  return CWE127_Buffer_Underread__CWE839_listen_socket_52b_goodB2GSink(v8);
}
// 44E051: using guessed type char buf[16];

//----- (000000000044E17F) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_52_good()
{
  goodG2B_303();
  return goodB2G_88();
}

//----- (000000000044E199) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_63b_badSink(char **a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]
  char *src; // [rsp+D8h] [rbp-8h]

  src = *a1;
  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, src);
  return printLine(&s);
}

//----- (000000000044E1FD) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_cpy_63b_goodG2BSink(char **a1)
{
  char s; // [rsp+10h] [rbp-D0h]
  char v3; // [rsp+D7h] [rbp-9h]
  char *src; // [rsp+D8h] [rbp-8h]

  src = *a1;
  memset(&s, 67, 0xC7uLL);
  v3 = 0;
  strcpy(&s, src);
  return printLine(&s);
}

//----- (000000000044E261) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_12_bad()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  if ( (unsigned int)globalReturnsTrueOrFalse() )
    src = (char *)s - 8;
  else
    src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000044E344) ----------------------------------------------------
int goodG2B_304()
{
  void *v0; // rsp
  size_t v1; // rax
  char dest; // [rsp+0h] [rbp-90h]
  char v4; // [rsp+Fh] [rbp-81h]
  char v5; // [rsp+63h] [rbp-2Dh]
  void *s; // [rsp+70h] [rbp-20h]
  char *src; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)&v4 >> 4));
  memset((void *)(16 * ((unsigned __int64)&v4 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  globalReturnsTrueOrFalse();
  src = (char *)s;
  memset(&dest, 67, 0x63uLL);
  v5 = 0;
  v1 = strlen(&dest);
  strncpy(&dest, src, v1);
  v5 = 0;
  return printLine(&dest);
}

//----- (000000000044E423) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_ncpy_12_good()
{
  return goodG2B_304();
}

//----- (000000000044E433) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_52_bad()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_loop_52b_badSink((__int64)s - 8);
}

//----- (000000000044E4AA) ----------------------------------------------------
int goodG2B_305()
{
  void *v0; // rsp
  void *s; // [rsp+8h] [rbp-8h]

  v0 = alloca(128LL);
  s = (void *)(16 * (((unsigned __int64)&s + 7) >> 4));
  memset((void *)(16 * (((unsigned __int64)&s + 7) >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  return CWE127_Buffer_Underread__char_alloca_loop_52b_goodG2BSink((__int64)s);
}

//----- (000000000044E51D) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_52_good()
{
  return goodG2B_305();
}

//----- (000000000044E52D) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_51b_badSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 44E52D: using guessed type char s[99];

//----- (000000000044E596) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__char_alloca_loop_51b_goodG2BSink(__int64 a1)
{
  char s[99]; // [rsp+10h] [rbp-70h]
  char v3; // [rsp+73h] [rbp-Dh]
  unsigned __int64 i; // [rsp+78h] [rbp-8h]

  memset(s, 67, 0x63uLL);
  v3 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    s[i] = *(_BYTE *)(a1 + i);
  v3 = 0;
  return printLine(s);
}
// 44E596: using guessed type char s[99];

//----- (000000000044E5FF) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_52_bad()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE127_Buffer_Underread__CWE839_fgets_52b_badSink(v4);
}

//----- (000000000044E667) ----------------------------------------------------
int goodG2B_306()
{
  return CWE127_Buffer_Underread__CWE839_fgets_52b_goodG2BSink(7);
}

//----- (000000000044E689) ----------------------------------------------------
int goodB2G_89()
{
  char s[8]; // [rsp+0h] [rbp-20h]
  int v2; // [rsp+8h] [rbp-18h]
  __int16 v3; // [rsp+Ch] [rbp-14h]
  int v4; // [rsp+1Ch] [rbp-4h]

  v4 = -1;
  *(_QWORD *)s = 0LL;
  v2 = 0;
  v3 = 0;
  if ( fgets(s, 14, stdin) )
    v4 = atoi(s);
  else
    printLine("fgets() failed.");
  return CWE127_Buffer_Underread__CWE839_fgets_52b_goodB2GSink(v4);
}

//----- (000000000044E6F1) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fgets_52_good()
{
  goodG2B_306();
  return goodB2G_89();
}

//----- (000000000044E70B) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_64_bad()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE127_Buffer_Underread__CWE839_listen_socket_64b_badSink(&v5);
}
// 44E70B: using guessed type char buf[16];

//----- (000000000044E83B) ----------------------------------------------------
int goodG2B_307()
{
  int v1; // [rsp+Ch] [rbp-4h]

  v1 = 7;
  return CWE127_Buffer_Underread__CWE839_listen_socket_64b_goodG2BSink(&v1);
}

//----- (000000000044E85F) ----------------------------------------------------
int goodB2G_90()
{
  char buf[16]; // [rsp+0h] [rbp-30h]
  __int16 s; // [rsp+10h] [rbp-20h]
  uint16_t v3; // [rsp+12h] [rbp-1Eh]
  int v4; // [rsp+14h] [rbp-1Ch]
  int v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+24h] [rbp-Ch]
  int fd; // [rsp+28h] [rbp-8h]
  int v8; // [rsp+2Ch] [rbp-4h]

  v5 = -1;
  v8 = -1;
  fd = socket(2, 1, 6);
  if ( fd != -1 )
  {
    memset(&s, 0, 0x10uLL);
    s = 2;
    v4 = 0;
    v3 = htons(0x6987u);
    if ( bind(fd, (const struct sockaddr *)&s, 0x10u) != -1 && listen(fd, 5) != -1 )
    {
      v8 = accept(fd, 0LL, 0LL);
      if ( v8 != -1 )
      {
        v6 = recv(v8, buf, 0xDuLL, 0);
        if ( v6 != -1 )
        {
          if ( v6 )
          {
            buf[v6] = 0;
            v5 = atoi(buf);
          }
        }
      }
    }
  }
  if ( fd != -1 )
    close(fd);
  if ( v8 != -1 )
    close(v8);
  return CWE127_Buffer_Underread__CWE839_listen_socket_64b_goodB2GSink(&v5);
}
// 44E85F: using guessed type char buf[16];

//----- (000000000044E98F) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_listen_socket_64_good()
{
  goodG2B_307();
  return goodB2G_90();
}

//----- (000000000044E9A9) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_51b_badSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000044EA00) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_51b_goodG2BSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 > 9 )
    result = printLine("ERROR: Array index is too big.");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000044EA57) ----------------------------------------------------
int __fastcall CWE127_Buffer_Underread__CWE839_fgets_51b_goodB2GSink(int a1)
{
  int result; // eax
  __int64 v2; // [rsp+10h] [rbp-30h]
  __int64 v3; // [rsp+18h] [rbp-28h]
  __int64 v4; // [rsp+20h] [rbp-20h]
  __int64 v5; // [rsp+28h] [rbp-18h]
  __int64 v6; // [rsp+30h] [rbp-10h]

  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  v6 = 0LL;
  if ( a1 < 0 || a1 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v2 + a1));
  return result;
}

//----- (000000000044EAB4) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_16_bad()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  char *v5; // [rsp+68h] [rbp-28h]
  void *s; // [rsp+70h] [rbp-20h]
  unsigned __int64 i; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = (char *)s - 8;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v5[i];
  v4 = 0;
  return printLine(v2);
}
// 44EAB4: using guessed type char var_90[99];

//----- (000000000044EB8C) ----------------------------------------------------
int goodG2B_308()
{
  void *v0; // rsp
  char v2[99]; // [rsp+0h] [rbp-90h]
  char v3[99]; // [rsp+Fh] [rbp-81h]
  char v4; // [rsp+63h] [rbp-2Dh]
  _BYTE *v5; // [rsp+68h] [rbp-28h]
  void *s; // [rsp+70h] [rbp-20h]
  unsigned __int64 i; // [rsp+78h] [rbp-18h]

  v0 = alloca(128LL);
  s = (void *)(16 * ((unsigned __int64)v3 >> 4));
  memset((void *)(16 * ((unsigned __int64)v3 >> 4)), 65, 0x63uLL);
  *((_BYTE *)s + 99) = 0;
  v5 = s;
  memset(v2, 67, 0x63uLL);
  v4 = 0;
  for ( i = 0LL; i <= 0x63; ++i )
    v2[i] = v5[i];
  v4 = 0;
  return printLine(v2);
}
// 44EB8C: using guessed type char var_90[99];

//----- (000000000044EC60) ----------------------------------------------------
int CWE127_Buffer_Underread__char_alloca_loop_16_good()
{
  return goodG2B_308();
}

//----- (000000000044EC70) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_14_bad()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v6);
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D1B8: using guessed type int globalFive;

//----- (000000000044ED00) ----------------------------------------------------
int goodB2G1_58()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v6);
  if ( globalFive != 5 )
    return printLine("Benign, fixed string");
  v1 = 0LL;
  v2 = 0LL;
  v3 = 0LL;
  v4 = 0LL;
  v5 = 0LL;
  if ( v6 < 0 || v6 > 9 )
    result = printLine("ERROR: Array index is out-of-bounds");
  else
    result = printIntLine(*((_DWORD *)&v1 + v6));
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D1B8: using guessed type int globalFive;

//----- (000000000044EDA3) ----------------------------------------------------
int goodB2G2_58()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalFive == 5 )
    __isoc99_fscanf(stdin, "%d", &v6);
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 < 0 || v6 > 9 )
      result = printLine("ERROR: Array index is out-of-bounds");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 400D20: using guessed type __int64 __fastcall __isoc99_fscanf(_QWORD, _QWORD, _QWORD);
// 67D1B8: using guessed type int globalFive;

//----- (000000000044EE3A) ----------------------------------------------------
int goodG2B1_180()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalFive == 5 )
    v6 = 7;
  else
    printLine("Benign, fixed string");
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000044EEBE) ----------------------------------------------------
int goodG2B2_180()
{
  int result; // eax
  __int64 v1; // [rsp+0h] [rbp-30h]
  __int64 v2; // [rsp+8h] [rbp-28h]
  __int64 v3; // [rsp+10h] [rbp-20h]
  __int64 v4; // [rsp+18h] [rbp-18h]
  __int64 v5; // [rsp+20h] [rbp-10h]
  int v6; // [rsp+2Ch] [rbp-4h]

  v6 = -1;
  if ( globalFive == 5 )
    v6 = 7;
  result = globalFive;
  if ( globalFive == 5 )
  {
    v1 = 0LL;
    v2 = 0LL;
    v3 = 0LL;
    v4 = 0LL;
    v5 = 0LL;
    if ( v6 > 9 )
      result = printLine("ERROR: Array index is too big.");
    else
      result = printIntLine(*((_DWORD *)&v1 + v6));
  }
  return result;
}
// 67D1B8: using guessed type int globalFive;

//----- (000000000044EF36) ----------------------------------------------------
int CWE127_Buffer_Underread__CWE839_fscanf_14_good()
{
  goodB2G1_58();
  goodB2G2_58();
  goodG2B1_180();
  return goodG2B2_180();
}

//----- (000000000044EF64) ----------------------------------------------------
int __fastcall printLine(const char *a1)
{
  int result; // eax

  if ( a1 )
    result = puts(a1);
  return result;
}

//----- (000000000044EF85) ----------------------------------------------------
int __fastcall printWLine(__int64 a1)
{
  int result; // eax

  if ( a1 )
    result = wprintf("%", a1);
  return result;
}

//----- (000000000044EFB0) ----------------------------------------------------
int __fastcall printIntLine(unsigned int a1)
{
  return printf("%d\n", a1);
}

//----- (000000000044EFD1) ----------------------------------------------------
int __fastcall printShortLine(__int16 a1)
{
  return printf("%hd\n", (unsigned int)a1);
}

//----- (000000000044EFF6) ----------------------------------------------------
int __fastcall printFloatLine(float a1)
{
  return printf("%f\n", a1);
}

//----- (000000000044F01C) ----------------------------------------------------
int __fastcall printLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (000000000044F040) ----------------------------------------------------
int __fastcall printLongLongLine(__int64 a1)
{
  return printf("%ld\n", a1);
}

//----- (000000000044F064) ----------------------------------------------------
int __fastcall printSizeTLine(__int64 a1)
{
  return printf("%zu\n", a1);
}

//----- (000000000044F088) ----------------------------------------------------
int __fastcall printHexCharLine(char a1)
{
  return printf("%02x\n", (unsigned int)a1);
}

//----- (000000000044F0AC) ----------------------------------------------------
int __fastcall printWcharLine(int a1)
{
  int v2; // [rsp+10h] [rbp-10h]
  int v3; // [rsp+14h] [rbp-Ch]

  v2 = a1;
  v3 = 0;
  return printf("%ls\n", &v2);
}

//----- (000000000044F0DC) ----------------------------------------------------
int __fastcall printUnsignedLine(unsigned int a1)
{
  return printf("%u\n", a1);
}

//----- (000000000044F0FD) ----------------------------------------------------
int __fastcall printHexUnsignedCharLine(unsigned __int8 a1)
{
  return printf("%02x\n", a1);
}

//----- (000000000044F121) ----------------------------------------------------
int __fastcall printDoubleLine(double a1)
{
  return printf("%g\n", a1);
}

//----- (000000000044F14C) ----------------------------------------------------
int __fastcall printStructLine(unsigned int *a1)
{
  return printf("%d -- %d\n", *a1, a1[1]);
}

//----- (000000000044F178) ----------------------------------------------------
int __fastcall printBytesLine(__int64 a1, unsigned __int64 a2)
{
  unsigned __int64 i; // [rsp+18h] [rbp-8h]

  for ( i = 0LL; i < a2; ++i )
    printf("%02x", *(unsigned __int8 *)(a1 + i));
  return puts(s);
}

//----- (000000000044F1CF) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL;
        i < a2
     && (*__ctype_b_loc())[*(char *)(2 * i + v4)] & 0x1000
     && (*__ctype_b_loc())[*(char *)(2 * i + 1 + v4)] & 0x1000;
        ++i )
  {
    __isoc99_sscanf(2 * i + v4, "%02x", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400D50: using guessed type __int64 __fastcall __isoc99_sscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044F2A8) ----------------------------------------------------
unsigned __int64 __fastcall decodeHexWChars(__int64 a1, unsigned __int64 a2, __int64 a3)
{
  __int64 v4; // [rsp+8h] [rbp-28h]
  int v5; // [rsp+24h] [rbp-Ch]
  unsigned __int64 i; // [rsp+28h] [rbp-8h]

  v4 = a3;
  for ( i = 0LL; i < a2 && iswxdigit(*(_DWORD *)(8 * i + v4)) && iswxdigit(*(_DWORD *)(8 * i + 4 + v4)); ++i )
  {
    __isoc99_swscanf(8 * i + v4, "%", &v5);
    *(_BYTE *)(i + a1) = v5;
  }
  return i;
}
// 400E80: using guessed type __int64 __fastcall __isoc99_swscanf(_QWORD, _QWORD, _QWORD);

//----- (000000000044F35C) ----------------------------------------------------
__int64 globalReturnsTrue()
{
  return 1LL;
}

//----- (000000000044F367) ----------------------------------------------------
__int64 globalReturnsFalse()
{
  return 0LL;
}

//----- (000000000044F372) ----------------------------------------------------
__int64 globalReturnsTrueOrFalse()
{
  return (unsigned int)(rand() % 2);
}

//----- (000000000044F388) ----------------------------------------------------
void good1()
{
  ;
}

//----- (000000000044F38E) ----------------------------------------------------
void good2()
{
  ;
}

//----- (000000000044F394) ----------------------------------------------------
void good3()
{
  ;
}

//----- (000000000044F39A) ----------------------------------------------------
void good4()
{
  ;
}

//----- (000000000044F3A0) ----------------------------------------------------
void good5()
{
  ;
}

//----- (000000000044F3A6) ----------------------------------------------------
void good6()
{
  ;
}

//----- (000000000044F3AC) ----------------------------------------------------
void good7()
{
  ;
}

//----- (000000000044F3B2) ----------------------------------------------------
void good8()
{
  ;
}

//----- (000000000044F3B8) ----------------------------------------------------
void good9()
{
  ;
}

//----- (000000000044F3BE) ----------------------------------------------------
void bad1()
{
  ;
}

//----- (000000000044F3C4) ----------------------------------------------------
void bad2()
{
  ;
}

//----- (000000000044F3CA) ----------------------------------------------------
void bad3()
{
  ;
}

//----- (000000000044F3D0) ----------------------------------------------------
void bad4()
{
  ;
}

//----- (000000000044F3D6) ----------------------------------------------------
void bad5()
{
  ;
}

//----- (000000000044F3DC) ----------------------------------------------------
void bad6()
{
  ;
}

//----- (000000000044F3E2) ----------------------------------------------------
void bad7()
{
  ;
}

//----- (000000000044F3E8) ----------------------------------------------------
void bad8()
{
  ;
}

//----- (000000000044F3EE) ----------------------------------------------------
void bad9()
{
  ;
}

//----- (000000000044F3F4) ----------------------------------------------------
void __fastcall __noreturn internal_start(void *a1)
{
  (*((void (__fastcall **)(_QWORD))a1 + 1))(*((_QWORD *)a1 + 2));
  pthread_exit(0LL);
}

//----- (000000000044F427) ----------------------------------------------------
__int64 __fastcall stdThreadCreate(__int64 a1, __int64 a2, void **a3)
{
  __int64 result; // rax
  void **v4; // [rsp+8h] [rbp-28h]
  pthread_t newthread; // [rsp+20h] [rbp-10h]
  void *arg; // [rsp+28h] [rbp-8h]

  v4 = a3;
  *a3 = 0LL;
  arg = malloc(0x18uLL);
  if ( !arg )
    return 0LL;
  *((_QWORD *)arg + 1) = a1;
  *((_QWORD *)arg + 2) = a2;
  if ( pthread_create(&newthread, 0LL, (void *(*)(void *))internal_start, arg) )
  {
    free(arg);
    result = 0LL;
  }
  else
  {
    *(_QWORD *)arg = newthread;
    *v4 = arg;
    result = 1LL;
  }
  return result;
}

//----- (000000000044F4CB) ----------------------------------------------------
_BOOL8 __fastcall stdThreadJoin(pthread_t *a1)
{
  void *thread_return; // [rsp+18h] [rbp-8h]

  return pthread_join(*a1, &thread_return) == 0;
}

//----- (000000000044F4FF) ----------------------------------------------------
__int64 __fastcall stdThreadDestroy(void *a1)
{
  free(a1);
  return 1LL;
}

//----- (000000000044F51E) ----------------------------------------------------
__int64 __fastcall stdThreadLockCreate(pthread_mutex_t **a1)
{
  __int64 result; // rax
  pthread_mutex_t *mutex; // [rsp+18h] [rbp-8h]

  *a1 = 0LL;
  mutex = (pthread_mutex_t *)malloc(0x28uLL);
  if ( !mutex )
    return 0LL;
  if ( pthread_mutex_init(mutex, 0LL) )
  {
    free(a1);
    result = 0LL;
  }
  else
  {
    *a1 = mutex;
    result = 1LL;
  }
  return result;
}

//----- (000000000044F593) ----------------------------------------------------
int __fastcall stdThreadLockAcquire(pthread_mutex_t *a1)
{
  return pthread_mutex_lock(a1);
}

//----- (000000000044F5AD) ----------------------------------------------------
int __fastcall stdThreadLockRelease(pthread_mutex_t *a1)
{
  return pthread_mutex_unlock(a1);
}

//----- (000000000044F5C7) ----------------------------------------------------
void __fastcall stdThreadLockDestroy(pthread_mutex_t *a1)
{
  pthread_mutex_destroy(a1);
  free(a1);
}

//----- (000000000044F5F0) ----------------------------------------------------
void _libc_csu_init(void)
{
  __int64 v0; // rbx
  signed __int64 v1; // rbp

  v0 = 0LL;
  v1 = &_do_global_dtors_aux_fini_array_entry - _frame_dummy_init_array_entry;
  init_proc();
  if ( v1 )
  {
    do
      _frame_dummy_init_array_entry[v0++]();
    while ( v0 != v1 );
  }
}
// 67CDD0: using guessed type __int64 (__fastcall *_frame_dummy_init_array_entry[2])();
// 67CDD8: using guessed type __int64 (__fastcall *_do_global_dtors_aux_fini_array_entry)();

//----- (000000000044F664) ----------------------------------------------------
void term_proc()
{
  ;
}

// ALL OK, 2618 function(s) have been successfully decompiled
